[
  {
    "discussion_id": "2283609464",
    "pr_number": 415,
    "pr_file": "packages/agents/src/mcp/index.ts",
    "created_at": "2025-08-18T22:10:11+00:00",
    "commented_code": "} else if (this._transportType === \"streamable-http\") {\n       this._transport = new McpStreamableHttpTransport(\n         (id) => this.getWebSocketForResponseID(id),\n-        (id) => this._requestIdToConnectionId.delete(id)\n+        (id) => this._requestIdToConnectionId.delete(id),\n+        () => this.getWebSocketForStandaloneSse()\n       );\n       await server.connect(this._transport);\n     }\n   }\n \n-  /**\n-   * McpAgent API\n-   */\n-  abstract server: MaybePromise<McpServer | Server>;\n-  props!: Props;\n-  initRun = false;\n-\n-  abstract init(): Promise<void>;\n-\n   /**\n    * Handle errors that occur during initialization or operation.\n    * Override this method to provide custom error handling.\n    * @param error - The error that occurred\n    * @returns An error response object with status code and message\n    */\n-  onError(error: Error): { status: number; message: string } {\n+  onMcpError(error: Error): { status: number; message: string } {",
    "repo_full_name": "cloudflare/agents",
    "discussion_comments": [
      {
        "comment_id": "2283609464",
        "repo_full_name": "cloudflare/agents",
        "pr_number": 415,
        "pr_file": "packages/agents/src/mcp/index.ts",
        "discussion_id": "2283609464",
        "commented_code": "@@ -342,28 +305,20 @@ export abstract class McpAgent<\n     } else if (this._transportType === \"streamable-http\") {\n       this._transport = new McpStreamableHttpTransport(\n         (id) => this.getWebSocketForResponseID(id),\n-        (id) => this._requestIdToConnectionId.delete(id)\n+        (id) => this._requestIdToConnectionId.delete(id),\n+        () => this.getWebSocketForStandaloneSse()\n       );\n       await server.connect(this._transport);\n     }\n   }\n \n-  /**\n-   * McpAgent API\n-   */\n-  abstract server: MaybePromise<McpServer | Server>;\n-  props!: Props;\n-  initRun = false;\n-\n-  abstract init(): Promise<void>;\n-\n   /**\n    * Handle errors that occur during initialization or operation.\n    * Override this method to provide custom error handling.\n    * @param error - The error that occurred\n    * @returns An error response object with status code and message\n    */\n-  onError(error: Error): { status: number; message: string } {\n+  onMcpError(error: Error): { status: number; message: string } {",
        "comment_created_at": "2025-08-18T22:10:11+00:00",
        "comment_author": "deathbyknowledge",
        "comment_body": "This seems to be a breaking change. The old `McpAgent` had a custom `onError` method that clashes with the base `Agent` method with the same name once we extend it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2055049141",
    "pr_number": 185,
    "pr_file": "packages/agents/src/mcp/index.ts",
    "created_at": "2025-04-22T23:46:26+00:00",
    "commented_code": "}\n }\n \n+type Protocol = \"sse\" | \"streamable\" | \"unset\";",
    "repo_full_name": "cloudflare/agents",
    "discussion_comments": [
      {
        "comment_id": "2055049141",
        "repo_full_name": "cloudflare/agents",
        "pr_number": 185,
        "pr_file": "packages/agents/src/mcp/index.ts",
        "discussion_id": "2055049141",
        "commented_code": "@@ -79,18 +80,19 @@ class McpTransport implements Transport {\n   }\n }\n \n+type Protocol = \"sse\" | \"streamable\" | \"unset\";",
        "comment_created_at": "2025-04-22T23:46:26+00:00",
        "comment_author": "irvinebroque",
        "comment_body": "naming nit but \u2014 aren't these transport types, not protocols? (since in MCP \"protocol\" is overloaded term)?",
        "pr_file_module": null
      },
      {
        "comment_id": "2055098884",
        "repo_full_name": "cloudflare/agents",
        "pr_number": 185,
        "pr_file": "packages/agents/src/mcp/index.ts",
        "discussion_id": "2055049141",
        "commented_code": "@@ -79,18 +80,19 @@ class McpTransport implements Transport {\n   }\n }\n \n+type Protocol = \"sse\" | \"streamable\" | \"unset\";",
        "comment_created_at": "2025-04-23T01:05:57+00:00",
        "comment_author": "jmorrell-cloudflare",
        "comment_body": "yeah, `Transport` was already used by the class. `TransportType` would likely be a better name \ud83d\udc4d ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2030168462",
    "pr_number": 140,
    "pr_file": "packages/agents/src/mcp/client-connection.ts",
    "created_at": "2025-04-06T14:29:22+00:00",
    "commented_code": "serverCapabilities: ServerCapabilities | undefined;\n \n   constructor(\n-    url: URL,\n+    public url: URL,\n     private info: ConstructorParameters<typeof Client>[0],\n-    opts: {\n+    private opts: {",
    "repo_full_name": "cloudflare/agents",
    "discussion_comments": [
      {
        "comment_id": "2030168462",
        "repo_full_name": "cloudflare/agents",
        "pr_number": 140,
        "pr_file": "packages/agents/src/mcp/client-connection.ts",
        "discussion_id": "2030168462",
        "commented_code": "@@ -33,32 +34,55 @@ export class MCPClientConnection {\n   serverCapabilities: ServerCapabilities | undefined;\n \n   constructor(\n-    url: URL,\n+    public url: URL,\n     private info: ConstructorParameters<typeof Client>[0],\n-    opts: {\n+    private opts: {",
        "comment_created_at": "2025-04-06T14:29:22+00:00",
        "comment_author": "threepointone",
        "comment_body": "call it `options`",
        "pr_file_module": null
      }
    ]
  }
]