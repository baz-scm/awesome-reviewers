[
  {
    "discussion_id": "2189127557",
    "pr_number": 7085,
    "pr_file": "CONTRIBUTING.md",
    "created_at": "2025-07-07T06:52:08+00:00",
    "commented_code": "- **Please do not use minor or major changesets**, we'll let you know when you need to use a different changeset type than patch.\n    - You don't need to select any of the `examples/*` packages, as they are not released.\n \n-3. **Commit Your Changes**: Ensure your commits are succinct and clear, detailing what modifications have been made and the reasons behind them. We don't require a specific commit message format, but please be descriptive.\n-4. **Fix prettier issues**: Run `pnpm prettier-fix` to fix any formatting issues in your code.\n-5. **Push the Changes to Your GitHub Repository**: After committing your changes, push them to your GitHub repository.\n-6. **Open a Pull Request**: Propose your changes for review. Furnish a lucid title and description of your contributions. Make sure to link any relevant issues your PR resolves. We use the following PR title format:\n+3. **Add a codemod**: If the change introduces a deprecation or a breaking change, add a codemod if possible. See [instructions below](#how-to-create-a-codemod)\n+4. **Commit Your Changes**: Ensure your commits are succinct and clear, detailing what modifications have been made and the reasons behind them. We don't require a specific commit message format, but please be descriptive.\n+5. **Fix prettier issues**: Run `pnpm prettier-fix` to fix any formatting issues in your code.\n+6. **Push the Changes to Your GitHub Repository**: After committing your changes, push them to your GitHub repository.\n+7. **Open a Pull Request**: Propose your changes for review. Furnish a lucid title and description of your contributions. Make sure to link any relevant issues your PR resolves. We use the following PR title format:\n \n    - `fix(package-name): description` or\n    - `feat(package-name): description` or\n    - `chore(package-name): description` etc.\n \n-7. **Respond to Feedback**: Stay receptive to and address any feedback or alteration requests from the project maintainers.\n-\n-### Fixing Prettier Issues\n-\n-> [!TIP]\n-> Run `pnpm prettier-fix` before opening a pull request.\n-\n-If you encounter any prettier issues, you can fix them by running `pnpm prettier-fix`. This command will automatically fix any formatting issues in your code.\n+8. **Respond to Feedback**: Stay receptive to and address any feedback or alteration requests from the project maintainers.\n \n Thank you for contributing to the AI SDK! Your efforts help us improve the project for everyone.\n+\n+#### How to create a codemod",
    "repo_full_name": "vercel/ai",
    "discussion_comments": [
      {
        "comment_id": "2189127557",
        "repo_full_name": "vercel/ai",
        "pr_number": 7085,
        "pr_file": "CONTRIBUTING.md",
        "discussion_id": "2189127557",
        "commented_code": "@@ -79,22 +79,89 @@ We greatly appreciate your pull requests. Here are the steps to submit them:\n    - **Please do not use minor or major changesets**, we'll let you know when you need to use a different changeset type than patch.\n    - You don't need to select any of the `examples/*` packages, as they are not released.\n \n-3. **Commit Your Changes**: Ensure your commits are succinct and clear, detailing what modifications have been made and the reasons behind them. We don't require a specific commit message format, but please be descriptive.\n-4. **Fix prettier issues**: Run `pnpm prettier-fix` to fix any formatting issues in your code.\n-5. **Push the Changes to Your GitHub Repository**: After committing your changes, push them to your GitHub repository.\n-6. **Open a Pull Request**: Propose your changes for review. Furnish a lucid title and description of your contributions. Make sure to link any relevant issues your PR resolves. We use the following PR title format:\n+3. **Add a codemod**: If the change introduces a deprecation or a breaking change, add a codemod if possible. See [instructions below](#how-to-create-a-codemod)\n+4. **Commit Your Changes**: Ensure your commits are succinct and clear, detailing what modifications have been made and the reasons behind them. We don't require a specific commit message format, but please be descriptive.\n+5. **Fix prettier issues**: Run `pnpm prettier-fix` to fix any formatting issues in your code.\n+6. **Push the Changes to Your GitHub Repository**: After committing your changes, push them to your GitHub repository.\n+7. **Open a Pull Request**: Propose your changes for review. Furnish a lucid title and description of your contributions. Make sure to link any relevant issues your PR resolves. We use the following PR title format:\n \n    - `fix(package-name): description` or\n    - `feat(package-name): description` or\n    - `chore(package-name): description` etc.\n \n-7. **Respond to Feedback**: Stay receptive to and address any feedback or alteration requests from the project maintainers.\n-\n-### Fixing Prettier Issues\n-\n-> [!TIP]\n-> Run `pnpm prettier-fix` before opening a pull request.\n-\n-If you encounter any prettier issues, you can fix them by running `pnpm prettier-fix`. This command will automatically fix any formatting issues in your code.\n+8. **Respond to Feedback**: Stay receptive to and address any feedback or alteration requests from the project maintainers.\n \n Thank you for contributing to the AI SDK! Your efforts help us improve the project for everyone.\n+\n+#### How to create a codemod",
        "comment_created_at": "2025-07-07T06:52:08+00:00",
        "comment_author": "lgrammel",
        "comment_body": "this is somewhat specific. we also have a `contributing/` folder where we can have more detailed guides, architecture docs, etc. What do you think about having a `contributing/how-to-create-a-codemode.md` and then referring to the contributing directory here?",
        "pr_file_module": null
      },
      {
        "comment_id": "2193319022",
        "repo_full_name": "vercel/ai",
        "pr_number": 7085,
        "pr_file": "CONTRIBUTING.md",
        "discussion_id": "2189127557",
        "commented_code": "@@ -79,22 +79,89 @@ We greatly appreciate your pull requests. Here are the steps to submit them:\n    - **Please do not use minor or major changesets**, we'll let you know when you need to use a different changeset type than patch.\n    - You don't need to select any of the `examples/*` packages, as they are not released.\n \n-3. **Commit Your Changes**: Ensure your commits are succinct and clear, detailing what modifications have been made and the reasons behind them. We don't require a specific commit message format, but please be descriptive.\n-4. **Fix prettier issues**: Run `pnpm prettier-fix` to fix any formatting issues in your code.\n-5. **Push the Changes to Your GitHub Repository**: After committing your changes, push them to your GitHub repository.\n-6. **Open a Pull Request**: Propose your changes for review. Furnish a lucid title and description of your contributions. Make sure to link any relevant issues your PR resolves. We use the following PR title format:\n+3. **Add a codemod**: If the change introduces a deprecation or a breaking change, add a codemod if possible. See [instructions below](#how-to-create-a-codemod)\n+4. **Commit Your Changes**: Ensure your commits are succinct and clear, detailing what modifications have been made and the reasons behind them. We don't require a specific commit message format, but please be descriptive.\n+5. **Fix prettier issues**: Run `pnpm prettier-fix` to fix any formatting issues in your code.\n+6. **Push the Changes to Your GitHub Repository**: After committing your changes, push them to your GitHub repository.\n+7. **Open a Pull Request**: Propose your changes for review. Furnish a lucid title and description of your contributions. Make sure to link any relevant issues your PR resolves. We use the following PR title format:\n \n    - `fix(package-name): description` or\n    - `feat(package-name): description` or\n    - `chore(package-name): description` etc.\n \n-7. **Respond to Feedback**: Stay receptive to and address any feedback or alteration requests from the project maintainers.\n-\n-### Fixing Prettier Issues\n-\n-> [!TIP]\n-> Run `pnpm prettier-fix` before opening a pull request.\n-\n-If you encounter any prettier issues, you can fix them by running `pnpm prettier-fix`. This command will automatically fix any formatting issues in your code.\n+8. **Respond to Feedback**: Stay receptive to and address any feedback or alteration requests from the project maintainers.\n \n Thank you for contributing to the AI SDK! Your efforts help us improve the project for everyone.\n+\n+#### How to create a codemod",
        "comment_created_at": "2025-07-08T19:45:04+00:00",
        "comment_author": "gr2m",
        "comment_body": "Good idea, will do üëçüèº ",
        "pr_file_module": null
      },
      {
        "comment_id": "2193397873",
        "repo_full_name": "vercel/ai",
        "pr_number": 7085,
        "pr_file": "CONTRIBUTING.md",
        "discussion_id": "2189127557",
        "commented_code": "@@ -79,22 +79,89 @@ We greatly appreciate your pull requests. Here are the steps to submit them:\n    - **Please do not use minor or major changesets**, we'll let you know when you need to use a different changeset type than patch.\n    - You don't need to select any of the `examples/*` packages, as they are not released.\n \n-3. **Commit Your Changes**: Ensure your commits are succinct and clear, detailing what modifications have been made and the reasons behind them. We don't require a specific commit message format, but please be descriptive.\n-4. **Fix prettier issues**: Run `pnpm prettier-fix` to fix any formatting issues in your code.\n-5. **Push the Changes to Your GitHub Repository**: After committing your changes, push them to your GitHub repository.\n-6. **Open a Pull Request**: Propose your changes for review. Furnish a lucid title and description of your contributions. Make sure to link any relevant issues your PR resolves. We use the following PR title format:\n+3. **Add a codemod**: If the change introduces a deprecation or a breaking change, add a codemod if possible. See [instructions below](#how-to-create-a-codemod)\n+4. **Commit Your Changes**: Ensure your commits are succinct and clear, detailing what modifications have been made and the reasons behind them. We don't require a specific commit message format, but please be descriptive.\n+5. **Fix prettier issues**: Run `pnpm prettier-fix` to fix any formatting issues in your code.\n+6. **Push the Changes to Your GitHub Repository**: After committing your changes, push them to your GitHub repository.\n+7. **Open a Pull Request**: Propose your changes for review. Furnish a lucid title and description of your contributions. Make sure to link any relevant issues your PR resolves. We use the following PR title format:\n \n    - `fix(package-name): description` or\n    - `feat(package-name): description` or\n    - `chore(package-name): description` etc.\n \n-7. **Respond to Feedback**: Stay receptive to and address any feedback or alteration requests from the project maintainers.\n-\n-### Fixing Prettier Issues\n-\n-> [!TIP]\n-> Run `pnpm prettier-fix` before opening a pull request.\n-\n-If you encounter any prettier issues, you can fix them by running `pnpm prettier-fix`. This command will automatically fix any formatting issues in your code.\n+8. **Respond to Feedback**: Stay receptive to and address any feedback or alteration requests from the project maintainers.\n \n Thank you for contributing to the AI SDK! Your efforts help us improve the project for everyone.\n+\n+#### How to create a codemod",
        "comment_created_at": "2025-07-08T20:35:44+00:00",
        "comment_author": "gr2m",
        "comment_body": "These files don't seem to be linked from anywhere and are not rendered on https://ai-sdk.dev:\r\n\r\n- https://github.com/vercel/ai/blob/main/contributing/packages.mdx\r\n- https://github.com/vercel/ai/blob/main/contributing/providers.mdx\r\n\r\nShould we change the extensions to `*.md`? Shouldn't make any difference for rendering, but `*.mdx` somewhat implies that it's rendered by a server that supports it, which does not seem to be the case here?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2080008882",
    "pr_number": 6239,
    "pr_file": ".changeset/heavy-pens-destroy.md",
    "created_at": "2025-05-08T15:56:14+00:00",
    "commented_code": "'ai': major\n ---\n \n-chore(embedding-model): add v2 interface\n-chore(embedding-model-v2): rename rawResponse to response\n-feat(embedding-model-v2): add providerOptions\n+## Embedding Model V2",
    "repo_full_name": "vercel/ai",
    "discussion_comments": [
      {
        "comment_id": "2080008882",
        "repo_full_name": "vercel/ai",
        "pr_number": 6239,
        "pr_file": ".changeset/heavy-pens-destroy.md",
        "discussion_id": "2080008882",
        "commented_code": "@@ -13,9 +13,96 @@\n 'ai': major\n ---\n \n-chore(embedding-model): add v2 interface\n-chore(embedding-model-v2): rename rawResponse to response\n-feat(embedding-model-v2): add providerOptions\n+## Embedding Model V2",
        "comment_created_at": "2025-05-08T15:56:14+00:00",
        "comment_author": "gr2m",
        "comment_body": "Given how the `changeset` CLI renders the release notes on GitHub, I would remove the heading of the first line. Sorry I missed this problem when suggesting adding a header to the top of the body\r\n\r\n![image](https://github.com/user-attachments/assets/bf05ab94-df34-4aa9-9dab-58268ae711eb)\r\n\r\n",
        "pr_file_module": null
      }
    ]
  }
]