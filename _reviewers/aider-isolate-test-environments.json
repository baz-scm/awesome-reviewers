[
  {
    "discussion_id": "1791030995",
    "pr_number": 1961,
    "pr_file": "benchmark/benchmark.py",
    "created_at": "2024-10-08T00:25:36+00:00",
    "commented_code": "show_fnames = \",\".join(map(str, fnames))\n     print(\"fnames:\", show_fnames)\n \n-    coder = Coder.create(\n-        main_model,\n-        edit_format,\n-        io,\n-        fnames=fnames,\n-        use_git=False,\n-        stream=False,\n-        verbose=verbose,\n-        # auto_lint=False,  # disabled for code-in-json experiments\n-        cache_prompts=True,\n-        suggest_shell_commands=False,\n-    )\n+    with change_dir(testdir):",
    "repo_full_name": "Aider-AI/aider",
    "discussion_comments": [
      {
        "comment_id": "1791030995",
        "repo_full_name": "Aider-AI/aider",
        "pr_number": 1961,
        "pr_file": "benchmark/benchmark.py",
        "discussion_id": "1791030995",
        "commented_code": "@@ -595,18 +596,19 @@ def run_test_real(\n     show_fnames = \",\".join(map(str, fnames))\n     print(\"fnames:\", show_fnames)\n \n-    coder = Coder.create(\n-        main_model,\n-        edit_format,\n-        io,\n-        fnames=fnames,\n-        use_git=False,\n-        stream=False,\n-        verbose=verbose,\n-        # auto_lint=False,  # disabled for code-in-json experiments\n-        cache_prompts=True,\n-        suggest_shell_commands=False,\n-    )\n+    with change_dir(testdir):",
        "comment_created_at": "2024-10-08T00:25:36+00:00",
        "comment_author": "elifarley",
        "comment_body": "If we don't do this, the CEDARScript editor won't know which directory to consider as the base. We can remove all changes to this file, but then we won't be able to run benchmarks using `cedarscript-g` edit format.",
        "pr_file_module": null
      },
      {
        "comment_id": "1791035500",
        "repo_full_name": "Aider-AI/aider",
        "pr_number": 1961,
        "pr_file": "benchmark/benchmark.py",
        "discussion_id": "1791030995",
        "commented_code": "@@ -595,18 +596,19 @@ def run_test_real(\n     show_fnames = \",\".join(map(str, fnames))\n     print(\"fnames:\", show_fnames)\n \n-    coder = Coder.create(\n-        main_model,\n-        edit_format,\n-        io,\n-        fnames=fnames,\n-        use_git=False,\n-        stream=False,\n-        verbose=verbose,\n-        # auto_lint=False,  # disabled for code-in-json experiments\n-        cache_prompts=True,\n-        suggest_shell_commands=False,\n-    )\n+    with change_dir(testdir):",
        "comment_created_at": "2024-10-08T00:34:34+00:00",
        "comment_author": "elifarley",
        "comment_body": "Should I drop changes to this file, and create a separate PR? Maybe it's better. This main PR won't be able to run benchmarks using `cedarscript-g` though.",
        "pr_file_module": null
      },
      {
        "comment_id": "1791036456",
        "repo_full_name": "Aider-AI/aider",
        "pr_number": 1961,
        "pr_file": "benchmark/benchmark.py",
        "discussion_id": "1791030995",
        "commented_code": "@@ -595,18 +596,19 @@ def run_test_real(\n     show_fnames = \",\".join(map(str, fnames))\n     print(\"fnames:\", show_fnames)\n \n-    coder = Coder.create(\n-        main_model,\n-        edit_format,\n-        io,\n-        fnames=fnames,\n-        use_git=False,\n-        stream=False,\n-        verbose=verbose,\n-        # auto_lint=False,  # disabled for code-in-json experiments\n-        cache_prompts=True,\n-        suggest_shell_commands=False,\n-    )\n+    with change_dir(testdir):",
        "comment_created_at": "2024-10-08T00:36:42+00:00",
        "comment_author": "fry69",
        "comment_body": "I think this is fine, since\r\n- the benchmark does not touch regular usage\r\n- it is more or less part of the new coder\r\n\r\nbut @paul-gauthier should make the call of course.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1416276956",
    "pr_number": 380,
    "pr_file": "tests/test_main.py",
    "created_at": "2023-12-05T21:06:20+00:00",
    "commented_code": "_, kwargs = MockCoder.call_args\n             assert kwargs[\"dirty_commits\"] is True\n \n+    @patch('aider.main.InputOutput.confirm_ask', return_value=True)",
    "repo_full_name": "Aider-AI/aider",
    "discussion_comments": [
      {
        "comment_id": "1416276956",
        "repo_full_name": "Aider-AI/aider",
        "pr_number": 380,
        "pr_file": "tests/test_main.py",
        "discussion_id": "1416276956",
        "commented_code": "@@ -182,6 +182,20 @@ def test_main_args(self):\n             _, kwargs = MockCoder.call_args\n             assert kwargs[\"dirty_commits\"] is True\n \n+    @patch('aider.main.InputOutput.confirm_ask', return_value=True)",
        "comment_created_at": "2023-12-05T21:06:20+00:00",
        "comment_author": "paul-gauthier",
        "comment_body": "It would be better to make a proper tempfile, not just stomp a txt file into the current directory. It might overwrite a real file.\r\n\r\nAnd why patch `confirm_ask`? Not sure why this test would be asking a question? In any case, you can just call main with `--yes`:\r\n\r\n```\r\nmain([\"--yes\", \"--message-file\", message_file_path], input=DummyInput(), output=DummyOutput())\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1416372528",
        "repo_full_name": "Aider-AI/aider",
        "pr_number": 380,
        "pr_file": "tests/test_main.py",
        "discussion_id": "1416276956",
        "commented_code": "@@ -182,6 +182,20 @@ def test_main_args(self):\n             _, kwargs = MockCoder.call_args\n             assert kwargs[\"dirty_commits\"] is True\n \n+    @patch('aider.main.InputOutput.confirm_ask', return_value=True)",
        "comment_created_at": "2023-12-05T22:51:58+00:00",
        "comment_author": "gwpl",
        "comment_body": "Thank you!   \r\nEarlier when removing `@patch...` it was failing, I wondered as well. Now I see! Making this PR at evening I missed earlier to remove \"mock_confirm\" argument in unit,test, now `@patch` is not needed! Improving python-fu as we go!",
        "pr_file_module": null
      },
      {
        "comment_id": "1416373739",
        "repo_full_name": "Aider-AI/aider",
        "pr_number": 380,
        "pr_file": "tests/test_main.py",
        "discussion_id": "1416276956",
        "commented_code": "@@ -182,6 +182,20 @@ def test_main_args(self):\n             _, kwargs = MockCoder.call_args\n             assert kwargs[\"dirty_commits\"] is True\n \n+    @patch('aider.main.InputOutput.confirm_ask', return_value=True)",
        "comment_created_at": "2023-12-05T22:53:38+00:00",
        "comment_author": "gwpl",
        "comment_body": "And of course `tempfile.mktemp()` !",
        "pr_file_module": null
      }
    ]
  }
]