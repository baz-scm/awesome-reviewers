[
  {
    "discussion_id": "2177859496",
    "pr_number": 52437,
    "pr_file": "airflow-core/src/airflow/ui/src/pages/DagRuns.tsx",
    "created_at": "2025-07-01T15:08:12+00:00",
    "commented_code": "))}\n           </Select.Content>\n         </Select.Root>\n-      </Flex>\n+\n+        <InputGroup startElement={<FiHash size={14} />}>\n+          <Input\n+            maxW=\"200px\"\n+            onChange={handleRunIdChange}\n+            placeholder={translate(\"dags:filters.runIdFilter\")}\n+            value={filteredRunId ?? \"\"}\n+          />\n+        </InputGroup>",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2177859496",
        "repo_full_name": "apache/airflow",
        "pr_number": 52437,
        "pr_file": "airflow-core/src/airflow/ui/src/pages/DagRuns.tsx",
        "discussion_id": "2177859496",
        "commented_code": "@@ -289,7 +313,16 @@ export const DagRuns = () => {\n             ))}\n           </Select.Content>\n         </Select.Root>\n-      </Flex>\n+\n+        <InputGroup startElement={<FiHash size={14} />}>\n+          <Input\n+            maxW=\"200px\"\n+            onChange={handleRunIdChange}\n+            placeholder={translate(\"dags:filters.runIdFilter\")}\n+            value={filteredRunId ?? \"\"}\n+          />\n+        </InputGroup>",
        "comment_created_at": "2025-07-01T15:08:12+00:00",
        "comment_author": "bbovenzi",
        "comment_body": "Why don't we use the already existing SearchBar.tsx component? Especially if we update to to filter by `run_id_pattern`?",
        "pr_file_module": null
      },
      {
        "comment_id": "2179059832",
        "repo_full_name": "apache/airflow",
        "pr_number": 52437,
        "pr_file": "airflow-core/src/airflow/ui/src/pages/DagRuns.tsx",
        "discussion_id": "2177859496",
        "commented_code": "@@ -289,7 +313,16 @@ export const DagRuns = () => {\n             ))}\n           </Select.Content>\n         </Select.Root>\n-      </Flex>\n+\n+        <InputGroup startElement={<FiHash size={14} />}>\n+          <Input\n+            maxW=\"200px\"\n+            onChange={handleRunIdChange}\n+            placeholder={translate(\"dags:filters.runIdFilter\")}\n+            value={filteredRunId ?? \"\"}\n+          />\n+        </InputGroup>",
        "comment_created_at": "2025-07-02T04:48:31+00:00",
        "comment_author": "noeunkim",
        "comment_body": "Nice suggestion!\r\n\r\nI\u2019m actually open to UI feedback because there are many ways to support `run_id` filter (for example, using  dropdown like previous version) that\u2019s why I initially created new component\r\n\r\nbut based on the current discussion `reusing the existing SearchBar` makes sense for me :-)\r\n\r\njust applied it: [6b7507](https://github.com/apache/airflow/pull/52437/commits/6b750748b94ce5b7afd042dab46fcd21543cd67e#diff-b534f087a86da3b506e704ff503a46fe0cad686ddfbdf0a2428e857b96852958L318)\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2161144415",
    "pr_number": 51682,
    "pr_file": "airflow-core/src/airflow/ui/src/pages/AssetsGroupedList/AssetsGroupedList.tsx",
    "created_at": "2025-06-23T09:27:21+00:00",
    "commented_code": "+/*!\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import { Box, Link, IconButton, VStack, Flex, Heading, Text, Input } from \"@chakra-ui/react\";\n+import { useState, useMemo } from \"react\";\n+import { Link as RouterLink } from \"react-router-dom\";\n+\n+import { useAssetServiceGetAssets } from \"openapi/queries\";\n+import type { AssetResponse } from \"openapi/requests/types.gen\";\n+import { DataTable } from \"src/components/DataTable\";\n+import { useTableURLState } from \"src/components/DataTable/useTableUrlState\";\n+import { ErrorAlert } from \"src/components/ErrorAlert\";\n+import Time from \"src/components/Time\";\n+\n+import { CreateAssetEvent } from \"../Asset/CreateAssetEvent\";\n+import { DependencyPopover } from \"../AssetsList/DependencyPopover\";\n+\n+// \u00cdcones SVG inline para expandir/colapsar\n+const ChevronDownIcon = () => (\n+  <svg fill=\"currentColor\" height=\"1em\" viewBox=\"0 0 20 20\" width=\"1em\">\n+    <path\n+      clipRule=\"evenodd\"\n+      d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.085l3.71-3.855a.75.75 0 111.08 1.04l-4.24 4.4a.75.75 0 01-1.08 0l-4.24-4.4a.75.75 0 01.02-1.06z\"\n+      fillRule=\"evenodd\"\n+    />\n+  </svg>\n+);\n+\n+const ChevronRightIcon = () => (\n+  <svg fill=\"currentColor\" height=\"1em\" viewBox=\"0 0 20 20\" width=\"1em\">\n+    <path\n+      clipRule=\"evenodd\"\n+      d=\"M7.21 5.23a.75.75 0 011.06-.02l4.4 4.24a.75.75 0 010 1.08l-4.4 4.24a.75.75 0 11-1.04-1.08L11.085 10 7.23 6.29a.75.75 0 01-.02-1.06z\"\n+      fillRule=\"evenodd\"\n+    />\n+  </svg>\n+);",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2161144415",
        "repo_full_name": "apache/airflow",
        "pr_number": 51682,
        "pr_file": "airflow-core/src/airflow/ui/src/pages/AssetsGroupedList/AssetsGroupedList.tsx",
        "discussion_id": "2161144415",
        "commented_code": "@@ -0,0 +1,297 @@\n+/*!\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import { Box, Link, IconButton, VStack, Flex, Heading, Text, Input } from \"@chakra-ui/react\";\n+import { useState, useMemo } from \"react\";\n+import { Link as RouterLink } from \"react-router-dom\";\n+\n+import { useAssetServiceGetAssets } from \"openapi/queries\";\n+import type { AssetResponse } from \"openapi/requests/types.gen\";\n+import { DataTable } from \"src/components/DataTable\";\n+import { useTableURLState } from \"src/components/DataTable/useTableUrlState\";\n+import { ErrorAlert } from \"src/components/ErrorAlert\";\n+import Time from \"src/components/Time\";\n+\n+import { CreateAssetEvent } from \"../Asset/CreateAssetEvent\";\n+import { DependencyPopover } from \"../AssetsList/DependencyPopover\";\n+\n+// \u00cdcones SVG inline para expandir/colapsar\n+const ChevronDownIcon = () => (\n+  <svg fill=\"currentColor\" height=\"1em\" viewBox=\"0 0 20 20\" width=\"1em\">\n+    <path\n+      clipRule=\"evenodd\"\n+      d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.085l3.71-3.855a.75.75 0 111.08 1.04l-4.24 4.4a.75.75 0 01-1.08 0l-4.24-4.4a.75.75 0 01.02-1.06z\"\n+      fillRule=\"evenodd\"\n+    />\n+  </svg>\n+);\n+\n+const ChevronRightIcon = () => (\n+  <svg fill=\"currentColor\" height=\"1em\" viewBox=\"0 0 20 20\" width=\"1em\">\n+    <path\n+      clipRule=\"evenodd\"\n+      d=\"M7.21 5.23a.75.75 0 011.06-.02l4.4 4.24a.75.75 0 010 1.08l-4.4 4.24a.75.75 0 11-1.04-1.08L11.085 10 7.23 6.29a.75.75 0 01-.02-1.06z\"\n+      fillRule=\"evenodd\"\n+    />\n+  </svg>\n+);",
        "comment_created_at": "2025-06-23T09:27:21+00:00",
        "comment_author": "pierrejeambrun",
        "comment_body": "We already do this at different places in the code. (We use chevron icons from react-icon lib instead), you can do something similar.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2146971657",
    "pr_number": 51667,
    "pr_file": "airflow-core/src/airflow/ui/src/components/StatsDisplay.tsx",
    "created_at": "2025-06-14T14:42:47+00:00",
    "commented_code": "+/*!\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import { Box, GridItem, Heading, HStack, VStack } from \"@chakra-ui/react\";\n+import { useState } from \"react\";\n+import { MdInfoOutline } from \"react-icons/md\";\n+\n+import { Stat } from \"src/components/Stat\";\n+import { Dialog } from \"src/components/ui\";\n+\n+import ActionButton from \"./ui/ActionButton\";\n+\n+const StatsDisplay = ({\n+  isCompact = false,\n+  stats,\n+  title,\n+}: {\n+  readonly isCompact?: boolean;\n+  readonly stats: Array<{ label: string; value: React.ReactNode | string }>;\n+  readonly title?: string;\n+}) => {\n+  const [isOpen, setIsOpen] = useState(false);\n+\n+  if (isCompact) {\n+    return (\n+      <Box>\n+        <ActionButton\n+          actionName=\"Show stats\"\n+          icon={<MdInfoOutline />}\n+          onClick={() => setIsOpen(true)}\n+          text=\"Stats\"\n+          withText={false}\n+        />\n+        <Dialog.Root lazyMount onOpenChange={() => setIsOpen(false)} open={isOpen} size=\"md\">",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2146971657",
        "repo_full_name": "apache/airflow",
        "pr_number": 51667,
        "pr_file": "airflow-core/src/airflow/ui/src/components/StatsDisplay.tsx",
        "discussion_id": "2146971657",
        "commented_code": "@@ -0,0 +1,79 @@\n+/*!\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import { Box, GridItem, Heading, HStack, VStack } from \"@chakra-ui/react\";\n+import { useState } from \"react\";\n+import { MdInfoOutline } from \"react-icons/md\";\n+\n+import { Stat } from \"src/components/Stat\";\n+import { Dialog } from \"src/components/ui\";\n+\n+import ActionButton from \"./ui/ActionButton\";\n+\n+const StatsDisplay = ({\n+  isCompact = false,\n+  stats,\n+  title,\n+}: {\n+  readonly isCompact?: boolean;\n+  readonly stats: Array<{ label: string; value: React.ReactNode | string }>;\n+  readonly title?: string;\n+}) => {\n+  const [isOpen, setIsOpen] = useState(false);\n+\n+  if (isCompact) {\n+    return (\n+      <Box>\n+        <ActionButton\n+          actionName=\"Show stats\"\n+          icon={<MdInfoOutline />}\n+          onClick={() => setIsOpen(true)}\n+          text=\"Stats\"\n+          withText={false}\n+        />\n+        <Dialog.Root lazyMount onOpenChange={() => setIsOpen(false)} open={isOpen} size=\"md\">",
        "comment_created_at": "2025-06-14T14:42:47+00:00",
        "comment_author": "bbovenzi",
        "comment_body": "Do we need a full dialog? I feel like a [Popover](https://www.chakra-ui.com/docs/components/popover) is sufficient",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2157637990",
    "pr_number": 51146,
    "pr_file": "airflow-core/src/airflow/ui/src/queries/useLogs.tsx",
    "created_at": "2025-06-19T20:37:41+00:00",
    "commented_code": "return { data, warning };\n   }\n \n-  // TODO: Add support for nested groups\n-\n-  parsedLines = parsedLines.map((line) => {\n-    const text = innerText(line);\n-\n-    if (text.includes(\"::group::\") && !startGroup) {\n-      startGroup = true;\n-      groupName = text.split(\"::group::\")[1] as string;\n-    } else if (text.includes(\"::endgroup::\")) {\n-      startGroup = false;\n-      const group = (\n-        <details key={groupName} open={open} style={{ width: \"100%\" }}>\n-          <summary data-testid={`summary-${groupName}`}>\n-            <chakra.span color=\"fg.info\" cursor=\"pointer\">\n-              {groupName}\n-            </chakra.span>\n-          </summary>\n-          {groupLines}\n-        </details>\n-      );\n-\n-      groupLines = [];\n-\n-      return group;\n-    }\n+  parsedLines = (() => {\n+    type Group = { level: number; lines: Array<JSX.Element | \"\">; name: string };\n+    const groupStack: Array<Group> = [];\n+    const result: Array<JSX.Element | \"\"> = [];\n+\n+    parsedLines.forEach((line) => {\n+      const text = innerText(line);\n+\n+      if (text.includes(\"::group::\")) {\n+        const groupName = text.split(\"::group::\")[1] as string;\n+\n+        groupStack.push({ level: groupStack.length, lines: [], name: groupName });\n+\n+        return;\n+      }\n \n-    if (startGroup) {\n-      groupLines.push(line);\n+      if (text.includes(\"::endgroup::\")) {\n+        const finishedGroup = groupStack.pop();\n+\n+        if (finishedGroup) {\n+          const groupElement = (\n+            <Box key={finishedGroup.name} mb={2} pl={finishedGroup.level * 2}>\n+              <details open={open} style={{ width: \"100%\" }}>",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2157637990",
        "repo_full_name": "apache/airflow",
        "pr_number": 51146,
        "pr_file": "airflow-core/src/airflow/ui/src/queries/useLogs.tsx",
        "discussion_id": "2157637990",
        "commented_code": "@@ -95,40 +94,72 @@ const parseLogs = ({\n     return { data, warning };\n   }\n \n-  // TODO: Add support for nested groups\n-\n-  parsedLines = parsedLines.map((line) => {\n-    const text = innerText(line);\n-\n-    if (text.includes(\"::group::\") && !startGroup) {\n-      startGroup = true;\n-      groupName = text.split(\"::group::\")[1] as string;\n-    } else if (text.includes(\"::endgroup::\")) {\n-      startGroup = false;\n-      const group = (\n-        <details key={groupName} open={open} style={{ width: \"100%\" }}>\n-          <summary data-testid={`summary-${groupName}`}>\n-            <chakra.span color=\"fg.info\" cursor=\"pointer\">\n-              {groupName}\n-            </chakra.span>\n-          </summary>\n-          {groupLines}\n-        </details>\n-      );\n-\n-      groupLines = [];\n-\n-      return group;\n-    }\n+  parsedLines = (() => {\n+    type Group = { level: number; lines: Array<JSX.Element | \"\">; name: string };\n+    const groupStack: Array<Group> = [];\n+    const result: Array<JSX.Element | \"\"> = [];\n+\n+    parsedLines.forEach((line) => {\n+      const text = innerText(line);\n+\n+      if (text.includes(\"::group::\")) {\n+        const groupName = text.split(\"::group::\")[1] as string;\n+\n+        groupStack.push({ level: groupStack.length, lines: [], name: groupName });\n+\n+        return;\n+      }\n \n-    if (startGroup) {\n-      groupLines.push(line);\n+      if (text.includes(\"::endgroup::\")) {\n+        const finishedGroup = groupStack.pop();\n+\n+        if (finishedGroup) {\n+          const groupElement = (\n+            <Box key={finishedGroup.name} mb={2} pl={finishedGroup.level * 2}>\n+              <details open={open} style={{ width: \"100%\" }}>",
        "comment_created_at": "2025-06-19T20:37:41+00:00",
        "comment_author": "guan404ming",
        "comment_body": "```suggestion\r\n              <chakra.details open={open} w=\"100%\">\r\n```\r\n\r\nto use [chakra factory](https://chakra-ui.com/docs/styling/chakra-factory) could preserve consistency and get better support for RTL lang",
        "pr_file_module": null
      }
    ]
  }
]