[
  {
    "discussion_id": "2172234944",
    "pr_number": 51264,
    "pr_file": "airflow-core/src/airflow/ui/src/pages/Dag/Header.tsx",
    "created_at": "2025-06-27T15:00:18+00:00",
    "commented_code": "stats={stats}\n       subTitle={\n         dag !== undefined && (\n-          <TogglePause dagDisplayName={dag.dag_display_name} dagId={dag.dag_id} isPaused={dag.is_paused} />\n+          <Flex align=\"center\" gap={2}>\n+            <TogglePause dagDisplayName={dag.dag_display_name} dagId={dag.dag_id} isPaused={dag.is_paused} />\n+            <FavoriteDagButton dagId={dag.dag_id} withText={false} />",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2172234944",
        "repo_full_name": "apache/airflow",
        "pr_number": 51264,
        "pr_file": "airflow-core/src/airflow/ui/src/pages/Dag/Header.tsx",
        "discussion_id": "2172234944",
        "commented_code": "@@ -115,7 +116,10 @@ export const Header = ({\n       stats={stats}\n       subTitle={\n         dag !== undefined && (\n-          <TogglePause dagDisplayName={dag.dag_display_name} dagId={dag.dag_id} isPaused={dag.is_paused} />\n+          <Flex align=\"center\" gap={2}>\n+            <TogglePause dagDisplayName={dag.dag_display_name} dagId={dag.dag_id} isPaused={dag.is_paused} />\n+            <FavoriteDagButton dagId={dag.dag_id} withText={false} />",
        "comment_created_at": "2025-06-27T15:00:18+00:00",
        "comment_author": "pierrejeambrun",
        "comment_body": "Here we should probably show text.\r\n\r\nThis is what we are doing for all other buttons in the header. (so we see a clear \"* Favorite\" and \"* Unfavorite\" button. Also it should probably be on the right align with the 'reparse' button.",
        "pr_file_module": null
      },
      {
        "comment_id": "2175131105",
        "repo_full_name": "apache/airflow",
        "pr_number": 51264,
        "pr_file": "airflow-core/src/airflow/ui/src/pages/Dag/Header.tsx",
        "discussion_id": "2172234944",
        "commented_code": "@@ -115,7 +116,10 @@ export const Header = ({\n       stats={stats}\n       subTitle={\n         dag !== undefined && (\n-          <TogglePause dagDisplayName={dag.dag_display_name} dagId={dag.dag_id} isPaused={dag.is_paused} />\n+          <Flex align=\"center\" gap={2}>\n+            <TogglePause dagDisplayName={dag.dag_display_name} dagId={dag.dag_id} isPaused={dag.is_paused} />\n+            <FavoriteDagButton dagId={dag.dag_id} withText={false} />",
        "comment_created_at": "2025-06-30T13:49:38+00:00",
        "comment_author": "PNL0",
        "comment_body": "Done.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2127090289",
    "pr_number": 51146,
    "pr_file": "airflow-core/src/airflow/ui/src/pages/TaskInstance/Logs/TaskLogHeader.tsx",
    "created_at": "2025-06-04T17:22:19+00:00",
    "commented_code": "</Select.Content>\n           </Select.Root>\n         ) : undefined}\n-        <HStack>\n+        <HStack gap={1}>\n           <Tooltip closeDelay={100} content=\"Press w to toggle wrap\" openDelay={100}>\n             <Button\n+              _hover={{ bg: \"gray.800\" }}\n               aria-label={wrap ? \"Unwrap\" : \"Wrap\"}\n-              bg=\"bg.panel\"\n+              bg=\"black\"\n+              color=\"white\"\n+              m={0}\n               onClick={toggleWrap}\n+              px={4}\n+              py={2}\n               variant=\"outline\"\n             >\n               {wrap ? \"Unwrap\" : \"Wrap\"}\n             </Button>\n           </Tooltip>\n+          {toggleExpanded ? (\n+            <Tooltip\n+              closeDelay={100}\n+              content={expanded ? \"Press e to collapse\" : \"Press e to expand\"}\n+              openDelay={100}\n+            >\n+              <Button\n+                _hover={{ bg: \"gray.800\" }}\n+                aria-label={expanded ? \"Collapse All\" : \"Expand\"}\n+                bg=\"black\"\n+                color=\"white\"\n+                m={0}\n+                onClick={toggleExpanded}\n+                px={4}\n+                py={2}\n+                size=\"md\"\n+                variant=\"outline\"\n+              >\n+                {expanded ? \"Collapse All\" : \"Expand \"}",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2127090289",
        "repo_full_name": "apache/airflow",
        "pr_number": 51146,
        "pr_file": "airflow-core/src/airflow/ui/src/pages/TaskInstance/Logs/TaskLogHeader.tsx",
        "discussion_id": "2127090289",
        "commented_code": "@@ -178,20 +200,57 @@ export const TaskLogHeader = ({\n             </Select.Content>\n           </Select.Root>\n         ) : undefined}\n-        <HStack>\n+        <HStack gap={1}>\n           <Tooltip closeDelay={100} content=\"Press w to toggle wrap\" openDelay={100}>\n             <Button\n+              _hover={{ bg: \"gray.800\" }}\n               aria-label={wrap ? \"Unwrap\" : \"Wrap\"}\n-              bg=\"bg.panel\"\n+              bg=\"black\"\n+              color=\"white\"\n+              m={0}\n               onClick={toggleWrap}\n+              px={4}\n+              py={2}\n               variant=\"outline\"\n             >\n               {wrap ? \"Unwrap\" : \"Wrap\"}\n             </Button>\n           </Tooltip>\n+          {toggleExpanded ? (\n+            <Tooltip\n+              closeDelay={100}\n+              content={expanded ? \"Press e to collapse\" : \"Press e to expand\"}\n+              openDelay={100}\n+            >\n+              <Button\n+                _hover={{ bg: \"gray.800\" }}\n+                aria-label={expanded ? \"Collapse All\" : \"Expand\"}\n+                bg=\"black\"\n+                color=\"white\"\n+                m={0}\n+                onClick={toggleExpanded}\n+                px={4}\n+                py={2}\n+                size=\"md\"\n+                variant=\"outline\"\n+              >\n+                {expanded ? \"Collapse All\" : \"Expand \"}",
        "comment_created_at": "2025-06-04T17:22:19+00:00",
        "comment_author": "bbovenzi",
        "comment_body": "I think its also ok to reuse the expand all / collapse all icons we use for the grid view in `ToggleGroups.tsx`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2127091471",
    "pr_number": 51146,
    "pr_file": "airflow-core/src/airflow/ui/src/pages/TaskInstance/Logs/TaskLogHeader.tsx",
    "created_at": "2025-06-04T17:23:04+00:00",
    "commented_code": "</Select.Content>\n           </Select.Root>\n         ) : undefined}\n-        <HStack>\n+        <HStack gap={1}>\n           <Tooltip closeDelay={100} content=\"Press w to toggle wrap\" openDelay={100}>\n             <Button\n+              _hover={{ bg: \"gray.800\" }}\n               aria-label={wrap ? \"Unwrap\" : \"Wrap\"}\n-              bg=\"bg.panel\"\n+              bg=\"black\"\n+              color=\"white\"\n+              m={0}\n               onClick={toggleWrap}\n+              px={4}\n+              py={2}\n               variant=\"outline\"\n             >\n               {wrap ? \"Unwrap\" : \"Wrap\"}\n             </Button>\n           </Tooltip>\n+          {toggleExpanded ? (\n+            <Tooltip\n+              closeDelay={100}\n+              content={expanded ? \"Press e to collapse\" : \"Press e to expand\"}\n+              openDelay={100}\n+            >\n+              <Button\n+                _hover={{ bg: \"gray.800\" }}\n+                aria-label={expanded ? \"Collapse All\" : \"Expand\"}\n+                bg=\"black\"\n+                color=\"white\"\n+                m={0}\n+                onClick={toggleExpanded}\n+                px={4}\n+                py={2}\n+                size=\"md\"\n+                variant=\"outline\"\n+              >\n+                {expanded ? \"Collapse All\" : \"Expand \"}\n+              </Button>\n+            </Tooltip>\n+          ) : undefined}\n           {!isFullscreen && (\n             <Tooltip closeDelay={100} content=\"Press f for fullscreen\" openDelay={100}>\n-              <IconButton aria-label=\"Full screen\" bg=\"bg.panel\" onClick={toggleFullscreen} variant=\"outline\">\n+              <IconButton\n+                _hover={{ bg: \"gray.800\" }}",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2127091471",
        "repo_full_name": "apache/airflow",
        "pr_number": 51146,
        "pr_file": "airflow-core/src/airflow/ui/src/pages/TaskInstance/Logs/TaskLogHeader.tsx",
        "discussion_id": "2127091471",
        "commented_code": "@@ -178,20 +200,57 @@ export const TaskLogHeader = ({\n             </Select.Content>\n           </Select.Root>\n         ) : undefined}\n-        <HStack>\n+        <HStack gap={1}>\n           <Tooltip closeDelay={100} content=\"Press w to toggle wrap\" openDelay={100}>\n             <Button\n+              _hover={{ bg: \"gray.800\" }}\n               aria-label={wrap ? \"Unwrap\" : \"Wrap\"}\n-              bg=\"bg.panel\"\n+              bg=\"black\"\n+              color=\"white\"\n+              m={0}\n               onClick={toggleWrap}\n+              px={4}\n+              py={2}\n               variant=\"outline\"\n             >\n               {wrap ? \"Unwrap\" : \"Wrap\"}\n             </Button>\n           </Tooltip>\n+          {toggleExpanded ? (\n+            <Tooltip\n+              closeDelay={100}\n+              content={expanded ? \"Press e to collapse\" : \"Press e to expand\"}\n+              openDelay={100}\n+            >\n+              <Button\n+                _hover={{ bg: \"gray.800\" }}\n+                aria-label={expanded ? \"Collapse All\" : \"Expand\"}\n+                bg=\"black\"\n+                color=\"white\"\n+                m={0}\n+                onClick={toggleExpanded}\n+                px={4}\n+                py={2}\n+                size=\"md\"\n+                variant=\"outline\"\n+              >\n+                {expanded ? \"Collapse All\" : \"Expand \"}\n+              </Button>\n+            </Tooltip>\n+          ) : undefined}\n           {!isFullscreen && (\n             <Tooltip closeDelay={100} content=\"Press f for fullscreen\" openDelay={100}>\n-              <IconButton aria-label=\"Full screen\" bg=\"bg.panel\" onClick={toggleFullscreen} variant=\"outline\">\n+              <IconButton\n+                _hover={{ bg: \"gray.800\" }}",
        "comment_created_at": "2025-06-04T17:23:04+00:00",
        "comment_author": "bbovenzi",
        "comment_body": "Let's use the semantic colors here. \r\n```suggestion\r\n                _hover={{ bg: \"bg.emphasized\" }}\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2141347937",
        "repo_full_name": "apache/airflow",
        "pr_number": 51146,
        "pr_file": "airflow-core/src/airflow/ui/src/pages/TaskInstance/Logs/TaskLogHeader.tsx",
        "discussion_id": "2127091471",
        "commented_code": "@@ -178,20 +200,57 @@ export const TaskLogHeader = ({\n             </Select.Content>\n           </Select.Root>\n         ) : undefined}\n-        <HStack>\n+        <HStack gap={1}>\n           <Tooltip closeDelay={100} content=\"Press w to toggle wrap\" openDelay={100}>\n             <Button\n+              _hover={{ bg: \"gray.800\" }}\n               aria-label={wrap ? \"Unwrap\" : \"Wrap\"}\n-              bg=\"bg.panel\"\n+              bg=\"black\"\n+              color=\"white\"\n+              m={0}\n               onClick={toggleWrap}\n+              px={4}\n+              py={2}\n               variant=\"outline\"\n             >\n               {wrap ? \"Unwrap\" : \"Wrap\"}\n             </Button>\n           </Tooltip>\n+          {toggleExpanded ? (\n+            <Tooltip\n+              closeDelay={100}\n+              content={expanded ? \"Press e to collapse\" : \"Press e to expand\"}\n+              openDelay={100}\n+            >\n+              <Button\n+                _hover={{ bg: \"gray.800\" }}\n+                aria-label={expanded ? \"Collapse All\" : \"Expand\"}\n+                bg=\"black\"\n+                color=\"white\"\n+                m={0}\n+                onClick={toggleExpanded}\n+                px={4}\n+                py={2}\n+                size=\"md\"\n+                variant=\"outline\"\n+              >\n+                {expanded ? \"Collapse All\" : \"Expand \"}\n+              </Button>\n+            </Tooltip>\n+          ) : undefined}\n           {!isFullscreen && (\n             <Tooltip closeDelay={100} content=\"Press f for fullscreen\" openDelay={100}>\n-              <IconButton aria-label=\"Full screen\" bg=\"bg.panel\" onClick={toggleFullscreen} variant=\"outline\">\n+              <IconButton\n+                _hover={{ bg: \"gray.800\" }}",
        "comment_created_at": "2025-06-12T01:27:11+00:00",
        "comment_author": "davidfgcorreia",
        "comment_body": "Also changed the warp buton to this houver style",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2184780802",
    "pr_number": 52795,
    "pr_file": "airflow-core/src/airflow/ui/src/router.tsx",
    "created_at": "2025-07-04T08:57:17+00:00",
    "commented_code": "{ element: <TaskOverview />, index: true },\n           { element: <TaskInstances />, path: \"task_instances\" },\n           { element: <Events />, path: \"events\" },\n+          {\n+            // The following iframe sandbox setting is intentionally less restrictive.\n+            // This is considered safe because the framed content originates from the Plugins,\n+            // which is part of the deployment of Airflow and trusted as per our security policy.\n+            // https://airflow.apache.org/docs/apache-airflow/stable/security/security_model.html\n+            // They are not user provided plugins.\n+            element: <Iframe sandbox=\"allow-scripts allow-same-origin allow-forms\" />,\n+            path: \"plugin/:page\",\n+          },",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2184780802",
        "repo_full_name": "apache/airflow",
        "pr_number": 52795,
        "pr_file": "airflow-core/src/airflow/ui/src/router.tsx",
        "discussion_id": "2184780802",
        "commented_code": "@@ -208,6 +257,15 @@ export const routerConfig = [\n           { element: <TaskOverview />, index: true },\n           { element: <TaskInstances />, path: \"task_instances\" },\n           { element: <Events />, path: \"events\" },\n+          {\n+            // The following iframe sandbox setting is intentionally less restrictive.\n+            // This is considered safe because the framed content originates from the Plugins,\n+            // which is part of the deployment of Airflow and trusted as per our security policy.\n+            // https://airflow.apache.org/docs/apache-airflow/stable/security/security_model.html\n+            // They are not user provided plugins.\n+            element: <Iframe sandbox=\"allow-scripts allow-same-origin allow-forms\" />,\n+            path: \"plugin/:page\",\n+          },",
        "comment_created_at": "2025-07-04T08:57:17+00:00",
        "comment_author": "pierrejeambrun",
        "comment_body": "Maybe extract this into a really small fn. \"getPluginIframeRoute\" or something, in the same file.\r\n\r\nJust so the comment, and how to construct the iframe component remains in one place and not copy pasted everywhere. I'm scared of someone updating in one place and not in other occurrences. (That doens't cost much to do and would help preventing mistakes in the future)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2146975484",
    "pr_number": 51667,
    "pr_file": "airflow-core/src/airflow/ui/src/layouts/Details/Gantt/Gantt.tsx",
    "created_at": "2025-06-14T14:49:52+00:00",
    "commented_code": "+/*!\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import { Box } from \"@chakra-ui/react\";\n+import {\n+  Chart as ChartJS,\n+  CategoryScale,\n+  LinearScale,\n+  PointElement,\n+  LineElement,\n+  BarElement,\n+  Filler,\n+  Title,\n+  Tooltip,\n+  Legend,\n+  TimeScale,\n+} from \"chart.js\";\n+import \"chart.js/auto\";\n+import \"chartjs-adapter-dayjs-4/dist/chartjs-adapter-dayjs-4.esm\";\n+import annotationPlugin from \"chartjs-plugin-annotation\";\n+import dayjs from \"dayjs\";\n+import { useMemo, useRef } from \"react\";\n+import { Bar } from \"react-chartjs-2\";\n+import { useTranslation } from \"react-i18next\";\n+import { useParams } from \"react-router-dom\";\n+\n+import { useOpenGroups } from \"src/context/openGroups\";\n+import { useTimezone } from \"src/context/timezone\";\n+import { flattenNodes } from \"src/layouts/Details/Grid/utils\";\n+import { useGrid } from \"src/queries/useGrid\";\n+import { system } from \"src/theme\";\n+import { getDuration } from \"src/utils\";\n+\n+ChartJS.register(\n+  CategoryScale,\n+  LinearScale,\n+  PointElement,\n+  BarElement,\n+  LineElement,\n+  Filler,\n+  Title,\n+  Tooltip,\n+  Legend,\n+  annotationPlugin,\n+  TimeScale,\n+);\n+\n+const CHART_PADDING = 38;\n+const CHART_ROW_HEIGHT = 20;\n+\n+export const Gantt = () => {\n+  const { groupId: selectedGroupId, runId, taskId: selectedTaskId } = useParams();\n+  const { openGroupIds } = useOpenGroups();\n+  const { t: translate } = useTranslation(\"common\");\n+  const { selectedTimezone } = useTimezone();\n+  const ref = useRef();\n+\n+  const { data: gridData, isLoading } = useGrid();\n+\n+  const { flatNodes } = useMemo(\n+    () => flattenNodes(gridData === undefined ? [] : gridData.structure.nodes, openGroupIds),\n+    [gridData, openGroupIds],\n+  );\n+\n+  const runs = gridData?.dag_runs ?? [];\n+\n+  const taskInstances = runs.find((run) => run.dag_run_id === runId)?.task_instances;\n+\n+  if (isLoading || taskInstances === undefined || runId === undefined) {\n+    return undefined;\n+  }\n+\n+  const validTaskInstances = flatNodes\n+    .map((node) => taskInstances.find((ti) => ti.task_id === node.id))\n+    .filter((ti) => ti !== undefined);\n+\n+  const data = validTaskInstances.map((taskInstance) => ({\n+    state: taskInstance.state,\n+    x: [\n+      dayjs(taskInstance.start_date).tz(selectedTimezone).format(\"YYYY-MM-DD HH:mm:ss.SSS\"),",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2146975484",
        "repo_full_name": "apache/airflow",
        "pr_number": 51667,
        "pr_file": "airflow-core/src/airflow/ui/src/layouts/Details/Gantt/Gantt.tsx",
        "discussion_id": "2146975484",
        "commented_code": "@@ -0,0 +1,210 @@\n+/*!\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import { Box } from \"@chakra-ui/react\";\n+import {\n+  Chart as ChartJS,\n+  CategoryScale,\n+  LinearScale,\n+  PointElement,\n+  LineElement,\n+  BarElement,\n+  Filler,\n+  Title,\n+  Tooltip,\n+  Legend,\n+  TimeScale,\n+} from \"chart.js\";\n+import \"chart.js/auto\";\n+import \"chartjs-adapter-dayjs-4/dist/chartjs-adapter-dayjs-4.esm\";\n+import annotationPlugin from \"chartjs-plugin-annotation\";\n+import dayjs from \"dayjs\";\n+import { useMemo, useRef } from \"react\";\n+import { Bar } from \"react-chartjs-2\";\n+import { useTranslation } from \"react-i18next\";\n+import { useParams } from \"react-router-dom\";\n+\n+import { useOpenGroups } from \"src/context/openGroups\";\n+import { useTimezone } from \"src/context/timezone\";\n+import { flattenNodes } from \"src/layouts/Details/Grid/utils\";\n+import { useGrid } from \"src/queries/useGrid\";\n+import { system } from \"src/theme\";\n+import { getDuration } from \"src/utils\";\n+\n+ChartJS.register(\n+  CategoryScale,\n+  LinearScale,\n+  PointElement,\n+  BarElement,\n+  LineElement,\n+  Filler,\n+  Title,\n+  Tooltip,\n+  Legend,\n+  annotationPlugin,\n+  TimeScale,\n+);\n+\n+const CHART_PADDING = 38;\n+const CHART_ROW_HEIGHT = 20;\n+\n+export const Gantt = () => {\n+  const { groupId: selectedGroupId, runId, taskId: selectedTaskId } = useParams();\n+  const { openGroupIds } = useOpenGroups();\n+  const { t: translate } = useTranslation(\"common\");\n+  const { selectedTimezone } = useTimezone();\n+  const ref = useRef();\n+\n+  const { data: gridData, isLoading } = useGrid();\n+\n+  const { flatNodes } = useMemo(\n+    () => flattenNodes(gridData === undefined ? [] : gridData.structure.nodes, openGroupIds),\n+    [gridData, openGroupIds],\n+  );\n+\n+  const runs = gridData?.dag_runs ?? [];\n+\n+  const taskInstances = runs.find((run) => run.dag_run_id === runId)?.task_instances;\n+\n+  if (isLoading || taskInstances === undefined || runId === undefined) {\n+    return undefined;\n+  }\n+\n+  const validTaskInstances = flatNodes\n+    .map((node) => taskInstances.find((ti) => ti.task_id === node.id))\n+    .filter((ti) => ti !== undefined);\n+\n+  const data = validTaskInstances.map((taskInstance) => ({\n+    state: taskInstance.state,\n+    x: [\n+      dayjs(taskInstance.start_date).tz(selectedTimezone).format(\"YYYY-MM-DD HH:mm:ss.SSS\"),",
        "comment_created_at": "2025-06-14T14:49:52+00:00",
        "comment_author": "bbovenzi",
        "comment_body": "Want to put the format as a const string at the top of the file or in datetimeUtils.ts? We repeat it a lot",
        "pr_file_module": null
      }
    ]
  }
]