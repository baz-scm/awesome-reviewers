[
  {
    "discussion_id": "2161706063",
    "pr_number": 51657,
    "pr_file": "airflow-core/src/airflow/ui/src/utils/tokenHandler.ts",
    "created_at": "2025-06-23T13:57:43+00:00",
    "commented_code": "return undefined;\n };\n \n+const getRefreshedTokenFromCookies = (): string | undefined => {\n+  const cookies = document.cookie.split(\";\");\n+\n+  for (const cookie of cookies) {\n+    const [name, token] = cookie.split(\"=\");\n+\n+    if (name?.trim() === \"_refresh_token\" && token !== undefined) {\n+      setToken(token);\n+      clearRefreshTokenCookie();\n+\n+      return token;\n+    }\n+  }\n+\n+  return undefined;\n+};\n+\n export const tokenHandler = (config: InternalAxiosRequestConfig) => {\n+  const refreshToken = getRefreshedTokenFromCookies();\n+\n+  if (refreshToken !== undefined && localStorage.getItem(TOKEN_STORAGE_KEY) !== refreshToken) {\n+    config.headers.Authorization = `Bearer ${refreshToken}`;\n+\n+    return config;\n+  }\n+\n   const token = localStorage.getItem(TOKEN_STORAGE_KEY) ?? getTokenFromCookies();",
    "repo_full_name": "apache/airflow",
    "discussion_comments": [
      {
        "comment_id": "2161706063",
        "repo_full_name": "apache/airflow",
        "pr_number": 51657,
        "pr_file": "airflow-core/src/airflow/ui/src/utils/tokenHandler.ts",
        "discussion_id": "2161706063",
        "commented_code": "@@ -36,7 +45,32 @@ const getTokenFromCookies = (): string | undefined => {\n   return undefined;\n };\n \n+const getRefreshedTokenFromCookies = (): string | undefined => {\n+  const cookies = document.cookie.split(\";\");\n+\n+  for (const cookie of cookies) {\n+    const [name, token] = cookie.split(\"=\");\n+\n+    if (name?.trim() === \"_refresh_token\" && token !== undefined) {\n+      setToken(token);\n+      clearRefreshTokenCookie();\n+\n+      return token;\n+    }\n+  }\n+\n+  return undefined;\n+};\n+\n export const tokenHandler = (config: InternalAxiosRequestConfig) => {\n+  const refreshToken = getRefreshedTokenFromCookies();\n+\n+  if (refreshToken !== undefined && localStorage.getItem(TOKEN_STORAGE_KEY) !== refreshToken) {\n+    config.headers.Authorization = `Bearer ${refreshToken}`;\n+\n+    return config;\n+  }\n+\n   const token = localStorage.getItem(TOKEN_STORAGE_KEY) ?? getTokenFromCookies();",
        "comment_created_at": "2025-06-23T13:57:43+00:00",
        "comment_author": "vincbeck",
        "comment_body": "That should be the only change you need in the UI to make it work\r\n\r\n```suggestion\r\n  const token = getTokenFromCookies() ?? localStorage.getItem(TOKEN_STORAGE_KEY);\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2162434874",
        "repo_full_name": "apache/airflow",
        "pr_number": 51657,
        "pr_file": "airflow-core/src/airflow/ui/src/utils/tokenHandler.ts",
        "discussion_id": "2161706063",
        "commented_code": "@@ -36,7 +45,32 @@ const getTokenFromCookies = (): string | undefined => {\n   return undefined;\n };\n \n+const getRefreshedTokenFromCookies = (): string | undefined => {\n+  const cookies = document.cookie.split(\";\");\n+\n+  for (const cookie of cookies) {\n+    const [name, token] = cookie.split(\"=\");\n+\n+    if (name?.trim() === \"_refresh_token\" && token !== undefined) {\n+      setToken(token);\n+      clearRefreshTokenCookie();\n+\n+      return token;\n+    }\n+  }\n+\n+  return undefined;\n+};\n+\n export const tokenHandler = (config: InternalAxiosRequestConfig) => {\n+  const refreshToken = getRefreshedTokenFromCookies();\n+\n+  if (refreshToken !== undefined && localStorage.getItem(TOKEN_STORAGE_KEY) !== refreshToken) {\n+    config.headers.Authorization = `Bearer ${refreshToken}`;\n+\n+    return config;\n+  }\n+\n   const token = localStorage.getItem(TOKEN_STORAGE_KEY) ?? getTokenFromCookies();",
        "comment_created_at": "2025-06-23T20:02:13+00:00",
        "comment_author": "bugraoz93",
        "comment_body": "Yes, especially after reverting the key changes",
        "pr_file_module": null
      }
    ]
  }
]