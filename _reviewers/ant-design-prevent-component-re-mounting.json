[
  {
    "discussion_id": "2311945627",
    "pr_number": 54819,
    "pr_file": "components/tooltip/index.tsx",
    "created_at": "2025-08-30T13:35:52+00:00",
    "commented_code": ");\n });\n \n+type LazyProps = {\n+  children: React.ReactNode;\n+} & Omit<TooltipProps, 'children'>;\n+\n+const LazyComponent = ({ children, ...props }: LazyProps) => {\n+  const [lazy, setLazy] = React.useState(true);\n+  if (lazy) {\n+    return (",
    "repo_full_name": "ant-design/ant-design",
    "discussion_comments": [
      {
        "comment_id": "2311945627",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 54819,
        "pr_file": "components/tooltip/index.tsx",
        "discussion_id": "2311945627",
        "commented_code": "@@ -371,12 +371,35 @@ const InternalTooltip = React.forwardRef<TooltipRef, TooltipProps>((props, ref)\n   );\n });\n \n+type LazyProps = {\n+  children: React.ReactNode;\n+} & Omit<TooltipProps, 'children'>;\n+\n+const LazyComponent = ({ children, ...props }: LazyProps) => {\n+  const [lazy, setLazy] = React.useState(true);\n+  if (lazy) {\n+    return (",
        "comment_created_at": "2025-08-30T13:35:52+00:00",
        "comment_author": "zombieJ",
        "comment_body": "\u4e0d\u80fd\u8fd9\u4e48\u5199\uff0c\u5b50\u5143\u7d20\u4f1a re-mount\u3002\r\n\r\n\u76f8\u5173 issue \u662f\u4ec0\u4e48\uff1f\u63cf\u8ff0\u91cc\u5173\u8054\u7684\u770b\u8d77\u6765\u4e0d\u5bf9\u3002",
        "pr_file_module": null
      },
      {
        "comment_id": "2313873836",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 54819,
        "pr_file": "components/tooltip/index.tsx",
        "discussion_id": "2311945627",
        "commented_code": "@@ -371,12 +371,35 @@ const InternalTooltip = React.forwardRef<TooltipRef, TooltipProps>((props, ref)\n   );\n });\n \n+type LazyProps = {\n+  children: React.ReactNode;\n+} & Omit<TooltipProps, 'children'>;\n+\n+const LazyComponent = ({ children, ...props }: LazyProps) => {\n+  const [lazy, setLazy] = React.useState(true);\n+  if (lazy) {\n+    return (",
        "comment_created_at": "2025-09-01T12:49:14+00:00",
        "comment_author": "gavanx",
        "comment_body": "\u66f4\u65b0\u4e86\u63cf\u8ff0\uff0c\u662f\u8fd9\u4e2a https://github.com/ant-design/ant-design/pull/54700\r\n\u9f20\u6807hover \u53d8false\u540emount\u771f\u5b9e\u7684tooltip\uff0c\u540e\u7eed\u4e0dre-mount",
        "pr_file_module": null
      },
      {
        "comment_id": "2314791983",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 54819,
        "pr_file": "components/tooltip/index.tsx",
        "discussion_id": "2311945627",
        "commented_code": "@@ -371,12 +371,35 @@ const InternalTooltip = React.forwardRef<TooltipRef, TooltipProps>((props, ref)\n   );\n });\n \n+type LazyProps = {\n+  children: React.ReactNode;\n+} & Omit<TooltipProps, 'children'>;\n+\n+const LazyComponent = ({ children, ...props }: LazyProps) => {\n+  const [lazy, setLazy] = React.useState(true);\n+  if (lazy) {\n+    return (",
        "comment_created_at": "2025-09-02T02:40:39+00:00",
        "comment_author": "zombieJ",
        "comment_body": "\u6240\u4ee5\u4e0d\u80fd\u8fd9\u4e48\u5199\u3002\r\n\u521d\u59cb\u5316\u4e00\u4e2a children\uff0chover \u540e\u53c8 unmount children \u518d mount \u4e00\u4e2a\u65b0\u7684 children\u3002\u5bf9\u4e8e\u6709 mount effect \u7684\u5b50\u5143\u7d20\u662f break \u7684\u3002",
        "pr_file_module": null
      },
      {
        "comment_id": "2314846374",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 54819,
        "pr_file": "components/tooltip/index.tsx",
        "discussion_id": "2311945627",
        "commented_code": "@@ -371,12 +371,35 @@ const InternalTooltip = React.forwardRef<TooltipRef, TooltipProps>((props, ref)\n   );\n });\n \n+type LazyProps = {\n+  children: React.ReactNode;\n+} & Omit<TooltipProps, 'children'>;\n+\n+const LazyComponent = ({ children, ...props }: LazyProps) => {\n+  const [lazy, setLazy] = React.useState(true);\n+  if (lazy) {\n+    return (",
        "comment_created_at": "2025-09-02T03:48:27+00:00",
        "comment_author": "zombieJ",
        "comment_body": "\u53e6\u5916\uff0cReact \u5b98\u65b9\u662f\u4e0d\u63a8\u8350\u63d0\u524d\u4f18\u5316\uff0c\u53ea\u6709\u5728\u4e1a\u52a1\u91cc\u786e\u5b9e\u9047\u5230\u6027\u80fd\u95ee\u9898\u518d\u505a\u4f18\u5316\uff0c\u5f00\u53d1\u73af\u5883\u7684\u6027\u80fd\u95ee\u9898\u4e0d\u7528\u8003\u8651\u3002\r\n\r\n> https://react.dev/learn/render-and-commit#optimizing-performance\r\n> The default behavior of rendering all components nested within the updated component is not optimal for performance if the updated component is very high in the tree. If you run into a performance issue, there are several opt-in ways to solve it described in the [Performance](https://reactjs.org/docs/optimizing-performance.html) section. Don\u2019t optimize **prematurely**!\r\n\r\n\u6211\u6d4b\u8bd5\u4e86\u91cd\u73b0\u91cc\u7684\u4ee3\u7801\uff0c\u5728\u7ecf\u8fc7\u4e0a\u6b21\u7684\u4f18\u5316\u540e\u5f00\u53d1\u6a21\u5f0f\u6e32\u67d3 2000 \u4e2a Tooltip\uff08\u91cd\u73b0\u4e2d\u4e3a 30 * 50 = 1500 \u4e2a Tooltip\uff09\uff1a\r\n\r\n<img width=\"521\" height=\"140\" alt=\"\u622a\u5c4f2025-09-02 11 45 42\" src=\"https://github.com/user-attachments/assets/0311f6f7-89e8-4f2c-af84-e270b9a815c7\" />\r\n\r\n\u5176\u4e2d\u6027\u80fd\u635f\u8017\u4e3b\u8981\u6765\u81ea\u4e8e React Dev \u81ea\u8eab\uff1a\r\n\r\n<img width=\"419\" height=\"76\" alt=\"\u622a\u5c4f2025-09-02 11 46 33\" src=\"https://github.com/user-attachments/assets/ba877a5f-2093-4811-9bf5-02701ed8181c\" />\r\n\r\n\u7b2c\u4e00\u4e2a run\uff1a\r\n<img width=\"445\" height=\"67\" alt=\"\u622a\u5c4f2025-09-02 11 47 00\" src=\"https://github.com/user-attachments/assets/d084bce7-6c6d-4ebe-952b-7ee4ad735782\" />\r\n\r\n\u53e6\u4e00\u4e2a run:\r\n<img width=\"431\" height=\"74\" alt=\"\u622a\u5c4f2025-09-02 11 47 14\" src=\"https://github.com/user-attachments/assets/326b70f1-a6d8-4fa7-94ef-2ecb9fee93c5\" />\r\n\r\n\u5f53\u7f16\u8bd1\u5b8c\u540e\uff08\u5373\u4f7f\u7528 React Production Build\uff09\uff1a\r\n<img width=\"408\" height=\"141\" alt=\"\u622a\u5c4f2025-09-02 11 48 15\" src=\"https://github.com/user-attachments/assets/aac1fb52-67bd-4a7c-b172-dd2cd4e73240\" />\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2280391994",
    "pr_number": 54700,
    "pr_file": "components/tooltip/index.tsx",
    "created_at": "2025-08-16T12:07:53+00:00",
    "commented_code": ");\n });\n \n+type LazyProps = {\n+  children: React.ReactNode;\n+} & Omit<TooltipProps, 'children'>;\n+\n+const LazyComponent = ({ children, ...props }: LazyProps) => {\n+  const [lazy, setLazy] = React.useState(true);\n+  if (lazy) {\n+    return (\n+      <div\n+        className={props.classNames?.lazy}\n+        style={props.styles?.lazy}\n+        onMouseEnter={() => setLazy(false)}\n+      >\n+        {children}\n+      </div>\n+    );\n+  }\n+  return <InternalTooltip {...props}>{children}</InternalTooltip>;\n+};",
    "repo_full_name": "ant-design/ant-design",
    "discussion_comments": [
      {
        "comment_id": "2280397156",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 54700,
        "pr_file": "components/tooltip/index.tsx",
        "discussion_id": "2280391994",
        "commented_code": "@@ -371,12 +371,35 @@ const InternalTooltip = React.forwardRef<TooltipRef, TooltipProps>((props, ref)\n   );\n });\n \n+type LazyProps = {\n+  children: React.ReactNode;\n+} & Omit<TooltipProps, 'children'>;\n+\n+const LazyComponent = ({ children, ...props }: LazyProps) => {\n+  const [lazy, setLazy] = React.useState(true);\n+  if (lazy) {\n+    return (\n+      <div\n+        className={props.classNames?.lazy}\n+        style={props.styles?.lazy}\n+        onMouseEnter={() => setLazy(false)}\n+      >\n+        {children}\n+      </div>\n+    );\n+  }\n+  return <InternalTooltip {...props}>{children}</InternalTooltip>;\n+};",
        "comment_created_at": "2025-08-16T12:07:53+00:00",
        "comment_author": "gavanx",
        "comment_body": "hover\u53ef\u5e73\u6ed1\u5207\u5230tooltip\uff0c\u4f46click\u3001focus\u7b49\u9700\u8981\u518d\u5bf9tooltip\u5b9e\u4f8b\u89e6\u53d1\u4e00\u6b21",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2104060004",
    "pr_number": 53902,
    "pr_file": "components/config-provider/MotionWrapper.tsx",
    "created_at": "2025-05-23T08:13:22+00:00",
    "commented_code": "const [, token] = useToken();\n   const { motion } = token;\n \n-  const needWrapMotionProviderRef = React.useRef(false);\n-  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n-\n-  if (needWrapMotionProviderRef.current) {\n+  if (motion) {",
    "repo_full_name": "ant-design/ant-design",
    "discussion_comments": [
      {
        "comment_id": "2104065009",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 53902,
        "pr_file": "components/config-provider/MotionWrapper.tsx",
        "discussion_id": "2104060004",
        "commented_code": "@@ -12,10 +12,7 @@ export default function MotionWrapper(props: MotionWrapperProps): React.ReactEle\n   const [, token] = useToken();\n   const { motion } = token;\n \n-  const needWrapMotionProviderRef = React.useRef(false);\n-  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n-\n-  if (needWrapMotionProviderRef.current) {\n+  if (motion) {",
        "comment_created_at": "2025-05-23T08:13:22+00:00",
        "comment_author": "zombieJ",
        "comment_body": "\u8fd9\u4e2a ref \u662f\u4e3a\u4e86\u4fdd\u6301\u7ed3\u6784\u7a33\u5b9a\uff0c\u9632\u6b62 motion \u5207\u6362\u5bfc\u81f4\u5b50\u5143\u7d20\u6765\u56de\u5378\u8f7d/\u91cd\u88c5",
        "pr_file_module": null
      },
      {
        "comment_id": "2104141452",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 53902,
        "pr_file": "components/config-provider/MotionWrapper.tsx",
        "discussion_id": "2104060004",
        "commented_code": "@@ -12,10 +12,7 @@ export default function MotionWrapper(props: MotionWrapperProps): React.ReactEle\n   const [, token] = useToken();\n   const { motion } = token;\n \n-  const needWrapMotionProviderRef = React.useRef(false);\n-  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n-\n-  if (needWrapMotionProviderRef.current) {\n+  if (motion) {",
        "comment_created_at": "2025-05-23T08:53:19+00:00",
        "comment_author": "wanpan11",
        "comment_body": "\u90a3\u662f\u4e0d\u662f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de <MotionProvider motion={motion}>{children}</MotionProvider>  \r\n\r\nmotion = true \u662f\u76f4\u63a5\u8fd4\u56de\u7684 children\uff0c\u5bfc\u81f4 CSSMotion \u53d6\u5f97\u8fd8\u662f\u4e0a\u5c42\u7684 MotionProvider \u7684\u503c",
        "pr_file_module": null
      },
      {
        "comment_id": "2108463546",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 53902,
        "pr_file": "components/config-provider/MotionWrapper.tsx",
        "discussion_id": "2104060004",
        "commented_code": "@@ -12,10 +12,7 @@ export default function MotionWrapper(props: MotionWrapperProps): React.ReactEle\n   const [, token] = useToken();\n   const { motion } = token;\n \n-  const needWrapMotionProviderRef = React.useRef(false);\n-  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n-\n-  if (needWrapMotionProviderRef.current) {\n+  if (motion) {",
        "comment_created_at": "2025-05-27T07:50:41+00:00",
        "comment_author": "zombieJ",
        "comment_body": "\u90a3\u542c\u8d77\u6765\u53ef\u4ee5\u5224\u65ad motion \u662f\u5426\u662f boolean\uff0c\u5982\u679c\u662f\u5c31\u8bb0\u5f55\u5e76\u4e14\u5305\u4e00\u5c42\u5c31\u597d\u4e86\uff1f",
        "pr_file_module": null
      },
      {
        "comment_id": "2108518308",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 53902,
        "pr_file": "components/config-provider/MotionWrapper.tsx",
        "discussion_id": "2104060004",
        "commented_code": "@@ -12,10 +12,7 @@ export default function MotionWrapper(props: MotionWrapperProps): React.ReactEle\n   const [, token] = useToken();\n   const { motion } = token;\n \n-  const needWrapMotionProviderRef = React.useRef(false);\n-  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n-\n-  if (needWrapMotionProviderRef.current) {\n+  if (motion) {",
        "comment_created_at": "2025-05-27T08:06:31+00:00",
        "comment_author": "wanpan11",
        "comment_body": "\u7b2c\u4e00\u5c42  motion = true \u7b2c\u4e8c\u5c42  motion = false    \u7b2c\u4e8c\u5c42\u751f\u6548\r\n\u7b2c\u4e00\u5c42  motion = false \u7b2c\u4e8c\u5c42  motion = true    \u7b2c\u4e8c\u5c42\u6ca1\u751f\u6548(bug)\r\n\r\nmotion \u9ed8\u8ba4\u5c31\u662f true \u4e0d\u9700\u8981\u5224\u65ad\u662f\u5426\u662f boolean \u4e86\u5427\ud83d\ude36\u200d\ud83c\udf2b\ufe0f",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2125821470",
    "pr_number": 53902,
    "pr_file": "components/config-provider/MotionWrapper.tsx",
    "created_at": "2025-06-04T06:58:03+00:00",
    "commented_code": "import { useToken } from '../theme/internal';\n \n+const MotionCacheContext = React.createContext({ parentMotion: true });\n+if (process.env.NODE_ENV !== 'production') {\n+  MotionCacheContext.displayName = 'MotionCacheContext';\n+}\n+\n export interface MotionWrapperProps {\n   children?: React.ReactNode;\n }\n \n export default function MotionWrapper(props: MotionWrapperProps): React.ReactElement {\n+  const { parentMotion } = React.useContext(MotionCacheContext);\n+\n   const { children } = props;\n   const [, token] = useToken();\n   const { motion } = token;\n \n-  const needWrapMotionProviderRef = React.useRef(false);\n-  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n-\n-  if (needWrapMotionProviderRef.current) {\n-    return <MotionProvider motion={motion}>{children}</MotionProvider>;\n+  let node = children as React.ReactElement;\n+  if (parentMotion !== motion) {",
    "repo_full_name": "ant-design/ant-design",
    "discussion_comments": [
      {
        "comment_id": "2125821470",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 53902,
        "pr_file": "components/config-provider/MotionWrapper.tsx",
        "discussion_id": "2125821470",
        "commented_code": "@@ -3,21 +3,30 @@ import { Provider as MotionProvider } from 'rc-motion';\n \n import { useToken } from '../theme/internal';\n \n+const MotionCacheContext = React.createContext({ parentMotion: true });\n+if (process.env.NODE_ENV !== 'production') {\n+  MotionCacheContext.displayName = 'MotionCacheContext';\n+}\n+\n export interface MotionWrapperProps {\n   children?: React.ReactNode;\n }\n \n export default function MotionWrapper(props: MotionWrapperProps): React.ReactElement {\n+  const { parentMotion } = React.useContext(MotionCacheContext);\n+\n   const { children } = props;\n   const [, token] = useToken();\n   const { motion } = token;\n \n-  const needWrapMotionProviderRef = React.useRef(false);\n-  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n-\n-  if (needWrapMotionProviderRef.current) {\n-    return <MotionProvider motion={motion}>{children}</MotionProvider>;\n+  let node = children as React.ReactElement;\n+  if (parentMotion !== motion) {",
        "comment_created_at": "2025-06-04T06:58:03+00:00",
        "comment_author": "zombieJ",
        "comment_body": "\u8fd9\u91cc\u8fd8\u662f\u9700\u8981\u539f\u6765\u7684 ref \u6765\u8bb0\u5f55\u4e00\u4e0b\u662f\u5426\u6709\u6e32\u67d3\u8fc7 MotionCacheContext\uff0c\u5982\u679c\u6709\u7684\u8bdd\u3002\u65e0\u8bba\u662f\u5426\u76f8\u540c\uff0c\u90fd\u9700\u8981\u6e32\u67d3 MotionCacheContext",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2125826461",
    "pr_number": 53902,
    "pr_file": "components/config-provider/MotionWrapper.tsx",
    "created_at": "2025-06-04T06:59:50+00:00",
    "commented_code": "import { useToken } from '../theme/internal';\n \n+const MotionCacheContext = React.createContext({ parentMotion: true });",
    "repo_full_name": "ant-design/ant-design",
    "discussion_comments": [
      {
        "comment_id": "2125826461",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 53902,
        "pr_file": "components/config-provider/MotionWrapper.tsx",
        "discussion_id": "2125826461",
        "commented_code": "@@ -3,21 +3,30 @@ import { Provider as MotionProvider } from 'rc-motion';\n \n import { useToken } from '../theme/internal';\n \n+const MotionCacheContext = React.createContext({ parentMotion: true });",
        "comment_created_at": "2025-06-04T06:59:50+00:00",
        "comment_author": "zombieJ",
        "comment_body": "\u8fd9\u8fb9\u5b9a\u4e49\u76f4\u63a5\u662f boolean \u5c31\u884c\u4e86\uff0c\u4e0d\u9700\u8981\u5305 object\uff0c\u5426\u5219\u5b50\u5143\u7d20\u91cc\u6d88\u8d39 Context \u7684\u65f6\u5019\u4e0a\u5c42\u53d8\u5316\u4f1a\u5bfc\u81f4 memo \u88ab\u7a7f\u900f\u3002",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2125830274",
    "pr_number": 53902,
    "pr_file": "components/config-provider/MotionWrapper.tsx",
    "created_at": "2025-06-04T07:01:17+00:00",
    "commented_code": "import { useToken } from '../theme/internal';\n \n+const MotionCacheContext = React.createContext({ parentMotion: true });\n+if (process.env.NODE_ENV !== 'production') {\n+  MotionCacheContext.displayName = 'MotionCacheContext';\n+}\n+\n export interface MotionWrapperProps {\n   children?: React.ReactNode;\n }\n \n export default function MotionWrapper(props: MotionWrapperProps): React.ReactElement {\n+  const { parentMotion } = React.useContext(MotionCacheContext);\n+\n   const { children } = props;\n   const [, token] = useToken();\n   const { motion } = token;\n \n-  const needWrapMotionProviderRef = React.useRef(false);\n-  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n-\n-  if (needWrapMotionProviderRef.current) {\n-    return <MotionProvider motion={motion}>{children}</MotionProvider>;\n+  let node = children as React.ReactElement;\n+  if (parentMotion !== motion) {\n+    node = <MotionProvider motion={motion}>{children}</MotionProvider>;\n   }\n \n-  return children as React.ReactElement;\n+  return (\n+    <MotionCacheContext.Provider value={{ parentMotion: motion }}>",
    "repo_full_name": "ant-design/ant-design",
    "discussion_comments": [
      {
        "comment_id": "2125830274",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 53902,
        "pr_file": "components/config-provider/MotionWrapper.tsx",
        "discussion_id": "2125830274",
        "commented_code": "@@ -3,21 +3,30 @@ import { Provider as MotionProvider } from 'rc-motion';\n \n import { useToken } from '../theme/internal';\n \n+const MotionCacheContext = React.createContext({ parentMotion: true });\n+if (process.env.NODE_ENV !== 'production') {\n+  MotionCacheContext.displayName = 'MotionCacheContext';\n+}\n+\n export interface MotionWrapperProps {\n   children?: React.ReactNode;\n }\n \n export default function MotionWrapper(props: MotionWrapperProps): React.ReactElement {\n+  const { parentMotion } = React.useContext(MotionCacheContext);\n+\n   const { children } = props;\n   const [, token] = useToken();\n   const { motion } = token;\n \n-  const needWrapMotionProviderRef = React.useRef(false);\n-  needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n-\n-  if (needWrapMotionProviderRef.current) {\n-    return <MotionProvider motion={motion}>{children}</MotionProvider>;\n+  let node = children as React.ReactElement;\n+  if (parentMotion !== motion) {\n+    node = <MotionProvider motion={motion}>{children}</MotionProvider>;\n   }\n \n-  return children as React.ReactElement;\n+  return (\n+    <MotionCacheContext.Provider value={{ parentMotion: motion }}>",
        "comment_created_at": "2025-06-04T07:01:17+00:00",
        "comment_author": "zombieJ",
        "comment_body": "\u548c MotionProvider \u4e00\u6837\u7684\u5c01\u88c5\u65f6\u673a\u5373\u53ef\uff0c\u4e0d\u662f\u6240\u6709 CP \u90fd\u9700\u8981\u4e00\u5c42\u5c42\u5305\u8fd9\u4e2a\u7684\u3002\u5426\u5219\u8fd9\u6837\u5b50\u5c31\u4f1a\u51b2\u7a81\uff1a\r\n\r\n* CP motion=false\r\n  * CP motion=true\r\n    * CP (\u6ca1\u6709 motion)\r\n      * CP motion=true",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2131457978",
    "pr_number": 53902,
    "pr_file": "components/config-provider/MotionWrapper.tsx",
    "created_at": "2025-06-06T04:00:53+00:00",
    "commented_code": "import { useToken } from '../theme/internal';\n \n+const MotionCacheContext = React.createContext(false);\n+if (process.env.NODE_ENV !== 'production') {\n+  MotionCacheContext.displayName = 'MotionCacheContext';\n+}\n+\n export interface MotionWrapperProps {\n   children?: React.ReactNode;\n }\n \n export default function MotionWrapper(props: MotionWrapperProps): React.ReactElement {\n+  const needWrapMotionProvider = React.useContext(MotionCacheContext);\n+\n   const { children } = props;\n   const [, token] = useToken();\n   const { motion } = token;\n \n   const needWrapMotionProviderRef = React.useRef(false);\n   needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n \n-  if (needWrapMotionProviderRef.current) {\n-    return <MotionProvider motion={motion}>{children}</MotionProvider>;\n+  if (needWrapMotionProviderRef.current || needWrapMotionProvider) {",
    "repo_full_name": "ant-design/ant-design",
    "discussion_comments": [
      {
        "comment_id": "2131457978",
        "repo_full_name": "ant-design/ant-design",
        "pr_number": 53902,
        "pr_file": "components/config-provider/MotionWrapper.tsx",
        "discussion_id": "2131457978",
        "commented_code": "@@ -3,20 +3,31 @@ import { Provider as MotionProvider } from 'rc-motion';\n \n import { useToken } from '../theme/internal';\n \n+const MotionCacheContext = React.createContext(false);\n+if (process.env.NODE_ENV !== 'production') {\n+  MotionCacheContext.displayName = 'MotionCacheContext';\n+}\n+\n export interface MotionWrapperProps {\n   children?: React.ReactNode;\n }\n \n export default function MotionWrapper(props: MotionWrapperProps): React.ReactElement {\n+  const needWrapMotionProvider = React.useContext(MotionCacheContext);\n+\n   const { children } = props;\n   const [, token] = useToken();\n   const { motion } = token;\n \n   const needWrapMotionProviderRef = React.useRef(false);\n   needWrapMotionProviderRef.current = needWrapMotionProviderRef.current || motion === false;\n \n-  if (needWrapMotionProviderRef.current) {\n-    return <MotionProvider motion={motion}>{children}</MotionProvider>;\n+  if (needWrapMotionProviderRef.current || needWrapMotionProvider) {",
        "comment_created_at": "2025-06-06T04:00:53+00:00",
        "comment_author": "zombieJ",
        "comment_body": "\u4e0d\u5bf9\uff0c\u8fd9\u4e48\u5199\u4f1a\u5bfc\u81f4\u6bcf\u4e2a CP \u90fd\u4f1a\u5305 MotionProvider\u3002\u8981\u6dfb\u52a0 MotionProvider \u7684\u65f6\u673a\u662f\uff1a\r\n\r\n1. \u68c0\u67e5\u5f53\u524d\u662f\u5426\u8bbe\u7f6e\u4e86 `motion: boolean`\r\n2. \u68c0\u67e5\u662f\u5426\u66fe\u7ecf\u6709\u8bbe\u7f6e\u8fc7 `motion: boolean`\r\n\r\n\u8fdb\u9636\u4f18\u5316\u5219\u662f\u5728 `1` \u5904\u8c03\u6574\uff1a\r\n\r\n```diff\r\n-- \u68c0\u67e5\u5f53\u524d\u662f\u5426\u8bbe\u7f6e\u4e86 `motion: boolean`\r\n++ \u68c0\u67e5\u5f53\u524d\u8bbe\u7f6e\u4e86 `motion: boolean` \u5e76\u4e14\u4e0e `parent` \u7684 `motion: boolean` \u4e0d\u4e00\u81f4\r\n```",
        "pr_file_module": null
      }
    ]
  }
]