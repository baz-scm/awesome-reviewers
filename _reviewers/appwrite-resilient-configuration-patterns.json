[
  {
    "discussion_id": "2194816714",
    "pr_number": 10127,
    "pr_file": ".github/workflows/tests.yml",
    "created_at": "2025-07-09T11:50:53+00:00",
    "commented_code": "- name: Load and Start Appwrite\n         run: |\n           docker load --input /tmp/${{ env.IMAGE }}.tar\n+          sed -i 's/_APP_BROWSER_HOST=http:\\/\\/appwrite-browser:3000\\/v1/_APP_BROWSER_HOST=http:\\/\\/invalid-browser\\/v1/' .env\n           docker compose up -d\n           sleep 30",
    "repo_full_name": "appwrite/appwrite",
    "discussion_comments": [
      {
        "comment_id": "2194816714",
        "repo_full_name": "appwrite/appwrite",
        "pr_number": 10127,
        "pr_file": ".github/workflows/tests.yml",
        "discussion_id": "2194816714",
        "commented_code": "@@ -178,6 +178,7 @@ jobs:\n       - name: Load and Start Appwrite\n         run: |\n           docker load --input /tmp/${{ env.IMAGE }}.tar\n+          sed -i 's/_APP_BROWSER_HOST=http:\\/\\/appwrite-browser:3000\\/v1/_APP_BROWSER_HOST=http:\\/\\/invalid-browser\\/v1/' .env\n           docker compose up -d\n           sleep 30",
        "comment_created_at": "2025-07-09T11:50:53+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\ud83d\udee0\ufe0f Refactor suggestion_\n\n**Make the `_APP_BROWSER_HOST` replacement resilient**\n\n`sed -i 's/_APP_BROWSER_HOST=http:\\/\\/appwrite-browser:3000\\/v1/_APP_BROWSER_HOST=http:\\/\\/invalid-browser\\/v1/' .env` only works if the line\u2019s value is exactly the default string.  \nFuture changes to the port, protocol or host will leave the old value untouched and re-enable screenshots unintentionally.\n\n\n\n```diff\n-          sed -i 's/_APP_BROWSER_HOST=http:\\/\\/appwrite-browser:3000\\/v1/_APP_BROWSER_HOST=http:\\/\\/invalid-browser\\/v1/' .env\n+          # Force an invalid browser host irrespective of its previous value\n+          sed -i 's|^_APP_BROWSER_HOST=.*|_APP_BROWSER_HOST=http://invalid-browser/v1|' .env\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>\ud83d\udcdd Committable suggestion</summary>\n\n> \u203c\ufe0f **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n        run: |\n          docker load --input /tmp/${{ env.IMAGE }}.tar\n          # Force an invalid browser host irrespective of its previous value\n          sed -i 's|^_APP_BROWSER_HOST=.*|_APP_BROWSER_HOST=http://invalid-browser/v1|' .env\n          docker compose up -d\n          sleep 30\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>\ud83e\udd16 Prompt for AI Agents</summary>\n\n```\nIn .github/workflows/tests.yml around lines 179 to 183, the sed command\nreplacing _APP_BROWSER_HOST only works if the line exactly matches the default\nstring, which is fragile. Modify the sed expression to match the\n_APP_BROWSER_HOST line regardless of its current value and replace it with the\nnew value, making the replacement resilient to future changes in port, protocol,\nor host.\n```\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit -->\n\n<!-- fingerprinting:phantom:triton:cougar -->",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2112156999",
    "pr_number": 9647,
    "pr_file": ".github/workflows/sdk-preview.yml",
    "created_at": "2025-05-28T15:10:20+00:00",
    "commented_code": "-name: \"Console SDK Preview\"\n+name: \"SDK Preview\"\n \n on:\n   pull_request:\n     paths:\n       - 'app/config/specs/*-latest-console.json'\n-\n+  workflow_dispatch:\n+    inputs:\n+      platform:\n+        type: choice\n+        description: \"Platform to build\"\n+        options:\n+          - client\n+          - server\n \n jobs:\n   setup:\n-    name: Setup & Build Console SDK\n+    name: Setup & Build SDK\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout repository\n         uses: actions/checkout@v4\n+\n+      - name: Set SDK type\n+        id: set-sdk\n+        run: |\n+          PLATFORM=\"${{ github.event.inputs.platform }}\"\n+          if [ -z \"$PLATFORM\" ]; then\n+            PLATFORM=\"console\"\n+          fi\n+          if [ \"$PLATFORM\" = \"server\" ]; then\n+            echo \"sdk_type=nodejs\" >> $GITHUB_OUTPUT\n+          else\n+            echo \"sdk_type=web\" >> $GITHUB_OUTPUT\n+          fi\n+          echo \"platform=$PLATFORM\" >> $GITHUB_OUTPUT",
    "repo_full_name": "appwrite/appwrite",
    "discussion_comments": [
      {
        "comment_id": "2112156999",
        "repo_full_name": "appwrite/appwrite",
        "pr_number": 9647,
        "pr_file": ".github/workflows/sdk-preview.yml",
        "discussion_id": "2112156999",
        "commented_code": "@@ -1,32 +1,53 @@\n-name: \"Console SDK Preview\"\n+name: \"SDK Preview\"\n \n on:\n   pull_request:\n     paths:\n       - 'app/config/specs/*-latest-console.json'\n-\n+  workflow_dispatch:\n+    inputs:\n+      platform:\n+        type: choice\n+        description: \"Platform to build\"\n+        options:\n+          - client\n+          - server\n \n jobs:\n   setup:\n-    name: Setup & Build Console SDK\n+    name: Setup & Build SDK\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout repository\n         uses: actions/checkout@v4\n+\n+      - name: Set SDK type\n+        id: set-sdk\n+        run: |\n+          PLATFORM=\"${{ github.event.inputs.platform }}\"\n+          if [ -z \"$PLATFORM\" ]; then\n+            PLATFORM=\"console\"\n+          fi\n+          if [ \"$PLATFORM\" = \"server\" ]; then\n+            echo \"sdk_type=nodejs\" >> $GITHUB_OUTPUT\n+          else\n+            echo \"sdk_type=web\" >> $GITHUB_OUTPUT\n+          fi\n+          echo \"platform=$PLATFORM\" >> $GITHUB_OUTPUT\n         ",
        "comment_created_at": "2025-05-28T15:10:20+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\u26a0\ufe0f Potential issue_\n\n**Defaulting to an unsupported platform value**\n\nThe script defaults empty `platform` to `\"console\"`, which isn\u2019t one of the declared options (`client`, `server`). This will lead to invalid `$PLATFORM` and may break the `docker compose exec` command.  \nPlease update the default to `\"client\"` (or add `\"console\"` to the input options) to keep inputs consistent.\n\nProposed fix:\n```diff\n       if [ -z \"$PLATFORM\" ]; then\n-          PLATFORM=\"console\"\n+          PLATFORM=\"client\"\n       fi\n```\n\n\n\n<!-- suggestion_start -->\n\n<details>\n<summary>\ud83d\udcdd Committable suggestion</summary>\n\n> \u203c\ufe0f **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n      - name: Set SDK type\n        id: set-sdk\n        run: |\n          PLATFORM=\"${{ github.event.inputs.platform }}\"\n          if [ -z \"$PLATFORM\" ]; then\n            PLATFORM=\"client\"\n          fi\n          if [ \"$PLATFORM\" = \"server\" ]; then\n            echo \"sdk_type=nodejs\" >> $GITHUB_OUTPUT\n          else\n            echo \"sdk_type=web\" >> $GITHUB_OUTPUT\n          fi\n          echo \"platform=$PLATFORM\" >> $GITHUB_OUTPUT\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>\ud83e\uddf0 Tools</summary>\n\n<details>\n<summary>\ud83e\ude9b YAMLlint (1.37.1)</summary>\n\n[error] 37-37: trailing spaces\n\n(trailing-spaces)\n\n</details>\n\n</details>\n\n<details>\n<summary>\ud83e\udd16 Prompt for AI Agents</summary>\n\n```\nIn .github/workflows/sdk-preview.yml around lines 24 to 37, the script defaults\nthe PLATFORM variable to \"console\" when empty, but \"console\" is not a declared\nvalid platform option, causing potential failures. Update the default value of\nPLATFORM to \"client\" to align with the declared input options and ensure\nconsistency. This change will prevent invalid platform values and avoid breaking\ndownstream commands like docker compose exec.\n```\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2094519293",
    "pr_number": 9649,
    "pr_file": "docker-compose.yml",
    "created_at": "2025-05-18T13:06:36+00:00",
    "commented_code": "- /var/run/docker.sock:/var/run/docker.sock\n       - appwrite-builds:/storage/builds:rw\n       - appwrite-functions:/storage/functions:rw\n+      - appwrite-sites:/storage/sites:rw\n       # Host mount nessessary to share files between executor and runtimes.\n       # It's not possible to share mount file between 2 containers without host mount (copying is too slow)\n       - /tmp:/tmp:rw\n     environment:\n-      - OPR_EXECUTOR_INACTIVE_TRESHOLD=$_APP_FUNCTIONS_INACTIVE_THRESHOLD\n-      - OPR_EXECUTOR_MAINTENANCE_INTERVAL=$_APP_FUNCTIONS_MAINTENANCE_INTERVAL\n-      - OPR_EXECUTOR_NETWORK=$_APP_FUNCTIONS_RUNTIMES_NETWORK\n+      - OPR_EXECUTOR_IMAGE_PULL=enabled\n+      - OPR_EXECUTOR_INACTIVE_TRESHOLD=$_APP_COMPUTE_INACTIVE_THRESHOLD\n+      - OPR_EXECUTOR_MAINTENANCE_INTERVAL=$_APP_COMPUTE_MAINTENANCE_INTERVAL\n+      - OPR_EXECUTOR_NETWORK=$_APP_COMPUTE_RUNTIMES_NETWORK\n       - OPR_EXECUTOR_DOCKER_HUB_USERNAME=$_APP_DOCKER_HUB_USERNAME",
    "repo_full_name": "appwrite/appwrite",
    "discussion_comments": [
      {
        "comment_id": "2094519293",
        "repo_full_name": "appwrite/appwrite",
        "pr_number": 9649,
        "pr_file": "docker-compose.yml",
        "discussion_id": "2094519293",
        "commented_code": "@@ -933,19 +960,21 @@ services:\n       - /var/run/docker.sock:/var/run/docker.sock\n       - appwrite-builds:/storage/builds:rw\n       - appwrite-functions:/storage/functions:rw\n+      - appwrite-sites:/storage/sites:rw\n       # Host mount nessessary to share files between executor and runtimes.\n       # It's not possible to share mount file between 2 containers without host mount (copying is too slow)\n       - /tmp:/tmp:rw\n     environment:\n-      - OPR_EXECUTOR_INACTIVE_TRESHOLD=$_APP_FUNCTIONS_INACTIVE_THRESHOLD\n-      - OPR_EXECUTOR_MAINTENANCE_INTERVAL=$_APP_FUNCTIONS_MAINTENANCE_INTERVAL\n-      - OPR_EXECUTOR_NETWORK=$_APP_FUNCTIONS_RUNTIMES_NETWORK\n+      - OPR_EXECUTOR_IMAGE_PULL=enabled\n+      - OPR_EXECUTOR_INACTIVE_TRESHOLD=$_APP_COMPUTE_INACTIVE_THRESHOLD\n+      - OPR_EXECUTOR_MAINTENANCE_INTERVAL=$_APP_COMPUTE_MAINTENANCE_INTERVAL\n+      - OPR_EXECUTOR_NETWORK=$_APP_COMPUTE_RUNTIMES_NETWORK\n       - OPR_EXECUTOR_DOCKER_HUB_USERNAME=$_APP_DOCKER_HUB_USERNAME",
        "comment_created_at": "2025-05-18T13:06:36+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\u26a0\ufe0f Potential issue_\n\n**Typo in environment variable name breaks executor cleanup**\n\n`OPR_EXECUTOR_INACTIVE_TRESHOLD` (`TRESHOLD` missing \u201cH\u201d) will be silently ignored by the executor image, leaving old containers running indefinitely.\n\n```diff\n-      - OPR_EXECUTOR_INACTIVE_TRESHOLD=$_APP_COMPUTE_INACTIVE_THRESHOLD\n+      - OPR_EXECUTOR_INACTIVE_THRESHOLD=$_APP_COMPUTE_INACTIVE_THRESHOLD\n```\n\n<details>\n<summary>\ud83e\udd16 Prompt for AI Agents</summary>\n\n```\nIn docker-compose.yml around lines 968 to 972, the environment variable name\nOPR_EXECUTOR_INACTIVE_TRESHOLD contains a typo (\"TRESHOLD\" instead of\n\"THRESHOLD\"). Correct the variable name to OPR_EXECUTOR_INACTIVE_THRESHOLD to\nensure the executor image recognizes it and properly handles container cleanup.\n```\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
        "pr_file_module": null
      }
    ]
  }
]