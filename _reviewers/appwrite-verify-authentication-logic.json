[
  {
    "discussion_id": "2195263020",
    "pr_number": 10127,
    "pr_file": "tests/resources/functions/basic/index.js",
    "created_at": "2025-07-09T15:02:35+00:00",
    "commented_code": "module.exports = async(context) => {\n-    context.log('Amazing Function Log');\n+    context.log('log-works');\n+    context.error('error-log-works');\n+    \n+    if(context.req.headers['x-appwrite-user-jwt']) {\n+      context.log('jwt-is-invalid');\n+    } else {\n+      context.log('jwt-is-valid');\n+    }",
    "repo_full_name": "appwrite/appwrite",
    "discussion_comments": [
      {
        "comment_id": "2195263020",
        "repo_full_name": "appwrite/appwrite",
        "pr_number": 10127,
        "pr_file": "tests/resources/functions/basic/index.js",
        "discussion_id": "2195263020",
        "commented_code": "@@ -1,5 +1,26 @@\n module.exports = async(context) => {\n-    context.log('Amazing Function Log');\n+    context.log('log-works');\n+    context.error('error-log-works');\n+    \n+    if(context.req.headers['x-appwrite-user-jwt']) {\n+      context.log('jwt-is-invalid');\n+    } else {\n+      context.log('jwt-is-valid');\n+    }",
        "comment_created_at": "2025-07-09T15:02:35+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\u26a0\ufe0f Potential issue_\n\n**Fix inverted JWT validation logic.**\n\nThe JWT validation logic is inverted - it logs \"jwt-is-invalid\" when a JWT is present and \"jwt-is-valid\" when it's absent. This is counterintuitive.\n\n\n\n```diff\n-    if(context.req.headers['x-appwrite-user-jwt']) {\n-      context.log('jwt-is-invalid');\n-    } else {\n-      context.log('jwt-is-valid');\n-    }\n+    if(context.req.headers['x-appwrite-user-jwt']) {\n+      context.log('jwt-is-valid');\n+    } else {\n+      context.log('jwt-is-invalid');\n+    }\n```\n\n<!-- suggestion_start -->\n\n<details>\n<summary>\ud83d\udcdd Committable suggestion</summary>\n\n> \u203c\ufe0f **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n    if (context.req.headers['x-appwrite-user-jwt']) {\n      context.log('jwt-is-valid');\n    } else {\n      context.log('jwt-is-invalid');\n    }\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>\ud83e\udd16 Prompt for AI Agents</summary>\n\n```\nIn tests/resources/functions/basic/index.js around lines 5 to 9, the JWT\nvalidation logic is inverted; it logs \"jwt-is-invalid\" when the JWT is present\nand \"jwt-is-valid\" when it is absent. To fix this, reverse the condition so that\nwhen the JWT header 'x-appwrite-user-jwt' exists, it logs \"jwt-is-valid\", and\nwhen it does not exist, it logs \"jwt-is-invalid\".\n```\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit -->\n\n<!-- fingerprinting:phantom:poseidon:panther -->",
        "pr_file_module": null
      }
    ]
  }
]