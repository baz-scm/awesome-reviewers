[
  {
    "discussion_id": "1920846518",
    "pr_number": 21543,
    "pr_file": "docs/operator-manual/webhook.md",
    "created_at": "2025-01-17T22:52:33+00:00",
    "commented_code": "the same. A hook event for a push to branch `x` will trigger a refresh for an app pointing at the same repo with\n     `targetRevision: refs/tags/x`.\n \n+### Webhook Ingress\n+\n+The applicationset-controller is responsible for answering to webhook calls so a separate ingress has to be setup for it.\n+\n+Example Ingress:\n+```\n+# base/argocd-webhook-ingress.yaml\n+apiVersion: networking.k8s.io/v1\n+kind: Ingress\n+metadata:\n+  name: argo-cd-webhook\n+spec:\n+  rules:\n+    - host: cd.apps.argoproj.io\n+      http:\n+        paths:\n+          - path: /api/webhook\n+            pathType: Prefix\n+            backend:\n+              service:\n+                name: argocd-applicationset-controller\n+                port:\n+                  number: 7000\n+  tls:\n+    - hosts:\n+        - cd.apps.argoproj.io\n+      secretName: argocd-secret\n+```",
    "repo_full_name": "argoproj/argo-cd",
    "discussion_comments": [
      {
        "comment_id": "1920846518",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 21543,
        "pr_file": "docs/operator-manual/webhook.md",
        "discussion_id": "1920846518",
        "commented_code": "@@ -12,6 +12,35 @@ a Git webhook for GitHub, but the same process should be applicable to other pro\n     the same. A hook event for a push to branch `x` will trigger a refresh for an app pointing at the same repo with\n     `targetRevision: refs/tags/x`.\n \n+### Webhook Ingress\n+\n+The applicationset-controller is responsible for answering to webhook calls so a separate ingress has to be setup for it.\n+\n+Example Ingress:\n+```\n+# base/argocd-webhook-ingress.yaml\n+apiVersion: networking.k8s.io/v1\n+kind: Ingress\n+metadata:\n+  name: argo-cd-webhook\n+spec:\n+  rules:\n+    - host: cd.apps.argoproj.io\n+      http:\n+        paths:\n+          - path: /api/webhook\n+            pathType: Prefix\n+            backend:\n+              service:\n+                name: argocd-applicationset-controller\n+                port:\n+                  number: 7000\n+  tls:\n+    - hosts:\n+        - cd.apps.argoproj.io\n+      secretName: argocd-secret\n+```",
        "comment_created_at": "2025-01-17T22:52:33+00:00",
        "comment_author": "agaudreault",
        "comment_body": "Link to the ingress documentation. The underlying user infrastructure may diverge too much from the example app.\r\n\r\n```suggestion\r\nThe api path `/api/webhook` of the `argocd-applicationset-controller` service on the `webhook` named port must be configured as part of your [ingress](./ingress.md).\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1922084176",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 21543,
        "pr_file": "docs/operator-manual/webhook.md",
        "discussion_id": "1920846518",
        "commented_code": "@@ -12,6 +12,35 @@ a Git webhook for GitHub, but the same process should be applicable to other pro\n     the same. A hook event for a push to branch `x` will trigger a refresh for an app pointing at the same repo with\n     `targetRevision: refs/tags/x`.\n \n+### Webhook Ingress\n+\n+The applicationset-controller is responsible for answering to webhook calls so a separate ingress has to be setup for it.\n+\n+Example Ingress:\n+```\n+# base/argocd-webhook-ingress.yaml\n+apiVersion: networking.k8s.io/v1\n+kind: Ingress\n+metadata:\n+  name: argo-cd-webhook\n+spec:\n+  rules:\n+    - host: cd.apps.argoproj.io\n+      http:\n+        paths:\n+          - path: /api/webhook\n+            pathType: Prefix\n+            backend:\n+              service:\n+                name: argocd-applicationset-controller\n+                port:\n+                  number: 7000\n+  tls:\n+    - hosts:\n+        - cd.apps.argoproj.io\n+      secretName: argocd-secret\n+```",
        "comment_created_at": "2025-01-20T09:35:52+00:00",
        "comment_author": "R0flcopt3r",
        "comment_body": "Your sentence could fit nicely into a `!!! note` or similar. A doc that describe the different webhooks would also be nice, since I wasn't aware the argocd server also handled webhooks from reading the parts I were.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1898298034",
    "pr_number": 21313,
    "pr_file": "docs/getting_started.md",
    "created_at": "2024-12-27T06:34:12+00:00",
    "commented_code": "```bash\n brew install argocd\n ```\n-\n+!!! note\n+    To ensure proper functionality, the Argo CD CLI requires HTTP/2 support. Verify that your CLI is set up to use HTTP/2, especially if connecting to an Argo CD server over HTTPS. Check your system\u2019s configuration or proxy settings if issues arise.",
    "repo_full_name": "argoproj/argo-cd",
    "discussion_comments": [
      {
        "comment_id": "1898298034",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 21313,
        "pr_file": "docs/getting_started.md",
        "discussion_id": "1898298034",
        "commented_code": "@@ -52,7 +52,9 @@ Also available in Mac, Linux and WSL Homebrew:\n ```bash\n brew install argocd\n ```\n-\n+!!! note\n+    To ensure proper functionality, the Argo CD CLI requires HTTP/2 support. Verify that your CLI is set up to use HTTP/2, especially if connecting to an Argo CD server over HTTPS. Check your system\u2019s configuration or proxy settings if issues arise.",
        "comment_created_at": "2024-12-27T06:34:12+00:00",
        "comment_author": "nitishfy",
        "comment_body": "```suggestion\r\n    To ensure proper functionality, the Argo CD CLI requires HTTP/2 support. Verify that your CLI is set up to use HTTP/2, especially if connecting to an Argo CD server over HTTPS. Check your system\u2019s configuration or proxy settings if issues arise.\r\n```\r\n1. Why do we need to emphasize on usage of http/2 here?\r\n2. Can you add steps that would be required for verification if CLI I set up to use the HTTP/2?\r\n3. Which issue can occur if you just normally install the Argo CD CLI and use it against the Argo CD server over HTTPS?",
        "pr_file_module": null
      },
      {
        "comment_id": "1912437362",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 21313,
        "pr_file": "docs/getting_started.md",
        "discussion_id": "1898298034",
        "commented_code": "@@ -52,7 +52,9 @@ Also available in Mac, Linux and WSL Homebrew:\n ```bash\n brew install argocd\n ```\n-\n+!!! note\n+    To ensure proper functionality, the Argo CD CLI requires HTTP/2 support. Verify that your CLI is set up to use HTTP/2, especially if connecting to an Argo CD server over HTTPS. Check your system\u2019s configuration or proxy settings if issues arise.",
        "comment_created_at": "2025-01-12T12:14:07+00:00",
        "comment_author": "revitalbarletz",
        "comment_body": "This issue is related to https://github.com/argoproj/argo-cd/issues/20715.\r\nWhen the user tried to follow the getting started guide, argocli login kept timing out up until enabling HTTP2. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1914879769",
    "pr_number": 21313,
    "pr_file": "docs/getting_started.md",
    "created_at": "2025-01-14T14:08:18+00:00",
    "commented_code": "```bash\n brew install argocd\n ```\n-\n+!!! note\n+    To ensure proper functionality, the Argo CD CLI requires HTTP/2 support. Verify that your CLI is set up to use HTTP/2, especially if connecting to an Argo CD server over HTTPS. Check your system\u2019s configuration or proxy settings if issues arise.",
    "repo_full_name": "argoproj/argo-cd",
    "discussion_comments": [
      {
        "comment_id": "1914879769",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 21313,
        "pr_file": "docs/getting_started.md",
        "discussion_id": "1914879769",
        "commented_code": "@@ -52,7 +52,9 @@ Also available in Mac, Linux and WSL Homebrew:\n ```bash\n brew install argocd\n ```\n-\n+!!! note\n+    To ensure proper functionality, the Argo CD CLI requires HTTP/2 support. Verify that your CLI is set up to use HTTP/2, especially if connecting to an Argo CD server over HTTPS. Check your system\u2019s configuration or proxy settings if issues arise.",
        "comment_created_at": "2025-01-14T14:08:18+00:00",
        "comment_author": "rumstead",
        "comment_body": "> that your CLI is set up to use HTTP/2\r\n\r\nThis is a little confusing to me. You point out that the cli uses http/2 by default. I *think* we should say that the gateway / ingress controller should be configured to use http/2? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1921542935",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 21313,
        "pr_file": "docs/getting_started.md",
        "discussion_id": "1914879769",
        "commented_code": "@@ -52,7 +52,9 @@ Also available in Mac, Linux and WSL Homebrew:\n ```bash\n brew install argocd\n ```\n-\n+!!! note\n+    To ensure proper functionality, the Argo CD CLI requires HTTP/2 support. Verify that your CLI is set up to use HTTP/2, especially if connecting to an Argo CD server over HTTPS. Check your system\u2019s configuration or proxy settings if issues arise.",
        "comment_created_at": "2025-01-19T12:29:09+00:00",
        "comment_author": "revitalbarletz",
        "comment_body": "@rumstead  Better now?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1782985343",
    "pr_number": 20047,
    "pr_file": "docs/operator-manual/applicationset/Generators-Pull-Request.md",
    "created_at": "2024-10-01T14:36:18+00:00",
    "commented_code": "* `tokenRef`: A `Secret` name and key containing the Azure DevOps access token to use for requests. If not specified, will make anonymous requests which have a lower rate limit and can only see public repositories. (Optional)\n * `labels`: Filter the PRs to those containing **all** of the labels listed. (Optional)\n \n+In case self-signed Azure DevOps certificates, the following options can be usefully:",
    "repo_full_name": "argoproj/argo-cd",
    "discussion_comments": [
      {
        "comment_id": "1782985343",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 20047,
        "pr_file": "docs/operator-manual/applicationset/Generators-Pull-Request.md",
        "discussion_id": "1782985343",
        "commented_code": "@@ -322,6 +322,10 @@ spec:\n * `tokenRef`: A `Secret` name and key containing the Azure DevOps access token to use for requests. If not specified, will make anonymous requests which have a lower rate limit and can only see public repositories. (Optional)\n * `labels`: Filter the PRs to those containing **all** of the labels listed. (Optional)\n \n+In case self-signed Azure DevOps certificates, the following options can be usefully:",
        "comment_created_at": "2024-10-01T14:36:18+00:00",
        "comment_author": "agaudreault",
        "comment_body": "You can add the fields to the example above. (for both generators)\r\n\r\n```yaml\r\n        # If true, skips validating the SCM provider's TLS certificate - useful for self-signed certificates.\r\n        insecure: true\r\n        # Reference to a ConfigMap containing trusted CA certs - useful for self-signed certificates. (optional)\r\n        caRef:\r\n          configMapName: argocd-tls-certs-cm\r\n          key: azure-devops-ca\r\n```",
        "pr_file_module": null
      }
    ]
  }
]