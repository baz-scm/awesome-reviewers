[
  {
    "discussion_id": "1766748879",
    "pr_number": 19829,
    "pr_file": "ui/src/app/settings/components/repos-list/repos-list.tsx",
    "created_at": "2024-09-19T12:32:30+00:00",
    "commented_code": "}}>\n                 <div className='repos-list'>\n                     <div className='argo-container'>\n-                        <DataLoader load={() => services.repos.list()} ref={loader => (this.repoLoader = loader)}>\n-                            {(repos: models.Repository[]) =>\n-                                (repos.length > 0 && (\n-                                    <div className='argo-table-list'>\n-                                        <div className='argo-table-list__head'>\n-                                            <div className='row'>\n-                                                <div className='columns small-1' />\n-                                                <div className='columns small-1'>TYPE</div>\n-                                                <div className='columns small-2'>NAME</div>\n-                                                <div className='columns small-2'>PROJECT</div>\n-                                                <div className='columns small-4'>REPOSITORY</div>\n-                                                <div className='columns small-2'>CONNECTION STATUS</div>\n-                                            </div>\n-                                        </div>\n-                                        {repos.map(repo => (\n-                                            <div\n-                                                className={`argo-table-list__row ${this.isRepoUpdatable(repo) ? 'item-clickable' : ''}`}\n-                                                key={repo.repo}\n-                                                onClick={() => (this.isRepoUpdatable(repo) ? this.displayEditSliding(repo) : null)}>\n+                        <div style={{display: 'flex', margin: '20px 0', justifyContent: 'space-between'}}>\n+                            <div style={{display: 'flex', gap: '10px', width: '50%'}}>\n+                                <DropDownMenu\n+                                    items={[\n+                                        {\n+                                            title: 'all',\n+                                            action: () => this.setState({typeProperty: 'all'})\n+                                        },\n+                                        {\n+                                            title: 'git',\n+                                            action: () => this.setState({typeProperty: 'git'})\n+                                        },\n+                                        {\n+                                            title: 'helm',\n+                                            action: () => this.setState({typeProperty: 'helm'})\n+                                        }\n+                                    ]}\n+                                    anchor={() => (\n+                                        <>\n+                                            <a>\n+                                                Type: {this.state.typeProperty} <i className='fa fa-caret-down' />\n+                                            </a>\n+                                            &nbsp;\n+                                        </>\n+                                    )}\n+                                    qeId='type-menu'\n+                                />\n+                                <DataLoader load={services.repos.list} ref={loader => (this.repoLoader = loader)}>\n+                                    {(repos: models.Repository[]) => {\n+                                        const projectValues = Array.from(new Set(repos.map(repo => repo.project)));\n+\n+                                        const projectItems = [\n+                                            {\n+                                                title: 'all',\n+                                                action: () => this.setState({projectProperty: 'all'})\n+                                            },\n+                                            ...projectValues.map(project => ({\n+                                                title: project,\n+                                                action: () => this.setState({projectProperty: project})\n+                                            }))\n+                                        ];",
    "repo_full_name": "argoproj/argo-cd",
    "discussion_comments": [
      {
        "comment_id": "1766748879",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 19829,
        "pr_file": "ui/src/app/settings/components/repos-list/repos-list.tsx",
        "discussion_id": "1766748879",
        "commented_code": "@@ -284,84 +294,180 @@ export class ReposList extends React.Component<\n                 }}>\n                 <div className='repos-list'>\n                     <div className='argo-container'>\n-                        <DataLoader load={() => services.repos.list()} ref={loader => (this.repoLoader = loader)}>\n-                            {(repos: models.Repository[]) =>\n-                                (repos.length > 0 && (\n-                                    <div className='argo-table-list'>\n-                                        <div className='argo-table-list__head'>\n-                                            <div className='row'>\n-                                                <div className='columns small-1' />\n-                                                <div className='columns small-1'>TYPE</div>\n-                                                <div className='columns small-2'>NAME</div>\n-                                                <div className='columns small-2'>PROJECT</div>\n-                                                <div className='columns small-4'>REPOSITORY</div>\n-                                                <div className='columns small-2'>CONNECTION STATUS</div>\n-                                            </div>\n-                                        </div>\n-                                        {repos.map(repo => (\n-                                            <div\n-                                                className={`argo-table-list__row ${this.isRepoUpdatable(repo) ? 'item-clickable' : ''}`}\n-                                                key={repo.repo}\n-                                                onClick={() => (this.isRepoUpdatable(repo) ? this.displayEditSliding(repo) : null)}>\n+                        <div style={{display: 'flex', margin: '20px 0', justifyContent: 'space-between'}}>\n+                            <div style={{display: 'flex', gap: '10px', width: '50%'}}>\n+                                <DropDownMenu\n+                                    items={[\n+                                        {\n+                                            title: 'all',\n+                                            action: () => this.setState({typeProperty: 'all'})\n+                                        },\n+                                        {\n+                                            title: 'git',\n+                                            action: () => this.setState({typeProperty: 'git'})\n+                                        },\n+                                        {\n+                                            title: 'helm',\n+                                            action: () => this.setState({typeProperty: 'helm'})\n+                                        }\n+                                    ]}\n+                                    anchor={() => (\n+                                        <>\n+                                            <a>\n+                                                Type: {this.state.typeProperty} <i className='fa fa-caret-down' />\n+                                            </a>\n+                                            &nbsp;\n+                                        </>\n+                                    )}\n+                                    qeId='type-menu'\n+                                />\n+                                <DataLoader load={services.repos.list} ref={loader => (this.repoLoader = loader)}>\n+                                    {(repos: models.Repository[]) => {\n+                                        const projectValues = Array.from(new Set(repos.map(repo => repo.project)));\n+\n+                                        const projectItems = [\n+                                            {\n+                                                title: 'all',\n+                                                action: () => this.setState({projectProperty: 'all'})\n+                                            },\n+                                            ...projectValues.map(project => ({\n+                                                title: project,\n+                                                action: () => this.setState({projectProperty: project})\n+                                            }))\n+                                        ];",
        "comment_created_at": "2024-09-19T12:32:30+00:00",
        "comment_author": "surajyadav1108",
        "comment_body": "```suggestion\r\n                                            ...projectValues\r\n                                                .filter(project => project && project.trim() !== '')  \r\n                                                .map(project => ({\r\n                                                    title: project,\r\n                                                    action: () => this.setState({ projectProperty: project })\r\n                                                }))\r\n                                        ];\r\n```\r\n\r\nSimilar to name property for repo  this for undefined project case",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1766755078",
    "pr_number": 19829,
    "pr_file": "ui/src/app/settings/components/repos-list/repos-list.tsx",
    "created_at": "2024-09-19T12:36:55+00:00",
    "commented_code": "}\n     }\n \n+    // filtering function\n+    private filteredRepos(repos: models.Repository[], type: string, project: string, status: string, name: string) {\n+        let newRepos = repos;\n+\n+        if (name !== '' || name !== null) {\n+            const response = this.filteredName(newRepos, name);\n+            newRepos = response;\n+        }\n+\n+        if (type !== 'all') {\n+            const response = this.filteredType(newRepos, type);\n+            newRepos = response;\n+        }\n+\n+        if (status !== 'all') {\n+            const response = this.filteredStatus(newRepos, status);\n+            newRepos = response;\n+        }\n+\n+        if (project !== 'all') {\n+            const response = this.filteredProject(newRepos, project);\n+            newRepos = response;\n+        }\n+\n+        return newRepos;\n+    }\n+\n+    private filteredName(repos: models.Repository[], name: string) {\n+        const trimmedName = name.trim();\n+        const newRepos = repos.filter(repo => !repo.name || repo.name.toLowerCase().includes(trimmedName.toLowerCase()));\n+        return newRepos;\n+    }\n+\n+    private filteredStatus(repos: models.Repository[], status: string) {\n+        const newRepos = repos.filter(repo => repo.connectionState.status.includes(status));\n+        return newRepos;\n+    }\n+\n+    private filteredProject(repos: models.Repository[], project: string) {\n+        const newRepos = repos.filter(repo => repo.project.includes(project));",
    "repo_full_name": "argoproj/argo-cd",
    "discussion_comments": [
      {
        "comment_id": "1766755078",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 19829,
        "pr_file": "ui/src/app/settings/components/repos-list/repos-list.tsx",
        "discussion_id": "1766755078",
        "commented_code": "@@ -906,6 +1012,54 @@ export class ReposList extends React.Component<\n         }\n     }\n \n+    // filtering function\n+    private filteredRepos(repos: models.Repository[], type: string, project: string, status: string, name: string) {\n+        let newRepos = repos;\n+\n+        if (name !== '' || name !== null) {\n+            const response = this.filteredName(newRepos, name);\n+            newRepos = response;\n+        }\n+\n+        if (type !== 'all') {\n+            const response = this.filteredType(newRepos, type);\n+            newRepos = response;\n+        }\n+\n+        if (status !== 'all') {\n+            const response = this.filteredStatus(newRepos, status);\n+            newRepos = response;\n+        }\n+\n+        if (project !== 'all') {\n+            const response = this.filteredProject(newRepos, project);\n+            newRepos = response;\n+        }\n+\n+        return newRepos;\n+    }\n+\n+    private filteredName(repos: models.Repository[], name: string) {\n+        const trimmedName = name.trim();\n+        const newRepos = repos.filter(repo => !repo.name || repo.name.toLowerCase().includes(trimmedName.toLowerCase()));\n+        return newRepos;\n+    }\n+\n+    private filteredStatus(repos: models.Repository[], status: string) {\n+        const newRepos = repos.filter(repo => repo.connectionState.status.includes(status));\n+        return newRepos;\n+    }\n+\n+    private filteredProject(repos: models.Repository[], project: string) {\n+        const newRepos = repos.filter(repo => repo.project.includes(project));",
        "comment_created_at": "2024-09-19T12:36:55+00:00",
        "comment_author": "surajyadav1108",
        "comment_body": "```suggestion\r\n        const newRepos = repos.filter(repo => repo.project && repo.project.includes(project));\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1769470267",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 19829,
        "pr_file": "ui/src/app/settings/components/repos-list/repos-list.tsx",
        "discussion_id": "1766755078",
        "commented_code": "@@ -906,6 +1012,54 @@ export class ReposList extends React.Component<\n         }\n     }\n \n+    // filtering function\n+    private filteredRepos(repos: models.Repository[], type: string, project: string, status: string, name: string) {\n+        let newRepos = repos;\n+\n+        if (name !== '' || name !== null) {\n+            const response = this.filteredName(newRepos, name);\n+            newRepos = response;\n+        }\n+\n+        if (type !== 'all') {\n+            const response = this.filteredType(newRepos, type);\n+            newRepos = response;\n+        }\n+\n+        if (status !== 'all') {\n+            const response = this.filteredStatus(newRepos, status);\n+            newRepos = response;\n+        }\n+\n+        if (project !== 'all') {\n+            const response = this.filteredProject(newRepos, project);\n+            newRepos = response;\n+        }\n+\n+        return newRepos;\n+    }\n+\n+    private filteredName(repos: models.Repository[], name: string) {\n+        const trimmedName = name.trim();\n+        const newRepos = repos.filter(repo => !repo.name || repo.name.toLowerCase().includes(trimmedName.toLowerCase()));\n+        return newRepos;\n+    }\n+\n+    private filteredStatus(repos: models.Repository[], status: string) {\n+        const newRepos = repos.filter(repo => repo.connectionState.status.includes(status));\n+        return newRepos;\n+    }\n+\n+    private filteredProject(repos: models.Repository[], project: string) {\n+        const newRepos = repos.filter(repo => repo.project.includes(project));",
        "comment_created_at": "2024-09-21T04:29:21+00:00",
        "comment_author": "bianbbc87",
        "comment_body": "What problems can I prevent with this?",
        "pr_file_module": null
      },
      {
        "comment_id": "1769496458",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 19829,
        "pr_file": "ui/src/app/settings/components/repos-list/repos-list.tsx",
        "discussion_id": "1766755078",
        "commented_code": "@@ -906,6 +1012,54 @@ export class ReposList extends React.Component<\n         }\n     }\n \n+    // filtering function\n+    private filteredRepos(repos: models.Repository[], type: string, project: string, status: string, name: string) {\n+        let newRepos = repos;\n+\n+        if (name !== '' || name !== null) {\n+            const response = this.filteredName(newRepos, name);\n+            newRepos = response;\n+        }\n+\n+        if (type !== 'all') {\n+            const response = this.filteredType(newRepos, type);\n+            newRepos = response;\n+        }\n+\n+        if (status !== 'all') {\n+            const response = this.filteredStatus(newRepos, status);\n+            newRepos = response;\n+        }\n+\n+        if (project !== 'all') {\n+            const response = this.filteredProject(newRepos, project);\n+            newRepos = response;\n+        }\n+\n+        return newRepos;\n+    }\n+\n+    private filteredName(repos: models.Repository[], name: string) {\n+        const trimmedName = name.trim();\n+        const newRepos = repos.filter(repo => !repo.name || repo.name.toLowerCase().includes(trimmedName.toLowerCase()));\n+        return newRepos;\n+    }\n+\n+    private filteredStatus(repos: models.Repository[], status: string) {\n+        const newRepos = repos.filter(repo => repo.connectionState.status.includes(status));\n+        return newRepos;\n+    }\n+\n+    private filteredProject(repos: models.Repository[], project: string) {\n+        const newRepos = repos.filter(repo => repo.project.includes(project));",
        "comment_created_at": "2024-09-21T07:06:10+00:00",
        "comment_author": "surajyadav1108",
        "comment_body": "its a safe check for repos which dosen't have Project Values. So it won't break the code if the filter is other then \"all\" for undefined project ",
        "pr_file_module": null
      },
      {
        "comment_id": "1769509548",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 19829,
        "pr_file": "ui/src/app/settings/components/repos-list/repos-list.tsx",
        "discussion_id": "1766755078",
        "commented_code": "@@ -906,6 +1012,54 @@ export class ReposList extends React.Component<\n         }\n     }\n \n+    // filtering function\n+    private filteredRepos(repos: models.Repository[], type: string, project: string, status: string, name: string) {\n+        let newRepos = repos;\n+\n+        if (name !== '' || name !== null) {\n+            const response = this.filteredName(newRepos, name);\n+            newRepos = response;\n+        }\n+\n+        if (type !== 'all') {\n+            const response = this.filteredType(newRepos, type);\n+            newRepos = response;\n+        }\n+\n+        if (status !== 'all') {\n+            const response = this.filteredStatus(newRepos, status);\n+            newRepos = response;\n+        }\n+\n+        if (project !== 'all') {\n+            const response = this.filteredProject(newRepos, project);\n+            newRepos = response;\n+        }\n+\n+        return newRepos;\n+    }\n+\n+    private filteredName(repos: models.Repository[], name: string) {\n+        const trimmedName = name.trim();\n+        const newRepos = repos.filter(repo => !repo.name || repo.name.toLowerCase().includes(trimmedName.toLowerCase()));\n+        return newRepos;\n+    }\n+\n+    private filteredStatus(repos: models.Repository[], status: string) {\n+        const newRepos = repos.filter(repo => repo.connectionState.status.includes(status));\n+        return newRepos;\n+    }\n+\n+    private filteredProject(repos: models.Repository[], project: string) {\n+        const newRepos = repos.filter(repo => repo.project.includes(project));",
        "comment_created_at": "2024-09-21T08:26:33+00:00",
        "comment_author": "bianbbc87",
        "comment_body": "Thank you 😄 ",
        "pr_file_module": null
      }
    ]
  }
]