[
  {
    "discussion_id": "2074298886",
    "pr_number": 20097,
    "pr_file": "resource_customizations/apps/Deployment/actions/discovery.lua",
    "created_at": "2025-05-05T22:34:07+00:00",
    "commented_code": "actions[\"pause\"] = {paused}\n end\n actions[\"resume\"] = {[\"disabled\"] = not(paused)}\n+\n+actions[\"scale\"] = {\n+    [\"params\"] = {\n+        {\n+            [\"name\"] = \"scale\",\n+            [\"value\"] = \"\",\n+            [\"type\"] = \"^[0-9]*$\",",
    "repo_full_name": "argoproj/argo-cd",
    "discussion_comments": [
      {
        "comment_id": "2074298886",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 20097,
        "pr_file": "resource_customizations/apps/Deployment/actions/discovery.lua",
        "discussion_id": "2074298886",
        "commented_code": "@@ -7,4 +7,18 @@ if obj.spec.paused ~= nil then\n     actions[\"pause\"] = {paused}\n end\n actions[\"resume\"] = {[\"disabled\"] = not(paused)}\n+\n+actions[\"scale\"] = {\n+    [\"params\"] = {\n+        {\n+            [\"name\"] = \"scale\",\n+            [\"value\"] = \"\",\n+            [\"type\"] = \"^[0-9]*$\",",
        "comment_created_at": "2025-05-05T22:34:07+00:00",
        "comment_author": "agaudreault",
        "comment_body": "nitpick on the name, but having a \"type\" be a validation regexp is not really intuitive.\r\n\r\n```suggestion\r\n            [\"format\"] = \"^[0-9]*$\",\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2092351517",
    "pr_number": 23002,
    "pr_file": "Tiltfile",
    "created_at": "2025-05-16T05:33:00+00:00",
    "commented_code": "+load('ext://restart_process', 'docker_build_with_restart')\n+load('ext://uibutton', 'cmd_button', 'location')\n+\n+# add ui button in web ui to run make codegen-local (top nav)\n+cmd_button(\n+    'make codegen-local',\n+    argv=['sh', '-c', 'make codegen-local'],\n+    location=location.NAV,\n+    icon_name='terminal',\n+    text='make codegen-local',\n+)\n+\n+# build the argocd binary on code changes\n+local_resource(\n+    'build',\n+    'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -mod=readonly -o .tilt-bin/argocd_linux_amd64 cmd/main.go',\n+    deps = [\n+        'applicationset',\n+        'cmd',\n+        'cmpserver',\n+        'commitserver',\n+        'common',\n+        'controller',\n+        'notification-controller',\n+        'pkg',\n+        'reposerver',\n+        'server',\n+        'util',\n+        'go.mod',\n+        'go.sum',\n+    ],\n+)\n+\n+# deploy the argocd manifests\n+k8s_yaml(kustomize('manifests/dev-tilt'))\n+\n+# build dev image\n+docker_build_with_restart(\n+    'argocd', \n+    context='.',\n+    dockerfile='Dockerfile.tilt',\n+    entrypoint=['/usr/bin/tini', '-s', '--'],\n+    live_update=[\n+        sync('.tilt-bin/argocd_linux_amd64', '/usr/local/bin/argocd'),\n+    ],\n+    only=[\n+        '.tilt-bin',\n+        'hack',\n+        'entrypoint.sh',\n+    ],\n+    restart_file='/tilt/.restart-proc'\n+)\n+\n+# build image for argocd-cli jobs\n+docker_build(\n+    'argocd-job', \n+    context='.',\n+    dockerfile='Dockerfile.tilt',\n+    only=[\n+        '.tilt-bin',\n+        'hack',\n+        'entrypoint.sh',\n+    ]\n+)\n+\n+# track argocd-server resources and port forward\n+k8s_resource(\n+    workload='argocd-server',\n+    objects=[\n+        'argocd-server:serviceaccount',\n+        'argocd-server:role',\n+        'argocd-server:rolebinding',\n+        'argocd-cm:configmap',\n+        'argocd-cmd-params-cm:configmap',\n+        'argocd-gpg-keys-cm:configmap',\n+        'argocd-rbac-cm:configmap',\n+        'argocd-ssh-known-hosts-cm:configmap',\n+        'argocd-tls-certs-cm:configmap',\n+        'argocd-secret:secret',\n+        'argocd-server-network-policy:networkpolicy',\n+    ],\n+    port_forwards=[\n+        '8080:8080',\n+    ],\n+)\n+\n+# track crds\n+k8s_resource(\n+    new_name='crds',\n+    objects=[\n+        'applications.argoproj.io:customresourcedefinition',\n+        'applicationsets.argoproj.io:customresourcedefinition',\n+        'appprojects.argoproj.io:customresourcedefinition',\n+    ]\n+)\n+\n+# track argocd-repo-server resources and port forward\n+k8s_resource(\n+    workload='argocd-repo-server',",
    "repo_full_name": "argoproj/argo-cd",
    "discussion_comments": [
      {
        "comment_id": "2092351517",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 23002,
        "pr_file": "Tiltfile",
        "discussion_id": "2092351517",
        "commented_code": "@@ -0,0 +1,190 @@\n+load('ext://restart_process', 'docker_build_with_restart')\n+load('ext://uibutton', 'cmd_button', 'location')\n+\n+# add ui button in web ui to run make codegen-local (top nav)\n+cmd_button(\n+    'make codegen-local',\n+    argv=['sh', '-c', 'make codegen-local'],\n+    location=location.NAV,\n+    icon_name='terminal',\n+    text='make codegen-local',\n+)\n+\n+# build the argocd binary on code changes\n+local_resource(\n+    'build',\n+    'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -mod=readonly -o .tilt-bin/argocd_linux_amd64 cmd/main.go',\n+    deps = [\n+        'applicationset',\n+        'cmd',\n+        'cmpserver',\n+        'commitserver',\n+        'common',\n+        'controller',\n+        'notification-controller',\n+        'pkg',\n+        'reposerver',\n+        'server',\n+        'util',\n+        'go.mod',\n+        'go.sum',\n+    ],\n+)\n+\n+# deploy the argocd manifests\n+k8s_yaml(kustomize('manifests/dev-tilt'))\n+\n+# build dev image\n+docker_build_with_restart(\n+    'argocd', \n+    context='.',\n+    dockerfile='Dockerfile.tilt',\n+    entrypoint=['/usr/bin/tini', '-s', '--'],\n+    live_update=[\n+        sync('.tilt-bin/argocd_linux_amd64', '/usr/local/bin/argocd'),\n+    ],\n+    only=[\n+        '.tilt-bin',\n+        'hack',\n+        'entrypoint.sh',\n+    ],\n+    restart_file='/tilt/.restart-proc'\n+)\n+\n+# build image for argocd-cli jobs\n+docker_build(\n+    'argocd-job', \n+    context='.',\n+    dockerfile='Dockerfile.tilt',\n+    only=[\n+        '.tilt-bin',\n+        'hack',\n+        'entrypoint.sh',\n+    ]\n+)\n+\n+# track argocd-server resources and port forward\n+k8s_resource(\n+    workload='argocd-server',\n+    objects=[\n+        'argocd-server:serviceaccount',\n+        'argocd-server:role',\n+        'argocd-server:rolebinding',\n+        'argocd-cm:configmap',\n+        'argocd-cmd-params-cm:configmap',\n+        'argocd-gpg-keys-cm:configmap',\n+        'argocd-rbac-cm:configmap',\n+        'argocd-ssh-known-hosts-cm:configmap',\n+        'argocd-tls-certs-cm:configmap',\n+        'argocd-secret:secret',\n+        'argocd-server-network-policy:networkpolicy',\n+    ],\n+    port_forwards=[\n+        '8080:8080',\n+    ],\n+)\n+\n+# track crds\n+k8s_resource(\n+    new_name='crds',\n+    objects=[\n+        'applications.argoproj.io:customresourcedefinition',\n+        'applicationsets.argoproj.io:customresourcedefinition',\n+        'appprojects.argoproj.io:customresourcedefinition',\n+    ]\n+)\n+\n+# track argocd-repo-server resources and port forward\n+k8s_resource(\n+    workload='argocd-repo-server',",
        "comment_created_at": "2025-05-16T05:33:00+00:00",
        "comment_author": "nitishfy",
        "comment_body": "```suggestion\r\n    workload='repo-server',\r\n```\r\nI'd suggest removing the prefix `argocd-` for all the components. It becomes annoying to try to find the full name of the component. \r\n<img width=\"314\" alt=\"Screenshot 2025-05-16 at 11 02 33â€¯AM\" src=\"https://github.com/user-attachments/assets/f6dc3de5-d493-46a6-a670-b6054b0bbf37\" />\r\n\r\n",
        "pr_file_module": null
      }
    ]
  }
]