[
  {
    "discussion_id": "1869994720",
    "pr_number": 18646,
    "pr_file": "ui/src/app/applications/components/application-deployment-history/revision-metadata-rows.tsx",
    "created_at": "2024-12-04T17:29:38+00:00",
    "commented_code": "import {DataLoader} from 'argo-ui';\n import * as React from 'react';\n-import {Timestamp} from '../../../shared/components/timestamp';\n-import {ApplicationSource, RevisionMetadata, ChartDetails} from '../../../shared/models';\n+import {Timestamp} from '../../../shared/components';\n+import {ApplicationSource, RevisionMetadata, ChartDetails, OCIMetadata} from '../../../shared/models';\n import {services} from '../../../shared/services';\n \n export const RevisionMetadataRows = (props: {applicationName: string; applicationNamespace: string; source: ApplicationSource; index: number; versionId: number | null}) => {\n+    if (props?.source?.repoURL?.startsWith('oci://')) {\n+        return (\n+            <DataLoader\n+                input={props}\n+                load={input => services.applications.ociMetadata(input.applicationName, input.applicationNamespace, input.source.targetRevision, input.index, input.versionId)}>\n+                {(m: OCIMetadata) => (\n+                    <div>\n+                        <div className='row'>\n+                            <div className='columns small-3'>OCI Image:</div>\n+                            <div className='columns small-9'>\n+                                {props.source.repoURL}&nbsp;\n+                                {m.imageUrl && (\n+                                    <a\n+                                        title={m.imageUrl}\n+                                        onClick={e => {\n+                                            e.stopPropagation();\n+                                            window.open(m.imageUrl);\n+                                        }}>",
    "repo_full_name": "argoproj/argo-cd",
    "discussion_comments": [
      {
        "comment_id": "1869994720",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 18646,
        "pr_file": "ui/src/app/applications/components/application-deployment-history/revision-metadata-rows.tsx",
        "discussion_id": "1869994720",
        "commented_code": "@@ -1,10 +1,50 @@\n import {DataLoader} from 'argo-ui';\n import * as React from 'react';\n-import {Timestamp} from '../../../shared/components/timestamp';\n-import {ApplicationSource, RevisionMetadata, ChartDetails} from '../../../shared/models';\n+import {Timestamp} from '../../../shared/components';\n+import {ApplicationSource, RevisionMetadata, ChartDetails, OCIMetadata} from '../../../shared/models';\n import {services} from '../../../shared/services';\n \n export const RevisionMetadataRows = (props: {applicationName: string; applicationNamespace: string; source: ApplicationSource; index: number; versionId: number | null}) => {\n+    if (props?.source?.repoURL?.startsWith('oci://')) {\n+        return (\n+            <DataLoader\n+                input={props}\n+                load={input => services.applications.ociMetadata(input.applicationName, input.applicationNamespace, input.source.targetRevision, input.index, input.versionId)}>\n+                {(m: OCIMetadata) => (\n+                    <div>\n+                        <div className='row'>\n+                            <div className='columns small-3'>OCI Image:</div>\n+                            <div className='columns small-9'>\n+                                {props.source.repoURL}&nbsp;\n+                                {m.imageUrl && (\n+                                    <a\n+                                        title={m.imageUrl}\n+                                        onClick={e => {\n+                                            e.stopPropagation();\n+                                            window.open(m.imageUrl);\n+                                        }}>",
        "comment_created_at": "2024-12-04T17:29:38+00:00",
        "comment_author": "crenshaw-dev",
        "comment_body": "Need to be super careful about injection here... do we need to do any sanitization on imageUrl?",
        "pr_file_module": null
      },
      {
        "comment_id": "1995751101",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 18646,
        "pr_file": "ui/src/app/applications/components/application-deployment-history/revision-metadata-rows.tsx",
        "discussion_id": "1869994720",
        "commented_code": "@@ -1,10 +1,50 @@\n import {DataLoader} from 'argo-ui';\n import * as React from 'react';\n-import {Timestamp} from '../../../shared/components/timestamp';\n-import {ApplicationSource, RevisionMetadata, ChartDetails} from '../../../shared/models';\n+import {Timestamp} from '../../../shared/components';\n+import {ApplicationSource, RevisionMetadata, ChartDetails, OCIMetadata} from '../../../shared/models';\n import {services} from '../../../shared/services';\n \n export const RevisionMetadataRows = (props: {applicationName: string; applicationNamespace: string; source: ApplicationSource; index: number; versionId: number | null}) => {\n+    if (props?.source?.repoURL?.startsWith('oci://')) {\n+        return (\n+            <DataLoader\n+                input={props}\n+                load={input => services.applications.ociMetadata(input.applicationName, input.applicationNamespace, input.source.targetRevision, input.index, input.versionId)}>\n+                {(m: OCIMetadata) => (\n+                    <div>\n+                        <div className='row'>\n+                            <div className='columns small-3'>OCI Image:</div>\n+                            <div className='columns small-9'>\n+                                {props.source.repoURL}&nbsp;\n+                                {m.imageUrl && (\n+                                    <a\n+                                        title={m.imageUrl}\n+                                        onClick={e => {\n+                                            e.stopPropagation();\n+                                            window.open(m.imageUrl);\n+                                        }}>",
        "comment_created_at": "2025-03-14T15:08:15+00:00",
        "comment_author": "crenshaw-dev",
        "comment_body": "I'd suggest dropping the image URL from the UI for now and add it as a follow-up enhancement. I think we might want to enforce domain allowlists or something like that.",
        "pr_file_module": null
      },
      {
        "comment_id": "1995882169",
        "repo_full_name": "argoproj/argo-cd",
        "pr_number": 18646,
        "pr_file": "ui/src/app/applications/components/application-deployment-history/revision-metadata-rows.tsx",
        "discussion_id": "1869994720",
        "commented_code": "@@ -1,10 +1,50 @@\n import {DataLoader} from 'argo-ui';\n import * as React from 'react';\n-import {Timestamp} from '../../../shared/components/timestamp';\n-import {ApplicationSource, RevisionMetadata, ChartDetails} from '../../../shared/models';\n+import {Timestamp} from '../../../shared/components';\n+import {ApplicationSource, RevisionMetadata, ChartDetails, OCIMetadata} from '../../../shared/models';\n import {services} from '../../../shared/services';\n \n export const RevisionMetadataRows = (props: {applicationName: string; applicationNamespace: string; source: ApplicationSource; index: number; versionId: number | null}) => {\n+    if (props?.source?.repoURL?.startsWith('oci://')) {\n+        return (\n+            <DataLoader\n+                input={props}\n+                load={input => services.applications.ociMetadata(input.applicationName, input.applicationNamespace, input.source.targetRevision, input.index, input.versionId)}>\n+                {(m: OCIMetadata) => (\n+                    <div>\n+                        <div className='row'>\n+                            <div className='columns small-3'>OCI Image:</div>\n+                            <div className='columns small-9'>\n+                                {props.source.repoURL}&nbsp;\n+                                {m.imageUrl && (\n+                                    <a\n+                                        title={m.imageUrl}\n+                                        onClick={e => {\n+                                            e.stopPropagation();\n+                                            window.open(m.imageUrl);\n+                                        }}>",
        "comment_created_at": "2025-03-14T16:28:05+00:00",
        "comment_author": "blakepettersson",
        "comment_body": "Sounds good to me \ud83d\udc4d ",
        "pr_file_module": null
      }
    ]
  }
]