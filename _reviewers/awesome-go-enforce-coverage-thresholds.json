[
  {
    "discussion_id": "1713369345",
    "pr_number": 4492,
    "pr_file": "README.md",
    "created_at": "2024-08-12T08:41:10+00:00",
    "commented_code": "- [go-dsp](https://github.com/mjibson/go-dsp) - Digital Signal Processing for Go.\n - [go-estimate](https://github.com/milosgajdos/go-estimate) - State estimation and filtering algorithms in Go.\n - [go-gt](https://github.com/ThePaw/go-gt) - Graph theory algorithms written in \"Go\" language.\n+- [go-hep](https://github.com/go-hep/hep) - hep is a set of libraries and tools to perform High Energy Physics analyses with ease and Go.",
    "repo_full_name": "avelino/awesome-go",
    "discussion_comments": [
      {
        "comment_id": "1713369345",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 4492,
        "pr_file": "README.md",
        "discussion_id": "1713369345",
        "commented_code": "@@ -2037,6 +2037,7 @@ _Libraries for scientific computing and data analyzing._\n - [go-dsp](https://github.com/mjibson/go-dsp) - Digital Signal Processing for Go.\n - [go-estimate](https://github.com/milosgajdos/go-estimate) - State estimation and filtering algorithms in Go.\n - [go-gt](https://github.com/ThePaw/go-gt) - Graph theory algorithms written in \"Go\" language.\n+- [go-hep](https://github.com/go-hep/hep) - hep is a set of libraries and tools to perform High Energy Physics analyses with ease and Go.",
        "comment_created_at": "2024-08-12T08:41:10+00:00",
        "comment_author": "yassinebenaid",
        "comment_body": "Test coverage : 72%, the minimum required coverage is 80%.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1714874339",
    "pr_number": 4759,
    "pr_file": "README.md",
    "created_at": "2024-08-13T08:19:24+00:00",
    "commented_code": "- [govcr](https://github.com/seborama/govcr) - HTTP mock for Golang: record and replay HTTP interactions for offline testing.\n   - [hoverfly](https://github.com/SpectoLabs/hoverfly) - HTTP(S) proxy for recording and simulating REST/SOAP APIs with extensible middleware and easy-to-use CLI.\n   - [httpmock](https://github.com/jarcoal/httpmock) - Easy mocking of HTTP responses from external resources.\n+  - [httpmockserver](https://github.com/ybbus/httpmockserver) - HTTP Mock Server that provides an easy way to mock external http resources with plenty of validators and matchers.",
    "repo_full_name": "avelino/awesome-go",
    "discussion_comments": [
      {
        "comment_id": "1714874339",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 4759,
        "pr_file": "README.md",
        "discussion_id": "1714874339",
        "commented_code": "@@ -2288,6 +2288,7 @@ _Libraries for testing codebases and generating test data._\n   - [govcr](https://github.com/seborama/govcr) - HTTP mock for Golang: record and replay HTTP interactions for offline testing.\n   - [hoverfly](https://github.com/SpectoLabs/hoverfly) - HTTP(S) proxy for recording and simulating REST/SOAP APIs with extensible middleware and easy-to-use CLI.\n   - [httpmock](https://github.com/jarcoal/httpmock) - Easy mocking of HTTP responses from external resources.\n+  - [httpmockserver](https://github.com/ybbus/httpmockserver) - HTTP Mock Server that provides an easy way to mock external http resources with plenty of validators and matchers.",
        "comment_created_at": "2024-08-13T08:19:24+00:00",
        "comment_author": "yassinebenaid",
        "comment_body": "- The coverage is 72%. The minimum required threshold is 80%.\r\n- The exported types and functions are missing doc comments.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1713455961",
    "pr_number": 4526,
    "pr_file": "README.md",
    "created_at": "2024-08-12T09:50:20+00:00",
    "commented_code": "- [jwt](https://github.com/pascaldekloe/jwt) - Lightweight JSON Web Token (JWT) library.\n - [jwt](https://github.com/cristalhq/jwt) - Safe, simple and fast JSON Web Tokens for Go.\n - [jwt-auth](https://github.com/adam-hanna/jwt-auth) - JWT middleware for Golang http servers with many configuration options.\n+- [jwx](https://github.com/lestrrat-go/jwx) - Go module implementing various JWx (JWA/JWE/JWK/JWS/JWT, otherwise known as JOSE) technologies",
    "repo_full_name": "avelino/awesome-go",
    "discussion_comments": [
      {
        "comment_id": "1713455961",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 4526,
        "pr_file": "README.md",
        "discussion_id": "1713455961",
        "commented_code": "@@ -243,6 +243,7 @@ _Libraries for implementing authentications schemes._\n - [jwt](https://github.com/pascaldekloe/jwt) - Lightweight JSON Web Token (JWT) library.\n - [jwt](https://github.com/cristalhq/jwt) - Safe, simple and fast JSON Web Tokens for Go.\n - [jwt-auth](https://github.com/adam-hanna/jwt-auth) - JWT middleware for Golang http servers with many configuration options.\n+- [jwx](https://github.com/lestrrat-go/jwx) - Go module implementing various JWx (JWA/JWE/JWK/JWS/JWT, otherwise known as JOSE) technologies",
        "comment_created_at": "2024-08-12T09:50:20+00:00",
        "comment_author": "yassinebenaid",
        "comment_body": "Test coverage : 72%, the minimum required coverage is 80%.",
        "pr_file_module": null
      }
    ]
  }
]