[
  {
    "discussion_id": "1610637565",
    "pr_number": 5312,
    "pr_file": ".github/workflows/tests.yaml",
    "created_at": "2024-05-22T20:55:40+00:00",
    "commented_code": "- name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;",
    "repo_full_name": "avelino/awesome-go",
    "discussion_comments": [
      {
        "comment_id": "1610637565",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610637565",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;",
        "comment_created_at": "2024-05-22T20:55:40+00:00",
        "comment_author": "phanirithvij",
        "comment_body": "Why vim?",
        "pr_file_module": null
      },
      {
        "comment_id": "1610847133",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610637565",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;",
        "comment_created_at": "2024-05-23T01:34:28+00:00",
        "comment_author": "kilianc",
        "comment_body": "it's required by the action, it usually comes with the os but the ci worker is a container with almost nothing in it :)\r\n\r\nthe action uses `ex` to replace some text from go's default html coverage",
        "pr_file_module": null
      },
      {
        "comment_id": "1610850149",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610637565",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;",
        "comment_created_at": "2024-05-23T01:40:10+00:00",
        "comment_author": "kilianc",
        "comment_body": "https://github.com/gha-common/go-beautiful-html-coverage/blob/main/scripts/beautify-html.sh#L17-L24",
        "pr_file_module": null
      },
      {
        "comment_id": "1611054914",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610637565",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;",
        "comment_created_at": "2024-05-23T06:10:19+00:00",
        "comment_author": "phanirithvij",
        "comment_body": "Ok",
        "pr_file_module": null
      },
      {
        "comment_id": "1624893707",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610637565",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;",
        "comment_created_at": "2024-06-03T18:39:53+00:00",
        "comment_author": "ccoVeille",
        "comment_body": "> the action uses ex to replace some text from go's default html coverage\n\nWhy `ex` and not  `sed`?\n\nAlso, if you really need `vim`, I would suggest using `vim-nox` package",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1610638645",
    "pr_number": 5312,
    "pr_file": ".github/workflows/tests.yaml",
    "created_at": "2024-05-22T20:56:43+00:00",
    "commented_code": "- name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;\n+    - name: Go Beautiful HTML Coverage\n+      uses: gha-common/go-beautiful-html-coverage@v1",
    "repo_full_name": "avelino/awesome-go",
    "discussion_comments": [
      {
        "comment_id": "1610638645",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610638645",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;\n+    - name: Go Beautiful HTML Coverage\n+      uses: gha-common/go-beautiful-html-coverage@v1",
        "comment_created_at": "2024-05-22T20:56:43+00:00",
        "comment_author": "phanirithvij",
        "comment_body": "When trying to push to the cover branch github actions needs the write permission which only @avelino has access to give.",
        "pr_file_module": null
      },
      {
        "comment_id": "1611141883",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610638645",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;\n+    - name: Go Beautiful HTML Coverage\n+      uses: gha-common/go-beautiful-html-coverage@v1",
        "comment_created_at": "2024-05-23T07:25:10+00:00",
        "comment_author": "avelino",
        "comment_body": "by default the branch is `cover`, I believe we need to bring the current branch for it to work - we don't have the `cover` branch for this flow.\r\n\r\n```\r\n    # The branch to checkout or create and push coverage to.\r\n    # Default: 'cover'\r\n    branch: ''\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1611386970",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610638645",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;\n+    - name: Go Beautiful HTML Coverage\n+      uses: gha-common/go-beautiful-html-coverage@v1",
        "comment_created_at": "2024-05-23T09:59:32+00:00",
        "comment_author": "phanirithvij",
        "comment_body": "I tested on my fork https://github.com/phanirithvij/awesome-go/pull/1\r\nI had to enable github pages.\r\n\r\nNow thinking about it, we already have github pages enabled for this repo, but can we enable one more github pages for the `cover` branch?",
        "pr_file_module": null
      },
      {
        "comment_id": "1612065111",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610638645",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;\n+    - name: Go Beautiful HTML Coverage\n+      uses: gha-common/go-beautiful-html-coverage@v1",
        "comment_created_at": "2024-05-23T17:22:21+00:00",
        "comment_author": "kilianc",
        "comment_body": ">Now thinking about it, we already have github pages enabled for this repo, but can we enable one more github pages for the cover branch?\r\n\r\nif you already have github pages enabled for this repo, it complicates things. Let me think about it.\r\n\r\nfor now I see two options:\r\n\r\n1. create a new repo and dedicate it to code coverage reports\r\n1. refactor the code of the action to take two inputs\r\n   1. The path to `cover.out`\r\n   2. The path to a folder in the branch where to add coverage information",
        "pr_file_module": null
      },
      {
        "comment_id": "1613843546",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610638645",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;\n+    - name: Go Beautiful HTML Coverage\n+      uses: gha-common/go-beautiful-html-coverage@v1",
        "comment_created_at": "2024-05-24T18:04:43+00:00",
        "comment_author": "avelino",
        "comment_body": "GitHub Pages is active, but we don't use it to host the site - it's active because it was used in the past, today we don't use it\r\n\r\nI just changed the default branch of GitHub Pages to the `cover` branch and root folder\r\n<img width=\"756\" alt=\"Screenshot 2024-05-24 at 15 04 19\" src=\"https://github.com/avelino/awesome-go/assets/31996/b662d94d-fa05-4f16-964a-aef1ad04a932\">\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1613848225",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610638645",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;\n+    - name: Go Beautiful HTML Coverage\n+      uses: gha-common/go-beautiful-html-coverage@v1",
        "comment_created_at": "2024-05-24T18:09:25+00:00",
        "comment_author": "phanirithvij",
        "comment_body": "Ok. I just realised wouldn't this add an extra comment for every PR? So we'll have 3 comments then one from sourcery-ai one github-actions and another new with coverage report.\r\n\r\nBut our repo's contributions are rarely changing go code. @kilianc is it possible to detect only if go code changes and run this step?",
        "pr_file_module": null
      },
      {
        "comment_id": "1613850949",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610638645",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;\n+    - name: Go Beautiful HTML Coverage\n+      uses: gha-common/go-beautiful-html-coverage@v1",
        "comment_created_at": "2024-05-24T18:12:40+00:00",
        "comment_author": "avelino",
        "comment_body": "https://github.com/marketplace/actions/verify-changed-files#using-the-contains-function",
        "pr_file_module": null
      },
      {
        "comment_id": "1614702099",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 5312,
        "pr_file": ".github/workflows/tests.yaml",
        "discussion_id": "1610638645",
        "commented_code": "@@ -19,4 +19,8 @@ jobs:\n     - name: Get dependencies\n       run: go get -v -t -d ./...\n     - name: Run tests\n-      run: go test main_test.go main.go\n+      run: go test -coverprofile=cover.out main_test.go main.go\n+    - name: Install Vim\n+      run: apt-get update; apt-get install -y vim;\n+    - name: Go Beautiful HTML Coverage\n+      uses: gha-common/go-beautiful-html-coverage@v1",
        "comment_created_at": "2024-05-25T14:27:49+00:00",
        "comment_author": "kilianc",
        "comment_body": "> But our repo's contributions are rarely changing go code. @kilianc is it possible to detect only if go code changes and run this step?\r\n\r\nChanges to the go files are not the only thing that affects the coverage, but maybe it's acceptable here. I configured [verify-changed-files](https://github.com/marketplace/actions/verify-changed-files#using-the-contains-function) to ignore all `.md` file changes because that's what most of the PRs here are on.\r\n\r\nI kinda liked having it always on because I took as an opportunity for folks to educate themselves about code coverage and copy this process in their own project, but I totally understand that there are already multiple automated comments on each PR.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "108595086",
    "pr_number": 1342,
    "pr_file": ".travis.yml",
    "created_at": "2017-03-29T05:45:28+00:00",
    "commented_code": "install:\n   - go get github.com/russross/blackfriday\n+  - go get github.com/shurcooL/github_flavored_markdown\n   - go get github.com/PuerkitoBio/goquery\n   - go get github.com/gorilla/mux\n   - go get github.com/microcosm-cc/bluemonday",
    "repo_full_name": "avelino/awesome-go",
    "discussion_comments": [
      {
        "comment_id": "108595086",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 1342,
        "pr_file": ".travis.yml",
        "discussion_id": "108595086",
        "commented_code": "@@ -7,6 +7,7 @@ sudo: false\n \n install:\n   - go get github.com/russross/blackfriday\n+  - go get github.com/shurcooL/github_flavored_markdown\n   - go get github.com/PuerkitoBio/goquery\n   - go get github.com/gorilla/mux\n   - go get github.com/microcosm-cc/bluemonday",
        "comment_created_at": "2017-03-29T05:45:28+00:00",
        "comment_author": "dmitshur",
        "comment_body": "Doing `go get github.com/shurcooL/github_flavored_markdown` will implicitly get `github.com/russross/blackfriday` and `github.com/microcosm-cc/bluemonday`, because they're its dependencies. So they can be removed here.\r\n\r\nAdditionally, this entire manual list of dependencies can be simplified to just:\r\n\r\n```\r\ngo get -t -v ./...\r\n```\r\n\r\nWouldn't that be better? That's what most Go projects do, e.g., see [here](https://github.com/gorilla/mux/blob/599cba5e7b6137d46ddf58fb1765f5d928e69604/.travis.yml#L19).",
        "pr_file_module": null
      },
      {
        "comment_id": "108626860",
        "repo_full_name": "avelino/awesome-go",
        "pr_number": 1342,
        "pr_file": ".travis.yml",
        "discussion_id": "108595086",
        "commented_code": "@@ -7,6 +7,7 @@ sudo: false\n \n install:\n   - go get github.com/russross/blackfriday\n+  - go get github.com/shurcooL/github_flavored_markdown\n   - go get github.com/PuerkitoBio/goquery\n   - go get github.com/gorilla/mux\n   - go get github.com/microcosm-cc/bluemonday",
        "comment_created_at": "2017-03-29T09:11:04+00:00",
        "comment_author": "kirillDanshin",
        "comment_body": "@shurcooL I personally do that too, but it may be used to see project's dependencies list, so I just leave it as is.",
        "pr_file_module": null
      }
    ]
  }
]