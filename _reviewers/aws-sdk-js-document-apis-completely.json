[
  {
    "discussion_id": "574012172",
    "pr_number": 3524,
    "pr_file": "lib/config-base.d.ts",
    "created_at": "2021-02-10T19:25:57+00:00",
    "commented_code": "* Used in node.js environments only.\n     */\n    connectTimeout?: number;\n    /**\n     * Custom DNS lookup function.\n     * Defaults to dns.lookup.",
    "repo_full_name": "aws/aws-sdk-js",
    "discussion_comments": [
      {
        "comment_id": "574012172",
        "repo_full_name": "aws/aws-sdk-js",
        "pr_number": 3524,
        "pr_file": "lib/config-base.d.ts",
        "discussion_id": "574012172",
        "commented_code": "@@ -61,6 +61,11 @@ export interface HTTPOptions {\n      * Used in node.js environments only.\n      */\n     connectTimeout?: number;\n+    /**\n+     * Custom DNS lookup function.\n+     * Defaults to dns.lookup.",
        "comment_created_at": "2021-02-10T19:25:57+00:00",
        "comment_author": "AllanZhengYP",
        "comment_body": "Nit: can you specify that they are node.js environments only? And looks like it's only available in newer version: https://github.com/nodejs/node/commit/5bd6f516d82d069ff8710b86108dedc333b2b580\r\n\r\n```suggestion\r\n     * Defaults to dns.lookup.\r\n     * Used in Node.js (>= v12.x) environment only.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "229453899",
    "pr_number": 2253,
    "pr_file": "lib/config.d.ts",
    "created_at": "2018-10-30T19:30:50+00:00",
    "commented_code": "* by DynamoDB.\n     */\n    dynamoDbCrc32?: boolean;\n    /**\n     * whether to request endpoint for operations that allow",
    "repo_full_name": "aws/aws-sdk-js",
    "discussion_comments": [
      {
        "comment_id": "229453899",
        "repo_full_name": "aws/aws-sdk-js",
        "pr_number": 2253,
        "pr_file": "lib/config.d.ts",
        "discussion_id": "229453899",
        "commented_code": "@@ -276,4 +276,9 @@ export abstract class ConfigurationOptions {\n      * by DynamoDB.\n      */\n     dynamoDbCrc32?: boolean;\n+    /**\n+     * whether to request endpoint for operations that allow ",
        "comment_created_at": "2018-10-30T19:30:50+00:00",
        "comment_author": "chrisradek",
        "comment_body": "Grammar: Maybe change to something like\r\n> Whether to enable endpoint discovery for operations that allow optionally using an endpoint returned by the service.\r\n\r\nI couldn't find an example of what other teams were using for their docs.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "225988591",
    "pr_number": 2283,
    "pr_file": "lib/shared-ini/ini-loader.d.ts",
    "created_at": "2018-10-17T15:46:15+00:00",
    "commented_code": "export interface LoadFileOptions {\n  filename?: string,\n  isConfig?: boolean,\n}\n\nexport interface IniFileContent {\n  [key: string]: {[key: string]: string}\n}\n\nexport class IniLoader{\n  \n/** Remove all cached files. Used after config files are updated. */\n  clearCachedFiles():void;\n\n/**\n * Load configurations from config/credentials files and cache them \n * for later use. If no file is specified it will try to load default\n * files.\n * @returns {object} object of all profile information in the file\n */\n  loadFrom(options: LoadFileOptions): IniFileContent;\n\n/**\n * Read specified file and return parsed config object. This method will always\n * read from disk and won't update cache. This is a lower level function of \n * loadFrom().\n * @param filename [string] valid readable file path containing aws credentials\n * or aws configs\n * @param isConfig [boolean] true if specified file is an aws config file; false\n * if the file is an aws credentials file\n */\n  parseFile(filename: string, isConfig: boolean): IniFileContent;\n}\n\nexport function parseFile(filename: string, isConfig: boolean): IniFileContent;",
    "repo_full_name": "aws/aws-sdk-js",
    "discussion_comments": [
      {
        "comment_id": "225988591",
        "repo_full_name": "aws/aws-sdk-js",
        "pr_number": 2283,
        "pr_file": "lib/shared-ini/ini-loader.d.ts",
        "discussion_id": "225988591",
        "commented_code": "@@ -0,0 +1,35 @@\n+export interface LoadFileOptions {\n+  filename?: string,\n+  isConfig?: boolean,\n+}\n+\n+export interface IniFileContent {\n+  [key: string]: {[key: string]: string}\n+}\n+\n+export class IniLoader{\n+  \n+/** Remove all cached files. Used after config files are updated. */\n+  clearCachedFiles():void;\n+\n+/**\n+ * Load configurations from config/credentials files and cache them \n+ * for later use. If no file is specified it will try to load default\n+ * files.\n+ * @returns {object} object of all profile information in the file\n+ */\n+  loadFrom(options: LoadFileOptions): IniFileContent;\n+\n+/**\n+ * Read specified file and return parsed config object. This method will always\n+ * read from disk and won't update cache. This is a lower level function of \n+ * loadFrom().\n+ * @param filename [string] valid readable file path containing aws credentials\n+ * or aws configs\n+ * @param isConfig [boolean] true if specified file is an aws config file; false\n+ * if the file is an aws credentials file\n+ */\n+  parseFile(filename: string, isConfig: boolean): IniFileContent;\n+}\n+\n+export function parseFile(filename: string, isConfig: boolean): IniFileContent;",
        "comment_created_at": "2018-10-17T15:46:15+00:00",
        "comment_author": "chrisradek",
        "comment_body": "Is `parseFile` exposed to consumers of the SDK? If so, it should probably have some documentation, otherwise we don't need typings for it.",
        "pr_file_module": null
      }
    ]
  }
]