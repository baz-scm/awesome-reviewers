[
  {
    "discussion_id": "61648554",
    "pr_number": 976,
    "pr_file": "test/signers/v4.spec.coffee",
    "created_at": "2016-04-29T21:39:14+00:00",
    "commented_code": "describe 'canonicalString', ->\n    it 'sorts the search string', ->\n      req = new AWS.CloudSearchDomain({endpoint: 'host.domain.com'}).search({query: 'foo', cursor: 'initial', queryOptions: '{}'}).build()\n      req = new AWS.CloudSearchDomain({endpoint: 'host.domain.com'})\n        .search({query: 'foo', cursor: 'initial', queryOptions: '{}'})\n        .removeListener('build', AWS.CloudSearchDomain.prototype.convertGetToPost)",
    "repo_full_name": "aws/aws-sdk-js",
    "discussion_comments": [
      {
        "comment_id": "61648554",
        "repo_full_name": "aws/aws-sdk-js",
        "pr_number": 976,
        "pr_file": "test/signers/v4.spec.coffee",
        "discussion_id": "61648554",
        "commented_code": "@@ -117,7 +117,10 @@ describe 'AWS.Signers.V4', ->\n \n   describe 'canonicalString', ->\n     it 'sorts the search string', ->\n-      req = new AWS.CloudSearchDomain({endpoint: 'host.domain.com'}).search({query: 'foo', cursor: 'initial', queryOptions: '{}'}).build()\n+      req = new AWS.CloudSearchDomain({endpoint: 'host.domain.com'})\n+        .search({query: 'foo', cursor: 'initial', queryOptions: '{}'})\n+        .removeListener('build', AWS.CloudSearchDomain.prototype.convertGetToPost)",
        "comment_created_at": "2016-04-29T21:39:14+00:00",
        "comment_author": "LiuJoyceC",
        "comment_body": "This test is testing whether the query string is alphabetically sorted by its field names. The listener that I'm removing here previously did not exist, as it was added as part of this PR, so I'm not removing something that used to be there. Since the listener I added in this PR changes the GET request to a POST, there is no longer a query string, and the test cannot check if it's alphabetically sorted. Therefore, I removed the listener so that just for the purpose of this test, the request is still a GET and has a query string. The other two options I have if I don't remove this listener is to switch the test to use a different operation (I could use `suggest` instead of `search`) or to remove this test altogether.\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "92718343",
    "pr_number": 1268,
    "pr_file": "test/dynamodb/document_client.coffee",
    "created_at": "2016-12-15T22:53:42+00:00",
    "commented_code": "foo: S: 'bar'\n      expect(translateInput(input)).to.eql(params)\n\n    it 'translates empty strings', ->",
    "repo_full_name": "aws/aws-sdk-js",
    "discussion_comments": [
      {
        "comment_id": "92718343",
        "repo_full_name": "aws/aws-sdk-js",
        "pr_number": 1268,
        "pr_file": "test/dynamodb/document_client.coffee",
        "discussion_id": "92718343",
        "commented_code": "@@ -52,6 +52,39 @@ describe 'AWS.DynamoDB.DocumentClient', ->\n         foo: S: 'bar'\n       expect(translateInput(input)).to.eql(params)\n \n+    it 'translates empty strings', ->",
        "comment_created_at": "2016-12-15T22:53:42+00:00",
        "comment_author": "chrisradek",
        "comment_body": "For all these tests where you're making sure we remove empty inputs, can you also add tests to verify that we don't translate empty strings/sets/buffers if `convertEmptyValues` isn't set?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "145843268",
    "pr_number": 1765,
    "pr_file": "features/directconnect/directconnect.feature",
    "created_at": "2017-10-19T22:48:11+00:00",
    "commented_code": "I want to use AWS Direct Connect\n\n  Scenario: Managing connections\n    Given I create a Direct Connect connection with name prefix \"aws-sdk-js\"\n    Then I should get a Direct Connect connection ID\n    And I describe the connection\n    Then the bandwidth should match the connection bandwidth\n    And I delete the Direct Connect connection\n  Scenario: describe connections\n    When I describe the connection\n    Then I should get response of type \"Array\"",
    "repo_full_name": "aws/aws-sdk-js",
    "discussion_comments": [
      {
        "comment_id": "145843268",
        "repo_full_name": "aws/aws-sdk-js",
        "pr_number": 1765,
        "pr_file": "features/directconnect/directconnect.feature",
        "discussion_id": "145843268",
        "commented_code": "@@ -4,12 +4,9 @@ Feature: AWS Direct Connect\n \n   I want to use AWS Direct Connect\n \n-  Scenario: Managing connections\n-    Given I create a Direct Connect connection with name prefix \"aws-sdk-js\"\n-    Then I should get a Direct Connect connection ID\n-    And I describe the connection\n-    Then the bandwidth should match the connection bandwidth\n-    And I delete the Direct Connect connection\n+  Scenario: describe connections\n+    When I describe the connection\n+    Then I should get response of type \"Array\"",
        "comment_created_at": "2017-10-19T22:48:11+00:00",
        "comment_author": "chrisradek",
        "comment_body": "We have a standard way of testing list/describe operations in most of our feature tests that look like this:\r\nhttps://github.com/aws/aws-sdk-js/blob/v2.135.0/features/acm/acm.feature#L7-L10\r\n\r\nIf you follow this patten, you don't have to create your own step definitions, since cucumber will use the ones defined here:\r\nhttps://github.com/aws/aws-sdk-js/blob/v2.135.0/features/extra/hooks.js#L56",
        "pr_file_module": null
      }
    ]
  }
]