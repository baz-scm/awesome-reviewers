[
  {
    "discussion_id": "2152576930",
    "pr_number": 50644,
    "pr_file": "sdk/core/System.ClientModel/tests/Auth/AuthenticationTokenProviderTests.cs",
    "created_at": "2025-06-17T15:31:33+00:00",
    "commented_code": "options.Transport = new MockPipelineTransport(\"foo\",\n            m =>\n            {\n                // Assert that the request has no authentication headers\n                Assert.IsFalse(m.Request.Headers.TryGetValue(\"Authorization\", out _), \"Request should not have an Authorization header.\");\n                m.TryGetProperty(typeof(GetTokenOptions), out var flowsObj);\n                if (\n                    flowsObj == null ||\n                    (flowsObj is Dictionary<string, object>[] flowsArr && flowsArr.Length == 0)\n                )\n                {\n                    // Only assert no Authorization header if operation does not override the service level flows.\n                    Assert.IsFalse(m.Request.Headers.TryGetValue(\"Authorization\", out _), \"Request should not have an Authorization header.\");\n                }",
    "repo_full_name": "Azure/azure-sdk-for-net",
    "discussion_comments": [
      {
        "comment_id": "2152576930",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50644,
        "pr_file": "sdk/core/System.ClientModel/tests/Auth/AuthenticationTokenProviderTests.cs",
        "discussion_id": "2152576930",
        "commented_code": "@@ -123,17 +194,27 @@ public NoAuthClient(Uri uri, AuthenticationTokenProvider credential)\n             options.Transport = new MockPipelineTransport(\"foo\",\n             m =>\n             {\n-                // Assert that the request has no authentication headers\n-                Assert.IsFalse(m.Request.Headers.TryGetValue(\"Authorization\", out _), \"Request should not have an Authorization header.\");\n+                m.TryGetProperty(typeof(GetTokenOptions), out var flowsObj);\n+                if (\n+                    flowsObj == null ||\n+                    (flowsObj is Dictionary<string, object>[] flowsArr && flowsArr.Length == 0)\n+                )\n+                {\n+                    // Only assert no Authorization header if operation does not override the service level flows.\n+                    Assert.IsFalse(m.Request.Headers.TryGetValue(\"Authorization\", out _), \"Request should not have an Authorization header.\");\n+                }",
        "comment_created_at": "2025-06-17T15:31:33+00:00",
        "comment_author": "christothes",
        "comment_body": "we need an else block here to assert that the Authorization header is present and populated.",
        "pr_file_module": null
      }
    ]
  }
]