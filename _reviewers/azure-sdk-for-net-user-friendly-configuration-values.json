[
  {
    "discussion_id": "2159569308",
    "pr_number": 50749,
    "pr_file": "sdk/identity/Azure.Identity/CHANGELOG.md",
    "created_at": "2025-06-20T19:38:26+00:00",
    "commented_code": "## 1.15.0-beta.1 (Unreleased)\n\n### Features Added\n- Added support for the `AZURE_TOKEN_CREDENTIALS` environment variable to `DefaultAzureCredential`, which allows for additional credential selection options. The valid values now include any of the credential names available in the default chain (VisualStudioCredential, VisualStudioCodeCredential, AzureCliCredential, AzurePowerShellCredential, AzureDeveloperCliCredential, EnvironmentCredential, WorkloadIdentityCredential, ManagedIdentityCredential, InteractiveBrowserCredential, or BrokerAuthenticationCredential.) **Note:** BrokerAuthenticationCredential require that the project include a reference to Azure.Identity.Broker.",
    "repo_full_name": "Azure/azure-sdk-for-net",
    "discussion_comments": [
      {
        "comment_id": "2159569308",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50749,
        "pr_file": "sdk/identity/Azure.Identity/CHANGELOG.md",
        "discussion_id": "2159569308",
        "commented_code": "@@ -3,6 +3,7 @@\n ## 1.15.0-beta.1 (Unreleased)\n \n ### Features Added\n+- Added support for the `AZURE_TOKEN_CREDENTIALS` environment variable to `DefaultAzureCredential`, which allows for additional credential selection options. The valid values now include any of the credential names available in the default chain (VisualStudioCredential, VisualStudioCodeCredential, AzureCliCredential, AzurePowerShellCredential, AzureDeveloperCliCredential, EnvironmentCredential, WorkloadIdentityCredential, ManagedIdentityCredential, InteractiveBrowserCredential, or BrokerAuthenticationCredential.) **Note:** BrokerAuthenticationCredential require that the project include a reference to Azure.Identity.Broker.",
        "comment_created_at": "2025-06-20T19:38:26+00:00",
        "comment_author": "scottaddie",
        "comment_body": "```suggestion\r\n- Expanded the set of acceptable values for environment variable `AZURE_TOKEN_CREDENTIALS` to allow for selection of a specific credential in the `DefaultAzureCredential` chain. The valid values now include any of the credential names available in the default chain (`VisualStudioCredential`, `VisualStudioCodeCredential`, `AzureCliCredential`, `AzurePowerShellCredential`, `AzureDeveloperCliCredential`, `EnvironmentCredential`, `WorkloadIdentityCredential`, `ManagedIdentityCredential`, `InteractiveBrowserCredential`, or `BrokerAuthenticationCredential`.) **Note:** BrokerAuthenticationCredential requires that the project include a reference to package Azure.Identity.Broker.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2159570531",
    "pr_number": 50749,
    "pr_file": "sdk/identity/Azure.Identity/TROUBLESHOOTING.md",
    "created_at": "2025-06-20T19:39:46+00:00",
    "commented_code": "|---|---|---|\n|`CredentialUnavailableException` raised with message. \"DefaultAzureCredential failed to retrieve a token from the included credentials.\"|All credentials in the `DefaultAzureCredential` chain failed to retrieve a token, each throwing a `CredentialUnavailableException`.|<ul><li>[Enable logging](#enable-and-configure-logging) to verify the credentials being tried, and get further diagnostic information.</li><li>Consult the troubleshooting guide for underlying credential types for more information.</li><ul><li>[EnvironmentCredential](#troubleshoot-environmentcredential-authentication-issues)</li><li>[WorkloadIdentityCredential](#troubleshoot-workloadidentitycredential-authentication-issues)</li><li>[ManagedIdentityCredential](#troubleshoot-managedidentitycredential-authentication-issues)</li><li>[VisualStudioCredential](#troubleshoot-visualstudiocredential-authentication-issues)</li><li>[AzureCliCredential](#troubleshoot-azureclicredential-authentication-issues)</li><li>[AzurePowerShellCredential](#troubleshoot-azurepowershellcredential-authentication-issues)</li></ul>|\n|`RequestFailedException` raised from the client with a status code of 401 or 403|Authentication succeeded but the authorizing Azure service responded with a 401 (Authenticate) or 403 (Forbidden) status code. This error can often be caused by the `DefaultAzureCredential` authenticating an account other than the intended or that the intended account doesn't have the correct permissions or roles assigned.|<ul><li>[Enable logging](#enable-and-configure-logging) to determine which credential in the chain returned the authenticating token.</li><li>In the case a credential other than the expected is returning a token, bypass this by either signing out of the corresponding development tool, or excluding the credential with the ExcludeXXXCredential property in the `DefaultAzureCredentialOptions`</li><li>Ensure that the correct role is assigned to the account being used. For example, a service specific role rather than the subscription Owner role.</li></ul>|\n|`InvalidOperationException` raised with message: \"Invalid value for environment variable AZURE_TOKEN_CREDENTIALS ...\" | An invalid value was set for the AZURE_TOKEN_CREDENTIALS environment variable | Set the environment variable to one of the following values: dev, prod, VisualStudioCredential, VisualStudioCodeCredential, AzureCliCredential, AzurePowerShellCredential, AzureDeveloperCliCredential, EnvironmentCredential, WorkloadIdentityCredential, ManagedIdentityCredential, InteractiveBrowserCredential, or BrokerAuthenticationCredential. **Note:** VisualStudioCodeCredential and BrokerAuthenticationCredential require that the project include a reference to Azure.Identity.Broker. |",
    "repo_full_name": "Azure/azure-sdk-for-net",
    "discussion_comments": [
      {
        "comment_id": "2159570531",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50749,
        "pr_file": "sdk/identity/Azure.Identity/TROUBLESHOOTING.md",
        "discussion_id": "2159570531",
        "commented_code": "@@ -125,6 +125,7 @@ DefaultAzureCredentialOptions options = new\n |---|---|---|\n |`CredentialUnavailableException` raised with message. \"DefaultAzureCredential failed to retrieve a token from the included credentials.\"|All credentials in the `DefaultAzureCredential` chain failed to retrieve a token, each throwing a `CredentialUnavailableException`.|<ul><li>[Enable logging](#enable-and-configure-logging) to verify the credentials being tried, and get further diagnostic information.</li><li>Consult the troubleshooting guide for underlying credential types for more information.</li><ul><li>[EnvironmentCredential](#troubleshoot-environmentcredential-authentication-issues)</li><li>[WorkloadIdentityCredential](#troubleshoot-workloadidentitycredential-authentication-issues)</li><li>[ManagedIdentityCredential](#troubleshoot-managedidentitycredential-authentication-issues)</li><li>[VisualStudioCredential](#troubleshoot-visualstudiocredential-authentication-issues)</li><li>[AzureCliCredential](#troubleshoot-azureclicredential-authentication-issues)</li><li>[AzurePowerShellCredential](#troubleshoot-azurepowershellcredential-authentication-issues)</li></ul>|\n |`RequestFailedException` raised from the client with a status code of 401 or 403|Authentication succeeded but the authorizing Azure service responded with a 401 (Authenticate) or 403 (Forbidden) status code. This error can often be caused by the `DefaultAzureCredential` authenticating an account other than the intended or that the intended account doesn't have the correct permissions or roles assigned.|<ul><li>[Enable logging](#enable-and-configure-logging) to determine which credential in the chain returned the authenticating token.</li><li>In the case a credential other than the expected is returning a token, bypass this by either signing out of the corresponding development tool, or excluding the credential with the ExcludeXXXCredential property in the `DefaultAzureCredentialOptions`</li><li>Ensure that the correct role is assigned to the account being used. For example, a service specific role rather than the subscription Owner role.</li></ul>|\n+|`InvalidOperationException` raised with message: \"Invalid value for environment variable AZURE_TOKEN_CREDENTIALS ...\" | An invalid value was set for the AZURE_TOKEN_CREDENTIALS environment variable | Set the environment variable to one of the following values: dev, prod, VisualStudioCredential, VisualStudioCodeCredential, AzureCliCredential, AzurePowerShellCredential, AzureDeveloperCliCredential, EnvironmentCredential, WorkloadIdentityCredential, ManagedIdentityCredential, InteractiveBrowserCredential, or BrokerAuthenticationCredential. **Note:** VisualStudioCodeCredential and BrokerAuthenticationCredential require that the project include a reference to Azure.Identity.Broker. |",
        "comment_created_at": "2025-06-20T19:39:46+00:00",
        "comment_author": "scottaddie",
        "comment_body": "I noticed the CHANGELOG entry doesn't mention anything about VS Code credential in the last sentence. Should it? Note that credential is mentioned in the last sentence here.\r\n```suggestion\r\n|`InvalidOperationException` raised with message: \"Invalid value for environment variable AZURE_TOKEN_CREDENTIALS ...\" | An invalid value was set for the AZURE_TOKEN_CREDENTIALS environment variable | Set the environment variable to one of the following values: dev, prod, `VisualStudioCredential`, `VisualStudioCodeCredential`, `AzureCliCredential`, `AzurePowerShellCredential`, `AzureDeveloperCliCredential`, `EnvironmentCredential`, `WorkloadIdentityCredential`, `ManagedIdentityCredential`, `InteractiveBrowserCredential`, or `BrokerAuthenticationCredential`. **Note:** `VisualStudioCodeCredential` and `BrokerAuthenticationCredential` require that the project include a reference to package Azure.Identity.Broker. |\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2160166052",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50749,
        "pr_file": "sdk/identity/Azure.Identity/TROUBLESHOOTING.md",
        "discussion_id": "2159570531",
        "commented_code": "@@ -125,6 +125,7 @@ DefaultAzureCredentialOptions options = new\n |---|---|---|\n |`CredentialUnavailableException` raised with message. \"DefaultAzureCredential failed to retrieve a token from the included credentials.\"|All credentials in the `DefaultAzureCredential` chain failed to retrieve a token, each throwing a `CredentialUnavailableException`.|<ul><li>[Enable logging](#enable-and-configure-logging) to verify the credentials being tried, and get further diagnostic information.</li><li>Consult the troubleshooting guide for underlying credential types for more information.</li><ul><li>[EnvironmentCredential](#troubleshoot-environmentcredential-authentication-issues)</li><li>[WorkloadIdentityCredential](#troubleshoot-workloadidentitycredential-authentication-issues)</li><li>[ManagedIdentityCredential](#troubleshoot-managedidentitycredential-authentication-issues)</li><li>[VisualStudioCredential](#troubleshoot-visualstudiocredential-authentication-issues)</li><li>[AzureCliCredential](#troubleshoot-azureclicredential-authentication-issues)</li><li>[AzurePowerShellCredential](#troubleshoot-azurepowershellcredential-authentication-issues)</li></ul>|\n |`RequestFailedException` raised from the client with a status code of 401 or 403|Authentication succeeded but the authorizing Azure service responded with a 401 (Authenticate) or 403 (Forbidden) status code. This error can often be caused by the `DefaultAzureCredential` authenticating an account other than the intended or that the intended account doesn't have the correct permissions or roles assigned.|<ul><li>[Enable logging](#enable-and-configure-logging) to determine which credential in the chain returned the authenticating token.</li><li>In the case a credential other than the expected is returning a token, bypass this by either signing out of the corresponding development tool, or excluding the credential with the ExcludeXXXCredential property in the `DefaultAzureCredentialOptions`</li><li>Ensure that the correct role is assigned to the account being used. For example, a service specific role rather than the subscription Owner role.</li></ul>|\n+|`InvalidOperationException` raised with message: \"Invalid value for environment variable AZURE_TOKEN_CREDENTIALS ...\" | An invalid value was set for the AZURE_TOKEN_CREDENTIALS environment variable | Set the environment variable to one of the following values: dev, prod, VisualStudioCredential, VisualStudioCodeCredential, AzureCliCredential, AzurePowerShellCredential, AzureDeveloperCliCredential, EnvironmentCredential, WorkloadIdentityCredential, ManagedIdentityCredential, InteractiveBrowserCredential, or BrokerAuthenticationCredential. **Note:** VisualStudioCodeCredential and BrokerAuthenticationCredential require that the project include a reference to Azure.Identity.Broker. |",
        "comment_created_at": "2025-06-21T21:58:31+00:00",
        "comment_author": "christothes",
        "comment_body": "I meant to exclude it until the next PR.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2138876254",
    "pr_number": 50531,
    "pr_file": "README.md",
    "created_at": "2025-06-10T22:40:31+00:00",
    "commented_code": "Telemetry collection is on by default.\n\nTo opt out, you can disable telemetry at client construction. Creating a [synchronous policy](https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/Pipeline.md#implementing-a-synchronous-policy) in your application gives you access to the headers sent with each request, allowing you to remove the `User-Agent` header containing client telemetry.  To use the policy, you will add it to the options for your specific client as part of client creation.  This will disable Azure SDK telemetry for all methods in the client. You will need to register the policy with each client created.\nTo opt out, you can disable telemetry by setting the `IsTelemetryEnabled` property to `false` in the client's `DiagnosticsOptions`. This will prevent the Azure SDK from adding telemetry information to the `User-Agent` header for all requests made by the client.\n\n> NOTE: `HttpClient` may set default user agent headers as part of the .NET platform behavior.  This value does not contain any Azure SDK telemetry information.\n\nAn example policy implementation looks like:\n```C# Snippet:RemoveUserAgentPolicy\npublic class RemoveUserAgentPolicy : HttpPipelineSynchronousPolicy\n{\n    public override void OnSendingRequest(HttpMessage message)\n    {\n        message.Request.Headers.Remove(HttpHeader.Names.UserAgent);\n    }\n}\n```\n\nTo use it with a client, you would register it to run for every retry attempt as part of your client options:\n```C#  Snippet:RemoveUserAgentPolicyUse\nYou can disable telemetry when creating a client by setting the `IsTelemetryEnabled` property in the diagnostics options:\n```C#\nUri serviceEndpoint = new Uri(\"https://example.contoso.com\");\nTokenCredential credential = new DefaultAzureCredential();\n           \nSampleClientOptions clientOptions = new SampleClientOptions();\nclientOptions.AddPolicy(new RemoveUserAgentPolicy(), HttpPipelinePosition.PerRetry);\n\nSampleClientOptions clientOptions = new SampleClientOptions()\n{\n    Diagnostics = { IsTelemetryEnabled = false }\n};\n\nSampleClient client = new SampleClient(serviceEndpoint, credential, clientOptions);\n```\n\nAlternatively, you can disable telemetry globally by setting the `AZURE_TELEMETRY_DISABLED` environment variable to `true` before creating any clients.",
    "repo_full_name": "Azure/azure-sdk-for-net",
    "discussion_comments": [
      {
        "comment_id": "2138876254",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50531,
        "pr_file": "README.md",
        "discussion_id": "2138876254",
        "commented_code": "@@ -60,32 +60,25 @@ The software may collect information about you and your use of the software and\n \n Telemetry collection is on by default.\n \n-To opt out, you can disable telemetry at client construction. Creating a [synchronous policy](https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/Pipeline.md#implementing-a-synchronous-policy) in your application gives you access to the headers sent with each request, allowing you to remove the `User-Agent` header containing client telemetry.  To use the policy, you will add it to the options for your specific client as part of client creation.  This will disable Azure SDK telemetry for all methods in the client. You will need to register the policy with each client created.\n+To opt out, you can disable telemetry by setting the `IsTelemetryEnabled` property to `false` in the client's `DiagnosticsOptions`. This will prevent the Azure SDK from adding telemetry information to the `User-Agent` header for all requests made by the client.\n \n > NOTE: `HttpClient` may set default user agent headers as part of the .NET platform behavior.  This value does not contain any Azure SDK telemetry information.\n \n-An example policy implementation looks like:\n-```C# Snippet:RemoveUserAgentPolicy\n-public class RemoveUserAgentPolicy : HttpPipelineSynchronousPolicy\n-{\n-    public override void OnSendingRequest(HttpMessage message)\n-    {\n-        message.Request.Headers.Remove(HttpHeader.Names.UserAgent);\n-    }\n-}\n-```\n-\n-To use it with a client, you would register it to run for every retry attempt as part of your client options:\n-```C#  Snippet:RemoveUserAgentPolicyUse\n+You can disable telemetry when creating a client by setting the `IsTelemetryEnabled` property in the diagnostics options:\n+```C#\n Uri serviceEndpoint = new Uri(\"https://example.contoso.com\");\n TokenCredential credential = new DefaultAzureCredential();\n-           \n-SampleClientOptions clientOptions = new SampleClientOptions();\n-clientOptions.AddPolicy(new RemoveUserAgentPolicy(), HttpPipelinePosition.PerRetry);\n+\n+SampleClientOptions clientOptions = new SampleClientOptions()\n+{\n+    Diagnostics = { IsTelemetryEnabled = false }\n+};\n \n SampleClient client = new SampleClient(serviceEndpoint, credential, clientOptions);\n ```\n \n+Alternatively, you can disable telemetry globally by setting the `AZURE_TELEMETRY_DISABLED` environment variable to `true` before creating any clients.",
        "comment_created_at": "2025-06-10T22:40:31+00:00",
        "comment_author": "KrzysztofCwalina",
        "comment_body": "is that really true? @copilot, where did you find out about this?",
        "pr_file_module": null
      },
      {
        "comment_id": "2138883720",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50531,
        "pr_file": "README.md",
        "discussion_id": "2138876254",
        "commented_code": "@@ -60,32 +60,25 @@ The software may collect information about you and your use of the software and\n \n Telemetry collection is on by default.\n \n-To opt out, you can disable telemetry at client construction. Creating a [synchronous policy](https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/Pipeline.md#implementing-a-synchronous-policy) in your application gives you access to the headers sent with each request, allowing you to remove the `User-Agent` header containing client telemetry.  To use the policy, you will add it to the options for your specific client as part of client creation.  This will disable Azure SDK telemetry for all methods in the client. You will need to register the policy with each client created.\n+To opt out, you can disable telemetry by setting the `IsTelemetryEnabled` property to `false` in the client's `DiagnosticsOptions`. This will prevent the Azure SDK from adding telemetry information to the `User-Agent` header for all requests made by the client.\n \n > NOTE: `HttpClient` may set default user agent headers as part of the .NET platform behavior.  This value does not contain any Azure SDK telemetry information.\n \n-An example policy implementation looks like:\n-```C# Snippet:RemoveUserAgentPolicy\n-public class RemoveUserAgentPolicy : HttpPipelineSynchronousPolicy\n-{\n-    public override void OnSendingRequest(HttpMessage message)\n-    {\n-        message.Request.Headers.Remove(HttpHeader.Names.UserAgent);\n-    }\n-}\n-```\n-\n-To use it with a client, you would register it to run for every retry attempt as part of your client options:\n-```C#  Snippet:RemoveUserAgentPolicyUse\n+You can disable telemetry when creating a client by setting the `IsTelemetryEnabled` property in the diagnostics options:\n+```C#\n Uri serviceEndpoint = new Uri(\"https://example.contoso.com\");\n TokenCredential credential = new DefaultAzureCredential();\n-           \n-SampleClientOptions clientOptions = new SampleClientOptions();\n-clientOptions.AddPolicy(new RemoveUserAgentPolicy(), HttpPipelinePosition.PerRetry);\n+\n+SampleClientOptions clientOptions = new SampleClientOptions()\n+{\n+    Diagnostics = { IsTelemetryEnabled = false }\n+};\n \n SampleClient client = new SampleClient(serviceEndpoint, credential, clientOptions);\n ```\n \n+Alternatively, you can disable telemetry globally by setting the `AZURE_TELEMETRY_DISABLED` environment variable to `true` before creating any clients.",
        "comment_created_at": "2025-06-10T22:45:13+00:00",
        "comment_author": "Copilot",
        "comment_body": "Yes, this is accurate. The `AZURE_TELEMETRY_DISABLED` environment variable support is implemented in the Azure.Core source code:\n\n1. **DiagnosticsOptions.cs:75** - `IsTelemetryEnabled = !EnvironmentVariableToBool(Environment.GetEnvironmentVariable(\"AZURE_TELEMETRY_DISABLED\")) ?? true;`\n2. **DiagnosticsOptions.cs:93-95** - XML documentation explicitly states: \"The default value can be controlled process wide by setting `AZURE_TELEMETRY_DISABLED` to `true`, `false`, `1` or `0`.\"\n3. **ClientOptionsTests.cs** - Contains unit test `CanDisableTelemetryWithEnvironmentVariable` that verifies this functionality\n\nThe environment variable is read during DiagnosticsOptions initialization and affects the default value of `IsTelemetryEnabled` for all clients.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2127558101",
    "pr_number": 50436,
    "pr_file": "sdk/extensions/Microsoft.Extensions.Azure/CHANGELOG.md",
    "created_at": "2025-06-04T22:46:49+00:00",
    "commented_code": "### Features Added\n\n- Added support for [federated managed identity](https://learn.microsoft.com/entra/workload-id/workload-identity-federation-config-app-trust-managed-identity?tabs=microsoft-entra-admin-center#azureidentity) support in the client factory by specifying configuration item `credential` as \"managedidentityasfederatedidentity\" and providing the following named configuration items:\n\n  - `tenantId` : The tenant where the target resource was created\n  - `clientId` : The client identifier for the application, which must be granted access on the target resource\n  - `managedIdentityClientId` : The managed identity which you configured as a Federated Identity Credential (FIC)\n  - `federatedAudience`: One of the following token audiences, specific to the cloud that you're running in:",
    "repo_full_name": "Azure/azure-sdk-for-net",
    "discussion_comments": [
      {
        "comment_id": "2127558101",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50436,
        "pr_file": "sdk/extensions/Microsoft.Extensions.Azure/CHANGELOG.md",
        "discussion_id": "2127558101",
        "commented_code": "@@ -4,6 +4,16 @@\n \n ### Features Added\n \n+- Added support for [federated managed identity](https://learn.microsoft.com/entra/workload-id/workload-identity-federation-config-app-trust-managed-identity?tabs=microsoft-entra-admin-center#azureidentity) support in the client factory by specifying configuration item `credential` as \"managedidentityasfederatedidentity\" and providing the following named configuration items:\n+\n+  - `tenantId` : The tenant where the target resource was created\n+  - `clientId` : The client identifier for the application, which must be granted access on the target resource\n+  - `managedIdentityClientId` : The managed identity which you configured as a Federated Identity Credential (FIC)\n+  - `federatedAudience`: One of the following token audiences, specific to the cloud that you're running in:",
        "comment_created_at": "2025-06-04T22:46:49+00:00",
        "comment_author": "christothes",
        "comment_body": "Should we consider making this value something like `AudienceCloud` and accept values like `global` (default), `usgov`, `china` so that users don't need to remember the magic audience strings?",
        "pr_file_module": null
      },
      {
        "comment_id": "2127560619",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50436,
        "pr_file": "sdk/extensions/Microsoft.Extensions.Azure/CHANGELOG.md",
        "discussion_id": "2127558101",
        "commented_code": "@@ -4,6 +4,16 @@\n \n ### Features Added\n \n+- Added support for [federated managed identity](https://learn.microsoft.com/entra/workload-id/workload-identity-federation-config-app-trust-managed-identity?tabs=microsoft-entra-admin-center#azureidentity) support in the client factory by specifying configuration item `credential` as \"managedidentityasfederatedidentity\" and providing the following named configuration items:\n+\n+  - `tenantId` : The tenant where the target resource was created\n+  - `clientId` : The client identifier for the application, which must be granted access on the target resource\n+  - `managedIdentityClientId` : The managed identity which you configured as a Federated Identity Credential (FIC)\n+  - `federatedAudience`: One of the following token audiences, specific to the cloud that you're running in:",
        "comment_created_at": "2025-06-04T22:49:01+00:00",
        "comment_author": "jsquire",
        "comment_body": "I'm good with that, but its @scottaddie's call.   I followed the pattern that he asked for and I'm not sure if there are any wider considerations.",
        "pr_file_module": null
      },
      {
        "comment_id": "2130246074",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50436,
        "pr_file": "sdk/extensions/Microsoft.Extensions.Azure/CHANGELOG.md",
        "discussion_id": "2127558101",
        "commented_code": "@@ -4,6 +4,16 @@\n \n ### Features Added\n \n+- Added support for [federated managed identity](https://learn.microsoft.com/entra/workload-id/workload-identity-federation-config-app-trust-managed-identity?tabs=microsoft-entra-admin-center#azureidentity) support in the client factory by specifying configuration item `credential` as \"managedidentityasfederatedidentity\" and providing the following named configuration items:\n+\n+  - `tenantId` : The tenant where the target resource was created\n+  - `clientId` : The client identifier for the application, which must be granted access on the target resource\n+  - `managedIdentityClientId` : The managed identity which you configured as a Federated Identity Credential (FIC)\n+  - `federatedAudience`: One of the following token audiences, specific to the cloud that you're running in:",
        "comment_created_at": "2025-06-05T20:30:31+00:00",
        "comment_author": "scottaddie",
        "comment_body": "+1 to Chris' suggestion. Most customers won't know this magic audience string.",
        "pr_file_module": null
      },
      {
        "comment_id": "2132973364",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50436,
        "pr_file": "sdk/extensions/Microsoft.Extensions.Azure/CHANGELOG.md",
        "discussion_id": "2127558101",
        "commented_code": "@@ -4,6 +4,16 @@\n \n ### Features Added\n \n+- Added support for [federated managed identity](https://learn.microsoft.com/entra/workload-id/workload-identity-federation-config-app-trust-managed-identity?tabs=microsoft-entra-admin-center#azureidentity) support in the client factory by specifying configuration item `credential` as \"managedidentityasfederatedidentity\" and providing the following named configuration items:\n+\n+  - `tenantId` : The tenant where the target resource was created\n+  - `clientId` : The client identifier for the application, which must be granted access on the target resource\n+  - `managedIdentityClientId` : The managed identity which you configured as a Federated Identity Credential (FIC)\n+  - `federatedAudience`: One of the following token audiences, specific to the cloud that you're running in:",
        "comment_created_at": "2025-06-06T22:27:09+00:00",
        "comment_author": "jsquire",
        "comment_body": "Changed to `azureCloud`",
        "pr_file_module": null
      }
    ]
  }
]