[
  {
    "discussion_id": "2155220117",
    "pr_number": 50534,
    "pr_file": "sdk/core/Azure.Core/Benchmarks.Nuget/PipelineScenario.cs",
    "created_at": "2025-06-18T18:14:23+00:00",
    "commented_code": "﻿using System;\nusing System.Net.Http;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing Azure.Core;\nusing Azure.Core.Pipeline;\n\nnamespace Benchmarks.Nuget\n{\n    public class PipelineScenario\n    {\n        public readonly HttpPipeline _pipeline;\n\n        public PipelineScenario()\n        {\n            var options = new BenchmarkClientOptions\n            {\n                Transport = new HttpClientTransport(new HttpClient())\n            };\n            _pipeline = HttpPipelineBuilder.Build(options);\n        }\n\n        public async Task<Azure.Response> SendAsync()\n        {\n            var message = _pipeline.CreateMessage();\n            message.Request.Uri.Reset(new Uri(\"https://www.example.com\"));\n            await _pipeline.SendAsync(message, CancellationToken.None);",
    "repo_full_name": "Azure/azure-sdk-for-net",
    "discussion_comments": [
      {
        "comment_id": "2155220117",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50534,
        "pr_file": "sdk/core/Azure.Core/Benchmarks.Nuget/PipelineScenario.cs",
        "discussion_id": "2155220117",
        "commented_code": "@@ -0,0 +1,33 @@\n+﻿using System;\n+using System.Net.Http;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Azure.Core;\n+using Azure.Core.Pipeline;\n+\n+namespace Benchmarks.Nuget\n+{\n+    public class PipelineScenario\n+    {\n+        public readonly HttpPipeline _pipeline;\n+\n+        public PipelineScenario()\n+        {\n+            var options = new BenchmarkClientOptions\n+            {\n+                Transport = new HttpClientTransport(new HttpClient())\n+            };\n+            _pipeline = HttpPipelineBuilder.Build(options);\n+        }\n+\n+        public async Task<Azure.Response> SendAsync()\n+        {\n+            var message = _pipeline.CreateMessage();\n+            message.Request.Uri.Reset(new Uri(\"https://www.example.com\"));\n+            await _pipeline.SendAsync(message, CancellationToken.None);",
        "comment_created_at": "2025-06-18T18:14:23+00:00",
        "comment_author": "m-redding",
        "comment_body": "When you're running this, does this work with the example.com uri?\r\n\r\nYou could consider a few alternatives since we want to avoid network calls to isolate client code:\r\n- mocking the transport - it looks like PipelineBenchmark used to use a mock HTTP handler implementation https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/perf/PipelineBenchmark.cs#L66\r\n- using a TestServer. This is an example of using a test server https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/System.ClientModel/tests/Pipeline/ClientPipelineFunctionalTests.cs#L40-L46\r\n- integrating with the test proxy https://github.com/Azure/azure-sdk-tools/blob/main/tools/test-proxy/Azure.Sdk.Tools.TestProxy/README.md",
        "pr_file_module": null
      },
      {
        "comment_id": "2157684780",
        "repo_full_name": "Azure/azure-sdk-for-net",
        "pr_number": 50534,
        "pr_file": "sdk/core/Azure.Core/Benchmarks.Nuget/PipelineScenario.cs",
        "discussion_id": "2155220117",
        "commented_code": "@@ -0,0 +1,33 @@\n+﻿using System;\n+using System.Net.Http;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Azure.Core;\n+using Azure.Core.Pipeline;\n+\n+namespace Benchmarks.Nuget\n+{\n+    public class PipelineScenario\n+    {\n+        public readonly HttpPipeline _pipeline;\n+\n+        public PipelineScenario()\n+        {\n+            var options = new BenchmarkClientOptions\n+            {\n+                Transport = new HttpClientTransport(new HttpClient())\n+            };\n+            _pipeline = HttpPipelineBuilder.Build(options);\n+        }\n+\n+        public async Task<Azure.Response> SendAsync()\n+        {\n+            var message = _pipeline.CreateMessage();\n+            message.Request.Uri.Reset(new Uri(\"https://www.example.com\"));\n+            await _pipeline.SendAsync(message, CancellationToken.None);",
        "comment_created_at": "2025-06-19T21:37:22+00:00",
        "comment_author": "sa7936",
        "comment_body": "I put back the mocking of transport calls ",
        "pr_file_module": null
      }
    ]
  }
]