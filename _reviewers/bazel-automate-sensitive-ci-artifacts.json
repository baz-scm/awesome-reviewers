[
  {
    "discussion_id": "1585221784",
    "pr_number": 22197,
    "pr_file": "src/java_tools/buildjar/java/com/google/devtools/build/java/turbine/profile.iprof",
    "created_at": "2024-04-30T17:11:29+00:00",
    "commented_code": null,
    "repo_full_name": "bazelbuild/bazel",
    "discussion_comments": [
      {
        "comment_id": "1585221784",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22197,
        "pr_file": "src/java_tools/buildjar/java/com/google/devtools/build/java/turbine/profile.iprof",
        "discussion_id": "1585221784",
        "commented_code": null,
        "comment_created_at": "2024-04-30T17:11:29+00:00",
        "comment_author": "fmeum",
        "comment_body": "This file is pretty large and could potentially be used to hide exploits (I promise I didn't :-)). It would be great if this could be regenerated on import, followed by a rerun of the benchmark.",
        "pr_file_module": null
      },
      {
        "comment_id": "1585285747",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22197,
        "pr_file": "src/java_tools/buildjar/java/com/google/devtools/build/java/turbine/profile.iprof",
        "discussion_id": "1585221784",
        "commented_code": null,
        "comment_created_at": "2024-04-30T18:04:09+00:00",
        "comment_author": "cushon",
        "comment_body": "I'm fine with this as a way to get started. Did you have ideas for updating this automatically with CI, or was the idea for now that whoever does the import could regenerate it?",
        "pr_file_module": null
      },
      {
        "comment_id": "1585459489",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22197,
        "pr_file": "src/java_tools/buildjar/java/com/google/devtools/build/java/turbine/profile.iprof",
        "discussion_id": "1585221784",
        "commented_code": null,
        "comment_created_at": "2024-04-30T19:57:04+00:00",
        "comment_author": "fmeum",
        "comment_body": "We could probably replace the `bazel run` script with an aspect that runs a modified Turbine action to collect the profile as an output file. But CI has a lot of other stuff running in parallel, so profiling may not lead to accurate results anymore. Profile generation is highly non-reproducible. Alternatively, we could run this in the release pipeline for java_tools.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1648571419",
    "pr_number": 22787,
    "pr_file": "third_party/fastutil.proguard",
    "created_at": "2024-06-21T07:58:19+00:00",
    "commented_code": "+-dontobfuscate",
    "repo_full_name": "bazelbuild/bazel",
    "discussion_comments": [
      {
        "comment_id": "1648571419",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22787,
        "pr_file": "third_party/fastutil.proguard",
        "discussion_id": "1648571419",
        "commented_code": "@@ -0,0 +1,8 @@\n+-dontobfuscate",
        "comment_created_at": "2024-06-21T07:58:19+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "@fmeum Unfortunately, our internal policy doesn't allow importing this file under bazel's own third_party to prevent potential bundling dependencies. I assume this is authored by you, right? Can you move this to the tools directory instead?",
        "pr_file_module": null
      },
      {
        "comment_id": "1648596926",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22787,
        "pr_file": "third_party/fastutil.proguard",
        "discussion_id": "1648571419",
        "commented_code": "@@ -0,0 +1,8 @@\n+-dontobfuscate",
        "comment_created_at": "2024-06-21T08:20:55+00:00",
        "comment_author": "fmeum",
        "comment_body": "Do you mean that I should move the file into `tools`, but keep the `genrule` referencing it in `third_party`? Wouldn't that cause the file to show up under `@bazel_tools//tools`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1648638459",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22787,
        "pr_file": "third_party/fastutil.proguard",
        "discussion_id": "1648571419",
        "commented_code": "@@ -0,0 +1,8 @@\n+-dontobfuscate",
        "comment_created_at": "2024-06-21T08:50:01+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "Yes, as long as it's not included in https://github.com/bazelbuild/bazel/blob/dd48c1a766519b5ad95ffdb515d6097ef3739124/tools/BUILD#L43, it should be fine.",
        "pr_file_module": null
      },
      {
        "comment_id": "1648640151",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22787,
        "pr_file": "third_party/fastutil.proguard",
        "discussion_id": "1648571419",
        "commented_code": "@@ -0,0 +1,8 @@\n+-dontobfuscate",
        "comment_created_at": "2024-06-21T08:51:27+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "So maybe under `tools/proguard`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1648654619",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22787,
        "pr_file": "third_party/fastutil.proguard",
        "discussion_id": "1648571419",
        "commented_code": "@@ -0,0 +1,8 @@\n+-dontobfuscate",
        "comment_created_at": "2024-06-21T09:03:36+00:00",
        "comment_author": "fmeum",
        "comment_body": "I moved it into `tools` and added it to `exclude` so that excluding it is documented as an explicit choice.",
        "pr_file_module": null
      },
      {
        "comment_id": "1648655404",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22787,
        "pr_file": "third_party/fastutil.proguard",
        "discussion_id": "1648571419",
        "commented_code": "@@ -0,0 +1,8 @@\n+-dontobfuscate",
        "comment_created_at": "2024-06-21T09:04:17+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "SG, thank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "1648656198",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 22787,
        "pr_file": "third_party/fastutil.proguard",
        "discussion_id": "1648571419",
        "commented_code": "@@ -0,0 +1,8 @@\n+-dontobfuscate",
        "comment_created_at": "2024-06-21T09:04:58+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "To fix the CI breakage, you probably have to sync to HEAD.",
        "pr_file_module": null
      }
    ]
  }
]