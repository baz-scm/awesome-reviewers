[
  {
    "discussion_id": "1692772004",
    "pr_number": 23106,
    "pr_file": "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java",
    "created_at": "2024-07-26T09:27:30+00:00",
    "commented_code": "Credentials create(Map<URI, Map<String, List<String>>> authHeaders);\n   }\n \n-  public DownloadManager(RepositoryCache repositoryCache, Downloader downloader) {\n+  public DownloadManager(\n+      RepositoryCache repositoryCache, Downloader downloader, HttpDownloader httpDownloader) {",
    "repo_full_name": "bazelbuild/bazel",
    "discussion_comments": [
      {
        "comment_id": "1692772004",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java",
        "discussion_id": "1692772004",
        "commented_code": "@@ -71,9 +72,11 @@ public interface CredentialFactory {\n     Credentials create(Map<URI, Map<String, List<String>>> authHeaders);\n   }\n \n-  public DownloadManager(RepositoryCache repositoryCache, Downloader downloader) {\n+  public DownloadManager(\n+      RepositoryCache repositoryCache, Downloader downloader, HttpDownloader httpDownloader) {",
        "comment_created_at": "2024-07-26T09:27:30+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "What's the difference between Downloader and HttpDownloader? Can you please add a comment somewhere to explain why we need both?",
        "pr_file_module": null
      },
      {
        "comment_id": "1692793850",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java",
        "discussion_id": "1692772004",
        "commented_code": "@@ -71,9 +72,11 @@ public interface CredentialFactory {\n     Credentials create(Map<URI, Map<String, List<String>>> authHeaders);\n   }\n \n-  public DownloadManager(RepositoryCache repositoryCache, Downloader downloader) {\n+  public DownloadManager(\n+      RepositoryCache repositoryCache, Downloader downloader, HttpDownloader httpDownloader) {",
        "comment_created_at": "2024-07-26T09:46:19+00:00",
        "comment_author": "criemen",
        "comment_body": "I documented the need for the separate `HttpDownloader` in the constructor, and renamed the field to be clearer. As to why exactly the bzlmod downloads want to side-step the `GrpcRemoteDownloader`, if set up, I don't know. This is just semantics-preserving. @fmeum I guess this is your department?\r\n\r\nIf we don't actually need this special case, we could probably unify the two download methods more by an internal method that gets an argument whether to check the is-downloads-disabled-flag, and by taking some sort of outputstream - which in the bzlmod case is an in-memory-buffer, and in the general case is backed by the FS. That's a future refactoring though, that's unrelated to this PR. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1692847486",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java",
        "discussion_id": "1692772004",
        "commented_code": "@@ -71,9 +72,11 @@ public interface CredentialFactory {\n     Credentials create(Map<URI, Map<String, List<String>>> authHeaders);\n   }\n \n-  public DownloadManager(RepositoryCache repositoryCache, Downloader downloader) {\n+  public DownloadManager(\n+      RepositoryCache repositoryCache, Downloader downloader, HttpDownloader httpDownloader) {",
        "comment_created_at": "2024-07-26T10:17:28+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "Thanks a lot! I believe the reason we use a different one for Bazel registry is because we don't want `--repository_disable_download` to stop Bazel from accessing registries?\r\n\r\nhttps://github.com/bazelbuild/bazel/pull/23106/files#diff-5d6816db4205f516688ad1a3f96d88ccdc0b03523a1658621ede92589268b3baL358\r\n\r\nAnd that reminds me to ask does `--repository_disable_download` have any effect on downloading remote build artifacts? /cc @fmeum ",
        "pr_file_module": null
      },
      {
        "comment_id": "1692884495",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java",
        "discussion_id": "1692772004",
        "commented_code": "@@ -71,9 +72,11 @@ public interface CredentialFactory {\n     Credentials create(Map<URI, Map<String, List<String>>> authHeaders);\n   }\n \n-  public DownloadManager(RepositoryCache repositoryCache, Downloader downloader) {\n+  public DownloadManager(\n+      RepositoryCache repositoryCache, Downloader downloader, HttpDownloader httpDownloader) {",
        "comment_created_at": "2024-07-26T10:47:44+00:00",
        "comment_author": "fmeum",
        "comment_body": "I don't know enough about the use cases of `GrpcRemoteDownloader` to decide whether we could expect it to have access to Bazel registries, but I would guess that this should work and it was only left out of the Bzlmod implementation because nobody was certain that it would work. @Wyverald Is that correct? :-)\r\n\r\nI'm pretty sure `--repository_disable_download` isn't related to this since I only very recently made it so that this flag doesn't stop registry access. I'm also pretty sure that it doesn't interact in any way with remote build artifact downloads.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1692936674",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java",
        "discussion_id": "1692772004",
        "commented_code": "@@ -71,9 +72,11 @@ public interface CredentialFactory {\n     Credentials create(Map<URI, Map<String, List<String>>> authHeaders);\n   }\n \n-  public DownloadManager(RepositoryCache repositoryCache, Downloader downloader) {\n+  public DownloadManager(\n+      RepositoryCache repositoryCache, Downloader downloader, HttpDownloader httpDownloader) {",
        "comment_created_at": "2024-07-26T11:35:11+00:00",
        "comment_author": "criemen",
        "comment_body": "Ah, I think I got it:\r\n* `repository_disable_download` is checked in `DownloadManager`, so it doesn't matter to this discussion (but it explains why we need two different top-level methods here)\r\n* The method `downloadAndReadOneUrl` that's used by the bzlmod downloader only exists on `HttpDownloader`, not on the `Downloader` interface or the `GrpcRemoteDownloader`.\r\n\r\nI suppose some refactoring could unify this interface more, and then, potentially, also access the registry through the `GrpcRemoteDownloader`. Then we'd be able to get rid of the separately passed in `HttpDownloader`.\r\n\r\nRemote build artifact downloading (through HTTP) goes through `HttpCacheClient` which is an entirely different code path, and doesn't use `HttpDownloader` - it rather uses some low-level netty API for implementing the file transfer.",
        "pr_file_module": null
      },
      {
        "comment_id": "1693074178",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java",
        "discussion_id": "1692772004",
        "commented_code": "@@ -71,9 +72,11 @@ public interface CredentialFactory {\n     Credentials create(Map<URI, Map<String, List<String>>> authHeaders);\n   }\n \n-  public DownloadManager(RepositoryCache repositoryCache, Downloader downloader) {\n+  public DownloadManager(\n+      RepositoryCache repositoryCache, Downloader downloader, HttpDownloader httpDownloader) {",
        "comment_created_at": "2024-07-26T13:37:02+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "After resolving the other comment, now I believe we can actually merge those two, it should be fine to use GrpcRemoteDownloader for downloading files from Bazel registry. Let me know if you want to merge them in this PR or a follow up one. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1693080483",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java",
        "discussion_id": "1692772004",
        "commented_code": "@@ -71,9 +72,11 @@ public interface CredentialFactory {\n     Credentials create(Map<URI, Map<String, List<String>>> authHeaders);\n   }\n \n-  public DownloadManager(RepositoryCache repositoryCache, Downloader downloader) {\n+  public DownloadManager(\n+      RepositoryCache repositoryCache, Downloader downloader, HttpDownloader httpDownloader) {",
        "comment_created_at": "2024-07-26T13:42:07+00:00",
        "comment_author": "criemen",
        "comment_body": "I'd prefer to get this PR in, so we can get the backport in before the 7.3.0rc1 deadline (Monday).\r\nMerging those methods does require thinking about the API, as the current `Downloader` API takes multiple URLs and an output dir (I think), whereas the bzlmod download supplies a single URL and expects `byte[]` in return.",
        "pr_file_module": null
      },
      {
        "comment_id": "1693110947",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/DownloadManager.java",
        "discussion_id": "1692772004",
        "commented_code": "@@ -71,9 +72,11 @@ public interface CredentialFactory {\n     Credentials create(Map<URI, Map<String, List<String>>> authHeaders);\n   }\n \n-  public DownloadManager(RepositoryCache repositoryCache, Downloader downloader) {\n+  public DownloadManager(\n+      RepositoryCache repositoryCache, Downloader downloader, HttpDownloader httpDownloader) {",
        "comment_created_at": "2024-07-26T13:50:29+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "SG, I'll get this one merged! Thanks for the great work!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1692895926",
    "pr_number": 23106,
    "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
    "created_at": "2024-07-26T10:59:28+00:00",
    "commented_code": "digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
    "repo_full_name": "bazelbuild/bazel",
    "discussion_comments": [
      {
        "comment_id": "1692895926",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
        "discussion_id": "1692895926",
        "commented_code": "@@ -738,8 +735,9 @@ public void beforeCommand(CommandEnvironment env) throws AbruptExitException {\n               digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
        "comment_created_at": "2024-07-26T10:59:28+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "Would this break repository download?",
        "pr_file_module": null
      },
      {
        "comment_id": "1692938960",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
        "discussion_id": "1692895926",
        "commented_code": "@@ -738,8 +735,9 @@ public void beforeCommand(CommandEnvironment env) throws AbruptExitException {\n               digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
        "comment_created_at": "2024-07-26T11:37:44+00:00",
        "comment_author": "criemen",
        "comment_body": "What do you mean by repository download?\r\n\r\nThe way it's supposed to work (and how I understood the previous code path too, that was just more involved):\r\n* The `DelegatingDownloader` is initialized with a `HttpDownloader`\r\n* Consumers pull in the `DelegatingDownloader` object when they're initialized.\r\n* Once the `RemoteModule` is initialized, if a remote (grpc) downloader is configured, that is set into `DelegatingDownloader`. If that object is non-null, it's used now instead of the `HttpDownloader` for all downloads.",
        "pr_file_module": null
      },
      {
        "comment_id": "1692998894",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
        "discussion_id": "1692895926",
        "commented_code": "@@ -738,8 +735,9 @@ public void beforeCommand(CommandEnvironment env) throws AbruptExitException {\n               digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
        "comment_created_at": "2024-07-26T12:34:23+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "Basically, is there a chance to cause a GrpcRemoteDownloader to be set at https://github.com/bazelbuild/bazel/pull/23106/files#diff-b71ad69620096e04eff1317c90d3b0268d0508bd057527f1dbf22583bc267fa4R310-R312 and then later used in StarlarkRepositoryFunction?",
        "pr_file_module": null
      },
      {
        "comment_id": "1693029693",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
        "discussion_id": "1692895926",
        "commented_code": "@@ -738,8 +735,9 @@ public void beforeCommand(CommandEnvironment env) throws AbruptExitException {\n               digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
        "comment_created_at": "2024-07-26T13:00:47+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "I ran some tests, looks like it does. But it is already the case before this change with [remoteDownloaderSupplier](https://cs.opensource.google/bazel/bazel/+/master:src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java;drc=38ade70fed4b34043d21a606717ad2ed1ee9c696;bpv=1;bpt=1;l=168).\r\n\r\nHowever this behaviour does feel strange to me: `--experimental_remote_downloader` can only be used with `--remote_cache` and somehow it affects repository download (`ctx.download_and_extract`) as well.\r\n\r\nI got this error with both Bazel 7.2.1 and Bazel built from this PR\r\n```\r\nbazel build --experimental_remote_downloader=grpc://127.0.0.1:9092 --remote_cache=grpc://127.0.0.1:9092 //examples/cpp:hello-world --repository_cache=\r\n...\r\nERROR: An error occurred during the fetch of repository 'platforms':\r\n   Traceback (most recent call last):\r\n\tFile \"/usr/local/google/home/pcloudy/.cache/bazel/_bazel_pcloudy/3d42a5c7654876aa68e91f3b969deb88/external/bazel_tools/tools/build_defs/repo/http.bzl\", line 131, column 45, in _http_archive_impl\r\n\t\tdownload_info = ctx.download_and_extract(\r\nError in download_and_extract: java.io.IOException: io.grpc.StatusRuntimeException: UNIMPLEMENTED: unknown service build.bazel.remote.asset.v1.Fetch\r\nERROR: no such package '@@platforms//host': java.io.IOException: io.grpc.StatusRuntimeException: UNIMPLEMENTED: unknown service build.bazel.remote.asset.v1.Fetch\r\nERROR: /usr/local/google/home/pcloudy/.cache/bazel/_bazel_pcloudy/3d42a5c7654876aa68e91f3b969deb88/external/bazel_tools/tools/BUILD:97:6: @@bazel_tools//tools:host_platform depends on @@platforms//host:host in repository @@platforms which failed to fetch. no such package '@@platforms//host': java.io.IOException: io.grpc.StatusRuntimeException: UNIMPLEMENTED: unknown service build.bazel.remote.asset.v1.Fetch\r\nERROR: /usr/local/google/home/pcloudy/workspace/my_tests/bazel/examples/cpp/BUILD:7:10: Target @@bazel_tools//tools:host_platform was referenced as a platform, but does not provide PlatformInfo\r\nERROR: Analysis of target '//examples/cpp:hello-world' failed; build aborted\r\n```\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1693032164",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
        "discussion_id": "1692895926",
        "commented_code": "@@ -738,8 +735,9 @@ public void beforeCommand(CommandEnvironment env) throws AbruptExitException {\n               digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
        "comment_created_at": "2024-07-26T13:03:04+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "LGTM since there is no regression, but we probably do want to make sure `ctx.download_and_extract` work with `--experimental_remote_downloader` enabled?",
        "pr_file_module": null
      },
      {
        "comment_id": "1693038802",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
        "discussion_id": "1692895926",
        "commented_code": "@@ -738,8 +735,9 @@ public void beforeCommand(CommandEnvironment env) throws AbruptExitException {\n               digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
        "comment_created_at": "2024-07-26T13:08:57+00:00",
        "comment_author": "criemen",
        "comment_body": "I don't quite understand the error you're getting - agianst which service are you running there?\r\n\r\nGiven the documentation (\"A Remote Asset API endpoint URI, to be used as a remote download proxy\"), redirecting `ctx.download*` is exactly what I'd expect `GrpcRemoteDownloader` to do. I don't think it's related to the remote cache per se, except that a cache service can also choose to be a downloader service (https://github.com/buchgr/bazel-remote for example is).\r\nThat downloader service then (presumably) caches the downloads it's seen, and lives closer on the network than the upstream - then you save on traffic and latency across the internet. \r\n\r\n> UNIMPLEMENTED: unknown service build.bazel.remote.asset.v1.Fetch\r\n\r\nseems like your remote cache you're running locally doesn't implement the remote download api?",
        "pr_file_module": null
      },
      {
        "comment_id": "1693057730",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
        "discussion_id": "1692895926",
        "commented_code": "@@ -738,8 +735,9 @@ public void beforeCommand(CommandEnvironment env) throws AbruptExitException {\n               digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
        "comment_created_at": "2024-07-26T13:23:52+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "I was testing with https://github.com/buchgr/bazel-remote, is it because that ctx.download_and_extract no longer works for downloading http URLs when using the GrpcRemoteDownloader?",
        "pr_file_module": null
      },
      {
        "comment_id": "1693068098",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
        "discussion_id": "1692895926",
        "commented_code": "@@ -738,8 +735,9 @@ public void beforeCommand(CommandEnvironment env) throws AbruptExitException {\n               digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
        "comment_created_at": "2024-07-26T13:31:58+00:00",
        "comment_author": "criemen",
        "comment_body": "Could it be that you didn't set `--experimental_remote_asset_api` for your bazel-remote invocation? That way, I can reproduce the error you've got, with it, everything works as expected.\r\nI'd also assume there's an integration test ensuring this behavior doesn't break.",
        "pr_file_module": null
      },
      {
        "comment_id": "1693069209",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23106,
        "pr_file": "src/main/java/com/google/devtools/build/lib/remote/RemoteModule.java",
        "discussion_id": "1692895926",
        "commented_code": "@@ -738,8 +735,9 @@ public void beforeCommand(CommandEnvironment env) throws AbruptExitException {\n               digestUtil.getDigestFunction(),\n               remoteOptions,\n               verboseFailures,\n-              fallbackDownloader));\n+              fallbackDownloader);\n       downloaderChannel.release();\n+      env.getDownloaderDelegate().setDelegate(remoteDownloader);",
        "comment_created_at": "2024-07-26T13:32:53+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "I see, I was missing `--experimental_remote_asset_api` flag for `bazel-remote`, after adding that flag, everything works! So everything is WAI! Sorry for the noise.",
        "pr_file_module": null
      }
    ]
  }
]