[
  {
    "discussion_id": "918720239",
    "pr_number": 15861,
    "pr_file": "src/test/java/com/google/devtools/build/lib/authandtls/credentialhelper/test_credential_helper.py",
    "created_at": "2022-07-12T08:54:18+00:00",
    "commented_code": "+# Copyright 2022 The Bazel Authors. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"Credential helper for testing.\"\"\"\n+\n+import json\n+import sys\n+\n+\n+def eprint(*args, **kargs):\n+    print(*args, file=sys.stderr, **kargs)\n+\n+\n+def main(argv):\n+    if len(argv) != 2:\n+        eprint(\"Usage: test_credential_helper <command>\")\n+        return 1\n+\n+    if argv[1] == \"get\":",
    "repo_full_name": "bazelbuild/bazel",
    "discussion_comments": [
      {
        "comment_id": "918720239",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 15861,
        "pr_file": "src/test/java/com/google/devtools/build/lib/authandtls/credentialhelper/test_credential_helper.py",
        "discussion_id": "918720239",
        "commented_code": "@@ -0,0 +1,69 @@\n+# Copyright 2022 The Bazel Authors. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"Credential helper for testing.\"\"\"\n+\n+import json\n+import sys\n+\n+\n+def eprint(*args, **kargs):\n+    print(*args, file=sys.stderr, **kargs)\n+\n+\n+def main(argv):\n+    if len(argv) != 2:\n+        eprint(\"Usage: test_credential_helper <command>\")\n+        return 1\n+\n+    if argv[1] == \"get\":",
        "comment_created_at": "2022-07-12T08:54:18+00:00",
        "comment_author": "tjgq",
        "comment_body": "Prefer to exit early on error conditions to keep the indentation level as small as possible:\r\n\r\n```\r\nif argv[1] != \"get\":\r\n  eprint(\"Unknown command ...\")\r\n  return 1\r\n\r\n...\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "921156649",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 15861,
        "pr_file": "src/test/java/com/google/devtools/build/lib/authandtls/credentialhelper/test_credential_helper.py",
        "discussion_id": "918720239",
        "commented_code": "@@ -0,0 +1,69 @@\n+# Copyright 2022 The Bazel Authors. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"Credential helper for testing.\"\"\"\n+\n+import json\n+import sys\n+\n+\n+def eprint(*args, **kargs):\n+    print(*args, file=sys.stderr, **kargs)\n+\n+\n+def main(argv):\n+    if len(argv) != 2:\n+        eprint(\"Usage: test_credential_helper <command>\")\n+        return 1\n+\n+    if argv[1] == \"get\":",
        "comment_created_at": "2022-07-14T13:29:31+00:00",
        "comment_author": "Yannic",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1730815860",
    "pr_number": 23406,
    "pr_file": "src/test/py/bazel/bazel_windows_cpp_test.py",
    "created_at": "2024-08-26T07:30:22+00:00",
    "commented_code": "'  \"@local_config_cc//:cc-toolchain-x64_windows-clang-cl\",',\n         ')',\n     ])\n-    self.ScratchFile('BUILD', [\n-        'platform(',\n-        '  name = \"windows_clang\",',\n-        '  constraint_values = [',\n-        '    \"@platforms//cpu:x86_64\",',\n-        '    \"@platforms//os:windows\",',\n-        '    \"@bazel_tools//tools/cpp:clang-cl\",',\n-        '  ]',\n-        ')',\n-        '',\n-        'cc_binary(',\n-        '  name = \"main\",',\n-        '  srcs = [\"main.cc\"],',\n-        ')',\n-    ])\n-    self.ScratchFile('main.cc', [\n-        'int main() {',\n-        '  return 0;',\n-        '}',\n-    ])\n     exit_code, _, stderr = self.RunBazel([",
    "repo_full_name": "bazelbuild/bazel",
    "discussion_comments": [
      {
        "comment_id": "1730815860",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 23406,
        "pr_file": "src/test/py/bazel/bazel_windows_cpp_test.py",
        "discussion_id": "1730815860",
        "commented_code": "@@ -775,30 +775,65 @@ def testBuildWithClangClByToolchainResolution(self):\n         '  \"@local_config_cc//:cc-toolchain-x64_windows-clang-cl\",',\n         ')',\n     ])\n-    self.ScratchFile('BUILD', [\n-        'platform(',\n-        '  name = \"windows_clang\",',\n-        '  constraint_values = [',\n-        '    \"@platforms//cpu:x86_64\",',\n-        '    \"@platforms//os:windows\",',\n-        '    \"@bazel_tools//tools/cpp:clang-cl\",',\n-        '  ]',\n-        ')',\n-        '',\n-        'cc_binary(',\n-        '  name = \"main\",',\n-        '  srcs = [\"main.cc\"],',\n-        ')',\n-    ])\n-    self.ScratchFile('main.cc', [\n-        'int main() {',\n-        '  return 0;',\n-        '}',\n-    ])\n     exit_code, _, stderr = self.RunBazel([",
        "comment_created_at": "2024-08-26T07:30:22+00:00",
        "comment_author": "meteorcloudy",
        "comment_body": "Please move `self.RunBazel` after all `self.ScratchFile`.",
        "pr_file_module": null
      }
    ]
  }
]