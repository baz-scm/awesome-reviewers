[
  {
    "discussion_id": "2175370756",
    "pr_number": 26434,
    "pr_file": "src/main/java/com/google/devtools/build/lib/sandbox/LinuxSandboxedSpawnRunner.java",
    "created_at": "2025-06-30T15:34:36+00:00",
    "commented_code": "return isSupported;\n   }\n \n-  private static boolean computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n+  private static SupportLevel computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n       throws InterruptedException {\n+    try {\n+      runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ false);\n+      return SupportLevel.SUPPORTED;\n+    } catch (CommandException e) {\n+      if (e instanceof BadExitStatusException badExitStatusException) {\n+        var stderr = new String(badExitStatusException.getResult().getStderr(), ISO_8859_1);\n+        // Ubuntu 24.04 allows unprivileged user namespaces but denies any permissions that wouldn't\n+        // be granted outside the namespace. The first syscall that makes use of extended\n+        // permissions is a mount.\n+        if (stderr.lines().anyMatch(line -> line.endsWith(\": \\\"mount\\\": Permission denied\"))) {\n+          try {\n+            runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ true);\n+            return SupportLevel.SUPPORTED_VIA_BUSYBOX;\n+          } catch (CommandException e2) {\n+            cmdEnv\n+                .getReporter()\n+                .handle(\n+                    Event.warn(\n+                        \"linux-sandbox failed to run as it lacks permission to use an unprivileged user namespace.\"",
    "repo_full_name": "bazelbuild/bazel",
    "discussion_comments": [
      {
        "comment_id": "2175370756",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 26434,
        "pr_file": "src/main/java/com/google/devtools/build/lib/sandbox/LinuxSandboxedSpawnRunner.java",
        "discussion_id": "2175370756",
        "commented_code": "@@ -95,11 +110,43 @@ public static boolean isSupported(final CommandEnvironment cmdEnv) throws Interr\n     return isSupported;\n   }\n \n-  private static boolean computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n+  private static SupportLevel computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n       throws InterruptedException {\n+    try {\n+      runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ false);\n+      return SupportLevel.SUPPORTED;\n+    } catch (CommandException e) {\n+      if (e instanceof BadExitStatusException badExitStatusException) {\n+        var stderr = new String(badExitStatusException.getResult().getStderr(), ISO_8859_1);\n+        // Ubuntu 24.04 allows unprivileged user namespaces but denies any permissions that wouldn't\n+        // be granted outside the namespace. The first syscall that makes use of extended\n+        // permissions is a mount.\n+        if (stderr.lines().anyMatch(line -> line.endsWith(\": \\\"mount\\\": Permission denied\"))) {\n+          try {\n+            runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ true);\n+            return SupportLevel.SUPPORTED_VIA_BUSYBOX;\n+          } catch (CommandException e2) {\n+            cmdEnv\n+                .getReporter()\n+                .handle(\n+                    Event.warn(\n+                        \"linux-sandbox failed to run as it lacks permission to use an unprivileged user namespace.\"",
        "comment_created_at": "2025-06-30T15:34:36+00:00",
        "comment_author": "fzakaria",
        "comment_body": "You might want to include: \"Try installing busybox to circumvent AppArmor restrictions\".",
        "pr_file_module": null
      },
      {
        "comment_id": "2175418364",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 26434,
        "pr_file": "src/main/java/com/google/devtools/build/lib/sandbox/LinuxSandboxedSpawnRunner.java",
        "discussion_id": "2175370756",
        "commented_code": "@@ -95,11 +110,43 @@ public static boolean isSupported(final CommandEnvironment cmdEnv) throws Interr\n     return isSupported;\n   }\n \n-  private static boolean computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n+  private static SupportLevel computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n       throws InterruptedException {\n+    try {\n+      runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ false);\n+      return SupportLevel.SUPPORTED;\n+    } catch (CommandException e) {\n+      if (e instanceof BadExitStatusException badExitStatusException) {\n+        var stderr = new String(badExitStatusException.getResult().getStderr(), ISO_8859_1);\n+        // Ubuntu 24.04 allows unprivileged user namespaces but denies any permissions that wouldn't\n+        // be granted outside the namespace. The first syscall that makes use of extended\n+        // permissions is a mount.\n+        if (stderr.lines().anyMatch(line -> line.endsWith(\": \\\"mount\\\": Permission denied\"))) {\n+          try {\n+            runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ true);\n+            return SupportLevel.SUPPORTED_VIA_BUSYBOX;\n+          } catch (CommandException e2) {\n+            cmdEnv\n+                .getReporter()\n+                .handle(\n+                    Event.warn(\n+                        \"linux-sandbox failed to run as it lacks permission to use an unprivileged user namespace.\"",
        "comment_created_at": "2025-06-30T15:57:13+00:00",
        "comment_author": "fmeum",
        "comment_body": "I wouldn't want users to do this as it may break with future Ubuntu versions. If they need to take explicit action, they should use one of the sanctioned ways to disable the restriction.",
        "pr_file_module": null
      },
      {
        "comment_id": "2175454869",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 26434,
        "pr_file": "src/main/java/com/google/devtools/build/lib/sandbox/LinuxSandboxedSpawnRunner.java",
        "discussion_id": "2175370756",
        "commented_code": "@@ -95,11 +110,43 @@ public static boolean isSupported(final CommandEnvironment cmdEnv) throws Interr\n     return isSupported;\n   }\n \n-  private static boolean computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n+  private static SupportLevel computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n       throws InterruptedException {\n+    try {\n+      runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ false);\n+      return SupportLevel.SUPPORTED;\n+    } catch (CommandException e) {\n+      if (e instanceof BadExitStatusException badExitStatusException) {\n+        var stderr = new String(badExitStatusException.getResult().getStderr(), ISO_8859_1);\n+        // Ubuntu 24.04 allows unprivileged user namespaces but denies any permissions that wouldn't\n+        // be granted outside the namespace. The first syscall that makes use of extended\n+        // permissions is a mount.\n+        if (stderr.lines().anyMatch(line -> line.endsWith(\": \\\"mount\\\": Permission denied\"))) {\n+          try {\n+            runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ true);\n+            return SupportLevel.SUPPORTED_VIA_BUSYBOX;\n+          } catch (CommandException e2) {\n+            cmdEnv\n+                .getReporter()\n+                .handle(\n+                    Event.warn(\n+                        \"linux-sandbox failed to run as it lacks permission to use an unprivileged user namespace.\"",
        "comment_created_at": "2025-06-30T16:17:53+00:00",
        "comment_author": "fzakaria",
        "comment_body": "I swear I am not trying to derail this change!\r\nlinux-sandbox support on Ubuntu gave me so much headaches so all your changes are <3 \r\n~~\r\nWell isn't `busybox` mitigation around AppArmor itself tied to some Ubuntu version via a specific installed profile? This whole circumvention could go away anyways in other versions;\r\n\r\nMaybe the change should either lean in to this or we can harden against it more.\r\n(i.e. first check if whatever the path is exists  \"/etc/apparmor.d/bin.busybox\" or maybe `/etc/os-release`)\r\n\r\nI as a user would probably like to see this in some diagnostic. I commented on the PR top-level but it feels odd that there is AppArmor for busybox which is a complete escape hatch; I would guess that must be going away in subsequent releases otherwise.... what's the point.",
        "pr_file_module": null
      },
      {
        "comment_id": "2175490668",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 26434,
        "pr_file": "src/main/java/com/google/devtools/build/lib/sandbox/LinuxSandboxedSpawnRunner.java",
        "discussion_id": "2175370756",
        "commented_code": "@@ -95,11 +110,43 @@ public static boolean isSupported(final CommandEnvironment cmdEnv) throws Interr\n     return isSupported;\n   }\n \n-  private static boolean computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n+  private static SupportLevel computeIsSupported(CommandEnvironment cmdEnv, Path linuxSandbox)\n       throws InterruptedException {\n+    try {\n+      runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ false);\n+      return SupportLevel.SUPPORTED;\n+    } catch (CommandException e) {\n+      if (e instanceof BadExitStatusException badExitStatusException) {\n+        var stderr = new String(badExitStatusException.getResult().getStderr(), ISO_8859_1);\n+        // Ubuntu 24.04 allows unprivileged user namespaces but denies any permissions that wouldn't\n+        // be granted outside the namespace. The first syscall that makes use of extended\n+        // permissions is a mount.\n+        if (stderr.lines().anyMatch(line -> line.endsWith(\": \\\"mount\\\": Permission denied\"))) {\n+          try {\n+            runBinTrue(cmdEnv, linuxSandbox, /* wrapInBusybox= */ true);\n+            return SupportLevel.SUPPORTED_VIA_BUSYBOX;\n+          } catch (CommandException e2) {\n+            cmdEnv\n+                .getReporter()\n+                .handle(\n+                    Event.warn(\n+                        \"linux-sandbox failed to run as it lacks permission to use an unprivileged user namespace.\"",
        "comment_created_at": "2025-06-30T16:38:35+00:00",
        "comment_author": "fmeum",
        "comment_body": "Don't worry, thanks for raising these questions. \n\nThe busybox workaround may go away in the future and yes, the new restriction is totally pointless until then (and until the other bypasses have been removed). \n\nMy plan is not to keep bypassing valid security restrictions, but exactly to keep Bazel working until 1) the restriction isn't pointless anymore and 2) there's a better story around allowlisting user applications. That's why I think that relying on a workaround is fine for now, without us committing to keep this working without user action indefinitely.",
        "pr_file_module": null
      }
    ]
  }
]