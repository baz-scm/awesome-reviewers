[
  {
    "discussion_id": "932661336",
    "pr_number": 15774,
    "pr_file": "src/test/shell/integration/execution_phase_tests.sh",
    "created_at": "2022-07-28T20:53:54+00:00",
    "commented_code": "true  # reset the last exit code so the test won't be considered failed\n }\n+\n+function test_track_directory_changes() {\n+  mkdir -p pkg/dir1/dir2\n+  cat <<'EOF' > pkg/BUILD\n+genrule(\n+    name = \"a\",\n+    srcs = [\"dir1\"],\n+    outs = [\"out\"],\n+    cmd = \"touch $@\",\n+)\n+EOF\n+\n+  assert_rebuilds_once() {\n+    bazel --host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1 build //pkg:a \\\n+        >& \"$TEST_log\" || fail \"Expected success\"\n+    expect_log \"2 total actions\"",
    "repo_full_name": "bazelbuild/bazel",
    "discussion_comments": [
      {
        "comment_id": "932661336",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 15774,
        "pr_file": "src/test/shell/integration/execution_phase_tests.sh",
        "discussion_id": "932661336",
        "commented_code": "@@ -431,4 +431,45 @@ EOF\n \n   true  # reset the last exit code so the test won't be considered failed\n }\n+\n+function test_track_directory_changes() {\n+  mkdir -p pkg/dir1/dir2\n+  cat <<'EOF' > pkg/BUILD\n+genrule(\n+    name = \"a\",\n+    srcs = [\"dir1\"],\n+    outs = [\"out\"],\n+    cmd = \"touch $@\",\n+)\n+EOF\n+\n+  assert_rebuilds_once() {\n+    bazel --host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1 build //pkg:a \\\n+        >& \"$TEST_log\" || fail \"Expected success\"\n+    expect_log \"2 total actions\"",
        "comment_created_at": "2022-07-28T20:53:54+00:00",
        "comment_author": "alexjski",
        "comment_body": "I think it is better to assert that a particular action was run. Typically we do that by passing `--experimental_ui_debug_all_events` and asserting logs like `expect_log \"Executing genrule //foo:a\"` or `expect_not_log ...`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2218035709",
    "pr_number": 26574,
    "pr_file": "src/test/shell/bazel/bazel_test_test.sh",
    "created_at": "2025-07-21T00:58:19+00:00",
    "commented_code": "--runs_per_test=10 //dir:test\n }\n \n-# TODO(#2228): Re-enable when the tmpdir creation is fixed.\n-function DISABLED_test_tmpdir() {\n+function test_tmpdir() {\n   add_rules_shell \"MODULE.bazel\"\n   mkdir -p foo\n   cat > foo/bar_test.sh <<'EOF'\n #!/bin/sh\n+set -e",
    "repo_full_name": "bazelbuild/bazel",
    "discussion_comments": [
      {
        "comment_id": "2218035709",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 26574,
        "pr_file": "src/test/shell/bazel/bazel_test_test.sh",
        "discussion_id": "2218035709",
        "commented_code": "@@ -84,13 +84,14 @@ function test_3_local_jobs() {\n     --runs_per_test=10 //dir:test\n }\n \n-# TODO(#2228): Re-enable when the tmpdir creation is fixed.\n-function DISABLED_test_tmpdir() {\n+function test_tmpdir() {\n   add_rules_shell \"MODULE.bazel\"\n   mkdir -p foo\n   cat > foo/bar_test.sh <<'EOF'\n #!/bin/sh\n+set -e",
        "comment_created_at": "2025-07-21T00:58:19+00:00",
        "comment_author": "meisterT",
        "comment_body": "Is that intentional?",
        "pr_file_module": null
      },
      {
        "comment_id": "2218801774",
        "repo_full_name": "bazelbuild/bazel",
        "pr_number": 26574,
        "pr_file": "src/test/shell/bazel/bazel_test_test.sh",
        "discussion_id": "2218035709",
        "commented_code": "@@ -84,13 +84,14 @@ function test_3_local_jobs() {\n     --runs_per_test=10 //dir:test\n }\n \n-# TODO(#2228): Re-enable when the tmpdir creation is fixed.\n-function DISABLED_test_tmpdir() {\n+function test_tmpdir() {\n   add_rules_shell \"MODULE.bazel\"\n   mkdir -p foo\n   cat > foo/bar_test.sh <<'EOF'\n #!/bin/sh\n+set -e",
        "comment_created_at": "2025-07-21T10:41:31+00:00",
        "comment_author": "fmeum",
        "comment_body": "Yes, otherwise the `touch` would not necessarily verify that the directory is writable. Updated the PR description to call this out.",
        "pr_file_module": null
      }
    ]
  }
]