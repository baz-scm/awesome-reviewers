[
  {
    "discussion_id": "2189388954",
    "pr_number": 3287,
    "pr_file": "docs/content/docs/authentication/kakao.mdx",
    "created_at": "2025-07-07T08:57:24+00:00",
    "commented_code": "+---\n+title: Kakao\n+description: Kakao provider setup and usage.\n+---\n+\n+<Steps>\n+    <Step> \n+        ### Get your Kakao Credentials\n+        To use Kakao sign in, you need a client ID and client secret. You can get them from the [Kakao Developer Portal](https://developers.kakao.com).",
    "repo_full_name": "better-auth/better-auth",
    "discussion_comments": [
      {
        "comment_id": "2189420021",
        "repo_full_name": "better-auth/better-auth",
        "pr_number": 3287,
        "pr_file": "docs/content/docs/authentication/kakao.mdx",
        "discussion_id": "2189388954",
        "commented_code": "@@ -0,0 +1,47 @@\n+---\n+title: Kakao\n+description: Kakao provider setup and usage.\n+---\n+\n+<Steps>\n+    <Step> \n+        ### Get your Kakao Credentials\n+        To use Kakao sign in, you need a client ID and client secret. You can get them from the [Kakao Developer Portal](https://developers.kakao.com).",
        "comment_created_at": "2025-07-07T08:57:24+00:00",
        "comment_author": "bytaesu",
        "comment_body": "Kakao\u2019s official documentation also recommends using a client secret, and other services like NextAuth and Supabase Auth also require one. For consistency with other providers within Better Auth, it makes sense to keep it as is.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2286418302",
    "pr_number": 4090,
    "pr_file": "docs/content/docs/authentication/google.mdx",
    "created_at": "2025-08-19T21:53:50+00:00",
    "commented_code": "Google only issues a refresh token the first time a user consents to your app.\n If the user has already authorized your app, subsequent OAuth flows will only return an access token, not a refresh token.\n \n-To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account consent` in the provider options.\n+To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account+consent` in the provider options.",
    "repo_full_name": "better-auth/better-auth",
    "discussion_comments": [
      {
        "comment_id": "2286418302",
        "repo_full_name": "better-auth/better-auth",
        "pr_number": 4090,
        "pr_file": "docs/content/docs/authentication/google.mdx",
        "discussion_id": "2286418302",
        "commented_code": "@@ -123,15 +123,15 @@ This will trigger a new OAuth flow that requests the additional scopes. After co\n Google only issues a refresh token the first time a user consents to your app.\n If the user has already authorized your app, subsequent OAuth flows will only return an access token, not a refresh token.\n \n-To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account consent` in the provider options.\n+To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account+consent` in the provider options.",
        "comment_created_at": "2025-08-19T21:53:50+00:00",
        "comment_author": "himself65",
        "comment_body": "You guys are in conflict with each other\r\n\r\nhttps://github.com/better-auth/better-auth/pull/4027/files#diff-5cfbfb96b38fe9d21d0f216d2eadb2d04ffd54939c335d2e72ee811a5474ed52R126\r\n\r\nWhich one is correct? Can you show me the document?",
        "pr_file_module": null
      },
      {
        "comment_id": "2286460117",
        "repo_full_name": "better-auth/better-auth",
        "pr_number": 4090,
        "pr_file": "docs/content/docs/authentication/google.mdx",
        "discussion_id": "2286418302",
        "commented_code": "@@ -123,15 +123,15 @@ This will trigger a new OAuth flow that requests the additional scopes. After co\n Google only issues a refresh token the first time a user consents to your app.\n If the user has already authorized your app, subsequent OAuth flows will only return an access token, not a refresh token.\n \n-To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account consent` in the provider options.\n+To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account+consent` in the provider options.",
        "comment_created_at": "2025-08-19T22:22:11+00:00",
        "comment_author": "tharakadesilva",
        "comment_body": "`select_account consent` is correct for Google.\r\n\r\nBut, BA's type system is using `select_account+consent`. Here's another related MR: https://github.com/better-auth/better-auth/pull/3303\r\n\r\nHappy to update the type files instead if you prefer.",
        "pr_file_module": null
      },
      {
        "comment_id": "2286464220",
        "repo_full_name": "better-auth/better-auth",
        "pr_number": 4090,
        "pr_file": "docs/content/docs/authentication/google.mdx",
        "discussion_id": "2286418302",
        "commented_code": "@@ -123,15 +123,15 @@ This will trigger a new OAuth flow that requests the additional scopes. After co\n Google only issues a refresh token the first time a user consents to your app.\n If the user has already authorized your app, subsequent OAuth flows will only return an access token, not a refresh token.\n \n-To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account consent` in the provider options.\n+To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account+consent` in the provider options.",
        "comment_created_at": "2025-08-19T22:24:30+00:00",
        "comment_author": "tharakadesilva",
        "comment_body": "Code here: https://github.com/ping-maxwell/better-auth/blob/86abb8f340754baef323b9e93115d5073ae69d8b/packages/better-auth/src/oauth2/types.ts#L174\r\n\r\n> Happy to update the type files instead if you prefer.\r\n\r\nI don't think we should do this, it might break other oauth stuff.",
        "pr_file_module": null
      },
      {
        "comment_id": "2286474107",
        "repo_full_name": "better-auth/better-auth",
        "pr_number": 4090,
        "pr_file": "docs/content/docs/authentication/google.mdx",
        "discussion_id": "2286418302",
        "commented_code": "@@ -123,15 +123,15 @@ This will trigger a new OAuth flow that requests the additional scopes. After co\n Google only issues a refresh token the first time a user consents to your app.\n If the user has already authorized your app, subsequent OAuth flows will only return an access token, not a refresh token.\n \n-To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account consent` in the provider options.\n+To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account+consent` in the provider options.",
        "comment_created_at": "2025-08-19T22:27:23+00:00",
        "comment_author": "tharakadesilva",
        "comment_body": "The doc for Google is at: https://developers.google.com/identity/protocols/oauth2/web-server\r\n\r\n> A space-delimited, case-sensitive list of prompts to present the user\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2286482454",
        "repo_full_name": "better-auth/better-auth",
        "pr_number": 4090,
        "pr_file": "docs/content/docs/authentication/google.mdx",
        "discussion_id": "2286418302",
        "commented_code": "@@ -123,15 +123,15 @@ This will trigger a new OAuth flow that requests the additional scopes. After co\n Google only issues a refresh token the first time a user consents to your app.\n If the user has already authorized your app, subsequent OAuth flows will only return an access token, not a refresh token.\n \n-To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account consent` in the provider options.\n+To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account+consent` in the provider options.",
        "comment_created_at": "2025-08-19T22:29:24+00:00",
        "comment_author": "himself65",
        "comment_body": "@ping-maxwell can you look at this?",
        "pr_file_module": null
      },
      {
        "comment_id": "2287273046",
        "repo_full_name": "better-auth/better-auth",
        "pr_number": 4090,
        "pr_file": "docs/content/docs/authentication/google.mdx",
        "discussion_id": "2286418302",
        "commented_code": "@@ -123,15 +123,15 @@ This will trigger a new OAuth flow that requests the additional scopes. After co\n Google only issues a refresh token the first time a user consents to your app.\n If the user has already authorized your app, subsequent OAuth flows will only return an access token, not a refresh token.\n \n-To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account consent` in the provider options.\n+To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account+consent` in the provider options.",
        "comment_created_at": "2025-08-20T07:37:28+00:00",
        "comment_author": "ping-maxwell",
        "comment_body": "I think the issue is `main` is using the old code which has `select_account+consent` as a type.\r\nBut recently I think we changed that in favour of `select_account consent` as a type in canary or newer versions and updated the docs on main\r\n@tharakadesilva are you on latest?\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2288700184",
        "repo_full_name": "better-auth/better-auth",
        "pr_number": 4090,
        "pr_file": "docs/content/docs/authentication/google.mdx",
        "discussion_id": "2286418302",
        "commented_code": "@@ -123,15 +123,15 @@ This will trigger a new OAuth flow that requests the additional scopes. After co\n Google only issues a refresh token the first time a user consents to your app.\n If the user has already authorized your app, subsequent OAuth flows will only return an access token, not a refresh token.\n \n-To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account consent` in the provider options.\n+To always get a refresh token, you can set the `accessType` to `offline`, and `prompt` to `select_account+consent` in the provider options.",
        "comment_created_at": "2025-08-20T16:30:02+00:00",
        "comment_author": "tharakadesilva",
        "comment_body": "Ah, that makes sense!!\r\n\r\nI am on `1.3.4` (have to be pinned because of Convex).\r\n\r\nI'll close the ticket, thanks folks for the help!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1981153714",
    "pr_number": 1281,
    "pr_file": "docs/content/docs/plugins/2fa.mdx",
    "created_at": "2025-03-05T10:48:05+00:00",
    "commented_code": "### Enabling 2FA\n \n-To enable two-factor authentication, call `twoFactor.enable` with the user's password:\n+\n+To enable two-factor authentication, you can use either password verification or email OTP verification (useful for social login users):\n \n ```ts title=\"two-factor.ts\"\n+// Using password verification\n const { data } = await authClient.twoFactor.enable({\n-    password: \"password\" // user password required\n+    verification: {",
    "repo_full_name": "better-auth/better-auth",
    "discussion_comments": [
      {
        "comment_id": "1981153714",
        "repo_full_name": "better-auth/better-auth",
        "pr_number": 1281,
        "pr_file": "docs/content/docs/plugins/2fa.mdx",
        "discussion_id": "1981153714",
        "commented_code": "@@ -80,11 +80,28 @@ This plugin offers two main methods to do a second factor verification:\n \n ### Enabling 2FA\n \n-To enable two-factor authentication, call `twoFactor.enable` with the user's password:\n+\n+To enable two-factor authentication, you can use either password verification or email OTP verification (useful for social login users):\n \n ```ts title=\"two-factor.ts\"\n+// Using password verification\n const { data } = await authClient.twoFactor.enable({\n-    password: \"password\" // user password required\n+    verification: {",
        "comment_created_at": "2025-03-05T10:48:05+00:00",
        "comment_author": "Bekacru",
        "comment_body": "this would be a breaking change. So instead of `verification` let's just make the body type a union of `password` or `otp` instead.",
        "pr_file_module": null
      }
    ]
  }
]