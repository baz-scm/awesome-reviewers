[
  {
    "discussion_id": "1837143169",
    "pr_number": 4337,
    "pr_file": "docs/source/guide/s3-example-creating-buckets.rst",
    "created_at": "2024-11-11T20:10:00+00:00",
    "commented_code": "platform. The bucket can be located in a specific region to minimize latency\n or to address regulatory requirements.\n \n+.. warning::\n+\n+    You need to make sure that the region in your aws configuration matches the\n+    region where you want your bucket to be created. By default, s3 will create\n+    a bucket in ``us-east-1`` if the ``LocationConstraint`` is not specified.\n+    However, if the region in your configuration doesn't match the\n+    ``LocationConstraint``, you'll get ``IllegalLocationConstraintException``\n+    error when calling ``create_bucket`` function.\n+\n+    To avoid this error, you should either:\n+\n+    * Option 1: Make sure that your ``LocationConstraint`` is same as the region in your\n+      configuration, or\n+    * Option 2: If you're using a default value for ``LocationConstraint``, make sure\n+      that the region in your configuration is set to ``us-east-1``.\n+\n .. code-block:: python",
    "repo_full_name": "boto/boto3",
    "discussion_comments": [
      {
        "comment_id": "1837143169",
        "repo_full_name": "boto/boto3",
        "pr_number": 4337,
        "pr_file": "docs/source/guide/s3-example-creating-buckets.rst",
        "discussion_id": "1837143169",
        "commented_code": "@@ -27,6 +27,22 @@ The name of an Amazon S3 bucket must be unique across all regions of the AWS\n platform. The bucket can be located in a specific region to minimize latency\n or to address regulatory requirements.\n \n+.. warning::\n+\n+    You need to make sure that the region in your aws configuration matches the\n+    region where you want your bucket to be created. By default, s3 will create\n+    a bucket in ``us-east-1`` if the ``LocationConstraint`` is not specified.\n+    However, if the region in your configuration doesn't match the\n+    ``LocationConstraint``, you'll get ``IllegalLocationConstraintException``\n+    error when calling ``create_bucket`` function.\n+\n+    To avoid this error, you should either:\n+\n+    * Option 1: Make sure that your ``LocationConstraint`` is same as the region in your\n+      configuration, or\n+    * Option 2: If you're using a default value for ``LocationConstraint``, make sure\n+      that the region in your configuration is set to ``us-east-1``.\n+\n .. code-block:: python",
        "comment_created_at": "2024-11-11T20:10:00+00:00",
        "comment_author": "jonathan343",
        "comment_body": "nit - Since we're already touching this file, can you fix the formatting of the following line from the code example. If should be updated from:\r\n```\r\ns3_client.create_bucket(Bucket=bucket_name,\r\n                                    CreateBucketConfiguration=location)\r\n```\r\nto\r\n```\r\ns3_client.create_bucket(\r\n    Bucket=bucket_name, CreateBucketConfiguration=location\r\n)\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1837372735",
        "repo_full_name": "boto/boto3",
        "pr_number": 4337,
        "pr_file": "docs/source/guide/s3-example-creating-buckets.rst",
        "discussion_id": "1837143169",
        "commented_code": "@@ -27,6 +27,22 @@ The name of an Amazon S3 bucket must be unique across all regions of the AWS\n platform. The bucket can be located in a specific region to minimize latency\n or to address regulatory requirements.\n \n+.. warning::\n+\n+    You need to make sure that the region in your aws configuration matches the\n+    region where you want your bucket to be created. By default, s3 will create\n+    a bucket in ``us-east-1`` if the ``LocationConstraint`` is not specified.\n+    However, if the region in your configuration doesn't match the\n+    ``LocationConstraint``, you'll get ``IllegalLocationConstraintException``\n+    error when calling ``create_bucket`` function.\n+\n+    To avoid this error, you should either:\n+\n+    * Option 1: Make sure that your ``LocationConstraint`` is same as the region in your\n+      configuration, or\n+    * Option 2: If you're using a default value for ``LocationConstraint``, make sure\n+      that the region in your configuration is set to ``us-east-1``.\n+\n .. code-block:: python",
        "comment_created_at": "2024-11-12T01:40:58+00:00",
        "comment_author": "ubaskota",
        "comment_body": "I thought adding a warning presents a bigger perspective of the issue to the user, so I added a warning instead of modifying the example. At the same time, I agree that modifying the example makes it simpler for the user to follow. I'll edit it like you said.",
        "pr_file_module": null
      },
      {
        "comment_id": "1838387210",
        "repo_full_name": "boto/boto3",
        "pr_number": 4337,
        "pr_file": "docs/source/guide/s3-example-creating-buckets.rst",
        "discussion_id": "1837143169",
        "commented_code": "@@ -27,6 +27,22 @@ The name of an Amazon S3 bucket must be unique across all regions of the AWS\n platform. The bucket can be located in a specific region to minimize latency\n or to address regulatory requirements.\n \n+.. warning::\n+\n+    You need to make sure that the region in your aws configuration matches the\n+    region where you want your bucket to be created. By default, s3 will create\n+    a bucket in ``us-east-1`` if the ``LocationConstraint`` is not specified.\n+    However, if the region in your configuration doesn't match the\n+    ``LocationConstraint``, you'll get ``IllegalLocationConstraintException``\n+    error when calling ``create_bucket`` function.\n+\n+    To avoid this error, you should either:\n+\n+    * Option 1: Make sure that your ``LocationConstraint`` is same as the region in your\n+      configuration, or\n+    * Option 2: If you're using a default value for ``LocationConstraint``, make sure\n+      that the region in your configuration is set to ``us-east-1``.\n+\n .. code-block:: python",
        "comment_created_at": "2024-11-12T16:15:58+00:00",
        "comment_author": "jonathan343",
        "comment_body": "I agree we should give the customer more insight into why the example is the way is. We should add a note (not warning) describing the behavior, similar to the one I have below:\r\n\r\n> The [`LocationConstraint`]() value is used to specify the region where a bucket will be created. S3 requires `LocationConstraint` to be specified when creating buckets using a client in regions other than `us-east-1`. When no region is specified, `us-east-1` is used by default. The example below ensures the S3 client is created in the same region as the bucket to avoid a `IllegalLocationConstraintException` error.\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "214196096",
    "pr_number": 1667,
    "pr_file": "docs/source/guide/secrets-manager.rst",
    "created_at": "2018-08-30T22:08:58+00:00",
    "commented_code": "+.. Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n+\r\n+   This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0\r\n+   International License (the \"License\"). You may not use this file except in compliance with the\r\n+   License. A copy of the License is located at http://creativecommons.org/licenses/by-nc-sa/4.0/.\r\n+\r\n+   This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\r\n+   either express or implied. See the License for the specific language governing permissions and\r\n+   limitations under the License.\r\n+   \r\n+.. _aws-boto3-secrets-manager:   \r\n+\r\n+###############################################\r\n+Retrieving a Secret from AWS Secrets Manager\r\n+###############################################\r\n+\r\n+This Python example shows you how to retrieve the decrypted secret value from an AWS Secrets Manager secret. The secret could be created using either the Secrets Manager console or the CLI/SDK. \r\n+\r\n+The code uses the AWS SDK for Python to retrieve a decrypted secret value.\r\n+\r\n+For more information about using an Amazon Secrets Manager, see \r\n+`Tutorial: Storing and Retrieving a Secret <https://docs.aws.amazon.com/secretsmanager/latest/userguide/tutorials_basic.html>`_ \r\n+in the *AWS Secrets Manager Developer Guide*.\r\n+\r\n+All the example code for the Amazon Web Services (AWS) SDK for Python is available `here on GitHub <https://github.com/awsdocs/aws-doc-sdk-examples/tree/master/python/example_code>`_.\r\n+\r\n+Prerequisite Tasks\r\n+==================\r\n+\r\n+To set up and run this example, you must first set up the following:\r\n+\r\n+* Configure your AWS credentials, as described in :doc:`quickstart`.\r\n+* Create a secret with the AWS Secrets Manager, as described in the `AWS Secrets Manager Developer Guide <https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html>`_\r\n+\r\n+Retrieve the Secret Value\r\n+=============================================\r\n+\r\n+The following example shows how to:\r\n+ \r\n+* Retrieve a secret value using \r\n+  `get_secret_value <https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/secretsmanager.html#SecretsManager.Client.get_secret_value>`_.\r\n+ \r\n+Example\r\n+-------\r\n+\r\n+.. code-block:: python\r\n+\r\n+    import boto3\r\n+    from botocore.exceptions import ClientError\r\n+\r\n+\r\n+    def get_secret():\r\n+        secret_name = \"MySecretName\"\r\n+        endpoint_url = \"https://secretsmanager.us-west-2.amazonaws.com\"",
    "repo_full_name": "boto/boto3",
    "discussion_comments": [
      {
        "comment_id": "214196096",
        "repo_full_name": "boto/boto3",
        "pr_number": 1667,
        "pr_file": "docs/source/guide/secrets-manager.rst",
        "discussion_id": "214196096",
        "commented_code": "@@ -0,0 +1,85 @@\n+.. Copyright 2010-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n+\r\n+   This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0\r\n+   International License (the \"License\"). You may not use this file except in compliance with the\r\n+   License. A copy of the License is located at http://creativecommons.org/licenses/by-nc-sa/4.0/.\r\n+\r\n+   This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\r\n+   either express or implied. See the License for the specific language governing permissions and\r\n+   limitations under the License.\r\n+   \r\n+.. _aws-boto3-secrets-manager:   \r\n+\r\n+###############################################\r\n+Retrieving a Secret from AWS Secrets Manager\r\n+###############################################\r\n+\r\n+This Python example shows you how to retrieve the decrypted secret value from an AWS Secrets Manager secret. The secret could be created using either the Secrets Manager console or the CLI/SDK. \r\n+\r\n+The code uses the AWS SDK for Python to retrieve a decrypted secret value.\r\n+\r\n+For more information about using an Amazon Secrets Manager, see \r\n+`Tutorial: Storing and Retrieving a Secret <https://docs.aws.amazon.com/secretsmanager/latest/userguide/tutorials_basic.html>`_ \r\n+in the *AWS Secrets Manager Developer Guide*.\r\n+\r\n+All the example code for the Amazon Web Services (AWS) SDK for Python is available `here on GitHub <https://github.com/awsdocs/aws-doc-sdk-examples/tree/master/python/example_code>`_.\r\n+\r\n+Prerequisite Tasks\r\n+==================\r\n+\r\n+To set up and run this example, you must first set up the following:\r\n+\r\n+* Configure your AWS credentials, as described in :doc:`quickstart`.\r\n+* Create a secret with the AWS Secrets Manager, as described in the `AWS Secrets Manager Developer Guide <https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html>`_\r\n+\r\n+Retrieve the Secret Value\r\n+=============================================\r\n+\r\n+The following example shows how to:\r\n+ \r\n+* Retrieve a secret value using \r\n+  `get_secret_value <https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/secretsmanager.html#SecretsManager.Client.get_secret_value>`_.\r\n+ \r\n+Example\r\n+-------\r\n+\r\n+.. code-block:: python\r\n+\r\n+    import boto3\r\n+    from botocore.exceptions import ClientError\r\n+\r\n+\r\n+    def get_secret():\r\n+        secret_name = \"MySecretName\"\r\n+        endpoint_url = \"https://secretsmanager.us-west-2.amazonaws.com\"\r",
        "comment_created_at": "2018-08-30T22:08:58+00:00",
        "comment_author": "joguSD",
        "comment_body": "Manually setting the endpoint isn't very common. Configuring just the proper region is sufficient, so let's remove this hard coded endpoint.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "686363667",
    "pr_number": 2956,
    "pr_file": "docs/source/guide/configuration.rst",
    "created_at": "2021-08-10T22:30:39+00:00",
    "commented_code": "client = boto3.client('kinesis', config=my_config)\n \n+Alternatively, you can use the ``HTTP_PROXY`` and ``HTTPS_PROXY`` environment variables to specify proxy servers and the ``NO_PROXY`` environment variable to override proxy servers set by ``HTTP_PROXY`` and  ``HTTPS_PROXY``.  Proxy servers specified using the ``Config`` object will override proxy servers specified using environment variables.",
    "repo_full_name": "boto/boto3",
    "discussion_comments": [
      {
        "comment_id": "686363667",
        "repo_full_name": "boto/boto3",
        "pr_number": 2956,
        "pr_file": "docs/source/guide/configuration.rst",
        "discussion_id": "686363667",
        "commented_code": "@@ -83,6 +83,7 @@ In the following example, a proxy list is set up to use ``proxy.amazon.com``, po\n \n     client = boto3.client('kinesis', config=my_config)\n \n+Alternatively, you can use the ``HTTP_PROXY`` and ``HTTPS_PROXY`` environment variables to specify proxy servers and the ``NO_PROXY`` environment variable to override proxy servers set by ``HTTP_PROXY`` and  ``HTTPS_PROXY``.  Proxy servers specified using the ``Config`` object will override proxy servers specified using environment variables.",
        "comment_created_at": "2021-08-10T22:30:39+00:00",
        "comment_author": "nateprewitt",
        "comment_body": "We may want to split the first sentence into two for readability. We may also want to specifically reference the ``proxies`` Config being what overrides the environment variables. I don't know if @shepazon has any other stylistic comments.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "20105942",
    "pr_number": 16,
    "pr_file": "docs/source/guide/configuration.rst",
    "created_at": "2014-11-10T19:29:26+00:00",
    "commented_code": "Configuration\n =============\n-TODO\n+Boto can be configured in multiple ways. Regardless of the source or sources\n+that you choose, you **must** have AWS credentials and a region set in\n+order to make requests.\n+\n+Interactive Configuration\n+-------------------------\n+If you have the `AWS CLI <http://aws.amazon.com/cli/>`_, then you can use\n+its interactive ``configure`` command to set up your credentials and\n+default region::\n+\n+    aws configure\n+\n+Follow the prompts and it will generate configuration files in the\n+correct locations for you.\n \n Configuration Sources\n ---------------------\n-TODO\n+There are multiple sources from which configuration data can be loaded.\n+The general order in which they are checked is as follows:",
    "repo_full_name": "boto/boto3",
    "discussion_comments": [
      {
        "comment_id": "20105942",
        "repo_full_name": "boto/boto3",
        "pr_number": 16,
        "pr_file": "docs/source/guide/configuration.rst",
        "discussion_id": "20105942",
        "commented_code": "@@ -2,25 +2,112 @@\n \n Configuration\n =============\n-TODO\n+Boto can be configured in multiple ways. Regardless of the source or sources\n+that you choose, you **must** have AWS credentials and a region set in\n+order to make requests.\n+\n+Interactive Configuration\n+-------------------------\n+If you have the `AWS CLI <http://aws.amazon.com/cli/>`_, then you can use\n+its interactive ``configure`` command to set up your credentials and\n+default region::\n+\n+    aws configure\n+\n+Follow the prompts and it will generate configuration files in the\n+correct locations for you.\n \n Configuration Sources\n ---------------------\n-TODO\n+There are multiple sources from which configuration data can be loaded.\n+The general order in which they are checked is as follows:",
        "comment_created_at": "2014-11-10T19:29:26+00:00",
        "comment_author": "kyleknap",
        "comment_body": "Might want to make an explicit note pertaining to how collisions (i.e. credentials being located in more than one location) are handled. Like which credentials source trumps over other credential sources? Or state something like the credentials used are the ones discovered last in the order specified.\n\nDoes that make sense?\n",
        "pr_file_module": null
      }
    ]
  }
]