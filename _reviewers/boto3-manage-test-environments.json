[
  {
    "discussion_id": "775954103",
    "pr_number": 2746,
    "pr_file": "tests/unit/test_endpoint_url.py",
    "created_at": "2021-12-28T15:14:23+00:00",
    "commented_code": "+import os\n+import unittest\n+\n+import boto3\n+\n+\n+class TestEndpointUrl(unittest.TestCase):\n+    def test_default_session_does_not_require_endpoint_url_env_var(self):\n+        boto3.setup_default_session(\n+            aws_access_key_id=\"key\", aws_secret_access_key=\"secret\"\n+        )\n+        client = boto3.DEFAULT_SESSION.client(\"s3\")\n+        self.assertTrue(\n+            client._endpoint.host.endswith(\"amazonaws.com\"),\n+            \"AWS_ENDPOINT_URL env var should not be required\",\n+        )\n+\n+    def test_default_session_uses_endpoint_url_env_var(self):\n+        ENDPOINT_URL = \"http://endpoint.url\"\n+        os.environ[\"AWS_ENDPOINT_URL\"] = ENDPOINT_URL\n+        boto3.setup_default_session(\n+            aws_access_key_id=\"key\", aws_secret_access_key=\"secret\"\n+        )\n+        client = boto3.DEFAULT_SESSION.client(\"s3\")\n+        self.assertTrue(\n+            client._endpoint.host == ENDPOINT_URL,\n+            \"AWS_ENDPOINT_URL env var not used when set\",\n+        )\n+        del os.environ[\"AWS_ENDPOINT_URL\"]",
    "repo_full_name": "boto/boto3",
    "discussion_comments": [
      {
        "comment_id": "775954103",
        "repo_full_name": "boto/boto3",
        "pr_number": 2746,
        "pr_file": "tests/unit/test_endpoint_url.py",
        "discussion_id": "775954103",
        "commented_code": "@@ -0,0 +1,32 @@\n+import os\n+import unittest\n+\n+import boto3\n+\n+\n+class TestEndpointUrl(unittest.TestCase):\n+    def test_default_session_does_not_require_endpoint_url_env_var(self):\n+        boto3.setup_default_session(\n+            aws_access_key_id=\"key\", aws_secret_access_key=\"secret\"\n+        )\n+        client = boto3.DEFAULT_SESSION.client(\"s3\")\n+        self.assertTrue(\n+            client._endpoint.host.endswith(\"amazonaws.com\"),\n+            \"AWS_ENDPOINT_URL env var should not be required\",\n+        )\n+\n+    def test_default_session_uses_endpoint_url_env_var(self):\n+        ENDPOINT_URL = \"http://endpoint.url\"\n+        os.environ[\"AWS_ENDPOINT_URL\"] = ENDPOINT_URL\n+        boto3.setup_default_session(\n+            aws_access_key_id=\"key\", aws_secret_access_key=\"secret\"\n+        )\n+        client = boto3.DEFAULT_SESSION.client(\"s3\")\n+        self.assertTrue(\n+            client._endpoint.host == ENDPOINT_URL,\n+            \"AWS_ENDPOINT_URL env var not used when set\",\n+        )\n+        del os.environ[\"AWS_ENDPOINT_URL\"]",
        "comment_created_at": "2021-12-28T15:14:23+00:00",
        "comment_author": "pappacena",
        "comment_body": "If `AWS_ENDPOINT_URL` is actually set on the environment before this test, `del os.environ[\"AWS_ENDPOINT_URL\"]` could mess up with it for other tests.\r\n\r\nMaybe a setUp method like this would be better, to restore the `os.environ` to its original state after each test run?\r\n```\r\n    def restore_dict(self, dictionary: dict, original_data: dict):\r\n        dictionary.clear()\r\n        dictionary.update(original_data)\r\n\r\n    def setUp(self):\r\n        original_env = os.environ.copy()\r\n        self.addCleanup(lambda: self.restore_dict(os.environ, original_env))\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "47417812",
    "pr_number": 402,
    "pr_file": "tests/unit/docs/test_service.py",
    "created_at": "2015-12-11T23:24:34+00:00",
    "commented_code": "service_documenter = ServiceDocumenter('myservice', self.session)\n         contents = service_documenter.document_service().decode('utf-8')\n         self.assertNotIn('Waiters', contents)\n+\n+    def test_creates_correct_path_to_examples_based_on_service_name(self):\n+        path = os.sep.join([os.path.dirname(__file__), '..', '..', '..',",
    "repo_full_name": "boto/boto3",
    "discussion_comments": [
      {
        "comment_id": "47417812",
        "repo_full_name": "boto/boto3",
        "pr_number": 402,
        "pr_file": "tests/unit/docs/test_service.py",
        "discussion_id": "47417812",
        "commented_code": "@@ -111,3 +112,20 @@ def test_document_service_no_waiter(self):\n         service_documenter = ServiceDocumenter('myservice', self.session)\n         contents = service_documenter.document_service().decode('utf-8')\n         self.assertNotIn('Waiters', contents)\n+\n+    def test_creates_correct_path_to_examples_based_on_service_name(self):\n+        path = os.sep.join([os.path.dirname(__file__), '..', '..', '..',",
        "comment_created_at": "2015-12-11T23:24:34+00:00",
        "comment_author": "kyleknap",
        "comment_body": "I would import boto3 and use `boto3.__file__` to determine this location instead of relying on the location of the test. That way if the test ever moves location, we do not have to update the test.\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "21276920",
    "pr_number": 36,
    "pr_file": "tests/integration/test_sqs.py",
    "created_at": "2014-12-04T00:16:59+00:00",
    "commented_code": "+# Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"). You\n+# may not use this file except in compliance with the License. A copy of\n+# the License is located at\n+#\n+# http://aws.amazon.com/apache2.0/\n+#\n+# or in the \"license\" file accompanying this file. This file is\n+# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n+# ANY KIND, either express or implied. See the License for the specific\n+# language governing permissions and limitations under the License.\n+\n+import time\n+import boto3.session\n+\n+from tests import unittest\n+\n+\n+class TestSQSResource(unittest.TestCase):\n+    def setUp(self):\n+        self.session = boto3.session.Session()",
    "repo_full_name": "boto/boto3",
    "discussion_comments": [
      {
        "comment_id": "21276920",
        "repo_full_name": "boto/boto3",
        "pr_number": 36,
        "pr_file": "tests/integration/test_sqs.py",
        "discussion_id": "21276920",
        "commented_code": "@@ -0,0 +1,41 @@\n+# Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"). You\n+# may not use this file except in compliance with the License. A copy of\n+# the License is located at\n+#\n+# http://aws.amazon.com/apache2.0/\n+#\n+# or in the \"license\" file accompanying this file. This file is\n+# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n+# ANY KIND, either express or implied. See the License for the specific\n+# language governing permissions and limitations under the License.\n+\n+import time\n+import boto3.session\n+\n+from tests import unittest\n+\n+\n+class TestSQSResource(unittest.TestCase):\n+    def setUp(self):\n+        self.session = boto3.session.Session()",
        "comment_created_at": "2014-12-04T00:16:59+00:00",
        "comment_author": "kyleknap",
        "comment_body": "You should specify a region in case the machine the test is running on does not have it specified anywhere. I believe I have actually run into issues like that before with the CLI.\n",
        "pr_file_module": null
      }
    ]
  }
]