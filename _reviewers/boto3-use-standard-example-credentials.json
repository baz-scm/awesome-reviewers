[
  {
    "discussion_id": "50773816",
    "pr_number": 455,
    "pr_file": "boto3/examples/cloudfront.rst",
    "created_at": "2016-01-25T23:25:58+00:00",
    "commented_code": "+Generate a signed URL for Amazon CloudFront\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+The following example shows how to generate a singed URL for Amazon CloudFront.\n+Note that you will need the ``cryptography`` `library <https://cryptography.io/en/latest/>`__ to follow this example::\n+\n+    import datetime\n+\n+    from cryptography.hazmat.backends import default_backend\n+    from cryptography.hazmat.primitives import hashes\n+    from cryptography.hazmat.primitives import serialization\n+    from cryptography.hazmat.primitives.asymmetric import padding\n+    from botocore.signers import CloudFrontSigner\n+\n+\n+    def rsa_signer(message):\n+        with open('path/to/key.pem', 'rb') as key_file:\n+            private_key = serialization.load_pem_private_key(\n+                key_file.read(),\n+                password=None,\n+                backend=default_backend()\n+            )\n+        signer = private_key.signer(padding.PKCS1v15(), hashes.SHA1())\n+        signer.update(message)\n+        return signer.finalize()\n+\n+    key_id = 'APKBJCAOBHD36274ZIZA'",
    "repo_full_name": "boto/boto3",
    "discussion_comments": [
      {
        "comment_id": "50773816",
        "repo_full_name": "boto/boto3",
        "pr_number": 455,
        "pr_file": "boto3/examples/cloudfront.rst",
        "discussion_id": "50773816",
        "commented_code": "@@ -0,0 +1,37 @@\n+Generate a signed URL for Amazon CloudFront\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+The following example shows how to generate a singed URL for Amazon CloudFront.\n+Note that you will need the ``cryptography`` `library <https://cryptography.io/en/latest/>`__ to follow this example::\n+\n+    import datetime\n+\n+    from cryptography.hazmat.backends import default_backend\n+    from cryptography.hazmat.primitives import hashes\n+    from cryptography.hazmat.primitives import serialization\n+    from cryptography.hazmat.primitives.asymmetric import padding\n+    from botocore.signers import CloudFrontSigner\n+\n+\n+    def rsa_signer(message):\n+        with open('path/to/key.pem', 'rb') as key_file:\n+            private_key = serialization.load_pem_private_key(\n+                key_file.read(),\n+                password=None,\n+                backend=default_backend()\n+            )\n+        signer = private_key.signer(padding.PKCS1v15(), hashes.SHA1())\n+        signer.update(message)\n+        return signer.finalize()\n+\n+    key_id = 'APKBJCAOBHD36274ZIZA'",
        "comment_created_at": "2016-01-25T23:25:58+00:00",
        "comment_author": "mtdowling",
        "comment_body": "Can you change this to the standard example key so that this doesn't trip up scanners like `git-secrets`: AKIAIOSFODNN7EXAMPLE\n",
        "pr_file_module": null
      }
    ]
  }
]