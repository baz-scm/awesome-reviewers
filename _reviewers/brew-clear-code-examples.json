[
  {
    "discussion_id": "1955177525",
    "pr_number": 19304,
    "pr_file": "docs/Installation.md",
    "created_at": "2025-02-13T20:33:58+00:00",
    "commented_code": "Create a Homebrew installation wherever you extract the tarball. Whichever `brew` command is called is where the packages will be installed. You can use this as you see fit, e.g. to have a system set of libs in the default prefix and tweaked formulae for development in `~/homebrew`.\n \n+## Post-installation steps\n+\n+Before completing installation, Homebrew installer will provide some required \"Next steps\" instructions.\n+These instructions configure your shell to evaluate the output of `brew shellenv`,\n+which will load `brew` into your shell environment for use.\n+\n+While it's difficult to document the precise path for every shell,\n+typically, what follows must be in your shell's `rc` or `profile` file:\n+\n+```sh\n+eval \"${HOMEBREW_PREFIX}/bin/brew shellenv)\"\n+```\n+\n+where `${HOMEBREW_PREFIX}` is the Homebrew installation directory.\n+Replace this with the installation directory on your system.",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1955177525",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Installation.md",
        "discussion_id": "1955177525",
        "commented_code": "@@ -93,6 +93,28 @@ Make sure you avoid installing into:\n \n Create a Homebrew installation wherever you extract the tarball. Whichever `brew` command is called is where the packages will be installed. You can use this as you see fit, e.g. to have a system set of libs in the default prefix and tweaked formulae for development in `~/homebrew`.\n \n+## Post-installation steps\n+\n+Before completing installation, Homebrew installer will provide some required \"Next steps\" instructions.\n+These instructions configure your shell to evaluate the output of `brew shellenv`,\n+which will load `brew` into your shell environment for use.\n+\n+While it's difficult to document the precise path for every shell,\n+typically, what follows must be in your shell's `rc` or `profile` file:\n+\n+```sh\n+eval \"${HOMEBREW_PREFIX}/bin/brew shellenv)\"\n+```\n+\n+where `${HOMEBREW_PREFIX}` is the Homebrew installation directory.\n+Replace this with the installation directory on your system.",
        "comment_created_at": "2025-02-13T20:33:58+00:00",
        "comment_author": "jvns",
        "comment_body": "curious if there's a way to help people figure out what the installation directory is here. Maybe could just link to the FAQ entry? https://docs.brew.sh/FAQ#why-should-i-install-homebrew-in-the-default-location\r\n\r\nsomething like \"Replace this with the installation directory on your system ([listed here](https://docs.brew.sh/FAQ#why-should-i-install-homebrew-in-the-default-location)).\"",
        "pr_file_module": null
      },
      {
        "comment_id": "1955268724",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Installation.md",
        "discussion_id": "1955177525",
        "commented_code": "@@ -93,6 +93,28 @@ Make sure you avoid installing into:\n \n Create a Homebrew installation wherever you extract the tarball. Whichever `brew` command is called is where the packages will be installed. You can use this as you see fit, e.g. to have a system set of libs in the default prefix and tweaked formulae for development in `~/homebrew`.\n \n+## Post-installation steps\n+\n+Before completing installation, Homebrew installer will provide some required \"Next steps\" instructions.\n+These instructions configure your shell to evaluate the output of `brew shellenv`,\n+which will load `brew` into your shell environment for use.\n+\n+While it's difficult to document the precise path for every shell,\n+typically, what follows must be in your shell's `rc` or `profile` file:\n+\n+```sh\n+eval \"${HOMEBREW_PREFIX}/bin/brew shellenv)\"\n+```\n+\n+where `${HOMEBREW_PREFIX}` is the Homebrew installation directory.\n+Replace this with the installation directory on your system.",
        "comment_created_at": "2025-02-13T21:58:04+00:00",
        "comment_author": "colindean",
        "comment_body": "How's this?\r\n\r\n```suggestion\r\nReplace this with the installation directory on your system.\r\nSee the [FAQ about default installation locations](FAQ.md#why-should-i-install-homebrew-in-the-default-location).\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1956254345",
    "pr_number": 19304,
    "pr_file": "docs/Installation.md",
    "created_at": "2025-02-14T14:39:27+00:00",
    "commented_code": "Create a Homebrew installation wherever you extract the tarball. Whichever `brew` command is called is where the packages will be installed. You can use this as you see fit, e.g. to have a system set of libs in the default prefix and tweaked formulae for development in `~/homebrew`.\n \n+## Post-installation steps\n+\n+Before completing installation, Homebrew installer will provide some required \"Next steps\" instructions.\n+These instructions configure your shell to evaluate the output of `brew shellenv`,\n+which will load `brew` into your shell environment for use.\n+\n+While it's difficult to document the precise path for every shell,\n+typically, what follows must be in your shell's `rc` or `profile` file:\n+\n+```sh\n+eval \"${HOMEBREW_PREFIX}/bin/brew shellenv)\"",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1956254345",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Installation.md",
        "discussion_id": "1956254345",
        "commented_code": "@@ -93,6 +93,28 @@ Make sure you avoid installing into:\n \n Create a Homebrew installation wherever you extract the tarball. Whichever `brew` command is called is where the packages will be installed. You can use this as you see fit, e.g. to have a system set of libs in the default prefix and tweaked formulae for development in `~/homebrew`.\n \n+## Post-installation steps\n+\n+Before completing installation, Homebrew installer will provide some required \"Next steps\" instructions.\n+These instructions configure your shell to evaluate the output of `brew shellenv`,\n+which will load `brew` into your shell environment for use.\n+\n+While it's difficult to document the precise path for every shell,\n+typically, what follows must be in your shell's `rc` or `profile` file:\n+\n+```sh\n+eval \"${HOMEBREW_PREFIX}/bin/brew shellenv)\"",
        "comment_created_at": "2025-02-14T14:39:27+00:00",
        "comment_author": "EricFromCanada",
        "comment_body": "Using `${HOMEBREW_PREFIX}` implies the line can be copied and pasted as-is, so anyone just scanning the text won't notice that a substitution has to be made manually. I suggest something like:\r\n```suggestion\r\neval \"<Homebrew prefix path>/bin/brew shellenv)\"",
        "pr_file_module": null
      },
      {
        "comment_id": "1956320083",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Installation.md",
        "discussion_id": "1956254345",
        "commented_code": "@@ -93,6 +93,28 @@ Make sure you avoid installing into:\n \n Create a Homebrew installation wherever you extract the tarball. Whichever `brew` command is called is where the packages will be installed. You can use this as you see fit, e.g. to have a system set of libs in the default prefix and tweaked formulae for development in `~/homebrew`.\n \n+## Post-installation steps\n+\n+Before completing installation, Homebrew installer will provide some required \"Next steps\" instructions.\n+These instructions configure your shell to evaluate the output of `brew shellenv`,\n+which will load `brew` into your shell environment for use.\n+\n+While it's difficult to document the precise path for every shell,\n+typically, what follows must be in your shell's `rc` or `profile` file:\n+\n+```sh\n+eval \"${HOMEBREW_PREFIX}/bin/brew shellenv)\"",
        "comment_created_at": "2025-02-14T15:23:58+00:00",
        "comment_author": "colindean",
        "comment_body": "That's a very good point!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1956380114",
    "pr_number": 19304,
    "pr_file": "docs/Installation.md",
    "created_at": "2025-02-14T16:01:25+00:00",
    "commented_code": "Create a Homebrew installation wherever you extract the tarball. Whichever `brew` command is called is where the packages will be installed. You can use this as you see fit, e.g. to have a system set of libs in the default prefix and tweaked formulae for development in `~/homebrew`.\n \n+## Post-installation steps\n+\n+Before completing installation, Homebrew installer will provide some required \"Next steps\" instructions.\n+These instructions configure your shell to evaluate the output of `brew shellenv`,\n+which will load `brew` into your shell environment for use.\n+\n+While it's difficult to document the precise path for every shell,\n+typically, what follows must be in your shell's `rc` or `profile` file:\n+\n+```sh\n+eval \"<Homebrew prefix path>/bin/brew shellenv)\"\n+```\n+\n+where `${HOMEBREW_PREFIX}` is the Homebrew installation directory.\n+Replace this with the installation directory on your system.\n+See the [FAQ about default installation locations](FAQ.md#why-should-i-install-homebrew-in-the-default-location).",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1956380114",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Installation.md",
        "discussion_id": "1956380114",
        "commented_code": "@@ -93,6 +93,29 @@ Make sure you avoid installing into:\n \n Create a Homebrew installation wherever you extract the tarball. Whichever `brew` command is called is where the packages will be installed. You can use this as you see fit, e.g. to have a system set of libs in the default prefix and tweaked formulae for development in `~/homebrew`.\n \n+## Post-installation steps\n+\n+Before completing installation, Homebrew installer will provide some required \"Next steps\" instructions.\n+These instructions configure your shell to evaluate the output of `brew shellenv`,\n+which will load `brew` into your shell environment for use.\n+\n+While it's difficult to document the precise path for every shell,\n+typically, what follows must be in your shell's `rc` or `profile` file:\n+\n+```sh\n+eval \"<Homebrew prefix path>/bin/brew shellenv)\"\n+```\n+\n+where `${HOMEBREW_PREFIX}` is the Homebrew installation directory.\n+Replace this with the installation directory on your system.\n+See the [FAQ about default installation locations](FAQ.md#why-should-i-install-homebrew-in-the-default-location).",
        "comment_created_at": "2025-02-14T16:01:25+00:00",
        "comment_author": "jvns",
        "comment_body": "I asked my friend who inspired the original post and they said they found this section extremely difficult to understand. We tried to rework it to make it clearer and this is what we came up with:\r\n\r\n### Post-installation steps\r\n\r\nWhen you install Homebrew, it prints some directions for updating your shell's config.\r\nIf you don't follow those directions, Homebrew will not work.\r\n\r\nYou need to update your shell's config file (which file exactly depends on your shell, for example `~/.bashrc` or `~/.zshrc`) to include this:\r\n\r\n```sh\r\neval \"<Homebrew prefix path>/bin/brew shellenv)\"\r\n```\r\n\r\nReplace `<Homebrew prefix path>` with the directory where Homebrew is installed on your system. You can find Homebrew's default install location [in this FAQ entry](https://docs.brew.sh/FAQ#why-should-i-install-homebrew-in-the-default-location).\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1959301477",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Installation.md",
        "discussion_id": "1956380114",
        "commented_code": "@@ -93,6 +93,29 @@ Make sure you avoid installing into:\n \n Create a Homebrew installation wherever you extract the tarball. Whichever `brew` command is called is where the packages will be installed. You can use this as you see fit, e.g. to have a system set of libs in the default prefix and tweaked formulae for development in `~/homebrew`.\n \n+## Post-installation steps\n+\n+Before completing installation, Homebrew installer will provide some required \"Next steps\" instructions.\n+These instructions configure your shell to evaluate the output of `brew shellenv`,\n+which will load `brew` into your shell environment for use.\n+\n+While it's difficult to document the precise path for every shell,\n+typically, what follows must be in your shell's `rc` or `profile` file:\n+\n+```sh\n+eval \"<Homebrew prefix path>/bin/brew shellenv)\"\n+```\n+\n+where `${HOMEBREW_PREFIX}` is the Homebrew installation directory.\n+Replace this with the installation directory on your system.\n+See the [FAQ about default installation locations](FAQ.md#why-should-i-install-homebrew-in-the-default-location).",
        "comment_created_at": "2025-02-18T08:44:50+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "Love this version, thanks @jvns! @colindean could you use this verbatim?\r\n\r\nThanks both!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2163251862",
    "pr_number": 20117,
    "pr_file": "docs/Autobump.md",
    "created_at": "2025-06-24T08:10:32+00:00",
    "commented_code": "+---\n+last_review_date: \"2025-06-16\"\n+---\n+\n+# Autobump\n+\n+[BrewTestBot](BrewTestBot.md) automatically checks for available updates of packages in autobump list. It means that some formulae and casks in official repositories do not have to be bumped manually by a contributor. Instead, every 3 hours, a GitHub Action ensures and a new pull request is opened if Homebrew does not provide the latest version of a formula/cask.\n+\n+## Excluding packages from autobump list\n+\n+By default, all new formulae and casks from [Homebrew/core](https://github.com/Homebrew/homebrew-core) and [Homebrew/cask](https://github.com/Homebrew/homebrew-cask) repositories are added to the list. To exclude a package from the list, it should satisfy one of the following:\n+\n+1. The package is deprecated or disabled.\n+2. The The Livecheck block has a `skip` method.\n+3. It has a `no_autobump!` method/stanza.\n+\n+There are maybe other formula-specific or cask-specific reasons that are not listed here. Please, refer to the respective documentation to learn more about it.\n+\n+To use the `no_autobump!`, a reason for exclusion **must** be provided. The preferred way to set the reason is to use one of the available supported symbols. The list of these symbols can be found in the [`NO_AUTOBUMP_REASONS_LIST`](https://rubydoc.brew.sh/top-level-namespace.html#NO_AUTOBUMP_REASONS_LIST-constant) constants:\n+\n+* `:incompatible_version_format`: This reason is used when the `brew bump` command cannot determine a version for the URL or update it. For example, if a tarball with the source code has a complex URL like `https://example.com/download/<major-version>/<minor-version>/foo-<full-version>-<git-commit>.tar.gz`, Homebrew wouldn't be able to replace the old URL with the new one automatically.\n+* `:bumped_by_upstream`: Some developers whose programs are available in Homebrew want to take care of the updates themselves or even set up a CI action that does this. This `no_autobump!` reason exists for such cases.\n+* `:requires_manual_review`: This is a temporary reason and expected to be deprecated in the future. It indicates that this package was not in the `autobump.txt` file before the new autobump list was introduced.\n+\n+Some `no_autobump!` reasons also appear in the list but should not be used directly:\n+\n+* `:extract_plist`: This reason is set if `livecheck` uses the `:extract_plist` strategy.\n+* `:latest_version`: This reason is set if `version` is set to `:latest`.\n+",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2163251862",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20117,
        "pr_file": "docs/Autobump.md",
        "discussion_id": "2163251862",
        "commented_code": "@@ -0,0 +1,42 @@\n+---\n+last_review_date: \"2025-06-16\"\n+---\n+\n+# Autobump\n+\n+[BrewTestBot](BrewTestBot.md) automatically checks for available updates of packages in autobump list. It means that some formulae and casks in official repositories do not have to be bumped manually by a contributor. Instead, every 3 hours, a GitHub Action ensures and a new pull request is opened if Homebrew does not provide the latest version of a formula/cask.\n+\n+## Excluding packages from autobump list\n+\n+By default, all new formulae and casks from [Homebrew/core](https://github.com/Homebrew/homebrew-core) and [Homebrew/cask](https://github.com/Homebrew/homebrew-cask) repositories are added to the list. To exclude a package from the list, it should satisfy one of the following:\n+\n+1. The package is deprecated or disabled.\n+2. The The Livecheck block has a `skip` method.\n+3. It has a `no_autobump!` method/stanza.\n+\n+There are maybe other formula-specific or cask-specific reasons that are not listed here. Please, refer to the respective documentation to learn more about it.\n+\n+To use the `no_autobump!`, a reason for exclusion **must** be provided. The preferred way to set the reason is to use one of the available supported symbols. The list of these symbols can be found in the [`NO_AUTOBUMP_REASONS_LIST`](https://rubydoc.brew.sh/top-level-namespace.html#NO_AUTOBUMP_REASONS_LIST-constant) constants:\n+\n+* `:incompatible_version_format`: This reason is used when the `brew bump` command cannot determine a version for the URL or update it. For example, if a tarball with the source code has a complex URL like `https://example.com/download/<major-version>/<minor-version>/foo-<full-version>-<git-commit>.tar.gz`, Homebrew wouldn't be able to replace the old URL with the new one automatically.\n+* `:bumped_by_upstream`: Some developers whose programs are available in Homebrew want to take care of the updates themselves or even set up a CI action that does this. This `no_autobump!` reason exists for such cases.\n+* `:requires_manual_review`: This is a temporary reason and expected to be deprecated in the future. It indicates that this package was not in the `autobump.txt` file before the new autobump list was introduced.\n+\n+Some `no_autobump!` reasons also appear in the list but should not be used directly:\n+\n+* `:extract_plist`: This reason is set if `livecheck` uses the `:extract_plist` strategy.\n+* `:latest_version`: This reason is set if `version` is set to `:latest`.\n+",
        "comment_created_at": "2025-06-24T08:10:32+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "```suggestion\r\n```\r\n\r\nthis should instead rely on the rubydoc.brew.sh documentation rather than duplicating it",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1968109225",
    "pr_number": 19362,
    "pr_file": "docs/Formula-Cookbook.md",
    "created_at": "2025-02-24T17:34:16+00:00",
    "commented_code": "### Fill in the `homepage`\n \n-**We don’t accept formulae without a [`homepage`](https://rubydoc.brew.sh/Formula#homepage%3D-class_method)!**\n+**We don’t accept formulae without a [`homepage`](https://rubydoc.brew.sh/Formula#homepage-class_method)!**",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1968109225",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19362,
        "pr_file": "docs/Formula-Cookbook.md",
        "discussion_id": "1968109225",
        "commented_code": "@@ -74,11 +74,11 @@ Homebrew will try to guess the formula’s name from its URL. If it fails to do\n \n ### Fill in the `homepage`\n \n-**We don’t accept formulae without a [`homepage`](https://rubydoc.brew.sh/Formula#homepage%3D-class_method)!**\n+**We don’t accept formulae without a [`homepage`](https://rubydoc.brew.sh/Formula#homepage-class_method)!**",
        "comment_created_at": "2025-02-24T17:34:16+00:00",
        "comment_author": "dduugg",
        "comment_body": "Note that this also makes the docs more correct, there never was a `homepage=` method, the setter was always `homepage \"https://example.com\"` (and similarly for the other `attr_rw` methods that were refactored in https://github.com/Homebrew/brew/pull/19359/files). \r\n\r\n(`%3D` is the URL encoding of `=`)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1531894575",
    "pr_number": 16924,
    "pr_file": "docs/Formula-Cookbook.md",
    "created_at": "2024-03-20T11:08:52+00:00",
    "commented_code": "| `cron`                  | -            |  yes  |  yes  | controls the trigger times, required for the `:cron` type |\n | `keep_alive`            | `false`      |  yes  |  yes  | [sets contexts](#keep_alive-options) in which the service will keep the process running |\n | `launch_only_once`      | `false`      |  yes  |  yes  | whether the command should only run once |\n-| `require_root`          | `false`      |  yes  |  yes  | whether the service requires root access |\n+| `require_root`          | `false`      |  yes  |  yes  | whether the service requires root access. If true, Homebrew hints at using sudo on various occasions, but does not enforce it |",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1531894575",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 16924,
        "pr_file": "docs/Formula-Cookbook.md",
        "discussion_id": "1531894575",
        "commented_code": "@@ -980,7 +980,7 @@ This table lists the options you can set within a `service` block. The `run` or\n | `cron`                  | -            |  yes  |  yes  | controls the trigger times, required for the `:cron` type |\n | `keep_alive`            | `false`      |  yes  |  yes  | [sets contexts](#keep_alive-options) in which the service will keep the process running |\n | `launch_only_once`      | `false`      |  yes  |  yes  | whether the command should only run once |\n-| `require_root`          | `false`      |  yes  |  yes  | whether the service requires root access |\n+| `require_root`          | `false`      |  yes  |  yes  | whether the service requires root access. If true, Homebrew hints at using sudo on various occasions, but does not enforce it |",
        "comment_created_at": "2024-03-20T11:08:52+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "```suggestion\r\n| `require_root`          | `false`      |  yes  |  yes  | whether the service requires root access. If true, Homebrew hints at using `sudo` on various occasions, but does not enforce it |\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1531980556",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 16924,
        "pr_file": "docs/Formula-Cookbook.md",
        "discussion_id": "1531894575",
        "commented_code": "@@ -980,7 +980,7 @@ This table lists the options you can set within a `service` block. The `run` or\n | `cron`                  | -            |  yes  |  yes  | controls the trigger times, required for the `:cron` type |\n | `keep_alive`            | `false`      |  yes  |  yes  | [sets contexts](#keep_alive-options) in which the service will keep the process running |\n | `launch_only_once`      | `false`      |  yes  |  yes  | whether the command should only run once |\n-| `require_root`          | `false`      |  yes  |  yes  | whether the service requires root access |\n+| `require_root`          | `false`      |  yes  |  yes  | whether the service requires root access. If true, Homebrew hints at using sudo on various occasions, but does not enforce it |",
        "comment_created_at": "2024-03-20T12:15:49+00:00",
        "comment_author": "Jerry1144",
        "comment_body": "Fixed.",
        "pr_file_module": null
      }
    ]
  }
]