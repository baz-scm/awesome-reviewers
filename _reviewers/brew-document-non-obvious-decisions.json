[
  {
    "discussion_id": "2115299152",
    "pr_number": 20026,
    "pr_file": "Library/Homebrew/formula_creator.rb",
    "created_at": "2025-05-30T07:24:08+00:00",
    "commented_code": "r.owner = self\n           filepath = r.fetch\n           html_doctype_prefix = \"<!doctype html\"\n-          if File.read(filepath, html_doctype_prefix.length).downcase.start_with?(html_doctype_prefix)\n+          if File.read(filepath, 100).strip.downcase.start_with?(html_doctype_prefix)",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2115299152",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20026,
        "pr_file": "Library/Homebrew/formula_creator.rb",
        "discussion_id": "2115299152",
        "commented_code": "@@ -84,7 +84,7 @@ def write_formula!\n           r.owner = self\n           filepath = r.fetch\n           html_doctype_prefix = \"<!doctype html\"\n-          if File.read(filepath, html_doctype_prefix.length).downcase.start_with?(html_doctype_prefix)\n+          if File.read(filepath, 100).strip.downcase.start_with?(html_doctype_prefix)",
        "comment_created_at": "2025-05-30T07:24:08+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "Please add a comment, and ideally turn this into a constant/variable, explaining why 100 is used otherwise it seems arbitrary.",
        "pr_file_module": null
      },
      {
        "comment_id": "2115358800",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20026,
        "pr_file": "Library/Homebrew/formula_creator.rb",
        "discussion_id": "2115299152",
        "commented_code": "@@ -84,7 +84,7 @@ def write_formula!\n           r.owner = self\n           filepath = r.fetch\n           html_doctype_prefix = \"<!doctype html\"\n-          if File.read(filepath, html_doctype_prefix.length).downcase.start_with?(html_doctype_prefix)\n+          if File.read(filepath, 100).strip.downcase.start_with?(html_doctype_prefix)",
        "comment_created_at": "2025-05-30T08:01:33+00:00",
        "comment_author": "abitrolly",
        "comment_body": "@MikeMcQuaid the number is arbitrary, but I've added the comment that explains the logic. Please take a look.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2100271374",
    "pr_number": 19989,
    "pr_file": "Library/Homebrew/dev-cmd/bump-formula-pr.rb",
    "created_at": "2025-05-21T13:15:56+00:00",
    "commented_code": "if github_release_data.present?\n               pre = \"pre\" if github_release_data[\"prerelease\"].present?\n+              body = github_release_data[\"body\"].split(\"\n\n\").take(3).join(\"\n\n\")",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2100271374",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19989,
        "pr_file": "Library/Homebrew/dev-cmd/bump-formula-pr.rb",
        "discussion_id": "2100271374",
        "commented_code": "@@ -399,10 +399,13 @@ def run\n \n             if github_release_data.present?\n               pre = \"pre\" if github_release_data[\"prerelease\"].present?\n+              body = github_release_data[\"body\"].split(\"\\n\\n\").take(3).join(\"\\n\\n\")",
        "comment_created_at": "2025-05-21T13:15:56+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "```suggestion\r\n              # maximum length of PR body is 65,536 characters so let's truncate release notes to half of that.\r\n              body = github_release_data[\"body\"].truncate(32_768)\r\n```\r\n\r\nwould be nicer to truncate based on an actual length here",
        "pr_file_module": null
      },
      {
        "comment_id": "2100290859",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19989,
        "pr_file": "Library/Homebrew/dev-cmd/bump-formula-pr.rb",
        "discussion_id": "2100271374",
        "commented_code": "@@ -399,10 +399,13 @@ def run\n \n             if github_release_data.present?\n               pre = \"pre\" if github_release_data[\"prerelease\"].present?\n+              body = github_release_data[\"body\"].split(\"\\n\\n\").take(3).join(\"\\n\\n\")",
        "comment_created_at": "2025-05-21T13:23:42+00:00",
        "comment_author": "bevanjkay",
        "comment_body": "It's unlikely that multiple instances would hit the limit, but because more than one formula can be bumped at once (using `brew bump --bump-synced`), it's possible that the PR body includes the release notes from multiple formulae. So it may be beneficial to be more conservative with the character limit?",
        "pr_file_module": null
      },
      {
        "comment_id": "2100472874",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19989,
        "pr_file": "Library/Homebrew/dev-cmd/bump-formula-pr.rb",
        "discussion_id": "2100271374",
        "commented_code": "@@ -399,10 +399,13 @@ def run\n \n             if github_release_data.present?\n               pre = \"pre\" if github_release_data[\"prerelease\"].present?\n+              body = github_release_data[\"body\"].split(\"\\n\\n\").take(3).join(\"\\n\\n\")",
        "comment_created_at": "2025-05-21T14:39:31+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "@bevanjkay worth handling in a follow-up I think. My suggestion would be that `--bump-synced` does not include any release notes or it handles the truncation its own way/as well.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1768427858",
    "pr_number": 18363,
    "pr_file": "Library/Homebrew/github_runner_matrix.rb",
    "created_at": "2024-09-20T11:17:01+00:00",
    "commented_code": "macos_version <= NEWEST_HOMEBREW_CORE_MACOS_RUNNER && macos_version >= OLDEST_HOMEBREW_CORE_MACOS_RUNNER\n   end\n \n+  NEW_INTEL_MACOS_MUST_BUILD_FORMULAE = %w[pkg-config pkgconf].freeze\n+\n+  sig { returns(T::Boolean) }\n+  def deploy_new_x86_64_runner?\n+    return true if @testing_formulae.any? { |f| NEW_INTEL_MACOS_MUST_BUILD_FORMULAE.include?(f.name) }\n+    return true if @testing_formulae.any? { |f| f.formula.class.pour_bottle_only_if == :clt_installed }\n+\n+    Formula.all.any? do |formula|\n+      non_test_dependencies = Dependency.expand(formula, cache_key: \"determine-test-runners\") do |_, dependency|\n+        Dependency.prune if dependency.test?\n+      end\n+      next false if non_test_dependencies.none? { |dep| @testing_formulae.map(&:name).include?(dep.name) }\n+\n+      formula.class.pour_bottle_only_if == :clt_installed\n+    end\n+  end",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1768427858",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 18363,
        "pr_file": "Library/Homebrew/github_runner_matrix.rb",
        "discussion_id": "1768427858",
        "commented_code": "@@ -129,6 +129,23 @@ def runner_enabled?(macos_version)\n     macos_version <= NEWEST_HOMEBREW_CORE_MACOS_RUNNER && macos_version >= OLDEST_HOMEBREW_CORE_MACOS_RUNNER\n   end\n \n+  NEW_INTEL_MACOS_MUST_BUILD_FORMULAE = %w[pkg-config pkgconf].freeze\n+\n+  sig { returns(T::Boolean) }\n+  def deploy_new_x86_64_runner?\n+    return true if @testing_formulae.any? { |f| NEW_INTEL_MACOS_MUST_BUILD_FORMULAE.include?(f.name) }\n+    return true if @testing_formulae.any? { |f| f.formula.class.pour_bottle_only_if == :clt_installed }\n+\n+    Formula.all.any? do |formula|\n+      non_test_dependencies = Dependency.expand(formula, cache_key: \"determine-test-runners\") do |_, dependency|\n+        Dependency.prune if dependency.test?\n+      end\n+      next false if non_test_dependencies.none? { |dep| @testing_formulae.map(&:name).include?(dep.name) }\n+\n+      formula.class.pour_bottle_only_if == :clt_installed\n+    end\n+  end",
        "comment_created_at": "2024-09-20T11:17:01+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "As mentioned before: I'd love to see this be a temporary stop-gap while we add a DSL. I think this needs some pretty hefty amounts of comments until then explaining why these particular formulae need to be doing what they are doing here.",
        "pr_file_module": null
      }
    ]
  }
]