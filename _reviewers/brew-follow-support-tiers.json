[
  {
    "discussion_id": "2040720882",
    "pr_number": 19748,
    "pr_file": "docs/Support-Tiers.md",
    "created_at": "2025-04-12T18:52:52+00:00",
    "commented_code": "- using official packages that need to be built from source due to installing Homebrew outside the default prefix\n   (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n - running on a not-yet-supported architecture (i.e. Linux ARM64/AARCH64)\n+- devices using OpenCore Legacy Patcher",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2040720882",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19748,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2040720882",
        "commented_code": "@@ -63,6 +63,7 @@ Tier 2 configurations include:\n - using official packages that need to be built from source due to installing Homebrew outside the default prefix\n   (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n - running on a not-yet-supported architecture (i.e. Linux ARM64/AARCH64)\n+- devices using OpenCore Legacy Patcher",
        "comment_created_at": "2025-04-12T18:52:52+00:00",
        "comment_author": "Bo98",
        "comment_body": "```suggestion\r\n- devices using OpenCore Legacy Patcher with a Westmere or later Intel CPU\r\n```\r\n\r\nOlder than Westmere being tier 3, so could maybe add something there too.\r\n\r\nTechnically more complex with that (Westmere only matters if macOS >= 13), but macOS < 13 is tier 3 anyway so we can keep it simple here.\r\n\r\nMay become more complex again in the future if arm64 becomes relevant here.",
        "pr_file_module": null
      },
      {
        "comment_id": "2040728338",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19748,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2040720882",
        "commented_code": "@@ -63,6 +63,7 @@ Tier 2 configurations include:\n - using official packages that need to be built from source due to installing Homebrew outside the default prefix\n   (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n - running on a not-yet-supported architecture (i.e. Linux ARM64/AARCH64)\n+- devices using OpenCore Legacy Patcher",
        "comment_created_at": "2025-04-12T19:43:54+00:00",
        "comment_author": "p-linnane",
        "comment_body": "We only check for the existence of OCLP, so I kept with that assumption. Maybe we can actually update the check to catch this and change the docs accordingly?\r\nhttps://github.com/Homebrew/brew/blob/213633371cdf5bd7713baf78ec8d0ce9a8593af5/Library/Homebrew/extend/os/mac/diagnostic.rb#L134-L154",
        "pr_file_module": null
      },
      {
        "comment_id": "2040753987",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19748,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2040720882",
        "commented_code": "@@ -63,6 +63,7 @@ Tier 2 configurations include:\n - using official packages that need to be built from source due to installing Homebrew outside the default prefix\n   (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n - running on a not-yet-supported architecture (i.e. Linux ARM64/AARCH64)\n+- devices using OpenCore Legacy Patcher",
        "comment_created_at": "2025-04-12T22:33:22+00:00",
        "comment_author": "Bo98",
        "comment_body": "We don't really have CPU comparison functions as it's kinda tricky to do. Ideally we'd compare with `Hardware.oldest_cpu`.\r\n\r\nThough if we don't care about macOS <13, I guess a check for PCLMULQDQ (introduced with Westmere) in `sysctl machdep.cpu.features` might be a simplistic way to do so this.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019056689",
    "pr_number": 19641,
    "pr_file": "docs/Support-Tiers.md",
    "created_at": "2025-03-28T17:19:54+00:00",
    "commented_code": "+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers\n+\n+## Tier 1\n+\n+### macOS\n+\n+To be supported on macOS a system must be all of the following:\n+\n+- running on official Apple hardware (e.g. not a Hackintosh)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+\n+### Linux\n+\n+To be supported on Linux a system must be all of the following:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- not require Homebrew's `glibc`\n+\n+Tier 1 e.g. macOS Sequoia (default prefix), Linux x86_64 (default prefix) with newish system libc: full CI coverage, full support, no warnings\n+\n+## Tier 2\n+\n+Tier 2 e.g. any non-default prefix), ARM64 Linux (today), new macOS prereleases, Linux with older glibc: partial/no CI coverage, partial support, brew doctor warnings, no other runtime warnings",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2019056689",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19641,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2019056689",
        "commented_code": "@@ -0,0 +1,39 @@\n+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers\n+\n+## Tier 1\n+\n+### macOS\n+\n+To be supported on macOS a system must be all of the following:\n+\n+- running on official Apple hardware (e.g. not a Hackintosh)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+\n+### Linux\n+\n+To be supported on Linux a system must be all of the following:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- not require Homebrew's `glibc`\n+\n+Tier 1 e.g. macOS Sequoia (default prefix), Linux x86_64 (default prefix) with newish system libc: full CI coverage, full support, no warnings\n+\n+## Tier 2\n+\n+Tier 2 e.g. any non-default prefix), ARM64 Linux (today), new macOS prereleases, Linux with older glibc: partial/no CI coverage, partial support, brew doctor warnings, no other runtime warnings",
        "comment_created_at": "2025-03-28T17:19:54+00:00",
        "comment_author": "dduugg",
        "comment_body": "```suggestion\r\nTier 2 e.g. any non-default prefix, ARM64 Linux (today), new macOS prereleases, Linux with older glibc: partial/no CI coverage, partial support, brew doctor warnings, no other runtime warnings\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019058611",
    "pr_number": 19641,
    "pr_file": "docs/Support-Tiers.md",
    "created_at": "2025-03-28T17:21:30+00:00",
    "commented_code": "+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2019058611",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19641,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2019058611",
        "commented_code": "@@ -0,0 +1,91 @@\n+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>",
        "comment_created_at": "2025-03-28T17:21:30+00:00",
        "comment_author": "samford",
        "comment_body": "```suggestion\r\n- if running Ubuntu, running an Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019062038",
    "pr_number": 19641,
    "pr_file": "docs/Support-Tiers.md",
    "created_at": "2025-03-28T17:24:15+00:00",
    "commented_code": "+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>\n+- installed Homebrew in the default prefix (i.e. `/home/linuxbrew/.linuxbrew`)\n+- running on a supported architecture (i.e. Intel x86_64)\n+\n+## Tier 2\n+\n+A Tier 2 supported configuration is one in which any of:\n+\n+- you get a subpar but potentially still usable experience using Homebrew\n+- we review PRs that that fix bugs affecting this platform but will not aim to fix bugs\n+- we will output `brew doctor` warnings running on this platform\n+- we are missing some CI coverage for testing and building bottles for this platform\n+- we will close issues only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 2 configurations include:\n+\n+- macOS prereleases before we state they are Tier 1 (e.g. in March 2025, macOS 16, whatever it ends up being called)\n+- Linux versions where a system `glibc` < 2.13 so the Homebrew `glibc@*` formula is automatically installed\n+- using official packages that need to be built from source due to installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+- running on a not yet supported architecture (i.e. Linux ARM64/AARCH64)\n+\n+## Tier 3\n+\n+A Tier 3 supported configuration is one in which:\n+\n+- you get a poor but not completely broken experience using Homebrew\n+- we strongly recommend migration to a Tier 1 or 2 configuration or a non-Homebrew tool if not\n+- we will not review PRs or aim to fix bugs only affecting this platform\n+- we may intentionally regress functionality on this platform if it e.g. improves things for other platforms\n+- we will noisy warnings running on this platform\n+- we are lacking any CI coverage for testing or building bottles for this platform\n+- we will close issues without response only affecting this platform",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2019062038",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19641,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2019062038",
        "commented_code": "@@ -0,0 +1,91 @@\n+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>\n+- installed Homebrew in the default prefix (i.e. `/home/linuxbrew/.linuxbrew`)\n+- running on a supported architecture (i.e. Intel x86_64)\n+\n+## Tier 2\n+\n+A Tier 2 supported configuration is one in which any of:\n+\n+- you get a subpar but potentially still usable experience using Homebrew\n+- we review PRs that that fix bugs affecting this platform but will not aim to fix bugs\n+- we will output `brew doctor` warnings running on this platform\n+- we are missing some CI coverage for testing and building bottles for this platform\n+- we will close issues only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 2 configurations include:\n+\n+- macOS prereleases before we state they are Tier 1 (e.g. in March 2025, macOS 16, whatever it ends up being called)\n+- Linux versions where a system `glibc` < 2.13 so the Homebrew `glibc@*` formula is automatically installed\n+- using official packages that need to be built from source due to installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+- running on a not yet supported architecture (i.e. Linux ARM64/AARCH64)\n+\n+## Tier 3\n+\n+A Tier 3 supported configuration is one in which:\n+\n+- you get a poor but not completely broken experience using Homebrew\n+- we strongly recommend migration to a Tier 1 or 2 configuration or a non-Homebrew tool if not\n+- we will not review PRs or aim to fix bugs only affecting this platform\n+- we may intentionally regress functionality on this platform if it e.g. improves things for other platforms\n+- we will noisy warnings running on this platform\n+- we are lacking any CI coverage for testing or building bottles for this platform\n+- we will close issues without response only affecting this platform",
        "comment_created_at": "2025-03-28T17:24:15+00:00",
        "comment_author": "dduugg",
        "comment_body": "```suggestion\r\n- we will close without response issues only affecting this platform\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019063617",
    "pr_number": 19641,
    "pr_file": "docs/Support-Tiers.md",
    "created_at": "2025-03-28T17:25:25+00:00",
    "commented_code": "+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>\n+- installed Homebrew in the default prefix (i.e. `/home/linuxbrew/.linuxbrew`)\n+- running on a supported architecture (i.e. Intel x86_64)\n+\n+## Tier 2\n+\n+A Tier 2 supported configuration is one in which any of:\n+\n+- you get a subpar but potentially still usable experience using Homebrew\n+- we review PRs that that fix bugs affecting this platform but will not aim to fix bugs\n+- we will output `brew doctor` warnings running on this platform\n+- we are missing some CI coverage for testing and building bottles for this platform\n+- we will close issues only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 2 configurations include:\n+\n+- macOS prereleases before we state they are Tier 1 (e.g. in March 2025, macOS 16, whatever it ends up being called)\n+- Linux versions where a system `glibc` < 2.13 so the Homebrew `glibc@*` formula is automatically installed\n+- using official packages that need to be built from source due to installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+- running on a not yet supported architecture (i.e. Linux ARM64/AARCH64)\n+\n+## Tier 3\n+\n+A Tier 3 supported configuration is one in which:\n+\n+- you get a poor but not completely broken experience using Homebrew\n+- we strongly recommend migration to a Tier 1 or 2 configuration or a non-Homebrew tool if not\n+- we will not review PRs or aim to fix bugs only affecting this platform\n+- we may intentionally regress functionality on this platform if it e.g. improves things for other platforms\n+- we will noisy warnings running on this platform\n+- we are lacking any CI coverage for testing or building bottles for this platform\n+- we will close issues without response only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 3 configurations include:\n+\n+- macOS versions that we no longer provide CI coverage and Apple no longer provides most security updates for (e.g. in March 2025, macOS Monterey/12 and older)",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2019063617",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19641,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2019063617",
        "commented_code": "@@ -0,0 +1,91 @@\n+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>\n+- installed Homebrew in the default prefix (i.e. `/home/linuxbrew/.linuxbrew`)\n+- running on a supported architecture (i.e. Intel x86_64)\n+\n+## Tier 2\n+\n+A Tier 2 supported configuration is one in which any of:\n+\n+- you get a subpar but potentially still usable experience using Homebrew\n+- we review PRs that that fix bugs affecting this platform but will not aim to fix bugs\n+- we will output `brew doctor` warnings running on this platform\n+- we are missing some CI coverage for testing and building bottles for this platform\n+- we will close issues only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 2 configurations include:\n+\n+- macOS prereleases before we state they are Tier 1 (e.g. in March 2025, macOS 16, whatever it ends up being called)\n+- Linux versions where a system `glibc` < 2.13 so the Homebrew `glibc@*` formula is automatically installed\n+- using official packages that need to be built from source due to installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+- running on a not yet supported architecture (i.e. Linux ARM64/AARCH64)\n+\n+## Tier 3\n+\n+A Tier 3 supported configuration is one in which:\n+\n+- you get a poor but not completely broken experience using Homebrew\n+- we strongly recommend migration to a Tier 1 or 2 configuration or a non-Homebrew tool if not\n+- we will not review PRs or aim to fix bugs only affecting this platform\n+- we may intentionally regress functionality on this platform if it e.g. improves things for other platforms\n+- we will noisy warnings running on this platform\n+- we are lacking any CI coverage for testing or building bottles for this platform\n+- we will close issues without response only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 3 configurations include:\n+\n+- macOS versions that we no longer provide CI coverage and Apple no longer provides most security updates for (e.g. in March 2025, macOS Monterey/12 and older)",
        "comment_created_at": "2025-03-28T17:25:25+00:00",
        "comment_author": "samford",
        "comment_body": "```suggestion\r\n- macOS versions that we no longer provide CI coverage for and Apple no longer provides most security updates for (e.g. in March 2025, macOS Monterey/12 and older)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019064992",
    "pr_number": 19641,
    "pr_file": "docs/Support-Tiers.md",
    "created_at": "2025-03-28T17:26:21+00:00",
    "commented_code": "+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>\n+- installed Homebrew in the default prefix (i.e. `/home/linuxbrew/.linuxbrew`)\n+- running on a supported architecture (i.e. Intel x86_64)\n+\n+## Tier 2\n+\n+A Tier 2 supported configuration is one in which any of:\n+\n+- you get a subpar but potentially still usable experience using Homebrew\n+- we review PRs that that fix bugs affecting this platform but will not aim to fix bugs\n+- we will output `brew doctor` warnings running on this platform\n+- we are missing some CI coverage for testing and building bottles for this platform\n+- we will close issues only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 2 configurations include:\n+\n+- macOS prereleases before we state they are Tier 1 (e.g. in March 2025, macOS 16, whatever it ends up being called)\n+- Linux versions where a system `glibc` < 2.13 so the Homebrew `glibc@*` formula is automatically installed\n+- using official packages that need to be built from source due to installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+- running on a not yet supported architecture (i.e. Linux ARM64/AARCH64)\n+\n+## Tier 3\n+\n+A Tier 3 supported configuration is one in which:\n+\n+- you get a poor but not completely broken experience using Homebrew\n+- we strongly recommend migration to a Tier 1 or 2 configuration or a non-Homebrew tool if not\n+- we will not review PRs or aim to fix bugs only affecting this platform\n+- we may intentionally regress functionality on this platform if it e.g. improves things for other platforms\n+- we will noisy warnings running on this platform\n+- we are lacking any CI coverage for testing or building bottles for this platform\n+- we will close issues without response only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 3 configurations include:\n+\n+- macOS versions that we no longer provide CI coverage and Apple no longer provides most security updates for (e.g. in March 2025, macOS Monterey/12 and older)\n+- building official packages from source when binary packages are available\n+- installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+\n+## Unsupported\n+\n+A unsupported configuration is one in which:\n+\n+- Homebrew will refuse to run at all without third-party patching.\n+- You must migrate to another tool e.g. Tigerbrew, MacPorts, Linux system package managers etc.\n+\n+## Unsupported Software\n+\n+Note that all packages installed from third-party taps outside of the Homebrew GitHub organisation is unsupported by default.",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2019064992",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19641,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2019064992",
        "commented_code": "@@ -0,0 +1,91 @@\n+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>\n+- installed Homebrew in the default prefix (i.e. `/home/linuxbrew/.linuxbrew`)\n+- running on a supported architecture (i.e. Intel x86_64)\n+\n+## Tier 2\n+\n+A Tier 2 supported configuration is one in which any of:\n+\n+- you get a subpar but potentially still usable experience using Homebrew\n+- we review PRs that that fix bugs affecting this platform but will not aim to fix bugs\n+- we will output `brew doctor` warnings running on this platform\n+- we are missing some CI coverage for testing and building bottles for this platform\n+- we will close issues only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 2 configurations include:\n+\n+- macOS prereleases before we state they are Tier 1 (e.g. in March 2025, macOS 16, whatever it ends up being called)\n+- Linux versions where a system `glibc` < 2.13 so the Homebrew `glibc@*` formula is automatically installed\n+- using official packages that need to be built from source due to installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+- running on a not yet supported architecture (i.e. Linux ARM64/AARCH64)\n+\n+## Tier 3\n+\n+A Tier 3 supported configuration is one in which:\n+\n+- you get a poor but not completely broken experience using Homebrew\n+- we strongly recommend migration to a Tier 1 or 2 configuration or a non-Homebrew tool if not\n+- we will not review PRs or aim to fix bugs only affecting this platform\n+- we may intentionally regress functionality on this platform if it e.g. improves things for other platforms\n+- we will noisy warnings running on this platform\n+- we are lacking any CI coverage for testing or building bottles for this platform\n+- we will close issues without response only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 3 configurations include:\n+\n+- macOS versions that we no longer provide CI coverage and Apple no longer provides most security updates for (e.g. in March 2025, macOS Monterey/12 and older)\n+- building official packages from source when binary packages are available\n+- installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+\n+## Unsupported\n+\n+A unsupported configuration is one in which:\n+\n+- Homebrew will refuse to run at all without third-party patching.\n+- You must migrate to another tool e.g. Tigerbrew, MacPorts, Linux system package managers etc.\n+\n+## Unsupported Software\n+\n+Note that all packages installed from third-party taps outside of the Homebrew GitHub organisation is unsupported by default.",
        "comment_created_at": "2025-03-28T17:26:21+00:00",
        "comment_author": "dduugg",
        "comment_body": "```suggestion\r\nNote that all packages installed from third-party taps outside of the Homebrew GitHub organisation are unsupported by default.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019066362",
    "pr_number": 19641,
    "pr_file": "docs/Support-Tiers.md",
    "created_at": "2025-03-28T17:27:15+00:00",
    "commented_code": "+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>\n+- installed Homebrew in the default prefix (i.e. `/home/linuxbrew/.linuxbrew`)\n+- running on a supported architecture (i.e. Intel x86_64)\n+\n+## Tier 2\n+\n+A Tier 2 supported configuration is one in which any of:\n+\n+- you get a subpar but potentially still usable experience using Homebrew\n+- we review PRs that that fix bugs affecting this platform but will not aim to fix bugs\n+- we will output `brew doctor` warnings running on this platform\n+- we are missing some CI coverage for testing and building bottles for this platform\n+- we will close issues only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 2 configurations include:\n+\n+- macOS prereleases before we state they are Tier 1 (e.g. in March 2025, macOS 16, whatever it ends up being called)\n+- Linux versions where a system `glibc` < 2.13 so the Homebrew `glibc@*` formula is automatically installed\n+- using official packages that need to be built from source due to installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+- running on a not yet supported architecture (i.e. Linux ARM64/AARCH64)\n+\n+## Tier 3\n+\n+A Tier 3 supported configuration is one in which:\n+\n+- you get a poor but not completely broken experience using Homebrew\n+- we strongly recommend migration to a Tier 1 or 2 configuration or a non-Homebrew tool if not\n+- we will not review PRs or aim to fix bugs only affecting this platform\n+- we may intentionally regress functionality on this platform if it e.g. improves things for other platforms\n+- we will noisy warnings running on this platform\n+- we are lacking any CI coverage for testing or building bottles for this platform\n+- we will close issues without response only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 3 configurations include:\n+\n+- macOS versions that we no longer provide CI coverage and Apple no longer provides most security updates for (e.g. in March 2025, macOS Monterey/12 and older)\n+- building official packages from source when binary packages are available\n+- installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+\n+## Unsupported\n+\n+A unsupported configuration is one in which:\n+\n+- Homebrew will refuse to run at all without third-party patching.\n+- You must migrate to another tool e.g. Tigerbrew, MacPorts, Linux system package managers etc.\n+\n+## Unsupported Software\n+\n+Note that all packages installed from third-party taps outside of the Homebrew GitHub organisation is unsupported by default.",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2019066362",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19641,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2019066362",
        "commented_code": "@@ -0,0 +1,91 @@\n+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running the a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13\n+- if running Ubuntu, running a Ubuntu version in \"standard support\": <https://ubuntu.com/about/release-cycle>\n+- installed Homebrew in the default prefix (i.e. `/home/linuxbrew/.linuxbrew`)\n+- running on a supported architecture (i.e. Intel x86_64)\n+\n+## Tier 2\n+\n+A Tier 2 supported configuration is one in which any of:\n+\n+- you get a subpar but potentially still usable experience using Homebrew\n+- we review PRs that that fix bugs affecting this platform but will not aim to fix bugs\n+- we will output `brew doctor` warnings running on this platform\n+- we are missing some CI coverage for testing and building bottles for this platform\n+- we will close issues only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 2 configurations include:\n+\n+- macOS prereleases before we state they are Tier 1 (e.g. in March 2025, macOS 16, whatever it ends up being called)\n+- Linux versions where a system `glibc` < 2.13 so the Homebrew `glibc@*` formula is automatically installed\n+- using official packages that need to be built from source due to installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+- running on a not yet supported architecture (i.e. Linux ARM64/AARCH64)\n+\n+## Tier 3\n+\n+A Tier 3 supported configuration is one in which:\n+\n+- you get a poor but not completely broken experience using Homebrew\n+- we strongly recommend migration to a Tier 1 or 2 configuration or a non-Homebrew tool if not\n+- we will not review PRs or aim to fix bugs only affecting this platform\n+- we may intentionally regress functionality on this platform if it e.g. improves things for other platforms\n+- we will noisy warnings running on this platform\n+- we are lacking any CI coverage for testing or building bottles for this platform\n+- we will close issues without response only affecting this platform\n+- your support is best met through Homebrew's Discussions\n+\n+Tier 3 configurations include:\n+\n+- macOS versions that we no longer provide CI coverage and Apple no longer provides most security updates for (e.g. in March 2025, macOS Monterey/12 and older)\n+- building official packages from source when binary packages are available\n+- installing Homebrew outside the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Apple Intel x86_64, `/home/linuxbrew/.linuxbrew` for Linux)\n+\n+## Unsupported\n+\n+A unsupported configuration is one in which:\n+\n+- Homebrew will refuse to run at all without third-party patching.\n+- You must migrate to another tool e.g. Tigerbrew, MacPorts, Linux system package managers etc.\n+\n+## Unsupported Software\n+\n+Note that all packages installed from third-party taps outside of the Homebrew GitHub organisation is unsupported by default.",
        "comment_created_at": "2025-03-28T17:27:15+00:00",
        "comment_author": "samford",
        "comment_body": "```suggestion\r\nNote that all packages installed from third-party taps outside of the Homebrew GitHub organisation are unsupported by default.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019073963",
    "pr_number": 19641,
    "pr_file": "docs/Support-Tiers.md",
    "created_at": "2025-03-28T17:32:38+00:00",
    "commented_code": "+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2019073963",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19641,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2019073963",
        "commented_code": "@@ -0,0 +1,91 @@\n+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has 3 support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support Homebrew on macOS must be all of:\n+\n+- running on official Apple hardware (e.g. not a \"Hackintosh\" or VM)\n+- running a version of macOS supported by Apple on that hardware (e.g. not using OpenCore Legacy Patcher)\n+- running a version of macOS with Homebrew CI coverage (i.e. the latest stable or prerelease version, two preceding versions)\n+- installed Homebrew in the default prefix (i.e. `/opt/homebrew` on Apple Silicon, `/usr/local` on Intel x86_64)\n+- running on a supported architecture (i.e. Apple Silicon or Intel x86_64)\n+- not building official packages from source\n+\n+### Linux\n+\n+For Tier 1 support Homebrew on Linux must be all of:\n+\n+- running on Ubuntu or a Homebrew-provided Docker image\n+- have a system `glibc` >= 2.13",
        "comment_created_at": "2025-03-28T17:32:38+00:00",
        "comment_author": "Bo98",
        "comment_body": "```suggestion\r\n- have a system `glibc` >= 2.35\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2020541904",
    "pr_number": 19641,
    "pr_file": "docs/Support-Tiers.md",
    "created_at": "2025-03-31T07:42:42+00:00",
    "commented_code": "+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has three support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support, Homebrew on macOS must be all of:",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2020541904",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19641,
        "pr_file": "docs/Support-Tiers.md",
        "discussion_id": "2020541904",
        "commented_code": "@@ -0,0 +1,92 @@\n+---\n+last_review_date: \"2025-03-28\"\n+---\n+\n+# Support Tiers\n+\n+Homebrew has three support tiers.\n+These set expectations for how well Homebrew will run on a given configuration.\n+\n+## Tier 1\n+\n+A Tier 1 supported configuration is one in which:\n+\n+- you get the best experience using Homebrew\n+- we will aim to fix bugs affecting this platform\n+- we will not output warnings running on this platform\n+- we have CI coverage for testing and building bottles for this platform\n+- your support is best met through Homebrew's issue trackers\n+\n+### macOS\n+\n+For Tier 1 support, Homebrew on macOS must be all of:",
        "comment_created_at": "2025-03-31T07:42:42+00:00",
        "comment_author": "SMillerDev",
        "comment_body": "Something I was just reminded of: your Homebrew should also be installed on the storage inside your mac. External storage issues keep popping up, but I don't consider them Tier 1 supported",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1955466887",
    "pr_number": 19304,
    "pr_file": "docs/Tips-N'-Tricks.md",
    "created_at": "2025-02-14T02:18:02+00:00",
    "commented_code": "export HOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK=1\n export HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN=\"$(printf 'anonymous:' | base64)\"\n ```\n+\n+## Loading Homebrew from the same dotfiles on different operating systems\n+\n+Some users may want to use the same shell initialization files on macOS and Linux.\n+Use this to detect the likely Homebrew installation directory and load Homebrew when it's found.\n+You may need to adapt this to your particular shell or other particulars of your environment.\n+\n+```sh\n+# Execute only if brew isn't already available.\n+if ! [ -x \"$(command -v brew)\" ]; then\n+  OS=\"$(uname)\"\n+  UNAME_MACHINE=\"$(uname -m)\"\n+  if [ \"${OS}\" = \"Linux\" ]; then\n+    # Linux\n+    HOMEBREW_PREFIX=\"/home/linuxbrew/.linuxbrew\"\n+  elif [ \"${OS}\" = \"Darwin\" ]; then\n+    if [ \"${UNAME_MACHINE}\" = \"arm64\" ]; then\n+      # M-series ARM64 macOS\n+      HOMEBREW_PREFIX=\"/opt/homebrew\"\n+    else\n+      # Intel macOS\n+      HOMEBREW_PREFIX=\"/usr/local\"\n+    fi\n+  fi",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1955466887",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Tips-N'-Tricks.md",
        "discussion_id": "1955466887",
        "commented_code": "@@ -140,3 +140,42 @@ export HOMEBREW_ARTIFACT_DOMAIN=https://artifacts.example.com/artifactory/homebr\n export HOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK=1\n export HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN=\"$(printf 'anonymous:' | base64)\"\n ```\n+\n+## Loading Homebrew from the same dotfiles on different operating systems\n+\n+Some users may want to use the same shell initialization files on macOS and Linux.\n+Use this to detect the likely Homebrew installation directory and load Homebrew when it's found.\n+You may need to adapt this to your particular shell or other particulars of your environment.\n+\n+```sh\n+# Execute only if brew isn't already available.\n+if ! [ -x \"$(command -v brew)\" ]; then\n+  OS=\"$(uname)\"\n+  UNAME_MACHINE=\"$(uname -m)\"\n+  if [ \"${OS}\" = \"Linux\" ]; then\n+    # Linux\n+    HOMEBREW_PREFIX=\"/home/linuxbrew/.linuxbrew\"\n+  elif [ \"${OS}\" = \"Darwin\" ]; then\n+    if [ \"${UNAME_MACHINE}\" = \"arm64\" ]; then\n+      # M-series ARM64 macOS\n+      HOMEBREW_PREFIX=\"/opt/homebrew\"\n+    else\n+      # Intel macOS\n+      HOMEBREW_PREFIX=\"/usr/local\"\n+    fi\n+  fi",
        "comment_created_at": "2025-02-14T02:18:02+00:00",
        "comment_author": "gromgit",
        "comment_body": "I do this in my cross-platform startup files:\r\n```\r\n  case \"$(uname -sm)\" in\r\n    # Intel macOS\r\n    \"Darwin x86_64\") HOMEBREW_PREFIX=\"/usr/local\";;\r\n    # M-series ARM64 macOS\r\n    \"Darwin arm64\")  HOMEBREW_PREFIX=\"/opt/homebrew\";;\r\n    # Linux\r\n    \"Linux \"*)       HOMEBREW_PREFIX=\"/home/linuxbrew/.linuxbrew\";;\r\n    *) echo \"Warning: Homebrew is not supported on this platform.\" >&2;;\r\n  esac\r\n```\r\nThe default case is optional, of course.",
        "pr_file_module": null
      },
      {
        "comment_id": "1956330562",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Tips-N'-Tricks.md",
        "discussion_id": "1955466887",
        "commented_code": "@@ -140,3 +140,42 @@ export HOMEBREW_ARTIFACT_DOMAIN=https://artifacts.example.com/artifactory/homebr\n export HOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK=1\n export HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN=\"$(printf 'anonymous:' | base64)\"\n ```\n+\n+## Loading Homebrew from the same dotfiles on different operating systems\n+\n+Some users may want to use the same shell initialization files on macOS and Linux.\n+Use this to detect the likely Homebrew installation directory and load Homebrew when it's found.\n+You may need to adapt this to your particular shell or other particulars of your environment.\n+\n+```sh\n+# Execute only if brew isn't already available.\n+if ! [ -x \"$(command -v brew)\" ]; then\n+  OS=\"$(uname)\"\n+  UNAME_MACHINE=\"$(uname -m)\"\n+  if [ \"${OS}\" = \"Linux\" ]; then\n+    # Linux\n+    HOMEBREW_PREFIX=\"/home/linuxbrew/.linuxbrew\"\n+  elif [ \"${OS}\" = \"Darwin\" ]; then\n+    if [ \"${UNAME_MACHINE}\" = \"arm64\" ]; then\n+      # M-series ARM64 macOS\n+      HOMEBREW_PREFIX=\"/opt/homebrew\"\n+    else\n+      # Intel macOS\n+      HOMEBREW_PREFIX=\"/usr/local\"\n+    fi\n+  fi",
        "comment_created_at": "2025-02-14T15:30:54+00:00",
        "comment_author": "colindean",
        "comment_body": "Ooh, yeah, I should golf my example down to that.\r\n\r\nWhen I set this up for myself several few years ago, I checked directories' and files' existence instead of looking at uname output: https://github.com/colindean/hejmo/blame/35b40129563c27be051d316cc67a7fdcccb93daf/bash_profile/00_path.sh#L4-L18\r\n\r\n(I'm also looking at that file casually for the first time in many years and realizing there's more stuff hardcoded to /usr/local than should be!)",
        "pr_file_module": null
      },
      {
        "comment_id": "1956335524",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Tips-N'-Tricks.md",
        "discussion_id": "1955466887",
        "commented_code": "@@ -140,3 +140,42 @@ export HOMEBREW_ARTIFACT_DOMAIN=https://artifacts.example.com/artifactory/homebr\n export HOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK=1\n export HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN=\"$(printf 'anonymous:' | base64)\"\n ```\n+\n+## Loading Homebrew from the same dotfiles on different operating systems\n+\n+Some users may want to use the same shell initialization files on macOS and Linux.\n+Use this to detect the likely Homebrew installation directory and load Homebrew when it's found.\n+You may need to adapt this to your particular shell or other particulars of your environment.\n+\n+```sh\n+# Execute only if brew isn't already available.\n+if ! [ -x \"$(command -v brew)\" ]; then\n+  OS=\"$(uname)\"\n+  UNAME_MACHINE=\"$(uname -m)\"\n+  if [ \"${OS}\" = \"Linux\" ]; then\n+    # Linux\n+    HOMEBREW_PREFIX=\"/home/linuxbrew/.linuxbrew\"\n+  elif [ \"${OS}\" = \"Darwin\" ]; then\n+    if [ \"${UNAME_MACHINE}\" = \"arm64\" ]; then\n+      # M-series ARM64 macOS\n+      HOMEBREW_PREFIX=\"/opt/homebrew\"\n+    else\n+      # Intel macOS\n+      HOMEBREW_PREFIX=\"/usr/local\"\n+    fi\n+  fi",
        "comment_created_at": "2025-02-14T15:34:16+00:00",
        "comment_author": "colindean",
        "comment_body": "Actually, it may not: fish's `case` syntax is different than zsh/bash, and the above is POSIX-compliant, good enough for docs.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1961235023",
    "pr_number": 19304,
    "pr_file": "docs/Tips-N'-Tricks.md",
    "created_at": "2025-02-19T08:55:38+00:00",
    "commented_code": "export HOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK=1\n export HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN=\"$(printf 'anonymous:' | base64)\"\n ```\n+\n+## Loading Homebrew from the same dotfiles on different operating systems\n+\n+Some users may want to use the same shell initialization files on macOS and Linux.\n+Use this to detect the likely Homebrew installation directory and load Homebrew when it's found.\n+You may need to adapt this to your particular shell or other particulars of your environment.\n+\n+```sh\n+# Execute only if brew isn't already available.\n+if ! [ -x \"$(command -v brew)\" ]; then\n+  OS=\"$(uname)\"\n+  UNAME_MACHINE=\"$(uname -m)\"\n+  if [ \"${OS}\" = \"Linux\" ]; then\n+    # Linux\n+    HOMEBREW_PREFIX=\"/home/linuxbrew/.linuxbrew\"\n+  elif [ \"${OS}\" = \"Darwin\" ]; then\n+    if [ \"${UNAME_MACHINE}\" = \"arm64\" ]; then\n+      # M-series ARM64 macOS\n+      HOMEBREW_PREFIX=\"/opt/homebrew\"\n+    else\n+      # Intel macOS\n+      HOMEBREW_PREFIX=\"/usr/local\"\n+    fi\n+  fi\n+\n+  if [ -d \"${HOMEBREW_PREFIX}\" ]; then\n+    BREW_BIN=\"${HOMEBREW_PREFIX}/bin/brew\"\n+    if [ -x \"${BREW_BIN}\" ]; then\n+      eval \"\\$(${BREW_BIN} shellenv)\"\n+    else\n+      >&2 printf \"Homebrew possibly found at %s but %s is not executable. Check the permissions.\n\" \"${HOMEBREW_PREFIX}\" \"${BREW_BIN}\"\n+    fi\n+  else\n+    >&2 printf \"Homebrew not found where expected in %s on %s %s\n\" \"${HOMEBREW_PREFIX}\" \"${OS}\" \"${UNAME_MACHINE}\"\n+    >&2 printf \"Double-check that it's installed or run the following command to install it\n\n\\t%s\n\" \\\n+      '/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"'\n+  fi\n+fi",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1961235023",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Tips-N'-Tricks.md",
        "discussion_id": "1961235023",
        "commented_code": "@@ -140,3 +140,42 @@ export HOMEBREW_ARTIFACT_DOMAIN=https://artifacts.example.com/artifactory/homebr\n export HOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK=1\n export HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN=\"$(printf 'anonymous:' | base64)\"\n ```\n+\n+## Loading Homebrew from the same dotfiles on different operating systems\n+\n+Some users may want to use the same shell initialization files on macOS and Linux.\n+Use this to detect the likely Homebrew installation directory and load Homebrew when it's found.\n+You may need to adapt this to your particular shell or other particulars of your environment.\n+\n+```sh\n+# Execute only if brew isn't already available.\n+if ! [ -x \"$(command -v brew)\" ]; then\n+  OS=\"$(uname)\"\n+  UNAME_MACHINE=\"$(uname -m)\"\n+  if [ \"${OS}\" = \"Linux\" ]; then\n+    # Linux\n+    HOMEBREW_PREFIX=\"/home/linuxbrew/.linuxbrew\"\n+  elif [ \"${OS}\" = \"Darwin\" ]; then\n+    if [ \"${UNAME_MACHINE}\" = \"arm64\" ]; then\n+      # M-series ARM64 macOS\n+      HOMEBREW_PREFIX=\"/opt/homebrew\"\n+    else\n+      # Intel macOS\n+      HOMEBREW_PREFIX=\"/usr/local\"\n+    fi\n+  fi\n+\n+  if [ -d \"${HOMEBREW_PREFIX}\" ]; then\n+    BREW_BIN=\"${HOMEBREW_PREFIX}/bin/brew\"\n+    if [ -x \"${BREW_BIN}\" ]; then\n+      eval \"\\$(${BREW_BIN} shellenv)\"\n+    else\n+      >&2 printf \"Homebrew possibly found at %s but %s is not executable. Check the permissions.\\n\" \"${HOMEBREW_PREFIX}\" \"${BREW_BIN}\"\n+    fi\n+  else\n+    >&2 printf \"Homebrew not found where expected in %s on %s %s\\n\" \"${HOMEBREW_PREFIX}\" \"${OS}\" \"${UNAME_MACHINE}\"\n+    >&2 printf \"Double-check that it's installed or run the following command to install it\\n\\n\\t%s\\n\" \\\n+      '/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"'\n+  fi\n+fi",
        "comment_created_at": "2025-02-19T08:55:38+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "```suggestion\r\ncommand -v brew || export PATH=\"/opt/homebrew/bin:/home/linuxbrew/.linuxbrew/bin:/usr/local/bin\"\r\ncommand -v brew && eval \"$(brew shellenv)\"\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1961237037",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Tips-N'-Tricks.md",
        "discussion_id": "1961235023",
        "commented_code": "@@ -140,3 +140,42 @@ export HOMEBREW_ARTIFACT_DOMAIN=https://artifacts.example.com/artifactory/homebr\n export HOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK=1\n export HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN=\"$(printf 'anonymous:' | base64)\"\n ```\n+\n+## Loading Homebrew from the same dotfiles on different operating systems\n+\n+Some users may want to use the same shell initialization files on macOS and Linux.\n+Use this to detect the likely Homebrew installation directory and load Homebrew when it's found.\n+You may need to adapt this to your particular shell or other particulars of your environment.\n+\n+```sh\n+# Execute only if brew isn't already available.\n+if ! [ -x \"$(command -v brew)\" ]; then\n+  OS=\"$(uname)\"\n+  UNAME_MACHINE=\"$(uname -m)\"\n+  if [ \"${OS}\" = \"Linux\" ]; then\n+    # Linux\n+    HOMEBREW_PREFIX=\"/home/linuxbrew/.linuxbrew\"\n+  elif [ \"${OS}\" = \"Darwin\" ]; then\n+    if [ \"${UNAME_MACHINE}\" = \"arm64\" ]; then\n+      # M-series ARM64 macOS\n+      HOMEBREW_PREFIX=\"/opt/homebrew\"\n+    else\n+      # Intel macOS\n+      HOMEBREW_PREFIX=\"/usr/local\"\n+    fi\n+  fi\n+\n+  if [ -d \"${HOMEBREW_PREFIX}\" ]; then\n+    BREW_BIN=\"${HOMEBREW_PREFIX}/bin/brew\"\n+    if [ -x \"${BREW_BIN}\" ]; then\n+      eval \"\\$(${BREW_BIN} shellenv)\"\n+    else\n+      >&2 printf \"Homebrew possibly found at %s but %s is not executable. Check the permissions.\\n\" \"${HOMEBREW_PREFIX}\" \"${BREW_BIN}\"\n+    fi\n+  else\n+    >&2 printf \"Homebrew not found where expected in %s on %s %s\\n\" \"${HOMEBREW_PREFIX}\" \"${OS}\" \"${UNAME_MACHINE}\"\n+    >&2 printf \"Double-check that it's installed or run the following command to install it\\n\\n\\t%s\\n\" \\\n+      '/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"'\n+  fi\n+fi",
        "comment_created_at": "2025-02-19T08:56:54+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "@colindean This seems sufficient to handle all platforms without error output and is short and easier to understand. \r\n\r\nFor future: can you allow maintainers to commit to your fork? Thanks.",
        "pr_file_module": null
      },
      {
        "comment_id": "1962059576",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 19304,
        "pr_file": "docs/Tips-N'-Tricks.md",
        "discussion_id": "1961235023",
        "commented_code": "@@ -140,3 +140,42 @@ export HOMEBREW_ARTIFACT_DOMAIN=https://artifacts.example.com/artifactory/homebr\n export HOMEBREW_ARTIFACT_DOMAIN_NO_FALLBACK=1\n export HOMEBREW_DOCKER_REGISTRY_BASIC_AUTH_TOKEN=\"$(printf 'anonymous:' | base64)\"\n ```\n+\n+## Loading Homebrew from the same dotfiles on different operating systems\n+\n+Some users may want to use the same shell initialization files on macOS and Linux.\n+Use this to detect the likely Homebrew installation directory and load Homebrew when it's found.\n+You may need to adapt this to your particular shell or other particulars of your environment.\n+\n+```sh\n+# Execute only if brew isn't already available.\n+if ! [ -x \"$(command -v brew)\" ]; then\n+  OS=\"$(uname)\"\n+  UNAME_MACHINE=\"$(uname -m)\"\n+  if [ \"${OS}\" = \"Linux\" ]; then\n+    # Linux\n+    HOMEBREW_PREFIX=\"/home/linuxbrew/.linuxbrew\"\n+  elif [ \"${OS}\" = \"Darwin\" ]; then\n+    if [ \"${UNAME_MACHINE}\" = \"arm64\" ]; then\n+      # M-series ARM64 macOS\n+      HOMEBREW_PREFIX=\"/opt/homebrew\"\n+    else\n+      # Intel macOS\n+      HOMEBREW_PREFIX=\"/usr/local\"\n+    fi\n+  fi\n+\n+  if [ -d \"${HOMEBREW_PREFIX}\" ]; then\n+    BREW_BIN=\"${HOMEBREW_PREFIX}/bin/brew\"\n+    if [ -x \"${BREW_BIN}\" ]; then\n+      eval \"\\$(${BREW_BIN} shellenv)\"\n+    else\n+      >&2 printf \"Homebrew possibly found at %s but %s is not executable. Check the permissions.\\n\" \"${HOMEBREW_PREFIX}\" \"${BREW_BIN}\"\n+    fi\n+  else\n+    >&2 printf \"Homebrew not found where expected in %s on %s %s\\n\" \"${HOMEBREW_PREFIX}\" \"${OS}\" \"${UNAME_MACHINE}\"\n+    >&2 printf \"Double-check that it's installed or run the following command to install it\\n\\n\\t%s\\n\" \\\n+      '/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"'\n+  fi\n+fi",
        "comment_created_at": "2025-02-19T17:03:21+00:00",
        "comment_author": "colindean",
        "comment_body": "> For future: can you allow maintainers to commit to your fork? Thanks.\r\n\r\nFixed for this PR and I'm trying to find a setting in my forked repo to enable that by default… which I thought is the case for new PRs to brew, but maybe I missed it somewhere.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1838753535",
    "pr_number": 18761,
    "pr_file": "docs/Installation.md",
    "created_at": "2024-11-12T20:49:57+00:00",
    "commented_code": "## macOS Requirements\n \n * A 64-bit Intel CPU or Apple Silicon CPU <sup>[1](#1)</sup>\n-* macOS Ventura (13) (or higher) <sup>[2](#2)</sup>\n+* macOS Ventura (13) (or higher) installed on officially supported hardware<sup>[2](#2)</sup>\n+  * Note: Devices using OpenCore Legacy Patcher are not supported",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1838753535",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 18761,
        "pr_file": "docs/Installation.md",
        "discussion_id": "1838753535",
        "commented_code": "@@ -9,7 +9,8 @@ The macOS `.pkg` installer also installs Homebrew to its default prefix (`/opt/h\n ## macOS Requirements\n \n * A 64-bit Intel CPU or Apple Silicon CPU <sup>[1](#1)</sup>\n-* macOS Ventura (13) (or higher) <sup>[2](#2)</sup>\n+* macOS Ventura (13) (or higher) installed on officially supported hardware<sup>[2](#2)</sup>\n+  * Note: Devices using OpenCore Legacy Patcher are not supported",
        "comment_created_at": "2024-11-12T20:49:57+00:00",
        "comment_author": "EricFromCanada",
        "comment_body": "```suggestion\r\n  * **Note:** Devices using OpenCore Legacy Patcher are not supported\r\n```",
        "pr_file_module": null
      }
    ]
  }
]