[
  {
    "discussion_id": "2150136545",
    "pr_number": 20116,
    "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
    "created_at": "2025-06-16T14:19:21+00:00",
    "commented_code": "require \"formula_creator\"\n \n RSpec.describe Homebrew::FormulaCreator do\n-  it \"gets name from GitHub archive URL\" do\n-    t = described_class.name_from_url(\"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\")\n-    expect(t).to eq(\"lapce\")\n-  end\n-\n-  it \"gets name from gitweb URL\" do\n-    t = described_class.name_from_url(\"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\")\n-    expect(t).to eq(\"libzipper\")\n-  end\n-\n-  it \"gets name from GitHub repo URL\" do\n-    t = described_class.name_from_url(\"https://github.com/abitrolly/lapce.git\")\n-    expect(t).to eq(\"lapce\")\n-  end\n-\n-  it \"gets name from GitHub download URL\" do\n-    t = described_class.name_from_url(\"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\")\n-    expect(t).to eq(\"stella\")\n-  end\n+  describe \".new\" do\n+    tests = {\n+      \"generic tarball URL\": {\n+        params:   {\n+          url: \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        },\n+        expected: {\n+          name:    \"synscan\",\n+          version: \"5.02\",\n+        },\n+      },\n+      \"gitweb URL\":          {\n+        params:   {\n+          url: \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n+        },\n+        expected: {\n+          name: \"libzipper\",\n+        },\n+      },\n+      \"GitHub repo URL\":     {\n+        params:   {\n+          url: \"https://github.com/abitrolly/lapce.git\",\n+        },\n+        expected: {\n+          name: \"lapce\",\n+        },\n+      },\n+      \"GitHub archive URL\":  {\n+        params:   {\n+          url: \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n+        },\n+        expected: {\n+          name:    \"lapce\",\n+          version: \"0.3.0\",\n+        },\n+      },\n+      \"GitHub download URL\": {\n+        params:   {\n+          url: \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n+        },\n+        expected: {\n+          name:    \"stella\",\n+          version: \"6.7\",\n+        },\n+      },\n+    }\n \n-  it \"gets name from generic tarball URL\" do\n-    t = described_class.name_from_url(\"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\")\n-    expect(t).to eq(\"synscan\")\n+    tests.each do |description, test|\n+      it \"parses #{description}\" do\n+        fc = described_class.new(url: test[:params][:url])\n+        test[:expected].each do |key, value|\n+          expect(fc.name).to eq(value) if key == :name\n+          expect(fc.version).to eq(value) if key == :version\n+        end",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2150136545",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20116,
        "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
        "discussion_id": "2150136545",
        "commented_code": "@@ -3,28 +3,61 @@\n require \"formula_creator\"\n \n RSpec.describe Homebrew::FormulaCreator do\n-  it \"gets name from GitHub archive URL\" do\n-    t = described_class.name_from_url(\"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\")\n-    expect(t).to eq(\"lapce\")\n-  end\n-\n-  it \"gets name from gitweb URL\" do\n-    t = described_class.name_from_url(\"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\")\n-    expect(t).to eq(\"libzipper\")\n-  end\n-\n-  it \"gets name from GitHub repo URL\" do\n-    t = described_class.name_from_url(\"https://github.com/abitrolly/lapce.git\")\n-    expect(t).to eq(\"lapce\")\n-  end\n-\n-  it \"gets name from GitHub download URL\" do\n-    t = described_class.name_from_url(\"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\")\n-    expect(t).to eq(\"stella\")\n-  end\n+  describe \".new\" do\n+    tests = {\n+      \"generic tarball URL\": {\n+        params:   {\n+          url: \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        },\n+        expected: {\n+          name:    \"synscan\",\n+          version: \"5.02\",\n+        },\n+      },\n+      \"gitweb URL\":          {\n+        params:   {\n+          url: \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n+        },\n+        expected: {\n+          name: \"libzipper\",\n+        },\n+      },\n+      \"GitHub repo URL\":     {\n+        params:   {\n+          url: \"https://github.com/abitrolly/lapce.git\",\n+        },\n+        expected: {\n+          name: \"lapce\",\n+        },\n+      },\n+      \"GitHub archive URL\":  {\n+        params:   {\n+          url: \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n+        },\n+        expected: {\n+          name:    \"lapce\",\n+          version: \"0.3.0\",\n+        },\n+      },\n+      \"GitHub download URL\": {\n+        params:   {\n+          url: \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n+        },\n+        expected: {\n+          name:    \"stella\",\n+          version: \"6.7\",\n+        },\n+      },\n+    }\n \n-  it \"gets name from generic tarball URL\" do\n-    t = described_class.name_from_url(\"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\")\n-    expect(t).to eq(\"synscan\")\n+    tests.each do |description, test|\n+      it \"parses #{description}\" do\n+        fc = described_class.new(url: test[:params][:url])\n+        test[:expected].each do |key, value|\n+          expect(fc.name).to eq(value) if key == :name\n+          expect(fc.version).to eq(value) if key == :version\n+        end",
        "comment_created_at": "2025-06-16T14:19:21+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "Why was this a loop?\r\n```suggestion\r\n        result = { name: fc.name, version: fc.version }\r\n        expect(result).to eq(test.fetch(:expected))\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2150412903",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20116,
        "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
        "discussion_id": "2150136545",
        "commented_code": "@@ -3,28 +3,61 @@\n require \"formula_creator\"\n \n RSpec.describe Homebrew::FormulaCreator do\n-  it \"gets name from GitHub archive URL\" do\n-    t = described_class.name_from_url(\"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\")\n-    expect(t).to eq(\"lapce\")\n-  end\n-\n-  it \"gets name from gitweb URL\" do\n-    t = described_class.name_from_url(\"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\")\n-    expect(t).to eq(\"libzipper\")\n-  end\n-\n-  it \"gets name from GitHub repo URL\" do\n-    t = described_class.name_from_url(\"https://github.com/abitrolly/lapce.git\")\n-    expect(t).to eq(\"lapce\")\n-  end\n-\n-  it \"gets name from GitHub download URL\" do\n-    t = described_class.name_from_url(\"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\")\n-    expect(t).to eq(\"stella\")\n-  end\n+  describe \".new\" do\n+    tests = {\n+      \"generic tarball URL\": {\n+        params:   {\n+          url: \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        },\n+        expected: {\n+          name:    \"synscan\",\n+          version: \"5.02\",\n+        },\n+      },\n+      \"gitweb URL\":          {\n+        params:   {\n+          url: \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n+        },\n+        expected: {\n+          name: \"libzipper\",\n+        },\n+      },\n+      \"GitHub repo URL\":     {\n+        params:   {\n+          url: \"https://github.com/abitrolly/lapce.git\",\n+        },\n+        expected: {\n+          name: \"lapce\",\n+        },\n+      },\n+      \"GitHub archive URL\":  {\n+        params:   {\n+          url: \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n+        },\n+        expected: {\n+          name:    \"lapce\",\n+          version: \"0.3.0\",\n+        },\n+      },\n+      \"GitHub download URL\": {\n+        params:   {\n+          url: \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n+        },\n+        expected: {\n+          name:    \"stella\",\n+          version: \"6.7\",\n+        },\n+      },\n+    }\n \n-  it \"gets name from generic tarball URL\" do\n-    t = described_class.name_from_url(\"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\")\n-    expect(t).to eq(\"synscan\")\n+    tests.each do |description, test|\n+      it \"parses #{description}\" do\n+        fc = described_class.new(url: test[:params][:url])\n+        test[:expected].each do |key, value|\n+          expect(fc.name).to eq(value) if key == :name\n+          expect(fc.version).to eq(value) if key == :version\n+        end",
        "comment_created_at": "2025-06-16T16:29:33+00:00",
        "comment_author": "abitrolly",
        "comment_body": "It is loop for testing each field, because some tests don't contain version field.\r\n```\r\n       expected: {name: \"lapce\"}\r\n            got: {name: \"lapce\", version: #<Version::NULL>}\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2150448243",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20116,
        "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
        "discussion_id": "2150136545",
        "commented_code": "@@ -3,28 +3,61 @@\n require \"formula_creator\"\n \n RSpec.describe Homebrew::FormulaCreator do\n-  it \"gets name from GitHub archive URL\" do\n-    t = described_class.name_from_url(\"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\")\n-    expect(t).to eq(\"lapce\")\n-  end\n-\n-  it \"gets name from gitweb URL\" do\n-    t = described_class.name_from_url(\"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\")\n-    expect(t).to eq(\"libzipper\")\n-  end\n-\n-  it \"gets name from GitHub repo URL\" do\n-    t = described_class.name_from_url(\"https://github.com/abitrolly/lapce.git\")\n-    expect(t).to eq(\"lapce\")\n-  end\n-\n-  it \"gets name from GitHub download URL\" do\n-    t = described_class.name_from_url(\"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\")\n-    expect(t).to eq(\"stella\")\n-  end\n+  describe \".new\" do\n+    tests = {\n+      \"generic tarball URL\": {\n+        params:   {\n+          url: \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        },\n+        expected: {\n+          name:    \"synscan\",\n+          version: \"5.02\",\n+        },\n+      },\n+      \"gitweb URL\":          {\n+        params:   {\n+          url: \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n+        },\n+        expected: {\n+          name: \"libzipper\",\n+        },\n+      },\n+      \"GitHub repo URL\":     {\n+        params:   {\n+          url: \"https://github.com/abitrolly/lapce.git\",\n+        },\n+        expected: {\n+          name: \"lapce\",\n+        },\n+      },\n+      \"GitHub archive URL\":  {\n+        params:   {\n+          url: \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n+        },\n+        expected: {\n+          name:    \"lapce\",\n+          version: \"0.3.0\",\n+        },\n+      },\n+      \"GitHub download URL\": {\n+        params:   {\n+          url: \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n+        },\n+        expected: {\n+          name:    \"stella\",\n+          version: \"6.7\",\n+        },\n+      },\n+    }\n \n-  it \"gets name from generic tarball URL\" do\n-    t = described_class.name_from_url(\"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\")\n-    expect(t).to eq(\"synscan\")\n+    tests.each do |description, test|\n+      it \"parses #{description}\" do\n+        fc = described_class.new(url: test[:params][:url])\n+        test[:expected].each do |key, value|\n+          expect(fc.name).to eq(value) if key == :name\n+          expect(fc.version).to eq(value) if key == :version\n+        end",
        "comment_created_at": "2025-06-16T16:51:15+00:00",
        "comment_author": "abitrolly",
        "comment_body": "@MikeMcQuaid without loop every test will need to explicitly specify defaults for values that are not tested, so I left the loop for now.. I've also added test for setting `head` for GitHub source URLs, and I don't see how to handle it better..",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2151990316",
    "pr_number": 20116,
    "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
    "created_at": "2025-06-17T11:10:33+00:00",
    "commented_code": "describe \".new\" do\n     tests = {\n       \"generic tarball URL\": {\n-        url:      \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n-        expected: {\n-          name:    \"synscan\",\n-          version: \"5.02\",\n-        },\n+        url:     \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        name:    \"synscan\",\n+        version: \"5.02\",",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2151990316",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20116,
        "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
        "discussion_id": "2151990316",
        "commented_code": "@@ -6,48 +6,41 @@\n   describe \".new\" do\n     tests = {\n       \"generic tarball URL\": {\n-        url:      \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n-        expected: {\n-          name:    \"synscan\",\n-          version: \"5.02\",\n-        },\n+        url:     \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        name:    \"synscan\",\n+        version: \"5.02\",",
        "comment_created_at": "2025-06-17T11:10:33+00:00",
        "comment_author": "abitrolly",
        "comment_body": "Now it it not clear what is the fixture and what is the expectation. `url` can change during parsing.",
        "pr_file_module": null
      },
      {
        "comment_id": "2152267647",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20116,
        "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
        "discussion_id": "2151990316",
        "commented_code": "@@ -6,48 +6,41 @@\n   describe \".new\" do\n     tests = {\n       \"generic tarball URL\": {\n-        url:      \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n-        expected: {\n-          name:    \"synscan\",\n-          version: \"5.02\",\n-        },\n+        url:     \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        name:    \"synscan\",\n+        version: \"5.02\",",
        "comment_created_at": "2025-06-17T13:22:57+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "What do you propose? `expected_name` and `expected_version`? Criticising without offering an alternative is not helpful.",
        "pr_file_module": null
      },
      {
        "comment_id": "2152344393",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20116,
        "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
        "discussion_id": "2151990316",
        "commented_code": "@@ -6,48 +6,41 @@\n   describe \".new\" do\n     tests = {\n       \"generic tarball URL\": {\n-        url:      \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n-        expected: {\n-          name:    \"synscan\",\n-          version: \"5.02\",\n-        },\n+        url:     \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        name:    \"synscan\",\n+        version: \"5.02\",",
        "comment_created_at": "2025-06-17T13:54:09+00:00",
        "comment_author": "abitrolly",
        "comment_body": "@MikeMcQuaid same structure as before https://github.com/Homebrew/brew/pull/20116/commits/85d48da3640fe7de496fd941375088c9baff3645#diff-e680f7a2b450b630d317f4b6f134aea581047c6bb36117b72b249d9da14869c8 \r\n\r\n```ruby\r\n    tests = {\r\n      \"generic tarball URL\": {\r\n        url:      \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\r\n        expected: {\r\n          name:    \"synscan\",\r\n          version: \"5.02\",\r\n        },\r\n      },\r\n```\r\n\r\nSo each entry is:\r\n```\r\ntestname: {\r\n  url: xxx,\r\n  expected: {\r\n     name: xxx\r\n     version: xxx\r\n  }\r\n}\r\n```\r\n\r\nEach test entry can be even more explicit about params and expectations.\r\n```\r\ntestname: {\r\n  params: {\r\n    url: string,\r\n  },\r\n  expected: {\r\n     name: xxx,\r\n     version: xxx,\r\n  }\r\n}\r\n```\r\n\r\nThen the test data for version override will look like this.\r\n\r\n```ruby\r\n      \"with version override\": {\r\n        params: {\r\n           url:     \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\r\n           version: \"3.40\",\r\n        },\r\n        expected: {\r\n           name:    \"synscan\",\r\n           version: \"3.40\",\r\n        }\r\n      },\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2152031812",
    "pr_number": 20116,
    "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
    "created_at": "2025-06-17T11:32:20+00:00",
    "commented_code": "describe \".new\" do\n     tests = {\n       \"generic tarball URL\": {\n-        url:      \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n-        expected: {\n-          name:    \"synscan\",\n-          version: \"5.02\",\n-        },\n+        url:     \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        name:    \"synscan\",\n+        version: \"5.02\",\n       },\n       \"gitweb URL\":          {\n-        url:      \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n-        expected: {\n-          name: \"libzipper\",\n-        },\n+        url:  \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n+        name: \"libzipper\",\n       },\n       \"GitHub repo URL\":     {\n-        url:      \"https://github.com/abitrolly/lapce.git\",\n-        expected: {\n-          name: \"lapce\",\n-          head: true,\n-        },\n+        url:  \"https://github.com/abitrolly/lapce.git\",\n+        name: \"lapce\",\n+        head: true,\n       },\n       \"GitHub archive URL\":  {\n-        url:      \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n-        expected: {\n-          name:    \"lapce\",\n-          version: \"0.3.0\",\n-        },\n+        url:     \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n+        name:    \"lapce\",\n+        version: \"0.3.0\",\n       },\n       \"GitHub download URL\": {\n-        url:      \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n-        expected: {\n-          name:    \"stella\",\n-          version: \"6.7\",\n-        },\n+        url:     \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n+        name:    \"stella\",\n+        version: \"6.7\",\n       },\n     }\n \n     tests.each do |description, test|\n       it \"parses #{description}\" do\n-        fc = described_class.new(url: test.fetch(:url))\n-        ex = test.fetch(:expected)\n-        expect(fc.name).to eq(ex[:name]) if ex.key?(:name)\n-        expect(fc.version).to eq(ex[:version]) if ex.key?(:version)\n-        expect(fc.head).to eq(ex[:head]) if ex.key?(:head)\n+        formula_creator = described_class.new(url: test.fetch(:url))\n+        expect(formula_creator.name).to eq(test.fetch(:name))\n+        if (version = test[:version])\n+          expect(formula_creator.version).to eq(version)\n+        else\n+          expect(formula_creator.version).to be_null\n+        end\n+        expect(formula_creator.head).to eq(test.fetch(:head, false))",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2152031812",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20116,
        "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
        "discussion_id": "2152031812",
        "commented_code": "@@ -6,48 +6,41 @@\n   describe \".new\" do\n     tests = {\n       \"generic tarball URL\": {\n-        url:      \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n-        expected: {\n-          name:    \"synscan\",\n-          version: \"5.02\",\n-        },\n+        url:     \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        name:    \"synscan\",\n+        version: \"5.02\",\n       },\n       \"gitweb URL\":          {\n-        url:      \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n-        expected: {\n-          name: \"libzipper\",\n-        },\n+        url:  \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n+        name: \"libzipper\",\n       },\n       \"GitHub repo URL\":     {\n-        url:      \"https://github.com/abitrolly/lapce.git\",\n-        expected: {\n-          name: \"lapce\",\n-          head: true,\n-        },\n+        url:  \"https://github.com/abitrolly/lapce.git\",\n+        name: \"lapce\",\n+        head: true,\n       },\n       \"GitHub archive URL\":  {\n-        url:      \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n-        expected: {\n-          name:    \"lapce\",\n-          version: \"0.3.0\",\n-        },\n+        url:     \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n+        name:    \"lapce\",\n+        version: \"0.3.0\",\n       },\n       \"GitHub download URL\": {\n-        url:      \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n-        expected: {\n-          name:    \"stella\",\n-          version: \"6.7\",\n-        },\n+        url:     \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n+        name:    \"stella\",\n+        version: \"6.7\",\n       },\n     }\n \n     tests.each do |description, test|\n       it \"parses #{description}\" do\n-        fc = described_class.new(url: test.fetch(:url))\n-        ex = test.fetch(:expected)\n-        expect(fc.name).to eq(ex[:name]) if ex.key?(:name)\n-        expect(fc.version).to eq(ex[:version]) if ex.key?(:version)\n-        expect(fc.head).to eq(ex[:head]) if ex.key?(:head)\n+        formula_creator = described_class.new(url: test.fetch(:url))\n+        expect(formula_creator.name).to eq(test.fetch(:name))\n+        if (version = test[:version])\n+          expect(formula_creator.version).to eq(version)\n+        else\n+          expect(formula_creator.version).to be_null\n+        end\n+        expect(formula_creator.head).to eq(test.fetch(:head, false))",
        "comment_created_at": "2025-06-17T11:32:20+00:00",
        "comment_author": "abitrolly",
        "comment_body": "The original idea is fully declarative table test fixture. Dynamic enrichment of static test data with \"default values\" makes it less readable for me. If there is an error that sets `head` to nil, and test expects `false`, the test won't catch it.\r\n\r\nThe same with version here - if we need a test that checks version is null after parsing, it should be explicitly set in fixture. One test for URL without version is enough to check the behavior. No need to complicate the logic to repeat it for all URLs where the version is irrelevant. What could be relevant is to add a fixture entry that tests that version from params overrides the one parsed from URL.",
        "pr_file_module": null
      },
      {
        "comment_id": "2152267724",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20116,
        "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
        "discussion_id": "2152031812",
        "commented_code": "@@ -6,48 +6,41 @@\n   describe \".new\" do\n     tests = {\n       \"generic tarball URL\": {\n-        url:      \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n-        expected: {\n-          name:    \"synscan\",\n-          version: \"5.02\",\n-        },\n+        url:     \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        name:    \"synscan\",\n+        version: \"5.02\",\n       },\n       \"gitweb URL\":          {\n-        url:      \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n-        expected: {\n-          name: \"libzipper\",\n-        },\n+        url:  \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n+        name: \"libzipper\",\n       },\n       \"GitHub repo URL\":     {\n-        url:      \"https://github.com/abitrolly/lapce.git\",\n-        expected: {\n-          name: \"lapce\",\n-          head: true,\n-        },\n+        url:  \"https://github.com/abitrolly/lapce.git\",\n+        name: \"lapce\",\n+        head: true,\n       },\n       \"GitHub archive URL\":  {\n-        url:      \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n-        expected: {\n-          name:    \"lapce\",\n-          version: \"0.3.0\",\n-        },\n+        url:     \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n+        name:    \"lapce\",\n+        version: \"0.3.0\",\n       },\n       \"GitHub download URL\": {\n-        url:      \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n-        expected: {\n-          name:    \"stella\",\n-          version: \"6.7\",\n-        },\n+        url:     \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n+        name:    \"stella\",\n+        version: \"6.7\",\n       },\n     }\n \n     tests.each do |description, test|\n       it \"parses #{description}\" do\n-        fc = described_class.new(url: test.fetch(:url))\n-        ex = test.fetch(:expected)\n-        expect(fc.name).to eq(ex[:name]) if ex.key?(:name)\n-        expect(fc.version).to eq(ex[:version]) if ex.key?(:version)\n-        expect(fc.head).to eq(ex[:head]) if ex.key?(:head)\n+        formula_creator = described_class.new(url: test.fetch(:url))\n+        expect(formula_creator.name).to eq(test.fetch(:name))\n+        if (version = test[:version])\n+          expect(formula_creator.version).to eq(version)\n+        else\n+          expect(formula_creator.version).to be_null\n+        end\n+        expect(formula_creator.head).to eq(test.fetch(:head, false))",
        "comment_created_at": "2025-06-17T13:22:59+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "> The original idea is fully declarative table test fixture.\r\n\r\nThis is not something we do in Homebrew.\r\n\r\n> Dynamic enrichment of static test data with \"default values\" makes it less readable for me.\r\n\r\nAs someone who is neither an expert in Ruby nor Homebrew, readability for you is not the desired outcome here.\r\n\r\n> If there is an error that sets `head` to nil, and test expects `false`, the test won't catch it.\r\n\r\nThe Sorbet type system will catch it.\r\n\r\n> The same with version here - if we need a test that checks version is null after parsing, it should be explicitly set in fixture.\r\n\r\nI disagree.\r\n\r\n> No need to complicate the logic to repeat it for all URLs where the version is irrelevant.\r\n\r\nThe version is never irrelevant.\r\n\r\n> What could be relevant is to add a fixture entry that tests that version from params overrides the one parsed from URL.\r\n\r\nWill review a follow-up PR to do that.",
        "pr_file_module": null
      },
      {
        "comment_id": "2152347528",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20116,
        "pr_file": "Library/Homebrew/test/formula_creator_spec.rb",
        "discussion_id": "2152031812",
        "commented_code": "@@ -6,48 +6,41 @@\n   describe \".new\" do\n     tests = {\n       \"generic tarball URL\": {\n-        url:      \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n-        expected: {\n-          name:    \"synscan\",\n-          version: \"5.02\",\n-        },\n+        url:     \"http://digit-labs.org/files/tools/synscan/releases/synscan-5.02.tar.gz\",\n+        name:    \"synscan\",\n+        version: \"5.02\",\n       },\n       \"gitweb URL\":          {\n-        url:      \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n-        expected: {\n-          name: \"libzipper\",\n-        },\n+        url:  \"http://www.codesrc.com/gitweb/index.cgi?p=libzipper.git;a=summary\",\n+        name: \"libzipper\",\n       },\n       \"GitHub repo URL\":     {\n-        url:      \"https://github.com/abitrolly/lapce.git\",\n-        expected: {\n-          name: \"lapce\",\n-          head: true,\n-        },\n+        url:  \"https://github.com/abitrolly/lapce.git\",\n+        name: \"lapce\",\n+        head: true,\n       },\n       \"GitHub archive URL\":  {\n-        url:      \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n-        expected: {\n-          name:    \"lapce\",\n-          version: \"0.3.0\",\n-        },\n+        url:     \"https://github.com/abitrolly/lapce/archive/v0.3.0.tar.gz\",\n+        name:    \"lapce\",\n+        version: \"0.3.0\",\n       },\n       \"GitHub download URL\": {\n-        url:      \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n-        expected: {\n-          name:    \"stella\",\n-          version: \"6.7\",\n-        },\n+        url:     \"https://github.com/stella-emu/stella/releases/download/6.7/stella-6.7-src.tar.xz\",\n+        name:    \"stella\",\n+        version: \"6.7\",\n       },\n     }\n \n     tests.each do |description, test|\n       it \"parses #{description}\" do\n-        fc = described_class.new(url: test.fetch(:url))\n-        ex = test.fetch(:expected)\n-        expect(fc.name).to eq(ex[:name]) if ex.key?(:name)\n-        expect(fc.version).to eq(ex[:version]) if ex.key?(:version)\n-        expect(fc.head).to eq(ex[:head]) if ex.key?(:head)\n+        formula_creator = described_class.new(url: test.fetch(:url))\n+        expect(formula_creator.name).to eq(test.fetch(:name))\n+        if (version = test[:version])\n+          expect(formula_creator.version).to eq(version)\n+        else\n+          expect(formula_creator.version).to be_null\n+        end\n+        expect(formula_creator.head).to eq(test.fetch(:head, false))",
        "comment_created_at": "2025-06-17T13:55:24+00:00",
        "comment_author": "abitrolly",
        "comment_body": "Okay. Resolving.",
        "pr_file_module": null
      }
    ]
  }
]