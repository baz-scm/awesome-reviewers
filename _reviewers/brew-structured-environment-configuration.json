[
  {
    "discussion_id": "2127054361",
    "pr_number": 20047,
    "pr_file": "Library/Homebrew/utils/shell.rb",
    "created_at": "2025-06-04T16:59:04+00:00",
    "commented_code": "preferred = from_path(preferred_path)\n       subshell = case preferred\n       when :zsh\n-        \"PROMPT='%B%F{green}#{type}%f %F{blue}$%f%b ' RPROMPT='[%B%F{red}%~%f%b]' #{preferred_path} -f\"\n+        zdotdir = Pathname.new(HOMEBREW_TEMP/\"brew-zsh-prompt\")\n+        zdotdir.mkpath\n+        FileUtils.chmod_R(0700, zdotdir)\n+        FileUtils.cp(HOMEBREW_LIBRARY_PATH/\"utils/zsh/brew-sh-prompt-zshrc.zsh\", zdotdir/\".zshrc\")",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "2127054361",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20047,
        "pr_file": "Library/Homebrew/utils/shell.rb",
        "discussion_id": "2127054361",
        "commented_code": "@@ -158,7 +158,20 @@ def shell_with_prompt(type, preferred_path:, notice:)\n       preferred = from_path(preferred_path)\n       subshell = case preferred\n       when :zsh\n-        \"PROMPT='%B%F{green}#{type}%f %F{blue}$%f%b ' RPROMPT='[%B%F{red}%~%f%b]' #{preferred_path} -f\"\n+        zdotdir = Pathname.new(HOMEBREW_TEMP/\"brew-zsh-prompt\")\n+        zdotdir.mkpath\n+        FileUtils.chmod_R(0700, zdotdir)\n+        FileUtils.cp(HOMEBREW_LIBRARY_PATH/\"utils/zsh/brew-sh-prompt-zshrc.zsh\", zdotdir/\".zshrc\")",
        "comment_created_at": "2025-06-04T16:59:04+00:00",
        "comment_author": "Bo98",
        "comment_body": "Might be safer to at least bring `#{Process.euid}` into the pathname or similar so we make sure the path is per-user.",
        "pr_file_module": null
      },
      {
        "comment_id": "2127188077",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20047,
        "pr_file": "Library/Homebrew/utils/shell.rb",
        "discussion_id": "2127054361",
        "commented_code": "@@ -158,7 +158,20 @@ def shell_with_prompt(type, preferred_path:, notice:)\n       preferred = from_path(preferred_path)\n       subshell = case preferred\n       when :zsh\n-        \"PROMPT='%B%F{green}#{type}%f %F{blue}$%f%b ' RPROMPT='[%B%F{red}%~%f%b]' #{preferred_path} -f\"\n+        zdotdir = Pathname.new(HOMEBREW_TEMP/\"brew-zsh-prompt\")\n+        zdotdir.mkpath\n+        FileUtils.chmod_R(0700, zdotdir)\n+        FileUtils.cp(HOMEBREW_LIBRARY_PATH/\"utils/zsh/brew-sh-prompt-zshrc.zsh\", zdotdir/\".zshrc\")",
        "comment_created_at": "2025-06-04T18:21:56+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "@Bo98 Is `HOMEBREW_TEMP` not the per-user temp? If not: ideally we'd do that and: yes, agreed.",
        "pr_file_module": null
      },
      {
        "comment_id": "2127291170",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20047,
        "pr_file": "Library/Homebrew/utils/shell.rb",
        "discussion_id": "2127054361",
        "commented_code": "@@ -158,7 +158,20 @@ def shell_with_prompt(type, preferred_path:, notice:)\n       preferred = from_path(preferred_path)\n       subshell = case preferred\n       when :zsh\n-        \"PROMPT='%B%F{green}#{type}%f %F{blue}$%f%b ' RPROMPT='[%B%F{red}%~%f%b]' #{preferred_path} -f\"\n+        zdotdir = Pathname.new(HOMEBREW_TEMP/\"brew-zsh-prompt\")\n+        zdotdir.mkpath\n+        FileUtils.chmod_R(0700, zdotdir)\n+        FileUtils.cp(HOMEBREW_LIBRARY_PATH/\"utils/zsh/brew-sh-prompt-zshrc.zsh\", zdotdir/\".zshrc\")",
        "comment_created_at": "2025-06-04T19:28:10+00:00",
        "comment_author": "Bo98",
        "comment_body": "> Is `HOMEBREW_TEMP` not the per-user temp?\r\n\r\nHomebrew's default is global. We could potentially switch to being per-user HOMEBREW_TEMP, but it'll require custom logic for that to work on Linux (as it doesn't have a native system like macOS).",
        "pr_file_module": null
      },
      {
        "comment_id": "2128182672",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 20047,
        "pr_file": "Library/Homebrew/utils/shell.rb",
        "discussion_id": "2127054361",
        "commented_code": "@@ -158,7 +158,20 @@ def shell_with_prompt(type, preferred_path:, notice:)\n       preferred = from_path(preferred_path)\n       subshell = case preferred\n       when :zsh\n-        \"PROMPT='%B%F{green}#{type}%f %F{blue}$%f%b ' RPROMPT='[%B%F{red}%~%f%b]' #{preferred_path} -f\"\n+        zdotdir = Pathname.new(HOMEBREW_TEMP/\"brew-zsh-prompt\")\n+        zdotdir.mkpath\n+        FileUtils.chmod_R(0700, zdotdir)\n+        FileUtils.cp(HOMEBREW_LIBRARY_PATH/\"utils/zsh/brew-sh-prompt-zshrc.zsh\", zdotdir/\".zshrc\")",
        "comment_created_at": "2025-06-05T07:47:50+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "@Bo98 done!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "810912184",
    "pr_number": 12898,
    "pr_file": "Library/Homebrew/utils/github/api.rb",
    "created_at": "2022-02-21T09:08:57+00:00",
    "commented_code": "require \"utils/shell\"\n \n module GitHub\n-  API_URL = \"https://api.github.com\"\n+  PUBLIC_GITHUB_API_URL = \"https://api.github.com\"\n+  API_URL = ENV.fetch(\"HOMEBREW_GITHUB_API_URL\", PUBLIC_GITHUB_API_URL).freeze",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "810912184",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 12898,
        "pr_file": "Library/Homebrew/utils/github/api.rb",
        "discussion_id": "810912184",
        "commented_code": "@@ -5,7 +5,8 @@\n require \"utils/shell\"\n \n module GitHub\n-  API_URL = \"https://api.github.com\"\n+  PUBLIC_GITHUB_API_URL = \"https://api.github.com\"\n+  API_URL = ENV.fetch(\"HOMEBREW_GITHUB_API_URL\", PUBLIC_GITHUB_API_URL).freeze",
        "comment_created_at": "2022-02-21T09:08:57+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "This will override e.g. `brew search` behaviour which seems undesirable.",
        "pr_file_module": null
      },
      {
        "comment_id": "811260072",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 12898,
        "pr_file": "Library/Homebrew/utils/github/api.rb",
        "discussion_id": "810912184",
        "commented_code": "@@ -5,7 +5,8 @@\n require \"utils/shell\"\n \n module GitHub\n-  API_URL = \"https://api.github.com\"\n+  PUBLIC_GITHUB_API_URL = \"https://api.github.com\"\n+  API_URL = ENV.fetch(\"HOMEBREW_GITHUB_API_URL\", PUBLIC_GITHUB_API_URL).freeze",
        "comment_created_at": "2022-02-21T15:56:32+00:00",
        "comment_author": "colindean",
        "comment_body": "Agreed, but would it be useful for a user to be able to search their internal tap with brew search, too?\r\n\r\nSuch might be a little premature optimization for this particular work scope but it's something to consider as I look for ways to make Homebrew indispensable \"inside the firewall\" (for whatever that means these days, haha).",
        "pr_file_module": null
      },
      {
        "comment_id": "834056690",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 12898,
        "pr_file": "Library/Homebrew/utils/github/api.rb",
        "discussion_id": "810912184",
        "commented_code": "@@ -5,7 +5,8 @@\n require \"utils/shell\"\n \n module GitHub\n-  API_URL = \"https://api.github.com\"\n+  PUBLIC_GITHUB_API_URL = \"https://api.github.com\"\n+  API_URL = ENV.fetch(\"HOMEBREW_GITHUB_API_URL\", PUBLIC_GITHUB_API_URL).freeze",
        "comment_created_at": "2022-03-24T08:48:07+00:00",
        "comment_author": "MikeMcQuaid",
        "comment_body": "I'm game for searching internal taps but this would break searching non-internal taps.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1788594696",
    "pr_number": 18509,
    "pr_file": "Library/Homebrew/extend/os/mac/diagnostic.rb",
    "created_at": "2024-10-05T13:28:34+00:00",
    "commented_code": "# Homebrew/brew is currently using.\n         return if GitHub::Actions.env_set?\n \n+        return if ENV[\"HOMEBREW_NO_WARN_OUTDATED_XCODE\"]",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1788594696",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 18509,
        "pr_file": "Library/Homebrew/extend/os/mac/diagnostic.rb",
        "discussion_id": "1788594696",
        "commented_code": "@@ -139,6 +139,8 @@ def check_xcode_up_to_date\n         # Homebrew/brew is currently using.\n         return if GitHub::Actions.env_set?\n \n+        return if ENV[\"HOMEBREW_NO_WARN_OUTDATED_XCODE\"]",
        "comment_created_at": "2024-10-05T13:28:34+00:00",
        "comment_author": "carlocab",
        "comment_body": "```suggestion\r\n        return if Homebrew::EnvConfig.no_warn_outdated_xcode?\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1774911896",
    "pr_number": 18408,
    "pr_file": "Library/Homebrew/env_config.rb",
    "created_at": "2024-09-25T09:40:53+00:00",
    "commented_code": "if hash[:boolean]\n         define_method(method_name) do\n-          ENV[env].present?\n+          env_value = ENV.fetch(env, nil)\n+\n+          falsy_values = %w[false no off nil 0]\n+          if falsy_values.include(env_value&.downcase)",
    "repo_full_name": "Homebrew/brew",
    "discussion_comments": [
      {
        "comment_id": "1774911896",
        "repo_full_name": "Homebrew/brew",
        "pr_number": 18408,
        "pr_file": "Library/Homebrew/env_config.rb",
        "discussion_id": "1774911896",
        "commented_code": "@@ -515,7 +515,18 @@ def env_method_name(env, hash)\n \n       if hash[:boolean]\n         define_method(method_name) do\n-          ENV[env].present?\n+          env_value = ENV.fetch(env, nil)\n+\n+          falsy_values = %w[false no off nil 0]\n+          if falsy_values.include(env_value&.downcase)",
        "comment_created_at": "2024-09-25T09:40:53+00:00",
        "comment_author": "carlocab",
        "comment_body": "```suggestion\r\n          if falsy_values.include?(env_value&.downcase)\r\n```",
        "pr_file_module": null
      }
    ]
  }
]