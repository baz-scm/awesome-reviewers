[
  {
    "discussion_id": "2115009053",
    "pr_number": 1843,
    "pr_file": "browser_use/controller/service.py",
    "created_at": "2025-05-30T01:53:41+00:00",
    "commented_code": "# Basic Navigation Actions\n \t\t@self.registry.action(\n-\t\t\t'Search the query in Google, the query should be a search query like humans search in Google, concrete and not vague or super long.',\n-\t\t\tparam_model=SearchGoogleAction,\n+\t\t\tf'Search the query in {self.search_engine.title()}, the query should be a search query like humans search in {self.search_engine.title()}, concrete and not vague or super long.',",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2115009053",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1843,
        "pr_file": "browser_use/controller/service.py",
        "discussion_id": "2115009053",
        "commented_code": "@@ -79,20 +87,39 @@ async def done(params: DoneAction):\n \n \t\t# Basic Navigation Actions\n \t\t@self.registry.action(\n-\t\t\t'Search the query in Google, the query should be a search query like humans search in Google, concrete and not vague or super long.',\n-\t\t\tparam_model=SearchGoogleAction,\n+\t\t\tf'Search the query in {self.search_engine.title()}, the query should be a search query like humans search in {self.search_engine.title()}, concrete and not vague or super long.',",
        "comment_created_at": "2025-05-30T01:53:41+00:00",
        "comment_author": "pirate",
        "comment_body": "```suggestion\r\n\t\t\tf'Search the query in {self.search_engine.title()}, the query should be a search query like humans search on Google, concrete and not vague or super long.',\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2115016256",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1843,
        "pr_file": "browser_use/controller/service.py",
        "discussion_id": "2115009053",
        "commented_code": "@@ -79,20 +87,39 @@ async def done(params: DoneAction):\n \n \t\t# Basic Navigation Actions\n \t\t@self.registry.action(\n-\t\t\t'Search the query in Google, the query should be a search query like humans search in Google, concrete and not vague or super long.',\n-\t\t\tparam_model=SearchGoogleAction,\n+\t\t\tf'Search the query in {self.search_engine.title()}, the query should be a search query like humans search in {self.search_engine.title()}, concrete and not vague or super long.',",
        "comment_created_at": "2025-05-30T02:01:40+00:00",
        "comment_author": "zzxwill",
        "comment_body": "If a user chooses to use kagi, it should use `kagi` there.",
        "pr_file_module": null
      },
      {
        "comment_id": "2136623917",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1843,
        "pr_file": "browser_use/controller/service.py",
        "discussion_id": "2115009053",
        "commented_code": "@@ -79,20 +87,39 @@ async def done(params: DoneAction):\n \n \t\t# Basic Navigation Actions\n \t\t@self.registry.action(\n-\t\t\t'Search the query in Google, the query should be a search query like humans search in Google, concrete and not vague or super long.',\n-\t\t\tparam_model=SearchGoogleAction,\n+\t\t\tf'Search the query in {self.search_engine.title()}, the query should be a search query like humans search in {self.search_engine.title()}, concrete and not vague or super long.',",
        "comment_created_at": "2025-06-09T22:53:17+00:00",
        "comment_author": "pirate",
        "comment_body": "the point is we're guiding it to use 'google-ish' search behavior and not put full sentences into the search box, the instruction applies even if the underlying engine used isn't google",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2029675567",
    "pr_number": 857,
    "pr_file": "browser_use/browser/browser.py",
    "created_at": "2025-04-05T03:24:22+00:00",
    "commented_code": "browser = await browser_class.launch(\n \t\t\theadless=self.config.headless,\n+\t\t\tchannel='chrome',",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2029675567",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 857,
        "pr_file": "browser_use/browser/browser.py",
        "discussion_id": "2029675567",
        "commented_code": "@@ -281,6 +280,7 @@ async def _setup_builtin_browser(self, playwright: Playwright) -> PlaywrightBrow\n \n \t\tbrowser = await browser_class.launch(\n \t\t\theadless=self.config.headless,\n+\t\t\tchannel='chrome',",
        "comment_created_at": "2025-04-05T03:24:22+00:00",
        "comment_author": "PaperBoardOfficial",
        "comment_body": "why channel is chrome? the browser_class could be firefox or webkit.",
        "pr_file_module": null
      },
      {
        "comment_id": "2029790711",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 857,
        "pr_file": "browser_use/browser/browser.py",
        "discussion_id": "2029675567",
        "commented_code": "@@ -281,6 +280,7 @@ async def _setup_builtin_browser(self, playwright: Playwright) -> PlaywrightBrow\n \n \t\tbrowser = await browser_class.launch(\n \t\t\theadless=self.config.headless,\n+\t\t\tchannel='chrome',",
        "comment_created_at": "2025-04-05T07:00:04+00:00",
        "comment_author": "Vinyzu",
        "comment_body": "> [Patchright](https://github.com/Kaliiiiiiiiii-Vinyzu/patchright/) only patches CHROMIUM based browsers. Firefox and Webkit are not supported.\r\n\r\nIf you want to use Firefox or Webkit i would recommend you to use normal Playwright.",
        "pr_file_module": null
      },
      {
        "comment_id": "2030231292",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 857,
        "pr_file": "browser_use/browser/browser.py",
        "discussion_id": "2029675567",
        "commented_code": "@@ -281,6 +280,7 @@ async def _setup_builtin_browser(self, playwright: Playwright) -> PlaywrightBrow\n \n \t\tbrowser = await browser_class.launch(\n \t\t\theadless=self.config.headless,\n+\t\t\tchannel='chrome',",
        "comment_created_at": "2025-04-06T18:55:42+00:00",
        "comment_author": "pirate",
        "comment_body": "FWIW anti-bot-detection is more important to us right now than firefox and safari support. The google haters still have other options with chromium-based browsers like Brave, Edge, Ungoogled Chromium, Opera, etc.\r\n\r\n@Vinyzu does patchright still allow connecting to firefox/Safari normally without any patches? It would be annoying to have to import a different library everywhere depending on which browser we connect to.",
        "pr_file_module": null
      },
      {
        "comment_id": "2030239749",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 857,
        "pr_file": "browser_use/browser/browser.py",
        "discussion_id": "2029675567",
        "commented_code": "@@ -281,6 +280,7 @@ async def _setup_builtin_browser(self, playwright: Playwright) -> PlaywrightBrow\n \n \t\tbrowser = await browser_class.launch(\n \t\t\theadless=self.config.headless,\n+\t\t\tchannel='chrome',",
        "comment_created_at": "2025-04-06T19:30:03+00:00",
        "comment_author": "Vinyzu",
        "comment_body": "In theory yes it does - but files/functions used commonly across browsers are also modified (to be used with chrome), so i would expect (major) bugs.",
        "pr_file_module": null
      }
    ]
  }
]