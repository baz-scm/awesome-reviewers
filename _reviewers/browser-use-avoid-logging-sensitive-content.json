[
  {
    "discussion_id": "2114024120",
    "pr_number": 1851,
    "pr_file": "browser_use/controller/service.py",
    "created_at": "2025-05-29T19:25:33+00:00",
    "commented_code": "logger.info(msg)\n \t\t\treturn ActionResult(extracted_content=msg, include_in_memory=True)\n \n+\t\t@self.registry.action('Write file_content to file_name in file system')\n+\t\tasync def save_file(file_name: str, file_content: str, file_system: FileSystem):\n+\t\t\tfile_system.write_file(file_name, file_content)\n+\t\t\tmsg = f'\ud83d\udcbe  Saved file {file_name} to file system'\n+\t\t\tlogger.info(msg)\n+\t\t\treturn ActionResult(extracted_content=msg, include_in_memory=True)\n+\n+\t\t@self.registry.action('Append append_content to file_name in file system')\n+\t\tasync def append_file(file_name: str, append_content: str, file_system: FileSystem):\n+\t\t\tfile_system.append_file(file_name, append_content)\n+\t\t\tmsg = f'\ud83d\udcbe  Appended data to file {file_name} in file system'\n+\t\t\tlogger.info(msg)\n+\t\t\treturn ActionResult(extracted_content=msg, include_in_memory=True)\n+\n+\t\t@self.registry.action('Read contents of file_name in file system')\n+\t\tasync def read_file(file_name: str, file_system: FileSystem):\n+\t\t\tfile_content = file_system.read_file(file_name)\n+\t\t\tmsg = f'\ud83d\udcc4  Read contents of file {file_name} from file system:\n\n{file_content}'",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2114610510",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1851,
        "pr_file": "browser_use/controller/service.py",
        "discussion_id": "2114024120",
        "commented_code": "@@ -222,6 +223,27 @@ async def close_tab(params: CloseTabAction, browser_session: BrowserSession):\n \t\t\tlogger.info(msg)\n \t\t\treturn ActionResult(extracted_content=msg, include_in_memory=True)\n \n+\t\t@self.registry.action('Write file_content to file_name in file system')\n+\t\tasync def save_file(file_name: str, file_content: str, file_system: FileSystem):\n+\t\t\tfile_system.write_file(file_name, file_content)\n+\t\t\tmsg = f'\ud83d\udcbe  Saved file {file_name} to file system'\n+\t\t\tlogger.info(msg)\n+\t\t\treturn ActionResult(extracted_content=msg, include_in_memory=True)\n+\n+\t\t@self.registry.action('Append append_content to file_name in file system')\n+\t\tasync def append_file(file_name: str, append_content: str, file_system: FileSystem):\n+\t\t\tfile_system.append_file(file_name, append_content)\n+\t\t\tmsg = f'\ud83d\udcbe  Appended data to file {file_name} in file system'\n+\t\t\tlogger.info(msg)\n+\t\t\treturn ActionResult(extracted_content=msg, include_in_memory=True)\n+\n+\t\t@self.registry.action('Read contents of file_name in file system')\n+\t\tasync def read_file(file_name: str, file_system: FileSystem):\n+\t\t\tfile_content = file_system.read_file(file_name)\n+\t\t\tmsg = f'\ud83d\udcc4  Read contents of file {file_name} from file system:\\n\\n{file_content}'",
        "comment_created_at": "2025-05-29T19:25:33+00:00",
        "comment_author": "pirate",
        "comment_body": "Yeah we should probably check the content a bit before doing this:\r\n\r\n- it could be a binary file like an image or PDF\r\n- it could be extremely long, blowing out the LLM context and printing a wall of text to the terminal\r\n- it could contain PII that shouldn't appear in logs (even if they're using a self-hosted LLM they're ok sending it to)\r\n\r\nLogging just the name, mimetype, and size/character count are probably fine for the `logger.info(...)`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2003009962",
    "pr_number": 1059,
    "pr_file": "browser_use/agent/service.py",
    "created_at": "2025-03-19T10:43:10+00:00",
    "commented_code": "input_messages = self._convert_input_messages(input_messages)\n \n \t\tif self.tool_calling_method == 'raw':\n-\t\t\toutput = self.llm.invoke(input_messages)\n+\t\t\ttry:\n+\t\t\t\toutput = self.llm.invoke(input_messages)\n+\t\t\texcept Exception as e:\n+\t\t\t\tlogger.info(\"error during llm invocation\")\n+\t\t\t\tlogger.error(e)",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2003009962",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1059,
        "pr_file": "browser_use/agent/service.py",
        "discussion_id": "2003009962",
        "commented_code": "@@ -509,7 +509,11 @@ async def get_next_action(self, input_messages: list[BaseMessage]) -> AgentOutpu\n \t\tinput_messages = self._convert_input_messages(input_messages)\n \n \t\tif self.tool_calling_method == 'raw':\n-\t\t\toutput = self.llm.invoke(input_messages)\n+\t\t\ttry:\n+\t\t\t\toutput = self.llm.invoke(input_messages)\n+\t\t\texcept Exception as e:\n+\t\t\t\tlogger.info(\"error during llm invocation\")\n+\t\t\t\tlogger.error(e)",
        "comment_created_at": "2025-03-19T10:43:10+00:00",
        "comment_author": "Simaky",
        "comment_body": "I believe it might be more appropriate to use a single error log instead of separate info and error logs, as this appears to be an error rather than just informational.\r\nLike that: `logger.error(f\"Error during LLM invocation: {e}\")`",
        "pr_file_module": null
      },
      {
        "comment_id": "2003020267",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1059,
        "pr_file": "browser_use/agent/service.py",
        "discussion_id": "2003009962",
        "commented_code": "@@ -509,7 +509,11 @@ async def get_next_action(self, input_messages: list[BaseMessage]) -> AgentOutpu\n \t\tinput_messages = self._convert_input_messages(input_messages)\n \n \t\tif self.tool_calling_method == 'raw':\n-\t\t\toutput = self.llm.invoke(input_messages)\n+\t\t\ttry:\n+\t\t\t\toutput = self.llm.invoke(input_messages)\n+\t\t\texcept Exception as e:\n+\t\t\t\tlogger.info(\"error during llm invocation\")\n+\t\t\t\tlogger.error(e)",
        "comment_created_at": "2025-03-19T10:47:02+00:00",
        "comment_author": "baluvijay",
        "comment_body": "good point will update the PR like that",
        "pr_file_module": null
      }
    ]
  }
]