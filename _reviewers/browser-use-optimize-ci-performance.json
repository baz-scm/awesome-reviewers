[
  {
    "discussion_id": "2076551222",
    "pr_number": 1598,
    "pr_file": ".github/workflows/test.yaml",
    "created_at": "2025-05-06T23:47:03+00:00",
    "commented_code": "- run: patchright install --no-shell chromium\n \n-      - run: pytest tests/${{ matrix.test }}.py\n+      - name: Install Playwright and Chromium\n+        run: |\n+          uv pip install playwright\n+          uv run playwright install chromium\n+          uv run patchright install chrome",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2076551222",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1598,
        "pr_file": ".github/workflows/test.yaml",
        "discussion_id": "2076551222",
        "commented_code": "@@ -63,4 +66,20 @@ jobs:\n \n       - run: patchright install --no-shell chromium\n \n-      - run: pytest tests/${{ matrix.test }}.py\n+      - name: Install Playwright and Chromium\n+        run: |\n+          uv pip install playwright\n+          uv run playwright install chromium\n+          uv run patchright install chrome",
        "comment_created_at": "2025-05-06T23:47:03+00:00",
        "comment_author": "pirate",
        "comment_body": "```suggestion\r\n```\r\nnone of this is needed we already intall it directly above this block.\r\n\r\nespecially dont install `chrome`, that's old-headless which is no longer used by any code path.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2076552196",
    "pr_number": 1598,
    "pr_file": ".github/workflows/test.yaml",
    "created_at": "2025-05-06T23:48:33+00:00",
    "commented_code": "- run: patchright install --no-shell chromium\n \n-      - run: pytest tests/${{ matrix.test }}.py\n+      - name: Install Playwright and Chromium\n+        run: |\n+          uv pip install playwright\n+          uv run playwright install chromium\n+          uv run patchright install chrome\n+\n+      - name: Launch Chrome with remote debugging\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y google-chrome-stable",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2076552196",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1598,
        "pr_file": ".github/workflows/test.yaml",
        "discussion_id": "2076552196",
        "commented_code": "@@ -63,4 +66,20 @@ jobs:\n \n       - run: patchright install --no-shell chromium\n \n-      - run: pytest tests/${{ matrix.test }}.py\n+      - name: Install Playwright and Chromium\n+        run: |\n+          uv pip install playwright\n+          uv run playwright install chromium\n+          uv run patchright install chrome\n+\n+      - name: Launch Chrome with remote debugging\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install -y google-chrome-stable",
        "comment_created_at": "2025-05-06T23:48:33+00:00",
        "comment_author": "pirate",
        "comment_body": "we should use an off-the-shelf action for this with proper caching instead of manually apt-installing, otherwise it will add a lot of time to every test",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2057086985",
    "pr_number": 1462,
    "pr_file": ".github/workflows/lint.yml",
    "created_at": "2025-04-24T00:19:52+00:00",
    "commented_code": "steps:\n       - uses: actions/checkout@v4\n       - uses: astral-sh/setup-uv@v5\n+      - run: uv run ruff check --no-fix --select PLE\n       - run: uv run ruff format\n       - run: uv run pre-commit run --all-files\n-      # TODO: Fix the ignored pytests.\n-      # openai.OpenAIError: The api_key client option must be set either by passing\n-      # api_key to the client or by setting the OPENAI_API_KEY environment variable\n-      - run: uv run --with=dotenv pytest\n-                --ignore=tests/test_dropdown_error.py\n-                --ignore=tests/test_gif_path.py\n-                --ignore=tests/test_models.py\n-                --ignore=tests/test_react_dropdown.py\n-                --ignore=tests/test_save_conversation.py\n-                --ignore=tests/test_vision.py\n-                --ignore=tests/test_wait_for_element.py || true\n+      - run: uv run pyright",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2057086985",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1462,
        "pr_file": ".github/workflows/lint.yml",
        "discussion_id": "2057086985",
        "commented_code": "@@ -9,16 +9,7 @@ jobs:\n     steps:\n       - uses: actions/checkout@v4\n       - uses: astral-sh/setup-uv@v5\n+      - run: uv run ruff check --no-fix --select PLE\n       - run: uv run ruff format\n       - run: uv run pre-commit run --all-files\n-      # TODO: Fix the ignored pytests.\n-      # openai.OpenAIError: The api_key client option must be set either by passing\n-      # api_key to the client or by setting the OPENAI_API_KEY environment variable\n-      - run: uv run --with=dotenv pytest\n-                --ignore=tests/test_dropdown_error.py\n-                --ignore=tests/test_gif_path.py\n-                --ignore=tests/test_models.py\n-                --ignore=tests/test_react_dropdown.py\n-                --ignore=tests/test_save_conversation.py\n-                --ignore=tests/test_vision.py\n-                --ignore=tests/test_wait_for_element.py || true\n+      - run: uv run pyright",
        "comment_created_at": "2025-04-24T00:19:52+00:00",
        "comment_author": "pirate",
        "comment_body": "lets split this into 3 separate jobs (up a level from here) so they get separate rows in the Github PR UI and so they can be parallelized (it saves a lot of clicks having to dig into CI errors every time to see what failed).\r\n\r\n- cheap and fast check for basic syntax errors w/ PLE\r\n- check for ruff style/formatting + pre-commit hook errors\r\n- check for errors from type checker (pyright)\r\n\r\nall 3 can share the same uv cache so they should each run for <20sec in theory, and if they run in parallel then all PR checks can be ready in <30sec.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2061989702",
    "pr_number": 1462,
    "pr_file": ".github/workflows/build.yaml",
    "created_at": "2025-04-27T03:41:16+00:00",
    "commented_code": "+name: Build\n+on:\n+  push:\n+  pull_request:\n+  workflow_dispatch:\n+\n+jobs:\n+  build:\n+    name: ${{ matrix.os }} \u2022 ${{ matrix.python-version }}\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        python-version: [\"3.11\", \"3.12\", \"3.13\"]\n+    steps:\n+      - uses: actions/checkout@v4\n+      - uses: actions/setup-python@v5\n+        with:\n+          python-version: ${{ matrix.python-version }}\n+      - name: Setup uv and cache packages\n+        uses: astral-sh/setup-uv@v5\n+      - run: uv build\n+      - name: Set up isolated venv and test import\n+        shell: bash\n+        run: |\n+          uv venv /tmp/testenv\n+          if [[ \"$RUNNER_OS\" == \"Windows\" ]]; then\n+            . /tmp/testenv/Scripts/activate\n+          else\n+            source /tmp/testenv/bin/activate\n+          fi\n+          uv pip install dist/*.whl\n+          python -c \"import browser_use; print('browser_use package is imported and functional!')\"",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2061989702",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1462,
        "pr_file": ".github/workflows/build.yaml",
        "discussion_id": "2061989702",
        "commented_code": "@@ -0,0 +1,33 @@\n+name: Build\n+on:\n+  push:\n+  pull_request:\n+  workflow_dispatch:\n+\n+jobs:\n+  build:\n+    name: ${{ matrix.os }} \u2022 ${{ matrix.python-version }}\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        python-version: [\"3.11\", \"3.12\", \"3.13\"]\n+    steps:\n+      - uses: actions/checkout@v4\n+      - uses: actions/setup-python@v5\n+        with:\n+          python-version: ${{ matrix.python-version }}\n+      - name: Setup uv and cache packages\n+        uses: astral-sh/setup-uv@v5\n+      - run: uv build\n+      - name: Set up isolated venv and test import\n+        shell: bash\n+        run: |\n+          uv venv /tmp/testenv\n+          if [[ \"$RUNNER_OS\" == \"Windows\" ]]; then\n+            . /tmp/testenv/Scripts/activate\n+          else\n+            source /tmp/testenv/bin/activate\n+          fi\n+          uv pip install dist/*.whl\n+          python -c \"import browser_use; print('browser_use package is imported and functional!')\" ",
        "comment_created_at": "2025-04-27T03:41:16+00:00",
        "comment_author": "pirate",
        "comment_body": "so the `build` should actually happen first without any matrix, just setup python 3.12 and uv and build, and push the build output as an artifact. in theory building the package should never change across python versions since it's not actually interpreting any library code during build, it's just bundling according to uv/hatch logic.\r\n\r\nThen the `build_test` test should re-use the previously built artifact and import it across the whole OS/python-version matrix + test `python -c 'from browser_use import Agent, Browser, Controller, ActionModel, ActionResult'` on each os/version combo.",
        "pr_file_module": null
      },
      {
        "comment_id": "2062561376",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1462,
        "pr_file": ".github/workflows/build.yaml",
        "discussion_id": "2061989702",
        "commented_code": "@@ -0,0 +1,33 @@\n+name: Build\n+on:\n+  push:\n+  pull_request:\n+  workflow_dispatch:\n+\n+jobs:\n+  build:\n+    name: ${{ matrix.os }} \u2022 ${{ matrix.python-version }}\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      matrix:\n+        os: [ubuntu-latest, macos-latest, windows-latest]\n+        python-version: [\"3.11\", \"3.12\", \"3.13\"]\n+    steps:\n+      - uses: actions/checkout@v4\n+      - uses: actions/setup-python@v5\n+        with:\n+          python-version: ${{ matrix.python-version }}\n+      - name: Setup uv and cache packages\n+        uses: astral-sh/setup-uv@v5\n+      - run: uv build\n+      - name: Set up isolated venv and test import\n+        shell: bash\n+        run: |\n+          uv venv /tmp/testenv\n+          if [[ \"$RUNNER_OS\" == \"Windows\" ]]; then\n+            . /tmp/testenv/Scripts/activate\n+          else\n+            source /tmp/testenv/bin/activate\n+          fi\n+          uv pip install dist/*.whl\n+          python -c \"import browser_use; print('browser_use package is imported and functional!')\" ",
        "comment_created_at": "2025-04-27T08:33:25+00:00",
        "comment_author": "dha-aa",
        "comment_body": "ok",
        "pr_file_module": null
      }
    ]
  }
]