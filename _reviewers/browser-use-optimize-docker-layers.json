[
  {
    "discussion_id": "2074810536",
    "pr_number": 1579,
    "pr_file": "Dockerfile",
    "created_at": "2025-05-06T06:33:13+00:00",
    "commented_code": "RUN pip install --upgrade pip \\",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2074810536",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1579,
        "pr_file": "Dockerfile",
        "discussion_id": "2074810536",
        "commented_code": "@@ -48,9 +33,9 @@ USER appuser\n RUN pip install --upgrade pip \\",
        "comment_created_at": "2025-05-06T06:33:13+00:00",
        "comment_author": "pirate",
        "comment_body": "this should be removed too, trust the image to provide `pip` otherwise we have two copies in the layers",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2075258095",
    "pr_number": 1579,
    "pr_file": "Dockerfile",
    "created_at": "2025-05-06T11:23:38+00:00",
    "commented_code": "-# Use a specific Python 3.11 slim image as the base\n-FROM python:3.11.3-slim\n+FROM python:3.11-slim\n \n-# Set environment variables\n ENV PYTHONDONTWRITEBYTECODE=1 \\\n     PYTHONUNBUFFERED=1\n \n-# Install system dependencies\n-RUN apt-get update && apt-get install -y --no-install-recommends \\\n+# Install minimal system dependencies required for Chrome\n+RUN apt-get update -qq && apt-get install -y --no-install-recommends -qq \\\n     git \\\n     curl \\\n     unzip \\\n-    xvfb \\\n     libnss3 \\\n-    libatk-bridge2.0-0 \\\n-    libgtk-3-0 \\\n     libxss1 \\\n     libasound2 \\\n     libx11-xcb1 \\\n-    libxcb-dri3-0 \\\n-    libdrm2 \\\n-    libgbm1 \\\n-    libxcomposite1 \\\n-    libxdamage1 \\\n-    libxrandr2 \\\n-    libxinerama1 \\\n-    libxcursor1 \\\n-    libxi6 \\\n-    libgl1-mesa-glx \\\n+    && apt-get clean \\\n     && rm -rf /var/lib/apt/lists/*\n \n-# Create a non-root user\n-RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser\n+# Create non-root user\n+RUN groupadd appgroup && useradd -m -g appgroup appuser\n \n-# Set work directory\n WORKDIR /app\n \n # Copy project files\n COPY . /app/\n \n-# Change ownership to the non-root user\n+# Change ownership\n RUN chown -R appuser:appgroup /app\n \n # Switch to non-root user\n USER appuser\n \n-# Install Python dependencies\n-RUN pip install --upgrade pip \\\n-    && pip install .\n+# Build Python package\n+RUN python3 setup.py sdist\n \n-# Define health check (example: adjust as needed)\n-HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n-  CMD curl -f http://localhost:8000/health || exit 1\n+# Install Python dependencies from built package\n+RUN python3 -m pip install --upgrade pip --quiet \\\n+    && python3 -m pip install dist/*.tar.gz --quiet",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2075258095",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1579,
        "pr_file": "Dockerfile",
        "discussion_id": "2075258095",
        "commented_code": "@@ -1,56 +1,40 @@\n-# Use a specific Python 3.11 slim image as the base\n-FROM python:3.11.3-slim\n+FROM python:3.11-slim\n \n-# Set environment variables\n ENV PYTHONDONTWRITEBYTECODE=1 \\\n     PYTHONUNBUFFERED=1\n \n-# Install system dependencies\n-RUN apt-get update && apt-get install -y --no-install-recommends \\\n+# Install minimal system dependencies required for Chrome\n+RUN apt-get update -qq && apt-get install -y --no-install-recommends -qq \\\n     git \\\n     curl \\\n     unzip \\\n-    xvfb \\\n     libnss3 \\\n-    libatk-bridge2.0-0 \\\n-    libgtk-3-0 \\\n     libxss1 \\\n     libasound2 \\\n     libx11-xcb1 \\\n-    libxcb-dri3-0 \\\n-    libdrm2 \\\n-    libgbm1 \\\n-    libxcomposite1 \\\n-    libxdamage1 \\\n-    libxrandr2 \\\n-    libxinerama1 \\\n-    libxcursor1 \\\n-    libxi6 \\\n-    libgl1-mesa-glx \\\n+    && apt-get clean \\\n     && rm -rf /var/lib/apt/lists/*\n \n-# Create a non-root user\n-RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser\n+# Create non-root user\n+RUN groupadd appgroup && useradd -m -g appgroup appuser\n \n-# Set work directory\n WORKDIR /app\n \n # Copy project files\n COPY . /app/\n \n-# Change ownership to the non-root user\n+# Change ownership\n RUN chown -R appuser:appgroup /app\n \n # Switch to non-root user\n USER appuser\n \n-# Install Python dependencies\n-RUN pip install --upgrade pip \\\n-    && pip install .\n+# Build Python package\n+RUN python3 setup.py sdist\n \n-# Define health check (example: adjust as needed)\n-HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n-  CMD curl -f http://localhost:8000/health || exit 1\n+# Install Python dependencies from built package\n+RUN python3 -m pip install --upgrade pip --quiet \\\n+    && python3 -m pip install dist/*.tar.gz --quiet",
        "comment_created_at": "2025-05-06T11:23:38+00:00",
        "comment_author": "pirate",
        "comment_body": "```suggestion\r\nRUN pip install .\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2083091208",
    "pr_number": 1579,
    "pr_file": "Dockerfile",
    "created_at": "2025-05-10T09:49:44+00:00",
    "commented_code": "-# Use a specific Python 3.11 slim image as the base\n-FROM python:3.11.3-slim\n-\n-# Set environment variables\n-ENV PYTHONDONTWRITEBYTECODE=1 \\\n-    PYTHONUNBUFFERED=1\n-\n-# Install system dependencies\n-RUN apt-get update && apt-get install -y --no-install-recommends \\\n-    git \\\n-    curl \\\n-    unzip \\\n-    xvfb \\\n-    libnss3 \\\n-    libatk-bridge2.0-0 \\\n-    libgtk-3-0 \\\n-    libxss1 \\\n-    libasound2 \\\n-    libx11-xcb1 \\\n-    libxcb-dri3-0 \\\n-    libdrm2 \\\n-    libgbm1 \\\n-    libxcomposite1 \\\n-    libxdamage1 \\\n-    libxrandr2 \\\n-    libxinerama1 \\\n-    libxcursor1 \\\n-    libxi6 \\\n-    libgl1-mesa-glx \\\n-    && rm -rf /var/lib/apt/lists/*\n-\n-# Create a non-root user\n-RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser\n-\n-# Set work directory\n+# 1. Base image\n+FROM python:3.11-slim\n+\n+# 2. Create a non-root user (don\u2019t switch yet)\n+RUN groupadd appgroup \\\n+ && useradd -m -g appgroup appuser\n+\n+# 3. Install base APT packages\n+RUN apt-get update -qq \\\n+ && apt-get install -y --no-install-recommends -qq \\\n+      unzip libnss3 libxss1 libasound2 libx11-xcb1 \\\n+      curl git \\\n+ && rm -rf /var/lib/apt/lists/*\n+\n+# 4. Set working directory\n WORKDIR /app\n \n-# Copy project files\n-COPY . /app/\n+# 5. Copy only dependency manifest\n+COPY pyproject.toml /app/\n \n-# Change ownership to the non-root user\n-RUN chown -R appuser:appgroup /app\n+# 6. Install patchright (version from pyproject.toml)\n+RUN python3 -m pip install --upgrade pip --quiet \\\n+ && python3 -m pip install patchright --quiet\n \n-# Switch to non-root user\n-USER appuser\n+# 7. Install Chromium via patchright\n+RUN patchright install --with-deps --no-shell chromium\n+\n+# 8. Copy the rest of the codebase\n+COPY . /app\n \n-# Install Python dependencies\n-RUN pip install --upgrade pip \\\n-    && pip install .\n+# 9. Install the application package\n+RUN python3 -m pip install . --quiet",
    "repo_full_name": "browser-use/browser-use",
    "discussion_comments": [
      {
        "comment_id": "2083091208",
        "repo_full_name": "browser-use/browser-use",
        "pr_number": 1579,
        "pr_file": "Dockerfile",
        "discussion_id": "2083091208",
        "commented_code": "@@ -1,56 +1,38 @@\n-# Use a specific Python 3.11 slim image as the base\n-FROM python:3.11.3-slim\n-\n-# Set environment variables\n-ENV PYTHONDONTWRITEBYTECODE=1 \\\n-    PYTHONUNBUFFERED=1\n-\n-# Install system dependencies\n-RUN apt-get update && apt-get install -y --no-install-recommends \\\n-    git \\\n-    curl \\\n-    unzip \\\n-    xvfb \\\n-    libnss3 \\\n-    libatk-bridge2.0-0 \\\n-    libgtk-3-0 \\\n-    libxss1 \\\n-    libasound2 \\\n-    libx11-xcb1 \\\n-    libxcb-dri3-0 \\\n-    libdrm2 \\\n-    libgbm1 \\\n-    libxcomposite1 \\\n-    libxdamage1 \\\n-    libxrandr2 \\\n-    libxinerama1 \\\n-    libxcursor1 \\\n-    libxi6 \\\n-    libgl1-mesa-glx \\\n-    && rm -rf /var/lib/apt/lists/*\n-\n-# Create a non-root user\n-RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser\n-\n-# Set work directory\n+# 1. Base image\n+FROM python:3.11-slim\n+\n+# 2. Create a non-root user (don\u2019t switch yet)\n+RUN groupadd appgroup \\\n+ && useradd -m -g appgroup appuser\n+\n+# 3. Install base APT packages\n+RUN apt-get update -qq \\\n+ && apt-get install -y --no-install-recommends -qq \\\n+      unzip libnss3 libxss1 libasound2 libx11-xcb1 \\\n+      curl git \\\n+ && rm -rf /var/lib/apt/lists/*\n+\n+# 4. Set working directory\n WORKDIR /app\n \n-# Copy project files\n-COPY . /app/\n+# 5. Copy only dependency manifest\n+COPY pyproject.toml /app/\n \n-# Change ownership to the non-root user\n-RUN chown -R appuser:appgroup /app\n+# 6. Install patchright (version from pyproject.toml)\n+RUN python3 -m pip install --upgrade pip --quiet \\\n+ && python3 -m pip install patchright --quiet\n \n-# Switch to non-root user\n-USER appuser\n+# 7. Install Chromium via patchright\n+RUN patchright install --with-deps --no-shell chromium\n+\n+# 8. Copy the rest of the codebase\n+COPY . /app\n \n-# Install Python dependencies\n-RUN pip install --upgrade pip \\\n-    && pip install .\n+# 9. Install the application package\n+RUN python3 -m pip install . --quiet",
        "comment_created_at": "2025-05-10T09:49:44+00:00",
        "comment_author": "pirate",
        "comment_body": "to avoid installing a duplicate copy of the code in this layer, install it in linked/editable mode instead:\r\n```suggestion\r\nRUN pip install -e .\r\n```",
        "pr_file_module": null
      }
    ]
  }
]