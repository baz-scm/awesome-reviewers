[
  {
    "discussion_id": "2056641910",
    "pr_number": 17966,
    "pr_file": "src/codegen/replacements.ts",
    "created_at": "2025-04-23T18:11:01+00:00",
    "commented_code": "\"process.env.NODE_ENV\": JSON.stringify(debug ? \"development\" : \"production\"),\n   \"IS_BUN_DEVELOPMENT\": String(debug),\n \n+  // keep this in sync with src/bun.js/bindings/webcore/JSReadableStream.cpp customInspect\n+  // keep this in sync with src/bun.js/bindings/webcore/JSWritableStream.cpp customInspect",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2056641910",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 17966,
        "pr_file": "src/codegen/replacements.ts",
        "discussion_id": "2056641910",
        "commented_code": "@@ -122,12 +122,15 @@ export const define: Record<string, string> = {\n   \"process.env.NODE_ENV\": JSON.stringify(debug ? \"development\" : \"production\"),\n   \"IS_BUN_DEVELOPMENT\": String(debug),\n \n+  // keep this in sync with src/bun.js/bindings/webcore/JSReadableStream.cpp customInspect\n+  // keep this in sync with src/bun.js/bindings/webcore/JSWritableStream.cpp customInspect",
        "comment_created_at": "2025-04-23T18:11:01+00:00",
        "comment_author": "190n",
        "comment_body": "```suggestion\r\n  // These must match the order of the stateNames arrays in JSReadableStream.cpp and JSWritableStream.cpp \r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2052670110",
    "pr_number": 19145,
    "pr_file": "packages/bun-types/deprecated.d.ts",
    "created_at": "2025-04-21T16:17:05+00:00",
    "commented_code": "* @deprecated Renamed to `ResolveMessage`\n  */\n declare var ResolveError: typeof ResolveMessage;\n+\n+declare module \"bun\" {\n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type BeforeExitListener = (code: number) => void;\n+\n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type DisconnectListener = () => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type ExitListener = (code: number) => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type RejectionHandledListener = (promise: Promise<unknown>) => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type WarningListener = (warning: Error) => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type MessageListener = (message: unknown, sendHandle: unknown) => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type SignalsListener = (signal: NodeJS.Signals) => void;\n+\n+  /**\n+   * @deprecated This type is redundant with built-in types. Consider using a more specific type like BodyInit",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2052670110",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19145,
        "pr_file": "packages/bun-types/deprecated.d.ts",
        "discussion_id": "2052670110",
        "commented_code": "@@ -72,3 +72,45 @@ declare var BuildError: typeof BuildMessage;\n  * @deprecated Renamed to `ResolveMessage`\n  */\n declare var ResolveError: typeof ResolveMessage;\n+\n+declare module \"bun\" {\n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type BeforeExitListener = (code: number) => void;\n+\n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type DisconnectListener = () => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type ExitListener = (code: number) => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type RejectionHandledListener = (promise: Promise<unknown>) => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type WarningListener = (warning: Error) => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type MessageListener = (message: unknown, sendHandle: unknown) => void;\n+  \n+  /**\n+   * @deprecated This type is unused in Bun's types and might be removed in the near future\n+   */\n+  type SignalsListener = (signal: NodeJS.Signals) => void;\n+\n+  /**\n+   * @deprecated This type is redundant with built-in types. Consider using a more specific type like BodyInit",
        "comment_created_at": "2025-04-21T16:17:05+00:00",
        "comment_author": "alii",
        "comment_body": "```suggestion\r\n   * @deprecated This type is redundant with built-in types. Consider using a more specific type like Bun.BodyInit\r\n```",
        "pr_file_module": null
      }
    ]
  }
]