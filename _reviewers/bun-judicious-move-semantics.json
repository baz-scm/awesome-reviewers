[
  {
    "discussion_id": "2116916016",
    "pr_number": 19940,
    "pr_file": "src/bun.js/bindings/webcore/MessagePort.cpp",
    "created_at": "2025-05-31T00:34:41+00:00",
    "commented_code": "MessageWithMessagePorts message { messageData.releaseReturnValue(), WTFMove(transferredPorts) };\n \n+    auto* context = scriptExecutionContext();\n+    if (!context->canSendMessage()) {\n+        context->postImmediateCppTask([protectedThis = Ref { *this }, message = WTFMove(message)](ScriptExecutionContext& ctx) mutable {",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2116916016",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19940,
        "pr_file": "src/bun.js/bindings/webcore/MessagePort.cpp",
        "discussion_id": "2116916016",
        "commented_code": "@@ -183,6 +184,16 @@ ExceptionOr<void> MessagePort::postMessage(JSC::JSGlobalObject& state, JSC::JSVa\n \n     MessageWithMessagePorts message { messageData.releaseReturnValue(), WTFMove(transferredPorts) };\n \n+    auto* context = scriptExecutionContext();\n+    if (!context->canSendMessage()) {\n+        context->postImmediateCppTask([protectedThis = Ref { *this }, message = WTFMove(message)](ScriptExecutionContext& ctx) mutable {",
        "comment_created_at": "2025-05-31T00:34:41+00:00",
        "comment_author": "190n",
        "comment_body": "i don't think `mutable` is necessary (that allows you to mutate the captured values, in this case `protectedThis` and `message`, and i don't think we mutate either of them)\r\n\r\n```suggestion\r\n        context->postImmediateCppTask([protectedThis = Ref { *this }, message = WTFMove(message)](ScriptExecutionContext& ctx) {\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2116991606",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19940,
        "pr_file": "src/bun.js/bindings/webcore/MessagePort.cpp",
        "discussion_id": "2116916016",
        "commented_code": "@@ -183,6 +184,16 @@ ExceptionOr<void> MessagePort::postMessage(JSC::JSGlobalObject& state, JSC::JSVa\n \n     MessageWithMessagePorts message { messageData.releaseReturnValue(), WTFMove(transferredPorts) };\n \n+    auto* context = scriptExecutionContext();\n+    if (!context->canSendMessage()) {\n+        context->postImmediateCppTask([protectedThis = Ref { *this }, message = WTFMove(message)](ScriptExecutionContext& ctx) mutable {",
        "comment_created_at": "2025-05-31T01:36:15+00:00",
        "comment_author": "alii",
        "comment_body": "Seems like the mutable is necessary for the `WTFMove(message)`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2122367702",
    "pr_number": 19940,
    "pr_file": "src/bun.js/bindings/webcore/MessagePort.cpp",
    "created_at": "2025-06-03T00:16:21+00:00",
    "commented_code": "return;\n \n     auto messagesTakenHandler = [this, protectedThis = Ref { *this }](Vector<MessageWithMessagePorts>&& messages, CompletionHandler<void()>&& completionCallback) mutable {\n-        auto scopeExit = makeScopeExit(WTFMove(completionCallback));\n-\n-        // LOG(MessagePorts, \"MessagePort %s (%p) dispatching %zu messages\", m_identifier.logString().utf8().data(), this, messages.size());\n-\n         RefPtr<ScriptExecutionContext> context = scriptExecutionContext();\n-        if (!context || !context->globalObject())\n+        if (!context || !context->globalObject()) {\n+            WTFMove(completionCallback)();",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2122367702",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19940,
        "pr_file": "src/bun.js/bindings/webcore/MessagePort.cpp",
        "discussion_id": "2122367702",
        "commented_code": "@@ -254,41 +314,14 @@ void MessagePort::dispatchMessages()\n         return;\n \n     auto messagesTakenHandler = [this, protectedThis = Ref { *this }](Vector<MessageWithMessagePorts>&& messages, CompletionHandler<void()>&& completionCallback) mutable {\n-        auto scopeExit = makeScopeExit(WTFMove(completionCallback));\n-\n-        // LOG(MessagePorts, \"MessagePort %s (%p) dispatching %zu messages\", m_identifier.logString().utf8().data(), this, messages.size());\n-\n         RefPtr<ScriptExecutionContext> context = scriptExecutionContext();\n-        if (!context || !context->globalObject())\n+        if (!context || !context->globalObject()) {\n+            WTFMove(completionCallback)();",
        "comment_created_at": "2025-06-03T00:16:21+00:00",
        "comment_author": "heimskr",
        "comment_body": "```suggestion\r\n            completionCallback();\r\n```\r\nThe move is redundant unless there's an [rvalue ref-qualified](https://en.cppreference.com/w/cpp/language/member_functions.html#Member_functions_with_ref-qualifier) overload of `operator()` that you intend to explicitly call instead of the usual overload.",
        "pr_file_module": null
      }
    ]
  }
]