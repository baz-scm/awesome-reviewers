[
  {
    "discussion_id": "2191502871",
    "pr_number": 20440,
    "pr_file": "src/install/isolated_install/Installer.zig",
    "created_at": "2025-07-08T05:21:58+00:00",
    "commented_code": "+pub const Installer = struct {",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2191502871",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 20440,
        "pr_file": "src/install/isolated_install/Installer.zig",
        "discussion_id": "2191502871",
        "commented_code": "@@ -0,0 +1,1074 @@\n+pub const Installer = struct {",
        "comment_created_at": "2025-07-08T05:21:58+00:00",
        "comment_author": "Jarred-Sumner",
        "comment_body": "```suggestion\nconst Installer = @This();\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2106084393",
    "pr_number": 19899,
    "pr_file": "completions/bun.zsh",
    "created_at": "2025-05-25T04:51:08+00:00",
    "commented_code": "'--prefer-latest[Use the latest matching versions of packages in bun'\"'\"'s JavaScript runtime, always checking npm]' \\\n         '--silent[Don'\"'\"'t repeat the command for bun run]' \\\n         '--dump-environment-variables[Dump environment variables from .env and process as JSON and quit. Useful for debugging]' \\\n-        '--dump-limits[Dump system limits. Userful for debugging]' &&\n+        '--dump-limits[Dump system limits. Useful for debugging]' \\\n+        '--timeout[Set the per-test timeout in milliseconds, default is 5000.]:timeout' \\\n+        '--update-snapshots[Update snapshot files]' \\\n+        '--rerun-each[Re-run each test file <NUMBER> times, helps catch certain bugs]:rerun' \\\n+        '--only[Only run tests that are marked with \"test.only()\"]' \\\n+        '--todo[Include tests that are marked with \"test.todo()\"]' \\\n+        '--coverage[Generate a coverage profile]' \\\n+        '--coverage-reporter[Report coverage in \"text\" and/or \"lcov\". Defaults to \"text\".]:coverage-reporter' \\\n+        '--coverage-dir[Directory for coverage files. Defaults to \"coverage\".]:coverage-dir' \\\n+        '--bail[Exit the test suite after <NUMBER> failures. If you do not specify a number, it defaults to 1.]:bail' \\\n+        '--test-name-pattern[Run only tests with a name that matches the given regex]:pattern' \\\n+        '-t[Run only tests with a name that matches the given regex]:pattern' \\\n+        '--minify[Enable all minification flags]' \\\n+        '--minify-syntax[Minify syntax and inline data]' \\\n+        '--minify-whitespace[Minify whitespace]' \\\n+        '--minify-identifiers[Minify identifiers]' \\\n+        '--sourcemap[Generate sourcemaps]:sourcemap' \\\n+        '--target[The intended execution environment for the bundle. \"browser\", \"bun\" or \"node\"]:target' \\\n+        '--splitting[Whether to enable code splitting (requires --outdir)]' \\\n+        '--compile[Generate a standalone binary from a TypeScript or JavaScript file]' \\\n+        '--format[Specifies the module format to be used in the generated bundles]:format' \\\n+        '--env-file[Load environment variables from the specified file(s)]:env-file' \\\n+        '--inspect[Activate Bun'\"'\"'s Debugger]:inspect' \\\n+        '--inspect-wait[Activate Bun'\"'\"'s Debugger, wait for a connection before executing]:inspect-wait' \\\n+        '--inspect-brk[Activate Bun'\"'\"'s Debugger, set breakpoint on first line of code and wait]:inspect-brk' \\\n+        '--hot[Enable auto reload in bun'\"'\"'s JavaScript runtime]' \\\n+        '--watch[Automatically restart bun'\"'\"'s JavaScript runtime on file change]' \\\n+        '--no-install[Disable auto install in bun'\"'\"'s JavaScript runtime]' \\\n+        '--install[Install dependencies automatically when no node_modules are present, default: \\\"auto\\\". \\\"force\\\" to ignore node_modules, fallback to install any missing]:install' \\\n+        '--prefer-offline[Skip staleness checks for packages in bun'\"'\"'s JavaScript runtime and resolve from disk]' \\\n+        '--prefer-latest[Use the latest matching versions of packages in bun'\"'\"'s JavaScript runtime, always checking npm]' \\\n+        '--dump-environment-variables[Dump environment variables from .env and process as JSON and quit. Useful for debugging]' \\\n+        '--dump-limits[Dump system limits. Useful for debugging]' &&",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2106084393",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19899,
        "pr_file": "completions/bun.zsh",
        "discussion_id": "2106084393",
        "commented_code": "@@ -453,7 +479,39 @@ _bun_run_completion() {\n         '--prefer-latest[Use the latest matching versions of packages in bun'\"'\"'s JavaScript runtime, always checking npm]' \\\n         '--silent[Don'\"'\"'t repeat the command for bun run]' \\\n         '--dump-environment-variables[Dump environment variables from .env and process as JSON and quit. Useful for debugging]' \\\n-        '--dump-limits[Dump system limits. Userful for debugging]' &&\n+        '--dump-limits[Dump system limits. Useful for debugging]' \\\n+        '--timeout[Set the per-test timeout in milliseconds, default is 5000.]:timeout' \\\n+        '--update-snapshots[Update snapshot files]' \\\n+        '--rerun-each[Re-run each test file <NUMBER> times, helps catch certain bugs]:rerun' \\\n+        '--only[Only run tests that are marked with \"test.only()\"]' \\\n+        '--todo[Include tests that are marked with \"test.todo()\"]' \\\n+        '--coverage[Generate a coverage profile]' \\\n+        '--coverage-reporter[Report coverage in \"text\" and/or \"lcov\". Defaults to \"text\".]:coverage-reporter' \\\n+        '--coverage-dir[Directory for coverage files. Defaults to \"coverage\".]:coverage-dir' \\\n+        '--bail[Exit the test suite after <NUMBER> failures. If you do not specify a number, it defaults to 1.]:bail' \\\n+        '--test-name-pattern[Run only tests with a name that matches the given regex]:pattern' \\\n+        '-t[Run only tests with a name that matches the given regex]:pattern' \\\n+        '--minify[Enable all minification flags]' \\\n+        '--minify-syntax[Minify syntax and inline data]' \\\n+        '--minify-whitespace[Minify whitespace]' \\\n+        '--minify-identifiers[Minify identifiers]' \\\n+        '--sourcemap[Generate sourcemaps]:sourcemap' \\\n+        '--target[The intended execution environment for the bundle. \"browser\", \"bun\" or \"node\"]:target' \\\n+        '--splitting[Whether to enable code splitting (requires --outdir)]' \\\n+        '--compile[Generate a standalone binary from a TypeScript or JavaScript file]' \\\n+        '--format[Specifies the module format to be used in the generated bundles]:format' \\\n+        '--env-file[Load environment variables from the specified file(s)]:env-file' \\\n+        '--inspect[Activate Bun'\"'\"'s Debugger]:inspect' \\\n+        '--inspect-wait[Activate Bun'\"'\"'s Debugger, wait for a connection before executing]:inspect-wait' \\\n+        '--inspect-brk[Activate Bun'\"'\"'s Debugger, set breakpoint on first line of code and wait]:inspect-brk' \\\n+        '--hot[Enable auto reload in bun'\"'\"'s JavaScript runtime]' \\\n+        '--watch[Automatically restart bun'\"'\"'s JavaScript runtime on file change]' \\\n+        '--no-install[Disable auto install in bun'\"'\"'s JavaScript runtime]' \\\n+        '--install[Install dependencies automatically when no node_modules are present, default: \\\"auto\\\". \\\"force\\\" to ignore node_modules, fallback to install any missing]:install' \\\n+        '--prefer-offline[Skip staleness checks for packages in bun'\"'\"'s JavaScript runtime and resolve from disk]' \\\n+        '--prefer-latest[Use the latest matching versions of packages in bun'\"'\"'s JavaScript runtime, always checking npm]' \\\n+        '--dump-environment-variables[Dump environment variables from .env and process as JSON and quit. Useful for debugging]' \\\n+        '--dump-limits[Dump system limits. Useful for debugging]' &&",
        "comment_created_at": "2025-05-25T04:51:08+00:00",
        "comment_author": "Copilot",
        "comment_body": "The `--dump-environment-variables` and `--dump-limits` flags are declared twice in the `run` completion block; remove duplicates to avoid confusion and reduce maintenance overhead.\n```suggestion\n        '--dump-environment-variables[Dump environment variables from .env and process as JSON and quit. Useful for debugging]' &&\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2106084456",
    "pr_number": 19899,
    "pr_file": "completions/bun.bash",
    "created_at": "2025-05-25T04:51:21+00:00",
    "commented_code": "local SUBCOMMANDS=\"dev bun create run install add remove upgrade completions discord help init pm x test repl update outdated link unlink build\";\n \n-    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js\";\n+    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js\";",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2106084456",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19899,
        "pr_file": "completions/bun.bash",
        "discussion_id": "2106084456",
        "commented_code": "@@ -84,15 +84,15 @@ _bun_completions() {\n \n     local SUBCOMMANDS=\"dev bun create run install add remove upgrade completions discord help init pm x test repl update outdated link unlink build\";\n \n-    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js\";\n+    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js\";",
        "comment_created_at": "2025-05-25T04:51:21+00:00",
        "comment_author": "graphite-app[bot]",
        "comment_body": "There are duplicate flags in the `GLOBAL_OPTIONS[LONG_OPTIONS]` string. The flags `--extension-order`, `--jsx-factory`, and `--jsx-fragment` each appear twice in the string. These duplicates should be removed to maintain a clean and accurate list of options.\n\n*Spotted by [Diamond](https://app.graphite.dev/diamond/?org=oven-sh&ref=ai-review-comment)*<i class='graphite__hidden'><br /><br />Is this helpful? React \ud83d\udc4d or \ud83d\udc4e to let us know.</i>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2106086012",
    "pr_number": 19899,
    "pr_file": "completions/bun.bash",
    "created_at": "2025-05-25T05:00:17+00:00",
    "commented_code": "local SUBCOMMANDS=\"dev bun create run install add remove upgrade completions discord help init pm x test repl update outdated link unlink build\";\n \n-    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js\";\n+    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js --minify --minify-syntax --minify-whitespace --minify-identifiers --sourcemap --target --splitting --compile --format --env-file --inspect --inspect-wait --inspect-brk --hot --watch --no-install --install --prefer-offline --prefer-latest\";",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2106086012",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19899,
        "pr_file": "completions/bun.bash",
        "discussion_id": "2106086012",
        "commented_code": "@@ -84,15 +84,15 @@ _bun_completions() {\n \n     local SUBCOMMANDS=\"dev bun create run install add remove upgrade completions discord help init pm x test repl update outdated link unlink build\";\n \n-    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js\";\n+    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js --minify --minify-syntax --minify-whitespace --minify-identifiers --sourcemap --target --splitting --compile --format --env-file --inspect --inspect-wait --inspect-brk --hot --watch --no-install --install --prefer-offline --prefer-latest\";",
        "comment_created_at": "2025-05-25T05:00:17+00:00",
        "comment_author": "graphite-app[bot]",
        "comment_body": "I noticed duplicate flags in the `GLOBAL_OPTIONS[LONG_OPTIONS]` string: `--jsx-factory` and `--jsx-fragment` each appear twice in the list. One set of these duplicates should be removed to prevent potential issues with command-line argument parsing.\n\n*Spotted by [Diamond](https://app.graphite.dev/diamond/?org=oven-sh&ref=ai-review-comment)*<i class='graphite__hidden'><br /><br />Is this helpful? React \ud83d\udc4d or \ud83d\udc4e to let us know.</i>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2106086016",
    "pr_number": 19899,
    "pr_file": "completions/bun.bash",
    "created_at": "2025-05-25T05:00:18+00:00",
    "commented_code": "local SUBCOMMANDS=\"dev bun create run install add remove upgrade completions discord help init pm x test repl update outdated link unlink build\";\n \n-    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js\";\n+    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js --minify --minify-syntax --minify-whitespace --minify-identifiers --sourcemap --target --splitting --compile --format --env-file --inspect --inspect-wait --inspect-brk --hot --watch --no-install --install --prefer-offline --prefer-latest\";",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2106086016",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19899,
        "pr_file": "completions/bun.bash",
        "discussion_id": "2106086016",
        "commented_code": "@@ -84,15 +84,15 @@ _bun_completions() {\n \n     local SUBCOMMANDS=\"dev bun create run install add remove upgrade completions discord help init pm x test repl update outdated link unlink build\";\n \n-    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js\";\n+    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js --minify --minify-syntax --minify-whitespace --minify-identifiers --sourcemap --target --splitting --compile --format --env-file --inspect --inspect-wait --inspect-brk --hot --watch --no-install --install --prefer-offline --prefer-latest\";",
        "comment_created_at": "2025-05-25T05:00:18+00:00",
        "comment_author": "graphite-app[bot]",
        "comment_body": "I noticed that `--env-file` appears twice in the `GLOBAL_OPTIONS[LONG_OPTIONS]` string. This duplication should be removed to prevent potential issues with command-line argument parsing.\n```suggestion\n    GLOBAL_OPTIONS[LONG_OPTIONS]=\"--use --cwd --bunfile --server-bunfile --config --disable-react-fast-refresh --disable-hmr --env-file --extension-order --jsx-factory --jsx-fragment --jsx-import-source --jsx-production --jsx-runtime --main-fields --no-summary --version --platform --public-dir --tsconfig-override --define --external --help --inject --loader --origin --port --dump-environment-variables --dump-limits --disable-bun-js --minify --minify-syntax --minify-whitespace --minify-identifiers --sourcemap --target --splitting --compile --format --inspect --inspect-wait --inspect-brk --hot --watch --no-install --install --prefer-offline --prefer-latest\";\n```\n  \n\n*Spotted by [Diamond](https://app.graphite.dev/diamond/?org=oven-sh&ref=ai-review-comment)*<i class='graphite__hidden'><br /><br />Is this helpful? React \ud83d\udc4d or \ud83d\udc4e to let us know.</i>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2106086228",
    "pr_number": 19899,
    "pr_file": "completions/bun.zsh",
    "created_at": "2025-05-25T05:01:42+00:00",
    "commented_code": "'--watch[Automatically restart bun'\"'\"'s JavaScript runtime on file change]' \\\n         '--no-install[Disable auto install in bun'\"'\"'s JavaScript runtime]' \\\n         '--install[Install dependencies automatically when no node_modules are present, default: \"auto\". \"force\" to ignore node_modules, fallback to install any missing]: :->install_' \\\n-        '-i[Automatically install dependencies and use global cache in bun'\"'\"'s runtime, equivalent to --install=fallback'] \\\n+        '-i[Automatically install dependencies and use global cache in bun'\"'\"'s runtime, equivalent to --install=fallback'] \\",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2106086228",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19899,
        "pr_file": "completions/bun.zsh",
        "discussion_id": "2106086228",
        "commented_code": "@@ -448,12 +474,12 @@ _bun_run_completion() {\n         '--watch[Automatically restart bun'\"'\"'s JavaScript runtime on file change]' \\\n         '--no-install[Disable auto install in bun'\"'\"'s JavaScript runtime]' \\\n         '--install[Install dependencies automatically when no node_modules are present, default: \"auto\". \"force\" to ignore node_modules, fallback to install any missing]: :->install_' \\\n-        '-i[Automatically install dependencies and use global cache in bun'\"'\"'s runtime, equivalent to --install=fallback'] \\\n+        '-i[Automatically install dependencies and use global cache in bun'\"'\"'s runtime, equivalent to --install=fallback'] \\  ",
        "comment_created_at": "2025-05-25T05:01:42+00:00",
        "comment_author": "graphite-app[bot]",
        "comment_body": "There's a syntax error in the zsh completion script. The line has a trailing backslash and space after the closing quote which will cause the completion to fail. The line should be modified to remove the trailing `\\ ` characters:\n\n```diff\n- '-i[Automatically install dependencies and use global cache in bun'\"'\"'s runtime, equivalent to --install=fallback'] \\  \n+ '-i[Automatically install dependencies and use global cache in bun'\"'\"'s runtime, equivalent to --install=fallback']' \\\n```\n\nThis ensures proper zsh syntax for command completion.\n```suggestion\n        '-i[Automatically install dependencies and use global cache in bun'\"'\"'s runtime, equivalent to --install=fallback]' \\\n```\n  \n\n*Spotted by [Diamond](https://app.graphite.dev/diamond/?org=oven-sh&ref=ai-review-comment)*<i class='graphite__hidden'><br /><br />Is this helpful? React \ud83d\udc4d or \ud83d\udc4e to let us know.</i>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2175575427",
    "pr_number": 20659,
    "pr_file": "src/bun.js/bindings/v8/v8_api_internal.h",
    "created_at": "2025-06-30T17:33:30+00:00",
    "commented_code": "#include \"v8_internal.h\"\n \n namespace v8 {\n+\n+class Isolate;\n+template<typename T>\n+class Local;\n+\n+template<typename T>\n+class Local;\n+class Value;\n+\n+template<typename T>\n+class Local;\n+class Data;\n+\n+template<typename T>\n+class Handle;",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2175575427",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 20659,
        "pr_file": "src/bun.js/bindings/v8/v8_api_internal.h",
        "discussion_id": "2175575427",
        "commented_code": "@@ -4,12 +4,29 @@\n #include \"v8_internal.h\"\n \n namespace v8 {\n+\n+class Isolate;\n+template<typename T>\n+class Local;\n+\n+template<typename T>\n+class Local;\n+class Value;\n+\n+template<typename T>\n+class Local;\n+class Data;\n+\n+template<typename T>\n+class Handle;",
        "comment_created_at": "2025-06-30T17:33:30+00:00",
        "comment_author": "190n",
        "comment_body": "we don't need to declare `Local` 3 times, and there's no such thing as `Handle`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019687458",
    "pr_number": 18469,
    "pr_file": "src/bun.js/webcore/response.zig",
    "created_at": "2025-03-29T03:19:59+00:00",
    "commented_code": "did_succeed = true;\n         return bun.new(Response, response).toJS(globalThis);\n     }\n+\n+    fn isValidRedirectStatus(status: u16) bool {\n+        return status == 301 or status == 302 or status == 303 or status == 307 or status == 308;",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2019687458",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 18469,
        "pr_file": "src/bun.js/webcore/response.zig",
        "discussion_id": "2019687458",
        "commented_code": "@@ -481,6 +481,11 @@ pub const Response = struct {\n         did_succeed = true;\n         return bun.new(Response, response).toJS(globalThis);\n     }\n+\n+    fn isValidRedirectStatus(status: u16) bool {\n+        return status == 301 or status == 302 or status == 303 or status == 307 or status == 308;",
        "comment_created_at": "2025-03-29T03:19:59+00:00",
        "comment_author": "DonIsaac",
        "comment_body": "Consider a switch statement",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2165539495",
    "pr_number": 20481,
    "pr_file": "src/http/async_http.zig",
    "created_at": "2025-06-25T03:20:15+00:00",
    "commented_code": "+pub const AsyncHTTP = struct {",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2165539495",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 20481,
        "pr_file": "src/http/async_http.zig",
        "discussion_id": "2165539495",
        "commented_code": "@@ -0,0 +1,523 @@\n+pub const AsyncHTTP = struct {",
        "comment_created_at": "2025-06-25T03:20:15+00:00",
        "comment_author": "Jarred-Sumner",
        "comment_body": "This should be a top-level struct with \r\n```zig\r\nconst AsyncHTTP = @This();\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2165540416",
    "pr_number": 20481,
    "pr_file": "src/http/headers.zig",
    "created_at": "2025-06-25T03:20:48+00:00",
    "commented_code": "+pub const Headers = struct {",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2165540416",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 20481,
        "pr_file": "src/http/headers.zig",
        "discussion_id": "2165540416",
        "commented_code": "@@ -0,0 +1,183 @@\n+pub const Headers = struct {",
        "comment_created_at": "2025-06-25T03:20:48+00:00",
        "comment_author": "Jarred-Sumner",
        "comment_body": "This should be a top-level struct.\r\n```suggestion\r\nconst Headers = @This();\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2123169471",
    "pr_number": 14308,
    "pr_file": "src/Progress.zig",
    "created_at": "2025-06-03T08:50:22+00:00",
    "commented_code": "const completed_items = @atomicLoad(usize, &node.unprotected_completed_items, .monotonic);\n             const current_item = completed_items + 1;\n             if (node.name.len != 0 or eti > 0) {\n-                if (node.name.len != 0) {\n-                    self.bufWrite(&end, \"{s}\", .{node.name});\n-                    need_ellipse = true;\n-                }\n                 if (eti > 0) {\n                     if (need_ellipse) self.bufWrite(&end, \" \", .{});\n-                    self.bufWrite(&end, \"[{d}/{d}{s}] \", .{ current_item, eti, node.unit });\n+                    self.bufWrite(&end, \"[{d}/{d}{s}]\", .{ current_item, eti, node.unit });\n                     need_ellipse = false;\n                 } else if (completed_items != 0) {\n                     if (need_ellipse) self.bufWrite(&end, \" \", .{});\n-                    self.bufWrite(&end, \"[{d}{s}] \", .{ current_item, node.unit });\n+                    self.bufWrite(&end, \"[{d}{s}]\", .{ current_item, node.unit });\n                     need_ellipse = false;\n                 }\n+                if (node.name.len != 0) {\n+                    self.bufWrite(&end, \"{s}\", .{node.name});",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2123169471",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 14308,
        "pr_file": "src/Progress.zig",
        "discussion_id": "2123169471",
        "commented_code": "@@ -326,19 +326,19 @@ fn refreshWithHeldLock(self: *Progress) void {\n             const completed_items = @atomicLoad(usize, &node.unprotected_completed_items, .monotonic);\n             const current_item = completed_items + 1;\n             if (node.name.len != 0 or eti > 0) {\n-                if (node.name.len != 0) {\n-                    self.bufWrite(&end, \"{s}\", .{node.name});\n-                    need_ellipse = true;\n-                }\n                 if (eti > 0) {\n                     if (need_ellipse) self.bufWrite(&end, \" \", .{});\n-                    self.bufWrite(&end, \"[{d}/{d}{s}] \", .{ current_item, eti, node.unit });\n+                    self.bufWrite(&end, \"[{d}/{d}{s}]\", .{ current_item, eti, node.unit });\n                     need_ellipse = false;\n                 } else if (completed_items != 0) {\n                     if (need_ellipse) self.bufWrite(&end, \" \", .{});\n-                    self.bufWrite(&end, \"[{d}{s}] \", .{ current_item, node.unit });\n+                    self.bufWrite(&end, \"[{d}{s}]\", .{ current_item, node.unit });\n                     need_ellipse = false;\n                 }\n+                if (node.name.len != 0) {\n+                    self.bufWrite(&end, \"{s}\", .{node.name});",
        "comment_created_at": "2025-06-03T08:50:22+00:00",
        "comment_author": "graphite-app[bot]",
        "comment_body": "The current implementation is missing a space between the counter and package name. To maintain proper spacing, consider modifying line 339 to include a leading space:\n\n```zig\nself.bufWrite(&end, \" {s}\", .{node.name});\n```\n\nThis ensures consistent formatting in the output, with appropriate separation between the counter and the package name.\n```suggestion\n                if (node.name.len != 0) {\n                    self.bufWrite(&end, \" {s}\", .{node.name});\n\n```\n  \n\n*Spotted by [Diamond](https://app.graphite.dev/diamond/?org=oven-sh&ref=ai-review-comment)*<i class='graphite__hidden'><br /><br />Is this helpful? React \ud83d\udc4d or \ud83d\udc4e to let us know.</i>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2133071529",
    "pr_number": 20240,
    "pr_file": "src/async/posix_event_loop.zig",
    "created_at": "2025-06-06T23:27:37+00:00",
    "commented_code": "this.status = .inactive;\n \n         if (comptime @TypeOf(event_loop_ctx_) == JSC.EventLoopHandle) {\n+            if (comptime bun.Environment.debug_checks) {\n+                event_loop_ctx_.assertEventLoopThread();\n+            }\n+\n             event_loop_ctx_.loop().unref();\n             return;\n         }\n         const event_loop_ctx = JSC.AbstractVM(event_loop_ctx_);\n+        if (comptime Environment.debug_checks) {",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2133071529",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 20240,
        "pr_file": "src/async/posix_event_loop.zig",
        "discussion_id": "2133071529",
        "commented_code": "@@ -55,10 +55,18 @@ pub const KeepAlive = struct {\n         this.status = .inactive;\n \n         if (comptime @TypeOf(event_loop_ctx_) == JSC.EventLoopHandle) {\n+            if (comptime bun.Environment.debug_checks) {\n+                event_loop_ctx_.assertEventLoopThread();\n+            }\n+\n             event_loop_ctx_.loop().unref();\n             return;\n         }\n         const event_loop_ctx = JSC.AbstractVM(event_loop_ctx_);\n+        if (comptime Environment.debug_checks) {",
        "comment_created_at": "2025-06-06T23:27:37+00:00",
        "comment_author": "graphite-app[bot]",
        "comment_body": "It appears the namespace qualifier `bun.` is missing before `Environment.debug_checks` in this conditional. For consistency with the other similar checks in this file, it should be:\n\n```zig\nif (comptime bun.Environment.debug_checks) {\n```\n\nThis will ensure the code maintains a consistent style and references the correct namespace.\n```suggestion\n        if (comptime bun.Environment.debug_checks) {\n```\n  \n\n*Spotted by [Diamond](https://app.graphite.dev/diamond/?org=oven-sh&ref=ai-review-comment)*<i class='graphite__hidden'><br /><br />Is this helpful? React \ud83d\udc4d or \ud83d\udc4e to let us know.</i>",
        "pr_file_module": null
      }
    ]
  }
]