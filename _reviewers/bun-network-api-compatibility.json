[
  {
    "discussion_id": "2108157394",
    "pr_number": 19410,
    "pr_file": "packages/bun-types/bun.d.ts",
    "created_at": "2025-05-27T04:49:54+00:00",
    "commented_code": "timeout(seconds: number): void;\n \n     /**\n-     * Forcefully close the socket. The other end may not receive all data, and\n-     * the socket will be closed immediately.\n+     * Forcefully closes the socket connection immediately. This is an abrupt termination, unlike the graceful shutdown initiated by `end()`.\n+     * It uses `SO_LINGER` with `l_onoff=1` and `l_linger=0` before calling `close(2)`.\n+     * Consider using `close()` or `end()` for graceful shutdowns.",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2108158980",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19410,
        "pr_file": "packages/bun-types/bun.d.ts",
        "discussion_id": "2108157394",
        "commented_code": "@@ -5886,20 +5931,33 @@ declare module \"bun\" {\n     timeout(seconds: number): void;\n \n     /**\n-     * Forcefully close the socket. The other end may not receive all data, and\n-     * the socket will be closed immediately.\n+     * Forcefully closes the socket connection immediately. This is an abrupt termination, unlike the graceful shutdown initiated by `end()`.\n+     * It uses `SO_LINGER` with `l_onoff=1` and `l_linger=0` before calling `close(2)`.\n+     * Consider using `close()` or `end()` for graceful shutdowns.",
        "comment_created_at": "2025-05-27T04:51:36+00:00",
        "comment_author": "alii",
        "comment_body": "@Jarred-Sumner true^ is the suggestion for end/shutdown correct?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2112745418",
    "pr_number": 18962,
    "pr_file": "src/js/node/net.ts",
    "created_at": "2025-05-28T21:00:41+00:00",
    "commented_code": "process.nextTick(endNT, socket, callback);\n };\n \n+Object.defineProperty(Socket.prototype, \"localAddress\", {",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2112745418",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 18962,
        "pr_file": "src/js/node/net.ts",
        "discussion_id": "2112745418",
        "commented_code": "@@ -944,15 +1165,21 @@ Socket.prototype._final = function _final(callback) {\n   process.nextTick(endNT, socket, callback);\n };\n \n+Object.defineProperty(Socket.prototype, \"localAddress\", {",
        "comment_created_at": "2025-05-28T21:00:41+00:00",
        "comment_author": "Jarred-Sumner",
        "comment_body": "does this descriptor match node?",
        "pr_file_module": null
      },
      {
        "comment_id": "2112773281",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 18962,
        "pr_file": "src/js/node/net.ts",
        "discussion_id": "2112745418",
        "commented_code": "@@ -944,15 +1165,21 @@ Socket.prototype._final = function _final(callback) {\n   process.nextTick(endNT, socket, callback);\n };\n \n+Object.defineProperty(Socket.prototype, \"localAddress\", {",
        "comment_created_at": "2025-05-28T21:18:21+00:00",
        "comment_author": "nektro",
        "comment_body": "yes https://github.com/nodejs/node/blob/v24.0.0/lib/net.js#L923",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2076588927",
    "pr_number": 19443,
    "pr_file": "src/js/node/tls.ts",
    "created_at": "2025-05-07T00:44:01+00:00",
    "commented_code": "if (typeof rejectUnauthorized !== \"undefined\") {\n         this._rejectUnauthorized = rejectUnauthorized;\n       } else this._rejectUnauthorized = rejectUnauthorizedDefault;\n+\n+      if (typeof options.ciphers !== \"undefined\") {\n+        if (typeof options.ciphers !== \"string\") {\n+          throw $ERR_INVALID_ARG_TYPE(\"options.ciphers\", \"string\", options.ciphers);\n+        }\n+\n+        const requested = options.ciphers.split(\":\");\n+        for (const r of requested) {\n+          if (!DEFAULT_CIPHERS_SET.has(r)) {\n+            throw new Error(\"No cipher match\");",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2076588927",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19443,
        "pr_file": "src/js/node/tls.ts",
        "discussion_id": "2076588927",
        "commented_code": "@@ -562,6 +562,21 @@ function Server(options, secureConnectionListener): void {\n       if (typeof rejectUnauthorized !== \"undefined\") {\n         this._rejectUnauthorized = rejectUnauthorized;\n       } else this._rejectUnauthorized = rejectUnauthorizedDefault;\n+\n+      if (typeof options.ciphers !== \"undefined\") {\n+        if (typeof options.ciphers !== \"string\") {\n+          throw $ERR_INVALID_ARG_TYPE(\"options.ciphers\", \"string\", options.ciphers);\n+        }\n+\n+        const requested = options.ciphers.split(\":\");\n+        for (const r of requested) {\n+          if (!DEFAULT_CIPHERS_SET.has(r)) {\n+            throw new Error(\"No cipher match\");",
        "comment_created_at": "2025-05-07T00:44:01+00:00",
        "comment_author": "heimskr",
        "comment_body": "Does this match what Node does, or is there a more specific error type for this?",
        "pr_file_module": null
      },
      {
        "comment_id": "2076606739",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19443,
        "pr_file": "src/js/node/tls.ts",
        "discussion_id": "2076588927",
        "commented_code": "@@ -562,6 +562,21 @@ function Server(options, secureConnectionListener): void {\n       if (typeof rejectUnauthorized !== \"undefined\") {\n         this._rejectUnauthorized = rejectUnauthorized;\n       } else this._rejectUnauthorized = rejectUnauthorizedDefault;\n+\n+      if (typeof options.ciphers !== \"undefined\") {\n+        if (typeof options.ciphers !== \"string\") {\n+          throw $ERR_INVALID_ARG_TYPE(\"options.ciphers\", \"string\", options.ciphers);\n+        }\n+\n+        const requested = options.ciphers.split(\":\");\n+        for (const r of requested) {\n+          if (!DEFAULT_CIPHERS_SET.has(r)) {\n+            throw new Error(\"No cipher match\");",
        "comment_created_at": "2025-05-07T01:07:09+00:00",
        "comment_author": "heimskr",
        "comment_body": "To match Node, the error should be of type `Error` (as it already is) and match `{\"library\":\"SSL routines\",\"reason\":\"no cipher match\",\"code\":\"ERR_SSL_NO_CIPHER_MATCH\"}`.",
        "pr_file_module": null
      },
      {
        "comment_id": "2078339989",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19443,
        "pr_file": "src/js/node/tls.ts",
        "discussion_id": "2076588927",
        "commented_code": "@@ -562,6 +562,21 @@ function Server(options, secureConnectionListener): void {\n       if (typeof rejectUnauthorized !== \"undefined\") {\n         this._rejectUnauthorized = rejectUnauthorized;\n       } else this._rejectUnauthorized = rejectUnauthorizedDefault;\n+\n+      if (typeof options.ciphers !== \"undefined\") {\n+        if (typeof options.ciphers !== \"string\") {\n+          throw $ERR_INVALID_ARG_TYPE(\"options.ciphers\", \"string\", options.ciphers);\n+        }\n+\n+        const requested = options.ciphers.split(\":\");\n+        for (const r of requested) {\n+          if (!DEFAULT_CIPHERS_SET.has(r)) {\n+            throw new Error(\"No cipher match\");",
        "comment_created_at": "2025-05-07T19:25:03+00:00",
        "comment_author": "alii",
        "comment_body": "Fixed in #c37638a3e9681ed81c062c05cc303f810f9ce352",
        "pr_file_module": null
      }
    ]
  }
]