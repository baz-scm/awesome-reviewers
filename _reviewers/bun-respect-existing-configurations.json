[
  {
    "discussion_id": "2198211228",
    "pr_number": 20945,
    "pr_file": "packages/bun-release/scripts/upload-npm.ts",
    "created_at": "2025-07-10T16:37:21+00:00",
    "commented_code": "mkdirSync(dirname(join(cwd, exe)), { recursive: true });\n   write(join(cwd, exe), await bun.async(\"arraybuffer\"));\n   chmod(join(cwd, exe), 0o755);\n+  const osName =\n+    {\n+      darwin: \"macOS\",\n+      win32: \"windows\",\n+      linux: \"linux\",\n+    }[os] || os;\n   writeJson(join(cwd, \"package.json\"), {\n     name: module,\n     version: version,\n-    description: \"This is the macOS arm64 binary for Bun, a fast all-in-one JavaScript runtime.\",\n+    description: `This is the ${osName} ${arch} binary for Bun, a fast all-in-one JavaScript runtime.`,\n     homepage: \"https://bun.com\",\n     bugs: \"https://github.com/oven-sh/issues\",",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2198211228",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 20945,
        "pr_file": "packages/bun-release/scripts/upload-npm.ts",
        "discussion_id": "2198211228",
        "commented_code": "@@ -137,17 +137,24 @@ async function buildModule(\n   mkdirSync(dirname(join(cwd, exe)), { recursive: true });\n   write(join(cwd, exe), await bun.async(\"arraybuffer\"));\n   chmod(join(cwd, exe), 0o755);\n+  const osName =\n+    {\n+      darwin: \"macOS\",\n+      win32: \"windows\",\n+      linux: \"linux\",\n+    }[os] || os;\n   writeJson(join(cwd, \"package.json\"), {\n     name: module,\n     version: version,\n-    description: \"This is the macOS arm64 binary for Bun, a fast all-in-one JavaScript runtime.\",\n+    description: `This is the ${osName} ${arch} binary for Bun, a fast all-in-one JavaScript runtime.`,\n     homepage: \"https://bun.com\",\n     bugs: \"https://github.com/oven-sh/issues\",",
        "comment_created_at": "2025-07-10T16:37:21+00:00",
        "comment_author": "graphite-app[bot]",
        "comment_body": "The bugs URL `https://github.com/oven-sh/issues` appears to be incorrect. It should point to the issues page of the actual repository, which would be `https://github.com/oven-sh/bun/issues`. This ensures users can properly report issues through the npm package metadata.\n```suggestion\n    bugs: \"https://github.com/oven-sh/bun/issues\",\n```\n  \n\n*Spotted by [Diamond](https://app.graphite.dev/diamond/?org=oven-sh&ref=ai-review-comment)*<i class='graphite__hidden'><br /><br />Is this helpful? React \ud83d\udc4d or \ud83d\udc4e to let us know.</i>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2147423218",
    "pr_number": 13890,
    "pr_file": "packages/bun-lambda/scripts/build-layer.ts",
    "created_at": "2025-06-15T04:29:04+00:00",
    "commented_code": "description: \"If the layer should be public.\",\n       default: false,\n     }),\n+    profile: Flags.string({\n+      description: \"The AWS CLI profile to use.\",\n+      multiple: false,\n+      default: \"default\",",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2147423218",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 13890,
        "pr_file": "packages/bun-lambda/scripts/build-layer.ts",
        "discussion_id": "2147423218",
        "commented_code": "@@ -42,6 +42,11 @@ export class BuildCommand extends Command {\n       description: \"If the layer should be public.\",\n       default: false,\n     }),\n+    profile: Flags.string({\n+      description: \"The AWS CLI profile to use.\",\n+      multiple: false,\n+      default: \"default\",",
        "comment_created_at": "2025-06-15T04:29:04+00:00",
        "comment_author": "hiett",
        "comment_body": "I don't think this should be hardcoded as default, because another tool or the developer is likely setting the AWS default profile env var to something else. It's unlikely someone's actual default profile is named default.\n\nInstead, if the value is not provided, can we omit the --profile from the ran child command? That way, the AWS CLI falls back to its internal default logic which other tools rely on.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2134980282",
    "pr_number": 20272,
    "pr_file": "packages/bun-lambda/scripts/publish-layer.ts",
    "created_at": "2025-06-09T03:37:38+00:00",
    "commented_code": "{ exit: 1 },\n       );\n     }\n-    const { layer, region, arch, output, public: isPublic } = flags;\n+    const { layer, region, profile, arch, output, public: isPublic } = flags;\n+    if (profile) {\n+      this.log(\"Using AWS profile:\", profile);\n+      // prettier-ignore\n+      this.#aws([\"configure\", \"set\", \"profile.\" + profile + \".output\", \"json\"], profile);\n+    }\n     if (region.includes(\"*\")) {\n       // prettier-ignore\n       const result = this.#aws([\"ec2\", \"describe-regions\", \"--query\", \"Regions[].RegionName\", \"--output\", \"json\"]);",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2134980282",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 20272,
        "pr_file": "packages/bun-lambda/scripts/publish-layer.ts",
        "discussion_id": "2134980282",
        "commented_code": "@@ -30,7 +31,12 @@ export class PublishCommand extends BuildCommand {\n         { exit: 1 },\n       );\n     }\n-    const { layer, region, arch, output, public: isPublic } = flags;\n+    const { layer, region, profile, arch, output, public: isPublic } = flags;\n+    if (profile) {\n+      this.log(\"Using AWS profile:\", profile);\n+      // prettier-ignore\n+      this.#aws([\"configure\", \"set\", \"profile.\" + profile + \".output\", \"json\"], profile);\n+    }\n     if (region.includes(\"*\")) {\n       // prettier-ignore\n       const result = this.#aws([\"ec2\", \"describe-regions\", \"--query\", \"Regions[].RegionName\", \"--output\", \"json\"]);",
        "comment_created_at": "2025-06-09T03:37:38+00:00",
        "comment_author": "graphite-app[bot]",
        "comment_body": "The `profile` parameter is missing from this `#aws` method call, which means it will use the default AWS profile even when a user specifies a custom profile. This inconsistency would create a confusing experience where some commands respect the profile flag while others don't.\n\nTo maintain consistent behavior, please update this line to:\n\n```typescript\nconst result = this.#aws([\"ec2\", \"describe-regions\", \"--query\", \"Regions[].RegionName\", \"--output\", \"json\"], profile);\n```\n\nThis ensures the specified AWS profile is used consistently throughout all AWS CLI operations in this command.\n```suggestion\n      const result = this.#aws([\"ec2\", \"describe-regions\", \"--query\", \"Regions[].RegionName\", \"--output\", \"json\"], profile);\n```\n  \n\n*Spotted by [Diamond](https://app.graphite.dev/diamond/?org=oven-sh&ref=ai-review-comment)*<i class='graphite__hidden'><br /><br />Is this helpful? React \ud83d\udc4d or \ud83d\udc4e to let us know.</i>",
        "pr_file_module": null
      }
    ]
  }
]