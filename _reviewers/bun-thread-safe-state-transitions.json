[
  {
    "discussion_id": "2111144176",
    "pr_number": 19940,
    "pr_file": "src/bun.js/bindings/webcore/Worker.cpp",
    "created_at": "2025-05-28T07:28:17+00:00",
    "commented_code": "void Worker::terminate()\n {\n+\n+    // Don't try to terminate an already terminated worker\n+    if (m_terminationFlags & TerminatedFlag) {",
    "repo_full_name": "oven-sh/bun",
    "discussion_comments": [
      {
        "comment_id": "2111144176",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19940,
        "pr_file": "src/bun.js/bindings/webcore/Worker.cpp",
        "discussion_id": "2111144176",
        "commented_code": "@@ -261,6 +262,12 @@ ExceptionOr<void> Worker::postMessage(JSC::JSGlobalObject& state, JSC::JSValue m\n \n void Worker::terminate()\n {\n+\n+    // Don't try to terminate an already terminated worker\n+    if (m_terminationFlags & TerminatedFlag) {",
        "comment_created_at": "2025-05-28T07:28:17+00:00",
        "comment_author": "Jarred-Sumner",
        "comment_body": "This isn't threadsafe. Fortunately, the `fetch_or` call returns the previous value, so you can do the check there. ANd since it's an or, it won't unset the terminated flag.",
        "pr_file_module": null
      },
      {
        "comment_id": "2111154466",
        "repo_full_name": "oven-sh/bun",
        "pr_number": 19940,
        "pr_file": "src/bun.js/bindings/webcore/Worker.cpp",
        "discussion_id": "2111144176",
        "commented_code": "@@ -261,6 +262,12 @@ ExceptionOr<void> Worker::postMessage(JSC::JSGlobalObject& state, JSC::JSValue m\n \n void Worker::terminate()\n {\n+\n+    // Don't try to terminate an already terminated worker\n+    if (m_terminationFlags & TerminatedFlag) {",
        "comment_created_at": "2025-05-28T07:33:58+00:00",
        "comment_author": "alii",
        "comment_body": "Fixed in aa0d8b3bafc60bc3ed9d47511ecf3537ccacf6a4",
        "pr_file_module": null
      }
    ]
  }
]