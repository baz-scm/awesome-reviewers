[
  {
    "discussion_id": "2289960411",
    "pr_number": 22995,
    "pr_file": "apps/web/modules/settings/billing/components/BillingCredits.tsx",
    "created_at": "2025-08-21T06:15:22+00:00",
    "commented_code": "} = useForm<{ quantity: number }>({ defaultValues: { quantity: 50 } });\n \n   const params = useParamsWithFallback();\n-  const teamId = params.id ? Number(params.id) : undefined;\n+  const orgId = session.data?.user?.org?.id;\n+\n+  const parsedTeamId = Number(params.id);\n+  const teamId: number | undefined = Number.isFinite(parsedTeamId)\n+    ? parsedTeamId\n+    : typeof orgId === \"number\"\n+    ? orgId\n+    : undefined;\n+\n+  const tokens = (pathname ?? \"\").split(\"/\").filter(Boolean);\n+  const settingsIndex = tokens.indexOf(\"settings\");\n+  const isOrgScopedPath =\n+    settingsIndex >= 0 && [\"organizations\", \"teams\"].includes(tokens[settingsIndex + 1]);",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2289960411",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22995,
        "pr_file": "apps/web/modules/settings/billing/components/BillingCredits.tsx",
        "discussion_id": "2289960411",
        "commented_code": "@@ -66,7 +70,27 @@ export default function BillingCredits() {\n   } = useForm<{ quantity: number }>({ defaultValues: { quantity: 50 } });\n \n   const params = useParamsWithFallback();\n-  const teamId = params.id ? Number(params.id) : undefined;\n+  const orgId = session.data?.user?.org?.id;\n+\n+  const parsedTeamId = Number(params.id);\n+  const teamId: number | undefined = Number.isFinite(parsedTeamId)\n+    ? parsedTeamId\n+    : typeof orgId === \"number\"\n+    ? orgId\n+    : undefined;\n+\n+  const tokens = (pathname ?? \"\").split(\"/\").filter(Boolean);\n+  const settingsIndex = tokens.indexOf(\"settings\");\n+  const isOrgScopedPath =\n+    settingsIndex >= 0 && [\"organizations\", \"teams\"].includes(tokens[settingsIndex + 1]);",
        "comment_created_at": "2025-08-21T06:15:22+00:00",
        "comment_author": "hariombalhara",
        "comment_body": "Instead of checking based on path of the route, we should use Component props to configure this. This might break easily when we change routes or use it somewhere else.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1536623618",
    "pr_number": 14185,
    "pr_file": "packages/ui/components/form/select/Select.tsx",
    "created_at": "2024-03-23T12:13:24+00:00",
    "commented_code": "Group extends GroupBase<Option> = GroupBase<Option>\n > = Props<Option, IsMulti, Group> & { variant?: \"default\" | \"checkbox\"; \"data-testid\"?: string };\n \n+const Option = <\n+  Option,\n+  IsMulti extends boolean = false,\n+  Group extends GroupBase<Option> = GroupBase<Option>\n+>({\n+  data,\n+  ...props\n+}: OptionProps<Option, IsMulti, Group>) => {\n+  return (\n+    <components.Option data={data} {...props}>\n+      <>\n+        {props.children}\n+        {(data as { accepted?: boolean })?.accepted === false && (",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "1536623618",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 14185,
        "pr_file": "packages/ui/components/form/select/Select.tsx",
        "discussion_id": "1536623618",
        "commented_code": "@@ -15,6 +17,28 @@ export type SelectProps<\n   Group extends GroupBase<Option> = GroupBase<Option>\n > = Props<Option, IsMulti, Group> & { variant?: \"default\" | \"checkbox\"; \"data-testid\"?: string };\n \n+const Option = <\n+  Option,\n+  IsMulti extends boolean = false,\n+  Group extends GroupBase<Option> = GroupBase<Option>\n+>({\n+  data,\n+  ...props\n+}: OptionProps<Option, IsMulti, Group>) => {\n+  return (\n+    <components.Option data={data} {...props}>\n+      <>\n+        {props.children}\n+        {(data as { accepted?: boolean })?.accepted === false && (",
        "comment_created_at": "2024-03-23T12:13:24+00:00",
        "comment_author": "Amit91848",
        "comment_body": "Kinda hacky, was getting type errors, couldn't figure out how to resolve those.",
        "pr_file_module": null
      },
      {
        "comment_id": "1536653238",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 14185,
        "pr_file": "packages/ui/components/form/select/Select.tsx",
        "discussion_id": "1536623618",
        "commented_code": "@@ -15,6 +17,28 @@ export type SelectProps<\n   Group extends GroupBase<Option> = GroupBase<Option>\n > = Props<Option, IsMulti, Group> & { variant?: \"default\" | \"checkbox\"; \"data-testid\"?: string };\n \n+const Option = <\n+  Option,\n+  IsMulti extends boolean = false,\n+  Group extends GroupBase<Option> = GroupBase<Option>\n+>({\n+  data,\n+  ...props\n+}: OptionProps<Option, IsMulti, Group>) => {\n+  return (\n+    <components.Option data={data} {...props}>\n+      <>\n+        {props.children}\n+        {(data as { accepted?: boolean })?.accepted === false && (",
        "comment_created_at": "2024-03-23T15:54:02+00:00",
        "comment_author": "SomayChauhan",
        "comment_body": "I think changing the common UI component is not a good idea.\r\nwe can instead pass the `component` prop to the `Select`\r\ntake a look how option is implemented\r\n\r\nhttps://github.com/SomayChauhan/cal.com/blob/f3cb6d28a91244c1416b56667517aa6d4e012b8d/apps/web/components/eventtype/EventAvailabilityTab.tsx#L267C19-L267C55",
        "pr_file_module": null
      },
      {
        "comment_id": "1536759011",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 14185,
        "pr_file": "packages/ui/components/form/select/Select.tsx",
        "discussion_id": "1536623618",
        "commented_code": "@@ -15,6 +17,28 @@ export type SelectProps<\n   Group extends GroupBase<Option> = GroupBase<Option>\n > = Props<Option, IsMulti, Group> & { variant?: \"default\" | \"checkbox\"; \"data-testid\"?: string };\n \n+const Option = <\n+  Option,\n+  IsMulti extends boolean = false,\n+  Group extends GroupBase<Option> = GroupBase<Option>\n+>({\n+  data,\n+  ...props\n+}: OptionProps<Option, IsMulti, Group>) => {\n+  return (\n+    <components.Option data={data} {...props}>\n+      <>\n+        {props.children}\n+        {(data as { accepted?: boolean })?.accepted === false && (",
        "comment_created_at": "2024-03-24T07:40:08+00:00",
        "comment_author": "Amit91848",
        "comment_body": "That is what I was trying to find. Made changes tests should pass now.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1957780158",
    "pr_number": 19118,
    "pr_file": "apps/web/components/dialog/DeleteHistoryDialog.tsx",
    "created_at": "2025-02-17T08:08:42+00:00",
    "commented_code": "+import type { Dispatch, SetStateAction } from \"react\";\r\n+\r\n+import { useLocale } from \"@calcom/lib/hooks/useLocale\";\r\n+import { trpc } from \"@calcom/trpc\";\r\n+import { Button, Dialog, DialogContent, DialogFooter, DialogHeader, Icon } from \"@calcom/ui\";\r\n+import { showToast } from \"@calcom/ui\";\r\n+\r\n+interface IDeleteHistoryDialog {\r\n+  isOpenDialog: boolean;\r\n+  setIsOpenDialog: Dispatch<SetStateAction<boolean>>;\r\n+  bookingId: number;\r\n+}\r\n+\r\n+const DeleteHistoryDialog = (props: IDeleteHistoryDialog) => {\r\n+  const { t } = useLocale();\r\n+  const { isOpenDialog, setIsOpenDialog, bookingId } = props;\r\n+  const utils = trpc.useUtils();\r\n+\r\n+  const deleteHistoryBookingMutation = trpc.viewer.bookings.deleteHistory.useMutation({\r\n+    onSuccess: async () => {\r\n+      showToast(t(\"booking_delete_successfully\"), \"success\");\r\n+      setIsOpenDialog(false);\r\n+      utils.viewer.bookings.invalidate();\r\n+    },\r\n+    onError: (err) => {\r\n+      const message = `${err.data?.code}: ${t(err.message)}`;\r\n+      showToast(message || t(\"unable_to_delete_booking\"), \"error\");\r\n+    },\r\n+  });\r\n+\r\n+  const handleDelete = () => {\r\n+    deleteHistoryBookingMutation.mutate({ id: bookingId });\r\n+  };\r\n+\r\n+  return (\r\n+    <Dialog open={isOpenDialog} onOpenChange={setIsOpenDialog}>\r\n+      <DialogContent enableOverflow>",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "1957780158",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 19118,
        "pr_file": "apps/web/components/dialog/DeleteHistoryDialog.tsx",
        "discussion_id": "1957780158",
        "commented_code": "@@ -0,0 +1,68 @@\n+import type { Dispatch, SetStateAction } from \"react\";\r\n+\r\n+import { useLocale } from \"@calcom/lib/hooks/useLocale\";\r\n+import { trpc } from \"@calcom/trpc\";\r\n+import { Button, Dialog, DialogContent, DialogFooter, DialogHeader, Icon } from \"@calcom/ui\";\r\n+import { showToast } from \"@calcom/ui\";\r\n+\r\n+interface IDeleteHistoryDialog {\r\n+  isOpenDialog: boolean;\r\n+  setIsOpenDialog: Dispatch<SetStateAction<boolean>>;\r\n+  bookingId: number;\r\n+}\r\n+\r\n+const DeleteHistoryDialog = (props: IDeleteHistoryDialog) => {\r\n+  const { t } = useLocale();\r\n+  const { isOpenDialog, setIsOpenDialog, bookingId } = props;\r\n+  const utils = trpc.useUtils();\r\n+\r\n+  const deleteHistoryBookingMutation = trpc.viewer.bookings.deleteHistory.useMutation({\r\n+    onSuccess: async () => {\r\n+      showToast(t(\"booking_delete_successfully\"), \"success\");\r\n+      setIsOpenDialog(false);\r\n+      utils.viewer.bookings.invalidate();\r\n+    },\r\n+    onError: (err) => {\r\n+      const message = `${err.data?.code}: ${t(err.message)}`;\r\n+      showToast(message || t(\"unable_to_delete_booking\"), \"error\");\r\n+    },\r\n+  });\r\n+\r\n+  const handleDelete = () => {\r\n+    deleteHistoryBookingMutation.mutate({ id: bookingId });\r\n+  };\r\n+\r\n+  return (\r\n+    <Dialog open={isOpenDialog} onOpenChange={setIsOpenDialog}>\r\n+      <DialogContent enableOverflow>\r",
        "comment_created_at": "2025-02-17T08:08:42+00:00",
        "comment_author": "TusharBhatt1",
        "comment_body": "We can use `ConfirmationDialogContent` , you can take reference from `DeleteDialog.tsx`",
        "pr_file_module": null
      },
      {
        "comment_id": "1957781608",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 19118,
        "pr_file": "apps/web/components/dialog/DeleteHistoryDialog.tsx",
        "discussion_id": "1957780158",
        "commented_code": "@@ -0,0 +1,68 @@\n+import type { Dispatch, SetStateAction } from \"react\";\r\n+\r\n+import { useLocale } from \"@calcom/lib/hooks/useLocale\";\r\n+import { trpc } from \"@calcom/trpc\";\r\n+import { Button, Dialog, DialogContent, DialogFooter, DialogHeader, Icon } from \"@calcom/ui\";\r\n+import { showToast } from \"@calcom/ui\";\r\n+\r\n+interface IDeleteHistoryDialog {\r\n+  isOpenDialog: boolean;\r\n+  setIsOpenDialog: Dispatch<SetStateAction<boolean>>;\r\n+  bookingId: number;\r\n+}\r\n+\r\n+const DeleteHistoryDialog = (props: IDeleteHistoryDialog) => {\r\n+  const { t } = useLocale();\r\n+  const { isOpenDialog, setIsOpenDialog, bookingId } = props;\r\n+  const utils = trpc.useUtils();\r\n+\r\n+  const deleteHistoryBookingMutation = trpc.viewer.bookings.deleteHistory.useMutation({\r\n+    onSuccess: async () => {\r\n+      showToast(t(\"booking_delete_successfully\"), \"success\");\r\n+      setIsOpenDialog(false);\r\n+      utils.viewer.bookings.invalidate();\r\n+    },\r\n+    onError: (err) => {\r\n+      const message = `${err.data?.code}: ${t(err.message)}`;\r\n+      showToast(message || t(\"unable_to_delete_booking\"), \"error\");\r\n+    },\r\n+  });\r\n+\r\n+  const handleDelete = () => {\r\n+    deleteHistoryBookingMutation.mutate({ id: bookingId });\r\n+  };\r\n+\r\n+  return (\r\n+    <Dialog open={isOpenDialog} onOpenChange={setIsOpenDialog}>\r\n+      <DialogContent enableOverflow>\r",
        "comment_created_at": "2025-02-17T08:09:58+00:00",
        "comment_author": "PAVANNAIK25",
        "comment_body": "ok sure. I'll update the changes",
        "pr_file_module": null
      }
    ]
  }
]