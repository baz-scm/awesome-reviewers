[
  {
    "discussion_id": "2099128485",
    "pr_number": 21429,
    "pr_file": "packages/features/bookings/Booker/components/BookEventForm/BookingFields.tsx",
    "created_at": "2025-05-21T12:28:21+00:00",
    "commented_code": "}\n \n         return (\n-          <FormBuilderField className=\"mb-4\" field={{ ...field, hidden }} readOnly={readOnly} key={index} />\n+          <MemoizedField className=\"mb-4\" field={{ ...field, hidden }} readOnly={readOnly} key={index} />",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2100165409",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 21429,
        "pr_file": "packages/features/bookings/Booker/components/BookEventForm/BookingFields.tsx",
        "discussion_id": "2099128485",
        "commented_code": "@@ -135,7 +135,7 @@ export const BookingFields = ({\n         }\n \n         return (\n-          <FormBuilderField className=\"mb-4\" field={{ ...field, hidden }} readOnly={readOnly} key={index} />\n+          <MemoizedField className=\"mb-4\" field={{ ...field, hidden }} readOnly={readOnly} key={index} />",
        "comment_created_at": "2025-05-21T12:28:21+00:00",
        "comment_author": "retrogtx",
        "comment_body": "This comment is right ",
        "pr_file_module": null
      },
      {
        "comment_id": "2100339695",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 21429,
        "pr_file": "packages/features/bookings/Booker/components/BookEventForm/BookingFields.tsx",
        "discussion_id": "2099128485",
        "commented_code": "@@ -135,7 +135,7 @@ export const BookingFields = ({\n         }\n \n         return (\n-          <FormBuilderField className=\"mb-4\" field={{ ...field, hidden }} readOnly={readOnly} key={index} />\n+          <MemoizedField className=\"mb-4\" field={{ ...field, hidden }} readOnly={readOnly} key={index} />",
        "comment_created_at": "2025-05-21T13:44:29+00:00",
        "comment_author": "panphora",
        "comment_body": "You're right! I just sent an update that fixes this by:\r\n\r\n1. Creating memoized components with React.memo\r\n2. Passing individual props (field, hidden, readOnly) separately\r\n3. This allows React.memo to correctly detect unchanged props and prevent re-renders",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2052432062",
    "pr_number": 20778,
    "pr_file": "packages/features/ee/workflows/components/AddActionDialog.tsx",
    "created_at": "2025-04-21T14:09:36+00:00",
    "commented_code": "export const AddActionDialog = (props: IAddActionDialog) => {\n   const { t } = useLocale();\n-  const { isOpenDialog, setIsOpenDialog, addAction } = props;\n+  const { isOpenDialog, setIsOpenDialog, addAction, actionOptions } = props;\n   const [isPhoneNumberNeeded, setIsPhoneNumberNeeded] = useState(false);\n   const [isSenderIdNeeded, setIsSenderIdNeeded] = useState(false);\n   const [isEmailAddressNeeded, setIsEmailAddressNeeded] = useState(false);\n-  const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2052432062",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 20778,
        "pr_file": "packages/features/ee/workflows/components/AddActionDialog.tsx",
        "discussion_id": "2052432062",
        "commented_code": "@@ -52,11 +53,10 @@ type AddActionFormValues = {\n \n export const AddActionDialog = (props: IAddActionDialog) => {\n   const { t } = useLocale();\n-  const { isOpenDialog, setIsOpenDialog, addAction } = props;\n+  const { isOpenDialog, setIsOpenDialog, addAction, actionOptions } = props;\n   const [isPhoneNumberNeeded, setIsPhoneNumberNeeded] = useState(false);\n   const [isSenderIdNeeded, setIsSenderIdNeeded] = useState(false);\n   const [isEmailAddressNeeded, setIsEmailAddressNeeded] = useState(false);\n-  const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();",
        "comment_created_at": "2025-04-21T14:09:36+00:00",
        "comment_author": "hbjORbj",
        "comment_body": "This query should stay client-side because the \"Add action\" Dialog should not block the initial load. For example, imagine that the query fetching for Add Action Dialog failed. Now it blocks the entire page load. Handling a query failure is another topic, but I am mentioning it to help you decide which is something you should fetch server-side vs client-side. The more server-side fetching we do, the slower the initial load is, and hence we should determine carefully which queries to turn to server-side and keep client-side. \r\n\r\nSo, Please think about this for other queries you switched to server-side in this PR and make changes accordingly!\r\n \r\n<img width=\"980\" alt=\"Screenshot 2025-04-21 at 11 04 31\u202fAM\" src=\"https://github.com/user-attachments/assets/399e78d2-1c18-4c80-b837-f7e9e071489b\" />\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2052490201",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 20778,
        "pr_file": "packages/features/ee/workflows/components/AddActionDialog.tsx",
        "discussion_id": "2052432062",
        "commented_code": "@@ -52,11 +53,10 @@ type AddActionFormValues = {\n \n export const AddActionDialog = (props: IAddActionDialog) => {\n   const { t } = useLocale();\n-  const { isOpenDialog, setIsOpenDialog, addAction } = props;\n+  const { isOpenDialog, setIsOpenDialog, addAction, actionOptions } = props;\n   const [isPhoneNumberNeeded, setIsPhoneNumberNeeded] = useState(false);\n   const [isSenderIdNeeded, setIsSenderIdNeeded] = useState(false);\n   const [isEmailAddressNeeded, setIsEmailAddressNeeded] = useState(false);\n-  const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();",
        "comment_created_at": "2025-04-21T14:34:48+00:00",
        "comment_author": "TusharBhatt1",
        "comment_body": "So basically we where doing this same call two times : `one for the page (form)` and `another for this Dialog` so I just removed it from here and passed from the page - I understand your concerns but that's not the case here",
        "pr_file_module": null
      },
      {
        "comment_id": "2052504319",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 20778,
        "pr_file": "packages/features/ee/workflows/components/AddActionDialog.tsx",
        "discussion_id": "2052432062",
        "commented_code": "@@ -52,11 +53,10 @@ type AddActionFormValues = {\n \n export const AddActionDialog = (props: IAddActionDialog) => {\n   const { t } = useLocale();\n-  const { isOpenDialog, setIsOpenDialog, addAction } = props;\n+  const { isOpenDialog, setIsOpenDialog, addAction, actionOptions } = props;\n   const [isPhoneNumberNeeded, setIsPhoneNumberNeeded] = useState(false);\n   const [isSenderIdNeeded, setIsSenderIdNeeded] = useState(false);\n   const [isEmailAddressNeeded, setIsEmailAddressNeeded] = useState(false);\n-  const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();",
        "comment_created_at": "2025-04-21T14:42:02+00:00",
        "comment_author": "hbjORbj",
        "comment_body": "I don't think you understood my point. I am saying we should not have `workflowCaller.getWorkflowActionOptions()` in RSC.",
        "pr_file_module": null
      },
      {
        "comment_id": "2052520345",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 20778,
        "pr_file": "packages/features/ee/workflows/components/AddActionDialog.tsx",
        "discussion_id": "2052432062",
        "commented_code": "@@ -52,11 +53,10 @@ type AddActionFormValues = {\n \n export const AddActionDialog = (props: IAddActionDialog) => {\n   const { t } = useLocale();\n-  const { isOpenDialog, setIsOpenDialog, addAction } = props;\n+  const { isOpenDialog, setIsOpenDialog, addAction, actionOptions } = props;\n   const [isPhoneNumberNeeded, setIsPhoneNumberNeeded] = useState(false);\n   const [isSenderIdNeeded, setIsSenderIdNeeded] = useState(false);\n   const [isEmailAddressNeeded, setIsEmailAddressNeeded] = useState(false);\n-  const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();",
        "comment_created_at": "2025-04-21T14:50:14+00:00",
        "comment_author": "TusharBhatt1",
        "comment_body": "You mean - we should call `getWorkflowActionOptions` client side and pass to this modal as well (as we are already doing in this PR) , sounds good btw\r\n\r\n![image](https://github.com/user-attachments/assets/481abfcc-25a9-46bf-b85c-6685a9a363ca)\r\n![image](https://github.com/user-attachments/assets/85b2d19a-7c6e-4333-98af-42b9887f6740)\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2052541234",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 20778,
        "pr_file": "packages/features/ee/workflows/components/AddActionDialog.tsx",
        "discussion_id": "2052432062",
        "commented_code": "@@ -52,11 +53,10 @@ type AddActionFormValues = {\n \n export const AddActionDialog = (props: IAddActionDialog) => {\n   const { t } = useLocale();\n-  const { isOpenDialog, setIsOpenDialog, addAction } = props;\n+  const { isOpenDialog, setIsOpenDialog, addAction, actionOptions } = props;\n   const [isPhoneNumberNeeded, setIsPhoneNumberNeeded] = useState(false);\n   const [isSenderIdNeeded, setIsSenderIdNeeded] = useState(false);\n   const [isEmailAddressNeeded, setIsEmailAddressNeeded] = useState(false);\n-  const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();",
        "comment_created_at": "2025-04-21T14:59:05+00:00",
        "comment_author": "hbjORbj",
        "comment_body": "You can simply let `const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();` just stay in `packages/features/ee/workflows/components/AddActionDialog.tsx` unless you have a better optimization in mind.",
        "pr_file_module": null
      },
      {
        "comment_id": "2052552348",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 20778,
        "pr_file": "packages/features/ee/workflows/components/AddActionDialog.tsx",
        "discussion_id": "2052432062",
        "commented_code": "@@ -52,11 +53,10 @@ type AddActionFormValues = {\n \n export const AddActionDialog = (props: IAddActionDialog) => {\n   const { t } = useLocale();\n-  const { isOpenDialog, setIsOpenDialog, addAction } = props;\n+  const { isOpenDialog, setIsOpenDialog, addAction, actionOptions } = props;\n   const [isPhoneNumberNeeded, setIsPhoneNumberNeeded] = useState(false);\n   const [isSenderIdNeeded, setIsSenderIdNeeded] = useState(false);\n   const [isEmailAddressNeeded, setIsEmailAddressNeeded] = useState(false);\n-  const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();",
        "comment_created_at": "2025-04-21T15:06:59+00:00",
        "comment_author": "TusharBhatt1",
        "comment_body": "> You can simply let const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery(); just stay in packages/features/ee/workflows/components/AddActionDialog.tsx unless you have a better optimization in mind.\r\n\r\nThen we'll end up doing two calls for actionOptions as soon as the page renders _(current behaviour on prod)_ - one in `WorkflowDetailsPage.tsx` and another in `AddActionDialog.tsx` _(we require this data on both places)_\r\n\r\nI have updated it to call just once just inside `WorkflowDetailsPage` and simply pass it to `AddActionDialog` as prop\r\nThoughts ?",
        "pr_file_module": null
      },
      {
        "comment_id": "2052651229",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 20778,
        "pr_file": "packages/features/ee/workflows/components/AddActionDialog.tsx",
        "discussion_id": "2052432062",
        "commented_code": "@@ -52,11 +53,10 @@ type AddActionFormValues = {\n \n export const AddActionDialog = (props: IAddActionDialog) => {\n   const { t } = useLocale();\n-  const { isOpenDialog, setIsOpenDialog, addAction } = props;\n+  const { isOpenDialog, setIsOpenDialog, addAction, actionOptions } = props;\n   const [isPhoneNumberNeeded, setIsPhoneNumberNeeded] = useState(false);\n   const [isSenderIdNeeded, setIsSenderIdNeeded] = useState(false);\n   const [isEmailAddressNeeded, setIsEmailAddressNeeded] = useState(false);\n-  const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();",
        "comment_created_at": "2025-04-21T15:59:11+00:00",
        "comment_author": "hbjORbj",
        "comment_body": "That sounds good but is it necessary? Client-side trpc queries are cached, no? especially since these two queries happen almost at the same time? \r\n\r\nI love to avoid prop drilling as much as possible unless it's necessary\r\n\r\nWould be great to have you test this quickly \ud83d\ude4f",
        "pr_file_module": null
      },
      {
        "comment_id": "2052715281",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 20778,
        "pr_file": "packages/features/ee/workflows/components/AddActionDialog.tsx",
        "discussion_id": "2052432062",
        "commented_code": "@@ -52,11 +53,10 @@ type AddActionFormValues = {\n \n export const AddActionDialog = (props: IAddActionDialog) => {\n   const { t } = useLocale();\n-  const { isOpenDialog, setIsOpenDialog, addAction } = props;\n+  const { isOpenDialog, setIsOpenDialog, addAction, actionOptions } = props;\n   const [isPhoneNumberNeeded, setIsPhoneNumberNeeded] = useState(false);\n   const [isSenderIdNeeded, setIsSenderIdNeeded] = useState(false);\n   const [isEmailAddressNeeded, setIsEmailAddressNeeded] = useState(false);\n-  const { data: actionOptions } = trpc.viewer.workflows.getWorkflowActionOptions.useQuery();",
        "comment_created_at": "2025-04-21T16:58:58+00:00",
        "comment_author": "TusharBhatt1",
        "comment_body": "The API calls increases making them look lot more - having one looked clean to me , anyways I have added an trpc call in the Dialog as well ",
        "pr_file_module": null
      }
    ]
  }
]