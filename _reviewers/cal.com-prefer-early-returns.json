[
  {
    "discussion_id": "1724218719",
    "pr_number": 16261,
    "pr_file": "apps/web/components/eventtype/EventAvailabilityTab.tsx",
    "created_at": "2024-08-21T02:08:30+00:00",
    "commented_code": "return (\n       <div>\n         <div className=\"border-subtle space-y-4 border-x p-6\">\n-          <ol className=\"table border-collapse text-sm\">\n-            {weekdayNames(i18n.language, weekStart, \"long\").map((day, index) => {\n-              const isAvailable = !!filterDays(index).length;\n-              return (\n-                <li key={day} className=\"my-6 flex border-transparent last:mb-2\">\n-                  <span\n-                    className={classNames(\n-                      \"w-20 font-medium sm:w-32 \",\n-                      !isAvailable ? \"text-subtle line-through\" : \"text-default\"\n-                    )}>\n-                    {day}\n-                  </span>\n-                  {isPending ? (\n-                    <SkeletonText className=\"block h-5 w-60\" />\n-                  ) : isAvailable ? (\n-                    <div className=\"space-y-3 text-right\">\n-                      {filterDays(index).map((dayRange, i) => (\n-                        <div key={i} className=\"text-default flex items-center leading-4\">\n-                          <span className=\"w-16 sm:w-28 sm:text-left\">\n-                            {format(dayRange.startTime, timeFormat === 12)}\n-                          </span>\n-                          <span className=\"ms-4\">-</span>\n-                          <div className=\"ml-6 sm:w-28\">{format(dayRange.endTime, timeFormat === 12)}</div>\n-                        </div>\n-                      ))}\n-                    </div>\n-                  ) : (\n-                    <span className=\"text-subtle ml-6 sm:ml-0\">{t(\"unavailable\")}</span>\n-                  )}\n-                </li>\n-              );\n-            })}\n-          </ol>\n+          {!schedule?.timeBlocks?.length ? (\n+            <ol className=\"table border-collapse text-sm\">",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "1724218719",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 16261,
        "pr_file": "apps/web/components/eventtype/EventAvailabilityTab.tsx",
        "discussion_id": "1724218719",
        "commented_code": "@@ -87,39 +88,43 @@ const EventTypeScheduleDetails = memo(\n     return (\n       <div>\n         <div className=\"border-subtle space-y-4 border-x p-6\">\n-          <ol className=\"table border-collapse text-sm\">\n-            {weekdayNames(i18n.language, weekStart, \"long\").map((day, index) => {\n-              const isAvailable = !!filterDays(index).length;\n-              return (\n-                <li key={day} className=\"my-6 flex border-transparent last:mb-2\">\n-                  <span\n-                    className={classNames(\n-                      \"w-20 font-medium sm:w-32 \",\n-                      !isAvailable ? \"text-subtle line-through\" : \"text-default\"\n-                    )}>\n-                    {day}\n-                  </span>\n-                  {isPending ? (\n-                    <SkeletonText className=\"block h-5 w-60\" />\n-                  ) : isAvailable ? (\n-                    <div className=\"space-y-3 text-right\">\n-                      {filterDays(index).map((dayRange, i) => (\n-                        <div key={i} className=\"text-default flex items-center leading-4\">\n-                          <span className=\"w-16 sm:w-28 sm:text-left\">\n-                            {format(dayRange.startTime, timeFormat === 12)}\n-                          </span>\n-                          <span className=\"ms-4\">-</span>\n-                          <div className=\"ml-6 sm:w-28\">{format(dayRange.endTime, timeFormat === 12)}</div>\n-                        </div>\n-                      ))}\n-                    </div>\n-                  ) : (\n-                    <span className=\"text-subtle ml-6 sm:ml-0\">{t(\"unavailable\")}</span>\n-                  )}\n-                </li>\n-              );\n-            })}\n-          </ol>\n+          {!schedule?.timeBlocks?.length ? (\n+            <ol className=\"table border-collapse text-sm\">",
        "comment_created_at": "2024-08-21T02:08:30+00:00",
        "comment_author": "anikdhabal",
        "comment_body": "It easier to understand if in a conditional statement, we have the shorter branch written earlier\r\n```suggestion\r\n          {schedule && schedule?.timeBlocks?.length ? (\r\n            <EventTypeTimeBlocks timeBlocks={schedule.timeBlocks} />\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1730397853",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 16261,
        "pr_file": "apps/web/components/eventtype/EventAvailabilityTab.tsx",
        "discussion_id": "1724218719",
        "commented_code": "@@ -87,39 +88,43 @@ const EventTypeScheduleDetails = memo(\n     return (\n       <div>\n         <div className=\"border-subtle space-y-4 border-x p-6\">\n-          <ol className=\"table border-collapse text-sm\">\n-            {weekdayNames(i18n.language, weekStart, \"long\").map((day, index) => {\n-              const isAvailable = !!filterDays(index).length;\n-              return (\n-                <li key={day} className=\"my-6 flex border-transparent last:mb-2\">\n-                  <span\n-                    className={classNames(\n-                      \"w-20 font-medium sm:w-32 \",\n-                      !isAvailable ? \"text-subtle line-through\" : \"text-default\"\n-                    )}>\n-                    {day}\n-                  </span>\n-                  {isPending ? (\n-                    <SkeletonText className=\"block h-5 w-60\" />\n-                  ) : isAvailable ? (\n-                    <div className=\"space-y-3 text-right\">\n-                      {filterDays(index).map((dayRange, i) => (\n-                        <div key={i} className=\"text-default flex items-center leading-4\">\n-                          <span className=\"w-16 sm:w-28 sm:text-left\">\n-                            {format(dayRange.startTime, timeFormat === 12)}\n-                          </span>\n-                          <span className=\"ms-4\">-</span>\n-                          <div className=\"ml-6 sm:w-28\">{format(dayRange.endTime, timeFormat === 12)}</div>\n-                        </div>\n-                      ))}\n-                    </div>\n-                  ) : (\n-                    <span className=\"text-subtle ml-6 sm:ml-0\">{t(\"unavailable\")}</span>\n-                  )}\n-                </li>\n-              );\n-            })}\n-          </ol>\n+          {!schedule?.timeBlocks?.length ? (\n+            <ol className=\"table border-collapse text-sm\">",
        "comment_created_at": "2024-08-25T17:13:23+00:00",
        "comment_author": "kart1ka",
        "comment_body": "Done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1724270083",
    "pr_number": 16261,
    "pr_file": "packages/features/schedules/components/TimeBlocksList.tsx",
    "created_at": "2024-08-21T02:28:45+00:00",
    "commented_code": "+import { Controller } from \"react-hook-form\";\n+import type { Control } from \"react-hook-form\";\n+\n+import type { AvailabilityFormValues } from \"@calcom/atoms/availability/types\";\n+import { useLocale } from \"@calcom/lib/hooks/useLocale\";\n+import { Button, TextField } from \"@calcom/ui\";\n+\n+const TimeBlocksList = ({\n+  fields,\n+  remove,\n+  control,\n+}: {\n+  fields: { value: string; id: string }[];\n+  remove: (index?: number | number[]) => void;\n+  control: Control<AvailabilityFormValues>;\n+}) => {\n+  const { t } = useLocale();\n+  return (\n+    <div>\n+      {fields.length > 0 ? (\n+        fields.map((field, index) => (\n+          <div key={field.id} className=\"mb-2 flex-col items-center space-y-2\">\n+            {index !== 0 && (\n+              <div>\n+                <p>{t(\"or\")}</p>\n+              </div>\n+            )}\n+            <div className=\"flex items-center space-x-4\">\n+              <div className=\"w-full\">\n+                <Controller\n+                  control={control}\n+                  name={`timeBlocks.${index}.value`}\n+                  render={({ field }) => (\n+                    <TextField label={false} placeholder=\"Time block\" type=\"standard\" {...field} />\n+                  )}\n+                />\n+              </div>\n+              <Button\n+                StartIcon=\"x\"\n+                variant=\"icon\"\n+                color=\"secondary\"\n+                aria-label=\"remove\"\n+                onClick={() => remove(index)}\n+              />\n+            </div>\n+          </div>\n+        ))\n+      ) : (\n+        <div />",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "1724270083",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 16261,
        "pr_file": "packages/features/schedules/components/TimeBlocksList.tsx",
        "discussion_id": "1724270083",
        "commented_code": "@@ -0,0 +1,55 @@\n+import { Controller } from \"react-hook-form\";\n+import type { Control } from \"react-hook-form\";\n+\n+import type { AvailabilityFormValues } from \"@calcom/atoms/availability/types\";\n+import { useLocale } from \"@calcom/lib/hooks/useLocale\";\n+import { Button, TextField } from \"@calcom/ui\";\n+\n+const TimeBlocksList = ({\n+  fields,\n+  remove,\n+  control,\n+}: {\n+  fields: { value: string; id: string }[];\n+  remove: (index?: number | number[]) => void;\n+  control: Control<AvailabilityFormValues>;\n+}) => {\n+  const { t } = useLocale();\n+  return (\n+    <div>\n+      {fields.length > 0 ? (\n+        fields.map((field, index) => (\n+          <div key={field.id} className=\"mb-2 flex-col items-center space-y-2\">\n+            {index !== 0 && (\n+              <div>\n+                <p>{t(\"or\")}</p>\n+              </div>\n+            )}\n+            <div className=\"flex items-center space-x-4\">\n+              <div className=\"w-full\">\n+                <Controller\n+                  control={control}\n+                  name={`timeBlocks.${index}.value`}\n+                  render={({ field }) => (\n+                    <TextField label={false} placeholder=\"Time block\" type=\"standard\" {...field} />\n+                  )}\n+                />\n+              </div>\n+              <Button\n+                StartIcon=\"x\"\n+                variant=\"icon\"\n+                color=\"secondary\"\n+                aria-label=\"remove\"\n+                onClick={() => remove(index)}\n+              />\n+            </div>\n+          </div>\n+        ))\n+      ) : (\n+        <div />",
        "comment_created_at": "2024-08-21T02:28:45+00:00",
        "comment_author": "anikdhabal",
        "comment_body": "Again, it would be better to return early if the length is zero",
        "pr_file_module": null
      },
      {
        "comment_id": "1730397997",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 16261,
        "pr_file": "packages/features/schedules/components/TimeBlocksList.tsx",
        "discussion_id": "1724270083",
        "commented_code": "@@ -0,0 +1,55 @@\n+import { Controller } from \"react-hook-form\";\n+import type { Control } from \"react-hook-form\";\n+\n+import type { AvailabilityFormValues } from \"@calcom/atoms/availability/types\";\n+import { useLocale } from \"@calcom/lib/hooks/useLocale\";\n+import { Button, TextField } from \"@calcom/ui\";\n+\n+const TimeBlocksList = ({\n+  fields,\n+  remove,\n+  control,\n+}: {\n+  fields: { value: string; id: string }[];\n+  remove: (index?: number | number[]) => void;\n+  control: Control<AvailabilityFormValues>;\n+}) => {\n+  const { t } = useLocale();\n+  return (\n+    <div>\n+      {fields.length > 0 ? (\n+        fields.map((field, index) => (\n+          <div key={field.id} className=\"mb-2 flex-col items-center space-y-2\">\n+            {index !== 0 && (\n+              <div>\n+                <p>{t(\"or\")}</p>\n+              </div>\n+            )}\n+            <div className=\"flex items-center space-x-4\">\n+              <div className=\"w-full\">\n+                <Controller\n+                  control={control}\n+                  name={`timeBlocks.${index}.value`}\n+                  render={({ field }) => (\n+                    <TextField label={false} placeholder=\"Time block\" type=\"standard\" {...field} />\n+                  )}\n+                />\n+              </div>\n+              <Button\n+                StartIcon=\"x\"\n+                variant=\"icon\"\n+                color=\"secondary\"\n+                aria-label=\"remove\"\n+                onClick={() => remove(index)}\n+              />\n+            </div>\n+          </div>\n+        ))\n+      ) : (\n+        <div />",
        "comment_created_at": "2024-08-25T17:14:38+00:00",
        "comment_author": "kart1ka",
        "comment_body": "Fixed",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2235859801",
    "pr_number": 22735,
    "pr_file": "apps/web/components/booking/CancelBooking.tsx",
    "created_at": "2025-07-28T10:54:47+00:00",
    "commented_code": "const [error, setError] = useState<string | null>(booking ? null : t(\"booking_already_cancelled\"));\n   const [internalNote, setInternalNote] = useState<{ id: number; name: string } | null>(null);\n \n+  // Determine if cancellation reason is required based on team settings\n+  const isCancellationReasonRequired = () => {\n+    console.log(\"props.teamCancellationSettings\", props.teamCancellationSettings);\n+    if (!props.teamCancellationSettings) {\n+      // for individual events (mendatory for host, optional for attendee)\n+      return props.isHost;\n+    }\n+\n+    if (props.isHost) {\n+      return props.teamCancellationSettings.mandatoryCancellationReasonForHost;\n+    } else {\n+      return props.teamCancellationSettings.mandatoryCancellationReasonForAttendee;\n+    }",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2235859801",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22735,
        "pr_file": "apps/web/components/booking/CancelBooking.tsx",
        "discussion_id": "2235859801",
        "commented_code": "@@ -119,6 +123,23 @@ export default function CancelBooking(props: Props) {\n   const [error, setError] = useState<string | null>(booking ? null : t(\"booking_already_cancelled\"));\n   const [internalNote, setInternalNote] = useState<{ id: number; name: string } | null>(null);\n \n+  // Determine if cancellation reason is required based on team settings\n+  const isCancellationReasonRequired = () => {\n+    console.log(\"props.teamCancellationSettings\", props.teamCancellationSettings);\n+    if (!props.teamCancellationSettings) {\n+      // for individual events (mendatory for host, optional for attendee)\n+      return props.isHost;\n+    }\n+\n+    if (props.isHost) {\n+      return props.teamCancellationSettings.mandatoryCancellationReasonForHost;\n+    } else {\n+      return props.teamCancellationSettings.mandatoryCancellationReasonForAttendee;\n+    }",
        "comment_created_at": "2025-07-28T10:54:47+00:00",
        "comment_author": "alishaz-polymath",
        "comment_body": "```suggestion\r\n    if (props.isHost) return props.teamCancellationSettings.mandatoryCancellationReasonForHost;\r\n    \r\n    return props.teamCancellationSettings.mandatoryCancellationReasonForAttendee;\r\n```\r\nNIT: No need of else here",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2251474899",
    "pr_number": 22873,
    "pr_file": "packages/features/components/phone-input/PhoneInput.tsx",
    "created_at": "2025-08-04T13:21:51+00:00",
    "commented_code": "defaultCountry?: string;\n };\n \n+// Custom formatter for Venezuela (+58) phone numbers\n+const formatVenezuelaPhoneNumber = (value: string, country: string): string => {\n+  // Handle edge cases\n+  if (!value || typeof value !== 'string') return value || '';\n+\n+  if (country === \"ve\") {",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2251474899",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22873,
        "pr_file": "packages/features/components/phone-input/PhoneInput.tsx",
        "discussion_id": "2251474899",
        "commented_code": "@@ -21,6 +21,38 @@ export type PhoneInputProps = {\n   defaultCountry?: string;\n };\n \n+// Custom formatter for Venezuela (+58) phone numbers\n+const formatVenezuelaPhoneNumber = (value: string, country: string): string => {\n+  // Handle edge cases\n+  if (!value || typeof value !== 'string') return value || '';\n+\n+  if (country === \"ve\") {",
        "comment_created_at": "2025-08-04T13:21:51+00:00",
        "comment_author": "volnei",
        "comment_body": "Just a quick thought: applying the fail-fast principle here (e.g. `if (country !== 've') return value;`) might help make the logic a bit cleaner by reducing nesting.",
        "pr_file_module": null
      }
    ]
  }
]