[
  {
    "discussion_id": "2287358908",
    "pr_number": 23068,
    "pr_file": "packages/features/handleMarkNoShow.ts",
    "created_at": "2025-08-20T08:13:05+00:00",
    "commented_code": "...(platformClientParams ? platformClientParams : {}),\n       });\n \n+      const booking = await prisma.booking.findUnique({\n+        where: { uid: bookingUid },\n+        include: {\n+          eventType: {\n+            include: {\n+              owner: true,\n+              team: {\n+                select: {\n+                  parentId: true,\n+                },\n+              },\n+            },\n+          },\n+          attendees: true,\n+          user: true,",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2287358908",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 23068,
        "pr_file": "packages/features/handleMarkNoShow.ts",
        "discussion_id": "2287358908",
        "commented_code": "@@ -113,6 +117,83 @@ const handleMarkNoShow = async ({\n         ...(platformClientParams ? platformClientParams : {}),\n       });\n \n+      const booking = await prisma.booking.findUnique({\n+        where: { uid: bookingUid },\n+        include: {\n+          eventType: {\n+            include: {\n+              owner: true,\n+              team: {\n+                select: {\n+                  parentId: true,\n+                },\n+              },\n+            },\n+          },\n+          attendees: true,\n+          user: true,",
        "comment_created_at": "2025-08-20T08:13:05+00:00",
        "comment_author": "CarinaWolli",
        "comment_body": "We should explicitly select the fields we need from user and attendees instead of including everything",
        "pr_file_module": null
      },
      {
        "comment_id": "2288205357",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 23068,
        "pr_file": "packages/features/handleMarkNoShow.ts",
        "discussion_id": "2287358908",
        "commented_code": "@@ -113,6 +117,83 @@ const handleMarkNoShow = async ({\n         ...(platformClientParams ? platformClientParams : {}),\n       });\n \n+      const booking = await prisma.booking.findUnique({\n+        where: { uid: bookingUid },\n+        include: {\n+          eventType: {\n+            include: {\n+              owner: true,\n+              team: {\n+                select: {\n+                  parentId: true,\n+                },\n+              },\n+            },\n+          },\n+          attendees: true,\n+          user: true,",
        "comment_created_at": "2025-08-20T13:38:51+00:00",
        "comment_author": "Amit91848",
        "comment_body": "fixed",
        "pr_file_module": null
      },
      {
        "comment_id": "2288376991",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 23068,
        "pr_file": "packages/features/handleMarkNoShow.ts",
        "discussion_id": "2287358908",
        "commented_code": "@@ -113,6 +117,83 @@ const handleMarkNoShow = async ({\n         ...(platformClientParams ? platformClientParams : {}),\n       });\n \n+      const booking = await prisma.booking.findUnique({\n+        where: { uid: bookingUid },\n+        include: {\n+          eventType: {\n+            include: {\n+              owner: true,\n+              team: {\n+                select: {\n+                  parentId: true,\n+                },\n+              },\n+            },\n+          },\n+          attendees: true,\n+          user: true,",
        "comment_created_at": "2025-08-20T14:31:44+00:00",
        "comment_author": "CarinaWolli",
        "comment_body": "same here: https://github.com/calcom/cal.com/pull/23068/files#r2288376065",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2288376065",
    "pr_number": 23068,
    "pr_file": "packages/features/handleMarkNoShow.ts",
    "created_at": "2025-08-20T14:31:22+00:00",
    "commented_code": "...(platformClientParams ? platformClientParams : {}),\n       });\n \n+      const booking = await prisma.booking.findUnique({\n+        where: { uid: bookingUid },\n+        include: {\n+          eventType: {\n+            include: {\n+              owner: true,",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2288376065",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 23068,
        "pr_file": "packages/features/handleMarkNoShow.ts",
        "discussion_id": "2288376065",
        "commented_code": "@@ -113,6 +117,98 @@ const handleMarkNoShow = async ({\n         ...(platformClientParams ? platformClientParams : {}),\n       });\n \n+      const booking = await prisma.booking.findUnique({\n+        where: { uid: bookingUid },\n+        include: {\n+          eventType: {\n+            include: {\n+              owner: true,",
        "comment_created_at": "2025-08-20T14:31:22+00:00",
        "comment_author": "CarinaWolli",
        "comment_body": "same here, let's only select properties we need",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2266442560",
    "pr_number": 22709,
    "pr_file": "packages/trpc/server/routers/viewer/bookings/get.handler.ts",
    "created_at": "2025-08-11T11:37:55+00:00",
    "commented_code": ".orderBy(\"AssignmentReason.createdAt\", \"desc\")\n               .limit(1)\n           ).as(\"assignmentReason\"),\n+          jsonArrayFrom(\n+            eb\n+              .selectFrom(\"BookingReport\")\n+              .select([\n+                \"BookingReport.id\",\n+                \"BookingReport.reason\",\n+                \"BookingReport.description\",\n+                \"BookingReport.cancelled\",\n+                \"BookingReport.createdAt\",\n+                \"BookingReport.reportedById\",\n+              ])\n+              .whereRef(\"BookingReport.bookingId\", \"=\", \"Booking.id\")\n+              .orderBy(\"BookingReport.createdAt\", \"desc\")\n+          ).as(\"reports\"),\n+          // Check if any booking in the recurring series has been reported by the current user\n+          eb\n+            .selectFrom(\"BookingReport\")\n+            .select(eb.fn.countAll().as(\"count\"))\n+            .innerJoin(\"Booking as RecurringBooking\", \"BookingReport.bookingId\", \"RecurringBooking.id\")\n+            .where(\"BookingReport.reportedById\", \"=\", user.id)\n+            .where((eb) =>\n+              eb.or([\n+                // Either this specific booking has been reported\n+                eb(\"RecurringBooking.id\", \"=\", eb.ref(\"Booking.id\")),\n+                // Or any booking in the same recurring series has been reported (if this is a recurring booking)\n+                eb.and([\n+                  eb(\"Booking.recurringEventId\", \"is not\", null),\n+                  eb(\"RecurringBooking.recurringEventId\", \"=\", eb.ref(\"Booking.recurringEventId\")),\n+                ]),\n+              ])\n+            )\n+            .as(\"hasBeenReportedByUser\"),",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2266442560",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22709,
        "pr_file": "packages/trpc/server/routers/viewer/bookings/get.handler.ts",
        "discussion_id": "2266442560",
        "commented_code": "@@ -571,6 +571,38 @@ export async function getBookings({\n               .orderBy(\"AssignmentReason.createdAt\", \"desc\")\n               .limit(1)\n           ).as(\"assignmentReason\"),\n+          jsonArrayFrom(\n+            eb\n+              .selectFrom(\"BookingReport\")\n+              .select([\n+                \"BookingReport.id\",\n+                \"BookingReport.reason\",\n+                \"BookingReport.description\",\n+                \"BookingReport.cancelled\",\n+                \"BookingReport.createdAt\",\n+                \"BookingReport.reportedById\",\n+              ])\n+              .whereRef(\"BookingReport.bookingId\", \"=\", \"Booking.id\")\n+              .orderBy(\"BookingReport.createdAt\", \"desc\")\n+          ).as(\"reports\"),\n+          // Check if any booking in the recurring series has been reported by the current user\n+          eb\n+            .selectFrom(\"BookingReport\")\n+            .select(eb.fn.countAll().as(\"count\"))\n+            .innerJoin(\"Booking as RecurringBooking\", \"BookingReport.bookingId\", \"RecurringBooking.id\")\n+            .where(\"BookingReport.reportedById\", \"=\", user.id)\n+            .where((eb) =>\n+              eb.or([\n+                // Either this specific booking has been reported\n+                eb(\"RecurringBooking.id\", \"=\", eb.ref(\"Booking.id\")),\n+                // Or any booking in the same recurring series has been reported (if this is a recurring booking)\n+                eb.and([\n+                  eb(\"Booking.recurringEventId\", \"is not\", null),\n+                  eb(\"RecurringBooking.recurringEventId\", \"=\", eb.ref(\"Booking.recurringEventId\")),\n+                ]),\n+              ])\n+            )\n+            .as(\"hasBeenReportedByUser\"),",
        "comment_created_at": "2025-08-11T11:37:55+00:00",
        "comment_author": "CarinaWolli",
        "comment_body": "I don't think we need `hasBeenReportedByUser` here we can just use reports that we already fetching for the bookings",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1740450181",
    "pr_number": 16428,
    "pr_file": "packages/trpc/server/routers/viewer/slots/util.ts",
    "created_at": "2024-09-02T07:30:50+00:00",
    "commented_code": "emoji?: string | undefined;\n     }[]\n   >;\n+  teamMember?: string | undefined;\n }\n \n export async function getAvailableSlots({ input, ctx }: GetScheduleOptions): Promise<IGetAvailableSlots> {\n+  const attendeeCalUsers = input.attendeeEmails",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "1740450181",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 16428,
        "pr_file": "packages/trpc/server/routers/viewer/slots/util.ts",
        "discussion_id": "1740450181",
        "commented_code": "@@ -319,9 +319,23 @@ export interface IGetAvailableSlots {\n       emoji?: string | undefined;\n     }[]\n   >;\n+  teamMember?: string | undefined;\n }\n \n export async function getAvailableSlots({ input, ctx }: GetScheduleOptions): Promise<IGetAvailableSlots> {\n+  const attendeeCalUsers = input.attendeeEmails",
        "comment_created_at": "2024-09-02T07:30:50+00:00",
        "comment_author": "Amit91848",
        "comment_body": "We are already fetching original booking details in line 413. You should get attendees from there instead of passing it via frontend.",
        "pr_file_module": null
      },
      {
        "comment_id": "1743078665",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 16428,
        "pr_file": "packages/trpc/server/routers/viewer/slots/util.ts",
        "discussion_id": "1740450181",
        "commented_code": "@@ -319,9 +319,23 @@ export interface IGetAvailableSlots {\n       emoji?: string | undefined;\n     }[]\n   >;\n+  teamMember?: string | undefined;\n }\n \n export async function getAvailableSlots({ input, ctx }: GetScheduleOptions): Promise<IGetAvailableSlots> {\n+  const attendeeCalUsers = input.attendeeEmails",
        "comment_created_at": "2024-09-04T05:08:17+00:00",
        "comment_author": "ImBIOS",
        "comment_body": "you're right, thanks for noticing it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1580448725",
    "pr_number": 13526,
    "pr_file": "packages/core/getBusyTimes.ts",
    "created_at": "2024-04-26T03:53:48+00:00",
    "commented_code": "},\n       title: true,\n       userId: true,\n+      attendees: true,",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "1580448725",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 13526,
        "pr_file": "packages/core/getBusyTimes.ts",
        "discussion_id": "1580448725",
        "commented_code": "@@ -343,15 +343,17 @@ export async function getBusyTimesForLimitChecks(params: {\n       },\n       title: true,\n       userId: true,\n+      attendees: true,",
        "comment_created_at": "2024-04-26T03:53:48+00:00",
        "comment_author": "emrysal",
        "comment_body": "I tried _count: { select: { attendees: true } } and indeed that doesn't work.\r\n\r\nI think this should be: attendees: { select: { id: true } } to ensure minimal perf hits; also; ideally we only run the attendees subQuery when it is a seatsPerTimeSlot > 1 situation.\r\n\r\nWhat do you think?",
        "pr_file_module": null
      },
      {
        "comment_id": "1624966138",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 13526,
        "pr_file": "packages/core/getBusyTimes.ts",
        "discussion_id": "1580448725",
        "commented_code": "@@ -343,15 +343,17 @@ export async function getBusyTimesForLimitChecks(params: {\n       },\n       title: true,\n       userId: true,\n+      attendees: true,",
        "comment_created_at": "2024-06-03T19:51:04+00:00",
        "comment_author": "MehulZR",
        "comment_body": "> I think this should be: attendees: { select: { id: true } } to ensure minimal perf hits.\r\n\r\nThanks for the suggestion. I have implemented it.\r\n\r\nAs for the subQuery; yeah it is necessary only for the seated events.\r\n\r\nI have started working on this PR after quite some time and would like to stabilize it a bit. \r\nAfter that I can look into the conditional subQuery.",
        "pr_file_module": null
      },
      {
        "comment_id": "1580448725",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 13526,
        "pr_file": "packages/core/getBusyTimes.ts",
        "discussion_id": "1580448725",
        "commented_code": "@@ -343,15 +343,17 @@ export async function getBusyTimesForLimitChecks(params: {\n       },\n       title: true,\n       userId: true,\n+      attendees: true,",
        "comment_created_at": "2024-04-26T03:53:48+00:00",
        "comment_author": "emrysal",
        "comment_body": "I tried _count: { select: { attendees: true } } and indeed that doesn't work.\r\n\r\nI think this should be: attendees: { select: { id: true } } to ensure minimal perf hits; also; ideally we only run the attendees subQuery when it is a seatsPerTimeSlot > 1 situation.\r\n\r\nWhat do you think?",
        "pr_file_module": null
      },
      {
        "comment_id": "1624966138",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 13526,
        "pr_file": "packages/core/getBusyTimes.ts",
        "discussion_id": "1580448725",
        "commented_code": "@@ -343,15 +343,17 @@ export async function getBusyTimesForLimitChecks(params: {\n       },\n       title: true,\n       userId: true,\n+      attendees: true,",
        "comment_created_at": "2024-06-03T19:51:04+00:00",
        "comment_author": "MehulZR",
        "comment_body": "> I think this should be: attendees: { select: { id: true } } to ensure minimal perf hits.\r\n\r\nThanks for the suggestion. I have implemented it.\r\n\r\nAs for the subQuery; yeah it is necessary only for the seated events.\r\n\r\nI have started working on this PR after quite some time and would like to stabilize it a bit. \r\nAfter that I can look into the conditional subQuery.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2165454208",
    "pr_number": 22019,
    "pr_file": "packages/lib/server/repository/booking.ts",
    "created_at": "2025-06-25T04:13:54+00:00",
    "commented_code": "payment: true,\n         references: true,\n         workflowReminders: true,\n+        routedFromRoutingFormReponse: {\n+          select: {\n+            id: true,\n+            response: true,\n+            form: {\n+              select: {\n+                routes: true,\n+                fields: true,",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2165670833",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22019,
        "pr_file": "packages/lib/server/repository/booking.ts",
        "discussion_id": "2165454208",
        "commented_code": "@@ -688,6 +688,19 @@ export class BookingRepository {\n         payment: true,\n         references: true,\n         workflowReminders: true,\n+        routedFromRoutingFormReponse: {\n+          select: {\n+            id: true,\n+            response: true,\n+            form: {\n+              select: {\n+                routes: true,\n+                fields: true,",
        "comment_created_at": "2025-06-25T04:13:54+00:00",
        "comment_author": "Devanshusharma2005",
        "comment_body": "please address this issue",
        "pr_file_module": null
      },
      {
        "comment_id": "2165793235",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22019,
        "pr_file": "packages/lib/server/repository/booking.ts",
        "discussion_id": "2165454208",
        "commented_code": "@@ -688,6 +688,19 @@ export class BookingRepository {\n         payment: true,\n         references: true,\n         workflowReminders: true,\n+        routedFromRoutingFormReponse: {\n+          select: {\n+            id: true,\n+            response: true,\n+            form: {\n+              select: {\n+                routes: true,\n+                fields: true,",
        "comment_created_at": "2025-06-25T05:13:35+00:00",
        "comment_author": "JagjeevanAK",
        "comment_body": "Hey sorry, for that and the suggestion given by the bot is still incomplete and need to update some other things as well.",
        "pr_file_module": null
      },
      {
        "comment_id": "2165826287",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22019,
        "pr_file": "packages/lib/server/repository/booking.ts",
        "discussion_id": "2165454208",
        "commented_code": "@@ -688,6 +688,19 @@ export class BookingRepository {\n         payment: true,\n         references: true,\n         workflowReminders: true,\n+        routedFromRoutingFormReponse: {\n+          select: {\n+            id: true,\n+            response: true,\n+            form: {\n+              select: {\n+                routes: true,\n+                fields: true,",
        "comment_created_at": "2025-06-25T05:37:27+00:00",
        "comment_author": "JagjeevanAK",
        "comment_body": "hey @Devanshusharma2005 I think suggetion given by chatbot will not work as `fields    Json?`It will cause a Prisma error because you cannot use select on JSON columns and The only options are  fields: true (fetch all) or  fields: false /omit (fetch none).",
        "pr_file_module": null
      },
      {
        "comment_id": "2165829368",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22019,
        "pr_file": "packages/lib/server/repository/booking.ts",
        "discussion_id": "2165454208",
        "commented_code": "@@ -688,6 +688,19 @@ export class BookingRepository {\n         payment: true,\n         references: true,\n         workflowReminders: true,\n+        routedFromRoutingFormReponse: {\n+          select: {\n+            id: true,\n+            response: true,\n+            form: {\n+              select: {\n+                routes: true,\n+                fields: true,",
        "comment_created_at": "2025-06-25T05:39:52+00:00",
        "comment_author": "JagjeevanAK",
        "comment_body": "I have updated my PR to address the problem of only needed data and minimise exposure/performance overhead by different way.",
        "pr_file_module": null
      }
    ]
  }
]