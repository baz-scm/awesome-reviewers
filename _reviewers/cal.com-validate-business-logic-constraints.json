[
  {
    "discussion_id": "2275964669",
    "pr_number": 22995,
    "pr_file": "packages/prisma/schema.prisma",
    "created_at": "2025-08-14T08:54:17+00:00",
    "commented_code": "date            DateTime\n   smsSid          String?\n   smsSegments     Int?\n+  callDuration    Int?",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2275964669",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22995,
        "pr_file": "packages/prisma/schema.prisma",
        "discussion_id": "2275964669",
        "commented_code": "@@ -608,6 +608,7 @@ model CreditExpenseLog {\n   date            DateTime\n   smsSid          String?\n   smsSegments     Int?\n+  callDuration    Int?",
        "comment_created_at": "2025-08-14T08:54:17+00:00",
        "comment_author": "hariombalhara",
        "comment_body": "Might be better to introduce a _creditFor_ or similar field that defines what the credit is for.\r\n\r\nIt seems like existing entries are for SMS and _callDuration_ is for _CALL_.\r\n\r\nWe might want to use this credit system for more things later on and creditFor could be really useful in that case.\r\n\r\nIn this way we could ensure in the Repository to have a required _callDuration_ value, providing better type safety or assertions\r\n\r\n\r\nIt also makes it possible to have CHECK constraint at DB level that could make callDuration as required for creditFor=SMS",
        "pr_file_module": null
      },
      {
        "comment_id": "2275992523",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22995,
        "pr_file": "packages/prisma/schema.prisma",
        "discussion_id": "2275964669",
        "commented_code": "@@ -608,6 +608,7 @@ model CreditExpenseLog {\n   date            DateTime\n   smsSid          String?\n   smsSegments     Int?\n+  callDuration    Int?",
        "comment_created_at": "2025-08-14T09:01:16+00:00",
        "comment_author": "hariombalhara",
        "comment_body": "@calcom/dba for review and suggestions",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2226659111",
    "pr_number": 22708,
    "pr_file": "packages/prisma/schema.prisma",
    "created_at": "2025-07-23T20:48:28+00:00",
    "commented_code": "paymentStatus     String?\n   billingCycleStart Int?\n \n-  destinationCalendars   DestinationCalendar[]\n-  selectedCalendars      SelectedCalendar[]\n-  invalid                Boolean?              @default(false)\n-  CalendarCache          CalendarCache[]\n-  references             BookingReference[]\n-  delegationCredentialId String?\n-  delegationCredential   DelegationCredential? @relation(fields: [delegationCredentialId], references: [id], onDelete: Cascade)\n+  destinationCalendars           DestinationCalendar[]\n+  selectedCalendars              SelectedCalendar[]\n+  invalid                        Boolean?               @default(false)\n+  CalendarCache                  CalendarCache[]\n+  references                     BookingReference[]\n+  delegationCredentialId         String?\n+  delegationCredential           DelegationCredential?  @relation(fields: [delegationCredentialId], references: [id], onDelete: Cascade)\n+  calendarSubscriptions          CalendarSubscription[]",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2226659111",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 22708,
        "pr_file": "packages/prisma/schema.prisma",
        "discussion_id": "2226659111",
        "commented_code": "@@ -237,13 +237,15 @@ model Credential {\n   paymentStatus     String?\n   billingCycleStart Int?\n \n-  destinationCalendars   DestinationCalendar[]\n-  selectedCalendars      SelectedCalendar[]\n-  invalid                Boolean?              @default(false)\n-  CalendarCache          CalendarCache[]\n-  references             BookingReference[]\n-  delegationCredentialId String?\n-  delegationCredential   DelegationCredential? @relation(fields: [delegationCredentialId], references: [id], onDelete: Cascade)\n+  destinationCalendars           DestinationCalendar[]\n+  selectedCalendars              SelectedCalendar[]\n+  invalid                        Boolean?               @default(false)\n+  CalendarCache                  CalendarCache[]\n+  references                     BookingReference[]\n+  delegationCredentialId         String?\n+  delegationCredential           DelegationCredential?  @relation(fields: [delegationCredentialId], references: [id], onDelete: Cascade)\n+  calendarSubscriptions          CalendarSubscription[]",
        "comment_created_at": "2025-07-23T20:48:28+00:00",
        "comment_author": "zomars",
        "comment_body": "DevinAI, A Calendar Subscription should be only related to a single SelectedCalendar. Each selected calendar should only be able to have a single active subscription.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2210842463",
    "pr_number": 21072,
    "pr_file": "packages/prisma/schema.prisma",
    "created_at": "2025-07-18T08:45:22+00:00",
    "commented_code": "// Think about introducing a generated unique key ${userId}_${integration}_${externalId}_${eventTypeId}\n+  @@unique([outlookSubscriptionId, eventTypeId])",
    "repo_full_name": "calcom/cal.com",
    "discussion_comments": [
      {
        "comment_id": "2215438443",
        "repo_full_name": "calcom/cal.com",
        "pr_number": 21072,
        "pr_file": "packages/prisma/schema.prisma",
        "discussion_id": "2210842463",
        "commented_code": "@@ -885,6 +888,7 @@ model SelectedCalendar {\n   // Think about introducing a generated unique key ${userId}_${integration}_${externalId}_${eventTypeId}\n   @@unique([userId, integration, externalId, eventTypeId])\n   @@unique([googleChannelId, eventTypeId])\n+  @@unique([outlookSubscriptionId, eventTypeId])",
        "comment_created_at": "2025-07-18T08:45:22+00:00",
        "comment_author": "vijayraghav-io",
        "comment_body": "There is a possibility that multiple eventTypeIds can have same outlookSubscriptionId.\r\nRefer this lines - https://github.com/calcom/cal.com/pull/21072/files#diff-4f075841987a4d1474327cb5c6097757822d5df69616798d8014ff3207a3034bR580-R587\r\n\r\nAlso given the fact that we are reusing the existing subscription if already present for other eventTypeIds\r\nhttps://github.com/calcom/cal.com/pull/21072/files#diff-4f075841987a4d1474327cb5c6097757822d5df69616798d8014ff3207a3034bR556-R565\r\n\r\nFor reference , googlecalendar/lib/CalendarService.ts\r\nhttps://github.com/calcom/cal.com/blob/df30f5c703bfe9a760d44fe9423bc869fc55cffa/packages/app-store/googlecalendar/lib/CalendarService.ts#L849-L863\r\n\r\nthis unique constraint `@@unique([outlookSubscriptionId, eventTypeId])` can be removed",
        "pr_file_module": null
      }
    ]
  }
]