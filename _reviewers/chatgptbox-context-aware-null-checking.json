[
  {
    "discussion_id": "2134049081",
    "pr_number": 865,
    "pr_file": "src/utils/get-core-content-text.mjs",
    "created_at": "2025-06-07T18:04:12+00:00",
    "commented_code": "}\n \n   if (isProbablyReaderable(document)) {\n-    let article = new Readability(document.cloneNode(true), {\n+    const article = new Readability(document.cloneNode(true), {\n       keepClasses: true,\n     }).parse()\n-    console.log('readerable')\n-    return postProcessText(article.textContent)\n+    if (article?.textContent) {",
    "repo_full_name": "ChatGPTBox-dev/chatGPTBox",
    "discussion_comments": [
      {
        "comment_id": "2134049454",
        "repo_full_name": "ChatGPTBox-dev/chatGPTBox",
        "pr_number": 865,
        "pr_file": "src/utils/get-core-content-text.mjs",
        "discussion_id": "2134049081",
        "commented_code": "@@ -71,11 +71,13 @@ export function getCoreContentText() {\n   }\n \n   if (isProbablyReaderable(document)) {\n-    let article = new Readability(document.cloneNode(true), {\n+    const article = new Readability(document.cloneNode(true), {\n       keepClasses: true,\n     }).parse()\n-    console.log('readerable')\n-    return postProcessText(article.textContent)\n+    if (article?.textContent) {",
        "comment_created_at": "2025-06-07T18:04:12+00:00",
        "comment_author": "PeterDaveHello",
        "comment_body": "@coderabbitai, what do you say?",
        "pr_file_module": null
      },
      {
        "comment_id": "2134060113",
        "repo_full_name": "ChatGPTBox-dev/chatGPTBox",
        "pr_number": 865,
        "pr_file": "src/utils/get-core-content-text.mjs",
        "discussion_id": "2134049081",
        "commented_code": "@@ -71,11 +71,13 @@ export function getCoreContentText() {\n   }\n \n   if (isProbablyReaderable(document)) {\n-    let article = new Readability(document.cloneNode(true), {\n+    const article = new Readability(document.cloneNode(true), {\n       keepClasses: true,\n     }).parse()\n-    console.log('readerable')\n-    return postProcessText(article.textContent)\n+    if (article?.textContent) {",
        "comment_created_at": "2025-06-07T18:22:45+00:00",
        "comment_author": "PeterDaveHello",
        "comment_body": "/ask Qodo, what do you think?",
        "pr_file_module": null
      },
      {
        "comment_id": "2134062362",
        "repo_full_name": "ChatGPTBox-dev/chatGPTBox",
        "pr_number": 865,
        "pr_file": "src/utils/get-core-content-text.mjs",
        "discussion_id": "2134049081",
        "commented_code": "@@ -71,11 +71,13 @@ export function getCoreContentText() {\n   }\n \n   if (isProbablyReaderable(document)) {\n-    let article = new Readability(document.cloneNode(true), {\n+    const article = new Readability(document.cloneNode(true), {\n       keepClasses: true,\n     }).parse()\n-    console.log('readerable')\n-    return postProcessText(article.textContent)\n+    if (article?.textContent) {",
        "comment_created_at": "2025-06-07T18:28:22+00:00",
        "comment_author": "PeterDaveHello",
        "comment_body": "/ask We are discussing this suggestion from GitHub Copilot. How does it look to you?\r\n\r\n> This check treats empty strings as falsy and will skip returning valid empty content. To distinguish null/undefined from empty text, consider using `if (article?.textContent != null)`.\r\n> ```suggestion\r\n>     if (article?.textContent != null) {\r\n> ```",
        "pr_file_module": null
      },
      {
        "comment_id": "2134079822",
        "repo_full_name": "ChatGPTBox-dev/chatGPTBox",
        "pr_number": 865,
        "pr_file": "src/utils/get-core-content-text.mjs",
        "discussion_id": "2134049081",
        "commented_code": "@@ -71,11 +71,13 @@ export function getCoreContentText() {\n   }\n \n   if (isProbablyReaderable(document)) {\n-    let article = new Readability(document.cloneNode(true), {\n+    const article = new Readability(document.cloneNode(true), {\n       keepClasses: true,\n     }).parse()\n-    console.log('readerable')\n-    return postProcessText(article.textContent)\n+    if (article?.textContent) {",
        "comment_created_at": "2025-06-07T19:01:33+00:00",
        "comment_author": "PeterDaveHello",
        "comment_body": "/ask have you also checked feedback from coderabbitai? Your suggestions look so different.",
        "pr_file_module": null
      },
      {
        "comment_id": "2134081279",
        "repo_full_name": "ChatGPTBox-dev/chatGPTBox",
        "pr_number": 865,
        "pr_file": "src/utils/get-core-content-text.mjs",
        "discussion_id": "2134049081",
        "commented_code": "@@ -71,11 +71,13 @@ export function getCoreContentText() {\n   }\n \n   if (isProbablyReaderable(document)) {\n-    let article = new Readability(document.cloneNode(true), {\n+    const article = new Readability(document.cloneNode(true), {\n       keepClasses: true,\n     }).parse()\n-    console.log('readerable')\n-    return postProcessText(article.textContent)\n+    if (article?.textContent) {",
        "comment_created_at": "2025-06-07T19:05:22+00:00",
        "comment_author": "PeterDaveHello",
        "comment_body": "/ask FYI, coderabbit said, so tell me what do you think:\r\n\r\n> @PeterDaveHello I disagree with Copilot's suggestion in this case. \r\n> \r\n> The current check `if (article?.textContent)` is actually more appropriate here because this is a content extraction function that should prioritize finding meaningful content. Here's why:\r\n> \r\n> 1. **Function purpose**: `getCoreContentText()` is designed to extract the main readable content from a webpage using multiple fallback strategies.\r\n> \r\n> 2. **Current behavior**: If Readability returns an empty string, the code falls through to try other extraction methods like finding the largest element or using `document.body`.\r\n> \r\n> 3. **Copilot's suggestion**: Would immediately return empty content without trying alternative extraction methods.\r\n> \r\n> For a content extraction function, if the primary method (Readability) yields no meaningful text, it's better to attempt fallback methods that might actually find content rather than returning empty text. The cascading fallback strategy is intentional here.\r\n> \r\n> The only scenario where Copilot's suggestion would be beneficial is if you specifically want to distinguish between \"Readability failed to parse\" (null) vs \"Readability parsed but found no content\" (empty string). However, for the end goal of extracting readable content, both cases should trigger fallback attempts.\r\n> \r\n> \r\n> <!-- <agentComponentType>chat-answer</agentComponentType> -->\r\n> \r\n> <!-- <rawResChunk><answer>@PeterDaveHello I disagree with Copilot's suggestion in this case. \r\n> \r\n> The current check `if (article?.textContent)` is actually more appropriate here because this is a content extraction function that should prioritize finding meaningful content. Here's why:\r\n> \r\n> 1. **Function purpose**: `getCoreContentText()` is designed to extract the main readable content from a webpage using multiple fallback strategies.\r\n> \r\n> 2. **Current behavior**: If Readability returns an empty string, the code falls through to try other extraction methods like finding the largest element or using `document.body`.\r\n> \r\n> 3. **Copilot's suggestion**: Would immediately return empty content without trying alternative extraction methods.\r\n> \r\n> For a content extraction function, if the primary method (Readability) yields no meaningful text, it's better to attempt fallback methods that might actually find content rather than returning empty text. The cascading fallback strategy is intentional here.\r\n> \r\n> The only scenario where Copilot's suggestion would be beneficial is if you specifically want to distinguish between \"Readability failed to parse\" (null) vs \"Readability parsed but found no content\" (empty string). However, for the end goal of extracting readable content, both cases should trigger fallback attempts.</answer></rawResChunk> -->\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2134096712",
        "repo_full_name": "ChatGPTBox-dev/chatGPTBox",
        "pr_number": 865,
        "pr_file": "src/utils/get-core-content-text.mjs",
        "discussion_id": "2134049081",
        "commented_code": "@@ -71,11 +71,13 @@ export function getCoreContentText() {\n   }\n \n   if (isProbablyReaderable(document)) {\n-    let article = new Readability(document.cloneNode(true), {\n+    const article = new Readability(document.cloneNode(true), {\n       keepClasses: true,\n     }).parse()\n-    console.log('readerable')\n-    return postProcessText(article.textContent)\n+    if (article?.textContent) {",
        "comment_created_at": "2025-06-07T19:14:57+00:00",
        "comment_author": "PeterDaveHello",
        "comment_body": "/ask just for confirmation, so your previous point of view was wrong? ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2134563125",
    "pr_number": 865,
    "pr_file": "src/utils/get-core-content-text.mjs",
    "created_at": "2025-06-08T09:20:51+00:00",
    "commented_code": "let article = new Readability(document.cloneNode(true), {\n       keepClasses: true,\n     }).parse()\n-    console.log('readerable')\n-    return postProcessText(article.textContent)\n+    if (article?.textContent) {\n+      console.log('readerable')\n+      return postProcessText(article.textContent)\n+    }",
    "repo_full_name": "ChatGPTBox-dev/chatGPTBox",
    "discussion_comments": [
      {
        "comment_id": "2134563125",
        "repo_full_name": "ChatGPTBox-dev/chatGPTBox",
        "pr_number": 865,
        "pr_file": "src/utils/get-core-content-text.mjs",
        "discussion_id": "2134563125",
        "commented_code": "@@ -74,8 +74,10 @@ export function getCoreContentText() {\n     let article = new Readability(document.cloneNode(true), {\n       keepClasses: true,\n     }).parse()\n-    console.log('readerable')\n-    return postProcessText(article.textContent)\n+    if (article?.textContent) {\n+      console.log('readerable')\n+      return postProcessText(article.textContent)\n+    }",
        "comment_created_at": "2025-06-08T09:20:51+00:00",
        "comment_author": "PeterDaveHello",
        "comment_body": "```suggestion\r\n    if (article?.textContent) {\r\n      console.log('readerable: successfully extracted content')\r\n      return postProcessText(article.textContent)\r\n    } else {\r\n      console.log('readerable: parsing failed despite probability check')\r\n    }\r\n```",
        "pr_file_module": null
      }
    ]
  }
]