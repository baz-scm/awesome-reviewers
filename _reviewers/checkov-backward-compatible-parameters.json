[
  {
    "discussion_id": "1366947703",
    "pr_number": 5569,
    "pr_file": "checkov/common/output/ai.py",
    "created_at": "2023-10-20T13:03:01+00:00",
    "commented_code": "return\n \n         try:\n-            completion = await openai.ChatCompletion.acreate(  # type:ignore[no-untyped-call]\n-                model=OPENAI_MODEL,\n-                messages=[\n-                    {\"role\": \"system\", \"content\": \"You are a security tool\"},\n-                    {\n-                        \"role\": \"user\",\n-                        \"content\": \"\".join(\n-                            [\n-                                f\"fix following code, which violates checkov policy '{record.check_name}':\n\",\n-                                *[line for _, line in record.code_block],\n-                            ]\n-                        ),\n-                    },\n-                    {\"role\": \"user\", \"content\": \"Explain\"},\n-                ],\n-                temperature=0,\n-                max_tokens=OPENAI_MAX_TOKENS,\n-            )\n+            # define common messages array\n+            messages = [\n+                {\"role\": \"system\", \"content\": \"You are a security tool\"},\n+                {\n+                    \"role\": \"user\",\n+                    \"content\": \"\".join(\n+                        [\n+                            f\"fix following code, which violates checkov policy '{record.check_name}':\n\",\n+                            *[line for _, line in record.code_block],\n+                        ]\n+                    ),\n+                },\n+                {\"role\": \"user\", \"content\": \"Explain\"},\n+            ],\n+            # depends on api_type, call ChatCompletion differently\n+            logging.info(f\"[_chat_complete]: self._api_type: {self._api_type}\")\n+            if (self._api_type == 'azure'):\n+                completion = await openai.ChatCompletion.acreate(  # type:ignore[no-untyped-call]\n+                    engine=self.AZURE_OPENAI_DEPLOYMENT_NAME,\n+                    messages=messages[0],",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1366947703",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5569,
        "pr_file": "checkov/common/output/ai.py",
        "discussion_id": "1366947703",
        "commented_code": "@@ -70,24 +93,38 @@ async def _chat_complete(self, record: Record) -> None:\n             return\n \n         try:\n-            completion = await openai.ChatCompletion.acreate(  # type:ignore[no-untyped-call]\n-                model=OPENAI_MODEL,\n-                messages=[\n-                    {\"role\": \"system\", \"content\": \"You are a security tool\"},\n-                    {\n-                        \"role\": \"user\",\n-                        \"content\": \"\".join(\n-                            [\n-                                f\"fix following code, which violates checkov policy '{record.check_name}':\\n\",\n-                                *[line for _, line in record.code_block],\n-                            ]\n-                        ),\n-                    },\n-                    {\"role\": \"user\", \"content\": \"Explain\"},\n-                ],\n-                temperature=0,\n-                max_tokens=OPENAI_MAX_TOKENS,\n-            )\n+            # define common messages array\n+            messages = [\n+                {\"role\": \"system\", \"content\": \"You are a security tool\"},\n+                {\n+                    \"role\": \"user\",\n+                    \"content\": \"\".join(\n+                        [\n+                            f\"fix following code, which violates checkov policy '{record.check_name}':\\n\",\n+                            *[line for _, line in record.code_block],\n+                        ]\n+                    ),\n+                },\n+                {\"role\": \"user\", \"content\": \"Explain\"},\n+            ],\n+            # depends on api_type, call ChatCompletion differently\n+            logging.info(f\"[_chat_complete]: self._api_type: {self._api_type}\")\n+            if (self._api_type == 'azure'):\n+                completion = await openai.ChatCompletion.acreate(  # type:ignore[no-untyped-call]\n+                    engine=self.AZURE_OPENAI_DEPLOYMENT_NAME,\n+                    messages=messages[0],",
        "comment_created_at": "2023-10-20T13:03:01+00:00",
        "comment_author": "gruebel",
        "comment_body": "```suggestion\r\n                    messages=messages,\r\n```\r\notherwise you only send the first message, same a few lines lower",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1273370241",
    "pr_number": 5375,
    "pr_file": "checkov/common/runners/base_runner.py",
    "created_at": "2023-07-25T11:05:22+00:00",
    "commented_code": "def get_graph_checks_report(self, root_folder: str, runner_filter: RunnerFilter) -> Report:\n         return Report(check_type=\"not_defined\")\n \n-    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str) -> dict[BaseGraphCheck, list[_CheckResult]]:\n+    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str, graph: Graph | None = None",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1273370241",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5375,
        "pr_file": "checkov/common/runners/base_runner.py",
        "discussion_id": "1273370241",
        "commented_code": "@@ -125,16 +126,19 @@ def load_external_checks(self, external_checks_dir: List[str]) -> None:\n     def get_graph_checks_report(self, root_folder: str, runner_filter: RunnerFilter) -> Report:\n         return Report(check_type=\"not_defined\")\n \n-    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str) -> dict[BaseGraphCheck, list[_CheckResult]]:\n+    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str, graph: Graph | None = None",
        "comment_created_at": "2023-07-25T11:05:22+00:00",
        "comment_author": "bo156",
        "comment_body": "why do you need to send the `graph` here as well? (instead of always using `get_reader_endpoint`)",
        "pr_file_module": null
      },
      {
        "comment_id": "1273640756",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5375,
        "pr_file": "checkov/common/runners/base_runner.py",
        "discussion_id": "1273370241",
        "commented_code": "@@ -125,16 +126,19 @@ def load_external_checks(self, external_checks_dir: List[str]) -> None:\n     def get_graph_checks_report(self, root_folder: str, runner_filter: RunnerFilter) -> Report:\n         return Report(check_type=\"not_defined\")\n \n-    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str) -> dict[BaseGraphCheck, list[_CheckResult]]:\n+    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str, graph: Graph | None = None",
        "comment_created_at": "2023-07-25T14:31:28+00:00",
        "comment_author": "maxamel",
        "comment_body": "We want to run on a specific graph, because we have multiple graphs now, not one as before ",
        "pr_file_module": null
      },
      {
        "comment_id": "1274889393",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5375,
        "pr_file": "checkov/common/runners/base_runner.py",
        "discussion_id": "1273370241",
        "commented_code": "@@ -125,16 +126,19 @@ def load_external_checks(self, external_checks_dir: List[str]) -> None:\n     def get_graph_checks_report(self, root_folder: str, runner_filter: RunnerFilter) -> Report:\n         return Report(check_type=\"not_defined\")\n \n-    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str) -> dict[BaseGraphCheck, list[_CheckResult]]:\n+    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str, graph: Graph | None = None",
        "comment_created_at": "2023-07-26T12:33:23+00:00",
        "comment_author": "bo156",
        "comment_body": "sound right, hadn't though about it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1208400462",
    "pr_number": 5107,
    "pr_file": "checkov/common/util/igraph_serialization.py",
    "created_at": "2023-05-28T07:26:58+00:00",
    "commented_code": "from igraph import Graph\n \n \n-def serialize_to_json(igraph: Graph) -> Dict[str, Any]:\n+def serialize_to_json(igraph: Graph, absolute_root_folder: str) -> Dict[str, Any]:",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1208400462",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5107,
        "pr_file": "checkov/common/util/igraph_serialization.py",
        "discussion_id": "1208400462",
        "commented_code": "@@ -7,7 +8,7 @@\n     from igraph import Graph\n \n \n-def serialize_to_json(igraph: Graph) -> Dict[str, Any]:\n+def serialize_to_json(igraph: Graph, absolute_root_folder: str) -> Dict[str, Any]:",
        "comment_created_at": "2023-05-28T07:26:58+00:00",
        "comment_author": "YaaraVerner",
        "comment_body": "can you make the new parameter optional? we copied the serializer here and will need to remove it from the platform and use this function instead. In the other cases, we won't save the `absolute_root_folder`",
        "pr_file_module": null
      },
      {
        "comment_id": "1208411315",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5107,
        "pr_file": "checkov/common/util/igraph_serialization.py",
        "discussion_id": "1208400462",
        "commented_code": "@@ -7,7 +8,7 @@\n     from igraph import Graph\n \n \n-def serialize_to_json(igraph: Graph) -> Dict[str, Any]:\n+def serialize_to_json(igraph: Graph, absolute_root_folder: str) -> Dict[str, Any]:",
        "comment_created_at": "2023-05-28T07:52:51+00:00",
        "comment_author": "bo156",
        "comment_body": "fixed",
        "pr_file_module": null
      }
    ]
  }
]