[
  {
    "discussion_id": "2160817944",
    "pr_number": 7219,
    "pr_file": "checkov/kubernetes/graph_manager.py",
    "created_at": "2025-06-23T06:32:42+00:00",
    "commented_code": "parsing_errors: Optional[dict[str, Exception]] = None,\n         download_external_modules: Optional[bool] = False,\n         excluded_paths: Optional[list[str]] = None,\n+        include_hidden: Optional[list[str]] = None,",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "2160817944",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7219,
        "pr_file": "checkov/kubernetes/graph_manager.py",
        "discussion_id": "2160817944",
        "commented_code": "@@ -25,9 +25,10 @@ def build_graph_from_source_directory(\n         parsing_errors: Optional[dict[str, Exception]] = None,\n         download_external_modules: Optional[bool] = False,\n         excluded_paths: Optional[list[str]] = None,\n+        include_hidden: Optional[list[str]] = None,",
        "comment_created_at": "2025-06-23T06:32:42+00:00",
        "comment_author": "bo156",
        "comment_body": "this function has the same signature across all graph managers, adding this parameter here breaks it.\r\nassuming you don't want to add it across all frameworks, I can suggest controlling this behaviour with an env var rather than a parameter:\r\n1. Add a matching env var under the file `checkov/common/util/env_vars_config.py`, with default False.\r\n2. In the specific function you wanted to use it, check for the value (using import) and define behavior accordingly",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2161564245",
    "pr_number": 7219,
    "pr_file": "checkov/kubernetes/kubernetes_utils.py",
    "created_at": "2025-06-23T12:57:22+00:00",
    "commented_code": "PARENT_RESOURCE_KEY_NAME = \"_parent_resource\"\n PARENT_RESOURCE_ID_KEY_NAME = \"_parent_resource_id\"\n FILTERED_RESOURCES_FOR_EDGE_BUILDERS = [\"NetworkPolicy\"]\n+IGNORE_HIDDEN_DIRECTORY_ENV = strtobool(os.getenv(\"CKV_IGNORE_HIDDEN_DIRECTORIES\", \"True\"))",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "2161564245",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7219,
        "pr_file": "checkov/kubernetes/kubernetes_utils.py",
        "discussion_id": "2161564245",
        "commented_code": "@@ -26,6 +26,7 @@\n PARENT_RESOURCE_KEY_NAME = \"_parent_resource\"\n PARENT_RESOURCE_ID_KEY_NAME = \"_parent_resource_id\"\n FILTERED_RESOURCES_FOR_EDGE_BUILDERS = [\"NetworkPolicy\"]\n+IGNORE_HIDDEN_DIRECTORY_ENV = strtobool(os.getenv(\"CKV_IGNORE_HIDDEN_DIRECTORIES\", \"True\"))",
        "comment_created_at": "2025-06-23T12:57:22+00:00",
        "comment_author": "bo156",
        "comment_body": "this line should be under the `env_var_config.py` rather than here (under the `common` dir with the rest of the env vars)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2052366113",
    "pr_number": 7111,
    "pr_file": "checkov/terraform/module_loading/module_finder.py",
    "created_at": "2025-04-21T13:07:47+00:00",
    "commented_code": "def find_modules(path: str) -> List[ModuleDownload]:\n     modules_found: list[ModuleDownload] = []\n \n+    # Leverage modules.json to better inform discovery. If we have this,\n+    # there should be no need to walk and gather modules\n+    if convert_str_to_bool(os.getenv('CHECKOV_EXPERIMENTAL_TERRAFORM_MANAGED_MODULES', True)):",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "2052366113",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7111,
        "pr_file": "checkov/terraform/module_loading/module_finder.py",
        "discussion_id": "2052366113",
        "commented_code": "@@ -36,6 +36,22 @@ def __str__(self) -> str:\n def find_modules(path: str) -> List[ModuleDownload]:\n     modules_found: list[ModuleDownload] = []\n \n+    # Leverage modules.json to better inform discovery. If we have this,\n+    # there should be no need to walk and gather modules\n+    if convert_str_to_bool(os.getenv('CHECKOV_EXPERIMENTAL_TERRAFORM_MANAGED_MODULES', True)):",
        "comment_created_at": "2025-04-21T13:07:47+00:00",
        "comment_author": "omriyoffe-panw",
        "comment_body": "Please use `checkov/common/util/env_vars_config.py` for environment variables.",
        "pr_file_module": null
      },
      {
        "comment_id": "2052386196",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7111,
        "pr_file": "checkov/terraform/module_loading/module_finder.py",
        "discussion_id": "2052366113",
        "commented_code": "@@ -36,6 +36,22 @@ def __str__(self) -> str:\n def find_modules(path: str) -> List[ModuleDownload]:\n     modules_found: list[ModuleDownload] = []\n \n+    # Leverage modules.json to better inform discovery. If we have this,\n+    # there should be no need to walk and gather modules\n+    if convert_str_to_bool(os.getenv('CHECKOV_EXPERIMENTAL_TERRAFORM_MANAGED_MODULES', True)):",
        "comment_created_at": "2025-04-21T13:28:36+00:00",
        "comment_author": "thentenaar",
        "comment_body": "I've added that one to env_vars_config. The flow otherwise remains unchanged.",
        "pr_file_module": null
      },
      {
        "comment_id": "2052398740",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7111,
        "pr_file": "checkov/terraform/module_loading/module_finder.py",
        "discussion_id": "2052366113",
        "commented_code": "@@ -36,6 +36,22 @@ def __str__(self) -> str:\n def find_modules(path: str) -> List[ModuleDownload]:\n     modules_found: list[ModuleDownload] = []\n \n+    # Leverage modules.json to better inform discovery. If we have this,\n+    # there should be no need to walk and gather modules\n+    if convert_str_to_bool(os.getenv('CHECKOV_EXPERIMENTAL_TERRAFORM_MANAGED_MODULES', True)):",
        "comment_created_at": "2025-04-21T13:41:41+00:00",
        "comment_author": "omriyoffe-panw",
        "comment_body": "You can see an example of how you can use it here:\r\nhttps://github.com/bridgecrewio/checkov/blob/e6041558ece3e5dee556b6bf935d960a2e91168d/checkov/terraform/graph_builder/foreach/foreach_entity_handler.py#L74\r\n\r\nAnd how it's defined here:\r\nhttps://github.com/bridgecrewio/checkov/blob/e6041558ece3e5dee556b6bf935d960a2e91168d/checkov/common/util/env_vars_config.py#L88\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1709163833",
    "pr_number": 6622,
    "pr_file": "checkov/terraform/context_parsers/base_parser.py",
    "created_at": "2024-08-08T10:24:52+00:00",
    "commented_code": "\"\"\"\n         Collects checkov skip comments to all definition blocks\n         :param definition_blocks: parsed definition blocks\n-        :return: context enriched with with skipped checks per skipped entity\n+        :return: context enriched with skipped checks per skipped entity\n         \"\"\"\n+        should_allow_multi_checks_skip = bool(os.getenv('CHECKOV_ALLOW_SKIP_MULTIPLE_ONE_LINE', 'False'))",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1709163833",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6622,
        "pr_file": "checkov/terraform/context_parsers/base_parser.py",
        "discussion_id": "1709163833",
        "commented_code": "@@ -91,8 +93,10 @@ def _collect_skip_comments(self, definition_blocks: List[Dict[str, Any]]) -> Dic\n         \"\"\"\n         Collects checkov skip comments to all definition blocks\n         :param definition_blocks: parsed definition blocks\n-        :return: context enriched with with skipped checks per skipped entity\n+        :return: context enriched with skipped checks per skipped entity\n         \"\"\"\n+        should_allow_multi_checks_skip = bool(os.getenv('CHECKOV_ALLOW_SKIP_MULTIPLE_ONE_LINE', 'False'))",
        "comment_created_at": "2024-08-08T10:24:52+00:00",
        "comment_author": "ChanochShayner",
        "comment_body": "```suggestion\r\n        should_allow_multi_checks_skip = strtobool(os.getenv('CHECKOV_ALLOW_SKIP_MULTIPLE_ONE_LINE', 'False'))\r\n```\r\nbool('False') equal to True.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1808612434",
    "pr_number": 6786,
    "pr_file": "checkov/sca_package_2/scanner.py",
    "created_at": "2024-10-21T11:33:11+00:00",
    "commented_code": "\"path\": bc_integration.repo_path,\n                 \"repoId\": bc_integration.repo_id,\n                 \"id\": bc_integration.timestamp,\n-                \"repositoryId\": \"\"\n+                \"repositoryId\": \"\",\n+                \"enableDotnetCpm\": os.getenv('ENABLE_DOTNET_CPM', 'False'),",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1808612434",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6786,
        "pr_file": "checkov/sca_package_2/scanner.py",
        "discussion_id": "1808612434",
        "commented_code": "@@ -43,7 +44,8 @@ def run_scan(self) -> bool:\n                 \"path\": bc_integration.repo_path,\n                 \"repoId\": bc_integration.repo_id,\n                 \"id\": bc_integration.timestamp,\n-                \"repositoryId\": \"\"\n+                \"repositoryId\": \"\",\n+                \"enableDotnetCpm\": os.getenv('ENABLE_DOTNET_CPM', 'False'),",
        "comment_created_at": "2024-10-21T11:33:11+00:00",
        "comment_author": "bo156",
        "comment_body": "all env vars in checkov are handled in `checkov/common/util/env_vars_config.py`, please add it there and use from import",
        "pr_file_module": null
      },
      {
        "comment_id": "1808685883",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6786,
        "pr_file": "checkov/sca_package_2/scanner.py",
        "discussion_id": "1808612434",
        "commented_code": "@@ -43,7 +44,8 @@ def run_scan(self) -> bool:\n                 \"path\": bc_integration.repo_path,\n                 \"repoId\": bc_integration.repo_id,\n                 \"id\": bc_integration.timestamp,\n-                \"repositoryId\": \"\"\n+                \"repositoryId\": \"\",\n+                \"enableDotnetCpm\": os.getenv('ENABLE_DOTNET_CPM', 'False'),",
        "comment_created_at": "2024-10-21T12:18:59+00:00",
        "comment_author": "OfekShimko",
        "comment_body": "fixed, thank you!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1679228902",
    "pr_number": 6572,
    "pr_file": "checkov/common/checks_infra/checks_parser.py",
    "created_at": "2024-07-16T11:29:03+00:00",
    "commented_code": "or (isinstance(resource_type, str) and resource_type.lower() == \"all\")\n                     or (isinstance(resource_type, list) and resource_type[0].lower() == \"all\")\n             ):\n-                check.resource_types = resources_types or []\n+                if bool(convert_str_to_bool(os.getenv('CKV_SUPPORT_ALL_RESOURCE_TYPE', False))):",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1679228902",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6572,
        "pr_file": "checkov/common/checks_infra/checks_parser.py",
        "discussion_id": "1679228902",
        "commented_code": "@@ -246,7 +247,11 @@ def _parse_raw_check(self, raw_check: Dict[str, Any], resources_types: Optional[\n                     or (isinstance(resource_type, str) and resource_type.lower() == \"all\")\n                     or (isinstance(resource_type, list) and resource_type[0].lower() == \"all\")\n             ):\n-                check.resource_types = resources_types or []\n+                if bool(convert_str_to_bool(os.getenv('CKV_SUPPORT_ALL_RESOURCE_TYPE', False))):",
        "comment_created_at": "2024-07-16T11:29:03+00:00",
        "comment_author": "bo156",
        "comment_body": "when adding a new env_var in checkov, you should add it in `checkov/common/util/env_vars_config.py` and use it from there, allows better handling of those variables throughout the code ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1618299068",
    "pr_number": 6359,
    "pr_file": "checkov/terraform/graph_builder/local_graph.py",
    "created_at": "2024-05-29T06:51:25+00:00",
    "commented_code": "self.vertices_by_module_dependency: Dict[TFModule | None, Dict[str, List[int]]] = defaultdict(partial(defaultdict, list))\n         self.enable_foreach_handling = strtobool(os.getenv('CHECKOV_ENABLE_FOREACH_HANDLING', 'True'))\n         self.enable_modules_foreach_handling = strtobool(os.getenv('CHECKOV_ENABLE_MODULES_FOREACH_HANDLING', 'True'))\n-        self.foreach_blocks: Dict[str, List[int]] = {BlockType.RESOURCE: [], BlockType.MODULE: []}\n+        self.enable_datas_foreach_handling = strtobool(os.getenv('CHECKOV_ENABLE_DATAS_FOREACH_HANDLING', 'False'))",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1618299068",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6359,
        "pr_file": "checkov/terraform/graph_builder/local_graph.py",
        "discussion_id": "1618299068",
        "commented_code": "@@ -66,7 +67,8 @@ def __init__(self, module: Module) -> None:\n         self.vertices_by_module_dependency: Dict[TFModule | None, Dict[str, List[int]]] = defaultdict(partial(defaultdict, list))\n         self.enable_foreach_handling = strtobool(os.getenv('CHECKOV_ENABLE_FOREACH_HANDLING', 'True'))\n         self.enable_modules_foreach_handling = strtobool(os.getenv('CHECKOV_ENABLE_MODULES_FOREACH_HANDLING', 'True'))\n-        self.foreach_blocks: Dict[str, List[int]] = {BlockType.RESOURCE: [], BlockType.MODULE: []}\n+        self.enable_datas_foreach_handling = strtobool(os.getenv('CHECKOV_ENABLE_DATAS_FOREACH_HANDLING', 'False'))",
        "comment_created_at": "2024-05-29T06:51:25+00:00",
        "comment_author": "bo156",
        "comment_body": "We also have a file called `env_vars_config` with the full state of all env vars, could you also add it there and use it instead?\r\nThis gives us a unified place to handle all env vars, and also if we need to import them in multiple places we can do it easily :)",
        "pr_file_module": null
      },
      {
        "comment_id": "1618370602",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6359,
        "pr_file": "checkov/terraform/graph_builder/local_graph.py",
        "discussion_id": "1618299068",
        "commented_code": "@@ -66,7 +67,8 @@ def __init__(self, module: Module) -> None:\n         self.vertices_by_module_dependency: Dict[TFModule | None, Dict[str, List[int]]] = defaultdict(partial(defaultdict, list))\n         self.enable_foreach_handling = strtobool(os.getenv('CHECKOV_ENABLE_FOREACH_HANDLING', 'True'))\n         self.enable_modules_foreach_handling = strtobool(os.getenv('CHECKOV_ENABLE_MODULES_FOREACH_HANDLING', 'True'))\n-        self.foreach_blocks: Dict[str, List[int]] = {BlockType.RESOURCE: [], BlockType.MODULE: []}\n+        self.enable_datas_foreach_handling = strtobool(os.getenv('CHECKOV_ENABLE_DATAS_FOREACH_HANDLING', 'False'))",
        "comment_created_at": "2024-05-29T07:43:02+00:00",
        "comment_author": "ChanochShayner",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  }
]