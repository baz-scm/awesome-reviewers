[
  {
    "discussion_id": "1721864549",
    "pr_number": 6657,
    "pr_file": "checkov/cloudformation/graph_builder/local_graph.py",
    "created_at": "2024-08-19T14:14:51+00:00",
    "commented_code": "transform_step=True,\n                         )\n                     elif isinstance(value, list):\n+                        # Remove duplicates\n+                        new_value = [*vertex.attributes[property], *value]\n+                        new_value_unique = []",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1721864549",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6657,
        "pr_file": "checkov/cloudformation/graph_builder/local_graph.py",
        "discussion_id": "1721864549",
        "commented_code": "@@ -154,10 +154,16 @@ def _add_sam_globals(self) -> None:\n                             transform_step=True,\n                         )\n                     elif isinstance(value, list):\n+                        # Remove duplicates\n+                        new_value = [*vertex.attributes[property], *value]\n+                        new_value_unique = []",
        "comment_created_at": "2024-08-19T14:14:51+00:00",
        "comment_author": "bo156",
        "comment_body": "why not use `list(set(new_value))`.\r\nalso `new_value` is a bad name, I would call it `list_updated_value` or something like that",
        "pr_file_module": null
      },
      {
        "comment_id": "1722800603",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6657,
        "pr_file": "checkov/cloudformation/graph_builder/local_graph.py",
        "discussion_id": "1721864549",
        "commented_code": "@@ -154,10 +154,16 @@ def _add_sam_globals(self) -> None:\n                             transform_step=True,\n                         )\n                     elif isinstance(value, list):\n+                        # Remove duplicates\n+                        new_value = [*vertex.attributes[property], *value]\n+                        new_value_unique = []",
        "comment_created_at": "2024-08-20T07:10:09+00:00",
        "comment_author": "omriyoffe-panw",
        "comment_body": "Some of the lists there have multiple types in them so `list(set(new_value))` didn't work. And I'll change the name",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1685758291",
    "pr_number": 6587,
    "pr_file": "checkov/common/checks_infra/registry.py",
    "created_at": "2024-07-21T15:04:10+00:00",
    "commented_code": "CHECKS_POSSIBLE_ENDING = {\".json\", \".yaml\", \".yml\"}\n \n \n+class IACFrameworkTypes(str, Enum):\n+    TERRAFORM = \"terraform\"\n+    CLOUDFORMATION = \"cloudformation\"\n+    SERVERLESS = \"serverless\"\n+    KUBERNETES = \"kubernetes\"\n+    SECRETS = \"secrets\"\n+    TERRAFORM_PLAN = \"terraform_plan\"\n+    ARM = \"arm\"\n+    DOCKERFILE = \"dockerfile\"\n+    DOCKER_IMAGE = \"docker_image\"\n+    GITHUB_CONFIGURATION = \"github_configuration\"\n+    GITLAB_CONFIGURATION = \"gitlab_configuration\"\n+    KUSTOMIZE = \"kustomize\"\n+    BICEP = \"bicep\"\n+    OPENAPI = \"openapi\"\n+    GITHUB_ACTION = \"github_actions\"\n+    HELM = \"helm\"\n+    GITLAB_CI = \"gitlab_ci\"\n+    AZURE_PIPELINES = \"azure_pipelines\"\n+    CIRCLECI_PIPELINES = \"circleci_pipelines\"\n+    ANSIBLE = \"ansible\"\n+\n+\n+IACFrameworksWithRunner = [IACFrameworkTypes.TERRAFORM, IACFrameworkTypes.CLOUDFORMATION, IACFrameworkTypes.KUBERNETES,",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1685758291",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6587,
        "pr_file": "checkov/common/checks_infra/registry.py",
        "discussion_id": "1685758291",
        "commented_code": "@@ -21,6 +22,34 @@\n CHECKS_POSSIBLE_ENDING = {\".json\", \".yaml\", \".yml\"}\n \n \n+class IACFrameworkTypes(str, Enum):\n+    TERRAFORM = \"terraform\"\n+    CLOUDFORMATION = \"cloudformation\"\n+    SERVERLESS = \"serverless\"\n+    KUBERNETES = \"kubernetes\"\n+    SECRETS = \"secrets\"\n+    TERRAFORM_PLAN = \"terraform_plan\"\n+    ARM = \"arm\"\n+    DOCKERFILE = \"dockerfile\"\n+    DOCKER_IMAGE = \"docker_image\"\n+    GITHUB_CONFIGURATION = \"github_configuration\"\n+    GITLAB_CONFIGURATION = \"gitlab_configuration\"\n+    KUSTOMIZE = \"kustomize\"\n+    BICEP = \"bicep\"\n+    OPENAPI = \"openapi\"\n+    GITHUB_ACTION = \"github_actions\"\n+    HELM = \"helm\"\n+    GITLAB_CI = \"gitlab_ci\"\n+    AZURE_PIPELINES = \"azure_pipelines\"\n+    CIRCLECI_PIPELINES = \"circleci_pipelines\"\n+    ANSIBLE = \"ansible\"\n+\n+\n+IACFrameworksWithRunner = [IACFrameworkTypes.TERRAFORM, IACFrameworkTypes.CLOUDFORMATION, IACFrameworkTypes.KUBERNETES,",
        "comment_created_at": "2024-07-21T15:04:10+00:00",
        "comment_author": "lirshindalman",
        "comment_body": "the naming is a bit confusing, we have more frameworks with runners. maybe `GraphSupportedIACFrameworks` ?",
        "pr_file_module": null
      },
      {
        "comment_id": "1685759448",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6587,
        "pr_file": "checkov/common/checks_infra/registry.py",
        "discussion_id": "1685758291",
        "commented_code": "@@ -21,6 +22,34 @@\n CHECKS_POSSIBLE_ENDING = {\".json\", \".yaml\", \".yml\"}\n \n \n+class IACFrameworkTypes(str, Enum):\n+    TERRAFORM = \"terraform\"\n+    CLOUDFORMATION = \"cloudformation\"\n+    SERVERLESS = \"serverless\"\n+    KUBERNETES = \"kubernetes\"\n+    SECRETS = \"secrets\"\n+    TERRAFORM_PLAN = \"terraform_plan\"\n+    ARM = \"arm\"\n+    DOCKERFILE = \"dockerfile\"\n+    DOCKER_IMAGE = \"docker_image\"\n+    GITHUB_CONFIGURATION = \"github_configuration\"\n+    GITLAB_CONFIGURATION = \"gitlab_configuration\"\n+    KUSTOMIZE = \"kustomize\"\n+    BICEP = \"bicep\"\n+    OPENAPI = \"openapi\"\n+    GITHUB_ACTION = \"github_actions\"\n+    HELM = \"helm\"\n+    GITLAB_CI = \"gitlab_ci\"\n+    AZURE_PIPELINES = \"azure_pipelines\"\n+    CIRCLECI_PIPELINES = \"circleci_pipelines\"\n+    ANSIBLE = \"ansible\"\n+\n+\n+IACFrameworksWithRunner = [IACFrameworkTypes.TERRAFORM, IACFrameworkTypes.CLOUDFORMATION, IACFrameworkTypes.KUBERNETES,",
        "comment_created_at": "2024-07-21T15:09:21+00:00",
        "comment_author": "lirshindalman",
        "comment_body": "and we have the `GraphSource` enum in checkov/common/graph/graph_builder/consts.py, maybe you can use this? so that we don't duplicate the code.",
        "pr_file_module": null
      },
      {
        "comment_id": "1689266199",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6587,
        "pr_file": "checkov/common/checks_infra/registry.py",
        "discussion_id": "1685758291",
        "commented_code": "@@ -21,6 +22,34 @@\n CHECKS_POSSIBLE_ENDING = {\".json\", \".yaml\", \".yml\"}\n \n \n+class IACFrameworkTypes(str, Enum):\n+    TERRAFORM = \"terraform\"\n+    CLOUDFORMATION = \"cloudformation\"\n+    SERVERLESS = \"serverless\"\n+    KUBERNETES = \"kubernetes\"\n+    SECRETS = \"secrets\"\n+    TERRAFORM_PLAN = \"terraform_plan\"\n+    ARM = \"arm\"\n+    DOCKERFILE = \"dockerfile\"\n+    DOCKER_IMAGE = \"docker_image\"\n+    GITHUB_CONFIGURATION = \"github_configuration\"\n+    GITLAB_CONFIGURATION = \"gitlab_configuration\"\n+    KUSTOMIZE = \"kustomize\"\n+    BICEP = \"bicep\"\n+    OPENAPI = \"openapi\"\n+    GITHUB_ACTION = \"github_actions\"\n+    HELM = \"helm\"\n+    GITLAB_CI = \"gitlab_ci\"\n+    AZURE_PIPELINES = \"azure_pipelines\"\n+    CIRCLECI_PIPELINES = \"circleci_pipelines\"\n+    ANSIBLE = \"ansible\"\n+\n+\n+IACFrameworksWithRunner = [IACFrameworkTypes.TERRAFORM, IACFrameworkTypes.CLOUDFORMATION, IACFrameworkTypes.KUBERNETES,",
        "comment_created_at": "2024-07-24T07:16:44+00:00",
        "comment_author": "taviassaf",
        "comment_body": "Thank you!\r\nI renamed to const to `GraphSupportedIACFrameworks` and used `GraphSource`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1624193463",
    "pr_number": 6390,
    "pr_file": "checkov/secrets/runner.py",
    "created_at": "2024-06-03T10:30:39+00:00",
    "commented_code": "self._modify_invalid_secrets_check_result_to_skipped(report)\n             return report\n \n+    @staticmethod\n+    def _prioritise_secrets(secret_records: Dict[str, SecretsRecord], secret_key: str, check_id: str) -> bool:",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1624193463",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6390,
        "pr_file": "checkov/secrets/runner.py",
        "discussion_id": "1624193463",
        "commented_code": "@@ -319,6 +319,17 @@ def run(\n                 self._modify_invalid_secrets_check_result_to_skipped(report)\n             return report\n \n+    @staticmethod\n+    def _prioritise_secrets(secret_records: Dict[str, SecretsRecord], secret_key: str, check_id: str) -> bool:",
        "comment_created_at": "2024-06-03T10:30:39+00:00",
        "comment_author": "tronxd",
        "comment_body": "```suggestion\r\n    def _should_prioritise_secrets(secret_records: Dict[str, SecretsRecord], secret_key: str, check_id: str) -> bool:\r\n```\r\neither rename or change the return type to not be a boolean",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1127561480",
    "pr_number": 4626,
    "pr_file": "checkov/terraform_json/runner.py",
    "created_at": "2023-03-07T09:11:39+00:00",
    "commented_code": "+from __future__ import annotations\n+\n+import logging\n+import os\n+from typing import TYPE_CHECKING, Any\n+\n+from checkov.common.bridgecrew.check_type import CheckType\n+from checkov.common.checks_infra.registry import get_graph_checks_registry\n+from checkov.common.graph.graph_builder import CustomAttributes\n+from checkov.common.graph.graph_builder.consts import GraphSource\n+from checkov.common.output.graph_record import GraphRecord\n+from checkov.common.output.record import Record\n+from checkov.common.output.report import Report\n+from checkov.common.runners.base_runner import CHECKOV_CREATE_GRAPH\n+from checkov.common.util.consts import START_LINE, END_LINE\n+from checkov.common.util.secrets import omit_secret_value_from_checks\n+from checkov.runner_filter import RunnerFilter\n+from checkov.terraform.checks.resource.registry import resource_registry\n+from checkov.terraform.graph_builder.local_graph import TerraformLocalGraph\n+from checkov.terraform.runner import Runner as TerraformRunner\n+from checkov.terraform_json.utils import get_scannable_file_paths, TF_JSON_POSSIBLE_FILE_ENDINGS, create_definitions\n+\n+if TYPE_CHECKING:\n+    from checkov.common.graph.checks_infra.registry import BaseRegistry\n+    from checkov.terraform.graph_manager import TerraformGraphManager\n+    from checkov.common.typing import LibraryGraphConnector, _CheckResult\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+class Runner(TerraformRunner):",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1127561480",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 4626,
        "pr_file": "checkov/terraform_json/runner.py",
        "discussion_id": "1127561480",
        "commented_code": "@@ -0,0 +1,230 @@\n+from __future__ import annotations\n+\n+import logging\n+import os\n+from typing import TYPE_CHECKING, Any\n+\n+from checkov.common.bridgecrew.check_type import CheckType\n+from checkov.common.checks_infra.registry import get_graph_checks_registry\n+from checkov.common.graph.graph_builder import CustomAttributes\n+from checkov.common.graph.graph_builder.consts import GraphSource\n+from checkov.common.output.graph_record import GraphRecord\n+from checkov.common.output.record import Record\n+from checkov.common.output.report import Report\n+from checkov.common.runners.base_runner import CHECKOV_CREATE_GRAPH\n+from checkov.common.util.consts import START_LINE, END_LINE\n+from checkov.common.util.secrets import omit_secret_value_from_checks\n+from checkov.runner_filter import RunnerFilter\n+from checkov.terraform.checks.resource.registry import resource_registry\n+from checkov.terraform.graph_builder.local_graph import TerraformLocalGraph\n+from checkov.terraform.runner import Runner as TerraformRunner\n+from checkov.terraform_json.utils import get_scannable_file_paths, TF_JSON_POSSIBLE_FILE_ENDINGS, create_definitions\n+\n+if TYPE_CHECKING:\n+    from checkov.common.graph.checks_infra.registry import BaseRegistry\n+    from checkov.terraform.graph_manager import TerraformGraphManager\n+    from checkov.common.typing import LibraryGraphConnector, _CheckResult\n+\n+logger = logging.getLogger(__name__)\n+\n+\n+class Runner(TerraformRunner):",
        "comment_created_at": "2023-03-07T09:11:39+00:00",
        "comment_author": "bo156",
        "comment_body": "Should probably be called `TerraformJsonRunner` to avoid multiple instances of the name `Runner` in the code",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1433918818",
    "pr_number": 5892,
    "pr_file": "checkov/sast/record.py",
    "created_at": "2023-12-21T11:01:40+00:00",
    "commented_code": "self.cwe = cwe\n         self.owasp = owasp\n         self.show_severity = show_severity\n+        self.dataflow = data_flow",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1433918818",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5892,
        "pr_file": "checkov/sast/record.py",
        "discussion_id": "1433918818",
        "commented_code": "@@ -43,6 +45,7 @@ def __init__(self,\n         self.cwe = cwe\n         self.owasp = owasp\n         self.show_severity = show_severity\n+        self.dataflow = data_flow",
        "comment_created_at": "2023-12-21T11:01:40+00:00",
        "comment_author": "arielkru",
        "comment_body": "```suggestion\r\n        self.data_flow = data_flow\r\n```\r\nno?",
        "pr_file_module": null
      },
      {
        "comment_id": "1433928260",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5892,
        "pr_file": "checkov/sast/record.py",
        "discussion_id": "1433918818",
        "commented_code": "@@ -43,6 +45,7 @@ def __init__(self,\n         self.cwe = cwe\n         self.owasp = owasp\n         self.show_severity = show_severity\n+        self.dataflow = data_flow",
        "comment_created_at": "2023-12-21T11:10:25+00:00",
        "comment_author": "arielkru",
        "comment_body": "I think its better to add a `metadata` that keeps the structure of our report, so its easier to extend or change in the future. So in this case its `metadata.taint_flow` (originaly its taint_mode but I think tait_flow is clearer)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1217692852",
    "pr_number": 5112,
    "pr_file": "checkov/terraform/plan_parser.py",
    "created_at": "2023-06-05T08:11:30+00:00",
    "commented_code": "\"\"\"Returns a resource address to resource changes dict\"\"\"\n \n     resource_changes_map = {}\n-\n     resource_changes = template.get(\"resource_changes\")\n+\n     if resource_changes and isinstance(resource_changes, list):\n-        resource_changes_map = {\n-            change.get(\"address\", \"\"): change\n-            for change in resource_changes\n-        }\n+        for each in resource_changes:",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1217692852",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5112,
        "pr_file": "checkov/terraform/plan_parser.py",
        "discussion_id": "1217692852",
        "commented_code": "@@ -238,13 +240,24 @@ def _get_resource_changes(template: dict[str, Any]) -> dict[str, dict[str, Any]]\n     \"\"\"Returns a resource address to resource changes dict\"\"\"\n \n     resource_changes_map = {}\n-\n     resource_changes = template.get(\"resource_changes\")\n+\n     if resource_changes and isinstance(resource_changes, list):\n-        resource_changes_map = {\n-            change.get(\"address\", \"\"): change\n-            for change in resource_changes\n-        }\n+        for each in resource_changes:",
        "comment_created_at": "2023-06-05T08:11:30+00:00",
        "comment_author": "bo156",
        "comment_body": "can you rename `each` to something like `resource` or `changed_resource`?\r\nWill be more readable in python code (even though I guess it comes from terraform conventions)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1203911531",
    "pr_number": 4885,
    "pr_file": "checkov/common/util/data_structures_utils.py",
    "created_at": "2023-05-24T11:08:15+00:00",
    "commented_code": "return value\n \n \n+def deepcopy(obj: _T) -> _T:",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1203911531",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 4885,
        "pr_file": "checkov/common/util/data_structures_utils.py",
        "discussion_id": "1203911531",
        "commented_code": "@@ -94,6 +95,12 @@ def find_in_dict(input_dict: dict[str, Any], key_path: str) -> Any:\n     return value\n \n \n+def deepcopy(obj: _T) -> _T:",
        "comment_created_at": "2023-05-24T11:08:15+00:00",
        "comment_author": "bo156",
        "comment_body": "Maybe change the name to `pickle_deepcopy`?\r\nI just want the IDE to complete me automatically to the correct deepcopy, \r\nto avoid mistakenly importing the wrong one.\r\nAlso, it will be clearer to new developers in the future that this is something internal",
        "pr_file_module": null
      },
      {
        "comment_id": "1203943490",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 4885,
        "pr_file": "checkov/common/util/data_structures_utils.py",
        "discussion_id": "1203911531",
        "commented_code": "@@ -94,6 +95,12 @@ def find_in_dict(input_dict: dict[str, Any], key_path: str) -> Any:\n     return value\n \n \n+def deepcopy(obj: _T) -> _T:",
        "comment_created_at": "2023-05-24T11:29:55+00:00",
        "comment_author": "gruebel",
        "comment_body": "yeah, sure. I just named them identical to keep the code changes minimal 😄 ",
        "pr_file_module": null
      }
    ]
  }
]