[
  {
    "discussion_id": "1841613502",
    "pr_number": 6758,
    "pr_file": "checkov/terraform/checks/resource/azure/ACREnableRetentionPolicy.py",
    "created_at": "2024-11-14T06:02:33+00:00",
    "commented_code": "categories = (CheckCategories.GENERAL_SECURITY,)\n         super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n \n-    def get_inspected_key(self) -> str:\n-        return \"retention_policy/enabled\"",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1841613502",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6758,
        "pr_file": "checkov/terraform/checks/resource/azure/ACREnableRetentionPolicy.py",
        "discussion_id": "1841613502",
        "commented_code": "@@ -10,8 +12,11 @@ def __init__(self) -> None:\n         categories = (CheckCategories.GENERAL_SECURITY,)\n         super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n \n-    def get_inspected_key(self) -> str:\n-        return \"retention_policy/enabled\"",
        "comment_created_at": "2024-11-14T06:02:33+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "Hi @paddymorgan84 thanks for the contribution! We still have users using azurerm version 3 (such as https://registry.terraform.io/providers/hashicorp/azurerm/3.117.0/docs/resources/container_registry), my recommendation is to modify the check to look for either attribute.",
        "pr_file_module": null
      },
      {
        "comment_id": "1843325197",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6758,
        "pr_file": "checkov/terraform/checks/resource/azure/ACREnableRetentionPolicy.py",
        "discussion_id": "1841613502",
        "commented_code": "@@ -10,8 +12,11 @@ def __init__(self) -> None:\n         categories = (CheckCategories.GENERAL_SECURITY,)\n         super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n \n-    def get_inspected_key(self) -> str:\n-        return \"retention_policy/enabled\"",
        "comment_created_at": "2024-11-15T07:55:23+00:00",
        "comment_author": "paddymorgan84",
        "comment_body": "Thanks for the feedback. Good point. I'll modify the policy to use `scan_resource_conf` instead and bolster the unit tests a little. I'm away for a few days but will look on my return 👍",
        "pr_file_module": null
      },
      {
        "comment_id": "1844603622",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6758,
        "pr_file": "checkov/terraform/checks/resource/azure/ACREnableRetentionPolicy.py",
        "discussion_id": "1841613502",
        "commented_code": "@@ -10,8 +12,11 @@ def __init__(self) -> None:\n         categories = (CheckCategories.GENERAL_SECURITY,)\n         super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n \n-    def get_inspected_key(self) -> str:\n-        return \"retention_policy/enabled\"",
        "comment_created_at": "2024-11-15T22:28:03+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "Thanks, @paddymorgan84! We got a support case about this one, so I'll go ahead and adjust it, but if you can fix your others, we'd really appreciate it. Enjoy the time away",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1208400462",
    "pr_number": 5107,
    "pr_file": "checkov/common/util/igraph_serialization.py",
    "created_at": "2023-05-28T07:26:58+00:00",
    "commented_code": "from igraph import Graph\n \n \n-def serialize_to_json(igraph: Graph) -> Dict[str, Any]:\n+def serialize_to_json(igraph: Graph, absolute_root_folder: str) -> Dict[str, Any]:",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1208400462",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5107,
        "pr_file": "checkov/common/util/igraph_serialization.py",
        "discussion_id": "1208400462",
        "commented_code": "@@ -7,7 +8,7 @@\n     from igraph import Graph\n \n \n-def serialize_to_json(igraph: Graph) -> Dict[str, Any]:\n+def serialize_to_json(igraph: Graph, absolute_root_folder: str) -> Dict[str, Any]:",
        "comment_created_at": "2023-05-28T07:26:58+00:00",
        "comment_author": "YaaraVerner",
        "comment_body": "can you make the new parameter optional? we copied the serializer here and will need to remove it from the platform and use this function instead. In the other cases, we won't save the `absolute_root_folder`",
        "pr_file_module": null
      },
      {
        "comment_id": "1208411315",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5107,
        "pr_file": "checkov/common/util/igraph_serialization.py",
        "discussion_id": "1208400462",
        "commented_code": "@@ -7,7 +8,7 @@\n     from igraph import Graph\n \n \n-def serialize_to_json(igraph: Graph) -> Dict[str, Any]:\n+def serialize_to_json(igraph: Graph, absolute_root_folder: str) -> Dict[str, Any]:",
        "comment_created_at": "2023-05-28T07:52:51+00:00",
        "comment_author": "bo156",
        "comment_body": "fixed",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1273370241",
    "pr_number": 5375,
    "pr_file": "checkov/common/runners/base_runner.py",
    "created_at": "2023-07-25T11:05:22+00:00",
    "commented_code": "def get_graph_checks_report(self, root_folder: str, runner_filter: RunnerFilter) -> Report:\n         return Report(check_type=\"not_defined\")\n \n-    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str) -> dict[BaseGraphCheck, list[_CheckResult]]:\n+    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str, graph: Graph | None = None",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1273370241",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5375,
        "pr_file": "checkov/common/runners/base_runner.py",
        "discussion_id": "1273370241",
        "commented_code": "@@ -125,16 +126,19 @@ def load_external_checks(self, external_checks_dir: List[str]) -> None:\n     def get_graph_checks_report(self, root_folder: str, runner_filter: RunnerFilter) -> Report:\n         return Report(check_type=\"not_defined\")\n \n-    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str) -> dict[BaseGraphCheck, list[_CheckResult]]:\n+    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str, graph: Graph | None = None",
        "comment_created_at": "2023-07-25T11:05:22+00:00",
        "comment_author": "bo156",
        "comment_body": "why do you need to send the `graph` here as well? (instead of always using `get_reader_endpoint`)",
        "pr_file_module": null
      },
      {
        "comment_id": "1273640756",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5375,
        "pr_file": "checkov/common/runners/base_runner.py",
        "discussion_id": "1273370241",
        "commented_code": "@@ -125,16 +126,19 @@ def load_external_checks(self, external_checks_dir: List[str]) -> None:\n     def get_graph_checks_report(self, root_folder: str, runner_filter: RunnerFilter) -> Report:\n         return Report(check_type=\"not_defined\")\n \n-    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str) -> dict[BaseGraphCheck, list[_CheckResult]]:\n+    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str, graph: Graph | None = None",
        "comment_created_at": "2023-07-25T14:31:28+00:00",
        "comment_author": "maxamel",
        "comment_body": "We want to run on a specific graph, because we have multiple graphs now, not one as before ",
        "pr_file_module": null
      },
      {
        "comment_id": "1274889393",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5375,
        "pr_file": "checkov/common/runners/base_runner.py",
        "discussion_id": "1273370241",
        "commented_code": "@@ -125,16 +126,19 @@ def load_external_checks(self, external_checks_dir: List[str]) -> None:\n     def get_graph_checks_report(self, root_folder: str, runner_filter: RunnerFilter) -> Report:\n         return Report(check_type=\"not_defined\")\n \n-    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str) -> dict[BaseGraphCheck, list[_CheckResult]]:\n+    def run_graph_checks_results(self, runner_filter: RunnerFilter, report_type: str, graph: Graph | None = None",
        "comment_created_at": "2023-07-26T12:33:23+00:00",
        "comment_author": "bo156",
        "comment_body": "sound right, hadn't though about it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1218170289",
    "pr_number": 5177,
    "pr_file": "checkov/common/runners/runner_registry.py",
    "created_at": "2023-06-05T14:38:26+00:00",
    "commented_code": "logging.error(f\"Failed to create report for {runner.check_type} framework\")\n                     report = Report(check_type=runner.check_type)\n \n-                return report\n+                if runner.graph_manager:\n+                    check_type_to_graph = {runner.check_type: runner.graph_manager.get_reader_endpoint()}\n+                    return report, check_type_to_graph\n+                return report, {}",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1218170289",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5177,
        "pr_file": "checkov/common/runners/runner_registry.py",
        "discussion_id": "1218170289",
        "commented_code": "@@ -134,7 +134,10 @@ def _parallel_run(runner: _BaseRunner) -> Report | list[Report]:\n                     logging.error(f\"Failed to create report for {runner.check_type} framework\")\n                     report = Report(check_type=runner.check_type)\n \n-                return report\n+                if runner.graph_manager:\n+                    check_type_to_graph = {runner.check_type: runner.graph_manager.get_reader_endpoint()}\n+                    return report, check_type_to_graph\n+                return report, {}",
        "comment_created_at": "2023-06-05T14:38:26+00:00",
        "comment_author": "gruebel",
        "comment_body": "```suggestion\r\n                if runner.graph_manager:\r\n                    check_type_to_graph = {runner.check_type: runner.graph_manager.get_reader_endpoint()}\r\n                    return report, runner.check_type, runner.graph_manager.get_reader_endpoint()\r\n                return report, None, None\r\n```\r\nhow about returning all as a normal tuple, then you can check if both are not `None` and update `full_check_type_to_graph[check_type] = reader_endpoint`",
        "pr_file_module": null
      },
      {
        "comment_id": "1218189876",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 5177,
        "pr_file": "checkov/common/runners/runner_registry.py",
        "discussion_id": "1218170289",
        "commented_code": "@@ -134,7 +134,10 @@ def _parallel_run(runner: _BaseRunner) -> Report | list[Report]:\n                     logging.error(f\"Failed to create report for {runner.check_type} framework\")\n                     report = Report(check_type=runner.check_type)\n \n-                return report\n+                if runner.graph_manager:\n+                    check_type_to_graph = {runner.check_type: runner.graph_manager.get_reader_endpoint()}\n+                    return report, check_type_to_graph\n+                return report, {}",
        "comment_created_at": "2023-06-05T14:51:52+00:00",
        "comment_author": "bo156",
        "comment_body": "fixed",
        "pr_file_module": null
      }
    ]
  }
]