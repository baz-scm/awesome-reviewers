[
  {
    "discussion_id": "2008483341",
    "pr_number": 7056,
    "pr_file": "checkov/terraform/checks/resource/aws/EMRPubliclyAccessible.py",
    "created_at": "2025-03-21T23:42:30+00:00",
    "commented_code": "+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.common.util.type_forcers import force_list\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class EMRPubliclyAccessible(BaseResourceCheck):\n+\n+    def __init__(self):\n+        name = \"AWS EMR Block public access setting disabled\"\n+        id = \"CKV_AWS_390\"\n+        supported_resources = ['aws_emr_block_public_access_configuration']\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n+\n+    def scan_resource_conf(self, conf):\n+        if 'block_public_access' in conf:\n+            for arg in list(conf['block_public_access'][0].keys()):\n+                if arg in ['block_public_acls', 'ignore_public_acls', 'restrict_public_buckets']:\n+                    if str(conf['block_public_access'][0][arg][0]).lower() == 'false':\n+                        return CheckResult.FAILED\n+        return CheckResult.PASSED",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "2008483341",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7056,
        "pr_file": "checkov/terraform/checks/resource/aws/EMRPubliclyAccessible.py",
        "discussion_id": "2008483341",
        "commented_code": "@@ -0,0 +1,24 @@\n+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.common.util.type_forcers import force_list\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class EMRPubliclyAccessible(BaseResourceCheck):\n+\n+    def __init__(self):\n+        name = \"AWS EMR Block public access setting disabled\"\n+        id = \"CKV_AWS_390\"\n+        supported_resources = ['aws_emr_block_public_access_configuration']\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n+\n+    def scan_resource_conf(self, conf):\n+        if 'block_public_access' in conf:\n+            for arg in list(conf['block_public_access'][0].keys()):\n+                if arg in ['block_public_acls', 'ignore_public_acls', 'restrict_public_buckets']:\n+                    if str(conf['block_public_access'][0][arg][0]).lower() == 'false':\n+                        return CheckResult.FAILED\n+        return CheckResult.PASSED",
        "comment_created_at": "2025-03-21T23:42:30+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "These attributes don't exist. You want to check if `block_public_security_group_rules` is true (BaseResourceValueCheck)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2087549837",
    "pr_number": 7056,
    "pr_file": "checkov/terraform/checks/resource/aws/AutoScalingGroupWithPublicAccess.py",
    "created_at": "2025-05-13T20:06:29+00:00",
    "commented_code": "+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class AutoScalingGroupWithPublicAccess(BaseResourceCheck):\n+\n+    def __init__(self):\n+        name = \"Ensure AWS Auto Scaling group launch configuration doesn't have public IP address assignment enabled\"\n+        id = \"CKV_AWS_389\"\n+        supported_resources = ['aws_launch_configuration']\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n+\n+    def scan_resource_conf(self, conf):\n+        if 'associate_public_ip_address' in conf:\n+            if str(conf['associate_public_ip_address'][0]).lower() == 'true':\n+                return CheckResult.FAILED\n+        return CheckResult.PASSED\n+\n+\n+check = AutoScalingGroupWithPublicAccess()",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "2087549837",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7056,
        "pr_file": "checkov/terraform/checks/resource/aws/AutoScalingGroupWithPublicAccess.py",
        "discussion_id": "2087549837",
        "commented_code": "@@ -0,0 +1,21 @@\n+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class AutoScalingGroupWithPublicAccess(BaseResourceCheck):\n+\n+    def __init__(self):\n+        name = \"Ensure AWS Auto Scaling group launch configuration doesn't have public IP address assignment enabled\"\n+        id = \"CKV_AWS_389\"\n+        supported_resources = ['aws_launch_configuration']\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n+\n+    def scan_resource_conf(self, conf):\n+        if 'associate_public_ip_address' in conf:\n+            if str(conf['associate_public_ip_address'][0]).lower() == 'true':\n+                return CheckResult.FAILED\n+        return CheckResult.PASSED\n+\n+\n+check = AutoScalingGroupWithPublicAccess()",
        "comment_created_at": "2025-05-13T20:06:29+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "```suggestion\r\nfrom checkov.common.models.enums import CheckCategories\r\nfrom checkov.terraform.checks.resource.base_resource_negative_value_check import BaseResourceNegativeValueCheck\r\n\r\n\r\nclass AutoScalingGroupWithPublicAccess(BaseResourceNegativeValueCheck):\r\n\r\n    def __init__(self):\r\n        name = \"Ensure AWS Auto Scaling group launch configuration doesn't have public IP address assignment enabled\"\r\n        id = \"CKV_AWS_389\"\r\n        supported_resources = ['aws_launch_configuration']\r\n        categories = [CheckCategories.NETWORKING]\r\n        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\r\n\r\n    def get_forbidden_values(self):\r\n        return [True]\r\n\r\n    def get_inspected_key(self):\r\n        return \"associate_public_ip_address\"\r\n\r\n\r\ncheck = AutoScalingGroupWithPublicAccess()\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2087554733",
    "pr_number": 7056,
    "pr_file": "checkov/terraform/checks/resource/aws/EMRPubliclyAccessible.py",
    "created_at": "2025-05-13T20:09:59+00:00",
    "commented_code": "+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class EMRPubliclyAccessible(BaseResourceCheck):\n+\n+    def __init__(self):\n+        name = \"Ensure AWS EMR block public access setting is enabled\"\n+        id = \"CKV_AWS_390\"\n+        supported_resources = ['aws_emr_block_public_access_configuration']\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n+\n+    def scan_resource_conf(self, conf):\n+        if 'block_public_security_group_rules' in conf:\n+            if str(conf['block_public_security_group_rules'][0]).lower() == \"false\":\n+                return CheckResult.FAILED\n+        return CheckResult.PASSED\n+\n+\n+check = EMRPubliclyAccessible()",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "2087554733",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7056,
        "pr_file": "checkov/terraform/checks/resource/aws/EMRPubliclyAccessible.py",
        "discussion_id": "2087554733",
        "commented_code": "@@ -0,0 +1,21 @@\n+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class EMRPubliclyAccessible(BaseResourceCheck):\n+\n+    def __init__(self):\n+        name = \"Ensure AWS EMR block public access setting is enabled\"\n+        id = \"CKV_AWS_390\"\n+        supported_resources = ['aws_emr_block_public_access_configuration']\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n+\n+    def scan_resource_conf(self, conf):\n+        if 'block_public_security_group_rules' in conf:\n+            if str(conf['block_public_security_group_rules'][0]).lower() == \"false\":\n+                return CheckResult.FAILED\n+        return CheckResult.PASSED\n+\n+\n+check = EMRPubliclyAccessible()",
        "comment_created_at": "2025-05-13T20:09:59+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "```suggestion\r\nfrom checkov.terraform.checks.resource.base_resource_value_check import BaseResourceValueCheck\r\nfrom checkov.common.models.enums import CheckCategories\r\n\r\n\r\nclass EMRPubliclyAccessible(BaseResourceValueCheck):\r\n\r\n    def __init__(self):\r\n        name = \"Ensure AWS EMR block public access setting is enabled\"\r\n        id = \"CKV_AWS_390\"\r\n        supported_resources = ['aws_emr_block_public_access_configuration']\r\n        categories = [CheckCategories.NETWORKING]\r\n        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\r\n\r\n    def get_inspected_key(self):\r\n        return \"block_public_security_group_rules\"\r\n\r\n\r\ncheck = EMRPubliclyAccessible()\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2087561246",
    "pr_number": 7056,
    "pr_file": "checkov/terraform/checks/resource/aws/S3AccessPointPubliclyAccessible.py",
    "created_at": "2025-05-13T20:15:00+00:00",
    "commented_code": "+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class S3AccessPointPubliclyAccessible(BaseResourceCheck):\n+\n+    def __init__(self):\n+        name = \"Ensure AWS S3 access point block public access setting is enabled\"\n+        id = \"CKV_AWS_392\"\n+        supported_resources = ['aws_s3_account_public_access_block']\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n+\n+    def scan_resource_conf(self, conf):\n+        if 'restrict_public_buckets' in conf:\n+            if str(conf['restrict_public_buckets'][0]).lower() == 'false':\n+                return CheckResult.FAILED\n+        return CheckResult.PASSED\n+\n+\n+check = S3AccessPointPubliclyAccessible()",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "2087561246",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7056,
        "pr_file": "checkov/terraform/checks/resource/aws/S3AccessPointPubliclyAccessible.py",
        "discussion_id": "2087561246",
        "commented_code": "@@ -0,0 +1,21 @@\n+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class S3AccessPointPubliclyAccessible(BaseResourceCheck):\n+\n+    def __init__(self):\n+        name = \"Ensure AWS S3 access point block public access setting is enabled\"\n+        id = \"CKV_AWS_392\"\n+        supported_resources = ['aws_s3_account_public_access_block']\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources)\n+\n+    def scan_resource_conf(self, conf):\n+        if 'restrict_public_buckets' in conf:\n+            if str(conf['restrict_public_buckets'][0]).lower() == 'false':\n+                return CheckResult.FAILED\n+        return CheckResult.PASSED\n+\n+\n+check = S3AccessPointPubliclyAccessible()",
        "comment_created_at": "2025-05-13T20:15:00+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "This is the same check as CKV_AWS_56. You want instead to do the same as CKV_AWS_56 but for the resource type `aws_s3_access_point`. Include network_origin = Internet",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1957702005",
    "pr_number": 7011,
    "pr_file": "checkov/terraform/checks/resource/azure/VMDiskWithPublicAccess.py",
    "created_at": "2025-02-17T06:51:50+00:00",
    "commented_code": "+from typing import Dict, List, Any\n+\n+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class VMDiskWithPublicAccess(BaseResourceCheck):\n+    def __init__(self) -> None:\n+        name = \"Azure Virtual Machine disks that are configured with public network access\"",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1957702005",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 7011,
        "pr_file": "checkov/terraform/checks/resource/azure/VMDiskWithPublicAccess.py",
        "discussion_id": "1957702005",
        "commented_code": "@@ -0,0 +1,28 @@\n+from typing import Dict, List, Any\n+\n+from checkov.common.models.enums import CheckResult, CheckCategories\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+\n+\n+class VMDiskWithPublicAccess(BaseResourceCheck):\n+    def __init__(self) -> None:\n+        name = \"Azure Virtual Machine disks that are configured with public network access\"",
        "comment_created_at": "2025-02-17T06:51:50+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "```suggestion\r\n        name = \"Ensure Azure Virtual Machine disks are configured without public network access\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1901072422",
    "pr_number": 6928,
    "pr_file": "checkov/terraform/checks/resource/azure/AzureBatchAccountEndpointAccessDefaultAction.py",
    "created_at": "2025-01-02T16:53:31+00:00",
    "commented_code": "+from __future__ import annotations\n+\n+from typing import Any\n+\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+from checkov.common.models.enums import CheckCategories, CheckResult\n+\n+\n+class AzureBatchAccountEndpointAccessDefaultAction(BaseResourceCheck):\n+\n+    def __init__(self) -> None:\n+        name = \"Ensure that Azure Batch account public network access is 'enabled' account access default action is 'ignore'\"\n+        id = \"CKV_AZURE_248\"\n+        supported_resources = (\"azurerm_batch_account\",)\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources,)\n+\n+    def scan_resource_conf(self, conf: dict[str, Any]) -> CheckResult:\n+\n+        # public network access is disabled, no need to check for account access default action\n+        public_network_access = conf.get('public_network_access_enabled', [None])[0]\n+        if not public_network_access:\n+            return CheckResult.PASSED",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1901072422",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6928,
        "pr_file": "checkov/terraform/checks/resource/azure/AzureBatchAccountEndpointAccessDefaultAction.py",
        "discussion_id": "1901072422",
        "commented_code": "@@ -0,0 +1,38 @@\n+from __future__ import annotations\n+\n+from typing import Any\n+\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+from checkov.common.models.enums import CheckCategories, CheckResult\n+\n+\n+class AzureBatchAccountEndpointAccessDefaultAction(BaseResourceCheck):\n+\n+    def __init__(self) -> None:\n+        name = \"Ensure that Azure Batch account public network access is 'enabled' account access default action is 'ignore'\"\n+        id = \"CKV_AZURE_248\"\n+        supported_resources = (\"azurerm_batch_account\",)\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources,)\n+\n+    def scan_resource_conf(self, conf: dict[str, Any]) -> CheckResult:\n+\n+        # public network access is disabled, no need to check for account access default action\n+        public_network_access = conf.get('public_network_access_enabled', [None])[0]\n+        if not public_network_access:\n+            return CheckResult.PASSED",
        "comment_created_at": "2025-01-02T16:53:31+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "The default for [public_network_access_enabled](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/batch_account#public_network_access_enabled-1) is `true` which is bad. If this field is missing you need to check the default_action before passing/failing.\r\n\r\nLooks like you'll need to adjust the ARM one as well for this.",
        "pr_file_module": null
      },
      {
        "comment_id": "1903213697",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6928,
        "pr_file": "checkov/terraform/checks/resource/azure/AzureBatchAccountEndpointAccessDefaultAction.py",
        "discussion_id": "1901072422",
        "commented_code": "@@ -0,0 +1,38 @@\n+from __future__ import annotations\n+\n+from typing import Any\n+\n+from checkov.terraform.checks.resource.base_resource_check import BaseResourceCheck\n+from checkov.common.models.enums import CheckCategories, CheckResult\n+\n+\n+class AzureBatchAccountEndpointAccessDefaultAction(BaseResourceCheck):\n+\n+    def __init__(self) -> None:\n+        name = \"Ensure that Azure Batch account public network access is 'enabled' account access default action is 'ignore'\"\n+        id = \"CKV_AZURE_248\"\n+        supported_resources = (\"azurerm_batch_account\",)\n+        categories = [CheckCategories.NETWORKING]\n+        super().__init__(name=name, id=id, categories=categories, supported_resources=supported_resources,)\n+\n+    def scan_resource_conf(self, conf: dict[str, Any]) -> CheckResult:\n+\n+        # public network access is disabled, no need to check for account access default action\n+        public_network_access = conf.get('public_network_access_enabled', [None])[0]\n+        if not public_network_access:\n+            return CheckResult.PASSED",
        "comment_created_at": "2025-01-05T07:36:06+00:00",
        "comment_author": "emaohi",
        "comment_body": "correct, updated the logic accordingly",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1901074070",
    "pr_number": 6928,
    "pr_file": "checkov/arm/checks/resource/AzureBatchAccountEndpointAccessDefaultAction.py",
    "created_at": "2025-01-02T16:55:09+00:00",
    "commented_code": "+from __future__ import annotations\n+\n+from typing import Any\n+\n+from checkov.arm.base_resource_check import BaseResourceCheck\n+from checkov.common.models.enums import CheckCategories, CheckResult\n+\n+\n+class AzureBatchAccountEndpointAccessDefaultAction(BaseResourceCheck):\n+\n+    FORBIDDEN_PUBLIC_NETWORK_ACCESS = \"enabled\"\n+    FORBIDDEN_NETWORK_ACCESS_DEFAULT_ACTION = \"allow\"\n+\n+    def __init__(self) -> None:\n+        name = \"Ensure that Azure Batch account public network access is 'enabled' account access default action is 'ignore'\"",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1901074070",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6928,
        "pr_file": "checkov/arm/checks/resource/AzureBatchAccountEndpointAccessDefaultAction.py",
        "discussion_id": "1901074070",
        "commented_code": "@@ -0,0 +1,48 @@\n+from __future__ import annotations\n+\n+from typing import Any\n+\n+from checkov.arm.base_resource_check import BaseResourceCheck\n+from checkov.common.models.enums import CheckCategories, CheckResult\n+\n+\n+class AzureBatchAccountEndpointAccessDefaultAction(BaseResourceCheck):\n+\n+    FORBIDDEN_PUBLIC_NETWORK_ACCESS = \"enabled\"\n+    FORBIDDEN_NETWORK_ACCESS_DEFAULT_ACTION = \"allow\"\n+\n+    def __init__(self) -> None:\n+        name = \"Ensure that Azure Batch account public network access is 'enabled' account access default action is 'ignore'\"",
        "comment_created_at": "2025-01-02T16:55:09+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "```suggestion\r\n        name = \"Ensure that Azure Batch account public network access is disabled and account access default action is deny\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1683791181",
    "pr_number": 6448,
    "pr_file": "checkov/terraform/checks/resource/tencentcloud/CDBInternetService.py",
    "created_at": "2024-07-19T05:03:17+00:00",
    "commented_code": "+from checkov.common.models.enums import CheckCategories, CheckResult\n+from checkov.terraform.checks.resource.base_resource_value_check import \\\n+    BaseResourceCheck\n+\n+\n+class CDBInternetService(BaseResourceCheck):\n+    def __init__(self):\n+        name = \"Ensure CDB not enable internet service\"",
    "repo_full_name": "bridgecrewio/checkov",
    "discussion_comments": [
      {
        "comment_id": "1683791181",
        "repo_full_name": "bridgecrewio/checkov",
        "pr_number": 6448,
        "pr_file": "checkov/terraform/checks/resource/tencentcloud/CDBInternetService.py",
        "discussion_id": "1683791181",
        "commented_code": "@@ -0,0 +1,21 @@\n+from checkov.common.models.enums import CheckCategories, CheckResult\n+from checkov.terraform.checks.resource.base_resource_value_check import \\\n+    BaseResourceCheck\n+\n+\n+class CDBInternetService(BaseResourceCheck):\n+    def __init__(self):\n+        name = \"Ensure CDB not enable internet service\"",
        "comment_created_at": "2024-07-19T05:03:17+00:00",
        "comment_author": "tsmithv11",
        "comment_body": "```suggestion\r\n        name = \"Ensure Tencent Cloud mysql instances do not enable access from public networks\"\r\n```",
        "pr_file_module": null
      }
    ]
  }
]