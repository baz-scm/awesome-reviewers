[
  {
    "discussion_id": "1092458036",
    "pr_number": 13534,
    "pr_file": "knife/lib/chef/knife/bootstrap.rb",
    "created_at": "2023-01-31T20:40:06+00:00",
    "commented_code": "option :connection_protocol,\n        short: \"-o PROTOCOL\",\n        long: \"--connection-protocol PROTOCOL\",\n        description: \"The protocol to use to connect to the target node.\",\n        in: SUPPORTED_CONNECTION_PROTOCOLS\n        description: \"The protocol to use to connect to the target node.\"",
    "repo_full_name": "chef/chef",
    "discussion_comments": [
      {
        "comment_id": "1092458036",
        "repo_full_name": "chef/chef",
        "pr_number": 13534,
        "pr_file": "knife/lib/chef/knife/bootstrap.rb",
        "discussion_id": "1092458036",
        "commented_code": "@@ -54,8 +54,7 @@ class Bootstrap < Knife\n       option :connection_protocol,\n         short: \"-o PROTOCOL\",\n         long: \"--connection-protocol PROTOCOL\",\n-        description: \"The protocol to use to connect to the target node.\",\n-        in: SUPPORTED_CONNECTION_PROTOCOLS\n+        description: \"The protocol to use to connect to the target node.\"",
        "comment_created_at": "2023-01-31T20:40:06+00:00",
        "comment_author": "jaymzh",
        "comment_body": "maybe add some examples, `... (such as 'ssh' or 'winrm')`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1949480111",
    "pr_number": 14767,
    "pr_file": "lib/chef/resource/registry_key.rb",
    "created_at": "2025-02-10T16:34:00+00:00",
    "commented_code": "}\n      property :recursive, [TrueClass, FalseClass], default: false\n      property :architecture, Symbol, default: :machine, equal_to: %i{machine x86_64 i386}\n      property :only_record_changes, [TrueClass, FalseClass], default: false",
    "repo_full_name": "chef/chef",
    "discussion_comments": [
      {
        "comment_id": "1949480111",
        "repo_full_name": "chef/chef",
        "pr_number": 14767,
        "pr_file": "lib/chef/resource/registry_key.rb",
        "discussion_id": "1949480111",
        "commented_code": "@@ -150,6 +151,7 @@ class RegistryKey < Chef::Resource\n       }\n       property :recursive, [TrueClass, FalseClass], default: false\n       property :architecture, Symbol, default: :machine, equal_to: %i{machine x86_64 i386}\n+      property :only_record_changes, [TrueClass, FalseClass], default: false",
        "comment_created_at": "2025-02-10T16:34:00+00:00",
        "comment_author": "tpowell-progress",
        "comment_body": "This feels like it needs more documentation.",
        "pr_file_module": null
      },
      {
        "comment_id": "1951393657",
        "repo_full_name": "chef/chef",
        "pr_number": 14767,
        "pr_file": "lib/chef/resource/registry_key.rb",
        "discussion_id": "1949480111",
        "commented_code": "@@ -150,6 +151,7 @@ class RegistryKey < Chef::Resource\n       }\n       property :recursive, [TrueClass, FalseClass], default: false\n       property :architecture, Symbol, default: :machine, equal_to: %i{machine x86_64 i386}\n+      property :only_record_changes, [TrueClass, FalseClass], default: false",
        "comment_created_at": "2025-02-11T18:46:56+00:00",
        "comment_author": "jaymzh",
        "comment_body": "yes please. I thought there was a `:help` option to properties that was used for docs...",
        "pr_file_module": null
      },
      {
        "comment_id": "1951704950",
        "repo_full_name": "chef/chef",
        "pr_number": 14767,
        "pr_file": "lib/chef/resource/registry_key.rb",
        "discussion_id": "1949480111",
        "commented_code": "@@ -150,6 +151,7 @@ class RegistryKey < Chef::Resource\n       }\n       property :recursive, [TrueClass, FalseClass], default: false\n       property :architecture, Symbol, default: :machine, equal_to: %i{machine x86_64 i386}\n+      property :only_record_changes, [TrueClass, FalseClass], default: false",
        "comment_created_at": "2025-02-11T22:38:09+00:00",
        "comment_author": "tpowell-progress",
        "comment_body": "`, description: \"describe the property here\"` (see `lib/chef/resource.rb` for this value and also `introduced: \"...\"`)\r\n\r\nAlso add an example above using it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1309270055",
    "pr_number": 13873,
    "pr_file": "lib/chef/resource/apt_package.rb",
    "created_at": "2023-08-29T19:30:09+00:00",
    "commented_code": "options '--no-install-recommends'\n      end\n      ```\n\n      **Prevent the apt_package resource from installing packages with pattern matching names**:\n\n      By default, the apt_package resource will install the named package.\n      If it can't find a package with the exact same name, it will treat the package name as regex string and match with any package that matches that regex.\n      This may lead Chef Infra Client to install one or more packages with names that match that regex.\n\n      In this example, `anchor_package_regex true` prevents the apt_package resource from installing matching packages if it can't find the `lua5.3` package.",
    "repo_full_name": "chef/chef",
    "discussion_comments": [
      {
        "comment_id": "1309270055",
        "repo_full_name": "chef/chef",
        "pr_number": 13873,
        "pr_file": "lib/chef/resource/apt_package.rb",
        "discussion_id": "1309270055",
        "commented_code": "@@ -52,6 +52,21 @@ class AptPackage < Chef::Resource::Package\n         options '--no-install-recommends'\n       end\n       ```\n+\n+      **Prevent the apt_package resource from installing packages with pattern matching names**:\n+\n+      By default, the apt_package resource will install the named package.\n+      If it can't find a package with the exact same name, it will treat the package name as regex string and match with any package that matches that regex.\n+      This may lead Chef Infra Client to install one or more packages with names that match that regex.\n+\n+      In this example, `anchor_package_regex true` prevents the apt_package resource from installing matching packages if it can't find the `lua5.3` package.",
        "comment_created_at": "2023-08-29T19:30:09+00:00",
        "comment_author": "jaymzh",
        "comment_body": "```suggestion\r\n      In this example, `anchor_package_regex true` helps prevent that by adding `^` and `$` anchors around the package name. Example: `lua5.3` would be `^lua5.3$`.\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1312064464",
        "repo_full_name": "chef/chef",
        "pr_number": 13873,
        "pr_file": "lib/chef/resource/apt_package.rb",
        "discussion_id": "1309270055",
        "commented_code": "@@ -52,6 +52,21 @@ class AptPackage < Chef::Resource::Package\n         options '--no-install-recommends'\n       end\n       ```\n+\n+      **Prevent the apt_package resource from installing packages with pattern matching names**:\n+\n+      By default, the apt_package resource will install the named package.\n+      If it can't find a package with the exact same name, it will treat the package name as regex string and match with any package that matches that regex.\n+      This may lead Chef Infra Client to install one or more packages with names that match that regex.\n+\n+      In this example, `anchor_package_regex true` prevents the apt_package resource from installing matching packages if it can't find the `lua5.3` package.",
        "comment_created_at": "2023-08-31T18:44:28+00:00",
        "comment_author": "IanMadd",
        "comment_body": "We can't use regex anchors in docs. So can you rewrite this without those.",
        "pr_file_module": null
      },
      {
        "comment_id": "1316298270",
        "repo_full_name": "chef/chef",
        "pr_number": 13873,
        "pr_file": "lib/chef/resource/apt_package.rb",
        "discussion_id": "1309270055",
        "commented_code": "@@ -52,6 +52,21 @@ class AptPackage < Chef::Resource::Package\n         options '--no-install-recommends'\n       end\n       ```\n+\n+      **Prevent the apt_package resource from installing packages with pattern matching names**:\n+\n+      By default, the apt_package resource will install the named package.\n+      If it can't find a package with the exact same name, it will treat the package name as regex string and match with any package that matches that regex.\n+      This may lead Chef Infra Client to install one or more packages with names that match that regex.\n+\n+      In this example, `anchor_package_regex true` prevents the apt_package resource from installing matching packages if it can't find the `lua5.3` package.",
        "comment_created_at": "2023-09-05T19:13:23+00:00",
        "comment_author": "tpowell-progress",
        "comment_body": "@IanMadd the apt package manager treats any specified package name as a regex, so we definitely need to be able to describe a regular expression in the documentation, and without the visual of the anchors, I don't think it's going to be as obvious what this setting accomplishes.",
        "pr_file_module": null
      },
      {
        "comment_id": "1316300705",
        "repo_full_name": "chef/chef",
        "pr_number": 13873,
        "pr_file": "lib/chef/resource/apt_package.rb",
        "discussion_id": "1309270055",
        "commented_code": "@@ -52,6 +52,21 @@ class AptPackage < Chef::Resource::Package\n         options '--no-install-recommends'\n       end\n       ```\n+\n+      **Prevent the apt_package resource from installing packages with pattern matching names**:\n+\n+      By default, the apt_package resource will install the named package.\n+      If it can't find a package with the exact same name, it will treat the package name as regex string and match with any package that matches that regex.\n+      This may lead Chef Infra Client to install one or more packages with names that match that regex.\n+\n+      In this example, `anchor_package_regex true` prevents the apt_package resource from installing matching packages if it can't find the `lua5.3` package.",
        "comment_created_at": "2023-09-05T19:15:44+00:00",
        "comment_author": "jaymzh",
        "comment_body": "That's insane. Things take regular expressions in Chef, how do you document that? Can we escape it? Regex.escape? There has to be some way to do that. We'll file a docs Issue here for that, lets get this solved so we can document our software.",
        "pr_file_module": null
      },
      {
        "comment_id": "1316302624",
        "repo_full_name": "chef/chef",
        "pr_number": 13873,
        "pr_file": "lib/chef/resource/apt_package.rb",
        "discussion_id": "1309270055",
        "commented_code": "@@ -52,6 +52,21 @@ class AptPackage < Chef::Resource::Package\n         options '--no-install-recommends'\n       end\n       ```\n+\n+      **Prevent the apt_package resource from installing packages with pattern matching names**:\n+\n+      By default, the apt_package resource will install the named package.\n+      If it can't find a package with the exact same name, it will treat the package name as regex string and match with any package that matches that regex.\n+      This may lead Chef Infra Client to install one or more packages with names that match that regex.\n+\n+      In this example, `anchor_package_regex true` prevents the apt_package resource from installing matching packages if it can't find the `lua5.3` package.",
        "comment_created_at": "2023-09-05T19:17:54+00:00",
        "comment_author": "jaymzh",
        "comment_body": "https://github.com/chef/chef/issues/13908",
        "pr_file_module": null
      },
      {
        "comment_id": "1318696748",
        "repo_full_name": "chef/chef",
        "pr_number": 13873,
        "pr_file": "lib/chef/resource/apt_package.rb",
        "discussion_id": "1309270055",
        "commented_code": "@@ -52,6 +52,21 @@ class AptPackage < Chef::Resource::Package\n         options '--no-install-recommends'\n       end\n       ```\n+\n+      **Prevent the apt_package resource from installing packages with pattern matching names**:\n+\n+      By default, the apt_package resource will install the named package.\n+      If it can't find a package with the exact same name, it will treat the package name as regex string and match with any package that matches that regex.\n+      This may lead Chef Infra Client to install one or more packages with names that match that regex.\n+\n+      In this example, `anchor_package_regex true` prevents the apt_package resource from installing matching packages if it can't find the `lua5.3` package.",
        "comment_created_at": "2023-09-07T14:24:15+00:00",
        "comment_author": "IanMadd",
        "comment_body": "@jaymzh @tpowell-progress \r\n\r\nThe point isn't to remove regex from docs, it's to use plain text descriptions as much as possible. If we were documenting a tool that accepted a regular expression string, I'd be all for it. But in this case the user is entering `true` and `false`, so if we can we should avoid the regex anchors and expressions and explain this in plain text.\r\n\r\n\r\nSo what about something like this:\r\n\r\n> In this example, `anchor_package_regex true` prevents the apt_package resource from treating `lua5.3` as a regular expression string if it can't find a package with the exact name `lua5.3`. This prevents apt_package from installing similarly named packages like `lua5.3-rrd` or `liblua5.3-dev`.\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1312069987",
    "pr_number": 13873,
    "pr_file": "lib/chef/resource/apt_package.rb",
    "created_at": "2023-08-31T18:49:22+00:00",
    "commented_code": "options '--no-install-recommends'\n      end\n      ```\n\n      **Prevent the apt_package resource from installing packages with pattern matching names**:\n\n      By default, the apt_package resource will install the named package.\n      If it can't find a package with the exact same name, it will treat the package name as regex string and match with any package that matches that regex.",
    "repo_full_name": "chef/chef",
    "discussion_comments": [
      {
        "comment_id": "1312069987",
        "repo_full_name": "chef/chef",
        "pr_number": 13873,
        "pr_file": "lib/chef/resource/apt_package.rb",
        "discussion_id": "1312069987",
        "commented_code": "@@ -52,6 +52,21 @@ class AptPackage < Chef::Resource::Package\n         options '--no-install-recommends'\n       end\n       ```\n+\n+      **Prevent the apt_package resource from installing packages with pattern matching names**:\n+\n+      By default, the apt_package resource will install the named package.\n+      If it can't find a package with the exact same name, it will treat the package name as regex string and match with any package that matches that regex.",
        "comment_created_at": "2023-08-31T18:49:22+00:00",
        "comment_author": "IanMadd",
        "comment_body": "We can't use the term `regex` in docs.\r\n\r\n```suggestion\r\n      If it can't find a package with the exact same name, it will treat the package name as regular expression string and match with any package that matches that regular expression.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "766320006",
    "pr_number": 12358,
    "pr_file": "chef-utils/lib/chef-utils/dsl/virtualization.rb",
    "created_at": "2021-12-10T03:50:06+00:00",
    "commented_code": "node.dig(\"virtualization\", \"system\") == \"vmware\" && node.dig(\"virtualization\", \"role\") == \"host\"\n      end\n\n      # Determine if the current node is virtualized on VMware Desktop (Fusion/Player/Workstation).\n      #\n      # @param [Chef::Node] node\n      #",
    "repo_full_name": "chef/chef",
    "discussion_comments": [
      {
        "comment_id": "766320006",
        "repo_full_name": "chef/chef",
        "pr_number": 12358,
        "pr_file": "chef-utils/lib/chef-utils/dsl/virtualization.rb",
        "discussion_id": "766320006",
        "commented_code": "@@ -140,6 +140,26 @@ def vmware_host?(node = __getnode)\n         node.dig(\"virtualization\", \"system\") == \"vmware\" && node.dig(\"virtualization\", \"role\") == \"host\"\n       end\n \n+      # Determine if the current node is virtualized on VMware Desktop (Fusion/Player/Workstation).\n+      #\n+      # @param [Chef::Node] node\n+      #",
        "comment_created_at": "2021-12-10T03:50:06+00:00",
        "comment_author": "tas50",
        "comment_body": "Can you add the yard `@since` to these for 17.9. We generate the vscode plugin off this file and use those to document when a helper became available.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "478450911",
    "pr_number": 10171,
    "pr_file": "lib/chef/provider/mount/linux.rb",
    "created_at": "2020-08-27T14:13:14+00:00",
    "commented_code": "#\n# Author:: Antima Gupta (<agupta@chef.io>)\n# Copyright:: Copyright (c) Chef Software Inc.\n# License:: Apache License, Version 2.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nrequire_relative \"../mount\"\n\nclass Chef\n  class Provider\n    class Mount\n      class Linux < Chef::Provider::Mount::Mount\n\n        provides :mount, os: \"linux\"\n\n        # Check to see if the volume is mounted.\n        # \"findmnt\" outputs the mount points with volume.\n        # Convert the mount_point of the resource to a real path in case it\n        # contains symlinks in its parents dirs.\n\n        def mounted?\n          mounted = false\n\n          real_mount_point = if ::File.exists? @new_resource.mount_point\n                               ::File.realpath(@new_resource.mount_point)\n                             else\n                               @new_resource.mount_point\n                             end\n\n          shell_out!(\"findmnt -rn\").stdout.each_line do |line|\n            case line\n            when /\\A#{Regexp.escape(real_mount_point)}\\s+#{device_mount_regex}\\s/",
    "repo_full_name": "chef/chef",
    "discussion_comments": [
      {
        "comment_id": "478450911",
        "repo_full_name": "chef/chef",
        "pr_number": 10171,
        "pr_file": "lib/chef/provider/mount/linux.rb",
        "discussion_id": "478450911",
        "commented_code": "@@ -0,0 +1,60 @@\n+#\n+# Author:: Antima Gupta (<agupta@chef.io>)\n+# Copyright:: Copyright (c) Chef Software Inc.\n+# License:: Apache License, Version 2.0\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+require_relative \"../mount\"\n+\n+class Chef\n+  class Provider\n+    class Mount\n+      class Linux < Chef::Provider::Mount::Mount\n+\n+        provides :mount, os: \"linux\"\n+\n+        # Check to see if the volume is mounted.\n+        # \"findmnt\" outputs the mount points with volume.\n+        # Convert the mount_point of the resource to a real path in case it\n+        # contains symlinks in its parents dirs.\n+\n+        def mounted?\n+          mounted = false\n+\n+          real_mount_point = if ::File.exists? @new_resource.mount_point\n+                               ::File.realpath(@new_resource.mount_point)\n+                             else\n+                               @new_resource.mount_point\n+                             end\n+\n+          shell_out!(\"findmnt -rn\").stdout.each_line do |line|\n+            case line\n+            when /\\A#{Regexp.escape(real_mount_point)}\\s+#{device_mount_regex}\\s/",
        "comment_created_at": "2020-08-27T14:13:14+00:00",
        "comment_author": "jaymzh",
        "comment_body": "This looks really nice. One thing that would be useful though would be to add a comment for each `when` that has an example line you're matching.",
        "pr_file_module": null
      },
      {
        "comment_id": "478613103",
        "repo_full_name": "chef/chef",
        "pr_number": 10171,
        "pr_file": "lib/chef/provider/mount/linux.rb",
        "discussion_id": "478450911",
        "commented_code": "@@ -0,0 +1,60 @@\n+#\n+# Author:: Antima Gupta (<agupta@chef.io>)\n+# Copyright:: Copyright (c) Chef Software Inc.\n+# License:: Apache License, Version 2.0\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+require_relative \"../mount\"\n+\n+class Chef\n+  class Provider\n+    class Mount\n+      class Linux < Chef::Provider::Mount::Mount\n+\n+        provides :mount, os: \"linux\"\n+\n+        # Check to see if the volume is mounted.\n+        # \"findmnt\" outputs the mount points with volume.\n+        # Convert the mount_point of the resource to a real path in case it\n+        # contains symlinks in its parents dirs.\n+\n+        def mounted?\n+          mounted = false\n+\n+          real_mount_point = if ::File.exists? @new_resource.mount_point\n+                               ::File.realpath(@new_resource.mount_point)\n+                             else\n+                               @new_resource.mount_point\n+                             end\n+\n+          shell_out!(\"findmnt -rn\").stdout.each_line do |line|\n+            case line\n+            when /\\A#{Regexp.escape(real_mount_point)}\\s+#{device_mount_regex}\\s/",
        "comment_created_at": "2020-08-27T18:25:47+00:00",
        "comment_author": "tas50",
        "comment_body": "Permalinks to rubular are super handy in this sort of case https://rubular.com/",
        "pr_file_module": null
      },
      {
        "comment_id": "479244129",
        "repo_full_name": "chef/chef",
        "pr_number": 10171,
        "pr_file": "lib/chef/provider/mount/linux.rb",
        "discussion_id": "478450911",
        "commented_code": "@@ -0,0 +1,60 @@\n+#\n+# Author:: Antima Gupta (<agupta@chef.io>)\n+# Copyright:: Copyright (c) Chef Software Inc.\n+# License:: Apache License, Version 2.0\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+require_relative \"../mount\"\n+\n+class Chef\n+  class Provider\n+    class Mount\n+      class Linux < Chef::Provider::Mount::Mount\n+\n+        provides :mount, os: \"linux\"\n+\n+        # Check to see if the volume is mounted.\n+        # \"findmnt\" outputs the mount points with volume.\n+        # Convert the mount_point of the resource to a real path in case it\n+        # contains symlinks in its parents dirs.\n+\n+        def mounted?\n+          mounted = false\n+\n+          real_mount_point = if ::File.exists? @new_resource.mount_point\n+                               ::File.realpath(@new_resource.mount_point)\n+                             else\n+                               @new_resource.mount_point\n+                             end\n+\n+          shell_out!(\"findmnt -rn\").stdout.each_line do |line|\n+            case line\n+            when /\\A#{Regexp.escape(real_mount_point)}\\s+#{device_mount_regex}\\s/",
        "comment_created_at": "2020-08-28T12:38:43+00:00",
        "comment_author": "antima-gupta",
        "comment_body": "Agreed, I have added Permalink.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "719689343",
    "pr_number": 12119,
    "pr_file": "lib/chef/resource/powershell_package_source.rb",
    "created_at": "2021-09-30T19:14:51+00:00",
    "commented_code": "description: \"A label that names your package source.\",\n        name_property: true\n\n      property :new_name, String,\n        description: \"Used when updating the name of a NON-PSRepository\"\n      property :new_name, introduced: \"17.5.23\", String,\n        description: \"Used to change the name of a standard PackageSource.\"\n\n      property :source_location, String,\n      property :source_location, introduced: \"17.5.23\", String,",
    "repo_full_name": "chef/chef",
    "discussion_comments": [
      {
        "comment_id": "719689343",
        "repo_full_name": "chef/chef",
        "pr_number": 12119,
        "pr_file": "lib/chef/resource/powershell_package_source.rb",
        "discussion_id": "719689343",
        "commented_code": "@@ -117,10 +117,10 @@ class PowershellPackageSource < Chef::Resource\n         description: \"A label that names your package source.\",\n         name_property: true\n \n-      property :new_name, String,\n-        description: \"Used when updating the name of a NON-PSRepository\"\n+      property :new_name, introduced: \"17.5.23\", String,\n+        description: \"Used to change the name of a standard PackageSource.\"\n \n-      property :source_location, String,\n+      property :source_location, introduced: \"17.5.23\", String,",
        "comment_created_at": "2021-09-30T19:14:51+00:00",
        "comment_author": "tas50",
        "comment_body": "```suggestion\r\n      property :source_location, introduced: \"17.6\", String,\r\n```",
        "pr_file_module": null
      }
    ]
  }
]