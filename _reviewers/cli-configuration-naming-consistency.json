[
  {
    "discussion_id": "687029103",
    "pr_number": 2149,
    "pr_file": "src/cli/commands/index.js",
    "created_at": "2021-08-11T17:21:13+00:00",
    "commented_code": "const abbrev = require('abbrev');\n-const hotload = require('../../lib/hotload')(__dirname);\n require('../../lib/spinner').isRequired = false;\n \n-// the aim of this module is to load as little as possible to keep cli boot\n-// time as low as possible\n+async function callModule(mod, args) {",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "687029103",
        "repo_full_name": "snyk/cli",
        "pr_number": 2149,
        "pr_file": "src/cli/commands/index.js",
        "discussion_id": "687029103",
        "commented_code": "@@ -1,25 +1,27 @@\n const abbrev = require('abbrev');\n-const hotload = require('../../lib/hotload')(__dirname);\n require('../../lib/spinner').isRequired = false;\n \n-// the aim of this module is to load as little as possible to keep cli boot\n-// time as low as possible\n+async function callModule(mod, args) {",
        "comment_created_at": "2021-08-11T17:21:13+00:00",
        "comment_author": "JackuB",
        "comment_body": "```suggestion\r\n// Wrapper for Commonjs compatibility\r\nasync function callModule(mod, args) {\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "688032954",
        "repo_full_name": "snyk/cli",
        "pr_number": 2149,
        "pr_file": "src/cli/commands/index.js",
        "discussion_id": "687029103",
        "commented_code": "@@ -1,25 +1,27 @@\n const abbrev = require('abbrev');\n-const hotload = require('../../lib/hotload')(__dirname);\n require('../../lib/spinner').isRequired = false;\n \n-// the aim of this module is to load as little as possible to keep cli boot\n-// time as low as possible\n+async function callModule(mod, args) {",
        "comment_created_at": "2021-08-12T19:40:33+00:00",
        "comment_author": "maxjeffos",
        "comment_body": "\ud83d\udc4d",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1933827867",
    "pr_number": 5696,
    "pr_file": "test/setup.js",
    "created_at": "2025-01-29T12:54:32+00:00",
    "commented_code": "const { stdout: version } = await runSnykCLI('version');\n   const SNYK_VERSION = version.trim();\n \n+  if (!process.env.SNYK_CONFIG_FILE && !process.env.TEST_CONFIG_FILE) {\n+    const tempConfigFolder = fse.mkdtempSync(\n+      path.resolve(os.tmpdir(), `snyk-e2e-test-config-`),\n+    );\n+\n+    const tempSnykConfigFile = path.resolve(tempConfigFolder, 'snyk.json');\n+    process.env.SNYK_CONFIG_FILE = tempSnykConfigFile;\n+  }\n+\n   console.info(\n     '\n------------------------------------------------------------------------------------------------------' +\n       '\n Binary under test   [TEST_SNYK_COMMAND] .............. ' +\n       process.env.TEST_SNYK_COMMAND +\n+      '\n Snyk configuration  [TEST_CONFIG_FILE] ............... ' +",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1933827867",
        "repo_full_name": "snyk/cli",
        "pr_number": 5696,
        "pr_file": "test/setup.js",
        "discussion_id": "1933827867",
        "commented_code": "@@ -25,10 +29,21 @@ module.exports = async function () {\n   const { stdout: version } = await runSnykCLI('version');\n   const SNYK_VERSION = version.trim();\n \n+  if (!process.env.SNYK_CONFIG_FILE && !process.env.TEST_CONFIG_FILE) {\n+    const tempConfigFolder = fse.mkdtempSync(\n+      path.resolve(os.tmpdir(), `snyk-e2e-test-config-`),\n+    );\n+\n+    const tempSnykConfigFile = path.resolve(tempConfigFolder, 'snyk.json');\n+    process.env.SNYK_CONFIG_FILE = tempSnykConfigFile;\n+  }\n+\n   console.info(\n     '\\n------------------------------------------------------------------------------------------------------' +\n       '\\n Binary under test   [TEST_SNYK_COMMAND] .............. ' +\n       process.env.TEST_SNYK_COMMAND +\n+      '\\n Snyk configuration  [TEST_CONFIG_FILE] ............... ' +",
        "comment_created_at": "2025-01-29T12:54:32+00:00",
        "comment_author": "PeterSchafer",
        "comment_body": "Question: is this on purpose that the log says `TEST_CONFIG_FILE` and the env var used is `SNYK_CONFIG_FILE`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1933829352",
        "repo_full_name": "snyk/cli",
        "pr_number": 5696,
        "pr_file": "test/setup.js",
        "discussion_id": "1933827867",
        "commented_code": "@@ -25,10 +29,21 @@ module.exports = async function () {\n   const { stdout: version } = await runSnykCLI('version');\n   const SNYK_VERSION = version.trim();\n \n+  if (!process.env.SNYK_CONFIG_FILE && !process.env.TEST_CONFIG_FILE) {\n+    const tempConfigFolder = fse.mkdtempSync(\n+      path.resolve(os.tmpdir(), `snyk-e2e-test-config-`),\n+    );\n+\n+    const tempSnykConfigFile = path.resolve(tempConfigFolder, 'snyk.json');\n+    process.env.SNYK_CONFIG_FILE = tempSnykConfigFile;\n+  }\n+\n   console.info(\n     '\\n------------------------------------------------------------------------------------------------------' +\n       '\\n Binary under test   [TEST_SNYK_COMMAND] .............. ' +\n       process.env.TEST_SNYK_COMMAND +\n+      '\\n Snyk configuration  [TEST_CONFIG_FILE] ............... ' +",
        "comment_created_at": "2025-01-29T12:55:31+00:00",
        "comment_author": "PeterSchafer",
        "comment_body": "Is `TEST_CONFIG_FILE` used somewhere?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1574682282",
    "pr_number": 5181,
    "pr_file": "src/lib/snyk-test/index.js",
    "created_at": "2024-04-22T12:36:10+00:00",
    "commented_code": "}\n }\n \n-function run(root, options) {\n+function run(root, options, featureFlags) {\n   const projectType = options.packageManager;\n-  validateProjectType(options, projectType);\n-  return runTest(projectType, root, options);\n+  validateProjectType(options, projectType, featureFlags);\n+  return runTest(projectType, root, options, featureFlags);",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1574682282",
        "repo_full_name": "snyk/cli",
        "pr_number": 5181,
        "pr_file": "src/lib/snyk-test/index.js",
        "discussion_id": "1574682282",
        "commented_code": "@@ -51,13 +64,19 @@ async function executeTest(root, options) {\n   }\n }\n \n-function run(root, options) {\n+function run(root, options, featureFlags) {\n   const projectType = options.packageManager;\n-  validateProjectType(options, projectType);\n-  return runTest(projectType, root, options);\n+  validateProjectType(options, projectType, featureFlags);\n+  return runTest(projectType, root, options, featureFlags);",
        "comment_created_at": "2024-04-22T12:36:10+00:00",
        "comment_author": "thisislawatts",
        "comment_body": "**suggestion:** It seems like we could short circuit here if the customer does not have the necessary access to the `pnpm` scanner, this could be based on feature flags or entitlements. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1576388597",
        "repo_full_name": "snyk/cli",
        "pr_number": 5181,
        "pr_file": "src/lib/snyk-test/index.js",
        "discussion_id": "1574682282",
        "commented_code": "@@ -51,13 +64,19 @@ async function executeTest(root, options) {\n   }\n }\n \n-function run(root, options) {\n+function run(root, options, featureFlags) {\n   const projectType = options.packageManager;\n-  validateProjectType(options, projectType);\n-  return runTest(projectType, root, options);\n+  validateProjectType(options, projectType, featureFlags);\n+  return runTest(projectType, root, options, featureFlags);",
        "comment_created_at": "2024-04-23T14:43:02+00:00",
        "comment_author": "gemaxim",
        "comment_body": "Did this. Still need to pass on the featureFlag to `runTest` for later computations (e.g. workspaces), but removed those conditions for the plugin load.",
        "pr_file_module": null
      }
    ]
  }
]