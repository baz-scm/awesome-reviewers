[
  {
    "discussion_id": "1751661270",
    "pr_number": 5470,
    "pr_file": "cliv2/internal/cliv2/cliv2.go",
    "created_at": "2024-09-10T10:05:29+00:00",
    "commented_code": "}\n \n func (c *CLI) GetTempDir() string {\n-\treturn local_utils.GetTemporaryDirectory(c.CacheDirectory, cliv1.CLIV1Version())\n+\treturn utils.GetTemporaryDirectory(c.CacheDirectory, cliv1.CLIV1Version())",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1751661270",
        "repo_full_name": "snyk/cli",
        "pr_number": 5470,
        "pr_file": "cliv2/internal/cliv2/cliv2.go",
        "discussion_id": "1751661270",
        "commented_code": "@@ -218,7 +217,7 @@ func (c *CLI) GetBinaryLocation() string {\n }\n \n func (c *CLI) GetTempDir() string {\n-\treturn local_utils.GetTemporaryDirectory(c.CacheDirectory, cliv1.CLIV1Version())\n+\treturn utils.GetTemporaryDirectory(c.CacheDirectory, cliv1.CLIV1Version())",
        "comment_created_at": "2024-09-10T10:05:29+00:00",
        "comment_author": "PeterSchafer",
        "comment_body": "Issue: with the new gaf version, the temp directory is a configuration value. Instead of using this helper function directly, we should be using the configuration now, otherwise the behaviour wouldn't be consistent.\r\n\r\n```suggestion\r\n\treturn c.globalConfig.GetString(configuration.TEMP_DIR_PATH)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1751663083",
    "pr_number": 5470,
    "pr_file": "cliv2/internal/proxy/proxy.go",
    "created_at": "2024-09-10T10:06:44+00:00",
    "commented_code": "return nil, err\n \t}\n \n-\ttmpDirectory := utils.GetTemporaryDirectory(cacheDirectory, cliVersion)\n-\terr = utils.CreateAllDirectories(cacheDirectory, cliVersion)\n+\ttmpDirectory := pkg_utils.GetTemporaryDirectory(cacheDirectory, cliVersion)",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1751663083",
        "repo_full_name": "snyk/cli",
        "pr_number": 5470,
        "pr_file": "cliv2/internal/proxy/proxy.go",
        "discussion_id": "1751663083",
        "commented_code": "@@ -71,8 +71,8 @@ func InitCA(config configuration.Configuration, cliVersion string, logger *zerol\n \t\treturn nil, err\n \t}\n \n-\ttmpDirectory := utils.GetTemporaryDirectory(cacheDirectory, cliVersion)\n-\terr = utils.CreateAllDirectories(cacheDirectory, cliVersion)\n+\ttmpDirectory := pkg_utils.GetTemporaryDirectory(cacheDirectory, cliVersion)",
        "comment_created_at": "2024-09-10T10:06:44+00:00",
        "comment_author": "PeterSchafer",
        "comment_body": "Issue: with the new gaf version, the temp directory is a configuration value. Instead of using this helper function directly, we should be using the configuration now, otherwise the behaviour wouldn't be consistent.\r\n\r\n```suggestion\r\n\treturn config.GetString(configuration.TEMP_DIR_PATH)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1751691558",
    "pr_number": 5470,
    "pr_file": "cliv2/pkg/basic_workflows/globalresources.go",
    "created_at": "2024-09-10T10:26:55+00:00",
    "commented_code": "}\n \n func CleanupGlobalTempDirectory(config configuration.Configuration, debugLogger *zerolog.Logger) {\n-\ttmpDirectory := utils.GetTemporaryDirectory(config.GetString(configuration.CACHE_PATH), cliv2.GetFullVersion())\n+\ttmpDirectory := gaf_utils.GetTemporaryDirectory(config.GetString(configuration.CACHE_PATH), cliv2.GetFullVersion())",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1751691558",
        "repo_full_name": "snyk/cli",
        "pr_number": 5470,
        "pr_file": "cliv2/pkg/basic_workflows/globalresources.go",
        "discussion_id": "1751691558",
        "commented_code": "@@ -95,7 +97,7 @@ func GetGlobalCertAuthority(config configuration.Configuration, debugLogger *zer\n }\n \n func CleanupGlobalTempDirectory(config configuration.Configuration, debugLogger *zerolog.Logger) {\n-\ttmpDirectory := utils.GetTemporaryDirectory(config.GetString(configuration.CACHE_PATH), cliv2.GetFullVersion())\n+\ttmpDirectory := gaf_utils.GetTemporaryDirectory(config.GetString(configuration.CACHE_PATH), cliv2.GetFullVersion())",
        "comment_created_at": "2024-09-10T10:26:55+00:00",
        "comment_author": "PeterSchafer",
        "comment_body": "Issue: same as above, please use the configuration value for temp dir.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1616244341",
    "pr_number": 5259,
    "pr_file": "cliv2/cmd/cliv2/main.go",
    "created_at": "2024-05-27T16:23:46+00:00",
    "commented_code": "}\n }\n \n-func sendInstrumentation(instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n-\t// TODO: actually send data once CLI-303 is implemented\n+func sendInstrumentation(eng workflow.Engine, instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n+\t// Avoid duplicate data to be send for IDE integrations that use the CLI\n+\tif utils.IsSnykIde(os.Getenv(\"SNYK_INTEGRATION_NAME\")) {",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1616244341",
        "repo_full_name": "snyk/cli",
        "pr_number": 5259,
        "pr_file": "cliv2/cmd/cliv2/main.go",
        "discussion_id": "1616244341",
        "commented_code": "@@ -242,15 +241,41 @@ func sendAnalytics(analytics analytics.Analytics, debugLogger *zerolog.Logger) {\n \t}\n }\n \n-func sendInstrumentation(instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n-\t// TODO: actually send data once CLI-303 is implemented\n+func sendInstrumentation(eng workflow.Engine, instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n+\t// Avoid duplicate data to be send for IDE integrations that use the CLI\n+\tif utils.IsSnykIde(os.Getenv(\"SNYK_INTEGRATION_NAME\")) {",
        "comment_created_at": "2024-05-27T16:23:46+00:00",
        "comment_author": "PeterSchafer",
        "comment_body": "Suggestion: Please use the configuration to access values, see [here](https://github.com/snyk/go-application-framework/blob/main/pkg/local_workflows/auth_workflow.go#L84). This way, there is no need for the implementation to know where the values come from and how they exactly need to be named.",
        "pr_file_module": null
      },
      {
        "comment_id": "1616669854",
        "repo_full_name": "snyk/cli",
        "pr_number": 5259,
        "pr_file": "cliv2/cmd/cliv2/main.go",
        "discussion_id": "1616244341",
        "commented_code": "@@ -242,15 +241,41 @@ func sendAnalytics(analytics analytics.Analytics, debugLogger *zerolog.Logger) {\n \t}\n }\n \n-func sendInstrumentation(instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n-\t// TODO: actually send data once CLI-303 is implemented\n+func sendInstrumentation(eng workflow.Engine, instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n+\t// Avoid duplicate data to be send for IDE integrations that use the CLI\n+\tif utils.IsSnykIde(os.Getenv(\"SNYK_INTEGRATION_NAME\")) {",
        "comment_created_at": "2024-05-28T06:35:25+00:00",
        "comment_author": "mgyorke",
        "comment_body": "fixed!",
        "pr_file_module": null
      },
      {
        "comment_id": "1616862084",
        "repo_full_name": "snyk/cli",
        "pr_number": 5259,
        "pr_file": "cliv2/cmd/cliv2/main.go",
        "discussion_id": "1616244341",
        "commented_code": "@@ -242,15 +241,41 @@ func sendAnalytics(analytics analytics.Analytics, debugLogger *zerolog.Logger) {\n \t}\n }\n \n-func sendInstrumentation(instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n-\t// TODO: actually send data once CLI-303 is implemented\n+func sendInstrumentation(eng workflow.Engine, instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n+\t// Avoid duplicate data to be send for IDE integrations that use the CLI\n+\tif utils.IsSnykIde(os.Getenv(\"SNYK_INTEGRATION_NAME\")) {",
        "comment_created_at": "2024-05-28T09:00:00+00:00",
        "comment_author": "PeterSchafer",
        "comment_body": "unfortunately not, please take a closer look at the linked code snippet. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1616886153",
        "repo_full_name": "snyk/cli",
        "pr_number": 5259,
        "pr_file": "cliv2/cmd/cliv2/main.go",
        "discussion_id": "1616244341",
        "commented_code": "@@ -242,15 +241,41 @@ func sendAnalytics(analytics analytics.Analytics, debugLogger *zerolog.Logger) {\n \t}\n }\n \n-func sendInstrumentation(instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n-\t// TODO: actually send data once CLI-303 is implemented\n+func sendInstrumentation(eng workflow.Engine, instrumentor analytics.InstrumentationCollector, logger *zerolog.Logger) {\n+\t// Avoid duplicate data to be send for IDE integrations that use the CLI\n+\tif utils.IsSnykIde(os.Getenv(\"SNYK_INTEGRATION_NAME\")) {",
        "comment_created_at": "2024-05-28T09:16:53+00:00",
        "comment_author": "mgyorke",
        "comment_body": "fixed the fix. ",
        "pr_file_module": null
      }
    ]
  }
]