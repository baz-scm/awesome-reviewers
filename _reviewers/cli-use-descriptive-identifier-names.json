[
  {
    "discussion_id": "941433044",
    "pr_number": 3521,
    "pr_file": "cliv2/internal/cliv2/arg_parser.go",
    "created_at": "2022-08-09T14:44:20+00:00",
    "commented_code": "return rootCmd\n }\n \n-var v1Commands = []string{\n-\t\"test\",\n-\t\"monitor\",\n-\t\"code\",\n-\t\"iac\",\n-\t\"container\",\n-\t\"auth\",\n-\t// TODO: what else?\n+type Command struct {",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "941433044",
        "repo_full_name": "snyk/cli",
        "pr_number": 3521,
        "pr_file": "cliv2/internal/cliv2/arg_parser.go",
        "discussion_id": "941433044",
        "commented_code": "@@ -37,22 +37,60 @@ func MakeArgParserConfig(extensions []*extension.Extension, config *CliConfigura\n \treturn rootCmd\n }\n \n-var v1Commands = []string{\n-\t\"test\",\n-\t\"monitor\",\n-\t\"code\",\n-\t\"iac\",\n-\t\"container\",\n-\t\"auth\",\n-\t// TODO: what else?\n+type Command struct {",
        "comment_created_at": "2022-08-09T14:44:20+00:00",
        "comment_author": "maxjeffos",
        "comment_body": "@Avishagp maybe use a more descriptive name here - like `NodeCLICommandMeta` or something just because the `Command` is starting to get heavily over-loaded. For example, cobra.Command, extension.Command (from the extension lib).",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1346872759",
    "pr_number": 4892,
    "pr_file": "cliv2/cmd/cliv2/main.go",
    "created_at": "2023-10-05T06:42:57+00:00",
    "commented_code": "// prepare the invocation of the legacy CLI by\n \t// * enabling stdio\n \t// * by specifying the raw cmd args for it\n-\tconfig.Set(configuration.WORKFLOW_USE_STDIO, true)\n-\tconfig.Set(configuration.RAW_CMD_ARGS, args)\n+\tglobalConfiguration.Set(configuration.WORKFLOW_USE_STDIO, true)\n+\tglobalConfiguration.Set(configuration.RAW_CMD_ARGS, args)\n \t_, err := engine.Invoke(basic_workflows.WORKFLOWID_LEGACY_CLI)\n \treturn err\n }\n \n func getGlobalFLags() *pflag.FlagSet {\n-\tglobalConfiguration := workflow.GetGlobalConfiguration()\n-\tglobalFLags := workflow.FlagsetFromConfigurationOptions(globalConfiguration)\n+\tglobalConfigurationOptions := workflow.GetGlobalConfiguration()",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1346872759",
        "repo_full_name": "snyk/cli",
        "pr_number": 4892,
        "pr_file": "cliv2/cmd/cliv2/main.go",
        "discussion_id": "1346872759",
        "commented_code": "@@ -197,15 +219,15 @@ func defaultCmd(args []string) error {\n \t// prepare the invocation of the legacy CLI by\n \t// * enabling stdio\n \t// * by specifying the raw cmd args for it\n-\tconfig.Set(configuration.WORKFLOW_USE_STDIO, true)\n-\tconfig.Set(configuration.RAW_CMD_ARGS, args)\n+\tglobalConfiguration.Set(configuration.WORKFLOW_USE_STDIO, true)\n+\tglobalConfiguration.Set(configuration.RAW_CMD_ARGS, args)\n \t_, err := engine.Invoke(basic_workflows.WORKFLOWID_LEGACY_CLI)\n \treturn err\n }\n \n func getGlobalFLags() *pflag.FlagSet {\n-\tglobalConfiguration := workflow.GetGlobalConfiguration()\n-\tglobalFLags := workflow.FlagsetFromConfigurationOptions(globalConfiguration)\n+\tglobalConfigurationOptions := workflow.GetGlobalConfiguration()",
        "comment_created_at": "2023-10-05T06:42:57+00:00",
        "comment_author": "bastiandoetsch",
        "comment_body": "suggestion (non-blocking): let's rename `GetGlobalConfiguration` to `GetGlobalConfigurationOptions` in a follow-up PR.",
        "pr_file_module": null
      }
    ]
  }
]