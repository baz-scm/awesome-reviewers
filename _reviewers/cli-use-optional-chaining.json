[
  {
    "discussion_id": "1425023236",
    "pr_number": 4852,
    "pr_file": "src/lib/formatters/get-sarif-result.ts",
    "created_at": "2023-12-13T08:41:12+00:00",
    "commented_code": "artifactLocation: {\n               uri: getArtifactLocationUri(\n                 testResult.displayTargetFile,\n-                testResult.path,\n+                (testResult as any).path,\n               ),\n             },\n             region: {\n               startLine: vuln.lineNumber || 1,\n             },\n           },\n+          logicalLocations: [\n+            {\n+              fullyQualifiedName: `${vuln.packageName}@${vuln.version}`,\n+            }\n+          ]\n         },\n       ],\n+      fixes: vuln.upgradePath.length >= 2",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1425023236",
        "repo_full_name": "snyk/cli",
        "pr_number": 4852,
        "pr_file": "src/lib/formatters/get-sarif-result.ts",
        "discussion_id": "1425023236",
        "commented_code": "@@ -20,15 +20,33 @@ export function getResults(testResult): sarif.Result[] {\n             artifactLocation: {\n               uri: getArtifactLocationUri(\n                 testResult.displayTargetFile,\n-                testResult.path,\n+                (testResult as any).path,\n               ),\n             },\n             region: {\n               startLine: vuln.lineNumber || 1,\n             },\n           },\n+          logicalLocations: [\n+            {\n+              fullyQualifiedName: `${vuln.packageName}@${vuln.version}`,\n+            }\n+          ]\n         },\n       ],\n+      fixes: vuln.upgradePath.length >= 2",
        "comment_created_at": "2023-12-13T08:41:12+00:00",
        "comment_author": "bastiandoetsch",
        "comment_body": "suggestion: not a javascript expert, but maybe only call `.length` after checking if it actually is not `undefined`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1425026682",
        "repo_full_name": "snyk/cli",
        "pr_number": 4852,
        "pr_file": "src/lib/formatters/get-sarif-result.ts",
        "discussion_id": "1425023236",
        "commented_code": "@@ -20,15 +20,33 @@ export function getResults(testResult): sarif.Result[] {\n             artifactLocation: {\n               uri: getArtifactLocationUri(\n                 testResult.displayTargetFile,\n-                testResult.path,\n+                (testResult as any).path,\n               ),\n             },\n             region: {\n               startLine: vuln.lineNumber || 1,\n             },\n           },\n+          logicalLocations: [\n+            {\n+              fullyQualifiedName: `${vuln.packageName}@${vuln.version}`,\n+            }\n+          ]\n         },\n       ],\n+      fixes: vuln.upgradePath.length >= 2",
        "comment_created_at": "2023-12-13T08:44:17+00:00",
        "comment_author": "bastiandoetsch",
        "comment_body": "suggestion: to get the same advice as in VSCode & Eclipse, you could even extend it more - see: https://github.com/snyk/snyk-ls/blob/a52f9d047ea29210636d8bb01ef9ea9d1233f4b2/infrastructure/oss/issue_html.go#L146",
        "pr_file_module": null
      },
      {
        "comment_id": "1428102305",
        "repo_full_name": "snyk/cli",
        "pr_number": 4852,
        "pr_file": "src/lib/formatters/get-sarif-result.ts",
        "discussion_id": "1425023236",
        "commented_code": "@@ -20,15 +20,33 @@ export function getResults(testResult): sarif.Result[] {\n             artifactLocation: {\n               uri: getArtifactLocationUri(\n                 testResult.displayTargetFile,\n-                testResult.path,\n+                (testResult as any).path,\n               ),\n             },\n             region: {\n               startLine: vuln.lineNumber || 1,\n             },\n           },\n+          logicalLocations: [\n+            {\n+              fullyQualifiedName: `${vuln.packageName}@${vuln.version}`,\n+            }\n+          ]\n         },\n       ],\n+      fixes: vuln.upgradePath.length >= 2",
        "comment_created_at": "2023-12-15T15:25:53+00:00",
        "comment_author": "schottsfired",
        "comment_body": "> not a javascript expert, but maybe only call .length after checking if it actually is not undefined?\r\n\r\nSame here. I noticed that `upgradePath` is not optional in the `interface` and assumed it would always be defined, but after doing more research it's certainly better to do a null/undefined check first. Will add that.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1188331639",
    "pr_number": 4587,
    "pr_file": "src/lib/formatters/test/format-test-results.ts",
    "created_at": "2023-05-09T08:50:46+00:00",
    "commented_code": "if (options.docker && jsonResults.length > 1 && !options.experimental) {\n     const appVulnsData = jsonData.splice(1);\n     jsonData = jsonData[0];\n-    if (jsonData.vulnerabilities.length === 0) {\n+    if (jsonData.vulnerabilities?.length === 0) {",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1188331639",
        "repo_full_name": "snyk/cli",
        "pr_number": 4587,
        "pr_file": "src/lib/formatters/test/format-test-results.ts",
        "discussion_id": "1188331639",
        "commented_code": "@@ -93,7 +93,7 @@ export function extractDataToSendFromResults(\n   if (options.docker && jsonResults.length > 1 && !options.experimental) {\n     const appVulnsData = jsonData.splice(1);\n     jsonData = jsonData[0];\n-    if (jsonData.vulnerabilities.length === 0) {\n+    if (jsonData.vulnerabilities?.length === 0) {",
        "comment_created_at": "2023-05-09T08:50:46+00:00",
        "comment_author": "asaf92",
        "comment_body": "Why just `===0`? What if it's `null`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1188395295",
        "repo_full_name": "snyk/cli",
        "pr_number": 4587,
        "pr_file": "src/lib/formatters/test/format-test-results.ts",
        "discussion_id": "1188331639",
        "commented_code": "@@ -93,7 +93,7 @@ export function extractDataToSendFromResults(\n   if (options.docker && jsonResults.length > 1 && !options.experimental) {\n     const appVulnsData = jsonData.splice(1);\n     jsonData = jsonData[0];\n-    if (jsonData.vulnerabilities.length === 0) {\n+    if (jsonData.vulnerabilities?.length === 0) {",
        "comment_created_at": "2023-05-09T09:42:55+00:00",
        "comment_author": "PeterSchafer",
        "comment_body": "As I understand the case, not having vulnerabilities here is an error case. This means if they are missing, the comparison will fail. The intention is to not make this helper function crash. Appropriate error handling must and as far as I see, does happen outside.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1513730199",
    "pr_number": 5091,
    "pr_file": "src/lib/formatters/sarif-output.ts",
    "created_at": "2024-03-06T02:21:31+00:00",
    "commented_code": "testResult.packageManager!,\n           ],\n           cvssv3_baseScore: vuln.cvssScore, // AWS\n-          'security-severity': vuln.cvssScore, // GitHub\n+          'security-severity': String(vuln.cvssScore), // GitHub",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1513730199",
        "repo_full_name": "snyk/cli",
        "pr_number": 5091,
        "pr_file": "src/lib/formatters/sarif-output.ts",
        "discussion_id": "1513730199",
        "commented_code": "@@ -83,7 +83,7 @@ export function getTool(testResult): sarif.Tool {\n             testResult.packageManager!,\n           ],\n           cvssv3_baseScore: vuln.cvssScore, // AWS\n-          'security-severity': vuln.cvssScore, // GitHub\n+          'security-severity': String(vuln.cvssScore), // GitHub",
        "comment_created_at": "2024-03-06T02:21:31+00:00",
        "comment_author": "jmqd",
        "comment_body": "I believe if `vuln.cvssScore` is `null`, this pushes `\"undefined\"` to the property bag.\r\n\r\nI would suggest adding a `null` testcase and verifying.",
        "pr_file_module": null
      },
      {
        "comment_id": "1531159955",
        "repo_full_name": "snyk/cli",
        "pr_number": 5091,
        "pr_file": "src/lib/formatters/sarif-output.ts",
        "discussion_id": "1513730199",
        "commented_code": "@@ -83,7 +83,7 @@ export function getTool(testResult): sarif.Tool {\n             testResult.packageManager!,\n           ],\n           cvssv3_baseScore: vuln.cvssScore, // AWS\n-          'security-severity': vuln.cvssScore, // GitHub\n+          'security-severity': String(vuln.cvssScore), // GitHub",
        "comment_created_at": "2024-03-19T21:50:03+00:00",
        "comment_author": "AngellusMortis",
        "comment_body": "Can confirm. Github Code Scanning is now rejecting sarif files from Snyk CLI. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1013789648",
    "pr_number": 4181,
    "pr_file": "src/lib/ecosystems/resolve-test-facts.ts",
    "created_at": "2022-11-04T09:24:50+00:00",
    "commented_code": "issueData.from = [pkgCoordinate];\n             issueData.name = pkgCoordinate;\n             issueData.packageManager = packageManager;\n+            issueData.version = issuesMap[issuesDataKey].pkgVersion;",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "1013789648",
        "repo_full_name": "snyk/cli",
        "pr_number": 4181,
        "pr_file": "src/lib/ecosystems/resolve-test-facts.ts",
        "discussion_id": "1013789648",
        "commented_code": "@@ -285,6 +289,9 @@ export async function resolveAndTestFactsRegistry(\n             issueData.from = [pkgCoordinate];\n             issueData.name = pkgCoordinate;\n             issueData.packageManager = packageManager;\n+            issueData.version = issuesMap[issuesDataKey].pkgVersion;",
        "comment_created_at": "2022-11-04T09:24:50+00:00",
        "comment_author": "danielroymoore",
        "comment_body": "Do you not want to add a `?.` in for optional chaining like on line 199?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "911226844",
    "pr_number": 3423,
    "pr_file": "src/lib/formatters/iac-output/v2/issues-list/formatters.ts",
    "created_at": "2022-06-30T16:25:36+00:00",
    "commented_code": "return newFormattedResults;\n }\n+\n+export function formatSnykIacTestScanResultNewOutput(\n+  snykIacTestScanResult: Results | undefined,\n+): IacTestOutput {\n+  const formattedResults: IacTestOutput = {\n+    results: {},\n+    // TODO: Add metadata when working on the Share Results feat\n+    metadata: { projectName: 'TBD', orgName: 'TBD' },\n+  };\n+\n+  if (snykIacTestScanResult) {",
    "repo_full_name": "snyk/cli",
    "discussion_comments": [
      {
        "comment_id": "911226844",
        "repo_full_name": "snyk/cli",
        "pr_number": 3423,
        "pr_file": "src/lib/formatters/iac-output/v2/issues-list/formatters.ts",
        "discussion_id": "911226844",
        "commented_code": "@@ -27,3 +32,49 @@ export function formatScanResultsNewOutput(\n \n   return newFormattedResults;\n }\n+\n+export function formatSnykIacTestScanResultNewOutput(\n+  snykIacTestScanResult: Results | undefined,\n+): IacTestOutput {\n+  const formattedResults: IacTestOutput = {\n+    results: {},\n+    // TODO: Add metadata when working on the Share Results feat\n+    metadata: { projectName: 'TBD', orgName: 'TBD' },\n+  };\n+\n+  if (snykIacTestScanResult) {",
        "comment_created_at": "2022-06-30T16:25:36+00:00",
        "comment_author": "ipapast",
        "comment_body": "```suggestion\r\n  if (snykIacTestScanResult?.vulnerabilities) {\r\n```\r\nif we don't check for the vulnerabilities, the CLI chokes when the vulnerabilities are `null` on the next line.",
        "pr_file_module": null
      },
      {
        "comment_id": "911228849",
        "repo_full_name": "snyk/cli",
        "pr_number": 3423,
        "pr_file": "src/lib/formatters/iac-output/v2/issues-list/formatters.ts",
        "discussion_id": "911226844",
        "commented_code": "@@ -27,3 +32,49 @@ export function formatScanResultsNewOutput(\n \n   return newFormattedResults;\n }\n+\n+export function formatSnykIacTestScanResultNewOutput(\n+  snykIacTestScanResult: Results | undefined,\n+): IacTestOutput {\n+  const formattedResults: IacTestOutput = {\n+    results: {},\n+    // TODO: Add metadata when working on the Share Results feat\n+    metadata: { projectName: 'TBD', orgName: 'TBD' },\n+  };\n+\n+  if (snykIacTestScanResult) {",
        "comment_created_at": "2022-06-30T16:27:46+00:00",
        "comment_author": "ipapast",
        "comment_body": "example when they are null:\r\n\r\n<img width=\"644\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6989529/176729424-7aaa512d-6d25-47f4-a60a-7e25f5e4663f.png\">\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "911691665",
        "repo_full_name": "snyk/cli",
        "pr_number": 3423,
        "pr_file": "src/lib/formatters/iac-output/v2/issues-list/formatters.ts",
        "discussion_id": "911226844",
        "commented_code": "@@ -27,3 +32,49 @@ export function formatScanResultsNewOutput(\n \n   return newFormattedResults;\n }\n+\n+export function formatSnykIacTestScanResultNewOutput(\n+  snykIacTestScanResult: Results | undefined,\n+): IacTestOutput {\n+  const formattedResults: IacTestOutput = {\n+    results: {},\n+    // TODO: Add metadata when working on the Share Results feat\n+    metadata: { projectName: 'TBD', orgName: 'TBD' },\n+  };\n+\n+  if (snykIacTestScanResult) {",
        "comment_created_at": "2022-07-01T07:30:00+00:00",
        "comment_author": "francescomari",
        "comment_body": "Fixed at dbef08e0.",
        "pr_file_module": null
      },
      {
        "comment_id": "912450911",
        "repo_full_name": "snyk/cli",
        "pr_number": 3423,
        "pr_file": "src/lib/formatters/iac-output/v2/issues-list/formatters.ts",
        "discussion_id": "911226844",
        "commented_code": "@@ -27,3 +32,49 @@ export function formatScanResultsNewOutput(\n \n   return newFormattedResults;\n }\n+\n+export function formatSnykIacTestScanResultNewOutput(\n+  snykIacTestScanResult: Results | undefined,\n+): IacTestOutput {\n+  const formattedResults: IacTestOutput = {\n+    results: {},\n+    // TODO: Add metadata when working on the Share Results feat\n+    metadata: { projectName: 'TBD', orgName: 'TBD' },\n+  };\n+\n+  if (snykIacTestScanResult) {",
        "comment_created_at": "2022-07-03T08:29:58+00:00",
        "comment_author": "YairZ101",
        "comment_body": "nice catch @ipapast :)\r\n@francescomari my assumption was that `snyk-iac-test` will not print `results` if there aren't any (similar to how we don't print `errors` if there aren't any), was it intentional that we will always print `results`?",
        "pr_file_module": null
      }
    ]
  }
]