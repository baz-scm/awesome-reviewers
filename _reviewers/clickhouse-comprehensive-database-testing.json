[
  {
    "discussion_id": "2282574128",
    "pr_number": 85556,
    "pr_file": "tests/queries/0_stateless/03594_push_more_filters_down_joins.sql",
    "created_at": "2025-08-18T14:25:45+00:00",
    "commented_code": "+CREATE TABLE t1\n+(\n+    id Int32,\n+    fid Int32,\n+    tid Int32\n+)\n+ENGINE = MergeTree\n+ORDER BY tuple();\n+\n+CREATE TABLE t2\n+(\n+    id Int32,\n+    status Nullable(String),\n+    resource_id Nullable(Int32)\n+)\n+ENGINE = MergeTree\n+ORDER BY tuple();\n+\n+CREATE TABLE t3\n+(\n+    id Int32,\n+    status String\n+)\n+ENGINE = MergeTree\n+ORDER BY tuple();\n+\n+INSERT INTO t1 SELECT * REPLACE(1 as fid, 2 as tid) \n+FROM generateRandom(1, 2, 2) LIMIT 1000;\n+\n+INSERT INTO t2 SELECT * REPLACE(1 as id, 'OPEN' as status, NULL as resource_id) \n+FROM generateRandom(1, 2, 2) LIMIT 1000;\n+\n+INSERT INTO t3 SELECT * REPLACE('BACKLOG' as status, 2 as id) \n+FROM generateRandom(1, 2, 2) LIMIT 1000;\n+\n+SELECT 1\n+FROM t2\n+LEFT JOIN t1 ON t2.id = t1.fid\n+LEFT JOIN t3 ON t1.tid = t3.id\n+WHERE true AND (t2.resource_id IS NOT NULL) AND (t2.status IN ('OPEN')) AND (t3.status IN ('BACKLOG'))\n+SETTINGS enable_analyzer = 1, log_comment = '03594_push_more_filters_down_joins';\n+\n+SYSTEM FLUSH LOGS;\n+\n+SELECT throwIf(ProfileEvents['JoinResultRowCount'] != 0)\n+FROM system.query_log\n+WHERE log_comment = '03594_push_more_filters_down_joins' AND current_database = currentDatabase() AND type = 'QueryFinish' AND event_date >= yesterday() AND event_time >= NOW() - INTERVAL '10 MINUTE'\n+FORMAT Null;",
    "repo_full_name": "ClickHouse/ClickHouse",
    "discussion_comments": [
      {
        "comment_id": "2282574128",
        "repo_full_name": "ClickHouse/ClickHouse",
        "pr_number": 85556,
        "pr_file": "tests/queries/0_stateless/03594_push_more_filters_down_joins.sql",
        "discussion_id": "2282574128",
        "commented_code": "@@ -0,0 +1,48 @@\n+CREATE TABLE t1\n+(\n+    id Int32,\n+    fid Int32,\n+    tid Int32\n+)\n+ENGINE = MergeTree\n+ORDER BY tuple();\n+\n+CREATE TABLE t2\n+(\n+    id Int32,\n+    status Nullable(String),\n+    resource_id Nullable(Int32)\n+)\n+ENGINE = MergeTree\n+ORDER BY tuple();\n+\n+CREATE TABLE t3\n+(\n+    id Int32,\n+    status String\n+)\n+ENGINE = MergeTree\n+ORDER BY tuple();\n+\n+INSERT INTO t1 SELECT * REPLACE(1 as fid, 2 as tid) \n+FROM generateRandom(1, 2, 2) LIMIT 1000;\n+\n+INSERT INTO t2 SELECT * REPLACE(1 as id, 'OPEN' as status, NULL as resource_id) \n+FROM generateRandom(1, 2, 2) LIMIT 1000;\n+\n+INSERT INTO t3 SELECT * REPLACE('BACKLOG' as status, 2 as id) \n+FROM generateRandom(1, 2, 2) LIMIT 1000;\n+\n+SELECT 1\n+FROM t2\n+LEFT JOIN t1 ON t2.id = t1.fid\n+LEFT JOIN t3 ON t1.tid = t3.id\n+WHERE true AND (t2.resource_id IS NOT NULL) AND (t2.status IN ('OPEN')) AND (t3.status IN ('BACKLOG'))\n+SETTINGS enable_analyzer = 1, log_comment = '03594_push_more_filters_down_joins';\n+\n+SYSTEM FLUSH LOGS;\n+\n+SELECT throwIf(ProfileEvents['JoinResultRowCount'] != 0)\n+FROM system.query_log\n+WHERE log_comment = '03594_push_more_filters_down_joins' AND current_database = currentDatabase() AND type = 'QueryFinish' AND event_date >= yesterday() AND event_time >= NOW() - INTERVAL '10 MINUTE'\n+FORMAT Null;",
        "comment_created_at": "2025-08-18T14:25:45+00:00",
        "comment_author": "novikd",
        "comment_body": "Let's also add a test with `EXPLAIN PLAN`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2268165073",
    "pr_number": 85118,
    "pr_file": "tests/queries/0_stateless/03591_optimize_prewhere_row_policy.sql",
    "created_at": "2025-08-11T22:42:11+00:00",
    "commented_code": "+-- {echoOn}\n+\n+SET use_query_condition_cache=0;\n+\n+DROP TABLE IF EXISTS 03591_test;\n+\n+DROP ROW POLICY IF EXISTS 03591_rp ON 03591_test;\n+\n+CREATE TABLE 03591_test (a Int32, b Int32) ENGINE=MergeTree ORDER BY tuple();\n+\n+INSERT INTO 03591_test VALUES (3, 1), (2, 2), (3, 2);\n+\n+SELECT * FROM 03591_test;\n+\n+SELECT * FROM 03591_test WHERE throwIf(b=1, 'Should throw') SETTINGS optimize_move_to_prewhere = 1; -- {serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO}\n+\n+CREATE ROW POLICY 03591_rp ON 03591_test USING b=2 TO CURRENT_USER;",
    "repo_full_name": "ClickHouse/ClickHouse",
    "discussion_comments": [
      {
        "comment_id": "2268165073",
        "repo_full_name": "ClickHouse/ClickHouse",
        "pr_number": 85118,
        "pr_file": "tests/queries/0_stateless/03591_optimize_prewhere_row_policy.sql",
        "discussion_id": "2268165073",
        "commented_code": "@@ -0,0 +1,31 @@\n+-- {echoOn}\n+\n+SET use_query_condition_cache=0;\n+\n+DROP TABLE IF EXISTS 03591_test;\n+\n+DROP ROW POLICY IF EXISTS 03591_rp ON 03591_test;\n+\n+CREATE TABLE 03591_test (a Int32, b Int32) ENGINE=MergeTree ORDER BY tuple();\n+\n+INSERT INTO 03591_test VALUES (3, 1), (2, 2), (3, 2);\n+\n+SELECT * FROM 03591_test;\n+\n+SELECT * FROM 03591_test WHERE throwIf(b=1, 'Should throw') SETTINGS optimize_move_to_prewhere = 1; -- {serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO}\n+\n+CREATE ROW POLICY 03591_rp ON 03591_test USING b=2 TO CURRENT_USER;",
        "comment_created_at": "2025-08-11T22:42:11+00:00",
        "comment_author": "ilejn",
        "comment_body": "It may be  good idea to have a bit more complex row policies, e.g. another PERMISSIVE and another RESTRICTIVE.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2269140156",
        "repo_full_name": "ClickHouse/ClickHouse",
        "pr_number": 85118,
        "pr_file": "tests/queries/0_stateless/03591_optimize_prewhere_row_policy.sql",
        "discussion_id": "2268165073",
        "commented_code": "@@ -0,0 +1,31 @@\n+-- {echoOn}\n+\n+SET use_query_condition_cache=0;\n+\n+DROP TABLE IF EXISTS 03591_test;\n+\n+DROP ROW POLICY IF EXISTS 03591_rp ON 03591_test;\n+\n+CREATE TABLE 03591_test (a Int32, b Int32) ENGINE=MergeTree ORDER BY tuple();\n+\n+INSERT INTO 03591_test VALUES (3, 1), (2, 2), (3, 2);\n+\n+SELECT * FROM 03591_test;\n+\n+SELECT * FROM 03591_test WHERE throwIf(b=1, 'Should throw') SETTINGS optimize_move_to_prewhere = 1; -- {serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO}\n+\n+CREATE ROW POLICY 03591_rp ON 03591_test USING b=2 TO CURRENT_USER;",
        "comment_created_at": "2025-08-12T08:43:22+00:00",
        "comment_author": "ilejn",
        "comment_body": "It may be interesting to add a case where columns used in row policies are not selected.",
        "pr_file_module": null
      }
    ]
  }
]