[
  {
    "discussion_id": "2256777785",
    "pr_number": 84799,
    "pr_file": "src/Storages/NATS/INATSConsumer.h",
    "created_at": "2025-08-06T10:53:16+00:00",
    "commented_code": "/// or nullptr if there are no messages to process.\n     ReadBufferPtr consume();\n \n-private:\n+protected:\n+    const NATSConnectionPtr & getConnection(){return connection;}\n+    natsConnection * getNativeConnection(){return connection->getConnection();}\n+\n+    const std::vector<String> & getSubjects() const {return subjects;}\n+    const LoggerPtr & getLogger() const {return log;}\n+\n+    const String & getQueueName() const{return queue_name;}\n+\n+    void setSubscriptions(std::vector<NATSSubscriptionPtr> subscriptions_){subscriptions = std::move(subscriptions_);}\n+",
    "repo_full_name": "ClickHouse/ClickHouse",
    "discussion_comments": [
      {
        "comment_id": "2256777785",
        "repo_full_name": "ClickHouse/ClickHouse",
        "pr_number": 84799,
        "pr_file": "src/Storages/NATS/INATSConsumer.h",
        "discussion_id": "2256777785",
        "commented_code": "@@ -53,18 +54,28 @@ class NATSConsumer\n     /// or nullptr if there are no messages to process.\n     ReadBufferPtr consume();\n \n-private:\n+protected:\n+    const NATSConnectionPtr & getConnection(){return connection;}\n+    natsConnection * getNativeConnection(){return connection->getConnection();}\n+\n+    const std::vector<String> & getSubjects() const {return subjects;}\n+    const LoggerPtr & getLogger() const {return log;}\n+\n+    const String & getQueueName() const{return queue_name;}\n+\n+    void setSubscriptions(std::vector<NATSSubscriptionPtr> subscriptions_){subscriptions = std::move(subscriptions_);}\n+",
        "comment_created_at": "2025-08-06T10:53:16+00:00",
        "comment_author": "antaljanosbenjamin",
        "comment_body": "The formatting of these functions are different than above, I slightly prefer the extra white spaces, but if there is no style check for this, I am okay with both, just be consistent.\n```suggestion\n    const NATSConnectionPtr & getConnection() { return connection; }\n    natsConnection * getNativeConnection() { return connection->getConnection(); }\n\n    const std::vector<String> & getSubjects() const { return subjects; }\n    const LoggerPtr & getLogger() const { return log; }\n\n    const String & getQueueName() const { return queue_name; }\n\n    void setSubscriptions(std::vector<NATSSubscriptionPtr> subscriptions_) { subscriptions = std::move(subscriptions_); }\n\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2106964185",
    "pr_number": 77153,
    "pr_file": "src/Storages/System/SystemStorageInstrumentation.h",
    "created_at": "2025-05-26T09:48:24+00:00",
    "commented_code": "+#pragma once\n+\n+#include <Storages/System/IStorageSystemOneBlock.h>\n+\n+\n+namespace DB\n+{\n+class Context;\n+\n+// Implements `instrumentation` system table, which allows you to get information about functions instrumented by XRay.",
    "repo_full_name": "ClickHouse/ClickHouse",
    "discussion_comments": [
      {
        "comment_id": "2106964185",
        "repo_full_name": "ClickHouse/ClickHouse",
        "pr_number": 77153,
        "pr_file": "src/Storages/System/SystemStorageInstrumentation.h",
        "discussion_id": "2106964185",
        "commented_code": "@@ -0,0 +1,22 @@\n+#pragma once\n+\n+#include <Storages/System/IStorageSystemOneBlock.h>\n+\n+\n+namespace DB\n+{\n+class Context;\n+\n+// Implements `instrumentation` system table, which allows you to get information about functions instrumented by XRay.",
        "comment_created_at": "2025-05-26T09:48:24+00:00",
        "comment_author": "pamarcos",
        "comment_body": "```suggestion\r\n/// Implements `instrumentation` system table, which allows you to get information about functions instrumented by XRay.\r\n```\r\n\r\nSingle-line comments are supposed to be done with 3 slashes: https://clickhouse.com/docs/development/style#comments\r\n\r\nThere are other comments with only two slashes in the PR. Please take a look and convert them to 3 slashes :pray: ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2270739516",
    "pr_number": 83837,
    "pr_file": "src/Interpreters/GinFilter.h",
    "created_at": "2025-08-12T18:14:44+00:00",
    "commented_code": "/// given postings list cache\n     bool contains(const GinFilter & filter, PostingsCacheForStore & cache_store, GinSearchMode mode = GinSearchMode::All) const;\n \n+\t// Get a vector of indices.\n+\tstd::vector<uint32_t> getIndices(const GinFilter * filter, const PostingsCacheForStore *cache_store, const MarkRanges &ranges) const;",
    "repo_full_name": "ClickHouse/ClickHouse",
    "discussion_comments": [
      {
        "comment_id": "2270739516",
        "repo_full_name": "ClickHouse/ClickHouse",
        "pr_number": 83837,
        "pr_file": "src/Interpreters/GinFilter.h",
        "discussion_id": "2270739516",
        "commented_code": "@@ -73,6 +75,9 @@ class GinFilter\n     /// given postings list cache\n     bool contains(const GinFilter & filter, PostingsCacheForStore & cache_store, GinSearchMode mode = GinSearchMode::All) const;\n \n+\t// Get a vector of indices.\n+\tstd::vector<uint32_t> getIndices(const GinFilter * filter, const PostingsCacheForStore *cache_store, const MarkRanges &ranges) const;",
        "comment_created_at": "2025-08-12T18:14:44+00:00",
        "comment_author": "rschu1ze",
        "comment_body": "Cosmetics:\n- `*` and `&` need spaces left and right,\n- `//` --> `///`,\n- `uint32_t` --> `UInt32`",
        "pr_file_module": null
      }
    ]
  }
]