[
  {
    "discussion_id": "2051832320",
    "pr_number": 2964,
    "pr_file": "webview-ui/src/components/settings/ThinkingBudgetSlider.tsx",
    "created_at": "2025-04-20T23:30:56+00:00",
    "commented_code": "interface ThinkingBudgetSliderProps {\n \tapiConfiguration: ApiConfiguration | undefined\n \tsetApiConfiguration: (apiConfiguration: ApiConfiguration) => void\n+\tmaxBudget?: number\n }\n \n-const ThinkingBudgetSlider = ({ apiConfiguration, setApiConfiguration }: ThinkingBudgetSliderProps) => {\n-\tconst maxTokens = anthropicModels[\"claude-3-7-sonnet-20250219\"].maxTokens\n-\tconst maxSliderValue = Math.floor(maxTokens * MAX_PERCENTAGE)\n+const ThinkingBudgetSlider = ({ apiConfiguration, setApiConfiguration, maxBudget }: ThinkingBudgetSliderProps) => {\n+\tconst defaultMaxTokens =\n+\t\tapiConfiguration?.apiProvider === \"gemini\"\n+\t\t\t? geminiModels[geminiDefaultModelId].maxTokens\n+\t\t\t: anthropicModels[\"claude-3-7-sonnet-20250219\"].maxTokens\n+\n+\t// Calculate the maximum value, applying the percentage cap only for Anthropic\n+\tconst computedMax = (() => {",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2051832320",
        "repo_full_name": "cline/cline",
        "pr_number": 2964,
        "pr_file": "webview-ui/src/components/settings/ThinkingBudgetSlider.tsx",
        "discussion_id": "2051832320",
        "commented_code": "@@ -82,11 +82,24 @@ const RangeInput = styled.input<{ $value: number; $min: number; $max: number }>`\n interface ThinkingBudgetSliderProps {\n \tapiConfiguration: ApiConfiguration | undefined\n \tsetApiConfiguration: (apiConfiguration: ApiConfiguration) => void\n+\tmaxBudget?: number\n }\n \n-const ThinkingBudgetSlider = ({ apiConfiguration, setApiConfiguration }: ThinkingBudgetSliderProps) => {\n-\tconst maxTokens = anthropicModels[\"claude-3-7-sonnet-20250219\"].maxTokens\n-\tconst maxSliderValue = Math.floor(maxTokens * MAX_PERCENTAGE)\n+const ThinkingBudgetSlider = ({ apiConfiguration, setApiConfiguration, maxBudget }: ThinkingBudgetSliderProps) => {\n+\tconst defaultMaxTokens =\n+\t\tapiConfiguration?.apiProvider === \"gemini\"\n+\t\t\t? geminiModels[geminiDefaultModelId].maxTokens\n+\t\t\t: anthropicModels[\"claude-3-7-sonnet-20250219\"].maxTokens\n+\n+\t// Calculate the maximum value, applying the percentage cap only for Anthropic\n+\tconst computedMax = (() => {",
        "comment_created_at": "2025-04-20T23:30:56+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "To maintain consistency it would be great to do this for Gemini too because keeping some extra room in the usage helps avoid the token exceeded down the line. I do think its unlikely for thinking budget but it would be great to minimize if else conditions in this part of the code given that we might have other models down the line within thinking budget too. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2051874591",
        "repo_full_name": "cline/cline",
        "pr_number": 2964,
        "pr_file": "webview-ui/src/components/settings/ThinkingBudgetSlider.tsx",
        "discussion_id": "2051832320",
        "commented_code": "@@ -82,11 +82,24 @@ const RangeInput = styled.input<{ $value: number; $min: number; $max: number }>`\n interface ThinkingBudgetSliderProps {\n \tapiConfiguration: ApiConfiguration | undefined\n \tsetApiConfiguration: (apiConfiguration: ApiConfiguration) => void\n+\tmaxBudget?: number\n }\n \n-const ThinkingBudgetSlider = ({ apiConfiguration, setApiConfiguration }: ThinkingBudgetSliderProps) => {\n-\tconst maxTokens = anthropicModels[\"claude-3-7-sonnet-20250219\"].maxTokens\n-\tconst maxSliderValue = Math.floor(maxTokens * MAX_PERCENTAGE)\n+const ThinkingBudgetSlider = ({ apiConfiguration, setApiConfiguration, maxBudget }: ThinkingBudgetSliderProps) => {\n+\tconst defaultMaxTokens =\n+\t\tapiConfiguration?.apiProvider === \"gemini\"\n+\t\t\t? geminiModels[geminiDefaultModelId].maxTokens\n+\t\t\t: anthropicModels[\"claude-3-7-sonnet-20250219\"].maxTokens\n+\n+\t// Calculate the maximum value, applying the percentage cap only for Anthropic\n+\tconst computedMax = (() => {",
        "comment_created_at": "2025-04-21T02:04:32+00:00",
        "comment_author": "monotykamary",
        "comment_body": "Unlike Anthropic (which has its upper limit of the budget to be it's max output tokens), Gemini has a clear fixed budget. I've done it in a way to avoid some if else conditions, but generalizing the maxTokens requires a bit of work.\r\n\r\nIn addition, there's also the case where we're not taking advantage of Anthropic's max output tokens when thinking is enabled (128k), which is somewhat solved in Roo-code. Probably deserves some love in a separate PR.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1986543334",
    "pr_number": 2142,
    "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
    "created_at": "2025-03-10T03:13:03+00:00",
    "commented_code": "}\n \t\tcase \"xai\":\n \t\t\treturn getProviderData(xaiModels, xaiDefaultModelId)\n+\t\tcase \"sambanova\":\n+\t\t\treturn getProviderData(sambanovaModels, \"\")",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "1986543334",
        "repo_full_name": "cline/cline",
        "pr_number": 2142,
        "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
        "discussion_id": "1986543334",
        "commented_code": "@@ -1537,6 +1568,8 @@ export function normalizeApiConfiguration(apiConfiguration?: ApiConfiguration):\n \t\t\t}\n \t\tcase \"xai\":\n \t\t\treturn getProviderData(xaiModels, xaiDefaultModelId)\n+\t\tcase \"sambanova\":\n+\t\t\treturn getProviderData(sambanovaModels, \"\")",
        "comment_created_at": "2025-03-10T03:13:03+00:00",
        "comment_author": "saoudrizwan",
        "comment_body": "we should have a default model id for this provider",
        "pr_file_module": null
      },
      {
        "comment_id": "1987347332",
        "repo_full_name": "cline/cline",
        "pr_number": 2142,
        "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
        "discussion_id": "1986543334",
        "commented_code": "@@ -1537,6 +1568,8 @@ export function normalizeApiConfiguration(apiConfiguration?: ApiConfiguration):\n \t\t\t}\n \t\tcase \"xai\":\n \t\t\treturn getProviderData(xaiModels, xaiDefaultModelId)\n+\t\tcase \"sambanova\":\n+\t\t\treturn getProviderData(sambanovaModels, \"\")",
        "comment_created_at": "2025-03-10T13:59:49+00:00",
        "comment_author": "saad-noodleseed",
        "comment_body": "agreed. will use the default model ID that's already defined.",
        "pr_file_module": null
      }
    ]
  }
]