[
  {
    "discussion_id": "2223442635",
    "pr_number": 5075,
    "pr_file": "src/api/providers/litellm.ts",
    "created_at": "2025-07-22T18:17:04+00:00",
    "commented_code": "import { convertToOpenAiMessages } from \"../transform/openai-format\"\n import { withRetry } from \"../retry\"",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2223442635",
        "repo_full_name": "cline/cline",
        "pr_number": 5075,
        "pr_file": "src/api/providers/litellm.ts",
        "discussion_id": "2223442635",
        "commented_code": "@@ -6,7 +6,7 @@ import { ApiStream } from \"../transform/stream\"\n import { convertToOpenAiMessages } from \"../transform/openai-format\"\n import { withRetry } from \"../retry\"",
        "comment_created_at": "2025-07-22T18:17:04+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "Could you write in the description of this PR the connection between the Oracle provider and LightLLM? I'm confused as to why we're adding all of these LiteLLM fields and changing this seemingly unconnected provider. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2223769475",
        "repo_full_name": "cline/cline",
        "pr_number": 5075,
        "pr_file": "src/api/providers/litellm.ts",
        "discussion_id": "2223442635",
        "commented_code": "@@ -6,7 +6,7 @@ import { ApiStream } from \"../transform/stream\"\n import { convertToOpenAiMessages } from \"../transform/openai-format\"\n import { withRetry } from \"../retry\"",
        "comment_created_at": "2025-07-22T20:33:05+00:00",
        "comment_author": "nihar-oracle",
        "comment_body": "Of course, I will update the description.\r\nSo, it is OCA's litellm compatible endpoint. The only real difference between this and a proper litellm implementation is that oca uses sso oauth backed access keys instead of api keys.\r\n\r\nI am happy to rename this to oca_ instead of oca_litellm if that is better.\r\nI have also created the oca handler as a derived class of litellm handler, I am happy to change that to it's own independent class as well",
        "pr_file_module": null
      },
      {
        "comment_id": "2232590132",
        "repo_full_name": "cline/cline",
        "pr_number": 5075,
        "pr_file": "src/api/providers/litellm.ts",
        "discussion_id": "2223442635",
        "commented_code": "@@ -6,7 +6,7 @@ import { ApiStream } from \"../transform/stream\"\n import { convertToOpenAiMessages } from \"../transform/openai-format\"\n import { withRetry } from \"../retry\"",
        "comment_created_at": "2025-07-26T05:57:29+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "Yeah let's rename it",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2223487802",
    "pr_number": 5071,
    "pr_file": "src/api/providers/huawei-cloud-maas.ts",
    "created_at": "2025-07-22T18:37:30+00:00",
    "commented_code": "+import { ApiHandler } from \"..\"\n+import { huaweiCloudMaasDefaultModelId, HuaweiCloudMaasModelId, huaweiCloudMaasModels, ModelInfo } from \"@shared/api\"\n+import { Anthropic } from \"@anthropic-ai/sdk\"\n+import OpenAI from \"openai\"\n+import { convertToOpenAiMessages } from \"../transform/openai-format\"\n+import { ApiStream } from \"../transform/stream\"\n+import { withRetry } from \"../retry\"\n+\n+interface HuaweiCloudMaaSHandlerOptions {\n+\thuaweiCloudMaasApiKey?: string\n+\tapiModelId?: string",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2223487802",
        "repo_full_name": "cline/cline",
        "pr_number": 5071,
        "pr_file": "src/api/providers/huawei-cloud-maas.ts",
        "discussion_id": "2223487802",
        "commented_code": "@@ -0,0 +1,122 @@\n+import { ApiHandler } from \"..\"\n+import { huaweiCloudMaasDefaultModelId, HuaweiCloudMaasModelId, huaweiCloudMaasModels, ModelInfo } from \"@shared/api\"\n+import { Anthropic } from \"@anthropic-ai/sdk\"\n+import OpenAI from \"openai\"\n+import { convertToOpenAiMessages } from \"../transform/openai-format\"\n+import { ApiStream } from \"../transform/stream\"\n+import { withRetry } from \"../retry\"\n+\n+interface HuaweiCloudMaaSHandlerOptions {\n+\thuaweiCloudMaasApiKey?: string\n+\tapiModelId?: string",
        "comment_created_at": "2025-07-22T18:37:30+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "Let's change this name to be Huawei-specific, so that there's no confusion. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2212479261",
    "pr_number": 4952,
    "pr_file": "src/shared/api.ts",
    "created_at": "2025-07-17T07:09:30+00:00",
    "commented_code": "},\n } as const satisfies Record<string, ModelInfo>\n \n+// Hugging Face Inference Providers\n+// https://huggingface.co/docs/inference-providers/en/index\n+export type HuggingFaceModelId = keyof typeof huggingFaceModels\n+export const huggingFaceDefaultModelId: HuggingFaceModelId = \"moonshotai/Kimi-K2-Instruct\"\n+export const huggingFaceModels = {\n+\t\"moonshotai/Kimi-K2-Instruct\": {",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2212479261",
        "repo_full_name": "cline/cline",
        "pr_number": 4952,
        "pr_file": "src/shared/api.ts",
        "discussion_id": "2212479261",
        "commented_code": "@@ -1074,6 +1078,58 @@ export const deepSeekModels = {\n \t},\n } as const satisfies Record<string, ModelInfo>\n \n+// Hugging Face Inference Providers\n+// https://huggingface.co/docs/inference-providers/en/index\n+export type HuggingFaceModelId = keyof typeof huggingFaceModels\n+export const huggingFaceDefaultModelId: HuggingFaceModelId = \"moonshotai/Kimi-K2-Instruct\"\n+export const huggingFaceModels = {\n+\t\"moonshotai/Kimi-K2-Instruct\": {",
        "comment_created_at": "2025-07-17T07:09:30+00:00",
        "comment_author": "hanouticelina",
        "comment_body": "might be worth including one or two models that use an explicit `:provider` suffix to improve the discoverability and bring more visibility to the underlying partners. what do you think?\r\n```suggestion\r\n\t\"moonshotai/Kimi-K2-Instruct:groq\": {\r\n```",
        "pr_file_module": null
      }
    ]
  }
]