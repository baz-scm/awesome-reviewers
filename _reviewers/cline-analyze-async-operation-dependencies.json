[
  {
    "discussion_id": "2232387432",
    "pr_number": 5169,
    "pr_file": "webview-ui/src/components/account/AccountView.tsx",
    "created_at": "2025-07-26T02:48:47+00:00",
    "commented_code": "async (event: any) => {\n \t\t\tconst newValue = (event.target as VSCodeDropdownChangeEvent[\"target\"]).value || \"personal\"\n \t\t\tconst organizationId = newValue === \"personal\" ? undefined : newValue\n+\t\t\tconst requestKey = organizationId || \"personal\"\n \n \t\t\tif (newValue === dropdownValue) {\n \t\t\t\treturn // No change, do nothing\n \t\t\t}\n \n-\t\t\ttry {\n-\t\t\t\tconsole.info(\"Changing selection to:\", newValue)\n+\t\t\t// Request deduplication check\n+\t\t\tif (isOrganizationSwitchingRef.current === requestKey) {\n+\t\t\t\treturn\n+\t\t\t}\n \n-\t\t\t\t// Send the change to the server\n-\t\t\t\tAccountServiceClient.setUserOrganization({ organizationId })\n+\t\t\t// Mark this organization switch as in progress\n+\t\t\tisOrganizationSwitchingRef.current = requestKey\n+\t\t\tconsole.log(`[ORG_SWITCH_DEDUP] Request allowed - setting lock for \"${requestKey}\"`)\n+\n+\t\t\ttry {\n+\t\t\t\tawait AccountServiceClient.setUserOrganization({ organizationId })",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2232387432",
        "repo_full_name": "cline/cline",
        "pr_number": 5169,
        "pr_file": "webview-ui/src/components/account/AccountView.tsx",
        "discussion_id": "2232387432",
        "commented_code": "@@ -165,30 +183,38 @@ export const ClineAccountView = () => {\n \t\tasync (event: any) => {\n \t\t\tconst newValue = (event.target as VSCodeDropdownChangeEvent[\"target\"]).value || \"personal\"\n \t\t\tconst organizationId = newValue === \"personal\" ? undefined : newValue\n+\t\t\tconst requestKey = organizationId || \"personal\"\n \n \t\t\tif (newValue === dropdownValue) {\n \t\t\t\treturn // No change, do nothing\n \t\t\t}\n \n-\t\t\ttry {\n-\t\t\t\tconsole.info(\"Changing selection to:\", newValue)\n+\t\t\t// Request deduplication check\n+\t\t\tif (isOrganizationSwitchingRef.current === requestKey) {\n+\t\t\t\treturn\n+\t\t\t}\n \n-\t\t\t\t// Send the change to the server\n-\t\t\t\tAccountServiceClient.setUserOrganization({ organizationId })\n+\t\t\t// Mark this organization switch as in progress\n+\t\t\tisOrganizationSwitchingRef.current = requestKey\n+\t\t\tconsole.log(`[ORG_SWITCH_DEDUP] Request allowed - setting lock for \"${requestKey}\"`)\n+\n+\t\t\ttry {\n+\t\t\t\tawait AccountServiceClient.setUserOrganization({ organizationId })",
        "comment_created_at": "2025-07-26T02:48:47+00:00",
        "comment_author": "abeatrix",
        "comment_body": "```suggestion\r\n\t\t\t\tAccountServiceClient.setUserOrganization({ organizationId })\r\n```\r\nDo we need the await if we are not depending on the response? This should help with the speed too",
        "pr_file_module": null
      },
      {
        "comment_id": "2232393836",
        "repo_full_name": "cline/cline",
        "pr_number": 5169,
        "pr_file": "webview-ui/src/components/account/AccountView.tsx",
        "discussion_id": "2232387432",
        "commented_code": "@@ -165,30 +183,38 @@ export const ClineAccountView = () => {\n \t\tasync (event: any) => {\n \t\t\tconst newValue = (event.target as VSCodeDropdownChangeEvent[\"target\"]).value || \"personal\"\n \t\t\tconst organizationId = newValue === \"personal\" ? undefined : newValue\n+\t\t\tconst requestKey = organizationId || \"personal\"\n \n \t\t\tif (newValue === dropdownValue) {\n \t\t\t\treturn // No change, do nothing\n \t\t\t}\n \n-\t\t\ttry {\n-\t\t\t\tconsole.info(\"Changing selection to:\", newValue)\n+\t\t\t// Request deduplication check\n+\t\t\tif (isOrganizationSwitchingRef.current === requestKey) {\n+\t\t\t\treturn\n+\t\t\t}\n \n-\t\t\t\t// Send the change to the server\n-\t\t\t\tAccountServiceClient.setUserOrganization({ organizationId })\n+\t\t\t// Mark this organization switch as in progress\n+\t\t\tisOrganizationSwitchingRef.current = requestKey\n+\t\t\tconsole.log(`[ORG_SWITCH_DEDUP] Request allowed - setting lock for \"${requestKey}\"`)\n+\n+\t\t\ttry {\n+\t\t\t\tawait AccountServiceClient.setUserOrganization({ organizationId })",
        "comment_created_at": "2025-07-26T02:55:54+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "The `setUserOrganization` call switches the backend's active organization context. If we don't wait for this to complete, the subsequent `fetchCreditBalance` call might execute with the wrong backend context.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2199357680",
    "pr_number": 4817,
    "pr_file": "webview-ui/src/components/account/AccountView.tsx",
    "created_at": "2025-07-11T02:40:43+00:00",
    "commented_code": "const fetchUserData = async () => {\n \t\t\ttry {\n-\t\t\t\tawait getUserCredits()\n-\t\t\t\tawait getUserOrganizations()\n+\t\t\t\tPromise.all([getUserCredits(), getUserOrganizations()])",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2199357680",
        "repo_full_name": "cline/cline",
        "pr_number": 4817,
        "pr_file": "webview-ui/src/components/account/AccountView.tsx",
        "discussion_id": "2199357680",
        "commented_code": "@@ -118,8 +93,7 @@ export const ClineAccountView = () => {\n \n \t\tconst fetchUserData = async () => {\n \t\t\ttry {\n-\t\t\t\tawait getUserCredits()\n-\t\t\t\tawait getUserOrganizations()\n+\t\t\t\tPromise.all([getUserCredits(), getUserOrganizations()])",
        "comment_created_at": "2025-07-11T02:40:43+00:00",
        "comment_author": "dcbartlett",
        "comment_body": "Promise.all() does not guarantee order.  This was explicitly left as two awaited calls to maintain order of the calls so that a race condition was handled.",
        "pr_file_module": null
      }
    ]
  }
]