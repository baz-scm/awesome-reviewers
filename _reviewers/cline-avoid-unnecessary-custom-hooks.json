[
  {
    "discussion_id": "2099081350",
    "pr_number": 3608,
    "pr_file": "webview-ui/src/hooks/useTotalTasksSize.ts",
    "created_at": "2025-05-21T00:34:31+00:00",
    "commented_code": "+import { useEffect, useCallback } from \"react\"\n+import { TaskServiceClient } from \"@/services/grpc-client\"\n+import { useExtensionState } from \"@/context/ExtensionStateContext\"\n+\n+/**\n+ * Hook to fetch and update the total tasks size using gRPC directly\n+ */\n+export function useTotalTasksSize() {",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2099081350",
        "repo_full_name": "cline/cline",
        "pr_number": 3608,
        "pr_file": "webview-ui/src/hooks/useTotalTasksSize.ts",
        "discussion_id": "2099081350",
        "commented_code": "@@ -0,0 +1,31 @@\n+import { useEffect, useCallback } from \"react\"\n+import { TaskServiceClient } from \"@/services/grpc-client\"\n+import { useExtensionState } from \"@/context/ExtensionStateContext\"\n+\n+/**\n+ * Hook to fetch and update the total tasks size using gRPC directly\n+ */\n+export function useTotalTasksSize() {",
        "comment_created_at": "2025-05-21T00:34:31+00:00",
        "comment_author": "Garoth",
        "comment_body": "Do we really need a custom hook here -- looks like it just pulls it from useExtensionState",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2057545302",
    "pr_number": 3080,
    "pr_file": "webview-ui/src/hooks/useClickOutside.ts",
    "created_at": "2025-04-24T05:09:35+00:00",
    "commented_code": "+import { RefObject, useEffect } from \"react\"\n+\n+/**\n+ * Hook that handles clicks outside of the specified element\n+ * @param ref React ref object pointing to the element to monitor\n+ * @param callback Function to call when a click outside occurs\n+ * @param isActive Optional boolean to conditionally enable/disable the hook\n+ */\n+export function useClickOutside<T extends HTMLElement = HTMLElement>(",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2057545302",
        "repo_full_name": "cline/cline",
        "pr_number": 3080,
        "pr_file": "webview-ui/src/hooks/useClickOutside.ts",
        "discussion_id": "2057545302",
        "commented_code": "@@ -0,0 +1,30 @@\n+import { RefObject, useEffect } from \"react\"\n+\n+/**\n+ * Hook that handles clicks outside of the specified element\n+ * @param ref React ref object pointing to the element to monitor\n+ * @param callback Function to call when a click outside occurs\n+ * @param isActive Optional boolean to conditionally enable/disable the hook\n+ */\n+export function useClickOutside<T extends HTMLElement = HTMLElement>(",
        "comment_created_at": "2025-04-24T05:09:35+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "We already have a \"useClickAway\" that can be imported from \"react-use\". See the ClineRulesToggleModal or ServersToggleModal for reference.",
        "pr_file_module": null
      }
    ]
  }
]