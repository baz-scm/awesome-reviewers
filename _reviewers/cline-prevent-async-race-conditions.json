[
  {
    "discussion_id": "2196121694",
    "pr_number": 4786,
    "pr_file": "src/core/controller/index.ts",
    "created_at": "2025-07-09T22:38:17+00:00",
    "commented_code": "// Auth\n \tpublic async validateAuthState(state: string | null): Promise<boolean> {",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2196121694",
        "repo_full_name": "cline/cline",
        "pr_number": 4786,
        "pr_file": "src/core/controller/index.ts",
        "discussion_id": "2196121694",
        "commented_code": "@@ -458,12 +458,7 @@ export class Controller {\n \n \t// Auth\n \tpublic async validateAuthState(state: string | null): Promise<boolean> {",
        "comment_created_at": "2025-07-09T22:38:17+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "This function is not being called anywhere?",
        "pr_file_module": null
      },
      {
        "comment_id": "2196128276",
        "repo_full_name": "cline/cline",
        "pr_number": 4786,
        "pr_file": "src/core/controller/index.ts",
        "discussion_id": "2196121694",
        "commented_code": "@@ -458,12 +458,7 @@ export class Controller {\n \n \t// Auth\n \tpublic async validateAuthState(state: string | null): Promise<boolean> {",
        "comment_created_at": "2025-07-09T22:42:31+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "And since its not being called both in main and in your PR  then the claim of race condition here\r\n<img width=\"839\" alt=\"image\" src=\"https://github.com/user-attachments/assets/117d2820-606e-489d-ac7a-fdd8de54ddd8\" />\r\n\r\nwould not be true",
        "pr_file_module": null
      },
      {
        "comment_id": "2196225300",
        "repo_full_name": "cline/cline",
        "pr_number": 4786,
        "pr_file": "src/core/controller/index.ts",
        "discussion_id": "2196121694",
        "commented_code": "@@ -458,12 +458,7 @@ export class Controller {\n \n \t// Auth\n \tpublic async validateAuthState(state: string | null): Promise<boolean> {",
        "comment_created_at": "2025-07-10T00:08:09+00:00",
        "comment_author": "abeatrix",
        "comment_body": "it was also being reset every time createAuthRequest was being called:\r\n`this._authNonce = crypto.randomBytes(32).toString(\"hex\")`\r\n\r\nso if createAuthRequest() was being called again before the first auth process is completed they could get the error",
        "pr_file_module": null
      },
      {
        "comment_id": "2196248932",
        "repo_full_name": "cline/cline",
        "pr_number": 4786,
        "pr_file": "src/core/controller/index.ts",
        "discussion_id": "2196121694",
        "commented_code": "@@ -458,12 +458,7 @@ export class Controller {\n \n \t// Auth\n \tpublic async validateAuthState(state: string | null): Promise<boolean> {",
        "comment_created_at": "2025-07-10T00:24:34+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "> so if createAuthRequest() was being called again before the first auth process is completed they could get the error\r\n\r\nFair point, it would be best to just delete this method all together if its not being used just for clarity.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2052246152",
    "pr_number": 3028,
    "pr_file": "src/extension.ts",
    "created_at": "2025-04-21T10:40:03+00:00",
    "commented_code": "// Register the command handler\n \tcontext.subscriptions.push(\n \t\tvscode.commands.registerCommand(\"cline.fixWithCline\", async (range: vscode.Range, diagnostics: vscode.Diagnostic[]) => {\n+\t\t\t// Add this line to focus the chat input first\n+\t\t\tawait vscode.commands.executeCommand(\"cline.focusChatInput\")\n+\t\t\tawait setTimeoutPromise(150)",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2052246152",
        "repo_full_name": "cline/cline",
        "pr_number": 3028,
        "pr_file": "src/extension.ts",
        "discussion_id": "2052246152",
        "commented_code": "@@ -382,6 +382,9 @@ export function activate(context: vscode.ExtensionContext) {\n \t// Register the command handler\n \tcontext.subscriptions.push(\n \t\tvscode.commands.registerCommand(\"cline.fixWithCline\", async (range: vscode.Range, diagnostics: vscode.Diagnostic[]) => {\n+\t\t\t// Add this line to focus the chat input first\n+\t\t\tawait vscode.commands.executeCommand(\"cline.focusChatInput\")\n+\t\t\tawait setTimeoutPromise(150)",
        "comment_created_at": "2025-04-21T10:40:03+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "Added a short delay (`setTimeoutPromise(150)`) after executing the cline.focusChatInput command within the cline.fixWithCline handler.\r\n\r\nReasoning: There is an inherent race condition when cline.fixWithCline is triggered while the Cline chat view is not visible or focused. The cline.focusChatInput command initiates two asynchronous actions:\r\n\r\n1. Focusing the VS Code sidebar/panel (vscode.commands.executeCommand(\"claude-dev.SidebarProvider.focus\") if needed).\r\n2.  Sending a postMessage to the webview to focus the internal chat input element.\r\n\r\nThe await vscode.commands.executeCommand(\"cline.focusChatInput\") call returns after the command handler function finishes, which happens immediately after the postMessage is sent, but before VS Code has necessarily finished rendering the view and before the webview has received and processed the message to actually focus the input.\r\n\r\nConsequently, the subsequent visibleWebview?.controller.fixWithCline(...) call executes too early, before the webview is ready to receive the command or before the intended input field has focus, causing the 'Fix with Cline' action to fail on the first attempt in this scenario.\r\n\r\nThe added delay provides a brief window (150ms) to allow these asynchronous focus operations to complete, ensuring the chat view is visible and the input is focused before the fixWithCline logic proceeds, thus resolving the race condition and making the command reliable even when the chat view isn't initially active.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2053149024",
    "pr_number": 3028,
    "pr_file": "src/extension.ts",
    "created_at": "2025-04-22T00:37:29+00:00",
    "commented_code": "// Register the command handler\n \tcontext.subscriptions.push(\n \t\tvscode.commands.registerCommand(\"cline.fixWithCline\", async (range: vscode.Range, diagnostics: vscode.Diagnostic[]) => {\n+\t\t\t// Add this line to focus the chat input first\n+\t\t\tawait vscode.commands.executeCommand(\"cline.focusChatInput\")\n+\t\t\t// Wait for a webview instance to become visible after focusing",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2053149024",
        "repo_full_name": "cline/cline",
        "pr_number": 3028,
        "pr_file": "src/extension.ts",
        "discussion_id": "2053149024",
        "commented_code": "@@ -382,6 +383,10 @@ export function activate(context: vscode.ExtensionContext) {\n \t// Register the command handler\n \tcontext.subscriptions.push(\n \t\tvscode.commands.registerCommand(\"cline.fixWithCline\", async (range: vscode.Range, diagnostics: vscode.Diagnostic[]) => {\n+\t\t\t// Add this line to focus the chat input first\n+\t\t\tawait vscode.commands.executeCommand(\"cline.focusChatInput\")\n+\t\t\t// Wait for a webview instance to become visible after focusing",
        "comment_created_at": "2025-04-22T00:37:29+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "Initially I used a timeout here but its much better to use a pWaitFor as recommended by @frostbournesb ",
        "pr_file_module": null
      }
    ]
  }
]