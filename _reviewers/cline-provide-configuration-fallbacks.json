[
  {
    "discussion_id": "2216989096",
    "pr_number": 5029,
    "pr_file": "webview-ui/src/components/chat/CreditLimitError.tsx",
    "created_at": "2025-07-18T22:27:46+00:00",
    "commented_code": "totalSpent = 0,\n \ttotalPromotions = 0,\n \tmessage = \"You have run out of credit.\",\n-\tbuyCreditsUrl = `${clineEnvConfig.appBaseUrl}/dashboard`,\n+\tbuyCreditsUrl = \"https://api.cline.bot/dashboard/account?tab=credits&redirect=true\",",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2216997232",
        "repo_full_name": "cline/cline",
        "pr_number": 5029,
        "pr_file": "webview-ui/src/components/chat/CreditLimitError.tsx",
        "discussion_id": "2216989096",
        "commented_code": "@@ -18,7 +17,7 @@ const CreditLimitError: React.FC<CreditLimitErrorProps> = ({\n \ttotalSpent = 0,\n \ttotalPromotions = 0,\n \tmessage = \"You have run out of credit.\",\n-\tbuyCreditsUrl = `${clineEnvConfig.appBaseUrl}/dashboard`,\n+\tbuyCreditsUrl = \"https://api.cline.bot/dashboard/account?tab=credits&redirect=true\",",
        "comment_created_at": "2025-07-18T22:27:46+00:00",
        "comment_author": "0xToshii",
        "comment_body": "@abeatrix why is this hardcoded?",
        "pr_file_module": null
      },
      {
        "comment_id": "2217004283",
        "repo_full_name": "cline/cline",
        "pr_number": 5029,
        "pr_file": "webview-ui/src/components/chat/CreditLimitError.tsx",
        "discussion_id": "2216989096",
        "commented_code": "@@ -18,7 +17,7 @@ const CreditLimitError: React.FC<CreditLimitErrorProps> = ({\n \ttotalSpent = 0,\n \ttotalPromotions = 0,\n \tmessage = \"You have run out of credit.\",\n-\tbuyCreditsUrl = `${clineEnvConfig.appBaseUrl}/dashboard`,\n+\tbuyCreditsUrl = \"https://api.cline.bot/dashboard/account?tab=credits&redirect=true\",",
        "comment_created_at": "2025-07-18T22:38:54+00:00",
        "comment_author": "abeatrix",
        "comment_body": "this is a fallback value for this prop. the actual value should be sent back by the server. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2213973985",
    "pr_number": 4827,
    "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
    "created_at": "2025-07-17T18:05:56+00:00",
    "commented_code": "}\n }\n \n-const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, showSubmitButton }: ApiOptionsProps) => {\n+const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, currentMode }: ApiOptionsProps) => {\n \t// Use full context state for immediate save payload\n-\tconst { apiConfiguration, uriScheme } = useExtensionState()\n+\tconst { apiConfiguration } = useExtensionState()\n \n-\tconst selectedProvider = apiConfiguration?.apiProvider\n+\tconst selectedProvider = currentMode === \"plan\" ? apiConfiguration?.planModeApiProvider : apiConfiguration?.actModeApiProvider",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2213973985",
        "repo_full_name": "cline/cline",
        "pr_number": 4827,
        "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
        "discussion_id": "2213973985",
        "commented_code": "@@ -69,24 +70,16 @@ declare module \"vscode\" {\n \t}\n }\n \n-const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, showSubmitButton }: ApiOptionsProps) => {\n+const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, currentMode }: ApiOptionsProps) => {\n \t// Use full context state for immediate save payload\n-\tconst { apiConfiguration, uriScheme } = useExtensionState()\n+\tconst { apiConfiguration } = useExtensionState()\n \n-\tconst selectedProvider = apiConfiguration?.apiProvider\n+\tconst selectedProvider = currentMode === \"plan\" ? apiConfiguration?.planModeApiProvider : apiConfiguration?.actModeApiProvider",
        "comment_created_at": "2025-07-17T18:05:56+00:00",
        "comment_author": "abeatrix",
        "comment_body": "```suggestion\r\n\tconst selectedProvider =\r\n\t\t(currentMode === \"plan\" ? apiConfiguration?.planModeApiProvider : apiConfiguration?.actModeApiProvider) || \"cline\"\r\n```\r\nThe first time i run the debugger the api options was empty because i was in act mode and it looks like it was because i didn't have actModeApiProvider set up for me initially. It could be an build issue on my end but would be nice to have a default provider to fallback to\r\n\r\n<img width=\"372\" height=\"224\" alt=\"image\" src=\"https://github.com/user-attachments/assets/998da967-bd89-493c-b3ba-863ce691b210\" />\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2214724729",
        "repo_full_name": "cline/cline",
        "pr_number": 4827,
        "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
        "discussion_id": "2213973985",
        "commented_code": "@@ -69,24 +70,16 @@ declare module \"vscode\" {\n \t}\n }\n \n-const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, showSubmitButton }: ApiOptionsProps) => {\n+const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, currentMode }: ApiOptionsProps) => {\n \t// Use full context state for immediate save payload\n-\tconst { apiConfiguration, uriScheme } = useExtensionState()\n+\tconst { apiConfiguration } = useExtensionState()\n \n-\tconst selectedProvider = apiConfiguration?.apiProvider\n+\tconst selectedProvider = currentMode === \"plan\" ? apiConfiguration?.planModeApiProvider : apiConfiguration?.actModeApiProvider",
        "comment_created_at": "2025-07-18T02:14:51+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "@abeatrix The migration didn't populate it?",
        "pr_file_module": null
      },
      {
        "comment_id": "2214741937",
        "repo_full_name": "cline/cline",
        "pr_number": 4827,
        "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
        "discussion_id": "2213973985",
        "commented_code": "@@ -69,24 +70,16 @@ declare module \"vscode\" {\n \t}\n }\n \n-const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, showSubmitButton }: ApiOptionsProps) => {\n+const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, currentMode }: ApiOptionsProps) => {\n \t// Use full context state for immediate save payload\n-\tconst { apiConfiguration, uriScheme } = useExtensionState()\n+\tconst { apiConfiguration } = useExtensionState()\n \n-\tconst selectedProvider = apiConfiguration?.apiProvider\n+\tconst selectedProvider = currentMode === \"plan\" ? apiConfiguration?.planModeApiProvider : apiConfiguration?.actModeApiProvider",
        "comment_created_at": "2025-07-18T02:30:35+00:00",
        "comment_author": "abeatrix",
        "comment_body": "I'm not sure what happened. It was only in the first run and I can't reproduce it anymore so definitely an edge case. It would be nice to have a fallback option but don't think it's blocking!",
        "pr_file_module": null
      },
      {
        "comment_id": "2215017795",
        "repo_full_name": "cline/cline",
        "pr_number": 4827,
        "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
        "discussion_id": "2213973985",
        "commented_code": "@@ -69,24 +70,16 @@ declare module \"vscode\" {\n \t}\n }\n \n-const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, showSubmitButton }: ApiOptionsProps) => {\n+const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, currentMode }: ApiOptionsProps) => {\n \t// Use full context state for immediate save payload\n-\tconst { apiConfiguration, uriScheme } = useExtensionState()\n+\tconst { apiConfiguration } = useExtensionState()\n \n-\tconst selectedProvider = apiConfiguration?.apiProvider\n+\tconst selectedProvider = currentMode === \"plan\" ? apiConfiguration?.planModeApiProvider : apiConfiguration?.actModeApiProvider",
        "comment_created_at": "2025-07-18T06:02:31+00:00",
        "comment_author": "saoudrizwan",
        "comment_body": "hmm this didn't occur for my first run... i wonder if anyone else is able to repro this with a fresh cline install on an older version, then updating to this branch, then making sure the migration worked properly. bee any ideas about why this occurred for you? perhaps the migration failed? could you clear out the plan/act settings and try forcing the migration to happen again -- and using breakpoints to confirm where the migration is failing or if its not being run when expected.",
        "pr_file_module": null
      },
      {
        "comment_id": "2215121206",
        "repo_full_name": "cline/cline",
        "pr_number": 4827,
        "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
        "discussion_id": "2213973985",
        "commented_code": "@@ -69,24 +70,16 @@ declare module \"vscode\" {\n \t}\n }\n \n-const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, showSubmitButton }: ApiOptionsProps) => {\n+const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, currentMode }: ApiOptionsProps) => {\n \t// Use full context state for immediate save payload\n-\tconst { apiConfiguration, uriScheme } = useExtensionState()\n+\tconst { apiConfiguration } = useExtensionState()\n \n-\tconst selectedProvider = apiConfiguration?.apiProvider\n+\tconst selectedProvider = currentMode === \"plan\" ? apiConfiguration?.planModeApiProvider : apiConfiguration?.actModeApiProvider",
        "comment_created_at": "2025-07-18T06:39:06+00:00",
        "comment_author": "abeatrix",
        "comment_body": "@saoudrizwan I couldn't reproduce the issue after the first run but if I have to guess, w failed migration...? Maybe the extension was hot reloaded during the migration that caused it to be incomplete, or any migration that failed for a provider would cause the migration to exit early so ~~if we parse any undefined object as provider config that could cause migration to fail too~~. Edit: parsing is for setting the new config so another possibility that cause the migration to fail could be race condition with writing to the global state but not something I could reproduce it naturally. Will look more into the mutation process tomorrow and report back. \n\nI could reproduce the issue if I set both values to undefined though hence the suggestion, else there is no way for the user to unblock themselves when they run into this (if ever)\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2216900802",
        "repo_full_name": "cline/cline",
        "pr_number": 4827,
        "pr_file": "webview-ui/src/components/settings/ApiOptions.tsx",
        "discussion_id": "2213973985",
        "commented_code": "@@ -69,24 +70,16 @@ declare module \"vscode\" {\n \t}\n }\n \n-const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, showSubmitButton }: ApiOptionsProps) => {\n+const ApiOptions = ({ showModelOptions, apiErrorMessage, modelIdErrorMessage, isPopup, currentMode }: ApiOptionsProps) => {\n \t// Use full context state for immediate save payload\n-\tconst { apiConfiguration, uriScheme } = useExtensionState()\n+\tconst { apiConfiguration } = useExtensionState()\n \n-\tconst selectedProvider = apiConfiguration?.apiProvider\n+\tconst selectedProvider = currentMode === \"plan\" ? apiConfiguration?.planModeApiProvider : apiConfiguration?.actModeApiProvider",
        "comment_created_at": "2025-07-18T20:48:06+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "@abeatrix I changed this to use the normalized API configuration function, which we should have been using. Good catch here. This undefined state should no longer happen, regardless of the actual value of the variable on the backend.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2178758275",
    "pr_number": 4554,
    "pr_file": "webview-ui/src/context/ExtensionStateContext.tsx",
    "created_at": "2025-07-02T00:22:14+00:00",
    "commented_code": "terminalOutputLineLimit: 500,\n \t\tdefaultTerminalProfile: \"default\",\n \t\tisNewUser: false,\n+\t\twelcomeViewCompleted: true, // Default to true to avoid showing welcome view on first load - will be overwritten by extension state",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2178758275",
        "repo_full_name": "cline/cline",
        "pr_number": 4554,
        "pr_file": "webview-ui/src/context/ExtensionStateContext.tsx",
        "discussion_id": "2178758275",
        "commented_code": "@@ -202,6 +202,7 @@ export const ExtensionStateContextProvider: React.FC<{\n \t\tterminalOutputLineLimit: 500,\n \t\tdefaultTerminalProfile: \"default\",\n \t\tisNewUser: false,\n+\t\twelcomeViewCompleted: true, // Default to true to avoid showing welcome view on first load - will be overwritten by extension state",
        "comment_created_at": "2025-07-02T00:22:14+00:00",
        "comment_author": "dcbartlett",
        "comment_body": "I think the default here should be \"false\"",
        "pr_file_module": null
      },
      {
        "comment_id": "2178872859",
        "repo_full_name": "cline/cline",
        "pr_number": 4554,
        "pr_file": "webview-ui/src/context/ExtensionStateContext.tsx",
        "discussion_id": "2178758275",
        "commented_code": "@@ -202,6 +202,7 @@ export const ExtensionStateContextProvider: React.FC<{\n \t\tterminalOutputLineLimit: 500,\n \t\tdefaultTerminalProfile: \"default\",\n \t\tisNewUser: false,\n+\t\twelcomeViewCompleted: true, // Default to true to avoid showing welcome view on first load - will be overwritten by extension state",
        "comment_created_at": "2025-07-02T02:41:47+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "No it will get overwritten on the first start.",
        "pr_file_module": null
      },
      {
        "comment_id": "2178874597",
        "repo_full_name": "cline/cline",
        "pr_number": 4554,
        "pr_file": "webview-ui/src/context/ExtensionStateContext.tsx",
        "discussion_id": "2178758275",
        "commented_code": "@@ -202,6 +202,7 @@ export const ExtensionStateContextProvider: React.FC<{\n \t\tterminalOutputLineLimit: 500,\n \t\tdefaultTerminalProfile: \"default\",\n \t\tisNewUser: false,\n+\t\twelcomeViewCompleted: true, // Default to true to avoid showing welcome view on first load - will be overwritten by extension state",
        "comment_created_at": "2025-07-02T02:43:05+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "@dcbartlett Okay fair. Just didn't want it briefly flashing for users who should not see it.",
        "pr_file_module": null
      },
      {
        "comment_id": "2178876050",
        "repo_full_name": "cline/cline",
        "pr_number": 4554,
        "pr_file": "webview-ui/src/context/ExtensionStateContext.tsx",
        "discussion_id": "2178758275",
        "commented_code": "@@ -202,6 +202,7 @@ export const ExtensionStateContextProvider: React.FC<{\n \t\tterminalOutputLineLimit: 500,\n \t\tdefaultTerminalProfile: \"default\",\n \t\tisNewUser: false,\n+\t\twelcomeViewCompleted: true, // Default to true to avoid showing welcome view on first load - will be overwritten by extension state",
        "comment_created_at": "2025-07-02T02:44:28+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "I verified this with Vscode insiders  by cleaning global state \r\n\r\n<img width=\"312\" alt=\"image\" src=\"https://github.com/user-attachments/assets/bfe6a6eb-2d3f-4615-a735-fa9dee4994b2\" />\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2178877703",
        "repo_full_name": "cline/cline",
        "pr_number": 4554,
        "pr_file": "webview-ui/src/context/ExtensionStateContext.tsx",
        "discussion_id": "2178758275",
        "commented_code": "@@ -202,6 +202,7 @@ export const ExtensionStateContextProvider: React.FC<{\n \t\tterminalOutputLineLimit: 500,\n \t\tdefaultTerminalProfile: \"default\",\n \t\tisNewUser: false,\n+\t\twelcomeViewCompleted: true, // Default to true to avoid showing welcome view on first load - will be overwritten by extension state",
        "comment_created_at": "2025-07-02T02:46:26+00:00",
        "comment_author": "dcbartlett",
        "comment_body": "@arafatkatze yes, it should be false, as our default state should be to show this welcome state.  That being said, this might be a situation where we need a larger refactor, as the welcome state should be the default unless we move away because we see that it's not needed.  Otherwise, this would be an interstitial style setup, which would be \"cancelable\".  The welcome state should never be able to be canceled the way it's designed, so the system should be written so it's the default state.  If we are worried about flashing, we can use a loading state instead until we have full understanding of the state of welcomeView being completed.",
        "pr_file_module": null
      },
      {
        "comment_id": "2178891335",
        "repo_full_name": "cline/cline",
        "pr_number": 4554,
        "pr_file": "webview-ui/src/context/ExtensionStateContext.tsx",
        "discussion_id": "2178758275",
        "commented_code": "@@ -202,6 +202,7 @@ export const ExtensionStateContextProvider: React.FC<{\n \t\tterminalOutputLineLimit: 500,\n \t\tdefaultTerminalProfile: \"default\",\n \t\tisNewUser: false,\n+\t\twelcomeViewCompleted: true, // Default to true to avoid showing welcome view on first load - will be overwritten by extension state",
        "comment_created_at": "2025-07-02T02:55:34+00:00",
        "comment_author": "arafatkatze",
        "comment_body": "> this would be an interstitial style setup, which would be \"cancelable\". The welcome state should never be able to be canceled the way it's designed, so the system should be written so it's the default state.\r\n\r\nNo opinions here, I think is a matter of principle in how to build things in react. \r\n\r\nFor me, I was looking at things from a purely functionality frame of reference. IF you believe that a long term refactor here is warranted then that's fair, if that's the right way to do things. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2178925776",
        "repo_full_name": "cline/cline",
        "pr_number": 4554,
        "pr_file": "webview-ui/src/context/ExtensionStateContext.tsx",
        "discussion_id": "2178758275",
        "commented_code": "@@ -202,6 +202,7 @@ export const ExtensionStateContextProvider: React.FC<{\n \t\tterminalOutputLineLimit: 500,\n \t\tdefaultTerminalProfile: \"default\",\n \t\tisNewUser: false,\n+\t\twelcomeViewCompleted: true, // Default to true to avoid showing welcome view on first load - will be overwritten by extension state",
        "comment_created_at": "2025-07-02T03:30:24+00:00",
        "comment_author": "dcbartlett",
        "comment_body": "Yeah, I was purely looking at it from a standpoint of user flow.  From a stand-point of react, you're correct.",
        "pr_file_module": null
      },
      {
        "comment_id": "2180562107",
        "repo_full_name": "cline/cline",
        "pr_number": 4554,
        "pr_file": "webview-ui/src/context/ExtensionStateContext.tsx",
        "discussion_id": "2178758275",
        "commented_code": "@@ -202,6 +202,7 @@ export const ExtensionStateContextProvider: React.FC<{\n \t\tterminalOutputLineLimit: 500,\n \t\tdefaultTerminalProfile: \"default\",\n \t\tisNewUser: false,\n+\t\twelcomeViewCompleted: true, // Default to true to avoid showing welcome view on first load - will be overwritten by extension state",
        "comment_created_at": "2025-07-02T16:59:49+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "@dcbartlett So not clear, does your request stand?",
        "pr_file_module": null
      }
    ]
  }
]