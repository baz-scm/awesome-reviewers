[
  {
    "discussion_id": "2051676197",
    "pr_number": 3015,
    "pr_file": "src/utils/fs.ts",
    "created_at": "2025-04-20T10:01:40+00:00",
    "commented_code": "/**\n  * Recursively reads a directory and returns an array of absolute file paths.\n+ * Handles symlinks to both files and directories.\n  *\n  * @param directoryPath - The path to the directory to read.\n  * @returns A promise that resolves to an array of absolute file paths.\n  * @throws Error if the directory cannot be read.\n  */\n export const readDirectory = async (directoryPath: string) => {\n \ttry {\n-\t\tconst filePaths = await fs\n-\t\t\t.readdir(directoryPath, { withFileTypes: true, recursive: true })\n-\t\t\t.then((entries) => entries.filter((entry) => !OS_GENERATED_FILES.includes(entry.name)))\n-\t\t\t.then((entries) => entries.filter((entry) => entry.isFile()))\n-\t\t\t.then((files) => files.map((file) => path.resolve(file.parentPath, file.name)))\n+\t\tconst entries = await fs.readdir(directoryPath, { withFileTypes: true, recursive: true })\n+\n+\t\tconst filteredEntries = entries.filter((entry) => !OS_GENERATED_FILES.includes(entry.name))\n+\n+\t\tconst filePaths: string[] = []\n+\n+\t\tfor (const entry of filteredEntries) {\n+\t\t\tconst fullPath = path.resolve(entry.parentPath, entry.name)\n+\n+\t\t\tif (entry.isFile()) {\n+\t\t\t\tfilePaths.push(fullPath)\n+\t\t\t} else if (entry.isSymbolicLink()) {\n+\t\t\t\tconst targetPath = await fs.readlink(fullPath)\n+\t\t\t\tconst resolvedPath = path.resolve(path.dirname(fullPath), targetPath)\n+\n+\t\t\t\tconst stats = await fs.stat(resolvedPath)\n+\n+\t\t\t\tif (stats.isFile()) {\n+\t\t\t\t\tfilePaths.push(fullPath)\n+\t\t\t\t} else if (stats.isDirectory()) {\n+\t\t\t\t\tconst nestedFiles = await readDirectory(resolvedPath)",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2051686065",
        "repo_full_name": "cline/cline",
        "pr_number": 3015,
        "pr_file": "src/utils/fs.ts",
        "discussion_id": "2051676197",
        "commented_code": "@@ -84,18 +84,44 @@ const OS_GENERATED_FILES = [\n \n /**\n  * Recursively reads a directory and returns an array of absolute file paths.\n+ * Handles symlinks to both files and directories.\n  *\n  * @param directoryPath - The path to the directory to read.\n  * @returns A promise that resolves to an array of absolute file paths.\n  * @throws Error if the directory cannot be read.\n  */\n export const readDirectory = async (directoryPath: string) => {\n \ttry {\n-\t\tconst filePaths = await fs\n-\t\t\t.readdir(directoryPath, { withFileTypes: true, recursive: true })\n-\t\t\t.then((entries) => entries.filter((entry) => !OS_GENERATED_FILES.includes(entry.name)))\n-\t\t\t.then((entries) => entries.filter((entry) => entry.isFile()))\n-\t\t\t.then((files) => files.map((file) => path.resolve(file.parentPath, file.name)))\n+\t\tconst entries = await fs.readdir(directoryPath, { withFileTypes: true, recursive: true })\n+\n+\t\tconst filteredEntries = entries.filter((entry) => !OS_GENERATED_FILES.includes(entry.name))\n+\n+\t\tconst filePaths: string[] = []\n+\n+\t\tfor (const entry of filteredEntries) {\n+\t\t\tconst fullPath = path.resolve(entry.parentPath, entry.name)\n+\n+\t\t\tif (entry.isFile()) {\n+\t\t\t\tfilePaths.push(fullPath)\n+\t\t\t} else if (entry.isSymbolicLink()) {\n+\t\t\t\tconst targetPath = await fs.readlink(fullPath)\n+\t\t\t\tconst resolvedPath = path.resolve(path.dirname(fullPath), targetPath)\n+\n+\t\t\t\tconst stats = await fs.stat(resolvedPath)\n+\n+\t\t\t\tif (stats.isFile()) {\n+\t\t\t\t\tfilePaths.push(fullPath)\n+\t\t\t\t} else if (stats.isDirectory()) {\n+\t\t\t\t\tconst nestedFiles = await readDirectory(resolvedPath)",
        "comment_created_at": "2025-04-20T10:01:40+00:00",
        "comment_author": "km-tr",
        "comment_body": "Implemented cycle detection using a visitedPaths set to track already processed symlink targets and prevent infinite recursion. The function now skips symlinks pointing to already visited paths and\r\n  gracefully handles broken symlinks by catching errors during resolution.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2008145676",
    "pr_number": 2373,
    "pr_file": "src/core/context-management/ContextManager.ts",
    "created_at": "2025-03-21T18:44:34+00:00",
    "commented_code": "let messagesToRemove: number\n \t\tif (keep === \"half\") {\n-\t\t\t// Remove half of user-assistant pairs\n+\t\t\t// Remove half of remaining user-assistant pairs\n+\t\t\t// We first calculate half of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n \t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 4) * 2 // Keep even number\n \t\t} else {\n-\t\t\t// Remove 3/4 of user-assistant pairs\n-\t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 8) * 3 * 2",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2008145676",
        "repo_full_name": "cline/cline",
        "pr_number": 2373,
        "pr_file": "src/core/context-management/ContextManager.ts",
        "discussion_id": "2008145676",
        "commented_code": "@@ -12,11 +12,17 @@ export class ContextManager {\n \n \t\tlet messagesToRemove: number\n \t\tif (keep === \"half\") {\n-\t\t\t// Remove half of user-assistant pairs\n+\t\t\t// Remove half of remaining user-assistant pairs\n+\t\t\t// We first calculate half of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n \t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 4) * 2 // Keep even number\n \t\t} else {\n-\t\t\t// Remove 3/4 of user-assistant pairs\n-\t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 8) * 3 * 2",
        "comment_created_at": "2025-03-21T18:44:34+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "For example, if messages.length is 5 and the currentDeletedRange is undefined (nothing yet has been truncated).\r\n\r\nThen startOfRest would be 1.\r\n\r\nThen, \r\n\r\nMath.floor((messages.length - startOfRest) / 8) * 3 * 2 \r\n= floor((5 - 1) / 8) * 3 * 2 \r\n= floor(.5) * 3 * 2 \r\n= 0 * 3 * 2\r\n= 0\r\n\r\nThis incorrectly calculates the messagesToRemove to be zero.\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2008151060",
    "pr_number": 2373,
    "pr_file": "src/core/context-management/ContextManager.ts",
    "created_at": "2025-03-21T18:49:08+00:00",
    "commented_code": "let messagesToRemove: number\n \t\tif (keep === \"half\") {\n-\t\t\t// Remove half of user-assistant pairs\n+\t\t\t// Remove half of remaining user-assistant pairs\n+\t\t\t// We first calculate half of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n \t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 4) * 2 // Keep even number\n \t\t} else {\n-\t\t\t// Remove 3/4 of user-assistant pairs\n-\t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 8) * 3 * 2\n+\t\t\t// Remove 3/4 of remaining user-assistant pairs\n+\t\t\t// We calculate 3/4ths of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n+\t\t\tmessagesToRemove = Math.floor(((messages.length - startOfRest) * 3) / 4 / 2) * 2",
    "repo_full_name": "cline/cline",
    "discussion_comments": [
      {
        "comment_id": "2008151060",
        "repo_full_name": "cline/cline",
        "pr_number": 2373,
        "pr_file": "src/core/context-management/ContextManager.ts",
        "discussion_id": "2008151060",
        "commented_code": "@@ -12,11 +12,17 @@ export class ContextManager {\n \n \t\tlet messagesToRemove: number\n \t\tif (keep === \"half\") {\n-\t\t\t// Remove half of user-assistant pairs\n+\t\t\t// Remove half of remaining user-assistant pairs\n+\t\t\t// We first calculate half of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n \t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 4) * 2 // Keep even number\n \t\t} else {\n-\t\t\t// Remove 3/4 of user-assistant pairs\n-\t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 8) * 3 * 2\n+\t\t\t// Remove 3/4 of remaining user-assistant pairs\n+\t\t\t// We calculate 3/4ths of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n+\t\t\tmessagesToRemove = Math.floor(((messages.length - startOfRest) * 3) / 4 / 2) * 2",
        "comment_created_at": "2025-03-21T18:49:08+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "In the same example, messages.length is 5 and the currentDeletedRange is undefined.\r\n\r\nSo,\r\nMath.floor(((messages.length - startOfRest) * 3) / 4 / 2) * 2\r\n= floor(((5 - 1) * 3) / 4 / 2) * 2\r\n= floor((4 * 3) / 4 / 2) * 2\r\n= floor(12 / 4 / 2) * 2\r\n= floor(3 / 2) * 2\r\n= floor(1.5) * 2\r\n= 1 * 2\r\n= 2\r\n\r\nThus correctly calculating that we can remove two messages.",
        "pr_file_module": null
      },
      {
        "comment_id": "2008153956",
        "repo_full_name": "cline/cline",
        "pr_number": 2373,
        "pr_file": "src/core/context-management/ContextManager.ts",
        "discussion_id": "2008151060",
        "commented_code": "@@ -12,11 +12,17 @@ export class ContextManager {\n \n \t\tlet messagesToRemove: number\n \t\tif (keep === \"half\") {\n-\t\t\t// Remove half of user-assistant pairs\n+\t\t\t// Remove half of remaining user-assistant pairs\n+\t\t\t// We first calculate half of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n \t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 4) * 2 // Keep even number\n \t\t} else {\n-\t\t\t// Remove 3/4 of user-assistant pairs\n-\t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 8) * 3 * 2\n+\t\t\t// Remove 3/4 of remaining user-assistant pairs\n+\t\t\t// We calculate 3/4ths of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n+\t\t\tmessagesToRemove = Math.floor(((messages.length - startOfRest) * 3) / 4 / 2) * 2",
        "comment_created_at": "2025-03-21T18:51:45+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "With user/assistant pairs, this would look like:\r\n\r\nu, a, u, a, u  (The first message is always u and, since we call this when a request is made, the last message is always u)\r\n\r\nThen, after the truncation, we get:\r\n\r\nu, _ , _ , a, u\r\n\r\nSo this would be\r\n\r\nu, a, u",
        "pr_file_module": null
      },
      {
        "comment_id": "2008154427",
        "repo_full_name": "cline/cline",
        "pr_number": 2373,
        "pr_file": "src/core/context-management/ContextManager.ts",
        "discussion_id": "2008151060",
        "commented_code": "@@ -12,11 +12,17 @@ export class ContextManager {\n \n \t\tlet messagesToRemove: number\n \t\tif (keep === \"half\") {\n-\t\t\t// Remove half of user-assistant pairs\n+\t\t\t// Remove half of remaining user-assistant pairs\n+\t\t\t// We first calculate half of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n \t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 4) * 2 // Keep even number\n \t\t} else {\n-\t\t\t// Remove 3/4 of user-assistant pairs\n-\t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 8) * 3 * 2\n+\t\t\t// Remove 3/4 of remaining user-assistant pairs\n+\t\t\t// We calculate 3/4ths of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n+\t\t\tmessagesToRemove = Math.floor(((messages.length - startOfRest) * 3) / 4 / 2) * 2",
        "comment_created_at": "2025-03-21T18:52:09+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "Note that we can't truncate further than this without either removing the first user message or the message that the user just sent.",
        "pr_file_module": null
      },
      {
        "comment_id": "2008163341",
        "repo_full_name": "cline/cline",
        "pr_number": 2373,
        "pr_file": "src/core/context-management/ContextManager.ts",
        "discussion_id": "2008151060",
        "commented_code": "@@ -12,11 +12,17 @@ export class ContextManager {\n \n \t\tlet messagesToRemove: number\n \t\tif (keep === \"half\") {\n-\t\t\t// Remove half of user-assistant pairs\n+\t\t\t// Remove half of remaining user-assistant pairs\n+\t\t\t// We first calculate half of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n \t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 4) * 2 // Keep even number\n \t\t} else {\n-\t\t\t// Remove 3/4 of user-assistant pairs\n-\t\t\tmessagesToRemove = Math.floor((messages.length - startOfRest) / 8) * 3 * 2\n+\t\t\t// Remove 3/4 of remaining user-assistant pairs\n+\t\t\t// We calculate 3/4ths of the messages then divide by 2 to get the number of pairs.\n+\t\t\t// After flooring, we multiply by 2 to get the number of messages.\n+\t\t\t// Note that this will also always be an even number.\n+\t\t\tmessagesToRemove = Math.floor(((messages.length - startOfRest) * 3) / 4 / 2) * 2",
        "comment_created_at": "2025-03-21T18:56:38+00:00",
        "comment_author": "celestial-vault",
        "comment_body": "A final note.\r\n\r\nYou can see that the original \"half\" truncation works fine because, since we can't truncate message lengths of 3 or less, we don't end up flooring to zero as we see with the \"quarter\" truncation.\r\n\r\nmessagesToRemove = Math.floor((messages.length - startOfRest) / 4) * 2\r\n\r\nTo prove this, we can assume the message length is 5 (The math would work with 4 but, as we've noticed, the length is always uneven).\r\n\r\nThen we have,\r\n\r\nfloor((messages.length - startOfRest) / 4) * 2\r\n= floor((5 - 1) / 4) * 2\r\n= floor(4 / 4) * 2\r\n= floor(1) * 2\r\n= 1 * 2\r\n= 2\r\n\r\nThus correctly calculating that we can remove 1 user/message pair when we have 5 messages.",
        "pr_file_module": null
      }
    ]
  }
]