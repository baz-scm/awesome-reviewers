[
  {
    "discussion_id": "2148829203",
    "pr_number": 1336,
    "pr_file": "codex-cli/src/cli.tsx",
    "created_at": "2025-06-15T21:16:50+00:00",
    "commented_code": "if (data.OPENAI_API_KEY && !expired) {\n       apiKey = data.OPENAI_API_KEY;\n     }\n+    if (\n+      data.GITHUBCOPILOT_API_KEY &&\n+      provider.toLowerCase() === \"githubcopilot\"\n+    ) {\n+      apiKey = data.GITHUBCOPILOT_API_KEY;\n+    }\n   }\n } catch {\n   // ignore errors\n }\n \n-if (cli.flags.login) {\n-  apiKey = await fetchApiKey(client.issuer, client.client_id);\n+if (provider.toLowerCase() === \"githubcopilot\" && !apiKey) {\n+  apiKey = await fetchGithubCopilotApiKey();\n+  try {\n+    const home = os.homedir();\n+    const authDir = path.join(home, \".codex\");\n+    const authFile = path.join(authDir, \"auth.json\");\n+    fs.writeFileSync(\n+      authFile,\n+      JSON.stringify(\n+        {\n+          GITHUBCOPILOT_API_KEY: apiKey,\n+        },\n+        null,\n+        2,\n+      ),\n+      \"utf-8\",\n+    );\n+  } catch {\n+    /* ignore */\n+  }\n+} else if (cli.flags.login) {\n+  if (provider.toLowerCase() === \"githubcopilot\") {\n+    apiKey = await fetchGithubCopilotApiKey();",
    "repo_full_name": "openai/codex",
    "discussion_comments": [
      {
        "comment_id": "2148829203",
        "repo_full_name": "openai/codex",
        "pr_number": 1336,
        "pr_file": "codex-cli/src/cli.tsx",
        "discussion_id": "2148829203",
        "commented_code": "@@ -322,13 +323,43 @@ try {\n     if (data.OPENAI_API_KEY && !expired) {\n       apiKey = data.OPENAI_API_KEY;\n     }\n+    if (\n+      data.GITHUBCOPILOT_API_KEY &&\n+      provider.toLowerCase() === \"githubcopilot\"\n+    ) {\n+      apiKey = data.GITHUBCOPILOT_API_KEY;\n+    }\n   }\n } catch {\n   // ignore errors\n }\n \n-if (cli.flags.login) {\n-  apiKey = await fetchApiKey(client.issuer, client.client_id);\n+if (provider.toLowerCase() === \"githubcopilot\" && !apiKey) {\n+  apiKey = await fetchGithubCopilotApiKey();\n+  try {\n+    const home = os.homedir();\n+    const authDir = path.join(home, \".codex\");\n+    const authFile = path.join(authDir, \"auth.json\");\n+    fs.writeFileSync(\n+      authFile,\n+      JSON.stringify(\n+        {\n+          GITHUBCOPILOT_API_KEY: apiKey,\n+        },\n+        null,\n+        2,\n+      ),\n+      \"utf-8\",\n+    );\n+  } catch {\n+    /* ignore */\n+  }\n+} else if (cli.flags.login) {\n+  if (provider.toLowerCase() === \"githubcopilot\") {\n+    apiKey = await fetchGithubCopilotApiKey();",
        "comment_created_at": "2025-06-15T21:16:50+00:00",
        "comment_author": "Copilot",
        "comment_body": "[nitpick] The login flow for GitHub Copilot is duplicated in multiple branches, making the CLI logic hard to follow. Consider consolidating into a single helper or clearer conditional structure.\n```suggestion\n  apiKey = await handleGithubCopilotLogin();\n} else if (cli.flags.login) {\n  if (provider.toLowerCase() === \"githubcopilot\") {\n    apiKey = await handleGithubCopilotLogin();\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2050831970",
    "pr_number": 160,
    "pr_file": "codex-cli/src/components/chat/terminal-chat.tsx",
    "created_at": "2025-04-18T16:18:05+00:00",
    "commented_code": "};\n   }, [loading, confirmationPrompt]);\n \n+  // Notify desktop with a preview when an assistant response arrives\n+  const prevLoadingRef = useRef<boolean>(false);\n+  useEffect(() => {",
    "repo_full_name": "openai/codex",
    "discussion_comments": [
      {
        "comment_id": "2050831970",
        "repo_full_name": "openai/codex",
        "pr_number": 160,
        "pr_file": "codex-cli/src/components/chat/terminal-chat.tsx",
        "discussion_id": "2050831970",
        "commented_code": "@@ -275,6 +278,49 @@ export default function TerminalChat({\n     };\n   }, [loading, confirmationPrompt]);\n \n+  // Notify desktop with a preview when an assistant response arrives\n+  const prevLoadingRef = useRef<boolean>(false);\n+  useEffect(() => {",
        "comment_created_at": "2025-04-18T16:18:05+00:00",
        "comment_author": "bolinfest",
        "comment_body": "First, we should carve out a general notification abstraction rather than duping this logic into the middle of a UI component.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2049797036",
    "pr_number": 289,
    "pr_file": "codex-cli/src/components/chat/terminal-chat.tsx",
    "created_at": "2025-04-18T00:43:43+00:00",
    "commented_code": "}\n }\n \n+/**\n+ * Generates a condensed summary of the conversation using the OpenAI API.\n+ * @param items The list of conversation items to summarize\n+ * @param model The model to use for generating the summary\n+ */\n+async function generateCompactSummary(",
    "repo_full_name": "openai/codex",
    "discussion_comments": [
      {
        "comment_id": "2049797036",
        "repo_full_name": "openai/codex",
        "pr_number": 289,
        "pr_file": "codex-cli/src/components/chat/terminal-chat.tsx",
        "discussion_id": "2049797036",
        "commented_code": "@@ -119,6 +119,64 @@ async function generateCommandExplanation(\n   }\n }\n \n+/**\n+ * Generates a condensed summary of the conversation using the OpenAI API.\n+ * @param items The list of conversation items to summarize\n+ * @param model The model to use for generating the summary\n+ */\n+async function generateCompactSummary(",
        "comment_created_at": "2025-04-18T00:43:43+00:00",
        "comment_author": "tibo-openai",
        "comment_body": "Could you move this to outside of terminal-chat as a standalone utility?",
        "pr_file_module": null
      }
    ]
  }
]