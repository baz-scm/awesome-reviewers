[
  {
    "discussion_id": "2050833770",
    "pr_number": 160,
    "pr_file": "codex-cli/src/components/chat/terminal-chat.tsx",
    "created_at": "2025-04-18T16:20:11+00:00",
    "commented_code": "};\n   }, [loading, confirmationPrompt]);\n \n+  // Notify desktop with a preview when an assistant response arrives\n+  const prevLoadingRef = useRef<boolean>(false);\n+  useEffect(() => {\n+    // Only notify when notifications are enabled\n+    if (!notify) {\n+      prevLoadingRef.current = loading;\n+      return;\n+    }\n+    if (\n+      prevLoadingRef.current &&\n+      !loading &&\n+      confirmationPrompt == null &&\n+      items.length > 0\n+    ) {\n+      if (process.platform === \"darwin\") {\n+        // find the last assistant message\n+        const assistantMessages = items.filter(\n+          (i) => i.type === \"message\" && i.role === \"assistant\",\n+        );\n+        const last = assistantMessages[assistantMessages.length - 1];\n+        if (last) {\n+          const text = last.content\n+            .map((c) => {\n+              if (c.type === \"output_text\") {\n+                return c.text;\n+              }\n+              return \"\";\n+            })\n+            .join(\"\")\n+            .trim();\n+          const preview = text.replace(/\n/g, \" \").slice(0, 100);\n+          const safePreview = preview.replace(/\"/g, '\\\\\"');\n+          const title = \"Codex CLI\";\n+          const cwd = PWD;\n+          exec(",
    "repo_full_name": "openai/codex",
    "discussion_comments": [
      {
        "comment_id": "2050833770",
        "repo_full_name": "openai/codex",
        "pr_number": 160,
        "pr_file": "codex-cli/src/components/chat/terminal-chat.tsx",
        "discussion_id": "2050833770",
        "commented_code": "@@ -275,6 +278,49 @@ export default function TerminalChat({\n     };\n   }, [loading, confirmationPrompt]);\n \n+  // Notify desktop with a preview when an assistant response arrives\n+  const prevLoadingRef = useRef<boolean>(false);\n+  useEffect(() => {\n+    // Only notify when notifications are enabled\n+    if (!notify) {\n+      prevLoadingRef.current = loading;\n+      return;\n+    }\n+    if (\n+      prevLoadingRef.current &&\n+      !loading &&\n+      confirmationPrompt == null &&\n+      items.length > 0\n+    ) {\n+      if (process.platform === \"darwin\") {\n+        // find the last assistant message\n+        const assistantMessages = items.filter(\n+          (i) => i.type === \"message\" && i.role === \"assistant\",\n+        );\n+        const last = assistantMessages[assistantMessages.length - 1];\n+        if (last) {\n+          const text = last.content\n+            .map((c) => {\n+              if (c.type === \"output_text\") {\n+                return c.text;\n+              }\n+              return \"\";\n+            })\n+            .join(\"\")\n+            .trim();\n+          const preview = text.replace(/\\n/g, \" \").slice(0, 100);\n+          const safePreview = preview.replace(/\"/g, '\\\\\"');\n+          const title = \"Codex CLI\";\n+          const cwd = PWD;\n+          exec(",
        "comment_created_at": "2025-04-18T16:20:11+00:00",
        "comment_author": "bolinfest",
        "comment_body": "Second, we should absolutely not be using `exec()` with a single string arg that appears to be subject to injection risks. At a minimum, we should be using `spawn()` with a list of strings.",
        "pr_file_module": null
      }
    ]
  }
]