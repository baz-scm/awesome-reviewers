[
  {
    "discussion_id": "1588800909",
    "pr_number": 1469,
    "pr_file": "Dockerfile",
    "created_at": "2024-05-03T06:46:23+00:00",
    "commented_code": "+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"",
    "repo_full_name": "comfyanonymous/ComfyUI",
    "discussion_comments": [
      {
        "comment_id": "1588800909",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1588800909",
        "commented_code": "@@ -0,0 +1,63 @@\n+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"",
        "comment_created_at": "2024-05-03T06:46:23+00:00",
        "comment_author": "polarathene",
        "comment_body": "```suggestion\r\nENV PIP_CACHE_DIR=/cache/pip\r\nENV VIRTUAL_ENV=/app/venv\r\nENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\r\nENV TRANSFORMERS_CACHE=/app/.cache/transformers\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1592139622",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1588800909",
        "commented_code": "@@ -0,0 +1,63 @@\n+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"",
        "comment_created_at": "2024-05-07T09:45:24+00:00",
        "comment_author": "polarathene",
        "comment_body": "Note a warning is emitted with the image at runtime, `TRANSFORMERS_CACHE` is deprecated, it should now be:\r\n\r\n```\r\nENV HF_HOME=/app/.cache/transformers\r\n```\r\n\r\nDon't forget to update the related `mkdir` that follows.",
        "pr_file_module": null
      },
      {
        "comment_id": "1592309438",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1588800909",
        "commented_code": "@@ -0,0 +1,63 @@\n+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"",
        "comment_created_at": "2024-05-07T11:19:33+00:00",
        "comment_author": "oxc",
        "comment_body": "I've already updated this in my master branch. It looks like have not pushed my latest changes to the `docker` branch, I guess I silently made my peace with the fact that this seems unlikely to get merged :)",
        "pr_file_module": null
      },
      {
        "comment_id": "1592367916",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1588800909",
        "commented_code": "@@ -0,0 +1,63 @@\n+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"",
        "comment_created_at": "2024-05-07T12:04:01+00:00",
        "comment_author": "polarathene",
        "comment_body": "> I guess I silently made my peace with the fact that this seems unlikely to get merged :)\r\n\r\nYeah that seems a bit unfortunate, I found it helpful as I'm not too familiar with python environments, especially when it comes to AI/ML projects in Docker with the CUDA/GPU related features to also keep in mind. Trying to run some projects in Docker or attempt to use their own community ones wasn't too great of an experience, often the projects wouldn't run/build so they had not been maintained well \ud83d\ude05 (_thus I'm trying to figure it out myself_)\r\n\r\nPerhaps a separate PR that just focuses on the community contributed `Dockerfile`? The GH Actions workflow may add additional friction unless the maintainers express interest in it, as that is it's own additional maintenance burden, but a community contributed/maintained `Dockerfile` in the official project would still be worthwhile IMO.\r\n\r\nFailing that, like `AUTOMATIC1111/stable-diffusion-webui` does with their GH wiki, just a link to third-party / community maintained repos helps when the maintainers aren't interested in the value of a `Dockerfile`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1598829661",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1588800909",
        "commented_code": "@@ -0,0 +1,63 @@\n+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"",
        "comment_created_at": "2024-05-13T17:41:05+00:00",
        "comment_author": "oxc",
        "comment_body": "Cache changes are pushed to the PR.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1592171234",
    "pr_number": 1469,
    "pr_file": "Dockerfile",
    "created_at": "2024-05-07T10:09:31+00:00",
    "commented_code": "+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"\n+\n+# create cache directory\n+RUN mkdir -p ${TRANSFORMERS_CACHE}\n+\n+# create virtual environment to manage packages\n+RUN python -m venv ${VIRTUAL_ENV}\n+\n+# run python from venv\n+ENV PATH=\"${VIRTUAL_ENV_CUSTOM}/bin:${VIRTUAL_ENV}/bin:${PATH}\"\n+\n+RUN --mount=type=cache,target=/cache/,uid=${USER_UID},gid=${USER_GID} \\\n+\tpip install torch torchvision torchaudio ${PYTORCH_INSTALL_ARGS}\n+\n+# copy requirements files first so packages can be cached separately\n+COPY --chown=${USER_UID}:${USER_GID} requirements.txt .\n+RUN --mount=type=cache,target=/cache/,uid=${USER_UID},gid=${USER_GID} \\\n+\tpip install -r requirements.txt\n+\n+COPY --chown=${USER_UID}:${USER_GID} . .\n+\n+# default environment variables\n+ENV COMFYUI_ADDRESS=0.0.0.0\n+ENV COMFYUI_PORT=8188",
    "repo_full_name": "comfyanonymous/ComfyUI",
    "discussion_comments": [
      {
        "comment_id": "1592171234",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1592171234",
        "commented_code": "@@ -0,0 +1,63 @@\n+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"\n+\n+# create cache directory\n+RUN mkdir -p ${TRANSFORMERS_CACHE}\n+\n+# create virtual environment to manage packages\n+RUN python -m venv ${VIRTUAL_ENV}\n+\n+# run python from venv\n+ENV PATH=\"${VIRTUAL_ENV_CUSTOM}/bin:${VIRTUAL_ENV}/bin:${PATH}\"\n+\n+RUN --mount=type=cache,target=/cache/,uid=${USER_UID},gid=${USER_GID} \\\n+\tpip install torch torchvision torchaudio ${PYTORCH_INSTALL_ARGS}\n+\n+# copy requirements files first so packages can be cached separately\n+COPY --chown=${USER_UID}:${USER_GID} requirements.txt .\n+RUN --mount=type=cache,target=/cache/,uid=${USER_UID},gid=${USER_GID} \\\n+\tpip install -r requirements.txt\n+\n+COPY --chown=${USER_UID}:${USER_GID} . .\n+\n+# default environment variables\n+ENV COMFYUI_ADDRESS=0.0.0.0\n+ENV COMFYUI_PORT=8188",
        "comment_created_at": "2024-05-07T10:09:31+00:00",
        "comment_author": "polarathene",
        "comment_body": "How likely are these to need changing? Are these ENV used for anything else beyond the final CMD in this image?\r\n\r\nIn most cases the docker container will receive connections from the network interface it's attached to, as `127.0.0.1` wouldn't be reachable outside of the container itself (_unless using host mode networking_). So the only benefit to adjust that is if there's a specific interface (visible to the container) that you want to listen on instead of all interfaces it's aware of?\r\n\r\nProvided you're not using host mode networking (_which doesn't work well in WSL on windows, nor macOS I think?_), you'd alternatively restrict interfaces on the docker host to bind published ports to (_such as `127.0.0.1` which would be suitable for keeping it only accessible locally_).\r\n\r\nSince you could use the approach with `CMD` to customize with `--listen` like mentioned on my review feedback for that, I don't think this ENV is needed. Same applies for `COMFYUI_PORT`, it's internal with container networking, so the user should only really care about the published port which can be whatever they choose, and that will map to the internal port which could just be `80` to better convey it's an HTTP-only port.\r\n\r\n**EDIT:** Newer versions of WSL2 / Docker Desktop have improved on the host network mode compatibility IIRC.",
        "pr_file_module": null
      },
      {
        "comment_id": "1906017342",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1592171234",
        "commented_code": "@@ -0,0 +1,63 @@\n+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"\n+\n+# create cache directory\n+RUN mkdir -p ${TRANSFORMERS_CACHE}\n+\n+# create virtual environment to manage packages\n+RUN python -m venv ${VIRTUAL_ENV}\n+\n+# run python from venv\n+ENV PATH=\"${VIRTUAL_ENV_CUSTOM}/bin:${VIRTUAL_ENV}/bin:${PATH}\"\n+\n+RUN --mount=type=cache,target=/cache/,uid=${USER_UID},gid=${USER_GID} \\\n+\tpip install torch torchvision torchaudio ${PYTORCH_INSTALL_ARGS}\n+\n+# copy requirements files first so packages can be cached separately\n+COPY --chown=${USER_UID}:${USER_GID} requirements.txt .\n+RUN --mount=type=cache,target=/cache/,uid=${USER_UID},gid=${USER_GID} \\\n+\tpip install -r requirements.txt\n+\n+COPY --chown=${USER_UID}:${USER_GID} . .\n+\n+# default environment variables\n+ENV COMFYUI_ADDRESS=0.0.0.0\n+ENV COMFYUI_PORT=8188",
        "comment_created_at": "2025-01-07T20:43:50+00:00",
        "comment_author": "codingjoe",
        "comment_body": "I would advise against changing an established port as part of this PR. It may spawn a longer discussion, that will hold back a Docker release.",
        "pr_file_module": null
      },
      {
        "comment_id": "1912095778",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1592171234",
        "commented_code": "@@ -0,0 +1,63 @@\n+# syntax=docker/dockerfile:1.4\n+\n+ARG BASE_IMAGE=\"python:3.11-slim-bookworm\"\n+\n+FROM ${BASE_IMAGE}\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=\"comfyui\"\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+RUN \\\n+\t--mount=target=/var/lib/apt/lists,type=cache,sharing=locked \\\n+\t--mount=target=/var/cache/apt,type=cache,sharing=locked \\\n+\tset -eux; \\\n+\t\tapt-get update; \\\n+\t\tapt-get install -y --no-install-recommends \\\n+\t\t\tgit \\\n+\t\t\tgit-lfs \\\n+ \t\t\trsync\n+\n+RUN set -eux; \\\n+\tgroupadd --gid ${USER_GID} ${USERNAME}; \\\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV PIP_CACHE_DIR=\"/cache/pip\"\n+ENV VIRTUAL_ENV=/app/venv\n+ENV VIRTUAL_ENV_CUSTOM=/app/custom_venv\n+ENV TRANSFORMERS_CACHE=\"/app/.cache/transformers\"\n+\n+# create cache directory\n+RUN mkdir -p ${TRANSFORMERS_CACHE}\n+\n+# create virtual environment to manage packages\n+RUN python -m venv ${VIRTUAL_ENV}\n+\n+# run python from venv\n+ENV PATH=\"${VIRTUAL_ENV_CUSTOM}/bin:${VIRTUAL_ENV}/bin:${PATH}\"\n+\n+RUN --mount=type=cache,target=/cache/,uid=${USER_UID},gid=${USER_GID} \\\n+\tpip install torch torchvision torchaudio ${PYTORCH_INSTALL_ARGS}\n+\n+# copy requirements files first so packages can be cached separately\n+COPY --chown=${USER_UID}:${USER_GID} requirements.txt .\n+RUN --mount=type=cache,target=/cache/,uid=${USER_UID},gid=${USER_GID} \\\n+\tpip install -r requirements.txt\n+\n+COPY --chown=${USER_UID}:${USER_GID} . .\n+\n+# default environment variables\n+ENV COMFYUI_ADDRESS=0.0.0.0\n+ENV COMFYUI_PORT=8188",
        "comment_created_at": "2025-01-11T17:00:52+00:00",
        "comment_author": "oxc",
        "comment_body": "The internal port does not really matter, so also I would rather stick with the default port that ComfyUI uses. I would still prefer to have this configurable via env, like you said, it does not hurt, but it might help some users that have specific requirements.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1906015561",
    "pr_number": 1469,
    "pr_file": "Dockerfile",
    "created_at": "2025-01-07T20:41:43+00:00",
    "commented_code": "+# syntax=docker/dockerfile:1\n+\n+ARG PYTHON_VERSION=3.11\n+\n+FROM python:${PYTHON_VERSION}-slim\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=comfyui\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+# Fail fast on errors or unset variables\n+SHELL [\"/bin/bash\", \"-eux\", \"-o\", \"pipefail\", \"-c\"]\n+\n+RUN <<EOF\n+\tgroupadd --gid ${USER_GID} ${USERNAME}\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+EOF\n+\n+RUN <<EOF\n+\tapt-get update\n+\tapt-get install -y --no-install-recommends \\\n+\t\tgit \\\n+\t\tgit-lfs \\\n+\t\trsync \\\n+\t\tfonts-recommended\n+EOF\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV XDG_CACHE_HOME=/cache\n+ENV PIP_CACHE_DIR=/cache/pip",
    "repo_full_name": "comfyanonymous/ComfyUI",
    "discussion_comments": [
      {
        "comment_id": "1906015561",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1906015561",
        "commented_code": "@@ -0,0 +1,72 @@\n+# syntax=docker/dockerfile:1\n+\n+ARG PYTHON_VERSION=3.11\n+\n+FROM python:${PYTHON_VERSION}-slim\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=comfyui\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+# Fail fast on errors or unset variables\n+SHELL [\"/bin/bash\", \"-eux\", \"-o\", \"pipefail\", \"-c\"]\n+\n+RUN <<EOF\n+\tgroupadd --gid ${USER_GID} ${USERNAME}\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+EOF\n+\n+RUN <<EOF\n+\tapt-get update\n+\tapt-get install -y --no-install-recommends \\\n+\t\tgit \\\n+\t\tgit-lfs \\\n+\t\trsync \\\n+\t\tfonts-recommended\n+EOF\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV XDG_CACHE_HOME=/cache\n+ENV PIP_CACHE_DIR=/cache/pip",
        "comment_created_at": "2025-01-07T20:41:43+00:00",
        "comment_author": "codingjoe",
        "comment_body": "`--no-cache-dir` you don't want the cache to bloat up your image.",
        "pr_file_module": null
      },
      {
        "comment_id": "1912096002",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1906015561",
        "commented_code": "@@ -0,0 +1,72 @@\n+# syntax=docker/dockerfile:1\n+\n+ARG PYTHON_VERSION=3.11\n+\n+FROM python:${PYTHON_VERSION}-slim\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=comfyui\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+# Fail fast on errors or unset variables\n+SHELL [\"/bin/bash\", \"-eux\", \"-o\", \"pipefail\", \"-c\"]\n+\n+RUN <<EOF\n+\tgroupadd --gid ${USER_GID} ${USERNAME}\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+EOF\n+\n+RUN <<EOF\n+\tapt-get update\n+\tapt-get install -y --no-install-recommends \\\n+\t\tgit \\\n+\t\tgit-lfs \\\n+\t\trsync \\\n+\t\tfonts-recommended\n+EOF\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV XDG_CACHE_HOME=/cache\n+ENV PIP_CACHE_DIR=/cache/pip",
        "comment_created_at": "2025-01-11T17:01:44+00:00",
        "comment_author": "oxc",
        "comment_body": "It doesn't, since the pip call is using a type=cache mount.",
        "pr_file_module": null
      },
      {
        "comment_id": "1912221548",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1906015561",
        "commented_code": "@@ -0,0 +1,72 @@\n+# syntax=docker/dockerfile:1\n+\n+ARG PYTHON_VERSION=3.11\n+\n+FROM python:${PYTHON_VERSION}-slim\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=comfyui\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+# Fail fast on errors or unset variables\n+SHELL [\"/bin/bash\", \"-eux\", \"-o\", \"pipefail\", \"-c\"]\n+\n+RUN <<EOF\n+\tgroupadd --gid ${USER_GID} ${USERNAME}\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+EOF\n+\n+RUN <<EOF\n+\tapt-get update\n+\tapt-get install -y --no-install-recommends \\\n+\t\tgit \\\n+\t\tgit-lfs \\\n+\t\trsync \\\n+\t\tfonts-recommended\n+EOF\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV XDG_CACHE_HOME=/cache\n+ENV PIP_CACHE_DIR=/cache/pip",
        "comment_created_at": "2025-01-11T20:35:35+00:00",
        "comment_author": "polarathene",
        "comment_body": "If the declared ENV are only intended to be configured for build-time only it should be `ARG` instead?",
        "pr_file_module": null
      },
      {
        "comment_id": "1912222675",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1906015561",
        "commented_code": "@@ -0,0 +1,72 @@\n+# syntax=docker/dockerfile:1\n+\n+ARG PYTHON_VERSION=3.11\n+\n+FROM python:${PYTHON_VERSION}-slim\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=comfyui\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+# Fail fast on errors or unset variables\n+SHELL [\"/bin/bash\", \"-eux\", \"-o\", \"pipefail\", \"-c\"]\n+\n+RUN <<EOF\n+\tgroupadd --gid ${USER_GID} ${USERNAME}\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+EOF\n+\n+RUN <<EOF\n+\tapt-get update\n+\tapt-get install -y --no-install-recommends \\\n+\t\tgit \\\n+\t\tgit-lfs \\\n+\t\trsync \\\n+\t\tfonts-recommended\n+EOF\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV XDG_CACHE_HOME=/cache\n+ENV PIP_CACHE_DIR=/cache/pip",
        "comment_created_at": "2025-01-11T20:37:32+00:00",
        "comment_author": "oxc",
        "comment_body": "No, because it also needs to be an ENV passed to the commands run in RUN",
        "pr_file_module": null
      },
      {
        "comment_id": "1912237815",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "Dockerfile",
        "discussion_id": "1906015561",
        "commented_code": "@@ -0,0 +1,72 @@\n+# syntax=docker/dockerfile:1\n+\n+ARG PYTHON_VERSION=3.11\n+\n+FROM python:${PYTHON_VERSION}-slim\n+\n+ARG PYTORCH_INSTALL_ARGS=\"\"\n+ARG EXTRA_ARGS=\"\"\n+ARG USERNAME=comfyui\n+ARG USER_UID=1000\n+ARG USER_GID=${USER_UID}\n+\n+# Fail fast on errors or unset variables\n+SHELL [\"/bin/bash\", \"-eux\", \"-o\", \"pipefail\", \"-c\"]\n+\n+RUN <<EOF\n+\tgroupadd --gid ${USER_GID} ${USERNAME}\n+\tuseradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}\n+EOF\n+\n+RUN <<EOF\n+\tapt-get update\n+\tapt-get install -y --no-install-recommends \\\n+\t\tgit \\\n+\t\tgit-lfs \\\n+\t\trsync \\\n+\t\tfonts-recommended\n+EOF\n+\n+# run instructions as user\n+USER ${USER_UID}:${USER_GID}\n+\n+WORKDIR /app\n+\n+ENV XDG_CACHE_HOME=/cache\n+ENV PIP_CACHE_DIR=/cache/pip",
        "comment_created_at": "2025-01-11T21:05:59+00:00",
        "comment_author": "polarathene",
        "comment_body": "`ARG KEY=VALUE` is treated like `RUN KEY=VALUE command`. It's effectively a build-time ENV.",
        "pr_file_module": null
      }
    ]
  }
]