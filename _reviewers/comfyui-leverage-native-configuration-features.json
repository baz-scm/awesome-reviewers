[
  {
    "discussion_id": "1967020287",
    "pr_number": 1469,
    "pr_file": "docker-compose.yaml",
    "created_at": "2025-02-24T04:06:21+00:00",
    "commented_code": "+services:\n+  comfyui:\n+    user: \"1000:1000\"\n+    build: .\n+    deploy:\n+      resources:\n+        reservations:\n+          devices:\n+            - driver: nvidia\n+              count: all\n+              capabilities: [gpu]\n+    ports:\n+      - \"8188:8188\"\n+    volumes:\n+      - \"./models:/app/models\"\n+      - \"./input:/app/input\"\n+      - \"./temp:/app/output/temp\"\n+      - \"./output:/app/output\"\n+      - \"./user:/app/user\"\n+      - \"./custom_venv:/app/custom_venv\"\n+      - \"./custom_nodes:/app/custom_nodes\"",
    "repo_full_name": "comfyanonymous/ComfyUI",
    "discussion_comments": [
      {
        "comment_id": "1967020287",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "docker-compose.yaml",
        "discussion_id": "1967020287",
        "commented_code": "@@ -0,0 +1,21 @@\n+services:\n+  comfyui:\n+    user: \"1000:1000\"\n+    build: .\n+    deploy:\n+      resources:\n+        reservations:\n+          devices:\n+            - driver: nvidia\n+              count: all\n+              capabilities: [gpu]\n+    ports:\n+      - \"8188:8188\"\n+    volumes:\n+      - \"./models:/app/models\"\n+      - \"./input:/app/input\"\n+      - \"./temp:/app/output/temp\"\n+      - \"./output:/app/output\"\n+      - \"./user:/app/user\"\n+      - \"./custom_venv:/app/custom_venv\"\n+      - \"./custom_nodes:/app/custom_nodes\"",
        "comment_created_at": "2025-02-24T04:06:21+00:00",
        "comment_author": "polarathene",
        "comment_body": "It'd be ideal to minimize these volume mounts, one for the ComfyUI state itself, and probably best to keep another separate for the custom venv.\r\n\r\n---\r\n\r\nWe can use ComfyUI's own support for these various locations, but I don't think `base_path` + `is_default` is sufficient alone? (_ComfyUI Manager has some [support of it's own](https://github.com/ltdrdata/ComfyUI-Manager/tree/main#extra_model_pathsyaml-configuration)_)\r\n\r\n```yaml\r\ncomfyui:\r\n    base_path: /home/comfyui/data\r\n    is_default: true\r\n    input: input/\r\n    user: user/\r\n    checkpoints: models/checkpoints/\r\n    clip: models/clip/\r\n    clip_vision: models/clip_vision/\r\n    configs: models/configs/\r\n    controlnet: models/controlnet/\r\n    diffusion_models: |\r\n                 models/diffusion_models\r\n                 models/unet\r\n    embeddings: models/embeddings/\r\n    loras: models/loras/\r\n    upscale_models: models/upscale_models/\r\n    vae: models/vae/\r\n```\r\n\r\nEven with that, ComfyUI refuses to start if it can't create it's own default directories like `/user` (crash) or `/input` (error). I was curious about running the app install with it left as `root` owned, despite the switch to a non-root user. Technically a bug on ComfyUI's end there I think, when new default paths are configured.\r\n\r\nResolved by creating those missing directories in advance.\r\n\r\n[`is_default: true` support](https://github.com/comfyanonymous/ComfyUI/pull/4979) arrived with the [`0.2.3` release](https://github.com/comfyanonymous/ComfyUI/releases/tag/v0.2.3) (Oct 2024).\r\n\r\n---\r\n\r\n**UPDATE:** The CLI arg [`--base-directory`](https://github.com/comfyanonymous/ComfyUI/blob/0c32f822987ef2a3eb8f87f84b6b6d1f0b2f3832/comfy/cli_args.py#L46) (_is this really not documented anywhere else?_) can be used instead of this verbose YAML config.\r\n- It works better than the `base` setting above since all paths will actually default to that location (_the `models/` subpath folders retain that prefix due to [`folder_paths.py`](https://github.com/comfyanonymous/ComfyUI/blob/0c32f822987ef2a3eb8f87f84b6b6d1f0b2f3832/folder_paths.py#L22-L47).\r\n- `--base-directory` is [fairly new](https://github.com/comfyanonymous/ComfyUI/pull/6600) (_[`v0.3.13`](https://github.com/comfyanonymous/ComfyUI/releases/tag/v0.3.13), released Jan 30 2025_).\r\n\r\n**NOTE:** ComfyUI Manager 3.0 will [leverage the ComfyUI `user/` directory](https://github.com/ltdrdata/ComfyUI-Manager/tree/main#paths) for config and generated files at `<USER_DIRECTORY>/default/ComfyUI-Manager/`.\r\n\r\nThere's also a [snapshot feature](https://github.com/ltdrdata/ComfyUI-Manager/tree/main#snapshot-manager), but it states that it's reliant on `git` for full support.\r\n\r\nThere's some overlap here with [`comfy CLI`](https://github.com/Comfy-Org/comfy-cli#managing-custom-nodes) (_which presumably an official wrapper to ComfyUI Manager and maybe `cm-cli`?_) \ud83e\udd14 ",
        "pr_file_module": null
      },
      {
        "comment_id": "1968659280",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "docker-compose.yaml",
        "discussion_id": "1967020287",
        "commented_code": "@@ -0,0 +1,21 @@\n+services:\n+  comfyui:\n+    user: \"1000:1000\"\n+    build: .\n+    deploy:\n+      resources:\n+        reservations:\n+          devices:\n+            - driver: nvidia\n+              count: all\n+              capabilities: [gpu]\n+    ports:\n+      - \"8188:8188\"\n+    volumes:\n+      - \"./models:/app/models\"\n+      - \"./input:/app/input\"\n+      - \"./temp:/app/output/temp\"\n+      - \"./output:/app/output\"\n+      - \"./user:/app/user\"\n+      - \"./custom_venv:/app/custom_venv\"\n+      - \"./custom_nodes:/app/custom_nodes\"",
        "comment_created_at": "2025-02-25T01:15:29+00:00",
        "comment_author": "polarathene",
        "comment_body": "Another concern with the custom venv syncing is when the image upgrades to a new version of Python, it'll sync over the new site packages folder with PyTorch deps, but you would not have the equivalent for anything third-party, so caution would be needed when upgrading?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1968669591",
    "pr_number": 1469,
    "pr_file": "docker-compose.yaml",
    "created_at": "2025-02-25T01:28:10+00:00",
    "commented_code": "+services:\n+  comfyui:\n+    user: \"1000:1000\"\n+    build: .",
    "repo_full_name": "comfyanonymous/ComfyUI",
    "discussion_comments": [
      {
        "comment_id": "1968669591",
        "repo_full_name": "comfyanonymous/ComfyUI",
        "pr_number": 1469,
        "pr_file": "docker-compose.yaml",
        "discussion_id": "1968669591",
        "commented_code": "@@ -0,0 +1,21 @@\n+services:\n+  comfyui:\n+    user: \"1000:1000\"\n+    build: .",
        "comment_created_at": "2025-02-25T01:28:10+00:00",
        "comment_author": "polarathene",
        "comment_body": "`user` shouldn't be necessary. It doesn't make much sense with your current iteration vs just using `USER` in the `Dockerfile` to set that since you're tying it to build-time anyway..\r\n\r\n`build` is fine, but you could add `image` to refer to the nvidia image that would be published. That'll be grabbed instead of the the `build` then. You may want to add the related build-arg if you think it's worth including `build` in the `compose.yaml`, but there's not much advantage to that if the user doesn't intend to build regularly vs just running the equivalent CLI command.\r\n\r\n**NOTE:** Mixing `image` + `build` would have any build triggered replace the `image` locally which may be a subtle source of bug reports (_similar to relying on latest tags that become stale over time without an explicit pull and are prone to breaking changes_).\r\n\r\n**FWIW:** Without `image`, Compose will build the image and tag it based on the project + service name (_so `ComfyUI/comfyui:latest`_). Generally though I think a user interested in this compose file would prefer the registry image over a local build.",
        "pr_file_module": null
      }
    ]
  }
]