[
  {
    "discussion_id": "159964233",
    "pr_number": 5441,
    "pr_file": "tests/acceptance/cli_test.py",
    "created_at": "2018-01-05T19:47:53+00:00",
    "commented_code": "assert 'Removing network v2full_default' in result.stderr\n         assert 'Removing network v2full_front' in result.stderr\n \n+    def test_down_url(self):\n+        self.base_dir = '.'\n+        url = 'https://raw.githubusercontent.com/docker/compose/' \\\n+              '771bf5f7ea059f1efede26bd9b164e05467d289e/tests/fixtures/' \\\n+              'simple-composefile/docker-compose.yml'",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "159964233",
        "repo_full_name": "docker/compose",
        "pr_number": 5441,
        "pr_file": "tests/acceptance/cli_test.py",
        "discussion_id": "159964233",
        "commented_code": "@@ -782,6 +782,19 @@ def test_down(self):\n         assert 'Removing network v2full_default' in result.stderr\n         assert 'Removing network v2full_front' in result.stderr\n \n+    def test_down_url(self):\n+        self.base_dir = '.'\n+        url = 'https://raw.githubusercontent.com/docker/compose/' \\\n+              '771bf5f7ea059f1efede26bd9b164e05467d289e/tests/fixtures/' \\\n+              'simple-composefile/docker-compose.yml'",
        "comment_created_at": "2018-01-05T19:47:53+00:00",
        "comment_author": "johnharris85",
        "comment_body": "Going out to a real url may cause this test to be flaky. I think the Engine tests this same functionality by spinning up a local static file server as part of the tests.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "95273081",
    "pr_number": 4307,
    "pr_file": "tests/unit/cli_test.py",
    "created_at": "2017-01-09T23:43:24+00:00",
    "commented_code": "_, _, call_kwargs = mock_run_operation.mock_calls[0]\n         assert call_kwargs['logs'] is False\n \n-    def test_run_service_with_restart_always(self):\n+    @pytest.mark.xfail(IS_WINDOWS_PLATFORM, reason=\"requires dockerpty\")\n+    @mock.patch('compose.cli.main.RunOperation', autospec=True)\n+    @mock.patch('compose.cli.main.PseudoTerminal', autospec=True)\n+    def test_run_service_with_restart_always(self, mock_pseudo_terminal, mock_run_operation):",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "95273081",
        "repo_full_name": "docker/compose",
        "pr_number": 4307,
        "pr_file": "tests/unit/cli_test.py",
        "discussion_id": "95273081",
        "commented_code": "@@ -127,7 +127,10 @@ def test_run_interactive_passes_logs_false(self, mock_pseudo_terminal, mock_run_\n         _, _, call_kwargs = mock_run_operation.mock_calls[0]\n         assert call_kwargs['logs'] is False\n \n-    def test_run_service_with_restart_always(self):\n+    @pytest.mark.xfail(IS_WINDOWS_PLATFORM, reason=\"requires dockerpty\")\n+    @mock.patch('compose.cli.main.RunOperation', autospec=True)\n+    @mock.patch('compose.cli.main.PseudoTerminal', autospec=True)\n+    def test_run_service_with_restart_always(self, mock_pseudo_terminal, mock_run_operation):",
        "comment_created_at": "2017-01-09T23:43:24+00:00",
        "comment_author": "shin-",
        "comment_body": "Why is this being modified?",
        "pr_file_module": null
      },
      {
        "comment_id": "95273849",
        "repo_full_name": "docker/compose",
        "pr_number": 4307,
        "pr_file": "tests/unit/cli_test.py",
        "discussion_id": "95273081",
        "commented_code": "@@ -127,7 +127,10 @@ def test_run_interactive_passes_logs_false(self, mock_pseudo_terminal, mock_run_\n         _, _, call_kwargs = mock_run_operation.mock_calls[0]\n         assert call_kwargs['logs'] is False\n \n-    def test_run_service_with_restart_always(self):\n+    @pytest.mark.xfail(IS_WINDOWS_PLATFORM, reason=\"requires dockerpty\")\n+    @mock.patch('compose.cli.main.RunOperation', autospec=True)\n+    @mock.patch('compose.cli.main.PseudoTerminal', autospec=True)\n+    def test_run_service_with_restart_always(self, mock_pseudo_terminal, mock_run_operation):",
        "comment_created_at": "2017-01-09T23:49:23+00:00",
        "comment_author": "clintam",
        "comment_body": "That existing test was calling with the now-invalid combo of -d and --rm. This path took advantage of the early exit from `run_one_off_container` and so did not need to worry about mocking the TTY behaviors.\r\n\r\nThis changes the test to :\r\n* use -d: false (since the --rm is key to the behaviors under test)\r\n* uses mocked versions of the Run/Ptty (as that path is now exercised)",
        "pr_file_module": null
      }
    ]
  }
]