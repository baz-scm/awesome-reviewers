[
  {
    "discussion_id": "274471485",
    "pr_number": 6641,
    "pr_file": "Dockerfile.alpine",
    "created_at": "2019-04-11T15:04:46+00:00",
    "commented_code": "+FROM python:3.7.3-alpine3.9 AS build\n+\n+ARG DOCKER_COMPOSE_GITSHA=unknown\n+ENV DOCKER_COMPOSE_GITSHA=$DOCKER_COMPOSE_GITSHA\n+\n+ENV BUILD_BOOTLOADER=1\n+\n+RUN apk add --no-cache \\\n+    bash \\\n+    build-base \\\n+    ca-certificates \\\n+    curl \\\n+    gcc \\\n+    git \\\n+    libc-dev \\\n+    libffi-dev \\\n+    libgcc \\\n+    make \\\n+    musl-dev \\\n+    openssl \\\n+    openssl-dev \\\n+    python2 \\\n+    python2-dev \\\n+    zlib-dev && \\\n+    pip install virtualenv==16.2.0 tox==2.1.1",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "274471485",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "Dockerfile.alpine",
        "discussion_id": "274471485",
        "commented_code": "@@ -0,0 +1,42 @@\n+FROM python:3.7.3-alpine3.9 AS build\n+\n+ARG DOCKER_COMPOSE_GITSHA=unknown\n+ENV DOCKER_COMPOSE_GITSHA=$DOCKER_COMPOSE_GITSHA\n+\n+ENV BUILD_BOOTLOADER=1\n+\n+RUN apk add --no-cache \\\n+    bash \\\n+    build-base \\\n+    ca-certificates \\\n+    curl \\\n+    gcc \\\n+    git \\\n+    libc-dev \\\n+    libffi-dev \\\n+    libgcc \\\n+    make \\\n+    musl-dev \\\n+    openssl \\\n+    openssl-dev \\\n+    python2 \\\n+    python2-dev \\\n+    zlib-dev && \\\n+    pip install virtualenv==16.2.0 tox==2.1.1",
        "comment_created_at": "2019-04-11T15:04:46+00:00",
        "comment_author": "thaJeztah",
        "comment_body": "I'd keep the `pip install` separate; it likely won't overwrite files that were installed by `apk add`, so doing it in a separate step will add a new layer, but won't make the image bigger.\r\n\r\nAlso worth to keep the same convention as for `apk add`, and split the packages that will be installed to one-per-line, sorted alphabetically (it makes the Dockerfile longer, but can help making it more maintainable)\r\n\r\n```suggestion\r\nRUN pip install \\\r\n    tox==2.1.1 \\\r\n    virtualenv==16.2.0\r\n```\r\n\r\nIf these packages are expected to be updated individually, could even be two `RUN` lines",
        "pr_file_module": null
      },
      {
        "comment_id": "274913152",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "Dockerfile.alpine",
        "discussion_id": "274471485",
        "commented_code": "@@ -0,0 +1,42 @@\n+FROM python:3.7.3-alpine3.9 AS build\n+\n+ARG DOCKER_COMPOSE_GITSHA=unknown\n+ENV DOCKER_COMPOSE_GITSHA=$DOCKER_COMPOSE_GITSHA\n+\n+ENV BUILD_BOOTLOADER=1\n+\n+RUN apk add --no-cache \\\n+    bash \\\n+    build-base \\\n+    ca-certificates \\\n+    curl \\\n+    gcc \\\n+    git \\\n+    libc-dev \\\n+    libffi-dev \\\n+    libgcc \\\n+    make \\\n+    musl-dev \\\n+    openssl \\\n+    openssl-dev \\\n+    python2 \\\n+    python2-dev \\\n+    zlib-dev && \\\n+    pip install virtualenv==16.2.0 tox==2.1.1",
        "comment_created_at": "2019-04-12T13:48:12+00:00",
        "comment_author": "ulyssessouza",
        "comment_body": "Thanks for that one!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "274766653",
    "pr_number": 6641,
    "pr_file": "script/build/linux-entrypoint",
    "created_at": "2019-04-12T05:49:15+00:00",
    "commented_code": "set -ex\n \n-TARGET=dist/docker-compose-$(uname -s)-$(uname -m)\n-VENV=/code/.tox/py37\n+CODE_PATH=/code\n+VENV=${CODE_PATH}/.tox/py37\n \n-mkdir -p `pwd`/dist\n-chmod 777 `pwd`/dist\n+cd ${CODE_PATH}\n+mkdir -p dist\n+chmod 777 dist\n \n-$VENV/bin/pip install -q -r requirements-build.txt\n+${VENV}/bin/pip3 install -q -r requirements-build.txt",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "274766653",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "script/build/linux-entrypoint",
        "discussion_id": "274766653",
        "commented_code": "@@ -2,14 +2,35 @@\n \n set -ex\n \n-TARGET=dist/docker-compose-$(uname -s)-$(uname -m)\n-VENV=/code/.tox/py37\n+CODE_PATH=/code\n+VENV=${CODE_PATH}/.tox/py37\n \n-mkdir -p `pwd`/dist\n-chmod 777 `pwd`/dist\n+cd ${CODE_PATH}\n+mkdir -p dist\n+chmod 777 dist\n \n-$VENV/bin/pip install -q -r requirements-build.txt\n+${VENV}/bin/pip3 install -q -r requirements-build.txt",
        "comment_created_at": "2019-04-12T05:49:15+00:00",
        "comment_author": "joakimr-axis",
        "comment_body": "There is no need to add these extra {} here. It just makes the code more cluttered and leads the code reader into thinking there is something weird going on that needs to be handled.  Had the variable name been e.g. V-ENV, you would have needed to state ${V-ENV}, but for a perfectly simple name like VENV, keep things simple.",
        "pr_file_module": null
      },
      {
        "comment_id": "274918137",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "script/build/linux-entrypoint",
        "discussion_id": "274766653",
        "commented_code": "@@ -2,14 +2,35 @@\n \n set -ex\n \n-TARGET=dist/docker-compose-$(uname -s)-$(uname -m)\n-VENV=/code/.tox/py37\n+CODE_PATH=/code\n+VENV=${CODE_PATH}/.tox/py37\n \n-mkdir -p `pwd`/dist\n-chmod 777 `pwd`/dist\n+cd ${CODE_PATH}\n+mkdir -p dist\n+chmod 777 dist\n \n-$VENV/bin/pip install -q -r requirements-build.txt\n+${VENV}/bin/pip3 install -q -r requirements-build.txt",
        "comment_created_at": "2019-04-12T13:59:42+00:00",
        "comment_author": "ulyssessouza",
        "comment_body": "IMO the use of {} places delimiters on when the variable name ends.\r\nAs you just said, there are cases where it's necessary, so to make the code style consistent, I prefer using it. Even my IDE asks for it. And by the end of the day that's a question of taste.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "274767467",
    "pr_number": 6641,
    "pr_file": "script/test/default",
    "created_at": "2019-04-12T05:54:14+00:00",
    "commented_code": "set -ex\n \n-TAG=\"docker-compose:$(git rev-parse --short HEAD)\"\n+TAG=\"docker-compose:alpine-$(git rev-parse --short HEAD)\"\n \n-# By default use the Dockerfile, but can be overridden to use an alternative file\n+# By default use the Dockerfile.alpine, but can be overridden to use an alternative file\n # e.g DOCKERFILE=Dockerfile.armhf script/test/default\n-DOCKERFILE=\"${DOCKERFILE:-Dockerfile}\"\n+DOCKERFILE=\"${DOCKERFILE:-Dockerfile.alpine}\"\n+DOCKER_BUILD_TARGET=\"${DOCKER_BUILD_TARGET:-build}\"\n \n rm -rf coverage-html\n # Create the host directory so it's owned by $USER\n mkdir -p coverage-html\n \n-docker build -f ${DOCKERFILE} -t \"$TAG\" .\n+docker build -f ${DOCKERFILE} -t \"${TAG}\" --target \"${DOCKER_BUILD_TARGET}\" .",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "274767467",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "script/test/default",
        "discussion_id": "274767467",
        "commented_code": "@@ -3,17 +3,18 @@\n \n set -ex\n \n-TAG=\"docker-compose:$(git rev-parse --short HEAD)\"\n+TAG=\"docker-compose:alpine-$(git rev-parse --short HEAD)\"\n \n-# By default use the Dockerfile, but can be overridden to use an alternative file\n+# By default use the Dockerfile.alpine, but can be overridden to use an alternative file\n # e.g DOCKERFILE=Dockerfile.armhf script/test/default\n-DOCKERFILE=\"${DOCKERFILE:-Dockerfile}\"\n+DOCKERFILE=\"${DOCKERFILE:-Dockerfile.alpine}\"\n+DOCKER_BUILD_TARGET=\"${DOCKER_BUILD_TARGET:-build}\"\n \n rm -rf coverage-html\n # Create the host directory so it's owned by $USER\n mkdir -p coverage-html\n \n-docker build -f ${DOCKERFILE} -t \"$TAG\" .\n+docker build -f ${DOCKERFILE} -t \"${TAG}\" --target \"${DOCKER_BUILD_TARGET}\" .",
        "comment_created_at": "2019-04-12T05:54:14+00:00",
        "comment_author": "joakimr-axis",
        "comment_body": "It would be cleaner to use\r\n\r\ndocker build -f $DOCKERFILE -t \"$TAG\" --target \"$DOCKER_BUILD_TARGET\"\r\n\r\nhere. Even though I cannot explicitly find that space is forbidden in docker tags (https://docs.docker.com/engine/reference/commandline/tag/), is it really allowed? Otherwise, using $TAG instead of \"$TAG\" would be preferred.",
        "pr_file_module": null
      },
      {
        "comment_id": "274919467",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "script/test/default",
        "discussion_id": "274767467",
        "commented_code": "@@ -3,17 +3,18 @@\n \n set -ex\n \n-TAG=\"docker-compose:$(git rev-parse --short HEAD)\"\n+TAG=\"docker-compose:alpine-$(git rev-parse --short HEAD)\"\n \n-# By default use the Dockerfile, but can be overridden to use an alternative file\n+# By default use the Dockerfile.alpine, but can be overridden to use an alternative file\n # e.g DOCKERFILE=Dockerfile.armhf script/test/default\n-DOCKERFILE=\"${DOCKERFILE:-Dockerfile}\"\n+DOCKERFILE=\"${DOCKERFILE:-Dockerfile.alpine}\"\n+DOCKER_BUILD_TARGET=\"${DOCKER_BUILD_TARGET:-build}\"\n \n rm -rf coverage-html\n # Create the host directory so it's owned by $USER\n mkdir -p coverage-html\n \n-docker build -f ${DOCKERFILE} -t \"$TAG\" .\n+docker build -f ${DOCKERFILE} -t \"${TAG}\" --target \"${DOCKER_BUILD_TARGET}\" .",
        "comment_created_at": "2019-04-12T14:02:56+00:00",
        "comment_author": "ulyssessouza",
        "comment_body": "Here I just use the double quotes because the line before was using it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "275381047",
    "pr_number": 6641,
    "pr_file": "script/test/default",
    "created_at": "2019-04-15T14:14:35+00:00",
    "commented_code": "set -ex\n \n-TAG=\"docker-compose:$(git rev-parse --short HEAD)\"\n+TAG=\"docker-compose:alpine-$(git rev-parse --short HEAD)\"\n \n-# By default use the Dockerfile, but can be overridden to use an alternative file\n+# By default use the Dockerfile.alpine, but can be overridden to use an alternative file\n # e.g DOCKERFILE=Dockerfile.armhf script/test/default\n-DOCKERFILE=\"${DOCKERFILE:-Dockerfile}\"\n+DOCKERFILE=\"${DOCKERFILE:-Dockerfile.alpine}\"\n+DOCKER_BUILD_TARGET=\"${DOCKER_BUILD_TARGET:-build}\"\n \n rm -rf coverage-html\n # Create the host directory so it's owned by $USER\n mkdir -p coverage-html\n \n-docker build -f ${DOCKERFILE} -t \"$TAG\" .\n+docker build -f ${DOCKERFILE} -t \"${TAG}\" --target \"${DOCKER_BUILD_TARGET}\" .",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "275381047",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "script/test/default",
        "discussion_id": "275381047",
        "commented_code": "@@ -3,17 +3,18 @@\n \n set -ex\n \n-TAG=\"docker-compose:$(git rev-parse --short HEAD)\"\n+TAG=\"docker-compose:alpine-$(git rev-parse --short HEAD)\"\n \n-# By default use the Dockerfile, but can be overridden to use an alternative file\n+# By default use the Dockerfile.alpine, but can be overridden to use an alternative file\n # e.g DOCKERFILE=Dockerfile.armhf script/test/default\n-DOCKERFILE=\"${DOCKERFILE:-Dockerfile}\"\n+DOCKERFILE=\"${DOCKERFILE:-Dockerfile.alpine}\"\n+DOCKER_BUILD_TARGET=\"${DOCKER_BUILD_TARGET:-build}\"\n \n rm -rf coverage-html\n # Create the host directory so it's owned by $USER\n mkdir -p coverage-html\n \n-docker build -f ${DOCKERFILE} -t \"$TAG\" .\n+docker build -f ${DOCKERFILE} -t \"${TAG}\" --target \"${DOCKER_BUILD_TARGET}\" .",
        "comment_created_at": "2019-04-15T14:14:35+00:00",
        "comment_author": "thaJeztah",
        "comment_body": "`-f` specifies a path to the Docekrfile, so good practice to put quotes around it (even though that will likely not be hit here\r\n\r\n```suggestion\r\ndocker build -f \"${DOCKERFILE}\" -t \"${TAG}\" --target \"${DOCKER_BUILD_TARGET}\" .\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "275431681",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "script/test/default",
        "discussion_id": "275381047",
        "commented_code": "@@ -3,17 +3,18 @@\n \n set -ex\n \n-TAG=\"docker-compose:$(git rev-parse --short HEAD)\"\n+TAG=\"docker-compose:alpine-$(git rev-parse --short HEAD)\"\n \n-# By default use the Dockerfile, but can be overridden to use an alternative file\n+# By default use the Dockerfile.alpine, but can be overridden to use an alternative file\n # e.g DOCKERFILE=Dockerfile.armhf script/test/default\n-DOCKERFILE=\"${DOCKERFILE:-Dockerfile}\"\n+DOCKERFILE=\"${DOCKERFILE:-Dockerfile.alpine}\"\n+DOCKER_BUILD_TARGET=\"${DOCKER_BUILD_TARGET:-build}\"\n \n rm -rf coverage-html\n # Create the host directory so it's owned by $USER\n mkdir -p coverage-html\n \n-docker build -f ${DOCKERFILE} -t \"$TAG\" .\n+docker build -f ${DOCKERFILE} -t \"${TAG}\" --target \"${DOCKER_BUILD_TARGET}\" .",
        "comment_created_at": "2019-04-15T15:58:32+00:00",
        "comment_author": "ulyssessouza",
        "comment_body": "Done",
        "pr_file_module": null
      }
    ]
  }
]