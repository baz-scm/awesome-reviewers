[
  {
    "discussion_id": "336882481",
    "pr_number": 6973,
    "pr_file": "compose/cli/main.py",
    "created_at": "2019-10-21T08:05:33+00:00",
    "commented_code": "\"To deploy your application across the swarm, \"\n             \"use `docker stack deploy`.\n\"\n         )\n+\n+\n+def set_no_color_if_clicolor(no_color_flag):\n+    return no_color_flag or ('CLICOLOR' in os.environ and os.environ['CLICOLOR'] == \"0\")",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "336882481",
        "repo_full_name": "docker/compose",
        "pr_number": 6973,
        "pr_file": "compose/cli/main.py",
        "discussion_id": "336882481",
        "commented_code": "@@ -1602,3 +1604,7 @@ def warn_for_swarm_mode(client):\n             \"To deploy your application across the swarm, \"\n             \"use `docker stack deploy`.\\n\"\n         )\n+\n+\n+def set_no_color_if_clicolor(no_color_flag):\n+    return no_color_flag or ('CLICOLOR' in os.environ and os.environ['CLICOLOR'] == \"0\")",
        "comment_created_at": "2019-10-21T08:05:33+00:00",
        "comment_author": "rumpl",
        "comment_body": "Use \u2018os.environ.get()\u2019",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "159746821",
    "pr_number": 4992,
    "pr_file": "compose/cli/main.py",
    "created_at": "2018-01-04T20:23:44+00:00",
    "commented_code": "-t, --timeout TIMEOUT   Specify a shutdown timeout in seconds.\n                                     (default: 10)\n         \"\"\"\n+        environment = Environment.from_env_file(self.project_dir)\n+        ignore_orphans = environment.get_boolean('COMPOSE_IGNORE_ORPHANS')\n+\n+        if ignore_orphans and options['--remove-orphans']:\n+            log.info(\"COMPOSE_IGNORE_ORPHANS is set, --remove-orphans flag is being ignored.\")",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "159746821",
        "repo_full_name": "docker/compose",
        "pr_number": 4992,
        "pr_file": "compose/cli/main.py",
        "discussion_id": "159746821",
        "commented_code": "@@ -377,9 +377,20 @@ def down(self, options):\n             -t, --timeout TIMEOUT   Specify a shutdown timeout in seconds.\n                                     (default: 10)\n         \"\"\"\n+        environment = Environment.from_env_file(self.project_dir)\n+        ignore_orphans = environment.get_boolean('COMPOSE_IGNORE_ORPHANS')\n+\n+        if ignore_orphans and options['--remove-orphans']:\n+            log.info(\"COMPOSE_IGNORE_ORPHANS is set, --remove-orphans flag is being ignored.\")",
        "comment_created_at": "2018-01-04T20:23:44+00:00",
        "comment_author": "shin-",
        "comment_body": "Maybe `log.warn`? You could even argue for erroring out here, since the two options are conceptually incompatible.",
        "pr_file_module": null
      },
      {
        "comment_id": "159753712",
        "repo_full_name": "docker/compose",
        "pr_number": 4992,
        "pr_file": "compose/cli/main.py",
        "discussion_id": "159746821",
        "commented_code": "@@ -377,9 +377,20 @@ def down(self, options):\n             -t, --timeout TIMEOUT   Specify a shutdown timeout in seconds.\n                                     (default: 10)\n         \"\"\"\n+        environment = Environment.from_env_file(self.project_dir)\n+        ignore_orphans = environment.get_boolean('COMPOSE_IGNORE_ORPHANS')\n+\n+        if ignore_orphans and options['--remove-orphans']:\n+            log.info(\"COMPOSE_IGNORE_ORPHANS is set, --remove-orphans flag is being ignored.\")",
        "comment_created_at": "2018-01-04T20:58:38+00:00",
        "comment_author": "johnharris85",
        "comment_body": "True, I guess accidentally specifying both here could cause some unexpected behavior if it 'fails' silently. Will change it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "364732365",
    "pr_number": 7027,
    "pr_file": "compose/cli/command.py",
    "created_at": "2020-01-09T13:18:07+00:00",
    "commented_code": "return normalize_name(project)\n \n     return 'default'\n+\n+\n+def compatibility_from_options(working_dir, options=None, environment=None):\n+    \"\"\"Get compose v3 compatibility options from environment then from options.\"\"\"\n+\n+    if 'COMPOSE_COMPATIBILITY' in environment:\n+        return environment.get_boolean('COMPOSE_COMPATIBILITY')",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "364732365",
        "repo_full_name": "docker/compose",
        "pr_number": 7027,
        "pr_file": "compose/cli/command.py",
        "discussion_id": "364732365",
        "commented_code": "@@ -188,3 +188,12 @@ def normalize_name(name):\n         return normalize_name(project)\n \n     return 'default'\n+\n+\n+def compatibility_from_options(working_dir, options=None, environment=None):\n+    \"\"\"Get compose v3 compatibility options from environment then from options.\"\"\"\n+\n+    if 'COMPOSE_COMPATIBILITY' in environment:\n+        return environment.get_boolean('COMPOSE_COMPATIBILITY')",
        "comment_created_at": "2020-01-09T13:18:07+00:00",
        "comment_author": "ulyssessouza",
        "comment_body": "In this case the environment takes the precedence that should be the opposite.\r\nWhat if environment variable is set to `COMPOSE_COMPATIBILITY=no` and command line uses `--compatibility`?\r\n\r\nCould you please, add a test using both?",
        "pr_file_module": null
      },
      {
        "comment_id": "364910255",
        "repo_full_name": "docker/compose",
        "pr_number": 7027,
        "pr_file": "compose/cli/command.py",
        "discussion_id": "364732365",
        "commented_code": "@@ -188,3 +188,12 @@ def normalize_name(name):\n         return normalize_name(project)\n \n     return 'default'\n+\n+\n+def compatibility_from_options(working_dir, options=None, environment=None):\n+    \"\"\"Get compose v3 compatibility options from environment then from options.\"\"\"\n+\n+    if 'COMPOSE_COMPATIBILITY' in environment:\n+        return environment.get_boolean('COMPOSE_COMPATIBILITY')",
        "comment_created_at": "2020-01-09T19:04:44+00:00",
        "comment_author": "kiniou",
        "comment_body": "I think i have overlooked somehow the way the other functions handle precedence for options and environment variables. I will fix the precedence order :ok_hand:.\r\n\r\nNow, if i have understood the precedence (:point_up:) correctly and we have both `COMPOSE_COMPATIBILITY=no` and `--compatibility`, `docker-compose` should results in a compatibility mode execution.\r\nIf that's the case, I can indeed add a test that cover this case.",
        "pr_file_module": null
      },
      {
        "comment_id": "364928707",
        "repo_full_name": "docker/compose",
        "pr_number": 7027,
        "pr_file": "compose/cli/command.py",
        "discussion_id": "364732365",
        "commented_code": "@@ -188,3 +188,12 @@ def normalize_name(name):\n         return normalize_name(project)\n \n     return 'default'\n+\n+\n+def compatibility_from_options(working_dir, options=None, environment=None):\n+    \"\"\"Get compose v3 compatibility options from environment then from options.\"\"\"\n+\n+    if 'COMPOSE_COMPATIBILITY' in environment:\n+        return environment.get_boolean('COMPOSE_COMPATIBILITY')",
        "comment_created_at": "2020-01-09T19:48:22+00:00",
        "comment_author": "ulyssessouza",
        "comment_body": "Yep! The command line should have precedence over the environment variable",
        "pr_file_module": null
      },
      {
        "comment_id": "365525257",
        "repo_full_name": "docker/compose",
        "pr_number": 7027,
        "pr_file": "compose/cli/command.py",
        "discussion_id": "364732365",
        "commented_code": "@@ -188,3 +188,12 @@ def normalize_name(name):\n         return normalize_name(project)\n \n     return 'default'\n+\n+\n+def compatibility_from_options(working_dir, options=None, environment=None):\n+    \"\"\"Get compose v3 compatibility options from environment then from options.\"\"\"\n+\n+    if 'COMPOSE_COMPATIBILITY' in environment:\n+        return environment.get_boolean('COMPOSE_COMPATIBILITY')",
        "comment_created_at": "2020-01-11T14:49:19+00:00",
        "comment_author": "kiniou",
        "comment_body": ":ok_hand: My last push (with squashing to make commit tidier) should do the job.\r\n\r\nTo be noted: `COMPOSE_COMPATIBILITY=no` would result in a True value since `Environment.get_boolean(key)` test negative value only and handle only `false` or `0`.",
        "pr_file_module": null
      }
    ]
  }
]