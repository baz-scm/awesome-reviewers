[
  {
    "discussion_id": "1670747856",
    "pr_number": 11931,
    "pr_file": "pkg/compose/hash.go",
    "created_at": "2024-07-09T15:34:32+00:00",
    "commented_code": "if err != nil {\n \t\treturn \"\", err\n \t}\n+\n+\tfor _, serviceConfig := range o.Configs {\n+\t\tif projectConfig, ok := project.Configs[serviceConfig.Source]; ok {",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "1670747856",
        "repo_full_name": "docker/compose",
        "pr_number": 11931,
        "pr_file": "pkg/compose/hash.go",
        "discussion_id": "1670747856",
        "commented_code": "@@ -37,5 +38,22 @@ func ServiceHash(o types.ServiceConfig) (string, error) {\n \tif err != nil {\n \t\treturn \"\", err\n \t}\n+\n+\tfor _, serviceConfig := range o.Configs {\n+\t\tif projectConfig, ok := project.Configs[serviceConfig.Source]; ok {",
        "comment_created_at": "2024-07-09T15:34:32+00:00",
        "comment_author": "jhrotko",
        "comment_body": "nit: I would invert the if statements so that we do not get the code so nested. Other than that looks good to me!",
        "pr_file_module": null
      },
      {
        "comment_id": "1671603566",
        "repo_full_name": "docker/compose",
        "pr_number": 11931,
        "pr_file": "pkg/compose/hash.go",
        "discussion_id": "1670747856",
        "commented_code": "@@ -37,5 +38,22 @@ func ServiceHash(o types.ServiceConfig) (string, error) {\n \tif err != nil {\n \t\treturn \"\", err\n \t}\n+\n+\tfor _, serviceConfig := range o.Configs {\n+\t\tif projectConfig, ok := project.Configs[serviceConfig.Source]; ok {",
        "comment_created_at": "2024-07-10T04:40:25+00:00",
        "comment_author": "idsulik",
        "comment_body": "@jhrotko done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "866667522",
    "pr_number": 9437,
    "pr_file": "pkg/compose/cp.go",
    "created_at": "2022-05-06T09:47:58+00:00",
    "commented_code": "return g.Wait()\n }\n \n+func (s *composeService) listContainersTargetedForCopy(ctx context.Context, projectName string, index int, direction copyDirection, serviceName string) (Containers, error) {\n+\tvar containers Containers\n+\tvar err error\n+\tif direction == fromService || (direction == toService && index > 0) {",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "866667522",
        "repo_full_name": "docker/compose",
        "pr_number": 9437,
        "pr_file": "pkg/compose/cp.go",
        "discussion_id": "866667522",
        "commented_code": "@@ -105,6 +87,35 @@ func (s *composeService) Copy(ctx context.Context, projectName string, options a\n \treturn g.Wait()\n }\n \n+func (s *composeService) listContainersTargetedForCopy(ctx context.Context, projectName string, index int, direction copyDirection, serviceName string) (Containers, error) {\n+\tvar containers Containers\n+\tvar err error\n+\tif direction == fromService || (direction == toService && index > 0) {",
        "comment_created_at": "2022-05-06T09:47:58+00:00",
        "comment_author": "ndeloof",
        "comment_body": "nested `if`s make this a bit hard to read, maybe just split this into simpler top-level `switch` statement?\r\n\r\n```go\r\nswitch {\r\n\tcase direction == fromService && index == 0: \r\n                containers = ...\r\n\tcase index != 0:\r\n                containers = ...\r\n        default:\r\n                containers = ...\r\n\t}\r\n``` \r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "866696639",
    "pr_number": 9437,
    "pr_file": "pkg/compose/cp.go",
    "created_at": "2022-05-06T10:27:52+00:00",
    "commented_code": "return g.Wait()\n }\n \n+func (s *composeService) listContainersTargetedForCopy(ctx context.Context, projectName string, index int, direction copyDirection, serviceName string) (Containers, error) {\n+\tvar containers Containers\n+\tvar err error\n+\tswitch {\n+\tcase direction == fromService && index == 0:\n+\t\tcontainers, err = s.getContainers(ctx, projectName, oneOffExclude, true, serviceName)\n+\t\treturn containers[:0], err\n+\tcase direction == fromService || (direction == toService && index > 0):",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "866696639",
        "repo_full_name": "docker/compose",
        "pr_number": 9437,
        "pr_file": "pkg/compose/cp.go",
        "discussion_id": "866696639",
        "commented_code": "@@ -96,6 +87,32 @@ func (s *composeService) Copy(ctx context.Context, projectName string, options a\n \treturn g.Wait()\n }\n \n+func (s *composeService) listContainersTargetedForCopy(ctx context.Context, projectName string, index int, direction copyDirection, serviceName string) (Containers, error) {\n+\tvar containers Containers\n+\tvar err error\n+\tswitch {\n+\tcase direction == fromService && index == 0:\n+\t\tcontainers, err = s.getContainers(ctx, projectName, oneOffExclude, true, serviceName)\n+\t\treturn containers[:0], err\n+\tcase direction == fromService || (direction == toService && index > 0):",
        "comment_created_at": "2022-05-06T10:27:52+00:00",
        "comment_author": "ndeloof",
        "comment_body": "`direction = from & index = 0` has been addressed by 1st case, so here we have `(from & index > 0) || (to & index > 0)` which can be simplified as `index > 0`",
        "pr_file_module": null
      },
      {
        "comment_id": "866697195",
        "repo_full_name": "docker/compose",
        "pr_number": 9437,
        "pr_file": "pkg/compose/cp.go",
        "discussion_id": "866696639",
        "commented_code": "@@ -96,6 +87,32 @@ func (s *composeService) Copy(ctx context.Context, projectName string, options a\n \treturn g.Wait()\n }\n \n+func (s *composeService) listContainersTargetedForCopy(ctx context.Context, projectName string, index int, direction copyDirection, serviceName string) (Containers, error) {\n+\tvar containers Containers\n+\tvar err error\n+\tswitch {\n+\tcase direction == fromService && index == 0:\n+\t\tcontainers, err = s.getContainers(ctx, projectName, oneOffExclude, true, serviceName)\n+\t\treturn containers[:0], err\n+\tcase direction == fromService || (direction == toService && index > 0):",
        "comment_created_at": "2022-05-06T10:28:45+00:00",
        "comment_author": "glours",
        "comment_body": "Right! 👍 ",
        "pr_file_module": null
      },
      {
        "comment_id": "866701816",
        "repo_full_name": "docker/compose",
        "pr_number": 9437,
        "pr_file": "pkg/compose/cp.go",
        "discussion_id": "866696639",
        "commented_code": "@@ -96,6 +87,32 @@ func (s *composeService) Copy(ctx context.Context, projectName string, options a\n \treturn g.Wait()\n }\n \n+func (s *composeService) listContainersTargetedForCopy(ctx context.Context, projectName string, index int, direction copyDirection, serviceName string) (Containers, error) {\n+\tvar containers Containers\n+\tvar err error\n+\tswitch {\n+\tcase direction == fromService && index == 0:\n+\t\tcontainers, err = s.getContainers(ctx, projectName, oneOffExclude, true, serviceName)\n+\t\treturn containers[:0], err\n+\tcase direction == fromService || (direction == toService && index > 0):",
        "comment_created_at": "2022-05-06T10:35:35+00:00",
        "comment_author": "thaJeztah",
        "comment_body": "Perhaps split the switch into a `switch direction`, and within each of those (from/to) do the further checks, which could be a nested `switch` if needed.\r\n\r\nCombining the check (especially if they're checking on the same variables, such as `index` is sometimes \"tricky\", and easy to overlook if there's things excluded or \"duplicated\".\r\n\r\nNote that instead of `||` you can also use `case <condition1>, <condition2>, <condition3> ...`, which (I think) is more common.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "975835715",
    "pr_number": 9862,
    "pr_file": "pkg/compose/build.go",
    "created_at": "2022-09-20T21:37:00+00:00",
    "commented_code": "Attrs: map[string]string{\"ref\": image},\n \t\t\t})\n \t\t}\n+\t\tbuildOptions.Exports = []bclient.ExportEntry{{",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "975835715",
        "repo_full_name": "docker/compose",
        "pr_number": 9862,
        "pr_file": "pkg/compose/build.go",
        "discussion_id": "975835715",
        "commented_code": "@@ -81,6 +81,12 @@ func (s *composeService) build(ctx context.Context, project *types.Project, opti\n \t\t\t\tAttrs: map[string]string{\"ref\": image},\n \t\t\t})\n \t\t}\n+\t\tbuildOptions.Exports = []bclient.ExportEntry{{",
        "comment_created_at": "2022-09-20T21:37:00+00:00",
        "comment_author": "milas",
        "comment_body": "Nit: it'd be a bit clearer if it was something like\r\n\r\n```go\r\nif len(buildOptions.Platforms) == 0 {\r\n   // docker load\r\n} else { \r\n  // image out\r\n}\r\n```\r\n\r\nMostly to make it clear that they're mutually exclusive / an intentional override.",
        "pr_file_module": null
      }
    ]
  }
]