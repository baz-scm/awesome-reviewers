[
  {
    "discussion_id": "1028482662",
    "pr_number": 9997,
    "pr_file": "CONTRIBUTING.md",
    "created_at": "2022-11-21T20:21:24+00:00",
    "commented_code": "a comment after pushing. New commits show up in the pull request automatically,\n but the reviewers are notified only when you comment.\n \n-Pull requests must be cleanly rebased on top of master without multiple branches\n+Pull requests must be cleanly rebased on top of the master without multiple branches",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "1028482662",
        "repo_full_name": "docker/compose",
        "pr_number": 9997,
        "pr_file": "CONTRIBUTING.md",
        "discussion_id": "1028482662",
        "commented_code": "@@ -145,7 +145,7 @@ suggested modifications and push additional commits to your feature branch. Post\n a comment after pushing. New commits show up in the pull request automatically,\n but the reviewers are notified only when you comment.\n \n-Pull requests must be cleanly rebased on top of master without multiple branches\n+Pull requests must be cleanly rebased on top of the master without multiple branches",
        "comment_created_at": "2022-11-21T20:21:24+00:00",
        "comment_author": "milas",
        "comment_body": "```suggestion\r\nPull requests must be cleanly rebased on top of the base branch without multiple branches\r\n```\r\nIn this context, `master` is a branch name. However, the primary branch is actually `v2` now, so I think this can be slightly more generic.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1028483823",
    "pr_number": 9997,
    "pr_file": "CONTRIBUTING.md",
    "created_at": "2022-11-21T20:22:52+00:00",
    "commented_code": "1. All code should be formatted with `gofmt -s`.\n 2. All code should pass the default levels of\n    [`golint`](https://github.com/golang/lint).\n-3. All code should follow the guidelines covered in [Effective\n+3. All codes should follow the guidelines covered in [Effective\n    Go](http://golang.org/doc/effective_go.html) and [Go Code Review\n    Comments](https://github.com/golang/go/wiki/CodeReviewComments).\n-4. Comment the code. Tell us the why, the history and the context.\n+4. Comment on the code. Tell us the why, the history and the context.",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "1028483823",
        "repo_full_name": "docker/compose",
        "pr_number": 9997,
        "pr_file": "CONTRIBUTING.md",
        "discussion_id": "1028483823",
        "commented_code": "@@ -298,10 +298,10 @@ The rules:\n 1. All code should be formatted with `gofmt -s`.\n 2. All code should pass the default levels of\n    [`golint`](https://github.com/golang/lint).\n-3. All code should follow the guidelines covered in [Effective\n+3. All codes should follow the guidelines covered in [Effective\n    Go](http://golang.org/doc/effective_go.html) and [Go Code Review\n    Comments](https://github.com/golang/go/wiki/CodeReviewComments).\n-4. Comment the code. Tell us the why, the history and the context.\n+4. Comment on the code. Tell us the why, the history and the context.",
        "comment_created_at": "2022-11-21T20:22:52+00:00",
        "comment_author": "milas",
        "comment_body": "```suggestion\r\n4. Include code comments. Tell us the why, the history and the context.\r\n```\r\nI realize it's unusual for \"comment\" to be used as a verb, but \"comment on the code\" implies e.g. using GitHub rather than inline code comments",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "718771426",
    "pr_number": 8701,
    "pr_file": "README.md",
    "created_at": "2021-09-29T18:15:20+00:00",
    "commented_code": "Once you have a Compose file, you can create and start your application with a\n single command: `docker compose up`.\n \n+# About v2 update compatibility breaks\n+\n+Docker Compose v2 is a major version bump release of Docker compose. It has been completely rewriten from scratch in Golang (v1 was in Python). The installation instructions for Compose v2 differ from v1. v2 is not a standalone binary anymore and installation scripts will have to be adjusted. Some commands are different. For a smooth transition from legacy docker-compose 1.xx, please consider installing [compose-switch](https://github.com/docker/compose-switch) to translate `docker-compose ...` commands into Compose v2's `docker compose .... `. Also check v2's `--compatibility` flag.",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "718771426",
        "repo_full_name": "docker/compose",
        "pr_number": 8701,
        "pr_file": "README.md",
        "discussion_id": "718771426",
        "commented_code": "@@ -11,6 +11,10 @@ your application are configured.\n Once you have a Compose file, you can create and start your application with a\n single command: `docker compose up`.\n \n+# About v2 update compatibility breaks\n+\n+Docker Compose v2 is a major version bump release of Docker compose. It has been completely rewriten from scratch in Golang (v1 was in Python). The installation instructions for Compose v2 differ from v1. v2 is not a standalone binary anymore and installation scripts will have to be adjusted. Some commands are different. For a smooth transition from legacy docker-compose 1.xx, please consider installing [compose-switch](https://github.com/docker/compose-switch) to translate `docker-compose ...` commands into Compose v2's `docker compose .... `. Also check v2's `--compatibility` flag.",
        "comment_created_at": "2021-09-29T18:15:20+00:00",
        "comment_author": "ndeloof",
        "comment_body": "rest of the documentation uses uppercase \"V1\" and \"V2\"\r\nplease place the compose-switch note as a separate paragraph to make it bit more visible to readers",
        "pr_file_module": null
      },
      {
        "comment_id": "718812606",
        "repo_full_name": "docker/compose",
        "pr_number": 8701,
        "pr_file": "README.md",
        "discussion_id": "718771426",
        "commented_code": "@@ -11,6 +11,10 @@ your application are configured.\n Once you have a Compose file, you can create and start your application with a\n single command: `docker compose up`.\n \n+# About v2 update compatibility breaks\n+\n+Docker Compose v2 is a major version bump release of Docker compose. It has been completely rewriten from scratch in Golang (v1 was in Python). The installation instructions for Compose v2 differ from v1. v2 is not a standalone binary anymore and installation scripts will have to be adjusted. Some commands are different. For a smooth transition from legacy docker-compose 1.xx, please consider installing [compose-switch](https://github.com/docker/compose-switch) to translate `docker-compose ...` commands into Compose v2's `docker compose .... `. Also check v2's `--compatibility` flag.",
        "comment_created_at": "2021-09-29T19:16:08+00:00",
        "comment_author": "CrimsonGlory",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  }
]