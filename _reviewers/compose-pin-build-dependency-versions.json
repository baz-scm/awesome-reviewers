[
  {
    "discussion_id": "1290095641",
    "pr_number": 10890,
    "pr_file": "Dockerfile",
    "created_at": "2023-08-10T13:04:15+00:00",
    "commented_code": "#   See the License for the specific language governing permissions and\n #   limitations under the License.\n \n-ARG GO_VERSION=1.20.7\n+ARG GO_VERSION=1.21",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "1290095641",
        "repo_full_name": "docker/compose",
        "pr_number": 10890,
        "pr_file": "Dockerfile",
        "discussion_id": "1290095641",
        "commented_code": "@@ -15,7 +15,7 @@\n #   See the License for the specific language governing permissions and\n #   limitations under the License.\n \n-ARG GO_VERSION=1.20.7\n+ARG GO_VERSION=1.21",
        "comment_created_at": "2023-08-10T13:04:15+00:00",
        "comment_author": "milas",
        "comment_body": "```suggestion\r\nARG GO_VERSION=1.21.0\r\n```\r\n\r\nWe've generally been pinning to the patch as well, right? \r\n\r\nThat said...I'm fine with using the rolling tag (`1.21`) if you want. Despite the `Host` issues recently, Go patch upgrades are generally very safe IMO, so up to you!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "562533266",
    "pr_number": 8058,
    "pr_file": "Dockerfile",
    "created_at": "2021-01-22T10:23:36+00:00",
    "commented_code": "ARG DOCKER_VERSION=19.03\n-ARG PYTHON_VERSION=3.9.0\n+ARG PYTHON_VERSION=3.7.9",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "562533266",
        "repo_full_name": "docker/compose",
        "pr_number": 8058,
        "pr_file": "Dockerfile",
        "discussion_id": "562533266",
        "commented_code": "@@ -1,13 +1,13 @@\n ARG DOCKER_VERSION=19.03\n-ARG PYTHON_VERSION=3.9.0\n+ARG PYTHON_VERSION=3.7.9",
        "comment_created_at": "2021-01-22T10:23:36+00:00",
        "comment_author": "gtardif",
        "comment_body": "should we move back to 3.7.7 to avoid any surprise ? (that was in https://github.com/docker/compose/commit/a3e6e28eeb834435eca5a7e96a8016c7314c603e)",
        "pr_file_module": null
      },
      {
        "comment_id": "562541074",
        "repo_full_name": "docker/compose",
        "pr_number": 8058,
        "pr_file": "Dockerfile",
        "discussion_id": "562533266",
        "commented_code": "@@ -1,13 +1,13 @@\n ARG DOCKER_VERSION=19.03\n-ARG PYTHON_VERSION=3.9.0\n+ARG PYTHON_VERSION=3.7.9",
        "comment_created_at": "2021-01-22T10:36:09+00:00",
        "comment_author": "chris-crone",
        "comment_body": "We can do that if we see an issue but patch releases should be OK.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "276936810",
    "pr_number": 6641,
    "pr_file": "Dockerfile",
    "created_at": "2019-04-19T08:48:03+00:00",
    "commented_code": "-FROM docker:18.06.1 as docker\n-FROM python:3.7.2-stretch\n+ARG DOCKER_VERSION=18.09.5\n+ARG PYTHON_VERSION=3.7.3\n+ARG BUILD_ALPINE_VERSION=3.9\n+ARG BUILD_DEBIAN_VERSION=slim-stretch\n+ARG RUNTIME_ALPINE_VERSION=3.9.3\n+ARG RUNTIME_DEBIAN_VERSION=stretch-20190326-slim\n \n-RUN set -ex; \\\n-    apt-get update -qq; \\\n-    apt-get install -y \\\n-        locales \\\n-        python-dev \\\n-        git\n+ARG BUILD_PLATFORM=alpine\n \n-COPY --from=docker /usr/local/bin/docker /usr/local/bin/docker\n+FROM docker:${DOCKER_VERSION} AS docker-cli\n \n-# Python3 requires a valid locale\n-RUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && locale-gen\n-ENV LANG en_US.UTF-8\n+FROM python:${PYTHON_VERSION}-alpine${BUILD_ALPINE_VERSION} AS build-alpine\n+RUN apk add --no-cache \\\n+    bash \\\n+    build-base \\\n+    ca-certificates \\\n+    curl \\\n+    gcc \\\n+    git \\\n+    libc-dev \\\n+    libffi-dev \\\n+    libgcc \\\n+    make \\\n+    musl-dev \\\n+    openssl \\\n+    openssl-dev \\\n+    python2 \\\n+    python2-dev \\\n+    zlib-dev\n+ENV BUILD_BOOTLOADER=1\n \n-RUN useradd -d /home/user -m -s /bin/bash user\n-WORKDIR /code/\n+FROM python:${PYTHON_VERSION}-${BUILD_DEBIAN_VERSION} AS build-debian\n+RUN apt-get update && apt-get install -y \\\n+    curl \\\n+    gcc \\\n+    git \\\n+    libc-dev \\\n+    libgcc-6-dev \\\n+    make \\\n+    openssl \\\n+    python2.7-dev\n \n+FROM build-${BUILD_PLATFORM} AS build\n+COPY docker-compose-entrypoint.sh /usr/local/bin/\n+ENTRYPOINT [\"sh\", \"/usr/local/bin/docker-compose-entrypoint.sh\"]\n+COPY --from=docker-cli /usr/local/bin/docker /usr/local/bin/docker\n+WORKDIR /code/\n # FIXME(chris-crone): virtualenv 16.3.0 breaks build, force 16.2.0 until fixed",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "276936810",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "Dockerfile",
        "discussion_id": "276936810",
        "commented_code": "@@ -1,36 +1,71 @@\n-FROM docker:18.06.1 as docker\n-FROM python:3.7.2-stretch\n+ARG DOCKER_VERSION=18.09.5\n+ARG PYTHON_VERSION=3.7.3\n+ARG BUILD_ALPINE_VERSION=3.9\n+ARG BUILD_DEBIAN_VERSION=slim-stretch\n+ARG RUNTIME_ALPINE_VERSION=3.9.3\n+ARG RUNTIME_DEBIAN_VERSION=stretch-20190326-slim\n \n-RUN set -ex; \\\n-    apt-get update -qq; \\\n-    apt-get install -y \\\n-        locales \\\n-        python-dev \\\n-        git\n+ARG BUILD_PLATFORM=alpine\n \n-COPY --from=docker /usr/local/bin/docker /usr/local/bin/docker\n+FROM docker:${DOCKER_VERSION} AS docker-cli\n \n-# Python3 requires a valid locale\n-RUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && locale-gen\n-ENV LANG en_US.UTF-8\n+FROM python:${PYTHON_VERSION}-alpine${BUILD_ALPINE_VERSION} AS build-alpine\n+RUN apk add --no-cache \\\n+    bash \\\n+    build-base \\\n+    ca-certificates \\\n+    curl \\\n+    gcc \\\n+    git \\\n+    libc-dev \\\n+    libffi-dev \\\n+    libgcc \\\n+    make \\\n+    musl-dev \\\n+    openssl \\\n+    openssl-dev \\\n+    python2 \\\n+    python2-dev \\\n+    zlib-dev\n+ENV BUILD_BOOTLOADER=1\n \n-RUN useradd -d /home/user -m -s /bin/bash user\n-WORKDIR /code/\n+FROM python:${PYTHON_VERSION}-${BUILD_DEBIAN_VERSION} AS build-debian\n+RUN apt-get update && apt-get install -y \\\n+    curl \\\n+    gcc \\\n+    git \\\n+    libc-dev \\\n+    libgcc-6-dev \\\n+    make \\\n+    openssl \\\n+    python2.7-dev\n \n+FROM build-${BUILD_PLATFORM} AS build\n+COPY docker-compose-entrypoint.sh /usr/local/bin/\n+ENTRYPOINT [\"sh\", \"/usr/local/bin/docker-compose-entrypoint.sh\"]\n+COPY --from=docker-cli /usr/local/bin/docker /usr/local/bin/docker\n+WORKDIR /code/\n # FIXME(chris-crone): virtualenv 16.3.0 breaks build, force 16.2.0 until fixed",
        "comment_created_at": "2019-04-19T08:48:03+00:00",
        "comment_author": "rumpl",
        "comment_body": "Did we try with `16.4.x`?",
        "pr_file_module": null
      },
      {
        "comment_id": "276940960",
        "repo_full_name": "docker/compose",
        "pr_number": 6641,
        "pr_file": "Dockerfile",
        "discussion_id": "276936810",
        "commented_code": "@@ -1,36 +1,71 @@\n-FROM docker:18.06.1 as docker\n-FROM python:3.7.2-stretch\n+ARG DOCKER_VERSION=18.09.5\n+ARG PYTHON_VERSION=3.7.3\n+ARG BUILD_ALPINE_VERSION=3.9\n+ARG BUILD_DEBIAN_VERSION=slim-stretch\n+ARG RUNTIME_ALPINE_VERSION=3.9.3\n+ARG RUNTIME_DEBIAN_VERSION=stretch-20190326-slim\n \n-RUN set -ex; \\\n-    apt-get update -qq; \\\n-    apt-get install -y \\\n-        locales \\\n-        python-dev \\\n-        git\n+ARG BUILD_PLATFORM=alpine\n \n-COPY --from=docker /usr/local/bin/docker /usr/local/bin/docker\n+FROM docker:${DOCKER_VERSION} AS docker-cli\n \n-# Python3 requires a valid locale\n-RUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && locale-gen\n-ENV LANG en_US.UTF-8\n+FROM python:${PYTHON_VERSION}-alpine${BUILD_ALPINE_VERSION} AS build-alpine\n+RUN apk add --no-cache \\\n+    bash \\\n+    build-base \\\n+    ca-certificates \\\n+    curl \\\n+    gcc \\\n+    git \\\n+    libc-dev \\\n+    libffi-dev \\\n+    libgcc \\\n+    make \\\n+    musl-dev \\\n+    openssl \\\n+    openssl-dev \\\n+    python2 \\\n+    python2-dev \\\n+    zlib-dev\n+ENV BUILD_BOOTLOADER=1\n \n-RUN useradd -d /home/user -m -s /bin/bash user\n-WORKDIR /code/\n+FROM python:${PYTHON_VERSION}-${BUILD_DEBIAN_VERSION} AS build-debian\n+RUN apt-get update && apt-get install -y \\\n+    curl \\\n+    gcc \\\n+    git \\\n+    libc-dev \\\n+    libgcc-6-dev \\\n+    make \\\n+    openssl \\\n+    python2.7-dev\n \n+FROM build-${BUILD_PLATFORM} AS build\n+COPY docker-compose-entrypoint.sh /usr/local/bin/\n+ENTRYPOINT [\"sh\", \"/usr/local/bin/docker-compose-entrypoint.sh\"]\n+COPY --from=docker-cli /usr/local/bin/docker /usr/local/bin/docker\n+WORKDIR /code/\n # FIXME(chris-crone): virtualenv 16.3.0 breaks build, force 16.2.0 until fixed",
        "comment_created_at": "2019-04-19T09:08:00+00:00",
        "comment_author": "chris-crone",
        "comment_body": "I think that I did locally and it worked. I just didn't get a chance to put up a PR.\r\n\r\nWe only use virtualenv to build (we don't ship it) so we actually don't need to use the latest version. We should pin it though so that we don't suddenly get broken builds.",
        "pr_file_module": null
      }
    ]
  }
]