[
  {
    "discussion_id": "1414227976",
    "pr_number": 11207,
    "pr_file": "pkg/compose/compose.go",
    "created_at": "2023-12-04T17:15:08+00:00",
    "commented_code": "}\n \t\t\t\tservice.DependsOn[dependency] = types.ServiceDependency{Condition: condition, Restart: restart, Required: required}\n \t\t\t}\n+\t\t\tset[name] = service",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "1414227976",
        "repo_full_name": "docker/compose",
        "pr_number": 11207,
        "pr_file": "pkg/compose/compose.go",
        "discussion_id": "1414227976",
        "commented_code": "@@ -216,9 +219,11 @@ func (s *composeService) projectFromName(containers Containers, projectName stri\n \t\t\t\t}\n \t\t\t\tservice.DependsOn[dependency] = types.ServiceDependency{Condition: condition, Restart: restart, Required: required}\n \t\t\t}\n+\t\t\tset[name] = service",
        "comment_created_at": "2023-12-04T17:15:08+00:00",
        "comment_author": "laurazard",
        "comment_body": "this might not be practically problematic, but in general modifying a map during it's iteration is bad practice and can produce unpredictable results",
        "pr_file_module": null
      },
      {
        "comment_id": "1414230715",
        "repo_full_name": "docker/compose",
        "pr_number": 11207,
        "pr_file": "pkg/compose/compose.go",
        "discussion_id": "1414227976",
        "commented_code": "@@ -216,9 +219,11 @@ func (s *composeService) projectFromName(containers Containers, projectName stri\n \t\t\t\t}\n \t\t\t\tservice.DependsOn[dependency] = types.ServiceDependency{Condition: condition, Restart: restart, Required: required}\n \t\t\t}\n+\t\t\tset[name] = service",
        "comment_created_at": "2023-12-04T17:17:18+00:00",
        "comment_author": "laurazard",
        "comment_body": "an alternative could be to do this inside the other `for` (where we build `set`), which might also be slightly more efficient?",
        "pr_file_module": null
      },
      {
        "comment_id": "1414258259",
        "repo_full_name": "docker/compose",
        "pr_number": 11207,
        "pr_file": "pkg/compose/compose.go",
        "discussion_id": "1414227976",
        "commented_code": "@@ -216,9 +219,11 @@ func (s *composeService) projectFromName(containers Containers, projectName stri\n \t\t\t\t}\n \t\t\t\tservice.DependsOn[dependency] = types.ServiceDependency{Condition: condition, Restart: restart, Required: required}\n \t\t\t}\n+\t\t\tset[name] = service",
        "comment_created_at": "2023-12-04T17:39:41+00:00",
        "comment_author": "ndeloof",
        "comment_body": "> in general modifying a map during it's iteration is bad practice and can produce unpredictable results\r\n\r\nany reference ?\r\nI was looking for official reference regarding this and only found https://github.com/golang/go/issues/9926",
        "pr_file_module": null
      },
      {
        "comment_id": "1414271283",
        "repo_full_name": "docker/compose",
        "pr_number": 11207,
        "pr_file": "pkg/compose/compose.go",
        "discussion_id": "1414227976",
        "commented_code": "@@ -216,9 +219,11 @@ func (s *composeService) projectFromName(containers Containers, projectName stri\n \t\t\t\t}\n \t\t\t\tservice.DependsOn[dependency] = types.ServiceDependency{Condition: condition, Restart: restart, Required: required}\n \t\t\t}\n+\t\t\tset[name] = service",
        "comment_created_at": "2023-12-04T17:51:28+00:00",
        "comment_author": "laurazard",
        "comment_body": "Ah, that's fair. I probably got mixed up with adding key/value pairs, but modifying is safe (which makes sense). It was lots of code to comb through \ud83d\ude05 ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "754266161",
    "pr_number": 8953,
    "pr_file": "pkg/compose/build_classic.go",
    "created_at": "2021-11-22T13:15:07+00:00",
    "commented_code": "func toMapStringStringPtr(source map[string]string) map[string]*string {\n \tdest := make(map[string]*string)\n \tfor k, v := range source {\n-\t\tv := v\n+\t\t// v := v",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "754266161",
        "repo_full_name": "docker/compose",
        "pr_number": 8953,
        "pr_file": "pkg/compose/build_classic.go",
        "discussion_id": "754266161",
        "commented_code": "@@ -243,7 +243,7 @@ func imageBuildOptions(options buildx.Options) dockertypes.ImageBuildOptions {\n func toMapStringStringPtr(source map[string]string) map[string]*string {\n \tdest := make(map[string]*string)\n \tfor k, v := range source {\n-\t\tv := v\n+\t\t// v := v",
        "comment_created_at": "2021-11-22T13:15:07+00:00",
        "comment_author": "ulyssessouza",
        "comment_body": "By commenting this line the test should fail",
        "pr_file_module": null
      },
      {
        "comment_id": "754287896",
        "repo_full_name": "docker/compose",
        "pr_number": 8953,
        "pr_file": "pkg/compose/build_classic.go",
        "discussion_id": "754266161",
        "commented_code": "@@ -243,7 +243,7 @@ func imageBuildOptions(options buildx.Options) dockertypes.ImageBuildOptions {\n func toMapStringStringPtr(source map[string]string) map[string]*string {\n \tdest := make(map[string]*string)\n \tfor k, v := range source {\n-\t\tv := v\n+\t\t// v := v",
        "comment_created_at": "2021-11-22T13:39:32+00:00",
        "comment_author": "mat007",
        "comment_body": "Without that line, what it does is assign the pointer to the last value in `source` to all values in `dest`.\r\nGiven that the test has two args with the same value, it explains why it doesn\u2019t fail.",
        "pr_file_module": null
      },
      {
        "comment_id": "754290132",
        "repo_full_name": "docker/compose",
        "pr_number": 8953,
        "pr_file": "pkg/compose/build_classic.go",
        "discussion_id": "754266161",
        "commented_code": "@@ -243,7 +243,7 @@ func imageBuildOptions(options buildx.Options) dockertypes.ImageBuildOptions {\n func toMapStringStringPtr(source map[string]string) map[string]*string {\n \tdest := make(map[string]*string)\n \tfor k, v := range source {\n-\t\tv := v\n+\t\t// v := v",
        "comment_created_at": "2021-11-22T13:42:22+00:00",
        "comment_author": "mat007",
        "comment_body": "The memory for `v` is allocated once, and then each iteration of the loop overwrites `v` with the new value.\r\nBut it\u2019s always the same pointer value, as it points to the same memory location.\r\nTherefore every time we assign the pointer, it\u2019s actually the same pointer. And after the loop is finished, the variable pointed to by that pointer holds the value of the last element in the range.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "722165216",
    "pr_number": 8750,
    "pr_file": "pkg/compose/create.go",
    "created_at": "2021-10-05T11:56:19+00:00",
    "commented_code": "Target:   m.Destination,\n \t\t\t\t\t\tReadOnly: !m.RW,\n \t\t\t\t\t}\n-\t\t\t\t\t// Avoid mount to be later re-defined",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "722165216",
        "repo_full_name": "docker/compose",
        "pr_number": 8750,
        "pr_file": "pkg/compose/create.go",
        "discussion_id": "722165216",
        "commented_code": "@@ -762,10 +762,6 @@ func buildContainerMountOptions(p types.Project, s types.ServiceConfig, img moby\n \t\t\t\t\t\tTarget:   m.Destination,\n \t\t\t\t\t\tReadOnly: !m.RW,\n \t\t\t\t\t}\n-\t\t\t\t\t// Avoid mount to be later re-defined",
        "comment_created_at": "2021-10-05T11:56:19+00:00",
        "comment_author": "ndeloof",
        "comment_body": "I'm not sure I remember the detail, but deletion here is expected afaict.\r\nMaybe better create a new `Volumes` before the loop, copy those that need to be kept while iterating, then override `s.Volumes`",
        "pr_file_module": null
      },
      {
        "comment_id": "722178315",
        "repo_full_name": "docker/compose",
        "pr_number": 8750,
        "pr_file": "pkg/compose/create.go",
        "discussion_id": "722165216",
        "commented_code": "@@ -762,10 +762,6 @@ func buildContainerMountOptions(p types.Project, s types.ServiceConfig, img moby\n \t\t\t\t\t\tTarget:   m.Destination,\n \t\t\t\t\t\tReadOnly: !m.RW,\n \t\t\t\t\t}\n-\t\t\t\t\t// Avoid mount to be later re-defined",
        "comment_created_at": "2021-10-05T12:14:16+00:00",
        "comment_author": "mat007",
        "comment_body": "Yes, either that or a good old `for i := 0; i < len(s.Volumes {`, incrementing i only when not deleting.",
        "pr_file_module": null
      }
    ]
  }
]