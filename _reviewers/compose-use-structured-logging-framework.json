[
  {
    "discussion_id": "1688263170",
    "pr_number": 11996,
    "pr_file": "pkg/compose/build_classic.go",
    "created_at": "2024-07-23T15:23:07+00:00",
    "commented_code": "aux := func(msg jsonmessage.JSONMessage) {\n \t\tvar result dockertypes.BuildResult\n \t\tif err := json.Unmarshal(*msg.Aux, &result); err != nil {\n-\t\t\tfmt.Fprintf(s.stderr(), \"Failed to parse aux message: %s\", err)\n+\t\t\tlogrus.Warnf(\"Failed to parse aux message: %s\", err)",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "1688263170",
        "repo_full_name": "docker/compose",
        "pr_number": 11996,
        "pr_file": "pkg/compose/build_classic.go",
        "discussion_id": "1688263170",
        "commented_code": "@@ -180,7 +182,7 @@ func (s *composeService) doBuildClassic(ctx context.Context, project *types.Proj\n \taux := func(msg jsonmessage.JSONMessage) {\n \t\tvar result dockertypes.BuildResult\n \t\tif err := json.Unmarshal(*msg.Aux, &result); err != nil {\n-\t\t\tfmt.Fprintf(s.stderr(), \"Failed to parse aux message: %s\", err)\n+\t\t\tlogrus.Warnf(\"Failed to parse aux message: %s\", err)",
        "comment_created_at": "2024-07-23T15:23:07+00:00",
        "comment_author": "ndeloof",
        "comment_body": "should be Errorf",
        "pr_file_module": null
      },
      {
        "comment_id": "1688642996",
        "repo_full_name": "docker/compose",
        "pr_number": 11996,
        "pr_file": "pkg/compose/build_classic.go",
        "discussion_id": "1688263170",
        "commented_code": "@@ -180,7 +182,7 @@ func (s *composeService) doBuildClassic(ctx context.Context, project *types.Proj\n \taux := func(msg jsonmessage.JSONMessage) {\n \t\tvar result dockertypes.BuildResult\n \t\tif err := json.Unmarshal(*msg.Aux, &result); err != nil {\n-\t\t\tfmt.Fprintf(s.stderr(), \"Failed to parse aux message: %s\", err)\n+\t\t\tlogrus.Warnf(\"Failed to parse aux message: %s\", err)",
        "comment_created_at": "2024-07-23T19:59:41+00:00",
        "comment_author": "felixfontein",
        "comment_body": "Thanks, adjusted it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1204187024",
    "pr_number": 10614,
    "pr_file": "pkg/progress/writer.go",
    "created_at": "2023-05-24T13:53:15+00:00",
    "commented_code": "}\n \tif Mode == ModeTTY {\n \t\tif !isConsole {\n-\t\t\tlog.Warning(\"Terminal is not a POSIX console\")\n+\t\t\t_, _ = fmt.Fprintln(out, \"Terminal is not a POSIX console\")",
    "repo_full_name": "docker/compose",
    "discussion_comments": [
      {
        "comment_id": "1204187024",
        "repo_full_name": "docker/compose",
        "pr_number": 10614,
        "pr_file": "pkg/progress/writer.go",
        "discussion_id": "1204187024",
        "commented_code": "@@ -125,7 +125,7 @@ func NewWriter(ctx context.Context, out io.Writer, progressTitle string) (Writer\n \t}\n \tif Mode == ModeTTY {\n \t\tif !isConsole {\n-\t\t\tlog.Warning(\"Terminal is not a POSIX console\")\n+\t\t\t_, _ = fmt.Fprintln(out, \"Terminal is not a POSIX console\")",
        "comment_created_at": "2023-05-24T13:53:15+00:00",
        "comment_author": "ndeloof",
        "comment_body": "we've been using `logrus.Warning` in other places, we should do the same here",
        "pr_file_module": null
      }
    ]
  }
]