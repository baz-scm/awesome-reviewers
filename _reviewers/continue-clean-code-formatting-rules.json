[
  {
    "discussion_id": "2173094304",
    "pr_number": 6333,
    "pr_file": "gui/src/pages/gui/ToolCallDiv/ToolCall.tsx",
    "created_at": "2025-06-28T02:44:08+00:00",
    "commented_code": "toolCallState={toolCallState}\n               />\n             </div>\n-            {!!args.length ? (\n-              <ArgsToggleIcon\n-                isShowing={argsExpanded}\n-                setIsShowing={setArgsExpanded}\n-                toolCallId={toolCallState.toolCallId}\n-              />\n-            ) : null}\n+            <div className=\"gap 1.5 flex flex-row items-center\">",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2173094304",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6333,
        "pr_file": "gui/src/pages/gui/ToolCallDiv/ToolCall.tsx",
        "discussion_id": "2173094304",
        "commented_code": "@@ -39,13 +42,16 @@ export function ToolCallDisplay({\n                 toolCallState={toolCallState}\n               />\n             </div>\n-            {!!args.length ? (\n-              <ArgsToggleIcon\n-                isShowing={argsExpanded}\n-                setIsShowing={setArgsExpanded}\n-                toolCallId={toolCallState.toolCallId}\n-              />\n-            ) : null}\n+            <div className=\"gap 1.5 flex flex-row items-center\">",
        "comment_created_at": "2025-06-28T02:44:08+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":10,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r 'TruncateHistoryIcon' gui/src/pages/gui/ToolCallDiv/TruncateHistoryIcon.tsx\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r 'className=' gui/src/pages/gui/ToolCallDiv/TruncateHistoryIcon.tsx\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r 'historyIndex' gui/src/pages/gui/ToolCallDiv/TruncateHistoryIcon.tsx\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r 'gap ' gui/src/pages/gui/ToolCallDiv/ToolCall.tsx\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r 'gap-1.5' gui/src/pages/gui/ToolCallDiv/ToolCall.tsx\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r 'gap ' gui/src/pages/gui/ToolCallDiv/TruncateHistoryIcon.tsx\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r 'gap' gui/src/pages/gui/ToolCallDiv/TruncateHistoryIcon.tsx\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r 'gap ' gui/src/pages/gui/ToolCallDiv/ToolCallArgs.tsx\"},\"toolName\":\"executeCommand\"}]}]} -->\nThe className uses 'gap 1.5' instead of the correct Tailwind syntax 'gap-1.5', which may result in no gap being applied between elements.\n\n```suggestion\n            <div className=\"gap-1.5 flex flex-row items-center\">\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2175687680",
    "pr_number": 6333,
    "pr_file": "gui/src/pages/gui/ToolCallDiv/ToolCall.tsx",
    "created_at": "2025-06-30T18:49:40+00:00",
    "commented_code": "toolCallState={toolCallState}\n               />\n             </div>\n-            {!!args.length ? (\n-              <ArgsToggleIcon\n-                isShowing={argsExpanded}\n-                setIsShowing={setArgsExpanded}\n-                toolCallId={toolCallState.toolCallId}\n-              />\n-            ) : null}\n+            <div className=\"gap 1.5 flex flex-row items-center\">",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2175687680",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6333,
        "pr_file": "gui/src/pages/gui/ToolCallDiv/ToolCall.tsx",
        "discussion_id": "2175687680",
        "commented_code": "@@ -39,13 +42,18 @@ export function ToolCallDisplay({\n                 toolCallState={toolCallState}\n               />\n             </div>\n-            {!!args.length ? (\n-              <ArgsToggleIcon\n-                isShowing={argsExpanded}\n-                setIsShowing={setArgsExpanded}\n-                toolCallId={toolCallState.toolCallId}\n-              />\n-            ) : null}\n+            <div className=\"gap 1.5 flex flex-row items-center\">",
        "comment_created_at": "2025-06-30T18:49:40+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":9,\"steps\":[]} -->\nThe className string 'gap 1.5' is likely incorrect; it should probably be 'gap-1.5' to apply the intended Tailwind CSS gap utility. The current form will not apply the gap as expected.\n\n```suggestion\n            <div className=\"gap-1.5 flex flex-row items-center\">\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2175687690",
    "pr_number": 6333,
    "pr_file": "gui/src/components/mainInput/belowMainInput/ContextItemsPeek.tsx",
    "created_at": "2025-06-30T18:49:40+00:00",
    "commented_code": "return (\n     <div\n       onClick={openContextItem}\n-      className=\"group mr-2 flex cursor-pointer items-center overflow-hidden text-ellipsis whitespace-nowrap rounded px-1.5 py-1 text-xs hover:bg-white/10\"\n+      className=\"mr-2 flex cursor-pointer flex-row items-center gap-1.5 rounded px-1.5 py-1 text-xs hover:bg-white/10\"\n       data-testid=\"context-items-peek-item\"\n     >\n-      <div className=\"flex w-full items-center\">\n-        {getContextItemIcon()}\n-        <div className=\"flex min-w-0 flex-1 gap-2 text-xs\">\n-          <div\n-            className={`max-w-[50%] flex-shrink-0 truncate ${isUrl ? \"hover:underline\" : \"\"}`}\n-          >\n-            {contextItem.name}\n-          </div>\n-          <div\n-            className={`min-w-0 flex-1 overflow-hidden truncate whitespace-nowrap text-xs text-gray-400 ${isUrl ? \"hover:underline\" : \"\"}`}\n-            onClick={\n-              isUrl\n-                ? (e) => {\n-                    if (contextItem.uri?.value) {\n-                      e.stopPropagation();\n-                      ideMessenger.post(\"openUrl\", contextItem.uri.value);\n-                    } else {\n-                      console.error(\"Couldn't open url\", contextItem.uri);\n-                    }\n-                  }\n-                : undefined\n-            }\n-          >\n-            {contextItem.uri?.type === \"file\"\n-              ? getUriPathBasename(contextItem.description)\n-              : contextItem.description}\n-          </div>\n-        </div>\n-\n+      {getContextItemIcon()}\n+      <span className={`max-s-[100px] line-clamp-1 flex-shrink-0`}>",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2175687690",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6333,
        "pr_file": "gui/src/components/mainInput/belowMainInput/ContextItemsPeek.tsx",
        "discussion_id": "2175687690",
        "commented_code": "@@ -117,40 +117,35 @@ export function ContextItemsPeekItem({\n   return (\n     <div\n       onClick={openContextItem}\n-      className=\"group mr-2 flex cursor-pointer items-center overflow-hidden text-ellipsis whitespace-nowrap rounded px-1.5 py-1 text-xs hover:bg-white/10\"\n+      className=\"mr-2 flex cursor-pointer flex-row items-center gap-1.5 rounded px-1.5 py-1 text-xs hover:bg-white/10\"\n       data-testid=\"context-items-peek-item\"\n     >\n-      <div className=\"flex w-full items-center\">\n-        {getContextItemIcon()}\n-        <div className=\"flex min-w-0 flex-1 gap-2 text-xs\">\n-          <div\n-            className={`max-w-[50%] flex-shrink-0 truncate ${isUrl ? \"hover:underline\" : \"\"}`}\n-          >\n-            {contextItem.name}\n-          </div>\n-          <div\n-            className={`min-w-0 flex-1 overflow-hidden truncate whitespace-nowrap text-xs text-gray-400 ${isUrl ? \"hover:underline\" : \"\"}`}\n-            onClick={\n-              isUrl\n-                ? (e) => {\n-                    if (contextItem.uri?.value) {\n-                      e.stopPropagation();\n-                      ideMessenger.post(\"openUrl\", contextItem.uri.value);\n-                    } else {\n-                      console.error(\"Couldn't open url\", contextItem.uri);\n-                    }\n-                  }\n-                : undefined\n-            }\n-          >\n-            {contextItem.uri?.type === \"file\"\n-              ? getUriPathBasename(contextItem.description)\n-              : contextItem.description}\n-          </div>\n-        </div>\n-\n+      {getContextItemIcon()}\n+      <span className={`max-s-[100px] line-clamp-1 flex-shrink-0`}>",
        "comment_created_at": "2025-06-30T18:49:40+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":9,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"max-s-\\\\[\\\" -n\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"max-s-\\\\[\\\" --line-number\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n -A2 -B2 \\\"max-s-\\\\[100px\\\\]\\\" gui/src/components/mainInput/belowMainInput/ContextItemsPeek.tsx\"},\"toolName\":\"executeCommand\"}]}]} -->\nThe Tailwind class \"max-s-[100px]\" is not a valid utility (should be \"max-w-[100px]\"). As a result, the intended max-width constraint is never applied and long names may overflow.\n\n```suggestion\n      <span className={`max-w-[100px] line-clamp-1 flex-shrink-0`}>\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2178400514",
    "pr_number": 6382,
    "pr_file": "gui/src/pages/gui/Chat.tsx",
    "created_at": "2025-07-01T19:42:43+00:00",
    "commented_code": "inputId={item.message.id}\n                   />\n                 </>\n-              ) : item.message.role === \"tool\" ? null : item.message.role ===\n+              ) : item.message.role === \"tool\" ? null : item.message.role === // /> //   toolCallId={item.message.toolCallId} //   contextItems={item.contextItems} // <ToolOutput",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2178400514",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6382,
        "pr_file": "gui/src/pages/gui/Chat.tsx",
        "discussion_id": "2178400514",
        "commented_code": "@@ -319,7 +319,7 @@ export function Chat() {\n                     inputId={item.message.id}\n                   />\n                 </>\n-              ) : item.message.role === \"tool\" ? null : item.message.role ===\n+              ) : item.message.role === \"tool\" ? null : item.message.role === // /> //   toolCallId={item.message.toolCallId} //   contextItems={item.contextItems} // <ToolOutput",
        "comment_created_at": "2025-07-01T19:42:43+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":10,\"steps\":[]} -->\nInline comments are left in the middle of a ternary expression, which can break code parsing and readability. Comments should not be placed within expressions like this.\n\n```suggestion\n              ) : item.message.role === \"tool\" ? null : item.message.role === \"assistant\" &&\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2181126611",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6382,
        "pr_file": "gui/src/pages/gui/Chat.tsx",
        "discussion_id": "2178400514",
        "commented_code": "@@ -319,7 +319,7 @@ export function Chat() {\n                     inputId={item.message.id}\n                   />\n                 </>\n-              ) : item.message.role === \"tool\" ? null : item.message.role ===\n+              ) : item.message.role === \"tool\" ? null : item.message.role === // /> //   toolCallId={item.message.toolCallId} //   contextItems={item.contextItems} // <ToolOutput",
        "comment_created_at": "2025-07-02T23:08:58+00:00",
        "comment_author": "Patrick-Erichsen",
        "comment_body": "Would probably +1 removing the comment, hard to read",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2184265287",
    "pr_number": 6445,
    "pr_file": "gui/src/components/mainInput/Lump/sections/tool-policies/ToolPolicyItem.tsx",
    "created_at": "2025-07-04T03:53:52+00:00",
    "commented_code": "</span>\n           </div>\n         </div>\n+\n         <div\n-          className={`flex w-8 flex-row items-center justify-end gap-2 px-2 py-0.5 sm:w-16 ${props.excluded ? \"cursor-not-allowed\" : \"hover:bg-list-active hover:text-list-active-foreground cursor-pointer\"}`}\n+          className={`flex w-8 flex-row items-center justify-end gap-2 px-2 py-0.5 sm:w-16 ${disabled ? \"cursor-not-allowed\" : \"hover:bg-list-active hover:text-list-active-foreground cursor-pointer\"}`}",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2184265287",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6445,
        "pr_file": "gui/src/components/mainInput/Lump/sections/tool-policies/ToolPolicyItem.tsx",
        "discussion_id": "2184265287",
        "commented_code": "@@ -106,16 +114,17 @@\n             </span>\n           </div>\n         </div>\n+\n         <div\n-          className={`flex w-8 flex-row items-center justify-end gap-2 px-2 py-0.5 sm:w-16 ${props.excluded ? \"cursor-not-allowed\" : \"hover:bg-list-active hover:text-list-active-foreground cursor-pointer\"}`}\n+          className={`flex w-8 flex-row items-center justify-end gap-2 px-2 py-0.5 sm:w-16 ${disabled ? \"cursor-not-allowed\" : \"hover:bg-list-active hover:text-list-active-foreground cursor-pointer\"}`}",
        "comment_created_at": "2025-07-04T03:53:52+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":6,\"steps\":[]} -->\nClassName string is getting long and complex, which can make it hard to maintain. Consider extracting conditional logic to a variable for readability.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2106329958",
    "pr_number": 5809,
    "pr_file": "gui/src/components/mainInput/InputToolbar.tsx",
    "created_at": "2025-05-25T23:01:11+00:00",
    "commented_code": ">\n           {!props.toolbarOptions?.hideUseCodebase && mode !== \"edit\" && (\n             <div\n-              className={`${toolsSupported ? \"md:flex\" : \"int:flex\"} hover:underline\" hidden transition-colors duration-200`}\n+              className={`hover:underline\" hidden transition-colors duration-200 md:flex`}",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2106329958",
        "repo_full_name": "continuedev/continue",
        "pr_number": 5809,
        "pr_file": "gui/src/components/mainInput/InputToolbar.tsx",
        "discussion_id": "2106329958",
        "commented_code": "@@ -156,7 +154,7 @@ function InputToolbar(props: InputToolbarProps) {\n         >\n           {!props.toolbarOptions?.hideUseCodebase && mode !== \"edit\" && (\n             <div\n-              className={`${toolsSupported ? \"md:flex\" : \"int:flex\"} hover:underline\" hidden transition-colors duration-200`}\n+              className={`hover:underline\" hidden transition-colors duration-200 md:flex`}",
        "comment_created_at": "2025-05-25T23:01:11+00:00",
        "comment_author": "continue-code-review[bot]",
        "comment_body": "The CSS class string contains a stray quote character and malformed class structure: `\"hover:underline\" hidden transition-colors duration-200 md:flex\"`. This should be cleaned up to remove the extra quotes.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2157644701",
    "pr_number": 6202,
    "pr_file": "gui/src/components/Layout.tsx",
    "created_at": "2025-06-19T20:46:40+00:00",
    "commented_code": "import TextDialog from \"./dialogs\";\n import Footer from \"./Footer\";\n import { LumpProvider } from \"./mainInput/Lump/LumpContext\";\n-import { useMainEditor } from \"./mainInput/TipTapEditor\";\n-import {\n-  isNewUserOnboarding,\n-  OnboardingCard,\n-  useOnboardingCard,\n-} from \"./OnboardingCard\";\n+import { useMainEditor } from \"./mainInput/TipTapEditor/MainEditorProvider\";",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2157644701",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6202,
        "pr_file": "gui/src/components/Layout.tsx",
        "discussion_id": "2157644701",
        "commented_code": "@@ -19,12 +19,10 @@ import { FatalErrorIndicator } from \"./config/FatalErrorNotice\";\n import TextDialog from \"./dialogs\";\n import Footer from \"./Footer\";\n import { LumpProvider } from \"./mainInput/Lump/LumpContext\";\n-import { useMainEditor } from \"./mainInput/TipTapEditor\";\n-import {\n-  isNewUserOnboarding,\n-  OnboardingCard,\n-  useOnboardingCard,\n-} from \"./OnboardingCard\";\n+import { useMainEditor } from \"./mainInput/TipTapEditor/MainEditorProvider\";",
        "comment_created_at": "2025-06-19T20:46:40+00:00",
        "comment_author": "recurseml[bot]",
        "comment_body": "While the new import path exists and is used consistently across the codebase, this import statement restructuring has created a dependency on a more specific internal implementation file. This could make the code more brittle and harder to refactor in the future. Consider importing from the main TipTapEditor module and re-exporting the hook from there to maintain better encapsulation.\n\n<sub>\ud83d\udd0d This comment matches your `import-encapsulation` rule.</sub>\n\n---\n\n> *React with \ud83d\udc4d to tell me that this comment was useful, or \ud83d\udc4e if not (and I'll stop posting more comments like this in the future)*",
        "pr_file_module": null
      }
    ]
  }
]