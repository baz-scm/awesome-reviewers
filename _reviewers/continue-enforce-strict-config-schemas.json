[
  {
    "discussion_id": "1802225332",
    "pr_number": 2534,
    "pr_file": "core/config/validation.ts",
    "created_at": "2024-10-16T01:55:38+00:00",
    "commented_code": "+import { SerializedContinueConfig } from \"../\";\n+\n+export type ValidationErrorMessage = string;\n+\n+export class ValidationError extends Error {\n+  public errors: ValidationErrorMessage[];\n+\n+  constructor(errors: ValidationErrorMessage[]) {\n+    super(\"Validation failed\");\n+    this.errors = errors;\n+\n+    // Maintains proper stack trace for where our error was thrown (only available on V8 engines)\n+    if (Error.captureStackTrace) {\n+      Error.captureStackTrace(this, ValidationError);\n+    }\n+  }\n+}\n+\n+/**\n+ * Validates a SerializedContinueConfig object to ensure all properties are correctly formed.\n+ * @param config The configuration object to validate.\n+ * @returns An array of error messages. If the array is empty, the config is valid.\n+ */\n+export function validateConfig(config: SerializedContinueConfig) {\n+  const errors: ValidationErrorMessage[] = [];\n+\n+  // Validate models\n+  if (!Array.isArray(config.models) || config.models.length === 0) {",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "1802225332",
        "repo_full_name": "continuedev/continue",
        "pr_number": 2534,
        "pr_file": "core/config/validation.ts",
        "discussion_id": "1802225332",
        "commented_code": "@@ -0,0 +1,112 @@\n+import { SerializedContinueConfig } from \"../\";\n+\n+export type ValidationErrorMessage = string;\n+\n+export class ValidationError extends Error {\n+  public errors: ValidationErrorMessage[];\n+\n+  constructor(errors: ValidationErrorMessage[]) {\n+    super(\"Validation failed\");\n+    this.errors = errors;\n+\n+    // Maintains proper stack trace for where our error was thrown (only available on V8 engines)\n+    if (Error.captureStackTrace) {\n+      Error.captureStackTrace(this, ValidationError);\n+    }\n+  }\n+}\n+\n+/**\n+ * Validates a SerializedContinueConfig object to ensure all properties are correctly formed.\n+ * @param config The configuration object to validate.\n+ * @returns An array of error messages. If the array is empty, the config is valid.\n+ */\n+export function validateConfig(config: SerializedContinueConfig) {\n+  const errors: ValidationErrorMessage[] = [];\n+\n+  // Validate models\n+  if (!Array.isArray(config.models) || config.models.length === 0) {",
        "comment_created_at": "2024-10-16T01:55:38+00:00",
        "comment_author": "sestinj",
        "comment_body": "Don't worry about changing it in this PR, but just making the note here that we can switch to using zod later (definition is in packages/config-types/src/index.ts)",
        "pr_file_module": null
      },
      {
        "comment_id": "1802916232",
        "repo_full_name": "continuedev/continue",
        "pr_number": 2534,
        "pr_file": "core/config/validation.ts",
        "discussion_id": "1802225332",
        "commented_code": "@@ -0,0 +1,112 @@\n+import { SerializedContinueConfig } from \"../\";\n+\n+export type ValidationErrorMessage = string;\n+\n+export class ValidationError extends Error {\n+  public errors: ValidationErrorMessage[];\n+\n+  constructor(errors: ValidationErrorMessage[]) {\n+    super(\"Validation failed\");\n+    this.errors = errors;\n+\n+    // Maintains proper stack trace for where our error was thrown (only available on V8 engines)\n+    if (Error.captureStackTrace) {\n+      Error.captureStackTrace(this, ValidationError);\n+    }\n+  }\n+}\n+\n+/**\n+ * Validates a SerializedContinueConfig object to ensure all properties are correctly formed.\n+ * @param config The configuration object to validate.\n+ * @returns An array of error messages. If the array is empty, the config is valid.\n+ */\n+export function validateConfig(config: SerializedContinueConfig) {\n+  const errors: ValidationErrorMessage[] = [];\n+\n+  // Validate models\n+  if (!Array.isArray(config.models) || config.models.length === 0) {",
        "comment_created_at": "2024-10-16T11:27:20+00:00",
        "comment_author": "tomasz-stefaniak",
        "comment_body": "I tested it - it's very easy to switch to zod, it took about 5 minutes of work, but it's a bit too eager and fails even valid configs. We'd need to look at the zod schema and see if it's correct.",
        "pr_file_module": null
      }
    ]
  }
]