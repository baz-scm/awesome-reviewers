[
  {
    "discussion_id": "2173116100",
    "pr_number": 6264,
    "pr_file": "core/llm/streamChat.ts",
    "created_at": "2025-06-28T04:20:29+00:00",
    "commented_code": "},\n       true,\n     );\n+    if (!slashCommand.run) {\n+      throw new Error(`Slash command ${command.name} is not a legacy command`);",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2173116100",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6264,
        "pr_file": "core/llm/streamChat.ts",
        "discussion_id": "2173116100",
        "commented_code": "@@ -59,6 +59,9 @@ export async function* llmStreamChat(\n       },\n       true,\n     );\n+    if (!slashCommand.run) {\n+      throw new Error(`Slash command ${command.name} is not a legacy command`);",
        "comment_created_at": "2025-06-28T04:20:29+00:00",
        "comment_author": "sestinj",
        "comment_body": "god forbid this error ever becomes visible to the user\r\n\r\nI don't think it should be possible, but could we pretend that we expect that and write an error message that makes more sense to them? e.g. \"Slash command not found\"",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2132427469",
    "pr_number": 6013,
    "pr_file": "packages/fetch/src/premature-close.ts",
    "created_at": "2025-06-06T15:40:30+00:00",
    "commented_code": "+export function getPrematureCloseErrorMessage(chunks: number): string {\n+  if (chunks === 0) {\n+    return \"Connection was closed before any data was received (Premature close). Try again.\";\n+  } else {\n+    return (",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2132427469",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6013,
        "pr_file": "packages/fetch/src/premature-close.ts",
        "discussion_id": "2132427469",
        "commented_code": "@@ -0,0 +1,14 @@\n+export function getPrematureCloseErrorMessage(chunks: number): string {\n+  if (chunks === 0) {\n+    return \"Connection was closed before any data was received (Premature close). Try again.\";\n+  } else {\n+    return (",
        "comment_created_at": "2025-06-06T15:40:30+00:00",
        "comment_author": "sestinj",
        "comment_body": "I really don't think the end user wants to see all of this. If they start trying to solve \"Keep alive\" on their own they will never succeed. Could it just be \"The response was cancelled mid-stream\"",
        "pr_file_module": null
      },
      {
        "comment_id": "2132611222",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6013,
        "pr_file": "packages/fetch/src/premature-close.ts",
        "discussion_id": "2132427469",
        "commented_code": "@@ -0,0 +1,14 @@\n+export function getPrematureCloseErrorMessage(chunks: number): string {\n+  if (chunks === 0) {\n+    return \"Connection was closed before any data was received (Premature close). Try again.\";\n+  } else {\n+    return (",
        "comment_created_at": "2025-06-06T17:45:23+00:00",
        "comment_author": "RomneyDa",
        "comment_body": "Agreed, updated",
        "pr_file_module": null
      }
    ]
  }
]