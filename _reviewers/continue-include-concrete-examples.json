[
  {
    "discussion_id": "2167674928",
    "pr_number": 6228,
    "pr_file": ".continue/rules/new-protocol-message.md",
    "created_at": "2025-06-25T21:34:07+00:00",
    "commented_code": null,
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2167674928",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6228,
        "pr_file": ".continue/rules/new-protocol-message.md",
        "discussion_id": "2167674928",
        "commented_code": null,
        "comment_created_at": "2025-06-25T21:34:07+00:00",
        "comment_author": "RomneyDa",
        "comment_body": "I think multiple-header lists are higher risk of confusion for concatenated rules. Single header with numbered/nested list might make more sense\r\n\r\nThis rule sounds a bit too much like a prompt, e.g. \r\n>Create a new protocol message by taking the following steps:\r\n\r\n I feel like it would often leave to confusion",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1978373054",
    "pr_number": 4195,
    "pr_file": "docs/docs/edit/how-to-use-it.md",
    "created_at": "2025-03-03T23:16:52+00:00",
    "commented_code": "You can also accept or reject all changes at once using <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>enter</kbd> (to accept) or <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>delete/backspace</kbd> (to reject).\n \n If you want to request a new suggestion for the same highlighted code section, you can use <kbd>cmd/ctrl</kbd> + <kbd>i</kbd> to re-prompt the model.\n+",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "1978373054",
        "repo_full_name": "continuedev/continue",
        "pr_number": 4195,
        "pr_file": "docs/docs/edit/how-to-use-it.md",
        "discussion_id": "1978373054",
        "commented_code": "@@ -35,3 +35,10 @@ You can navigate through each proposed change, accepting or rejecting them using\n You can also accept or reject all changes at once using <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>enter</kbd> (to accept) or <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>delete/backspace</kbd> (to reject).\n \n If you want to request a new suggestion for the same highlighted code section, you can use <kbd>cmd/ctrl</kbd> + <kbd>i</kbd> to re-prompt the model.\n+",
        "comment_created_at": "2025-03-03T23:16:52+00:00",
        "comment_author": "Patrick-Erichsen",
        "comment_body": "These docs should probably live in `docs/docs/chat/how-to-customize` since Apply is moreso part of Chat rather than Edit. \r\n\r\nAlso, I went ahead and created a `rules` block on the Hub so that users can easily opt-in to this behavior by installing the block: https://hub.continue.dev/continuedev/unified-diff-apply\r\n\r\nMind updating the docs here to reflect that? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1986375401",
        "repo_full_name": "continuedev/continue",
        "pr_number": 4195,
        "pr_file": "docs/docs/edit/how-to-use-it.md",
        "discussion_id": "1978373054",
        "commented_code": "@@ -35,3 +35,10 @@ You can navigate through each proposed change, accepting or rejecting them using\n You can also accept or reject all changes at once using <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>enter</kbd> (to accept) or <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>delete/backspace</kbd> (to reject).\n \n If you want to request a new suggestion for the same highlighted code section, you can use <kbd>cmd/ctrl</kbd> + <kbd>i</kbd> to re-prompt the model.\n+",
        "comment_created_at": "2025-03-09T17:24:38+00:00",
        "comment_author": "ingo-eichhorst-ionos",
        "comment_body": "I'm trapped a little bit. Following the hub link leads me to:\r\n<img width=\"486\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ce771fec-a800-43f5-aa95-52a6ff992426\" />\r\n\r\nAfter loging in I see the companies workspace and my workspace but no option to install assistants.\r\nWill try later with my private account. Stay tuned.",
        "pr_file_module": null
      },
      {
        "comment_id": "1986376422",
        "repo_full_name": "continuedev/continue",
        "pr_number": 4195,
        "pr_file": "docs/docs/edit/how-to-use-it.md",
        "discussion_id": "1978373054",
        "commented_code": "@@ -35,3 +35,10 @@ You can navigate through each proposed change, accepting or rejecting them using\n You can also accept or reject all changes at once using <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>enter</kbd> (to accept) or <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>delete/backspace</kbd> (to reject).\n \n If you want to request a new suggestion for the same highlighted code section, you can use <kbd>cmd/ctrl</kbd> + <kbd>i</kbd> to re-prompt the model.\n+",
        "comment_created_at": "2025-03-09T17:30:11+00:00",
        "comment_author": "ingo-eichhorst-ionos",
        "comment_body": "@Patrick-Erichsen  After reading @sestinj  message below \ud83d\udc47 I'm a bit confused. Should I edit the docs or are we moving them to the \"Deep Dive\"?\r\nI've no opinion to be honest. Whatever is best. If it's ok for you, please just go ahead and make the changes you think are best for the docs.",
        "pr_file_module": null
      },
      {
        "comment_id": "1986378873",
        "repo_full_name": "continuedev/continue",
        "pr_number": 4195,
        "pr_file": "docs/docs/edit/how-to-use-it.md",
        "discussion_id": "1978373054",
        "commented_code": "@@ -35,3 +35,10 @@ You can navigate through each proposed change, accepting or rejecting them using\n You can also accept or reject all changes at once using <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>enter</kbd> (to accept) or <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>delete/backspace</kbd> (to reject).\n \n If you want to request a new suggestion for the same highlighted code section, you can use <kbd>cmd/ctrl</kbd> + <kbd>i</kbd> to re-prompt the model.\n+",
        "comment_created_at": "2025-03-09T17:42:32+00:00",
        "comment_author": "ingo-eichhorst-ionos",
        "comment_body": "Oh, and I would recommend to add some examples to the assistants prompt. Especially GPT-4o and the weaker 70b or 7b Llama need a lot of guidance from my experience.\r\nActually I would like to run a benchmark on how good the models output is with different system prompts. (I'm maybe able to do it next weekend)",
        "pr_file_module": null
      },
      {
        "comment_id": "1987708077",
        "repo_full_name": "continuedev/continue",
        "pr_number": 4195,
        "pr_file": "docs/docs/edit/how-to-use-it.md",
        "discussion_id": "1978373054",
        "commented_code": "@@ -35,3 +35,10 @@ You can navigate through each proposed change, accepting or rejecting them using\n You can also accept or reject all changes at once using <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>enter</kbd> (to accept) or <kbd>cmd/ctrl</kbd> + <kbd>shift</kbd> + <kbd>delete/backspace</kbd> (to reject).\n \n If you want to request a new suggestion for the same highlighted code section, you can use <kbd>cmd/ctrl</kbd> + <kbd>i</kbd> to re-prompt the model.\n+",
        "comment_created_at": "2025-03-10T17:11:04+00:00",
        "comment_author": "ingo-eichhorst-ionos",
        "comment_body": "@Patrick-Erichsen  Created a .prompt file for my team that works pretty reliable with llama3.3 and GPT-4o. Still have to battle test and benchmark it.\r\n\r\n______________________________________________________________\r\n\r\n\r\nname: Unified Diff Generator\r\ndescription: Guide for generating clean, applicable unified diffs\r\n---\r\n\r\nAct as an expert software developer who specializes in creating precise unified diffs. When given code modification requests, you will respond with clean, applicable unified diff patches that can be directly applied to the codebase.\r\n\r\n## Unified Diff Format\r\n\r\n```diff\r\n--- original/path/file.ext\r\n+++ modified/path/file.ext\r\n@@ -1,7 +1,7 @@\r\n unchanged line\r\n unchanged line\r\n unchanged line\r\n-removed line\r\n+added line\r\n unchanged line\r\n unchanged line\r\n unchanged line\r\n```\r\n\r\n## Key Guidelines\r\n\r\n1. **Hunk Structure**:\r\n   - Start each segment of changes with `@@ start_line_before,lines_count_before start_line_after,lines_count_after @@`\r\n   - Only include hunks with actual changes (containing `+` or `-` lines)\r\n   - Sart every unchanged line with an additional space ` `\r\n   - There should be 3 unchanged lines before and after any changes.\r\n   - If there are less than 3 lines before or after the changes include only the available or non if at the start or end of the file.\r\n\r\n2. **Code Blocks**:\r\n   - When modifying a function, method, or block, replace the entire block\r\n   - Remove the old version with `-` lines\r\n   - Add the new version with `+` lines\r\n   - This ensures syntactic correctness and proper indentation\r\n\r\n3. **File Operations**:\r\n   - To move code within a file: create two hunks (one for deletion, one for insertion)\r\n\r\n4. **Patch Correctness**:\r\n   - Verify that diffs apply cleanly against current file contents\r\n   - Maintain proper indentation in all added/modified code\r\n   - Ensure syntactic correctness in the resulting code\r\n\r\n## Examples\r\n\r\n### Example 1: File modification with only one function\r\n```diff\r\n--- app/utils.py\r\n+++ app/utils.py\r\n@@ -1,3 +1,5 @@\r\n-def calculate_total(items):\r\n-    total = 0\r\n-    for item in items:\r\n-        total += item.price\r\n-    return total\r\n+def calculate_total(items, discount=0):\r\n+    total = sum(item.price for item in items)\r\n+    return total * (1 - discount/100)\r\n```\r\n\r\n### Example 2: Import Addition\r\n```diff\r\n--- app/models.py\r\n+++ app/models.py\r\n@@ -1,6 +1,7 @@\r\n import pandas\r\n import datetime\r\n import json\r\n+import uuid\r\n from typing import Dict, List, Optional\r\n \r\n def main():\r\n```\r\n\r\n### Example 4: Moving Code Within a File and Modifying Multi Parts in the File \r\n```diff\r\n--- app/views.py\r\n+++ app/views.py\r\n@@ -12,23 +12,18 @@\r\n         return False\r\n     return True\r\n \r\n-def validate_input(data):\r\n-    \"\"\"Validate user input.\"\"\"\r\n-    if not data.get('name'):\r\n-        return False\r\n-    return True\r\n \r\n def main():\r\n     \"\"\"Main function.\"\"\"\r\n@@ -64,70 +64,76 @@\r\n class UserController:\r\n     \"\"\"Handle user-related operations.\"\"\"\r\n     \r\n+    def validate_input(data):\r\n+        \"\"\"Validate user input.\"\"\"\r\n+        if not data.get('name'):\r\n+            return False\r\n+        return True\r\n+    \r\n     def create_user(self, data):\r\n         \"\"\"Create a user.\"\"\"\r\n         print(data)\r\n```\r\n\r\n## Best Practices\r\n\r\n1. **Think Carefully Before Generating**:\r\n   - Understand the complete request\r\n   - Consider dependencies and imports\r\n   - Identify all files that need modification\r\n\r\n2. **Quality Assurance**:\r\n   - Verify all necessary modifications are included\r\n   - Check that indentation is preserved\r\n   - Ensure syntactic correctness\r\n\r\nRemember that your unified diffs will be applied directly to code, so precision and correctness are essential.\r\nAlways generate diffs that will apply cleanly and produce working, syntactically correct code.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2056362534",
    "pr_number": 5176,
    "pr_file": "docs/docs/customize/model-roles/autocomplete.md",
    "created_at": "2025-04-23T15:47:49+00:00",
    "commented_code": "## Recommended Autocomplete models\n \n Visit the [Autocomplete Deep Dive](../deep-dives/autocomplete.mdx) for recommended models and more details.\n+\n+## Prompt templating\n+\n+You can customize the prompt template used when autocomplete happens by setting the `promptTemplates.autocomplete` property in your model configuration. Continue uses [Handlebars syntax](https://handlebarsjs.com/guide/) for templating.\n+\n+Available variables for the apply template:\n+\n+- `{{{prefix}}}` - the code before your cursor\n+- `{{{suffix}}}` - the code after your cursor\n+- `{{{filename}}}` - the name of the file your cursor currently is\n+- `{{{reponame}}}` - the name of the folder where the codebase is\n+- `{{{language}}}` - the name of the programming language in full (ex. Typescript)\n+\n+Example:\n+\n+```yaml",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2056362534",
        "repo_full_name": "continuedev/continue",
        "pr_number": 5176,
        "pr_file": "docs/docs/customize/model-roles/autocomplete.md",
        "discussion_id": "2056362534",
        "commented_code": "@@ -12,3 +12,24 @@ In Continue, autocomplete models are used to display inline [Autocomplete](../..\n ## Recommended Autocomplete models\n \n Visit the [Autocomplete Deep Dive](../deep-dives/autocomplete.mdx) for recommended models and more details.\n+\n+## Prompt templating\n+\n+You can customize the prompt template used when autocomplete happens by setting the `promptTemplates.autocomplete` property in your model configuration. Continue uses [Handlebars syntax](https://handlebarsjs.com/guide/) for templating.\n+\n+Available variables for the apply template:\n+\n+- `{{{prefix}}}` - the code before your cursor\n+- `{{{suffix}}}` - the code after your cursor\n+- `{{{filename}}}` - the name of the file your cursor currently is\n+- `{{{reponame}}}` - the name of the folder where the codebase is\n+- `{{{language}}}` - the name of the programming language in full (ex. Typescript)\n+\n+Example:\n+\n+```yaml",
        "comment_created_at": "2025-04-23T15:47:49+00:00",
        "comment_author": "Patrick-Erichsen",
        "comment_body": "This is missing an actual example of the prompt templating",
        "pr_file_module": null
      },
      {
        "comment_id": "2056460452",
        "repo_full_name": "continuedev/continue",
        "pr_number": 5176,
        "pr_file": "docs/docs/customize/model-roles/autocomplete.md",
        "discussion_id": "2056362534",
        "commented_code": "@@ -12,3 +12,24 @@ In Continue, autocomplete models are used to display inline [Autocomplete](../..\n ## Recommended Autocomplete models\n \n Visit the [Autocomplete Deep Dive](../deep-dives/autocomplete.mdx) for recommended models and more details.\n+\n+## Prompt templating\n+\n+You can customize the prompt template used when autocomplete happens by setting the `promptTemplates.autocomplete` property in your model configuration. Continue uses [Handlebars syntax](https://handlebarsjs.com/guide/) for templating.\n+\n+Available variables for the apply template:\n+\n+- `{{{prefix}}}` - the code before your cursor\n+- `{{{suffix}}}` - the code after your cursor\n+- `{{{filename}}}` - the name of the file your cursor currently is\n+- `{{{reponame}}}` - the name of the folder where the codebase is\n+- `{{{language}}}` - the name of the programming language in full (ex. Typescript)\n+\n+Example:\n+\n+```yaml",
        "comment_created_at": "2025-04-23T16:33:13+00:00",
        "comment_author": "uinstinct",
        "comment_body": "added",
        "pr_file_module": null
      }
    ]
  }
]