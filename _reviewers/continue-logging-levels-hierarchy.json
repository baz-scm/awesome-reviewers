[
  {
    "discussion_id": "2202907880",
    "pr_number": 6595,
    "pr_file": "gui/src/hooks/ParallelListeners.tsx",
    "created_at": "2025-07-12T20:33:47+00:00",
    "commented_code": "// This triggers sending pending status to the GUI for relevant docs indexes\n         clearInterval(interval);\n       } else {\n-        void initialLoadAuthAndConfig(true);\n+        void initialLoadConfig();\n       }\n     }, 2_000);\n \n     return () => clearInterval(interval);\n-  }, [hasDoneInitialConfigLoad, initialLoadAuthAndConfig, ideMessenger]);\n+  }, [hasDoneInitialConfigLoad, ideMessenger]);\n \n   useWebviewListener(\n     \"configUpdate\",\n     async (update) => {\n       if (!update) {\n         return;\n       }\n+      console.log(\"Received config update\");",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2202907880",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6595,
        "pr_file": "gui/src/hooks/ParallelListeners.tsx",
        "discussion_id": "2202907880",
        "commented_code": "@@ -132,19 +128,20 @@ function ParallelListeners() {\n         // This triggers sending pending status to the GUI for relevant docs indexes\n         clearInterval(interval);\n       } else {\n-        void initialLoadAuthAndConfig(true);\n+        void initialLoadConfig();\n       }\n     }, 2_000);\n \n     return () => clearInterval(interval);\n-  }, [hasDoneInitialConfigLoad, initialLoadAuthAndConfig, ideMessenger]);\n+  }, [hasDoneInitialConfigLoad, ideMessenger]);\n \n   useWebviewListener(\n     \"configUpdate\",\n     async (update) => {\n       if (!update) {\n         return;\n       }\n+      console.log(\"Received config update\");",
        "comment_created_at": "2025-07-12T20:33:47+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":9,\"steps\":[]} -->\nLeftover console.log will leak debug noise to user consoles; replace with proper logging or remove.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1767539545",
    "pr_number": 2326,
    "pr_file": "gui/src/forms/AddModelForm.tsx",
    "created_at": "2024-09-19T20:14:23+00:00",
    "commented_code": "return false;\n     }\n \n-    const apiKey = formMethods.watch(\"apiKey\");\n-    return typeof apiKey === \"undefined\" || apiKey.length === 0;\n+    const required = selectedProvider.collectInputFor\n+      .filter((input) => input.required)\n+      .map((input) => {\n+        const value = formMethods.watch(input.key);\n+        return value;\n+      });\n+    console.log(\"Required fields values:\", required);",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "1767539545",
        "repo_full_name": "continuedev/continue",
        "pr_number": 2326,
        "pr_file": "gui/src/forms/AddModelForm.tsx",
        "discussion_id": "1767539545",
        "commented_code": "@@ -49,8 +50,15 @@ function AddModelForm({\n       return false;\n     }\n \n-    const apiKey = formMethods.watch(\"apiKey\");\n-    return typeof apiKey === \"undefined\" || apiKey.length === 0;\n+    const required = selectedProvider.collectInputFor\n+      .filter((input) => input.required)\n+      .map((input) => {\n+        const value = formMethods.watch(input.key);\n+        return value;\n+      });\n+    console.log(\"Required fields values:\", required);",
        "comment_created_at": "2024-09-19T20:14:23+00:00",
        "comment_author": "Patrick-Erichsen",
        "comment_body": "```suggestion\r\n    console.debug(\"Required fields values:\", required);\r\n```\r\n\r\nWe should document this somewhere but using `console.debug` logs to reduce noise",
        "pr_file_module": null
      },
      {
        "comment_id": "1767597377",
        "repo_full_name": "continuedev/continue",
        "pr_number": 2326,
        "pr_file": "gui/src/forms/AddModelForm.tsx",
        "discussion_id": "1767539545",
        "commented_code": "@@ -49,8 +50,15 @@ function AddModelForm({\n       return false;\n     }\n \n-    const apiKey = formMethods.watch(\"apiKey\");\n-    return typeof apiKey === \"undefined\" || apiKey.length === 0;\n+    const required = selectedProvider.collectInputFor\n+      .filter((input) => input.required)\n+      .map((input) => {\n+        const value = formMethods.watch(input.key);\n+        return value;\n+      });\n+    console.log(\"Required fields values:\", required);",
        "comment_created_at": "2024-09-19T21:07:00+00:00",
        "comment_author": "ajshedivy",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  }
]