[
  {
    "discussion_id": "2098710631",
    "pr_number": 5662,
    "pr_file": "gui/src/components/mainInput/Lump/LumpToolbar.tsx",
    "created_at": "2025-05-20T19:26:26+00:00",
    "commented_code": "<StopButton\n           className=\"text-gray-400\"\n           onClick={() => {\n-            dispatch(cancelStream());\n+            dispatch(cancelButton());",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2098710631",
        "repo_full_name": "continuedev/continue",
        "pr_number": 5662,
        "pr_file": "gui/src/components/mainInput/Lump/LumpToolbar.tsx",
        "discussion_id": "2098710631",
        "commented_code": "@@ -96,7 +96,7 @@ export function LumpToolbar() {\n         <StopButton\n           className=\"text-gray-400\"\n           onClick={() => {\n-            dispatch(cancelStream());\n+            dispatch(cancelButton());",
        "comment_created_at": "2025-05-20T19:26:26+00:00",
        "comment_author": "RomneyDa",
        "comment_body": "semantic nitpick, thinking cancelStream makes more sense as the action performed, and since dispatched on keyboard events not just button click. also reduces file changes",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2089753660",
    "pr_number": 5657,
    "pr_file": "gui/src/components/gui/Switch.tsx",
    "created_at": "2025-05-14T21:06:13+00:00",
    "commented_code": "+import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\n import React from \"react\";\n import { vscButtonBackground } from \"..\";\n+import { ToolTip } from \"./Tooltip\";\n \n type ToggleSwitchProps = {\n   isToggled: boolean;\n   onToggle: () => void;\n   text: string;\n   size?: number;\n+  onWarningText?: string;",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2089753660",
        "repo_full_name": "continuedev/continue",
        "pr_number": 5657,
        "pr_file": "gui/src/components/gui/Switch.tsx",
        "discussion_id": "2089753660",
        "commented_code": "@@ -1,23 +1,40 @@\n+import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\n import React from \"react\";\n import { vscButtonBackground } from \"..\";\n+import { ToolTip } from \"./Tooltip\";\n \n type ToggleSwitchProps = {\n   isToggled: boolean;\n   onToggle: () => void;\n   text: string;\n   size?: number;\n+  onWarningText?: string;",
        "comment_created_at": "2025-05-14T21:06:13+00:00",
        "comment_author": "Patrick-Erichsen",
        "comment_body": "I would lean towards a more generic `warningItem` prop here to enable more flexibility for the consuming component to use whatever it wants. \r\n\r\nAlthough you could make the argument that we actually want to limit variability here and limit it to just the exclamation triangle, but in that case `onWarningText` isn't semantically clear to me since the \"on\" prefix is typically for event handlers, so I'd call it just `warningText`",
        "pr_file_module": null
      },
      {
        "comment_id": "2096223738",
        "repo_full_name": "continuedev/continue",
        "pr_number": 5657,
        "pr_file": "gui/src/components/gui/Switch.tsx",
        "discussion_id": "2089753660",
        "commented_code": "@@ -1,23 +1,40 @@\n+import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\n import React from \"react\";\n import { vscButtonBackground } from \"..\";\n+import { ToolTip } from \"./Tooltip\";\n \n type ToggleSwitchProps = {\n   isToggled: boolean;\n   onToggle: () => void;\n   text: string;\n   size?: number;\n+  onWarningText?: string;",
        "comment_created_at": "2025-05-19T17:44:46+00:00",
        "comment_author": "RomneyDa",
        "comment_body": "good point, changed to `showIftogged` comp passed",
        "pr_file_module": null
      }
    ]
  }
]