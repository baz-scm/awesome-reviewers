[
  {
    "discussion_id": "2170235528",
    "pr_number": 6316,
    "pr_file": "gui/src/pages/gui/ToolCallDiv/FunctionSpecificToolCallDiv.tsx",
    "created_at": "2025-06-26T23:17:17+00:00",
    "commented_code": "historyIndex={historyIndex}\n         />\n       );\n+    case BuiltInToolNames.SearchAndReplaceInFile:\n+      return (\n+        <EditFile\n+          relativeFilePath={args.filepath ?? \"\"}\n+          changes={args.diff ?? \"\"}",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2170235528",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6316,
        "pr_file": "gui/src/pages/gui/ToolCallDiv/FunctionSpecificToolCallDiv.tsx",
        "discussion_id": "2170235528",
        "commented_code": "@@ -33,6 +33,15 @@ function FunctionSpecificToolCallDiv({\n           historyIndex={historyIndex}\n         />\n       );\n+    case BuiltInToolNames.SearchAndReplaceInFile:\n+      return (\n+        <EditFile\n+          relativeFilePath={args.filepath ?? \"\"}\n+          changes={args.diff ?? \"\"}",
        "comment_created_at": "2025-06-26T23:17:17+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":7,\"steps\":[]} -->\nThe 'changes' prop is set to 'args.diff ?? \"\"', but in the EditExistingFile case above, it is set to 'args.changes ?? \"\"'. This inconsistency in argument naming may cause issues if the EditFile component expects a specific prop structure or if the tool call args are not standardized.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2170264328",
    "pr_number": 6316,
    "pr_file": "gui/src/pages/gui/ToolCallDiv/FunctionSpecificToolCallDiv.tsx",
    "created_at": "2025-06-26T23:33:36+00:00",
    "commented_code": "historyIndex={historyIndex}\n         />\n       );\n+    case BuiltInToolNames.SearchAndReplaceInFile:\n+      return (\n+        <EditFile\n+          relativeFilePath={args.filepath ?? \"\"}\n+          changes={args.diff ?? \"\"}",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2170264328",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6316,
        "pr_file": "gui/src/pages/gui/ToolCallDiv/FunctionSpecificToolCallDiv.tsx",
        "discussion_id": "2170264328",
        "commented_code": "@@ -33,6 +33,15 @@ function FunctionSpecificToolCallDiv({\n           historyIndex={historyIndex}\n         />\n       );\n+    case BuiltInToolNames.SearchAndReplaceInFile:\n+      return (\n+        <EditFile\n+          relativeFilePath={args.filepath ?? \"\"}\n+          changes={args.diff ?? \"\"}",
        "comment_created_at": "2025-06-26T23:33:36+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":7,\"steps\":[]} -->\nThe 'changes' prop is set to 'args.diff ?? \"\"', but in the EditExistingFile case above, it is set to 'args.changes ?? \"\"'. This inconsistency in argument naming may cause issues if the EditFile component expects a specific prop structure or if the tool call args are not standardized.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2184265288",
    "pr_number": 6445,
    "pr_file": "gui/src/components/mainInput/Lump/sections/tool-policies/ToolPolicyItem.tsx",
    "created_at": "2025-07-04T03:53:52+00:00",
    "commented_code": "interface ToolDropdownItemProps {\n   tool: Tool;\n   duplicatesDetected: boolean;\n-  excluded: boolean;\n+  isGroupEnabled: boolean;",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2184265288",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6445,
        "pr_file": "gui/src/components/mainInput/Lump/sections/tool-policies/ToolPolicyItem.tsx",
        "discussion_id": "2184265288",
        "commented_code": "@@ -16,7 +17,7 @@\n interface ToolDropdownItemProps {\n   tool: Tool;\n   duplicatesDetected: boolean;\n-  excluded: boolean;\n+  isGroupEnabled: boolean;",
        "comment_created_at": "2025-07-04T03:53:52+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":8,\"steps\":[]} -->\nProp name changed from 'excluded' to 'isGroupEnabled', but the rest of the codebase may still reference the old prop name. Ensure all usages are updated to prevent runtime errors.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2202208661",
    "pr_number": 6524,
    "pr_file": "gui/src/components/mainInput/Lump/LumpToolbar/StreamingToolbar.tsx",
    "created_at": "2025-07-12T00:57:12+00:00",
    "commented_code": "import { useAppDispatch } from \"../../../../redux/hooks\";\n import { cancelStream } from \"../../../../redux/thunks/cancelStream\";\n import { getAltKeyLabel, getMetaKeyLabel, isJetBrains } from \"../../../../util\";\n-import { Container, StopButton } from \"./components\";\n import { GeneratingIndicator } from \"./GeneratingIndicator\";\n \n export function StreamingToolbar() {\n-  const dispatch = useAppDispatch();\n   const jetbrains = isJetBrains();\n+  const dispatch = useAppDispatch();\n \n   return (\n-    <Container>\n+    <div className=\"flex w-full items-center justify-between\">\n       <GeneratingIndicator />\n-      <StopButton\n-        className=\"text-description\"\n-        onClick={() => {\n-          void dispatch(cancelStream());\n-        }}\n+      <div\n+        onClick={() => void dispatch(cancelStream())}\n+        className=\"text-2xs cursor-pointer px-1.5 py-0.5 hover:brightness-125\"\n       >\n-        {jetbrains ? getAltKeyLabel() : getMetaKeyLabel()} \u232b Cancel\n-      </StopButton>\n-    </Container>\n+        <span className=\"text-description\">Pause</span>",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2202208661",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6524,
        "pr_file": "gui/src/components/mainInput/Lump/LumpToolbar/StreamingToolbar.tsx",
        "discussion_id": "2202208661",
        "commented_code": "@@ -1,24 +1,25 @@\n import { useAppDispatch } from \"../../../../redux/hooks\";\n import { cancelStream } from \"../../../../redux/thunks/cancelStream\";\n import { getAltKeyLabel, getMetaKeyLabel, isJetBrains } from \"../../../../util\";\n-import { Container, StopButton } from \"./components\";\n import { GeneratingIndicator } from \"./GeneratingIndicator\";\n \n export function StreamingToolbar() {\n-  const dispatch = useAppDispatch();\n   const jetbrains = isJetBrains();\n+  const dispatch = useAppDispatch();\n \n   return (\n-    <Container>\n+    <div className=\"flex w-full items-center justify-between\">\n       <GeneratingIndicator />\n-      <StopButton\n-        className=\"text-description\"\n-        onClick={() => {\n-          void dispatch(cancelStream());\n-        }}\n+      <div\n+        onClick={() => void dispatch(cancelStream())}\n+        className=\"text-2xs cursor-pointer px-1.5 py-0.5 hover:brightness-125\"\n       >\n-        {jetbrains ? getAltKeyLabel() : getMetaKeyLabel()} \u232b Cancel\n-      </StopButton>\n-    </Container>\n+        <span className=\"text-description\">Pause</span>",
        "comment_created_at": "2025-07-12T00:57:12+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":9,\"steps\":[]} -->\nThe button label was changed from 'Cancel' to 'Pause', but the action still cancels the stream. This could confuse users, as 'Pause' typically implies resumable behavior, while the action is destructive.\n\n```suggestion\n        <span className=\"text-description\">Cancel</span>\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2098710631",
    "pr_number": 5662,
    "pr_file": "gui/src/components/mainInput/Lump/LumpToolbar.tsx",
    "created_at": "2025-05-20T19:26:26+00:00",
    "commented_code": "<StopButton\n           className=\"text-gray-400\"\n           onClick={() => {\n-            dispatch(cancelStream());\n+            dispatch(cancelButton());",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2098710631",
        "repo_full_name": "continuedev/continue",
        "pr_number": 5662,
        "pr_file": "gui/src/components/mainInput/Lump/LumpToolbar.tsx",
        "discussion_id": "2098710631",
        "commented_code": "@@ -96,7 +96,7 @@ export function LumpToolbar() {\n         <StopButton\n           className=\"text-gray-400\"\n           onClick={() => {\n-            dispatch(cancelStream());\n+            dispatch(cancelButton());",
        "comment_created_at": "2025-05-20T19:26:26+00:00",
        "comment_author": "RomneyDa",
        "comment_body": "semantic nitpick, thinking cancelStream makes more sense as the action performed, and since dispatched on keyboard events not just button click. also reduces file changes",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2089753660",
    "pr_number": 5657,
    "pr_file": "gui/src/components/gui/Switch.tsx",
    "created_at": "2025-05-14T21:06:13+00:00",
    "commented_code": "+import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\n import React from \"react\";\n import { vscButtonBackground } from \"..\";\n+import { ToolTip } from \"./Tooltip\";\n \n type ToggleSwitchProps = {\n   isToggled: boolean;\n   onToggle: () => void;\n   text: string;\n   size?: number;\n+  onWarningText?: string;",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2089753660",
        "repo_full_name": "continuedev/continue",
        "pr_number": 5657,
        "pr_file": "gui/src/components/gui/Switch.tsx",
        "discussion_id": "2089753660",
        "commented_code": "@@ -1,23 +1,40 @@\n+import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\n import React from \"react\";\n import { vscButtonBackground } from \"..\";\n+import { ToolTip } from \"./Tooltip\";\n \n type ToggleSwitchProps = {\n   isToggled: boolean;\n   onToggle: () => void;\n   text: string;\n   size?: number;\n+  onWarningText?: string;",
        "comment_created_at": "2025-05-14T21:06:13+00:00",
        "comment_author": "Patrick-Erichsen",
        "comment_body": "I would lean towards a more generic `warningItem` prop here to enable more flexibility for the consuming component to use whatever it wants. \r\n\r\nAlthough you could make the argument that we actually want to limit variability here and limit it to just the exclamation triangle, but in that case `onWarningText` isn't semantically clear to me since the \"on\" prefix is typically for event handlers, so I'd call it just `warningText`",
        "pr_file_module": null
      },
      {
        "comment_id": "2096223738",
        "repo_full_name": "continuedev/continue",
        "pr_number": 5657,
        "pr_file": "gui/src/components/gui/Switch.tsx",
        "discussion_id": "2089753660",
        "commented_code": "@@ -1,23 +1,40 @@\n+import { ExclamationTriangleIcon } from \"@heroicons/react/24/outline\";\n import React from \"react\";\n import { vscButtonBackground } from \"..\";\n+import { ToolTip } from \"./Tooltip\";\n \n type ToggleSwitchProps = {\n   isToggled: boolean;\n   onToggle: () => void;\n   text: string;\n   size?: number;\n+  onWarningText?: string;",
        "comment_created_at": "2025-05-19T17:44:46+00:00",
        "comment_author": "RomneyDa",
        "comment_body": "good point, changed to `showIftogged` comp passed",
        "pr_file_module": null
      }
    ]
  }
]