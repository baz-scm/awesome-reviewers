[
  {
    "discussion_id": "1277173639",
    "pr_number": 318,
    "pr_file": "continuedev/src/continuedev/core/sdk.py",
    "created_at": "2023-07-28T06:46:15+00:00",
    "commented_code": "path = await self._ensure_absolute_path(path)\n         return await self.run_step(FileSystemEditStep(edit=DeleteDirectory(path=path)))\n \n+    async def get_api_key(self, env_var: str) -> str:\n+        # TODO support error prompt dynamically set on env_var\n+        return await self.ide.getUserSecret(env_var)\n+",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "1277173639",
        "repo_full_name": "continuedev/continue",
        "pr_number": 318,
        "pr_file": "continuedev/src/continuedev/core/sdk.py",
        "discussion_id": "1277173639",
        "commented_code": "@@ -252,6 +198,10 @@ async def delete_directory(self, path: str):\n         path = await self._ensure_absolute_path(path)\n         return await self.run_step(FileSystemEditStep(edit=DeleteDirectory(path=path)))\n \n+    async def get_api_key(self, env_var: str) -> str:\n+        # TODO support error prompt dynamically set on env_var\n+        return await self.ide.getUserSecret(env_var)\n+",
        "comment_created_at": "2023-07-28T06:46:15+00:00",
        "comment_author": "sestinj",
        "comment_body": "I think it's okay to just use get_user_secret here, though I see why you'd want to abstract over the prompt (is this what the TODO means?). If you do that, it might make sense for `get_api_key` to live inside the Model class.",
        "pr_file_module": null
      },
      {
        "comment_id": "1277997996",
        "repo_full_name": "continuedev/continue",
        "pr_number": 318,
        "pr_file": "continuedev/src/continuedev/core/sdk.py",
        "discussion_id": "1277173639",
        "commented_code": "@@ -252,6 +198,10 @@ async def delete_directory(self, path: str):\n         path = await self._ensure_absolute_path(path)\n         return await self.run_step(FileSystemEditStep(edit=DeleteDirectory(path=path)))\n \n+    async def get_api_key(self, env_var: str) -> str:\n+        # TODO support error prompt dynamically set on env_var\n+        return await self.ide.getUserSecret(env_var)\n+",
        "comment_created_at": "2023-07-28T19:16:31+00:00",
        "comment_author": "lun-4",
        "comment_body": "I noticed the `prompt` parameter was not used on `get_user_secret`, even though we pass it when we did api key verification on `Models`, so I thought I'd set a \"default\" prompt if the secret is missing: that one being `f'Please add your {env_var} to the .env file'`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1277173682",
    "pr_number": 318,
    "pr_file": "continuedev/src/continuedev/core/sdk.py",
    "created_at": "2023-07-28T06:46:19+00:00",
    "commented_code": "))\n \n         sdk.models = await Models.create(sdk)\n+        await sdk.models.start()",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "1277173682",
        "repo_full_name": "continuedev/continue",
        "pr_number": 318,
        "pr_file": "continuedev/src/continuedev/core/sdk.py",
        "discussion_id": "1277173682",
        "commented_code": "@@ -174,6 +119,7 @@ async def create(cls, autopilot: Autopilot) -> \"ContinueSDK\":\n             ))\n \n         sdk.models = await Models.create(sdk)\n+        await sdk.models.start()",
        "comment_created_at": "2023-07-28T06:46:19+00:00",
        "comment_author": "sestinj",
        "comment_body": "This could live inside of Models.create",
        "pr_file_module": null
      },
      {
        "comment_id": "1278220209",
        "repo_full_name": "continuedev/continue",
        "pr_number": 318,
        "pr_file": "continuedev/src/continuedev/core/sdk.py",
        "discussion_id": "1277173682",
        "commented_code": "@@ -174,6 +119,7 @@ async def create(cls, autopilot: Autopilot) -> \"ContinueSDK\":\n             ))\n \n         sdk.models = await Models.create(sdk)\n+        await sdk.models.start()",
        "comment_created_at": "2023-07-29T02:57:57+00:00",
        "comment_author": "lun-4",
        "comment_body": "as `Models` are now instantiated from config due to model roles, I don't think this is needed -- latest draft changes these lines to do async start",
        "pr_file_module": null
      }
    ]
  }
]