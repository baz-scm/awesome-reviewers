[
  {
    "discussion_id": "2208983912",
    "pr_number": 6646,
    "pr_file": "packages/continue-sdk/python/api/docs/DefaultApi.md",
    "created_at": "2025-07-16T01:02:19+00:00",
    "commented_code": "All URIs are relative to *https://api.continue.dev*\n \n-| Method                                               | HTTP request                 | Description             |\n-| ---------------------------------------------------- | ---------------------------- | ----------------------- |\n-| [**list_assistants**](DefaultApi.md#list_assistants) | **GET** /ide/list-assistants | List assistants for IDE |\n+Method | HTTP request | Description\n+------------- | ------------- | -------------\n+[**get_assistant**](DefaultApi.md#get_assistant) | **GET** /ide/get-assistant/{ownerSlug}/{packageSlug} | Get a specific assistant by slug\n+[**get_free_trial_status**](DefaultApi.md#get_free_trial_status) | **GET** /ide/free-trial-status | Get free trial status for user\n+[**get_models_add_on_checkout_url**](DefaultApi.md#get_models_add_on_checkout_url) | **GET** /ide/get-models-add-on-checkout-url | Get Stripe checkout URL for models add-on\n+[**get_policy**](DefaultApi.md#get_policy) | **GET** /ide/policy | Get organization policy\n+[**list_assistant_full_slugs**](DefaultApi.md#list_assistant_full_slugs) | **GET** /ide/list-assistant-full-slugs | List assistant full slugs (currently returns 429)\n+[**list_assistants**](DefaultApi.md#list_assistants) | **GET** /ide/list-assistants | List assistants for IDE\n+[**list_organizations**](DefaultApi.md#list_organizations) | **GET** /ide/list-organizations | List organizations for user\n+[**sync_secrets**](DefaultApi.md#sync_secrets) | **POST** /ide/sync-secrets | Synchronize secrets for user\n \n-# **list_assistants**\n \n+# **get_assistant**\n+> GetAssistant200Response get_assistant(owner_slug, package_slug, always_use_proxy=always_use_proxy, organization_id=organization_id)\n+\n+Get a specific assistant by slug\n+\n+Returns a single assistant configuration by its owner and package slug.\n+This endpoint is useful when you need to retrieve or refresh a specific assistant\n+without fetching the entire list.\n+\n+\n+### Example\n+\n+* Bearer Authentication (apiKeyAuth):\n+\n+```python\n+import openapi_client\n+from openapi_client.models.get_assistant200_response import GetAssistant200Response\n+from openapi_client.rest import ApiException\n+from pprint import pprint\n+\n+# Defining the host is optional and defaults to https://api.continue.dev\n+# See configuration.py for a list of all supported configuration parameters.\n+configuration = openapi_client.Configuration(\n+    host = \"https://api.continue.dev\"\n+)\n+\n+# The client must configure the authentication and authorization parameters\n+# in accordance with the API server security policy.\n+# Examples for each auth method are provided below, use the example that\n+# satisfies your auth use case.\n+\n+# Configure Bearer authorization: apiKeyAuth\n+configuration = openapi_client.Configuration(\n+    access_token = os.environ[\"BEARER_TOKEN\"]",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "2208983912",
        "repo_full_name": "continuedev/continue",
        "pr_number": 6646,
        "pr_file": "packages/continue-sdk/python/api/docs/DefaultApi.md",
        "discussion_id": "2208983912",
        "commented_code": "@@ -2,12 +2,421 @@\n \n All URIs are relative to *https://api.continue.dev*\n \n-| Method                                               | HTTP request                 | Description             |\n-| ---------------------------------------------------- | ---------------------------- | ----------------------- |\n-| [**list_assistants**](DefaultApi.md#list_assistants) | **GET** /ide/list-assistants | List assistants for IDE |\n+Method | HTTP request | Description\n+------------- | ------------- | -------------\n+[**get_assistant**](DefaultApi.md#get_assistant) | **GET** /ide/get-assistant/{ownerSlug}/{packageSlug} | Get a specific assistant by slug\n+[**get_free_trial_status**](DefaultApi.md#get_free_trial_status) | **GET** /ide/free-trial-status | Get free trial status for user\n+[**get_models_add_on_checkout_url**](DefaultApi.md#get_models_add_on_checkout_url) | **GET** /ide/get-models-add-on-checkout-url | Get Stripe checkout URL for models add-on\n+[**get_policy**](DefaultApi.md#get_policy) | **GET** /ide/policy | Get organization policy\n+[**list_assistant_full_slugs**](DefaultApi.md#list_assistant_full_slugs) | **GET** /ide/list-assistant-full-slugs | List assistant full slugs (currently returns 429)\n+[**list_assistants**](DefaultApi.md#list_assistants) | **GET** /ide/list-assistants | List assistants for IDE\n+[**list_organizations**](DefaultApi.md#list_organizations) | **GET** /ide/list-organizations | List organizations for user\n+[**sync_secrets**](DefaultApi.md#sync_secrets) | **POST** /ide/sync-secrets | Synchronize secrets for user\n \n-# **list_assistants**\n \n+# **get_assistant**\n+> GetAssistant200Response get_assistant(owner_slug, package_slug, always_use_proxy=always_use_proxy, organization_id=organization_id)\n+\n+Get a specific assistant by slug\n+\n+Returns a single assistant configuration by its owner and package slug.\n+This endpoint is useful when you need to retrieve or refresh a specific assistant\n+without fetching the entire list.\n+\n+\n+### Example\n+\n+* Bearer Authentication (apiKeyAuth):\n+\n+```python\n+import openapi_client\n+from openapi_client.models.get_assistant200_response import GetAssistant200Response\n+from openapi_client.rest import ApiException\n+from pprint import pprint\n+\n+# Defining the host is optional and defaults to https://api.continue.dev\n+# See configuration.py for a list of all supported configuration parameters.\n+configuration = openapi_client.Configuration(\n+    host = \"https://api.continue.dev\"\n+)\n+\n+# The client must configure the authentication and authorization parameters\n+# in accordance with the API server security policy.\n+# Examples for each auth method are provided below, use the example that\n+# satisfies your auth use case.\n+\n+# Configure Bearer authorization: apiKeyAuth\n+configuration = openapi_client.Configuration(\n+    access_token = os.environ[\"BEARER_TOKEN\"]",
        "comment_created_at": "2025-07-16T01:02:19+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":9,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"\\\\+.*os.environ\\\\[\\\\\\\"BEARER_TOKEN\\\\\\\"\\\\]\\\" -n -R\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"access_token = os.environ\\\\[\\\" -n packages/continue-sdk/python/api/docs/DefaultApi.md\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"sed -n '30,70p' packages/continue-sdk/python/api/docs/DefaultApi.md\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"access_token = os.environ\\\" packages/continue-sdk/python/api/docs/DefaultApi.md | head -n 5\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"always_use_proxy_example\\\" packages/continue-sdk/python/api/docs/DefaultApi.md | head\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"access_token = os.environ\\\\[\\\\\\\"BEARER_TOKEN\\\\\\\"\\\\]\\\" packages/continue-sdk/python/api/docs/DefaultApi.md | head -n 1\"},\"toolName\":\"executeCommand\"}]}]} -->\nThe example references os.environ but the snippet never imports the os module, so copying the code as-is raises NameError.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1803631239",
    "pr_number": 2537,
    "pr_file": "docs/docs/customize/model-providers/top-level/azure.md",
    "created_at": "2024-10-16T18:47:56+00:00",
    "commented_code": "```json title=\"config.json\"\n \"models\": [{\n     \"title\": \"GPT-4o\",\n-    \"provider\": \"azure\",\n+    \"provider\": \"openai\",                    // As of Oct 15, \"azure\" isn't recognized",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "1803631239",
        "repo_full_name": "continuedev/continue",
        "pr_number": 2537,
        "pr_file": "docs/docs/customize/model-providers/top-level/azure.md",
        "discussion_id": "1803631239",
        "commented_code": "@@ -10,13 +10,13 @@ We recommend configuring **GPT-4o** as your chat model.\n ```json title=\"config.json\"\n \"models\": [{\n     \"title\": \"GPT-4o\",\n-    \"provider\": \"azure\",\n+    \"provider\": \"openai\",                    // As of Oct 15, \"azure\" isn't recognized",
        "comment_created_at": "2024-10-16T18:47:56+00:00",
        "comment_author": "sestinj",
        "comment_body": "Can you share what you mean by it not being recognized? As far as I know it is still listed in the [config schema](https://github.com/continuedev/continue/blob/main/extensions/vscode/config_schema.json#L191-L192)",
        "pr_file_module": null
      },
      {
        "comment_id": "1803773099",
        "repo_full_name": "continuedev/continue",
        "pr_number": 2537,
        "pr_file": "docs/docs/customize/model-providers/top-level/azure.md",
        "discussion_id": "1803631239",
        "commented_code": "@@ -10,13 +10,13 @@ We recommend configuring **GPT-4o** as your chat model.\n ```json title=\"config.json\"\n \"models\": [{\n     \"title\": \"GPT-4o\",\n-    \"provider\": \"azure\",\n+    \"provider\": \"openai\",                    // As of Oct 15, \"azure\" isn't recognized",
        "comment_created_at": "2024-10-16T20:40:39+00:00",
        "comment_author": "ctwardy",
        "comment_body": "When we use \"azure\" for provider, Continue generates the wrong URL, by using `model` instead of `engine`.  \r\nWhen we use \"openai\", it gets it right.\r\nBefore this week in stable, \"azure\" also worked.  (Before last week in pre-release.)",
        "pr_file_module": null
      },
      {
        "comment_id": "1818001223",
        "repo_full_name": "continuedev/continue",
        "pr_number": 2537,
        "pr_file": "docs/docs/customize/model-providers/top-level/azure.md",
        "discussion_id": "1803631239",
        "commented_code": "@@ -10,13 +10,13 @@ We recommend configuring **GPT-4o** as your chat model.\n ```json title=\"config.json\"\n \"models\": [{\n     \"title\": \"GPT-4o\",\n-    \"provider\": \"azure\",\n+    \"provider\": \"openai\",                    // As of Oct 15, \"azure\" isn't recognized",
        "comment_created_at": "2024-10-27T07:31:46+00:00",
        "comment_author": "sestinj",
        "comment_body": "Ok this sounds like a really bad bug then, not quite just something we should cover up in the docs. Would you mind sharing an example config you're having problems with?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1706197158",
    "pr_number": 1948,
    "pr_file": "docs/docs/customization/slash-commands.md",
    "created_at": "2024-08-06T23:02:22+00:00",
    "commented_code": "```json\n {\n   \"name\": \"commit\",\n-  \"description\": \"Generate a commit message for the current changes\"\n+  \"description\": \"Generate a commit message for the current changes\",",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "1706197158",
        "repo_full_name": "continuedev/continue",
        "pr_number": 1948,
        "pr_file": "docs/docs/customization/slash-commands.md",
        "discussion_id": "1706197158",
        "commented_code": "@@ -68,7 +68,8 @@ Shows the LLM your current git diff and asks it to generate a commit message.\n ```json\n {\n   \"name\": \"commit\",\n-  \"description\": \"Generate a commit message for the current changes\"\n+  \"description\": \"Generate a commit message for the current changes\",",
        "comment_created_at": "2024-08-06T23:02:22+00:00",
        "comment_author": "Patrick-Erichsen",
        "comment_body": "```suggestion\r\n  \"description\": \"Generate a commit message for staged changes\",\r\n  \"params\": { \"includeUnstaged\": true }\r\n```\r\n\r\nAlso, I think making a note in the text above this JSON block that the default behavior is to ignore unstaged changes would be helpful.\r\n\r\nShows the LLM a `git diff` of your current staged changes and asks it to generate a commit message. \r\n\r\n> If `includeUnstaged` is set to true, then unstaged changes are also included in the prompt, otherwise only staged changes are included.\"",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1821803293",
    "pr_number": 2732,
    "pr_file": "docs/docs/customize/config.md",
    "created_at": "2024-10-30T03:19:19+00:00",
    "commented_code": "+---\n+title: Configuration\n+description: Continue configuration\n+keywords: [config, config_schema.json, json]\n+sidebar_position: 2\n+---\n+\n+# Continue Configuration\n+\n+Continue can be deeply customized. User-level configuration is stored and can be edited in your home directory in [`config.json`](#configjson):\n+\n+- `~/.continue/config.json` (MacOS / Linux)\n+- `%USERPROFILE%\\.continue\\config.json` (Windows)\n+\n+To open `config.json`, you can click the \"gear\" icon in the bottom right corner of the Continue Chat sidebar. When editing this file, you can see the available options through IntelliSense as you type, or check the reference below.",
    "repo_full_name": "continuedev/continue",
    "discussion_comments": [
      {
        "comment_id": "1821803293",
        "repo_full_name": "continuedev/continue",
        "pr_number": 2732,
        "pr_file": "docs/docs/customize/config.md",
        "discussion_id": "1821803293",
        "commented_code": "@@ -0,0 +1,534 @@\n+---\n+title: Configuration\n+description: Continue configuration\n+keywords: [config, config_schema.json, json]\n+sidebar_position: 2\n+---\n+\n+# Continue Configuration\n+\n+Continue can be deeply customized. User-level configuration is stored and can be edited in your home directory in [`config.json`](#configjson):\n+\n+- `~/.continue/config.json` (MacOS / Linux)\n+- `%USERPROFILE%\\.continue\\config.json` (Windows)\n+\n+To open `config.json`, you can click the \"gear\" icon in the bottom right corner of the Continue Chat sidebar. When editing this file, you can see the available options through IntelliSense as you type, or check the reference below.",
        "comment_created_at": "2024-10-30T03:19:19+00:00",
        "comment_author": "Patrick-Erichsen",
        "comment_body": "```suggestion\r\nTo open `config.json`, you can click the \"gear\" icon in the bottom right corner of the Continue Chat sidebar. When editing this file, you can see the available options through autocomplete hints as you type, or check the reference below.\r\n```\r\n\r\nThe wording of this sounds good but `IntelliSense` is a VS Code specific term. ",
        "pr_file_module": null
      }
    ]
  }
]