[
  {
    "discussion_id": "2225435172",
    "pr_number": 149307,
    "pr_file": "tests/components/miele/snapshots/test_services.ambr",
    "created_at": "2025-07-23T12:31:00+00:00",
    "commented_code": "+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': '''\n+      [\n+        {\n+          \"programId\": 146,\n+          \"program\": \"QuickPowerWash\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 123,\n+          \"program\": \"Dark garments / Denim\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 190,",
    "repo_full_name": "home-assistant/core",
    "discussion_comments": [
      {
        "comment_id": "2225435172",
        "repo_full_name": "home-assistant/core",
        "pr_number": 149307,
        "pr_file": "tests/components/miele/snapshots/test_services.ambr",
        "discussion_id": "2225435172",
        "commented_code": "@@ -0,0 +1,125 @@\n+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': '''\n+      [\n+        {\n+          \"programId\": 146,\n+          \"program\": \"QuickPowerWash\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 123,\n+          \"program\": \"Dark garments / Denim\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 190,",
        "comment_created_at": "2025-07-23T12:31:00+00:00",
        "comment_author": "joostlek",
        "comment_body": "currently this is one big string if I understand correctly. Can we make the response better and return proper JSON and use snake_case for fields. It would also be nice if we can have a few with parameters so the tests also test how that would look",
        "pr_file_module": null
      },
      {
        "comment_id": "2225579569",
        "repo_full_name": "home-assistant/core",
        "pr_number": 149307,
        "pr_file": "tests/components/miele/snapshots/test_services.ambr",
        "discussion_id": "2225435172",
        "commented_code": "@@ -0,0 +1,125 @@\n+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': '''\n+      [\n+        {\n+          \"programId\": 146,\n+          \"program\": \"QuickPowerWash\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 123,\n+          \"program\": \"Dark garments / Denim\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 190,",
        "comment_created_at": "2025-07-23T13:15:52+00:00",
        "comment_author": "astrandb",
        "comment_body": "This is how it looks in the snapshot. The API returns a json (`return await res.json()`) and it looks perfectly nice in developer tools.\nThe received data is displayed unaltered. I am a bit reluctant to translate the received keys to snake case as it can be a maintenance problem. Miele don't flag when they make changes in the API. I can put a note in the docs on the need for changing programId to program_id if using yaml mode.\n\nI will add a program entry for an oven with parameters and rename the fixture data file to program-test instead of washing-mashine.",
        "pr_file_module": null
      },
      {
        "comment_id": "2225630337",
        "repo_full_name": "home-assistant/core",
        "pr_number": 149307,
        "pr_file": "tests/components/miele/snapshots/test_services.ambr",
        "discussion_id": "2225435172",
        "commented_code": "@@ -0,0 +1,125 @@\n+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': '''\n+      [\n+        {\n+          \"programId\": 146,\n+          \"program\": \"QuickPowerWash\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 123,\n+          \"program\": \"Dark garments / Denim\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 190,",
        "comment_created_at": "2025-07-23T13:31:49+00:00",
        "comment_author": "joostlek",
        "comment_body": "The thing with service responses is, is that we should not break them, because automations might depend on them. So if they don't flag when their API changes, we should add an extra translation layer to avoid breaking this in the future and have the schema in our control",
        "pr_file_module": null
      },
      {
        "comment_id": "2228134933",
        "repo_full_name": "home-assistant/core",
        "pr_number": 149307,
        "pr_file": "tests/components/miele/snapshots/test_services.ambr",
        "discussion_id": "2225435172",
        "commented_code": "@@ -0,0 +1,125 @@\n+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': '''\n+      [\n+        {\n+          \"programId\": 146,\n+          \"program\": \"QuickPowerWash\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 123,\n+          \"program\": \"Dark garments / Denim\",\n+          \"parameters\": {}\n+        },\n+        {\n+          \"programId\": 190,",
        "comment_created_at": "2025-07-24T10:35:07+00:00",
        "comment_author": "astrandb",
        "comment_body": "Converting to proper JSON and use snakecase where appropriate.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2236875748",
    "pr_number": 149307,
    "pr_file": "tests/components/miele/snapshots/test_services.ambr",
    "created_at": "2025-07-28T15:06:39+00:00",
    "commented_code": "+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': list([\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Cottons',\n+        'program_id': 1,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'QuickPowerWash',\n+        'program_id': 146,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Dark garments / Denim',\n+        'program_id': 123,\n+      }),\n+      dict({\n+        'parameters': dict({\n+          'duration': dict({\n+            'mandatory': True,\n+            'max': list([\n+              12,\n+              0,\n+            ]),\n+            'min': list([\n+              0,\n+              1,\n+            ]),",
    "repo_full_name": "home-assistant/core",
    "discussion_comments": [
      {
        "comment_id": "2236875748",
        "repo_full_name": "home-assistant/core",
        "pr_number": 149307,
        "pr_file": "tests/components/miele/snapshots/test_services.ambr",
        "discussion_id": "2236875748",
        "commented_code": "@@ -0,0 +1,48 @@\n+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': list([\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Cottons',\n+        'program_id': 1,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'QuickPowerWash',\n+        'program_id': 146,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Dark garments / Denim',\n+        'program_id': 123,\n+      }),\n+      dict({\n+        'parameters': dict({\n+          'duration': dict({\n+            'mandatory': True,\n+            'max': list([\n+              12,\n+              0,\n+            ]),\n+            'min': list([\n+              0,\n+              1,\n+            ]),",
        "comment_created_at": "2025-07-28T15:06:39+00:00",
        "comment_author": "joostlek",
        "comment_body": "would it make sense to add the extra context like hours and minutes here as well?",
        "pr_file_module": null
      },
      {
        "comment_id": "2236926076",
        "repo_full_name": "home-assistant/core",
        "pr_number": 149307,
        "pr_file": "tests/components/miele/snapshots/test_services.ambr",
        "discussion_id": "2236875748",
        "commented_code": "@@ -0,0 +1,48 @@\n+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': list([\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Cottons',\n+        'program_id': 1,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'QuickPowerWash',\n+        'program_id': 146,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Dark garments / Denim',\n+        'program_id': 123,\n+      }),\n+      dict({\n+        'parameters': dict({\n+          'duration': dict({\n+            'mandatory': True,\n+            'max': list([\n+              12,\n+              0,\n+            ]),\n+            'min': list([\n+              0,\n+              1,\n+            ]),",
        "comment_created_at": "2025-07-28T15:20:44+00:00",
        "comment_author": "astrandb",
        "comment_body": "I really dont know. This is how Miele represents duration across all endpoints in the API. Also in the startTime processAction (delayed start) which is another endpoint than set_program.\r\nIf we stick to this way of representing durations, we can refer to Miele's documentation for users that want to dive deep.",
        "pr_file_module": null
      },
      {
        "comment_id": "2236951135",
        "repo_full_name": "home-assistant/core",
        "pr_number": 149307,
        "pr_file": "tests/components/miele/snapshots/test_services.ambr",
        "discussion_id": "2236875748",
        "commented_code": "@@ -0,0 +1,48 @@\n+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': list([\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Cottons',\n+        'program_id': 1,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'QuickPowerWash',\n+        'program_id': 146,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Dark garments / Denim',\n+        'program_id': 123,\n+      }),\n+      dict({\n+        'parameters': dict({\n+          'duration': dict({\n+            'mandatory': True,\n+            'max': list([\n+              12,\n+              0,\n+            ]),\n+            'min': list([\n+              0,\n+              1,\n+            ]),",
        "comment_created_at": "2025-07-28T15:27:22+00:00",
        "comment_author": "joostlek",
        "comment_body": "Right, but for super users it might make sense what [12, 0] mean, while for normal users it does not, so I would argue that having it in a dict with `hours` and `minutes` as key would clear this up and make this data consumable without any external information, while for the super users, they just have to use `[\"hours\"]` instead of `[0]`",
        "pr_file_module": null
      },
      {
        "comment_id": "2236964219",
        "repo_full_name": "home-assistant/core",
        "pr_number": 149307,
        "pr_file": "tests/components/miele/snapshots/test_services.ambr",
        "discussion_id": "2236875748",
        "commented_code": "@@ -0,0 +1,48 @@\n+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': list([\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Cottons',\n+        'program_id': 1,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'QuickPowerWash',\n+        'program_id': 146,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Dark garments / Denim',\n+        'program_id': 123,\n+      }),\n+      dict({\n+        'parameters': dict({\n+          'duration': dict({\n+            'mandatory': True,\n+            'max': list([\n+              12,\n+              0,\n+            ]),\n+            'min': list([\n+              0,\n+              1,\n+            ]),",
        "comment_created_at": "2025-07-28T15:30:43+00:00",
        "comment_author": "astrandb",
        "comment_body": "Or if we are going to transform things, we could also calculate minutes as (hours*60+minutes) and present it as a number with the key \"minutes\"",
        "pr_file_module": null
      },
      {
        "comment_id": "2236985996",
        "repo_full_name": "home-assistant/core",
        "pr_number": 149307,
        "pr_file": "tests/components/miele/snapshots/test_services.ambr",
        "discussion_id": "2236875748",
        "commented_code": "@@ -0,0 +1,48 @@\n+# serializer version: 1\n+# name: test_services_with_response\n+  dict({\n+    'programs': list([\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Cottons',\n+        'program_id': 1,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'QuickPowerWash',\n+        'program_id': 146,\n+      }),\n+      dict({\n+        'parameters': dict({\n+        }),\n+        'program': 'Dark garments / Denim',\n+        'program_id': 123,\n+      }),\n+      dict({\n+        'parameters': dict({\n+          'duration': dict({\n+            'mandatory': True,\n+            'max': list([\n+              12,\n+              0,\n+            ]),\n+            'min': list([\n+              0,\n+              1,\n+            ]),",
        "comment_created_at": "2025-07-28T15:34:41+00:00",
        "comment_author": "joostlek",
        "comment_body": "That would work for me as well, but then you are for sure deviating from the original format. Like, I don't know where this applies, but if you have multiple 5+ hour programs, seeing 345 always makes me calculate what that means, while 5 hours and 45 minutes already gives me this answer.\r\n\r\nBut up to you :)",
        "pr_file_module": null
      }
    ]
  }
]