[
  {
    "discussion_id": "1779913521",
    "pr_number": 12042,
    "pr_file": "packages/runtime-core/src/component.ts",
    "created_at": "2024-09-29T05:38:18+00:00",
    "commented_code": "asyncDep: null,\n     asyncResolved: false,\n \n+    keepAliveEffect: [],\n+\n     // lifecycle hooks\n     // not using enums here because it results in computed properties\n     isMounted: false,\n     isUnmounted: false,\n+    isDeactive: false,",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1779913521",
        "repo_full_name": "vuejs/core",
        "pr_number": 12042,
        "pr_file": "packages/runtime-core/src/component.ts",
        "discussion_id": "1779913521",
        "commented_code": "@@ -669,10 +672,13 @@ export function createComponentInstance(\n     asyncDep: null,\n     asyncResolved: false,\n \n+    keepAliveEffect: [],\n+\n     // lifecycle hooks\n     // not using enums here because it results in computed properties\n     isMounted: false,\n     isUnmounted: false,\n+    isDeactive: false,",
        "comment_created_at": "2024-09-29T05:38:18+00:00",
        "comment_author": "edison1105",
        "comment_body": "How about rename to `isActivated`?\r\nlike `isMounted` and `isUnmounted`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "725133972",
    "pr_number": 4704,
    "pr_file": "packages/runtime-core/src/compat/renderFn.ts",
    "created_at": "2021-10-08T16:02:45+00:00",
    "commented_code": "normalizeChildren,\n   VNode,\n   VNodeArrayChildren,\n-  VNodeProps\n+  VNodeProps,\n+  VKey",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "725133972",
        "repo_full_name": "vuejs/core",
        "pr_number": 4704,
        "pr_file": "packages/runtime-core/src/compat/renderFn.ts",
        "discussion_id": "725133972",
        "commented_code": "@@ -30,7 +30,8 @@ import {\n   normalizeChildren,\n   VNode,\n   VNodeArrayChildren,\n-  VNodeProps\n+  VNodeProps,\n+  VKey",
        "comment_created_at": "2021-10-08T16:02:45+00:00",
        "comment_author": "yyx990803",
        "comment_body": "We should rename this to `VNodeKey` to be consistent.",
        "pr_file_module": null
      },
      {
        "comment_id": "725415739",
        "repo_full_name": "vuejs/core",
        "pr_number": 4704,
        "pr_file": "packages/runtime-core/src/compat/renderFn.ts",
        "discussion_id": "725133972",
        "commented_code": "@@ -30,7 +30,8 @@ import {\n   normalizeChildren,\n   VNode,\n   VNodeArrayChildren,\n-  VNodeProps\n+  VNodeProps,\n+  VKey",
        "comment_created_at": "2021-10-09T02:09:27+00:00",
        "comment_author": "danranVm",
        "comment_body": "ok",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1649821703",
    "pr_number": 8596,
    "pr_file": "packages/compiler-sfc/src/style/pluginScoped.ts",
    "created_at": "2024-06-23T00:12:57+00:00",
    "commented_code": "const animationNameRE = /^(-\\w+-)?animation-name$/\n const animationRE = /^(-\\w+-)?animation$/\n+type pluginParam = { id: string; filename?: string }",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1649821703",
        "repo_full_name": "vuejs/core",
        "pr_number": 8596,
        "pr_file": "packages/compiler-sfc/src/style/pluginScoped.ts",
        "discussion_id": "1649821703",
        "commented_code": "@@ -4,15 +4,18 @@ import { warn } from '../warn'\n \n const animationNameRE = /^(-\\w+-)?animation-name$/\n const animationRE = /^(-\\w+-)?animation$/\n+type pluginParam = { id: string; filename?: string }",
        "comment_created_at": "2024-06-23T00:12:57+00:00",
        "comment_author": "skirtles-code",
        "comment_body": "Type names usually begin with uppercase letters.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1400431888",
    "pr_number": 9651,
    "pr_file": "packages/reactivity/src/effect.ts",
    "created_at": "2023-11-21T11:25:59+00:00",
    "commented_code": "recordEffectScope(this, scope)\n   }\n \n+  pause() {\n+    this._isPaused = true\n+  }\n+\n+  resume(runOnce = false) {",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1400431888",
        "repo_full_name": "vuejs/core",
        "pr_number": 9651,
        "pr_file": "packages/reactivity/src/effect.ts",
        "discussion_id": "1400431888",
        "commented_code": "@@ -83,7 +87,24 @@ export class ReactiveEffect<T = any> {\n     recordEffectScope(this, scope)\n   }\n \n+  pause() {\n+    this._isPaused = true\n+  }\n+\n+  resume(runOnce = false) {",
        "comment_created_at": "2023-11-21T11:25:59+00:00",
        "comment_author": "antfu",
        "comment_body": "```suggestion\r\n  resume(immediate = false) {\r\n```\r\n\r\nI found that `runOnce` is a but confusing, maybe `immediate`? I think it's better to have JSDocs to explain things",
        "pr_file_module": null
      },
      {
        "comment_id": "1400434348",
        "repo_full_name": "vuejs/core",
        "pr_number": 9651,
        "pr_file": "packages/reactivity/src/effect.ts",
        "discussion_id": "1400431888",
        "commented_code": "@@ -83,7 +87,24 @@ export class ReactiveEffect<T = any> {\n     recordEffectScope(this, scope)\n   }\n \n+  pause() {\n+    this._isPaused = true\n+  }\n+\n+  resume(runOnce = false) {",
        "comment_created_at": "2023-11-21T11:28:08+00:00",
        "comment_author": "Alfred-Skyblue",
        "comment_body": "Yes your suggestion is perfect, I will modify it immediately.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "697892436",
    "pr_number": 4465,
    "pr_file": "packages/runtime-core/src/component.ts",
    "created_at": "2021-08-28T16:51:59+00:00",
    "commented_code": "*/\n export interface ComponentCustomProps {}\n \n+/**\n+ * For globally defined Directives\n+ * Here is an example of adding a directive `VTooltip` as global directive:\n+ *\n+ * @example\n+ * ```ts\n+ * import VTooltip from 'v-tooltip'\n+ *\n+ * declare module '@vue/runtime-core' {\n+ *   interface GlobalDirectives {\n+ *     VTooltip",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "697892436",
        "repo_full_name": "vuejs/core",
        "pr_number": 4465,
        "pr_file": "packages/runtime-core/src/component.ts",
        "discussion_id": "697892436",
        "commented_code": "@@ -70,6 +71,40 @@ export type Data = Record<string, unknown>\n  */\n export interface ComponentCustomProps {}\n \n+/**\n+ * For globally defined Directives\n+ * Here is an example of adding a directive `VTooltip` as global directive:\n+ *\n+ * @example\n+ * ```ts\n+ * import VTooltip from 'v-tooltip'\n+ *\n+ * declare module '@vue/runtime-core' {\n+ *   interface GlobalDirectives {\n+ *     VTooltip",
        "comment_created_at": "2021-08-28T16:51:59+00:00",
        "comment_author": "znck",
        "comment_body": "We should suggest using camelCase or kebab-case version of directive (without the v prefix); similar to local registration in component options. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "473344709",
    "pr_number": 1900,
    "pr_file": "packages/reactivity/src/computed.ts",
    "created_at": "2020-08-19T21:34:28+00:00",
    "commented_code": "set: ComputedSetter<T>\n }\n \n+class _ComputedRef<T> {",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "473344709",
        "repo_full_name": "vuejs/core",
        "pr_number": 1900,
        "pr_file": "packages/reactivity/src/computed.ts",
        "discussion_id": "473344709",
        "commented_code": "@@ -20,6 +20,50 @@ export interface WritableComputedOptions<T> {\n   set: ComputedSetter<T>\n }\n \n+class _ComputedRef<T> {",
        "comment_created_at": "2020-08-19T21:34:28+00:00",
        "comment_author": "yyx990803",
        "comment_body": "Instead of prefixing these internal classes with `_`, I prefer more explicit names like `ComputedRefImpl` or `ComputedRefConstructor`",
        "pr_file_module": null
      }
    ]
  }
]