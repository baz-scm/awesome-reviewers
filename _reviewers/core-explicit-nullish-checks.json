[
  {
    "discussion_id": "1063492346",
    "pr_number": 7475,
    "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
    "created_at": "2023-01-06T14:44:14+00:00",
    "commented_code": "if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if(vars[key]){",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1063492346",
        "repo_full_name": "vuejs/core",
        "pr_number": 7475,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1063492346",
        "commented_code": "@@ -80,7 +80,9 @@ function setVarsOnNode(el: Node, vars: Record<string, string>) {\n   if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if(vars[key]){",
        "comment_created_at": "2023-01-06T14:44:14+00:00",
        "comment_author": "roydukkey",
        "comment_body": "Just want to note this condition will prevent setting empty strings to the property.\n\nI think there is at least one use case where this might be preferred, as an empty string would be a valid value for a [`content`](https://developer.mozilla.org/en-US/docs/Web/CSS/content) property.",
        "pr_file_module": null
      },
      {
        "comment_id": "1063547732",
        "repo_full_name": "vuejs/core",
        "pr_number": 7475,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1063492346",
        "commented_code": "@@ -80,7 +80,9 @@ function setVarsOnNode(el: Node, vars: Record<string, string>) {\n   if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if(vars[key]){",
        "comment_created_at": "2023-01-06T15:45:03+00:00",
        "comment_author": "baiwusanyu-c",
        "comment_body": "I agree with your opinion \ud83d\ude0a",
        "pr_file_module": null
      },
      {
        "comment_id": "1125186527",
        "repo_full_name": "vuejs/core",
        "pr_number": 7475,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1063492346",
        "commented_code": "@@ -80,7 +80,9 @@ function setVarsOnNode(el: Node, vars: Record<string, string>) {\n   if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if(vars[key]){",
        "comment_created_at": "2023-03-04T01:08:29+00:00",
        "comment_author": "roydukkey",
        "comment_body": "Just want to make sure this comment is not holding up this PR. It's good since [91a2dc6](https://github.com/vuejs/core/pull/7475/commits/91a2dc623cd9b09db7c3227051ebb7e1c190c048), but there is no option for me to resolve this comment.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1064095385",
    "pr_number": 7475,
    "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
    "created_at": "2023-01-08T07:34:04+00:00",
    "commented_code": "if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if (vars[key] || vars[key] === '') {",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1064095385",
        "repo_full_name": "vuejs/core",
        "pr_number": 7475,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1064095385",
        "commented_code": "@@ -80,7 +80,9 @@ function setVarsOnNode(el: Node, vars: Record<string, string>) {\n   if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if (vars[key] || vars[key] === '') {",
        "comment_created_at": "2023-01-08T07:34:04+00:00",
        "comment_author": "sxzz",
        "comment_body": "```suggestion\r\n      if (vars[key] !== undefined && vars[key] !== null) {\r\n```\r\n\r\nConsider [this example](https://deploy-preview-7475--vue-sfc-playground.netlify.app/#eNqFkk9LxDAQxb/KkMsqmNSDItS6IIJnwWsutTvVSjoTknRlWfa7O0n3jwjLnsIkb+ZNf69b9ey9WU+oatXELgw+QcQ0+aWlYfQcErzw6KEPPMLCVLnI8oUlAEsdU0zgA/sIT7DCfiB8y9XVNgs6dhxqeE9hoE9Lu+tHS00124iBFAlH79qEuUpNsVq3bsInq3pmq5avzE1xPSmWdLoCmJvqQxdNzklbPs6L+tZFFFU5z8tuRXJ7fG6q47LqRs1w9Nh68x2ZBF/5Yrt/iFbVUG7ynQDLtVVfKflYV9UKveON9gHXA/7oh7uHe61FpWPfafHYfAaeaGUIkxv6jWm9r+TZhInSMKLBOOqPwD8Rg9hblY12AlgWOyR0PtDt36Bgt892DvVCoIVMDQXyhTiFpofOtTEKyU6WYkJKQnSG0kTHaSnd+Sjq6h/kMjCmjZunmeOMA1etI4+YvuTfqmGtPwZaXS3K6qbsucj7FS5iU+ao3S+fTASh)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1064153373",
    "pr_number": 7475,
    "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
    "created_at": "2023-01-08T14:35:59+00:00",
    "commented_code": "if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if (vars[key] !== undefined && vars[key] !== null) {",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1064153373",
        "repo_full_name": "vuejs/core",
        "pr_number": 7475,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1064153373",
        "commented_code": "@@ -80,7 +80,9 @@ function setVarsOnNode(el: Node, vars: Record<string, string>) {\n   if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if (vars[key] !== undefined && vars[key] !== null) {",
        "comment_created_at": "2023-01-08T14:35:59+00:00",
        "comment_author": "Justineo",
        "comment_body": "```suggestion\r\n      if (vars[key] != null) {\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1110980694",
        "repo_full_name": "vuejs/core",
        "pr_number": 7475,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1064153373",
        "commented_code": "@@ -80,7 +80,9 @@ function setVarsOnNode(el: Node, vars: Record<string, string>) {\n   if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if (vars[key] !== undefined && vars[key] !== null) {",
        "comment_created_at": "2023-02-18T10:48:05+00:00",
        "comment_author": "seahindeniz",
        "comment_body": "Actually, using the strict version of inequality operator is a common practice and a good idea. As a side affect, I just got confused by that too, it struct later on.\r\nTo increase readability, I'd like to suggest using the strict operator comparison",
        "pr_file_module": null
      },
      {
        "comment_id": "1111034341",
        "repo_full_name": "vuejs/core",
        "pr_number": 7475,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1064153373",
        "commented_code": "@@ -80,7 +80,9 @@ function setVarsOnNode(el: Node, vars: Record<string, string>) {\n   if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if (vars[key] !== undefined && vars[key] !== null) {",
        "comment_created_at": "2023-02-18T13:51:29+00:00",
        "comment_author": "Justineo",
        "comment_body": "This is a common special case for the strict equal rule to perform nullish checks.",
        "pr_file_module": null
      },
      {
        "comment_id": "1111220304",
        "repo_full_name": "vuejs/core",
        "pr_number": 7475,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1064153373",
        "commented_code": "@@ -80,7 +80,9 @@ function setVarsOnNode(el: Node, vars: Record<string, string>) {\n   if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if (vars[key] !== undefined && vars[key] !== null) {",
        "comment_created_at": "2023-02-19T11:45:18+00:00",
        "comment_author": "seahindeniz",
        "comment_body": "Yeah, it does. But it's not clear at first glance or even doesn't get understood if you don't know how it works, that's what I'm saying \ud83d\ude04 It creates a confusion and it should be avoided\r\nThere's even an [ESLint rule](https://eslint.org/docs/latest/rules/eqeqeq) that makes you forget about non-strict equality operators",
        "pr_file_module": null
      },
      {
        "comment_id": "1111710971",
        "repo_full_name": "vuejs/core",
        "pr_number": 7475,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1064153373",
        "commented_code": "@@ -80,7 +80,9 @@ function setVarsOnNode(el: Node, vars: Record<string, string>) {\n   if (el.nodeType === 1) {\n     const style = (el as HTMLElement).style\n     for (const key in vars) {\n-      style.setProperty(`--${key}`, vars[key])\n+      if (vars[key] !== undefined && vars[key] !== null) {",
        "comment_created_at": "2023-02-20T09:49:28+00:00",
        "comment_author": "Justineo",
        "comment_body": "> There's even an [ESLint rule](https://eslint.org/docs/latest/rules/eqeqeq) that makes you forget about non-strict equality operators\r\n\r\nBy \"common special case\" I mean there is an option for the `eqeqeq` rule that allows non-strict equality checks for `null`. And we are already using non-strict equality checks for `null` in other places in the Vue codebase so I think we should keep them consistent.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "888547704",
    "pr_number": 6012,
    "pr_file": "packages/runtime-dom/src/nodeOps.ts",
    "created_at": "2022-06-03T01:47:15+00:00",
    "commented_code": ";(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\n     }\n \n+    if (tag === 'option' && props && props.selected) {\n+      el.setAttribute('selected', '')\n+    }\n+\n+    if (tag === 'input' && props) {\n+      if (props.value) {",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "888547704",
        "repo_full_name": "vuejs/core",
        "pr_number": 6012,
        "pr_file": "packages/runtime-dom/src/nodeOps.ts",
        "discussion_id": "888547704",
        "commented_code": "@@ -27,6 +27,19 @@ export const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\n       ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\n     }\n \n+    if (tag === 'option' && props && props.selected) {\n+      el.setAttribute('selected', '')\n+    }\n+\n+    if (tag === 'input' && props) {\n+      if (props.value) {",
        "comment_created_at": "2022-06-03T01:47:15+00:00",
        "comment_author": "dsonet",
        "comment_body": "Should be (props.value != null), otherwise it gonna skip value 0.",
        "pr_file_module": null
      },
      {
        "comment_id": "888616453",
        "repo_full_name": "vuejs/core",
        "pr_number": 6012,
        "pr_file": "packages/runtime-dom/src/nodeOps.ts",
        "discussion_id": "888547704",
        "commented_code": "@@ -27,6 +27,19 @@ export const nodeOps: Omit<RendererOptions<Node, Element>, 'patchProp'> = {\n       ;(el as HTMLSelectElement).setAttribute('multiple', props.multiple)\n     }\n \n+    if (tag === 'option' && props && props.selected) {\n+      el.setAttribute('selected', '')\n+    }\n+\n+    if (tag === 'input' && props) {\n+      if (props.value) {",
        "comment_created_at": "2022-06-03T05:16:44+00:00",
        "comment_author": "zhmushan",
        "comment_body": "Good catch, thx!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1244786684",
    "pr_number": 8669,
    "pr_file": "packages/runtime-dom/src/directives/vModel.ts",
    "created_at": "2023-06-28T07:13:15+00:00",
    "commented_code": "},\n   // set value on mounted so it's after min/max for type=\"range\"\n   mounted(el, { value }) {\n-    el.value = value == null ? '' : value\n+    el.value = value === null ? '' : value",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1244786684",
        "repo_full_name": "vuejs/core",
        "pr_number": 8669,
        "pr_file": "packages/runtime-dom/src/directives/vModel.ts",
        "discussion_id": "1244786684",
        "commented_code": "@@ -75,7 +75,7 @@ export const vModelText: ModelDirective<\n   },\n   // set value on mounted so it's after min/max for type=\"range\"\n   mounted(el, { value }) {\n-    el.value = value == null ? '' : value\n+    el.value = value === null ? '' : value",
        "comment_created_at": "2023-06-28T07:13:15+00:00",
        "comment_author": "edison1105",
        "comment_body": "`value == null`: value can be `null` or `undefined`\r\n`value === null`: value must be `null`",
        "pr_file_module": null
      },
      {
        "comment_id": "1244795556",
        "repo_full_name": "vuejs/core",
        "pr_number": 8669,
        "pr_file": "packages/runtime-dom/src/directives/vModel.ts",
        "discussion_id": "1244786684",
        "commented_code": "@@ -75,7 +75,7 @@ export const vModelText: ModelDirective<\n   },\n   // set value on mounted so it's after min/max for type=\"range\"\n   mounted(el, { value }) {\n-    el.value = value == null ? '' : value\n+    el.value = value === null ? '' : value",
        "comment_created_at": "2023-06-28T07:21:15+00:00",
        "comment_author": "xiejun-net",
        "comment_body": "then (value === null || value === undefined)",
        "pr_file_module": null
      }
    ]
  }
]