[
  {
    "discussion_id": "711071702",
    "pr_number": 4619,
    "pr_file": "packages/runtime-core/src/apiCreateApp.ts",
    "created_at": "2021-09-17T13:47:54+00:00",
    "commented_code": "unmount() {\n         if (isMounted) {\n           render(null, app._container)\n+          pluginCleanupFns.map(fn => fn())",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "711071702",
        "repo_full_name": "vuejs/core",
        "pr_number": 4619,
        "pr_file": "packages/runtime-core/src/apiCreateApp.ts",
        "discussion_id": "711071702",
        "commented_code": "@@ -323,6 +332,7 @@ export function createAppAPI<HostElement>(\n       unmount() {\n         if (isMounted) {\n           render(null, app._container)\n+          pluginCleanupFns.map(fn => fn())",
        "comment_created_at": "2021-09-17T13:47:54+00:00",
        "comment_author": "edison1105",
        "comment_body": "Does it need to be wrapped in `try catch`? if `fn()` throw an exception, the following code will not be executed.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1697040264",
    "pr_number": 7265,
    "pr_file": "packages/reactivity/src/effectScope.ts",
    "created_at": "2024-07-30T14:12:07+00:00",
    "commented_code": "*/\n export function onScopeDispose(fn: () => void) {\n   if (activeEffectScope) {\n-    activeEffectScope.cleanups.push(fn)\n+    activeEffectScope.cleanups.push(() => {\n+      try {\n+        fn()\n+      } catch (e) {\n+        console.error(\n+          'An error occurred while executing a cleanup function:',\n+          e,\n+        )",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1697040264",
        "repo_full_name": "vuejs/core",
        "pr_number": 7265,
        "pr_file": "packages/reactivity/src/effectScope.ts",
        "discussion_id": "1697040264",
        "commented_code": "@@ -147,7 +149,16 @@ export function getCurrentScope() {\n  */\n export function onScopeDispose(fn: () => void) {\n   if (activeEffectScope) {\n-    activeEffectScope.cleanups.push(fn)\n+    activeEffectScope.cleanups.push(() => {\n+      try {\n+        fn()\n+      } catch (e) {\n+        console.error(\n+          'An error occurred while executing a cleanup function:',\n+          e,\n+        )",
        "comment_created_at": "2024-07-30T14:12:07+00:00",
        "comment_author": "skirtles-code",
        "comment_body": "This isn't what I had in mind when I suggested handling the error cases. I just meant putting the `resetTracking()` call in a `finally` block to ensure it always gets called. Perhaps there are more complete ways to handle errors, but that feels like it's out of scope for the tracking changes being proposed in this PR.\r\n\r\nThere are a couple of problems with the error handling being proposed here:\r\n\r\n1. This error message would be included in production builds, impacting bundle size. Error messages generally aren't included in production builds.\r\n2. Catching the errors will prevent them being handled by `app.config.errorHandler`.\r\n\r\nFor example, consider this Playground:\r\n\r\n- [Playground - `main`](https://play.vuejs.org/#eNp9UsFu2zAM/RVCO9gBAuWwnQon2NYF2HbYirZHXVyVSZTakiBRTYAg/15KrpO0KHowIL33SL9H6iD61li5jeJKmN67QHAAHbAl/OE9HGEVXA/Vc8JK2VdBJgZYzlrv5UAqq52NBIzA/Nyi5m+S2axkxcqsJYbgwu/WPnYYWFtLKduwjhOYL+CgLEDu5DqUnVvX1TKrYTPIqykUqbLHsWnvkqW6+sLnaiKm4tUSB2qiDsYTRKTkFyf/B8DVCjXdaedxCs6Wwy8TvYv4LvKYKmYJe72orNlEgWVItq7P7t82vGQAaBPcDizuoMSqK8JIFXcCOOZQ/DWzwTYb5gth7zseJd8AmodE5Cx8153RT3Mlhv9Hcp7diMV1hpvZoOKKZnYq58EQq8v8t9FZHk+xpIR2vTc82v+eDGdV4mo0q0TbdW73t2AUEk5HXG9QP32Ab+M+Y0rcBIwYnlGJE0e8OKSBXt79wz2fT2TvHlPH6k/IW+Q3kbLHQfYzlRdxoStu/5QlG7u+j8s9oY1jqGy0zLnoleAFX38S/Wz3q/xW6ng94vgCmoITDQ==)\r\n\r\nNotice that clicking the button triggers the `errorHandler`. Contrast that with how it behaves with this PR:\r\n\r\n- [Playground - this PR](https://deploy-preview-7265--vue-sfc-playground.netlify.app/#eNp9UsFu2zAM/RVCO9gBAuWwnQon2NYF2HbYirZHXVyVSZTakiBRTYAg/15KrpO0KHowIL33SL9H6iD61li5jeJKmN67QHAAHbAl/OE9HGEVXA/Vc8JK2VdBJgZYzlrv5UAqq52NBIzA/Nyi5m+S2axkxcqsJYbgwu/WPnYYWFtLKduwjhOYL+CgLEDu5DqUnVvX1TKrYTPIqykUqbLHsWnvkqW6+sLnaiKm4tUSB2qiDsYTRKTkFyf/B8DVCjXdaedxCs6Wwy8TvYv4LvKYKmYJe72orNlEgWVItq7P7t82vGQAaBPcDizuoMSqK8JIFXcCOOZQ/DWzwTYb5gth7zseJd8AmodE5Cx8153RT3Mlhv9Hcp7diMV1hpvZoOKKZnYq58EQq8v8t9FZHk+xpIR2vTc82v+eDGdV4mo0q0TbdW73t2AUEk5HXG9QP32Ab+M+Y0rcBIwYnlGJE0e8OKSBXt79wz2fT2TvHlPH6k/IW+Q3kbLHQfYzlRdxoStu/5QlG7u+j8s9oY1jqGy0zLnoleAFX38S/Wz3q/xW6ng94vgCmoITDQ==)\r\n\r\nI don't think this is desirable.",
        "pr_file_module": null
      },
      {
        "comment_id": "1722642852",
        "repo_full_name": "vuejs/core",
        "pr_number": 7265,
        "pr_file": "packages/reactivity/src/effectScope.ts",
        "discussion_id": "1697040264",
        "commented_code": "@@ -147,7 +149,16 @@ export function getCurrentScope() {\n  */\n export function onScopeDispose(fn: () => void) {\n   if (activeEffectScope) {\n-    activeEffectScope.cleanups.push(fn)\n+    activeEffectScope.cleanups.push(() => {\n+      try {\n+        fn()\n+      } catch (e) {\n+        console.error(\n+          'An error occurred while executing a cleanup function:',\n+          e,\n+        )",
        "comment_created_at": "2024-08-20T03:35:43+00:00",
        "comment_author": "edison1105",
        "comment_body": "I agree with @skirtles-code.\r\n",
        "pr_file_module": null
      }
    ]
  }
]