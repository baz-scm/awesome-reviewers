[
  {
    "discussion_id": "876468885",
    "pr_number": 5914,
    "pr_file": "packages/runtime-core/src/componentOptions.ts",
    "created_at": "2022-05-18T23:56:04+00:00",
    "commented_code": "extends?: Extends\n \n   // lifecycle\n-  beforeCreate?(): void\n-  created?(): void\n-  beforeMount?(): void\n-  mounted?(): void\n-  beforeUpdate?(): void\n-  updated?(): void\n-  activated?(): void\n-  deactivated?(): void\n+  beforeCreate?(): LifeCycleReturns",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "876468885",
        "repo_full_name": "vuejs/core",
        "pr_number": 5914,
        "pr_file": "packages/runtime-core/src/componentOptions.ts",
        "discussion_id": "876468885",
        "commented_code": "@@ -455,20 +457,20 @@ interface LegacyOptions<\n   extends?: Extends\n \n   // lifecycle\n-  beforeCreate?(): void\n-  created?(): void\n-  beforeMount?(): void\n-  mounted?(): void\n-  beforeUpdate?(): void\n-  updated?(): void\n-  activated?(): void\n-  deactivated?(): void\n+  beforeCreate?(): LifeCycleReturns",
        "comment_created_at": "2022-05-18T23:56:04+00:00",
        "comment_author": "yyx990803",
        "comment_body": "this should just be `any` since you can return anything from lifecycle hooks.",
        "pr_file_module": null
      },
      {
        "comment_id": "876530055",
        "repo_full_name": "vuejs/core",
        "pr_number": 5914,
        "pr_file": "packages/runtime-core/src/componentOptions.ts",
        "discussion_id": "876468885",
        "commented_code": "@@ -455,20 +457,20 @@ interface LegacyOptions<\n   extends?: Extends\n \n   // lifecycle\n-  beforeCreate?(): void\n-  created?(): void\n-  beforeMount?(): void\n-  mounted?(): void\n-  beforeUpdate?(): void\n-  updated?(): void\n-  activated?(): void\n-  deactivated?(): void\n+  beforeCreate?(): LifeCycleReturns",
        "comment_created_at": "2022-05-19T02:30:57+00:00",
        "comment_author": "liulinboyi",
        "comment_body": "> this should just be `any` since you can return anything from lifecycle hooks.\r\n\r\nI see. I will change it to `any`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1400428763",
    "pr_number": 9651,
    "pr_file": "packages/runtime-core/src/component.ts",
    "created_at": "2023-11-21T11:23:11+00:00",
    "commented_code": "subTree: null!, // will be set synchronously right after creation\n     effect: null!,\n     update: null!, // will be set synchronously right after creation\n-    scope: new EffectScope(true /* detached */),\n+    scope: new EffectScope(false, parent?.scope),",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1400428763",
        "repo_full_name": "vuejs/core",
        "pr_number": 9651,
        "pr_file": "packages/runtime-core/src/component.ts",
        "discussion_id": "1400428763",
        "commented_code": "@@ -502,7 +502,7 @@ export function createComponentInstance(\n     subTree: null!, // will be set synchronously right after creation\n     effect: null!,\n     update: null!, // will be set synchronously right after creation\n-    scope: new EffectScope(true /* detached */),\n+    scope: new EffectScope(false, parent?.scope),",
        "comment_created_at": "2023-11-21T11:23:11+00:00",
        "comment_author": "antfu",
        "comment_body": "Why change this? I remember it was set to false to improve the performance.",
        "pr_file_module": null
      },
      {
        "comment_id": "1400432868",
        "repo_full_name": "vuejs/core",
        "pr_number": 9651,
        "pr_file": "packages/runtime-core/src/component.ts",
        "discussion_id": "1400428763",
        "commented_code": "@@ -502,7 +502,7 @@ export function createComponentInstance(\n     subTree: null!, // will be set synchronously right after creation\n     effect: null!,\n     update: null!, // will be set synchronously right after creation\n-    scope: new EffectScope(true /* detached */),\n+    scope: new EffectScope(false, parent?.scope),",
        "comment_created_at": "2023-11-21T11:26:53+00:00",
        "comment_author": "Alfred-Skyblue",
        "comment_body": "When I invoke the `pause` method of the `EffectScope` in a component instance, I hope to pause all the `effects` in the child components. However, the `EffectScope` in the child components and the `EffectScope` in the parent component are in a detached state, causing the pause effect to apply only to the current component. Therefore, I establish an association here.",
        "pr_file_module": null
      },
      {
        "comment_id": "1411773769",
        "repo_full_name": "vuejs/core",
        "pr_number": 9651,
        "pr_file": "packages/runtime-core/src/component.ts",
        "discussion_id": "1400428763",
        "commented_code": "@@ -502,7 +502,7 @@ export function createComponentInstance(\n     subTree: null!, // will be set synchronously right after creation\n     effect: null!,\n     update: null!, // will be set synchronously right after creation\n-    scope: new EffectScope(true /* detached */),\n+    scope: new EffectScope(false, parent?.scope),",
        "comment_created_at": "2023-12-01T08:33:24+00:00",
        "comment_author": "Alfred-Skyblue",
        "comment_body": "Considering performance issues, I have rolled back the `EffectScope` of the `Component` to the `detached` state. This means that the `pause` method within the scope of the component will only pause effects within the component itself, without affecting the effects of child components. Whether to pause or not is left to the discretion of the user.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1223692730",
    "pr_number": 8523,
    "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
    "created_at": "2023-06-09T00:49:13+00:00",
    "commented_code": "const setVars = () => {\n     const vars = getter(instance.proxy)",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1223692730",
        "repo_full_name": "vuejs/core",
        "pr_number": 8523,
        "pr_file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "discussion_id": "1223692730",
        "commented_code": "@@ -33,7 +33,14 @@ export function useCssVars(getter: (ctx: any) => Record<string, string>) {\n \n   const setVars = () => {\n     const vars = getter(instance.proxy)",
        "comment_created_at": "2023-06-09T00:49:13+00:00",
        "comment_author": "edison1105",
        "comment_body": "```suggestion\r\n    // #8520\r\n    if (!instance.asyncResolved && instance.asyncDep && __FEATURE_SUSPENSE__) {\r\n      instance.asyncDep.then(() => {\r\n        watchPostEffect(setVars)\r\n      })\r\n    } else {\r\n      const vars = getter(instance.proxy)\r\n      setVarsOnVNode(instance.subTree, vars)\r\n      updateTeleports(vars)\r\n    }\r\n```",
        "pr_file_module": null
      }
    ]
  }
]