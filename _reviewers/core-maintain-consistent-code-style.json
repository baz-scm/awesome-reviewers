[
  {
    "discussion_id": "1667687106",
    "pr_number": 8456,
    "pr_file": "packages/shared/__tests__/normalizeProp.spec.ts",
    "created_at": "2024-07-07T12:47:41+00:00",
    "commented_code": "`)\n   })\n })\n+\n+describe('normalizeStyle', () => {\n+  test('handles string correctly', () => {\n+    expect(normalizeStyle('foo')).toEqual('foo')\n+  })\n+  test('handles array correctly', () => {",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1667687106",
        "repo_full_name": "vuejs/core",
        "pr_number": 8456,
        "pr_file": "packages/shared/__tests__/normalizeProp.spec.ts",
        "discussion_id": "1667687106",
        "commented_code": "@@ -92,3 +99,127 @@ describe('normalizeClass', () => {\n     `)\n   })\n })\n+\n+describe('normalizeStyle', () => {\n+  test('handles string correctly', () => {\n+    expect(normalizeStyle('foo')).toEqual('foo')\n+  })\n+  test('handles array correctly', () => {",
        "comment_created_at": "2024-07-07T12:47:41+00:00",
        "comment_author": "skirtles-code",
        "comment_body": "The other tests in this file (and most other files) have a blank line between them. I think that's a convention worth retaining in these new tests.",
        "pr_file_module": null
      },
      {
        "comment_id": "1724250463",
        "repo_full_name": "vuejs/core",
        "pr_number": 8456,
        "pr_file": "packages/shared/__tests__/normalizeProp.spec.ts",
        "discussion_id": "1667687106",
        "commented_code": "@@ -92,3 +99,127 @@ describe('normalizeClass', () => {\n     `)\n   })\n })\n+\n+describe('normalizeStyle', () => {\n+  test('handles string correctly', () => {\n+    expect(normalizeStyle('foo')).toEqual('foo')\n+  })\n+  test('handles array correctly', () => {",
        "comment_created_at": "2024-08-21T02:18:30+00:00",
        "comment_author": "Alfred-Skyblue",
        "comment_body": "Thank you for your suggestion to modify.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1508784706",
    "pr_number": 10367,
    "pr_file": "packages/reactivity/src/computed.ts",
    "created_at": "2024-03-01T10:19:35+00:00",
    "commented_code": "/**\n    * @internal\n    */\n-  readonly dep = new Dep(this)\n+  readonly dep = new Dep(this);",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1508784706",
        "repo_full_name": "vuejs/core",
        "pr_number": 10367,
        "pr_file": "packages/reactivity/src/computed.ts",
        "discussion_id": "1508784706",
        "commented_code": "@@ -47,11 +47,11 @@ export class ComputedRefImpl<T = any> implements Subscriber {\n   /**\n    * @internal\n    */\n-  readonly dep = new Dep(this)\n+  readonly dep = new Dep(this);",
        "comment_created_at": "2024-03-01T10:19:35+00:00",
        "comment_author": "sxzz",
        "comment_body": "Please format the code",
        "pr_file_module": null
      },
      {
        "comment_id": "1508816032",
        "repo_full_name": "vuejs/core",
        "pr_number": 10367,
        "pr_file": "packages/reactivity/src/computed.ts",
        "discussion_id": "1508784706",
        "commented_code": "@@ -47,11 +47,11 @@ export class ComputedRefImpl<T = any> implements Subscriber {\n   /**\n    * @internal\n    */\n-  readonly dep = new Dep(this)\n+  readonly dep = new Dep(this);",
        "comment_created_at": "2024-03-01T10:45:04+00:00",
        "comment_author": "OnlyWick",
        "comment_body": "emm, Is there no automatic formatting configuration? `eslint --fix` doesn't work.",
        "pr_file_module": null
      },
      {
        "comment_id": "1508819435",
        "repo_full_name": "vuejs/core",
        "pr_number": 10367,
        "pr_file": "packages/reactivity/src/computed.ts",
        "discussion_id": "1508784706",
        "commented_code": "@@ -47,11 +47,11 @@ export class ComputedRefImpl<T = any> implements Subscriber {\n   /**\n    * @internal\n    */\n-  readonly dep = new Dep(this)\n+  readonly dep = new Dep(this);",
        "comment_created_at": "2024-03-01T10:48:18+00:00",
        "comment_author": "sxzz",
        "comment_body": "We use Prettier for code style.",
        "pr_file_module": null
      },
      {
        "comment_id": "1508822851",
        "repo_full_name": "vuejs/core",
        "pr_number": 10367,
        "pr_file": "packages/reactivity/src/computed.ts",
        "discussion_id": "1508784706",
        "commented_code": "@@ -47,11 +47,11 @@ export class ComputedRefImpl<T = any> implements Subscriber {\n   /**\n    * @internal\n    */\n-  readonly dep = new Dep(this)\n+  readonly dep = new Dep(this);",
        "comment_created_at": "2024-03-01T10:51:20+00:00",
        "comment_author": "OnlyWick",
        "comment_body": "weird.\r\n\r\n\u279c npx prettier --check /../core/packages/reactivity/src/computed.ts\r\nChecking formatting...\r\nAll matched files use Prettier code style!",
        "pr_file_module": null
      },
      {
        "comment_id": "1508830979",
        "repo_full_name": "vuejs/core",
        "pr_number": 10367,
        "pr_file": "packages/reactivity/src/computed.ts",
        "discussion_id": "1508784706",
        "commented_code": "@@ -47,11 +47,11 @@ export class ComputedRefImpl<T = any> implements Subscriber {\n   /**\n    * @internal\n    */\n-  readonly dep = new Dep(this)\n+  readonly dep = new Dep(this);",
        "comment_created_at": "2024-03-01T10:58:56+00:00",
        "comment_author": "OnlyWick",
        "comment_body": "And, `pnpm format` and `format-check` did NOT make any modifications.",
        "pr_file_module": null
      },
      {
        "comment_id": "1508834987",
        "repo_full_name": "vuejs/core",
        "pr_number": 10367,
        "pr_file": "packages/reactivity/src/computed.ts",
        "discussion_id": "1508784706",
        "commented_code": "@@ -47,11 +47,11 @@ export class ComputedRefImpl<T = any> implements Subscriber {\n   /**\n    * @internal\n    */\n-  readonly dep = new Dep(this)\n+  readonly dep = new Dep(this);",
        "comment_created_at": "2024-03-01T11:02:54+00:00",
        "comment_author": "sxzz",
        "comment_body": "I think it's a bug of Prettier, let's ignore it for Vue.\r\n\r\nhttps://prettier.io/playground/#N4Igxg9gdgLgprEAucAbAhgZ0wAgII7AA6UOOATnOgCbSoCeO1cADjgLw5RwDuOAIqwAUMABYBLTAEoSZSjTqMA2gCUqYGOIBucAGIYA5pgB0ASQDKAfRUBRXQF0OOGOQCucANwkAviAA0IBAsmtCYyKDo5OQQPAAKkQhhKOioPOj0YQEARuToYADWcDDm6AC2cAAy4tzIAGYpmHDZuQVF5ix51QbILu4BjaXidQ1NIHAAHixw5OLlsCkAKtNQkeJwSfWojf1dqHAAiq4Q8MNbowBWmOPmuwdHJ0ib2yAAjvdwsdEsSSBYALTcODMaj+EAudDiVBdADCEFKpXQyF+qFQoMwtzwMBc4iyrngsWmVRqjxGAVEMFKqAA6hJ4JgOmA4OZEuJNFpWfQkWBsKCtO5TFBmLBzGAZsE8ILzDB6HtTs8WNFGlTciwkQr1tMdKDqo1yDBPugDAi5aMOuRdUjpVNMKLxMFQQrqjAqeJqGJkAAOAAMAUob3ElANRsRJLOARg6CyLrdomQACYAq5GgtIxtSWNSlkgcCKugoAZXIa9BByAisV0keg8RAQN5vEA",
        "pr_file_module": null
      },
      {
        "comment_id": "1508837014",
        "repo_full_name": "vuejs/core",
        "pr_number": 10367,
        "pr_file": "packages/reactivity/src/computed.ts",
        "discussion_id": "1508784706",
        "commented_code": "@@ -47,11 +47,11 @@ export class ComputedRefImpl<T = any> implements Subscriber {\n   /**\n    * @internal\n    */\n-  readonly dep = new Dep(this)\n+  readonly dep = new Dep(this);",
        "comment_created_at": "2024-03-01T11:04:56+00:00",
        "comment_author": "OnlyWick",
        "comment_body": "Yeah, you're right. If we add If we add access modifiers, it should work correctly.\r\n\r\n<img width=\"619\" alt=\"image\" src=\"https://github.com/vuejs/core/assets/53461157/c92c7328-6519-4915-bc16-f2057c8da94f\">\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1334079969",
    "pr_number": 8953,
    "pr_file": "packages/runtime-dom/src/modules/events.ts",
    "created_at": "2023-09-22T08:40:28+00:00",
    "commented_code": "-import { hyphenate, isArray } from '@vue/shared'\n+import { hyphenate, isArray, isString, isFunction } from '@vue/shared'\n import {\n   ErrorCodes,\n   ComponentInternalInstance,\n-  callWithAsyncErrorHandling\n+  callWithAsyncErrorHandling, warn",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1334079969",
        "repo_full_name": "vuejs/core",
        "pr_number": 8953,
        "pr_file": "packages/runtime-dom/src/modules/events.ts",
        "discussion_id": "1334079969",
        "commented_code": "@@ -1,8 +1,8 @@\n-import { hyphenate, isArray } from '@vue/shared'\n+import { hyphenate, isArray, isString, isFunction } from '@vue/shared'\n import {\n   ErrorCodes,\n   ComponentInternalInstance,\n-  callWithAsyncErrorHandling\n+  callWithAsyncErrorHandling, warn",
        "comment_created_at": "2023-09-22T08:40:28+00:00",
        "comment_author": "skirtles-code",
        "comment_body": "This doesn't seem to be formatted correctly, the `warn` should be on the next line.\r\n\r\nThere's a pre-commit Git hook configured that should ensure that all code is formatted correctly when you commit. It would seem that you've somehow managed to bypass that.\r\n\r\nYou can run it manually with `pnpm format`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1334500562",
        "repo_full_name": "vuejs/core",
        "pr_number": 8953,
        "pr_file": "packages/runtime-dom/src/modules/events.ts",
        "discussion_id": "1334079969",
        "commented_code": "@@ -1,8 +1,8 @@\n-import { hyphenate, isArray } from '@vue/shared'\n+import { hyphenate, isArray, isString, isFunction } from '@vue/shared'\n import {\n   ErrorCodes,\n   ComponentInternalInstance,\n-  callWithAsyncErrorHandling\n+  callWithAsyncErrorHandling, warn",
        "comment_created_at": "2023-09-22T15:01:06+00:00",
        "comment_author": "Tofandel",
        "comment_body": "pnpm format doesn't run correctly in WSL for some reason, I didn't dig into it but yes I had to bypass the hook ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1038982844",
    "pr_number": 7272,
    "pr_file": "packages/compiler-core/src/utils.ts",
    "created_at": "2022-12-04T14:45:41+00:00",
    "commented_code": "export function isCoreComponent(tag: string): symbol | void {\n   if (isBuiltInType(tag, 'Teleport')) {\n     return TELEPORT\n-  } else if (isBuiltInType(tag, 'Suspense')) {\n+  }\n+  if (isBuiltInType(tag, 'Suspense')) {\n     return SUSPENSE\n-  } else if (isBuiltInType(tag, 'KeepAlive')) {\n+  } \n+  if (isBuiltInType(tag, 'KeepAlive')) {\n     return KEEP_ALIVE\n-  } else if (isBuiltInType(tag, 'BaseTransition')) {\n+  } \n+  if (isBuiltInType(tag, 'BaseTransition')) {\n     return BASE_TRANSITION",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1038982844",
        "repo_full_name": "vuejs/core",
        "pr_number": 7272,
        "pr_file": "packages/compiler-core/src/utils.ts",
        "discussion_id": "1038982844",
        "commented_code": "@@ -56,11 +56,14 @@ export const isBuiltInType = (tag: string, expected: string): boolean =>\n export function isCoreComponent(tag: string): symbol | void {\n   if (isBuiltInType(tag, 'Teleport')) {\n     return TELEPORT\n-  } else if (isBuiltInType(tag, 'Suspense')) {\n+  }\n+  if (isBuiltInType(tag, 'Suspense')) {\n     return SUSPENSE\n-  } else if (isBuiltInType(tag, 'KeepAlive')) {\n+  } \n+  if (isBuiltInType(tag, 'KeepAlive')) {\n     return KEEP_ALIVE\n-  } else if (isBuiltInType(tag, 'BaseTransition')) {\n+  } \n+  if (isBuiltInType(tag, 'BaseTransition')) {\n     return BASE_TRANSITION",
        "comment_created_at": "2022-12-04T14:45:41+00:00",
        "comment_author": "sxzz",
        "comment_body": "I think it's unnecessary. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1039103474",
        "repo_full_name": "vuejs/core",
        "pr_number": 7272,
        "pr_file": "packages/compiler-core/src/utils.ts",
        "discussion_id": "1038982844",
        "commented_code": "@@ -56,11 +56,14 @@ export const isBuiltInType = (tag: string, expected: string): boolean =>\n export function isCoreComponent(tag: string): symbol | void {\n   if (isBuiltInType(tag, 'Teleport')) {\n     return TELEPORT\n-  } else if (isBuiltInType(tag, 'Suspense')) {\n+  }\n+  if (isBuiltInType(tag, 'Suspense')) {\n     return SUSPENSE\n-  } else if (isBuiltInType(tag, 'KeepAlive')) {\n+  } \n+  if (isBuiltInType(tag, 'KeepAlive')) {\n     return KEEP_ALIVE\n-  } else if (isBuiltInType(tag, 'BaseTransition')) {\n+  } \n+  if (isBuiltInType(tag, 'BaseTransition')) {\n     return BASE_TRANSITION",
        "comment_created_at": "2022-12-05T03:00:37+00:00",
        "comment_author": "quangnv13",
        "comment_body": "> I think it's unnecessary.\r\n\r\nYes, i just refactor the codes. It's still working now but code base is not cleanly because i think it has else if hell here. If we use if and return in if block, we can ignore all codes after return and use else if is unnecessarily.",
        "pr_file_module": null
      },
      {
        "comment_id": "1039147388",
        "repo_full_name": "vuejs/core",
        "pr_number": 7272,
        "pr_file": "packages/compiler-core/src/utils.ts",
        "discussion_id": "1038982844",
        "commented_code": "@@ -56,11 +56,14 @@ export const isBuiltInType = (tag: string, expected: string): boolean =>\n export function isCoreComponent(tag: string): symbol | void {\n   if (isBuiltInType(tag, 'Teleport')) {\n     return TELEPORT\n-  } else if (isBuiltInType(tag, 'Suspense')) {\n+  }\n+  if (isBuiltInType(tag, 'Suspense')) {\n     return SUSPENSE\n-  } else if (isBuiltInType(tag, 'KeepAlive')) {\n+  } \n+  if (isBuiltInType(tag, 'KeepAlive')) {\n     return KEEP_ALIVE\n-  } else if (isBuiltInType(tag, 'BaseTransition')) {\n+  } \n+  if (isBuiltInType(tag, 'BaseTransition')) {\n     return BASE_TRANSITION",
        "comment_created_at": "2022-12-05T05:08:00+00:00",
        "comment_author": "sxzz",
        "comment_body": "FYI https://github.com/vuejs/vue/pull/12874#issuecomment-1320863504",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "625396695",
    "pr_number": 3692,
    "pr_file": "packages/runtime-dom/types/jsx.d.ts",
    "created_at": "2021-05-03T22:04:33+00:00",
    "commented_code": "srcset?: string\n   usemap?: string\n   width?: number | string\n+  loading?: \"lazy\" | \"eager\" | \"auto\";",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "625396695",
        "repo_full_name": "vuejs/core",
        "pr_number": 3692,
        "pr_file": "packages/runtime-dom/types/jsx.d.ts",
        "discussion_id": "625396695",
        "commented_code": "@@ -457,6 +457,7 @@ export interface ImgHTMLAttributes extends HTMLAttributes {\n   srcset?: string\n   usemap?: string\n   width?: number | string\n+  loading?: \"lazy\" | \"eager\" | \"auto\";",
        "comment_created_at": "2021-05-03T22:04:33+00:00",
        "comment_author": "ftonato",
        "comment_body": "Hello,\r\n\r\nThank you for your contribution :)\r\n\r\nCould you use single quote to be more consistent as other examples above?\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "697212960",
        "repo_full_name": "vuejs/core",
        "pr_number": 3692,
        "pr_file": "packages/runtime-dom/types/jsx.d.ts",
        "discussion_id": "625396695",
        "commented_code": "@@ -457,6 +457,7 @@ export interface ImgHTMLAttributes extends HTMLAttributes {\n   srcset?: string\n   usemap?: string\n   width?: number | string\n+  loading?: \"lazy\" | \"eager\" | \"auto\";",
        "comment_created_at": "2021-08-27T07:23:14+00:00",
        "comment_author": "mankeheaven",
        "comment_body": "use prettier, lintstaged and husky to standardize the format other than manual control\uff1f\r\nformat is a engineer issue\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "697242969",
        "repo_full_name": "vuejs/core",
        "pr_number": 3692,
        "pr_file": "packages/runtime-dom/types/jsx.d.ts",
        "discussion_id": "625396695",
        "commented_code": "@@ -457,6 +457,7 @@ export interface ImgHTMLAttributes extends HTMLAttributes {\n   srcset?: string\n   usemap?: string\n   width?: number | string\n+  loading?: \"lazy\" | \"eager\" | \"auto\";",
        "comment_created_at": "2021-08-27T08:11:57+00:00",
        "comment_author": "ftonato",
        "comment_body": "run `npm run lint` after perform your changes ;)",
        "pr_file_module": null
      },
      {
        "comment_id": "1163669876",
        "repo_full_name": "vuejs/core",
        "pr_number": 3692,
        "pr_file": "packages/runtime-dom/types/jsx.d.ts",
        "discussion_id": "625396695",
        "commented_code": "@@ -457,6 +457,7 @@ export interface ImgHTMLAttributes extends HTMLAttributes {\n   srcset?: string\n   usemap?: string\n   width?: number | string\n+  loading?: \"lazy\" | \"eager\" | \"auto\";",
        "comment_created_at": "2023-04-12T06:17:30+00:00",
        "comment_author": "sxzz",
        "comment_body": "Please format your code and resolve conflicts, also `auto` isn't a standard value.\r\n[MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/loading)",
        "pr_file_module": null
      }
    ]
  }
]