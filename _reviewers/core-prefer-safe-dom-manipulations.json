[
  {
    "discussion_id": "1590400314",
    "pr_number": 10844,
    "pr_file": "packages/runtime-dom/src/nodeOps.ts",
    "created_at": "2024-05-05T20:01:07+00:00",
    "commented_code": "+import { warn } from '@vue/runtime-core'\n import type { RendererOptions } from '@vue/runtime-core'\n+import type {\n+  TrustedHTML,\n+  TrustedTypePolicy,\n+  TrustedTypesWindow,\n+} from 'trusted-types/lib'\n+\n+let policy: TrustedTypePolicy | undefined = undefined\n+function getPolicy(): TrustedTypePolicy | undefined {\n+  const ttWindow = window as unknown as TrustedTypesWindow\n+  if (ttWindow.trustedTypes && !policy) {\n+    try {\n+      policy = ttWindow.trustedTypes.createPolicy('vue', {\n+        createHTML: val => val,\n+        createScript: val => val,\n+        createScriptURL: val => val,",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1590400314",
        "repo_full_name": "vuejs/core",
        "pr_number": 10844,
        "pr_file": "packages/runtime-dom/src/nodeOps.ts",
        "discussion_id": "1590400314",
        "commented_code": "@@ -1,4 +1,41 @@\n+import { warn } from '@vue/runtime-core'\n import type { RendererOptions } from '@vue/runtime-core'\n+import type {\n+  TrustedHTML,\n+  TrustedTypePolicy,\n+  TrustedTypesWindow,\n+} from 'trusted-types/lib'\n+\n+let policy: TrustedTypePolicy | undefined = undefined\n+function getPolicy(): TrustedTypePolicy | undefined {\n+  const ttWindow = window as unknown as TrustedTypesWindow\n+  if (ttWindow.trustedTypes && !policy) {\n+    try {\n+      policy = ttWindow.trustedTypes.createPolicy('vue', {\n+        createHTML: val => val,\n+        createScript: val => val,\n+        createScriptURL: val => val,",
        "comment_created_at": "2024-05-05T20:01:07+00:00",
        "comment_author": "lukewarlow",
        "comment_body": "Perhaps this policy should just have the createHTML function defined that way it will error when used for the wrong trusted type. Generally it's a good idea to only allow what's necessary inside the policy.",
        "pr_file_module": null
      },
      {
        "comment_id": "1591297608",
        "repo_full_name": "vuejs/core",
        "pr_number": 10844,
        "pr_file": "packages/runtime-dom/src/nodeOps.ts",
        "discussion_id": "1590400314",
        "commented_code": "@@ -1,4 +1,41 @@\n+import { warn } from '@vue/runtime-core'\n import type { RendererOptions } from '@vue/runtime-core'\n+import type {\n+  TrustedHTML,\n+  TrustedTypePolicy,\n+  TrustedTypesWindow,\n+} from 'trusted-types/lib'\n+\n+let policy: TrustedTypePolicy | undefined = undefined\n+function getPolicy(): TrustedTypePolicy | undefined {\n+  const ttWindow = window as unknown as TrustedTypesWindow\n+  if (ttWindow.trustedTypes && !policy) {\n+    try {\n+      policy = ttWindow.trustedTypes.createPolicy('vue', {\n+        createHTML: val => val,\n+        createScript: val => val,\n+        createScriptURL: val => val,",
        "comment_created_at": "2024-05-06T16:56:03+00:00",
        "comment_author": "haoqunjiang",
        "comment_body": "Yeah, that would be better. But I'm still struggling to make TypeScript happy hereðŸ˜‚ I'll try later.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1590412572",
    "pr_number": 10844,
    "pr_file": "packages/runtime-dom/src/index.ts",
    "created_at": "2024-05-05T20:55:25+00:00",
    "commented_code": "}\n \n     // clear content before mounting\n-    container.innerHTML = ''\n+    container.innerHTML = unsafeToTrustedHTML('') as string",
    "repo_full_name": "vuejs/core",
    "discussion_comments": [
      {
        "comment_id": "1590412572",
        "repo_full_name": "vuejs/core",
        "pr_number": 10844,
        "pr_file": "packages/runtime-dom/src/index.ts",
        "discussion_id": "1590412572",
        "commented_code": "@@ -100,7 +100,7 @@ export const createApp = ((...args) => {\n     }\n \n     // clear content before mounting\n-    container.innerHTML = ''\n+    container.innerHTML = unsafeToTrustedHTML('') as string",
        "comment_created_at": "2024-05-05T20:55:25+00:00",
        "comment_author": "lukewarlow",
        "comment_body": "This can potentially be simplified using https://developer.mozilla.org/en-US/docs/Web/API/TrustedTypePolicyFactory/emptyHTML having said that if you're making a no-op policy anyway the code difference is probably negligible.\n\nNot sure if this code path is perf sensitive though, if it is the emptyHTML helper should be more performant",
        "pr_file_module": null
      },
      {
        "comment_id": "1591299166",
        "repo_full_name": "vuejs/core",
        "pr_number": 10844,
        "pr_file": "packages/runtime-dom/src/index.ts",
        "discussion_id": "1590412572",
        "commented_code": "@@ -100,7 +100,7 @@ export const createApp = ((...args) => {\n     }\n \n     // clear content before mounting\n-    container.innerHTML = ''\n+    container.innerHTML = unsafeToTrustedHTML('') as string",
        "comment_created_at": "2024-05-06T16:57:26+00:00",
        "comment_author": "haoqunjiang",
        "comment_body": "After reading https://github.com/w3c/trusted-types/issues/343, I think `textContent = ''` would be an easier replacement here. Refactored.",
        "pr_file_module": null
      }
    ]
  }
]