[
  {
    "discussion_id": "763997290",
    "pr_number": 19168,
    "pr_file": "packages/graphql/src/schemaTypes/objectTypes/gql-CurrentProject.ts",
    "created_at": "2021-12-07T13:34:58+00:00",
    "commented_code": "t.connectionField('specs', {\n       description: 'Specs for a project conforming to Relay Connection specification',\n-      type: Spec,\n-      nodes: (source, args, ctx) => {\n-        return ctx.project.findSpecs(source.projectRoot, ctx.appData.currentTestingType === 'component' ? 'component' : 'integration')\n+      type: 'Spec',\n+      nodes: async (source, args, ctx) => {\n+        if (!ctx.appData.currentTestingType) {\n+          return []\n+        }\n+\n+        const pattern = await ctx.project.specPatternForTestingType(source.projectRoot, ctx.appData.currentTestingType)",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "763997290",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 19168,
        "pr_file": "packages/graphql/src/schemaTypes/objectTypes/gql-CurrentProject.ts",
        "discussion_id": "763997290",
        "commented_code": "@@ -75,9 +74,23 @@ export const CurrentProject = objectType({\n \n     t.connectionField('specs', {\n       description: 'Specs for a project conforming to Relay Connection specification',\n-      type: Spec,\n-      nodes: (source, args, ctx) => {\n-        return ctx.project.findSpecs(source.projectRoot, ctx.appData.currentTestingType === 'component' ? 'component' : 'integration')\n+      type: 'Spec',\n+      nodes: async (source, args, ctx) => {\n+        if (!ctx.appData.currentTestingType) {\n+          return []\n+        }\n+\n+        const pattern = await ctx.project.specPatternForTestingType(source.projectRoot, ctx.appData.currentTestingType)",
        "comment_created_at": "2021-12-07T13:34:58+00:00",
        "comment_author": "lmiller1990",
        "comment_body": "should cache these instead of hitting filesystem each time but outside scope of this PR",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "617106342",
    "pr_number": 15639,
    "pr_file": "packages/server/lib/studio.ts",
    "created_at": "2021-04-20T23:49:46+00:00",
    "commented_code": "}\n   })\n }\n+\n+export const getStudioDetails = async (fileDetails: FileDetails) => {\n+  return {\n+    studioExtended: await wasTestExtended(fileDetails).catch(() => false),\n+    studioCreated: await wasTestCreated(fileDetails).catch(() => false),\n+  }\n+}",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "617106342",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 15639,
        "pr_file": "packages/server/lib/studio.ts",
        "discussion_id": "617106342",
        "commented_code": "@@ -71,3 +79,10 @@ export const save = (saveInfo: SaveInfo) => {\n     }\n   })\n }\n+\n+export const getStudioDetails = async (fileDetails: FileDetails) => {\n+  return {\n+    studioExtended: await wasTestExtended(fileDetails).catch(() => false),\n+    studioCreated: await wasTestCreated(fileDetails).catch(() => false),\n+  }\n+}",
        "comment_created_at": "2021-04-20T23:49:46+00:00",
        "comment_author": "kuceb",
        "comment_body": "This is called for each test? \r\nand do both `wasTestExtended` and `wasTestCreated` read the file or do they sharing the read?\r\nSo for a spec file of 60 tests, is this going to read the file from disk 120 times?\r\nthe performance test in this PR ensures that a single test takes less than 100ms to parse the ast from an already in memory file, but I could see this being an issue ",
        "pr_file_module": null
      }
    ]
  }
]