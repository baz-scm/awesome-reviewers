[
  {
    "discussion_id": "248494836",
    "pr_number": 3130,
    "pr_file": "packages/driver/src/cy/assertions.coffee",
    "created_at": "2019-01-16T23:50:04+00:00",
    "commented_code": "obj\n \n+prepareObjsForDiff = (err) ->\n+  if _.isString(err.actual) || _.isString(err.expected)\n+    return err\n+  ret = {}\n+  ret.actual = mochaUtils.stringify(err.actual)\n+  ret.expected = mochaUtils.stringify(err.expected)\n+  return ret\n+\n+objToString = Object.prototype.toString\n+\n+_sameType = (a, b) ->\n+  return objToString.call(a) is objToString.call(b)",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "248494836",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 3130,
        "pr_file": "packages/driver/src/cy/assertions.coffee",
        "discussion_id": "248494836",
        "commented_code": "@@ -56,6 +58,27 @@ parseValueActualAndExpected = (value, actual, expected) ->\n \n   obj\n \n+prepareObjsForDiff = (err) ->\n+  if _.isString(err.actual) || _.isString(err.expected)\n+    return err\n+  ret = {}\n+  ret.actual = mochaUtils.stringify(err.actual)\n+  ret.expected = mochaUtils.stringify(err.expected)\n+  return ret\n+\n+objToString = Object.prototype.toString\n+\n+_sameType = (a, b) ->\n+  return objToString.call(a) is objToString.call(b)",
        "comment_created_at": "2019-01-16T23:50:04+00:00",
        "comment_author": "kuceb",
        "comment_body": "I'm in favor of changing this to a `typeof` check. Any thoughts? @bahmutov \r\n\r\nthat way, a diff will show up as long as the js type matches, not the object's class name\r\n\r\ne.g: `MouseEvent {clientX: 39, clientY:50}` should diff with `Object {clientX:40, clientY:50}`\r\n\r\nif we use typeof these would return true, Object.prototype.toString it would return false\r\n\r\nMocha uses toString method, however",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "248915540",
    "pr_number": 3130,
    "pr_file": "packages/driver/src/cy/assertions.coffee",
    "created_at": "2019-01-18T03:08:01+00:00",
    "commented_code": "message = message.replace(stackTracesRe, \"\n\")\n \n     obj = parseValueActualAndExpected(value, actual, expected)\n+    \n+    if showDiff(error)\n+      diffObjs = prepareObjsForDiff(obj)\n+      diff = JsDiff.createPatch('string', diffObjs.actual, diffObjs.expected)",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "248915540",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 3130,
        "pr_file": "packages/driver/src/cy/assertions.coffee",
        "discussion_id": "248915540",
        "commented_code": "@@ -328,6 +351,10 @@ create = (state, queue, retryFn) ->\n       message = message.replace(stackTracesRe, \"\\n\")\n \n     obj = parseValueActualAndExpected(value, actual, expected)\n+    \n+    if showDiff(error)\n+      diffObjs = prepareObjsForDiff(obj)\n+      diff = JsDiff.createPatch('string', diffObjs.actual, diffObjs.expected)",
        "comment_created_at": "2019-01-18T03:08:01+00:00",
        "comment_author": "bahmutov",
        "comment_body": "the condition inside `prepareObjsForDiff` is OR `if _.isString(err.actual) || _.isString(err.expected)`. So will `JsDiff` do a good job when actual is a string, and expected is an object?",
        "pr_file_module": null
      },
      {
        "comment_id": "249877524",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 3130,
        "pr_file": "packages/driver/src/cy/assertions.coffee",
        "discussion_id": "248915540",
        "commented_code": "@@ -328,6 +351,10 @@ create = (state, queue, retryFn) ->\n       message = message.replace(stackTracesRe, \"\\n\")\n \n     obj = parseValueActualAndExpected(value, actual, expected)\n+    \n+    if showDiff(error)\n+      diffObjs = prepareObjsForDiff(obj)\n+      diff = JsDiff.createPatch('string', diffObjs.actual, diffObjs.expected)",
        "comment_created_at": "2019-01-22T17:12:41+00:00",
        "comment_author": "kuceb",
        "comment_body": "no diff will be shown when comparing string to object, since showDiff(error) would return false",
        "pr_file_module": null
      }
    ]
  }
]