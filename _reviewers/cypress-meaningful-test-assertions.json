[
  {
    "discussion_id": "2291519688",
    "pr_number": 32063,
    "pr_file": "cli/lib/tasks/verify.ts",
    "created_at": "2025-08-21T16:07:08+00:00",
    "commented_code": "// the default\n   let renderer = util.isCi() ? verbose : 'default'\n \n-  if (logger.logLevel() === 'silent') renderer = 'silent'\n+  // NOTE: under test we set the listr renderer to 'silent' in order to get deterministic snapshots",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "2291519688",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 32063,
        "pr_file": "cli/lib/tasks/verify.ts",
        "discussion_id": "2291519688",
        "commented_code": "@@ -181,23 +190,24 @@ function testBinary (version, binaryDir, options) {\n   // the default\n   let renderer = util.isCi() ? verbose : 'default'\n \n-  if (logger.logLevel() === 'silent') renderer = 'silent'\n+  // NOTE: under test we set the listr renderer to 'silent' in order to get deterministic snapshots",
        "comment_created_at": "2025-08-21T16:07:08+00:00",
        "comment_author": "AtofStryker",
        "comment_body": "This is the refactor I mentioned above. The option provided here is specific for us for testing in order to get deterministic snapshots. It's unclear why this wasn't a problem previously",
        "pr_file_module": null
      },
      {
        "comment_id": "2294139577",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 32063,
        "pr_file": "cli/lib/tasks/verify.ts",
        "discussion_id": "2291519688",
        "commented_code": "@@ -181,23 +190,24 @@ function testBinary (version, binaryDir, options) {\n   // the default\n   let renderer = util.isCi() ? verbose : 'default'\n \n-  if (logger.logLevel() === 'silent') renderer = 'silent'\n+  // NOTE: under test we set the listr renderer to 'silent' in order to get deterministic snapshots",
        "comment_created_at": "2025-08-22T16:10:54+00:00",
        "comment_author": "jennifer-shehane",
        "comment_body": "@AtofStryker Can we have unit tests around the verify printing instead of snapshot tests? Or verify that `Verified Cypress!` is included in the snapshot tests - there should at least be one final printing of it? It seems the snapshot tests are a bit useless if it's not checking that the verified ran and printed as verified.",
        "pr_file_module": null
      },
      {
        "comment_id": "2294288285",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 32063,
        "pr_file": "cli/lib/tasks/verify.ts",
        "discussion_id": "2291519688",
        "commented_code": "@@ -181,23 +190,24 @@ function testBinary (version, binaryDir, options) {\n   // the default\n   let renderer = util.isCi() ? verbose : 'default'\n \n-  if (logger.logLevel() === 'silent') renderer = 'silent'\n+  // NOTE: under test we set the listr renderer to 'silent' in order to get deterministic snapshots",
        "comment_created_at": "2025-08-22T17:34:26+00:00",
        "comment_author": "cacieprins",
        "comment_body": "We should definitely migrate the tests in cli to vitest & move away from snapshot testing, but I think that's out of scope for this. Getting them to be determinate is a good intermediary imho \ud83d\udc4d ",
        "pr_file_module": null
      },
      {
        "comment_id": "2294491233",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 32063,
        "pr_file": "cli/lib/tasks/verify.ts",
        "discussion_id": "2291519688",
        "commented_code": "@@ -181,23 +190,24 @@ function testBinary (version, binaryDir, options) {\n   // the default\n   let renderer = util.isCi() ? verbose : 'default'\n \n-  if (logger.logLevel() === 'silent') renderer = 'silent'\n+  // NOTE: under test we set the listr renderer to 'silent' in order to get deterministic snapshots",
        "comment_created_at": "2025-08-22T19:21:04+00:00",
        "comment_author": "AtofStryker",
        "comment_body": "@cacieprins thats the goal eventually! This is just an intermediary step.\r\n\r\n@jennifer-shehane we currently strip out a lot of the text on these snapshots to try and make them deterministic. I can see if I can write a better test then what I have currently. It might be easier to verify that `Verified Cypress!` is in the stdout for the time being ",
        "pr_file_module": null
      },
      {
        "comment_id": "2294648563",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 32063,
        "pr_file": "cli/lib/tasks/verify.ts",
        "discussion_id": "2291519688",
        "commented_code": "@@ -181,23 +190,24 @@ function testBinary (version, binaryDir, options) {\n   // the default\n   let renderer = util.isCi() ? verbose : 'default'\n \n-  if (logger.logLevel() === 'silent') renderer = 'silent'\n+  // NOTE: under test we set the listr renderer to 'silent' in order to get deterministic snapshots",
        "comment_created_at": "2025-08-22T20:20:25+00:00",
        "comment_author": "AtofStryker",
        "comment_body": "@jennifer-shehane I played around briefly around seeing if we can get additional assertions into the current snapshot testing. It doesn't work really well since I'm setting the listR2 renderer to silent so we can get more determinism, so the tests really aren't doing much and weren't really working well before.\r\n\r\nMy recommendation would be to turn the renderer on and we assert on the stdout output instead of snapshot testing, but it feels out of scope for this PR, even though really should improve those tests.\r\n\r\nThese tests seems to be intended to function more as an integration test between us an Listr2. So, if it is configured correctly, which it is now, it should at least work.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "784305123",
    "pr_number": 19659,
    "pr_file": "packages/app/cypress/e2e/specs_page.cy.ts",
    "created_at": "2022-01-13T20:35:53+00:00",
    "commented_code": "+import defaultMessages from '@packages/frontend-shared/src/locales/en-US.json'\n+\n+describe('Specs Page', () => {\n+  describe('Component Workflows', {\n+    viewportHeight: 768,\n+    viewportWidth: 1024,\n+  }, () => {\n+    context('with storybook', () => {\n+      beforeEach(() => {\n+        cy.scaffoldProject('no-specs')\n+        cy.openProject('no-specs')\n+        cy.startAppServer('component')\n+        cy.visitApp()\n+\n+        // With no specs present, the page renders two cards, one for creating from found components,\n+        // another for creating from found stories.\n+        cy.findAllByTestId('card').eq(0).as('ComponentCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromComponent.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromComponent.description).should('be.visible')\n+        })\n+\n+        cy.findAllByTestId('card').eq(1).as('StoryCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromStory.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromStory.description).should('be.visible')\n+        })\n+      })\n+\n+      it('shows create first spec page with create from component and create from story options', () => {\n+        cy.findByRole('heading', {\n+          level: 1,\n+          name: defaultMessages.createSpec.page.defaultPatternNoSpecs.title,\n+        }).should('be.visible')\n+\n+        cy.findByTestId('create-spec-page-description').should('be.visible').and('contain', defaultMessages.createSpec.page.defaultPatternNoSpecs.component.description)\n+\n+        cy.get('@ComponentCard').should('be.visible')\n+        cy.get('@StoryCard').should('be.visible')\n+\n+        cy.findByTestId('no-specs-message').should('be.visible').and('contain', defaultMessages.createSpec.noSpecsMessage)\n+\n+        cy.findByRole('link', { name: defaultMessages.createSpec.viewSpecPatternButton })\n+        .should('be.visible')\n+        .and('not.be.disabled')\n+        .and('have.attr', 'href', '#/settings?section=project&setting=specPattern')\n+      })\n+\n+      context('create from story', () => {",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "784305123",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 19659,
        "pr_file": "packages/app/cypress/e2e/specs_page.cy.ts",
        "discussion_id": "784305123",
        "commented_code": "@@ -0,0 +1,353 @@\n+import defaultMessages from '@packages/frontend-shared/src/locales/en-US.json'\n+\n+describe('Specs Page', () => {\n+  describe('Component Workflows', {\n+    viewportHeight: 768,\n+    viewportWidth: 1024,\n+  }, () => {\n+    context('with storybook', () => {\n+      beforeEach(() => {\n+        cy.scaffoldProject('no-specs')\n+        cy.openProject('no-specs')\n+        cy.startAppServer('component')\n+        cy.visitApp()\n+\n+        // With no specs present, the page renders two cards, one for creating from found components,\n+        // another for creating from found stories.\n+        cy.findAllByTestId('card').eq(0).as('ComponentCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromComponent.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromComponent.description).should('be.visible')\n+        })\n+\n+        cy.findAllByTestId('card').eq(1).as('StoryCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromStory.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromStory.description).should('be.visible')\n+        })\n+      })\n+\n+      it('shows create first spec page with create from component and create from story options', () => {\n+        cy.findByRole('heading', {\n+          level: 1,\n+          name: defaultMessages.createSpec.page.defaultPatternNoSpecs.title,\n+        }).should('be.visible')\n+\n+        cy.findByTestId('create-spec-page-description').should('be.visible').and('contain', defaultMessages.createSpec.page.defaultPatternNoSpecs.component.description)\n+\n+        cy.get('@ComponentCard').should('be.visible')\n+        cy.get('@StoryCard').should('be.visible')\n+\n+        cy.findByTestId('no-specs-message').should('be.visible').and('contain', defaultMessages.createSpec.noSpecsMessage)\n+\n+        cy.findByRole('link', { name: defaultMessages.createSpec.viewSpecPatternButton })\n+        .should('be.visible')\n+        .and('not.be.disabled')\n+        .and('have.attr', 'href', '#/settings?section=project&setting=specPattern')\n+      })\n+\n+      context('create from story', () => {",
        "comment_created_at": "2022-01-13T20:35:53+00:00",
        "comment_author": "emilyrohrbough",
        "comment_body": "Would it be worth throwing a test in to verify that clicking create from component correctly finds matches?\r\n\r\nIt does look like the stories are matched as well which makes it seem like we won't even need the create from story option...\r\n<img width=\"647\" alt=\"Screen Shot 2022-01-13 at 2 35 32 PM\" src=\"https://user-images.githubusercontent.com/14099737/149405233-5e2eb9a1-eacb-4e30-868c-dc52a8affaf1.png\">\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "784306882",
    "pr_number": 19659,
    "pr_file": "packages/app/cypress/e2e/specs_page.cy.ts",
    "created_at": "2022-01-13T20:38:47+00:00",
    "commented_code": "+import defaultMessages from '@packages/frontend-shared/src/locales/en-US.json'\n+\n+describe('Specs Page', () => {\n+  describe('Component Workflows', {\n+    viewportHeight: 768,\n+    viewportWidth: 1024,\n+  }, () => {\n+    context('with storybook', () => {\n+      beforeEach(() => {\n+        cy.scaffoldProject('no-specs')\n+        cy.openProject('no-specs')\n+        cy.startAppServer('component')\n+        cy.visitApp()\n+\n+        // With no specs present, the page renders two cards, one for creating from found components,\n+        // another for creating from found stories.\n+        cy.findAllByTestId('card').eq(0).as('ComponentCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromComponent.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromComponent.description).should('be.visible')\n+        })\n+\n+        cy.findAllByTestId('card').eq(1).as('StoryCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromStory.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromStory.description).should('be.visible')\n+        })\n+      })\n+\n+      it('shows create first spec page with create from component and create from story options', () => {\n+        cy.findByRole('heading', {\n+          level: 1,\n+          name: defaultMessages.createSpec.page.defaultPatternNoSpecs.title,\n+        }).should('be.visible')\n+\n+        cy.findByTestId('create-spec-page-description').should('be.visible').and('contain', defaultMessages.createSpec.page.defaultPatternNoSpecs.component.description)\n+\n+        cy.get('@ComponentCard').should('be.visible')\n+        cy.get('@StoryCard').should('be.visible')\n+\n+        cy.findByTestId('no-specs-message').should('be.visible').and('contain', defaultMessages.createSpec.noSpecsMessage)\n+\n+        cy.findByRole('link', { name: defaultMessages.createSpec.viewSpecPatternButton })\n+        .should('be.visible')\n+        .and('not.be.disabled')\n+        .and('have.attr', 'href', '#/settings?section=project&setting=specPattern')\n+      })\n+\n+      context('create from story', () => {\n+        beforeEach(() => {\n+          cy.get('@StoryCard').click()\n+\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.component.importFromStory.header }).as('CreateFromStoryDialog')\n+\n+          cy.get('@CreateFromStoryDialog').within(() => {\n+            cy.validateExternalLink({ name: 'Need help?', href: 'https://on.cypress.io' })\n+          })\n+\n+          cy.findByRole('button', { name: 'Close' }).as('DialogCloseButton')\n+        })\n+\n+        it('shows dialog that can be dismissed with Close (x) button press', () => {\n+          cy.get('@DialogCloseButton').click()\n+          cy.findByRole('dialog').should('not.exist')\n+        })\n+\n+        it('shows input for file extension filter', () => {\n+          cy.get('@CreateFromStoryDialog').within(() => {\n+            cy.findByTestId('file-match-indicator').should('contain', '1 Match')\n+            cy.findByRole('button', { name: '*.stories.*' }).click()\n+            cy.findByPlaceholderText(defaultMessages.components.fileSearch.byExtensionInput)\n+            .as('ExtensionInput')\n+            .clear()\n+            .type('foobar')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', 'No Matches')\n+\n+            cy.findByTestId('no-results-clear').click()\n+\n+            cy.get('@ExtensionInput').should('have.value', '*.stories.*')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 Match')\n+          })\n+        })\n+\n+        it('shows input for file name filter', () => {\n+          cy.get('@CreateFromStoryDialog').within(() => {\n+            cy.findByLabelText('file-name-input').as('FileNameInput')\n+            .should('have.value', '')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 Match')\n+\n+            cy.get('@FileNameInput')\n+            .type('foobar')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', 'No Matches')\n+\n+            cy.findByTestId('no-results-clear').click()\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 Match')\n+\n+            cy.get('@FileNameInput')\n+            .type('Button.stories.jsx')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 of 1 Matches')\n+          })\n+        })\n+\n+        it('shows success modal with spec is created from story', () => {\n+          cy.get('@CreateFromStoryDialog').within(() => {\n+            cy.findAllByTestId('file-list-row').eq(0).as('NewSpecFile')\n+\n+            // TODO: assert visibility of secondary text on hover/focus when\n+            // item is made keyboard accessible\n+            // cy.get('@NewSpecFile).focus()\n+            // cy.findByText('src/stories/Button.stories.jsx').should('be.visible')\n+\n+            cy.get('@NewSpecFile').click()\n+          })\n+\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.successPage.header }).as('SuccessDialog').within(() => {\n+            cy.validateExternalLink({ name: 'Need help?', href: 'https://on.cypress.io' })\n+            cy.findByRole('button', { name: 'Close' }).should('be.visible')\n+            cy.contains('src/stories/Button.stories.cy.jsx').should('be.visible')\n+            cy.findByRole('link', { name: 'Okay, run the spec' }).should('have.attr', 'href', '#/specs/runner?file=src/stories/Button.stories.cy.jsx')\n+            cy.findByRole('button', { name: 'Create another spec' }).click()\n+          })\n+\n+          // 'Create a new spec' dialog presents with options when user indicates they want to create\n+          // another spec.\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.newSpecModalTitle }).within(() => {\n+            cy.findAllByTestId('card').eq(0)\n+            .should('have.attr', 'tabindex', '0')\n+\n+            // the storybook card remains enabled here\n+            cy.findAllByTestId('card').eq(1)\n+            .should('have.attr', 'tabindex', '0')\n+          })\n+        })\n+      })\n+    })\n+\n+    context('without storybook', () => {\n+      beforeEach(() => {\n+        cy.scaffoldProject('no-specs-no-storybook')\n+        cy.openProject('no-specs-no-storybook')\n+        cy.startAppServer('component')\n+        cy.visitApp()\n+\n+        // With no specs present, the page renders two cards, one for creating from found components,\n+        // another for creating from found stories. The story card is disabled due to storybook not\n+        // being configured for the scaffolded project.\n+        cy.findAllByTestId('card').eq(0).as('ComponentCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromComponent.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromComponent.description).should('be.visible')\n+        })\n+\n+        cy.findAllByTestId('card').eq(1).as('StoryCard')\n+        .should('have.attr', 'tabindex', '-1')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromStory.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromStory.notSetupDescription).should('be.visible')\n+        })\n+      })\n+\n+      it('shows create first spec page with create from component option', () => {\n+        cy.findByRole('heading', {\n+          level: 1,\n+          name: defaultMessages.createSpec.page.defaultPatternNoSpecs.title,\n+        }).should('be.visible')\n+\n+        cy.findByTestId('create-spec-page-description').should('be.visible').and('contain', defaultMessages.createSpec.page.defaultPatternNoSpecs.component.description)\n+\n+        cy.get('@ComponentCard').should('be.visible')\n+        cy.get('@StoryCard').should('be.visible')\n+\n+        cy.findByTestId('no-specs-message').should('be.visible').and('contain', defaultMessages.createSpec.noSpecsMessage)\n+\n+        cy.findByRole('link', { name: defaultMessages.createSpec.viewSpecPatternButton })\n+        .should('be.visible')\n+        .and('not.be.disabled')\n+        .and('have.attr', 'href', '#/settings?section=project&setting=specPattern')\n+      })\n+\n+      context('create from component', () => {\n+        beforeEach(() => {\n+          cy.get('@ComponentCard').click()\n+\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.component.importFromComponent.chooseAComponentHeader }).as('CreateFromComponentDialog')\n+\n+          cy.get('@CreateFromComponentDialog').within(() => {\n+            cy.validateExternalLink({ name: 'Need help?', href: 'https://on.cypress.io' })\n+          })\n+\n+          cy.findByRole('button', { name: 'Close' }).as('DialogCloseButton')\n+        })\n+\n+        it('shows dialog that can be dismissed with Close (x) button press', () => {\n+          cy.get('@DialogCloseButton').click()\n+          cy.findByRole('dialog').should('not.exist')\n+        })\n+\n+        it('shows input for file extension filter', () => {\n+          cy.get('@CreateFromComponentDialog').within(() => {\n+            cy.findByTestId('file-match-indicator').should('contain', '2 Matches')\n+            cy.findByRole('button', { name: '*.{jsx,tsx}' }).click()\n+            cy.findByPlaceholderText(defaultMessages.components.fileSearch.byExtensionInput)\n+            .as('ExtensionInput')\n+            .clear()\n+            .type('foobar')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', 'No Matches')\n+\n+            cy.findByTestId('no-results-clear').click()\n+\n+            cy.get('@ExtensionInput').should('have.value', '*.{jsx,tsx}')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '2 Matches')\n+          })\n+        })\n+\n+        it('shows input for file name filter', () => {\n+          cy.get('@CreateFromComponentDialog').within(() => {\n+            cy.findByLabelText('file-name-input').as('FileNameInput')\n+            .should('have.value', '')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '2 Matches')\n+\n+            cy.get('@FileNameInput')\n+            .type('foobar')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', 'No Matches')\n+\n+            cy.findByTestId('no-results-clear').click()\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '2 Matches')\n+\n+            cy.get('@FileNameInput')\n+            .type('App.jsx')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 of 2 Matches')\n+          })\n+        })\n+\n+        it('shows success modal with spec is created from component', () => {\n+          cy.get('@CreateFromComponentDialog').within(() => {\n+            cy.findAllByTestId('file-list-row').eq(0).as('NewSpecFile')\n+\n+            // TODO: assert visibility of secondary text on hover/focus when\n+            // item is made keyboard accessible\n+            // cy.get('@NewSpecFile).focus()\n+            // cy.findByText('src/stories/Button.stories.jsx').should('be.visible')\n+\n+            cy.get('@NewSpecFile').click()\n+          })\n+\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.successPage.header }).as('SuccessDialog').within(() => {\n+            cy.validateExternalLink({ name: 'Need help?', href: 'https://on.cypress.io' })\n+            cy.contains('src/App.cy.jsx').should('be.visible')\n+            cy.findByRole('button', { name: 'Close' }).should('be.visible')\n+            cy.findByRole('link', { name: 'Okay, run the spec' }).should('have.attr', 'href', '#/specs/runner?file=src/App.cy.jsx')\n+            cy.findByRole('button', { name: 'Create another spec' }).click()\n+          })\n+\n+          // 'Create a new spec' dialog presents with options when user indicates they want to create\n+          // another spec.\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.newSpecModalTitle }).within(() => {\n+            cy.findAllByTestId('card').eq(0)\n+            .should('have.attr', 'tabindex', '0')\n+\n+            // the storybook card remains disabled here\n+            cy.findAllByTestId('card').eq(1)\n+            .should('have.attr', 'tabindex', '-1')\n+          })\n+        })\n+      })\n+    })\n+  })\n+\n+  describe('Code Generation', () => {\n+    beforeEach(() => {\n+      cy.scaffoldProject('react-code-gen')\n+      cy.openProject('react-code-gen')\n+      cy.startAppServer('component')\n+      cy.visitApp()\n+    })\n+\n+    const checkCodeGenCandidates = (specs: string[]) => {\n+      cy.findByTestId('file-match-indicator').contains(`${specs.length} Match${specs.length > 1 ? 'es' : ''}`)\n+      cy.findAllByTestId('file-list-row').should('have.length', specs.length)\n+      .each((row, i) => cy.wrap(row).contains(specs[i]))\n+    }\n+",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "784306882",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 19659,
        "pr_file": "packages/app/cypress/e2e/specs_page.cy.ts",
        "discussion_id": "784306882",
        "commented_code": "@@ -0,0 +1,353 @@\n+import defaultMessages from '@packages/frontend-shared/src/locales/en-US.json'\n+\n+describe('Specs Page', () => {\n+  describe('Component Workflows', {\n+    viewportHeight: 768,\n+    viewportWidth: 1024,\n+  }, () => {\n+    context('with storybook', () => {\n+      beforeEach(() => {\n+        cy.scaffoldProject('no-specs')\n+        cy.openProject('no-specs')\n+        cy.startAppServer('component')\n+        cy.visitApp()\n+\n+        // With no specs present, the page renders two cards, one for creating from found components,\n+        // another for creating from found stories.\n+        cy.findAllByTestId('card').eq(0).as('ComponentCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromComponent.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromComponent.description).should('be.visible')\n+        })\n+\n+        cy.findAllByTestId('card').eq(1).as('StoryCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromStory.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromStory.description).should('be.visible')\n+        })\n+      })\n+\n+      it('shows create first spec page with create from component and create from story options', () => {\n+        cy.findByRole('heading', {\n+          level: 1,\n+          name: defaultMessages.createSpec.page.defaultPatternNoSpecs.title,\n+        }).should('be.visible')\n+\n+        cy.findByTestId('create-spec-page-description').should('be.visible').and('contain', defaultMessages.createSpec.page.defaultPatternNoSpecs.component.description)\n+\n+        cy.get('@ComponentCard').should('be.visible')\n+        cy.get('@StoryCard').should('be.visible')\n+\n+        cy.findByTestId('no-specs-message').should('be.visible').and('contain', defaultMessages.createSpec.noSpecsMessage)\n+\n+        cy.findByRole('link', { name: defaultMessages.createSpec.viewSpecPatternButton })\n+        .should('be.visible')\n+        .and('not.be.disabled')\n+        .and('have.attr', 'href', '#/settings?section=project&setting=specPattern')\n+      })\n+\n+      context('create from story', () => {\n+        beforeEach(() => {\n+          cy.get('@StoryCard').click()\n+\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.component.importFromStory.header }).as('CreateFromStoryDialog')\n+\n+          cy.get('@CreateFromStoryDialog').within(() => {\n+            cy.validateExternalLink({ name: 'Need help?', href: 'https://on.cypress.io' })\n+          })\n+\n+          cy.findByRole('button', { name: 'Close' }).as('DialogCloseButton')\n+        })\n+\n+        it('shows dialog that can be dismissed with Close (x) button press', () => {\n+          cy.get('@DialogCloseButton').click()\n+          cy.findByRole('dialog').should('not.exist')\n+        })\n+\n+        it('shows input for file extension filter', () => {\n+          cy.get('@CreateFromStoryDialog').within(() => {\n+            cy.findByTestId('file-match-indicator').should('contain', '1 Match')\n+            cy.findByRole('button', { name: '*.stories.*' }).click()\n+            cy.findByPlaceholderText(defaultMessages.components.fileSearch.byExtensionInput)\n+            .as('ExtensionInput')\n+            .clear()\n+            .type('foobar')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', 'No Matches')\n+\n+            cy.findByTestId('no-results-clear').click()\n+\n+            cy.get('@ExtensionInput').should('have.value', '*.stories.*')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 Match')\n+          })\n+        })\n+\n+        it('shows input for file name filter', () => {\n+          cy.get('@CreateFromStoryDialog').within(() => {\n+            cy.findByLabelText('file-name-input').as('FileNameInput')\n+            .should('have.value', '')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 Match')\n+\n+            cy.get('@FileNameInput')\n+            .type('foobar')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', 'No Matches')\n+\n+            cy.findByTestId('no-results-clear').click()\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 Match')\n+\n+            cy.get('@FileNameInput')\n+            .type('Button.stories.jsx')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 of 1 Matches')\n+          })\n+        })\n+\n+        it('shows success modal with spec is created from story', () => {\n+          cy.get('@CreateFromStoryDialog').within(() => {\n+            cy.findAllByTestId('file-list-row').eq(0).as('NewSpecFile')\n+\n+            // TODO: assert visibility of secondary text on hover/focus when\n+            // item is made keyboard accessible\n+            // cy.get('@NewSpecFile).focus()\n+            // cy.findByText('src/stories/Button.stories.jsx').should('be.visible')\n+\n+            cy.get('@NewSpecFile').click()\n+          })\n+\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.successPage.header }).as('SuccessDialog').within(() => {\n+            cy.validateExternalLink({ name: 'Need help?', href: 'https://on.cypress.io' })\n+            cy.findByRole('button', { name: 'Close' }).should('be.visible')\n+            cy.contains('src/stories/Button.stories.cy.jsx').should('be.visible')\n+            cy.findByRole('link', { name: 'Okay, run the spec' }).should('have.attr', 'href', '#/specs/runner?file=src/stories/Button.stories.cy.jsx')\n+            cy.findByRole('button', { name: 'Create another spec' }).click()\n+          })\n+\n+          // 'Create a new spec' dialog presents with options when user indicates they want to create\n+          // another spec.\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.newSpecModalTitle }).within(() => {\n+            cy.findAllByTestId('card').eq(0)\n+            .should('have.attr', 'tabindex', '0')\n+\n+            // the storybook card remains enabled here\n+            cy.findAllByTestId('card').eq(1)\n+            .should('have.attr', 'tabindex', '0')\n+          })\n+        })\n+      })\n+    })\n+\n+    context('without storybook', () => {\n+      beforeEach(() => {\n+        cy.scaffoldProject('no-specs-no-storybook')\n+        cy.openProject('no-specs-no-storybook')\n+        cy.startAppServer('component')\n+        cy.visitApp()\n+\n+        // With no specs present, the page renders two cards, one for creating from found components,\n+        // another for creating from found stories. The story card is disabled due to storybook not\n+        // being configured for the scaffolded project.\n+        cy.findAllByTestId('card').eq(0).as('ComponentCard')\n+        .should('have.attr', 'tabindex', '0')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromComponent.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromComponent.description).should('be.visible')\n+        })\n+\n+        cy.findAllByTestId('card').eq(1).as('StoryCard')\n+        .should('have.attr', 'tabindex', '-1')\n+        .within(() => {\n+          cy.findByRole('heading', { level: 2, name: defaultMessages.createSpec.component.importFromStory.header }).should('be.visible')\n+          cy.contains(defaultMessages.createSpec.component.importFromStory.notSetupDescription).should('be.visible')\n+        })\n+      })\n+\n+      it('shows create first spec page with create from component option', () => {\n+        cy.findByRole('heading', {\n+          level: 1,\n+          name: defaultMessages.createSpec.page.defaultPatternNoSpecs.title,\n+        }).should('be.visible')\n+\n+        cy.findByTestId('create-spec-page-description').should('be.visible').and('contain', defaultMessages.createSpec.page.defaultPatternNoSpecs.component.description)\n+\n+        cy.get('@ComponentCard').should('be.visible')\n+        cy.get('@StoryCard').should('be.visible')\n+\n+        cy.findByTestId('no-specs-message').should('be.visible').and('contain', defaultMessages.createSpec.noSpecsMessage)\n+\n+        cy.findByRole('link', { name: defaultMessages.createSpec.viewSpecPatternButton })\n+        .should('be.visible')\n+        .and('not.be.disabled')\n+        .and('have.attr', 'href', '#/settings?section=project&setting=specPattern')\n+      })\n+\n+      context('create from component', () => {\n+        beforeEach(() => {\n+          cy.get('@ComponentCard').click()\n+\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.component.importFromComponent.chooseAComponentHeader }).as('CreateFromComponentDialog')\n+\n+          cy.get('@CreateFromComponentDialog').within(() => {\n+            cy.validateExternalLink({ name: 'Need help?', href: 'https://on.cypress.io' })\n+          })\n+\n+          cy.findByRole('button', { name: 'Close' }).as('DialogCloseButton')\n+        })\n+\n+        it('shows dialog that can be dismissed with Close (x) button press', () => {\n+          cy.get('@DialogCloseButton').click()\n+          cy.findByRole('dialog').should('not.exist')\n+        })\n+\n+        it('shows input for file extension filter', () => {\n+          cy.get('@CreateFromComponentDialog').within(() => {\n+            cy.findByTestId('file-match-indicator').should('contain', '2 Matches')\n+            cy.findByRole('button', { name: '*.{jsx,tsx}' }).click()\n+            cy.findByPlaceholderText(defaultMessages.components.fileSearch.byExtensionInput)\n+            .as('ExtensionInput')\n+            .clear()\n+            .type('foobar')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', 'No Matches')\n+\n+            cy.findByTestId('no-results-clear').click()\n+\n+            cy.get('@ExtensionInput').should('have.value', '*.{jsx,tsx}')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '2 Matches')\n+          })\n+        })\n+\n+        it('shows input for file name filter', () => {\n+          cy.get('@CreateFromComponentDialog').within(() => {\n+            cy.findByLabelText('file-name-input').as('FileNameInput')\n+            .should('have.value', '')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '2 Matches')\n+\n+            cy.get('@FileNameInput')\n+            .type('foobar')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', 'No Matches')\n+\n+            cy.findByTestId('no-results-clear').click()\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '2 Matches')\n+\n+            cy.get('@FileNameInput')\n+            .type('App.jsx')\n+\n+            cy.findByTestId('file-match-indicator').should('contain', '1 of 2 Matches')\n+          })\n+        })\n+\n+        it('shows success modal with spec is created from component', () => {\n+          cy.get('@CreateFromComponentDialog').within(() => {\n+            cy.findAllByTestId('file-list-row').eq(0).as('NewSpecFile')\n+\n+            // TODO: assert visibility of secondary text on hover/focus when\n+            // item is made keyboard accessible\n+            // cy.get('@NewSpecFile).focus()\n+            // cy.findByText('src/stories/Button.stories.jsx').should('be.visible')\n+\n+            cy.get('@NewSpecFile').click()\n+          })\n+\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.successPage.header }).as('SuccessDialog').within(() => {\n+            cy.validateExternalLink({ name: 'Need help?', href: 'https://on.cypress.io' })\n+            cy.contains('src/App.cy.jsx').should('be.visible')\n+            cy.findByRole('button', { name: 'Close' }).should('be.visible')\n+            cy.findByRole('link', { name: 'Okay, run the spec' }).should('have.attr', 'href', '#/specs/runner?file=src/App.cy.jsx')\n+            cy.findByRole('button', { name: 'Create another spec' }).click()\n+          })\n+\n+          // 'Create a new spec' dialog presents with options when user indicates they want to create\n+          // another spec.\n+          cy.findByRole('dialog', { name: defaultMessages.createSpec.newSpecModalTitle }).within(() => {\n+            cy.findAllByTestId('card').eq(0)\n+            .should('have.attr', 'tabindex', '0')\n+\n+            // the storybook card remains disabled here\n+            cy.findAllByTestId('card').eq(1)\n+            .should('have.attr', 'tabindex', '-1')\n+          })\n+        })\n+      })\n+    })\n+  })\n+\n+  describe('Code Generation', () => {\n+    beforeEach(() => {\n+      cy.scaffoldProject('react-code-gen')\n+      cy.openProject('react-code-gen')\n+      cy.startAppServer('component')\n+      cy.visitApp()\n+    })\n+\n+    const checkCodeGenCandidates = (specs: string[]) => {\n+      cy.findByTestId('file-match-indicator').contains(`${specs.length} Match${specs.length > 1 ? 'es' : ''}`)\n+      cy.findAllByTestId('file-list-row').should('have.length', specs.length)\n+      .each((row, i) => cy.wrap(row).contains(specs[i]))\n+    }\n+",
        "comment_created_at": "2022-01-13T20:38:47+00:00",
        "comment_author": "emilyrohrbough",
        "comment_body": "It'd be worth beefing this up to test for:\r\n- generating spec from component/story multiple times --  naming and code generation\r\n- cannot generate spec from a spec\r\n- generating a spec from a story when the `create from component` route is used",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "381348990",
    "pr_number": 6494,
    "pr_file": "packages/server/test/e2e/4_before_browser_launch_spec.ts",
    "created_at": "2020-02-19T15:02:29+00:00",
    "commented_code": "sanitizeScreenshotDimensions: true,\n     snapshot: true,\n   })\n+\n+  e2e.it('can change browser prefs (download dir)', {\n+    spec: '*',",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "381348990",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 6494,
        "pr_file": "packages/server/test/e2e/4_before_browser_launch_spec.ts",
        "discussion_id": "381348990",
        "commented_code": "@@ -35,4 +35,10 @@ describe('e2e before:browser:launch', () => {\n     sanitizeScreenshotDimensions: true,\n     snapshot: true,\n   })\n+\n+  e2e.it('can change browser prefs (download dir)', {\n+    spec: '*',",
        "comment_created_at": "2020-02-19T15:02:29+00:00",
        "comment_author": "flotwig",
        "comment_body": "there's no snapshot, and the spec is *, which means there's no assertion that the expected spec actually ran, just that there was some specfile, so i think you should add `snapshot: true` here",
        "pr_file_module": null
      },
      {
        "comment_id": "381587488",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 6494,
        "pr_file": "packages/server/test/e2e/4_before_browser_launch_spec.ts",
        "discussion_id": "381348990",
        "commented_code": "@@ -35,4 +35,10 @@ describe('e2e before:browser:launch', () => {\n     sanitizeScreenshotDimensions: true,\n     snapshot: true,\n   })\n+\n+  e2e.it('can change browser prefs (download dir)', {\n+    spec: '*',",
        "comment_created_at": "2020-02-19T22:37:42+00:00",
        "comment_author": "kuceb",
        "comment_body": "fair",
        "pr_file_module": null
      }
    ]
  }
]