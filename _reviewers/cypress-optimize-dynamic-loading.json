[
  {
    "discussion_id": "620436792",
    "pr_number": 16183,
    "pr_file": "npm/vite-dev-server/client/initCypressTests.js",
    "created_at": "2021-04-26T16:02:07+00:00",
    "commented_code": "const specPath = window.location.pathname.replace(originAutUrl, '')\n \n-const importsToLoad = [() => import(/* @vite-ignore */ specPath)]\n+/**\n+ * It was necessary here to wrap the imports\n+ * in setTimeout to avoid for the imports to run before\n+ * vite is connected and ready to deal with errors\n+ *\n+ * If not, the imports of new dependencies failures\n+ * would kill tests before they start\n+ */\n+const importsToLoad = [() => {\n+  return new Promise((resolve) => {\n+    setTimeout(() => {\n+      import(/* @vite-ignore */ specPath).then(resolve)\n+    }, 1)",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "620436792",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 16183,
        "pr_file": "npm/vite-dev-server/client/initCypressTests.js",
        "discussion_id": "620436792",
        "commented_code": "@@ -6,10 +6,32 @@ const originAutUrl = import.meta.env.__cypress_originAutUrl\n \n const specPath = window.location.pathname.replace(originAutUrl, '')\n \n-const importsToLoad = [() => import(/* @vite-ignore */ specPath)]\n+/**\n+ * It was necessary here to wrap the imports\n+ * in setTimeout to avoid for the imports to run before\n+ * vite is connected and ready to deal with errors\n+ *\n+ * If not, the imports of new dependencies failures\n+ * would kill tests before they start\n+ */\n+const importsToLoad = [() => {\n+  return new Promise((resolve) => {\n+    setTimeout(() => {\n+      import(/* @vite-ignore */ specPath).then(resolve)\n+    }, 1)",
        "comment_created_at": "2021-04-26T16:02:07+00:00",
        "comment_author": "agg23",
        "comment_body": "Please change these to 0ms (next tick).",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "547825285",
    "pr_number": 14266,
    "pr_file": "packages/runner-ct/src/lib/state.js",
    "created_at": "2020-12-23T08:56:23+00:00",
    "commented_code": "}\n \n   runMultiMode = async () => {\n+    const eventManager = await import(/* webpackChunkName: \"ctChunk-EventManager\" */'./event-manager').then((module) => module.default)",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "547825285",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 14266,
        "pr_file": "packages/runner-ct/src/lib/state.js",
        "discussion_id": "547825285",
        "commented_code": "@@ -187,6 +186,7 @@ export default class State {\n   }\n \n   runMultiMode = async () => {\n+    const eventManager = await import(/* webpackChunkName: \"ctChunk-EventManager\" */'./event-manager').then((module) => module.default)",
        "comment_created_at": "2020-12-23T08:56:23+00:00",
        "comment_author": "lmiller1990",
        "comment_body": "I am not super familiar w/ code splitting - what exactly is the benefit of naming this chunk here?",
        "pr_file_module": null
      },
      {
        "comment_id": "548218450",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 14266,
        "pr_file": "packages/runner-ct/src/lib/state.js",
        "discussion_id": "547825285",
        "commented_code": "@@ -187,6 +186,7 @@ export default class State {\n   }\n \n   runMultiMode = async () => {\n+    const eventManager = await import(/* webpackChunkName: \"ctChunk-EventManager\" */'./event-manager').then((module) => module.default)",
        "comment_created_at": "2020-12-23T20:39:51+00:00",
        "comment_author": "dmtrKovalenko",
        "comment_body": "1) \u2013 we have a readable file name in the system\r\n2) - we can ensure that we handle only our file on api (routes-ct controller) ",
        "pr_file_module": null
      }
    ]
  }
]