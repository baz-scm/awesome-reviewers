[
  {
    "discussion_id": "645372784",
    "pr_number": 16810,
    "pr_file": "packages/server/lib/gui/events.js",
    "created_at": "2021-06-04T08:01:26+00:00",
    "commented_code": "}\n \n   switch (type) {\n+    case 'get:package-manager': {\n+      return getPackageManager()\n+      .then((pkg) => {\n+        return sendResponse({ type: 'success', event: 'get:package-manager', data: pkg })",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "645372784",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 16810,
        "pr_file": "packages/server/lib/gui/events.js",
        "discussion_id": "645372784",
        "commented_code": "@@ -75,6 +79,20 @@ const handleEvent = function (options, bus, event, id, type, arg) {\n   }\n \n   switch (type) {\n+    case 'get:package-manager': {\n+      return getPackageManager()\n+      .then((pkg) => {\n+        return sendResponse({ type: 'success', event: 'get:package-manager', data: pkg })",
        "comment_created_at": "2021-06-04T08:01:26+00:00",
        "comment_author": "lmiller1990",
        "comment_body": "I think it would be good to have a standard way to communicate between server <-> desktop GUI. The standard payload might be:\r\n\r\n```js\r\n{\r\n  type: 'success' | 'error',\r\n  data: any\r\n  event: string\r\n}\r\n```\r\n\r\nThis makes it easy to have a type safe event emitter - see below.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "440443411",
    "pr_number": 6799,
    "pr_file": "packages/driver/src/cy/commands/agents.js",
    "created_at": "2020-06-15T20:59:02+00:00",
    "commented_code": "return agent\n     }\n \n+    // disable DOM snapshots during log for this agent\n+    agent.snapshot = (bool = true) => {\n+      agent._noSnapshot = !bool\n+\n+      return agent\n+    }\n+",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "440443411",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 6799,
        "pr_file": "packages/driver/src/cy/commands/agents.js",
        "discussion_id": "440443411",
        "commented_code": "@@ -218,6 +218,13 @@ module.exports = function (Commands, Cypress, cy, state) {\n       return agent\n     }\n \n+    // disable DOM snapshots during log for this agent\n+    agent.snapshot = (bool = true) => {\n+      agent._noSnapshot = !bool\n+\n+      return agent\n+    }\n+",
        "comment_created_at": "2020-06-15T20:59:02+00:00",
        "comment_author": "brian-mann",
        "comment_body": "might be a better / more readable API to do...\r\n\r\n```js\r\nagent.log = (options) => {\r\n  if (options && options.snapshot === false) {\r\n     // do the thing\r\n  }\r\n})\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "440443609",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 6799,
        "pr_file": "packages/driver/src/cy/commands/agents.js",
        "discussion_id": "440443411",
        "commented_code": "@@ -218,6 +218,13 @@ module.exports = function (Commands, Cypress, cy, state) {\n       return agent\n     }\n \n+    // disable DOM snapshots during log for this agent\n+    agent.snapshot = (bool = true) => {\n+      agent._noSnapshot = !bool\n+\n+      return agent\n+    }\n+",
        "comment_created_at": "2020-06-15T20:59:20+00:00",
        "comment_author": "brian-mann",
        "comment_body": "Or more like `agent.options` or `agent.logOptions`",
        "pr_file_module": null
      }
    ]
  }
]