[
  {
    "discussion_id": "638119766",
    "pr_number": 16652,
    "pr_file": "packages/driver/cypress/integration/cypress/currentTest_spec.js",
    "created_at": "2021-05-24T16:52:32+00:00",
    "commented_code": "+let global_err = null\n+\n+try {\n+  Cypress.currentTest\n+} catch (e) {\n+  global_err = e\n+}\n+\n+describe('currentTest', () => {\n+  let suite_err = null\n+\n+  try {\n+    Cypress.currentTest\n+  } catch (e) {\n+    suite_err = e\n+  }\n+\n+  before(() => {\n+    expect(Cypress.currentTest.title).eq(cy.state('runnable').ctx.currentTest.title)",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "638119766",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 16652,
        "pr_file": "packages/driver/cypress/integration/cypress/currentTest_spec.js",
        "discussion_id": "638119766",
        "commented_code": "@@ -0,0 +1,53 @@\n+let global_err = null\n+\n+try {\n+  Cypress.currentTest\n+} catch (e) {\n+  global_err = e\n+}\n+\n+describe('currentTest', () => {\n+  let suite_err = null\n+\n+  try {\n+    Cypress.currentTest\n+  } catch (e) {\n+    suite_err = e\n+  }\n+\n+  before(() => {\n+    expect(Cypress.currentTest.title).eq(cy.state('runnable').ctx.currentTest.title)",
        "comment_created_at": "2021-05-24T16:52:32+00:00",
        "comment_author": "flotwig",
        "comment_body": "This will pass even if both are `undefined`.\r\n\r\n```suggestion\r\n\texpect(Cypress.currentTest.title).to.be.a('string')\r\n    expect(Cypress.currentTest.title).eq(cy.state('runnable').ctx.currentTest.title)\r\n```\r\n\r\n... and move this to a function and do the same in the other hooks?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "681116089",
    "pr_number": 16652,
    "pr_file": "packages/driver/cypress/integration/cypress/currentTest_spec.js",
    "created_at": "2021-08-02T16:35:24+00:00",
    "commented_code": "+const rootResult = Cypress.currentTest\n+\n+describe('currentTest', () => {\n+  const suiteResult = Cypress.currentTest\n+\n+  before(() => {\n+    expectMatchingCurrentTitleInHook()\n+  })\n+\n+  beforeEach(() => {\n+    expectMatchingCurrentTitleInHook()\n+  })\n+\n+  after(() => {\n+    expectMatchingCurrentTitleInHook()\n+  })\n+\n+  afterEach(() => {\n+    expectMatchingCurrentTitleInHook()\n+  })\n+\n+  it('returns current test runnable properties', () => {\n+    expect(Cypress.currentTest.title)\n+    .is.a('string')\n+    .eq(cy.state('runnable').title)",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "681116089",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 16652,
        "pr_file": "packages/driver/cypress/integration/cypress/currentTest_spec.js",
        "discussion_id": "681116089",
        "commented_code": "@@ -0,0 +1,44 @@\n+const rootResult = Cypress.currentTest\n+\n+describe('currentTest', () => {\n+  const suiteResult = Cypress.currentTest\n+\n+  before(() => {\n+    expectMatchingCurrentTitleInHook()\n+  })\n+\n+  beforeEach(() => {\n+    expectMatchingCurrentTitleInHook()\n+  })\n+\n+  after(() => {\n+    expectMatchingCurrentTitleInHook()\n+  })\n+\n+  afterEach(() => {\n+    expectMatchingCurrentTitleInHook()\n+  })\n+\n+  it('returns current test runnable properties', () => {\n+    expect(Cypress.currentTest.title)\n+    .is.a('string')\n+    .eq(cy.state('runnable').title)",
        "comment_created_at": "2021-08-02T16:35:24+00:00",
        "comment_author": "flotwig",
        "comment_body": "`title` could be the same wrong string for both, so this test could use an assertion against a string literal to be more regression-proof\r\n\r\n```suggestion\r\n    .eq(cy.state('runnable').title)\r\n    .eq('returns current test runnable properties')\r\n\r\n```",
        "pr_file_module": null
      }
    ]
  }
]