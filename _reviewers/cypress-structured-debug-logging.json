[
  {
    "discussion_id": "430612409",
    "pr_number": 7463,
    "pr_file": "packages/server/lib/config.coffee",
    "created_at": "2020-05-26T18:14:38+00:00",
    "commented_code": "Promise\n     .try ->\n       ## resolve full path with extension\n-      obj.pluginsFile = require.resolve(pluginsFile)\n+      obj.pluginsFile = utils.resolveModule(pluginsFile)\n       debug(\"set pluginsFile to #{obj.pluginsFile}\")\n     .catch {code: \"MODULE_NOT_FOUND\"}, ->\n-      debug(\"plugins file does not exist\")\n+      debug(\"plugins module %s does not exist\", pluginsFile)",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "430612409",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 7463,
        "pr_file": "packages/server/lib/config.coffee",
        "discussion_id": "430612409",
        "commented_code": "@@ -594,18 +618,28 @@ module.exports = {\n     Promise\n     .try ->\n       ## resolve full path with extension\n-      obj.pluginsFile = require.resolve(pluginsFile)\n+      obj.pluginsFile = utils.resolveModule(pluginsFile)\n       debug(\"set pluginsFile to #{obj.pluginsFile}\")\n     .catch {code: \"MODULE_NOT_FOUND\"}, ->\n-      debug(\"plugins file does not exist\")\n+      debug(\"plugins module %s does not exist\", pluginsFile)",
        "comment_created_at": "2020-05-26T18:14:38+00:00",
        "comment_author": "flotwig",
        "comment_body": "for readability: \r\n```suggestion\r\n      debug(\"plugins module does not exist %o\", { pluginsFile })\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "430612913",
    "pr_number": 7463,
    "pr_file": "packages/server/lib/config.coffee",
    "created_at": "2020-05-26T18:15:31+00:00",
    "commented_code": "Promise\n     .try ->\n       ## resolve full path with extension\n-      obj.pluginsFile = require.resolve(pluginsFile)\n+      obj.pluginsFile = utils.resolveModule(pluginsFile)\n       debug(\"set pluginsFile to #{obj.pluginsFile}\")\n     .catch {code: \"MODULE_NOT_FOUND\"}, ->\n-      debug(\"plugins file does not exist\")\n+      debug(\"plugins module %s does not exist\", pluginsFile)\n       if pluginsFile is path.resolve(obj.projectRoot, CONFIG_DEFAULTS.pluginsFile)\n-        debug(\"plugins file is default, check if #{path.dirname(pluginsFile)} exists\")\n+        debug(\"plugins file %s is default, check if folder %s exists\",\n+          pluginsFile, path.dirname(pluginsFile))",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "430612913",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 7463,
        "pr_file": "packages/server/lib/config.coffee",
        "discussion_id": "430612913",
        "commented_code": "@@ -594,18 +618,28 @@ module.exports = {\n     Promise\n     .try ->\n       ## resolve full path with extension\n-      obj.pluginsFile = require.resolve(pluginsFile)\n+      obj.pluginsFile = utils.resolveModule(pluginsFile)\n       debug(\"set pluginsFile to #{obj.pluginsFile}\")\n     .catch {code: \"MODULE_NOT_FOUND\"}, ->\n-      debug(\"plugins file does not exist\")\n+      debug(\"plugins module %s does not exist\", pluginsFile)\n       if pluginsFile is path.resolve(obj.projectRoot, CONFIG_DEFAULTS.pluginsFile)\n-        debug(\"plugins file is default, check if #{path.dirname(pluginsFile)} exists\")\n+        debug(\"plugins file %s is default, check if folder %s exists\",\n+          pluginsFile, path.dirname(pluginsFile))",
        "comment_created_at": "2020-05-26T18:15:31+00:00",
        "comment_author": "flotwig",
        "comment_body": "for readability:\r\n```suggestion\r\n        debug(\"checking if pluginsFile exists\", { pluginsFile, dirName: path.dirname(pluginsFile) })\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "430613643",
    "pr_number": 7463,
    "pr_file": "packages/server/lib/config.coffee",
    "created_at": "2020-05-26T18:16:54+00:00",
    "commented_code": "Promise\n     .try ->\n       ## resolve full path with extension\n-      obj.pluginsFile = require.resolve(pluginsFile)\n+      obj.pluginsFile = utils.resolveModule(pluginsFile)\n       debug(\"set pluginsFile to #{obj.pluginsFile}\")\n     .catch {code: \"MODULE_NOT_FOUND\"}, ->\n-      debug(\"plugins file does not exist\")\n+      debug(\"plugins module %s does not exist\", pluginsFile)\n       if pluginsFile is path.resolve(obj.projectRoot, CONFIG_DEFAULTS.pluginsFile)\n-        debug(\"plugins file is default, check if #{path.dirname(pluginsFile)} exists\")\n+        debug(\"plugins file %s is default, check if folder %s exists\",\n+          pluginsFile, path.dirname(pluginsFile))\n+\n         fs.pathExists(pluginsFile)\n         .then (found) ->\n           if found\n-            debug(\"plugins folder exists, set pluginsFile to false\")\n-            ## if the directory exists, set it to false so it's ignored\n-            obj.pluginsFile = false\n+            debug(\"is there index.ts in the plugins folder %s?\", pluginsFile)",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "430613643",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 7463,
        "pr_file": "packages/server/lib/config.coffee",
        "discussion_id": "430613643",
        "commented_code": "@@ -594,18 +618,28 @@ module.exports = {\n     Promise\n     .try ->\n       ## resolve full path with extension\n-      obj.pluginsFile = require.resolve(pluginsFile)\n+      obj.pluginsFile = utils.resolveModule(pluginsFile)\n       debug(\"set pluginsFile to #{obj.pluginsFile}\")\n     .catch {code: \"MODULE_NOT_FOUND\"}, ->\n-      debug(\"plugins file does not exist\")\n+      debug(\"plugins module %s does not exist\", pluginsFile)\n       if pluginsFile is path.resolve(obj.projectRoot, CONFIG_DEFAULTS.pluginsFile)\n-        debug(\"plugins file is default, check if #{path.dirname(pluginsFile)} exists\")\n+        debug(\"plugins file %s is default, check if folder %s exists\",\n+          pluginsFile, path.dirname(pluginsFile))\n+\n         fs.pathExists(pluginsFile)\n         .then (found) ->\n           if found\n-            debug(\"plugins folder exists, set pluginsFile to false\")\n-            ## if the directory exists, set it to false so it's ignored\n-            obj.pluginsFile = false\n+            debug(\"is there index.ts in the plugins folder %s?\", pluginsFile)",
        "comment_created_at": "2020-05-26T18:16:54+00:00",
        "comment_author": "flotwig",
        "comment_body": "can you try to consolidate these debug lines so we don't need a bunch of them scattered everywhere? we are logging out the same data across many modules already and i want to decrease duplication in debug logs as much as possible",
        "pr_file_module": null
      },
      {
        "comment_id": "430617463",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 7463,
        "pr_file": "packages/server/lib/config.coffee",
        "discussion_id": "430613643",
        "commented_code": "@@ -594,18 +618,28 @@ module.exports = {\n     Promise\n     .try ->\n       ## resolve full path with extension\n-      obj.pluginsFile = require.resolve(pluginsFile)\n+      obj.pluginsFile = utils.resolveModule(pluginsFile)\n       debug(\"set pluginsFile to #{obj.pluginsFile}\")\n     .catch {code: \"MODULE_NOT_FOUND\"}, ->\n-      debug(\"plugins file does not exist\")\n+      debug(\"plugins module %s does not exist\", pluginsFile)\n       if pluginsFile is path.resolve(obj.projectRoot, CONFIG_DEFAULTS.pluginsFile)\n-        debug(\"plugins file is default, check if #{path.dirname(pluginsFile)} exists\")\n+        debug(\"plugins file %s is default, check if folder %s exists\",\n+          pluginsFile, path.dirname(pluginsFile))\n+\n         fs.pathExists(pluginsFile)\n         .then (found) ->\n           if found\n-            debug(\"plugins folder exists, set pluginsFile to false\")\n-            ## if the directory exists, set it to false so it's ignored\n-            obj.pluginsFile = false\n+            debug(\"is there index.ts in the plugins folder %s?\", pluginsFile)",
        "comment_created_at": "2020-05-26T18:23:28+00:00",
        "comment_author": "bahmutov",
        "comment_body": "I don't think the number of debug log messages is a problem, especially compared to debugging production code - then seeing each branch taken is huge benefit",
        "pr_file_module": null
      },
      {
        "comment_id": "430626673",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 7463,
        "pr_file": "packages/server/lib/config.coffee",
        "discussion_id": "430613643",
        "commented_code": "@@ -594,18 +618,28 @@ module.exports = {\n     Promise\n     .try ->\n       ## resolve full path with extension\n-      obj.pluginsFile = require.resolve(pluginsFile)\n+      obj.pluginsFile = utils.resolveModule(pluginsFile)\n       debug(\"set pluginsFile to #{obj.pluginsFile}\")\n     .catch {code: \"MODULE_NOT_FOUND\"}, ->\n-      debug(\"plugins file does not exist\")\n+      debug(\"plugins module %s does not exist\", pluginsFile)\n       if pluginsFile is path.resolve(obj.projectRoot, CONFIG_DEFAULTS.pluginsFile)\n-        debug(\"plugins file is default, check if #{path.dirname(pluginsFile)} exists\")\n+        debug(\"plugins file %s is default, check if folder %s exists\",\n+          pluginsFile, path.dirname(pluginsFile))\n+\n         fs.pathExists(pluginsFile)\n         .then (found) ->\n           if found\n-            debug(\"plugins folder exists, set pluginsFile to false\")\n-            ## if the directory exists, set it to false so it's ignored\n-            obj.pluginsFile = false\n+            debug(\"is there index.ts in the plugins folder %s?\", pluginsFile)",
        "comment_created_at": "2020-05-26T18:39:12+00:00",
        "comment_author": "flotwig",
        "comment_body": "agreed, but you can accomplish the same thing with fewer debug lines by logging out branch conditions instead of logging out a different line for each branch, stuff like that... plus, pluginsFile is logged out prior to this point by other config code",
        "pr_file_module": null
      }
    ]
  }
]