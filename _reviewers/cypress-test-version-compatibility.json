[
  {
    "discussion_id": "1034295419",
    "pr_number": 24832,
    "pr_file": "system-tests/projects/react17/src/UsingLegacyMount.cy.jsx",
    "created_at": "2022-11-29T04:47:02+00:00",
    "commented_code": "-import React from 'react'\n-import { mount } from 'cypress/react'\n+// import React from 'react'",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "1034295419",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 24832,
        "pr_file": "system-tests/projects/react17/src/UsingLegacyMount.cy.jsx",
        "discussion_id": "1034295419",
        "commented_code": "@@ -1,22 +1,24 @@\n-import React from 'react'\n-import { mount } from 'cypress/react'\n+// import React from 'react'",
        "comment_created_at": "2022-11-29T04:47:02+00:00",
        "comment_author": "lmiller1990",
        "comment_body": "I do not have a good solution here. This test cannot execute - in fact, it doesn't even compile,. since `cypress/react` assumes `react-dom/client` exists, which is a React 18 only API. This causes Vite to throw a compilation error.",
        "pr_file_module": null
      },
      {
        "comment_id": "1036223663",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 24832,
        "pr_file": "system-tests/projects/react17/src/UsingLegacyMount.cy.jsx",
        "discussion_id": "1034295419",
        "commented_code": "@@ -1,22 +1,24 @@\n-import React from 'react'\n-import { mount } from 'cypress/react'\n+// import React from 'react'",
        "comment_created_at": "2022-11-30T16:57:19+00:00",
        "comment_author": "mike-plummer",
        "comment_body": "Could we use `mock-require` or `proxyquire` to stub out the `react-dom/client` module just to make Vite happy while it resolves dependencies?",
        "pr_file_module": null
      },
      {
        "comment_id": "1036426194",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 24832,
        "pr_file": "system-tests/projects/react17/src/UsingLegacyMount.cy.jsx",
        "discussion_id": "1034295419",
        "commented_code": "@@ -1,22 +1,24 @@\n-import React from 'react'\n-import { mount } from 'cypress/react'\n+// import React from 'react'",
        "comment_created_at": "2022-11-30T20:45:20+00:00",
        "comment_author": "lmiller1990",
        "comment_body": "Interesting idea... I haven't `proxyquire` - It might be possible, we'd need to make sure it works for both bundlers... at this point, I feel like a clean migration UI might even be more simple and cleaner, without adding too much technical complexity. As we also discussed earlier, we won't rush this for Cy 12, so maybe we can spend a bit more time thinking about it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1036208310",
    "pr_number": 24832,
    "pr_file": "system-tests/projects/react18/src/UsingLegacyMount.cy.jsx",
    "created_at": "2022-11-30T16:43:48+00:00",
    "commented_code": "import React from 'react'\n-import { mount } from 'cypress/react'\n+import { mount } from 'cypress/react18'\n \n function App () {\n   return <h1>Hello world</h1>\n }\n \n describe('using legacy mount', () => {",
    "repo_full_name": "cypress-io/cypress",
    "discussion_comments": [
      {
        "comment_id": "1036208310",
        "repo_full_name": "cypress-io/cypress",
        "pr_number": 24832,
        "pr_file": "system-tests/projects/react18/src/UsingLegacyMount.cy.jsx",
        "discussion_id": "1036208310",
        "commented_code": "@@ -1,23 +1,22 @@\n import React from 'react'\n-import { mount } from 'cypress/react'\n+import { mount } from 'cypress/react18'\n \n function App () {\n   return <h1>Hello world</h1>\n }\n \n describe('using legacy mount', () => {",
        "comment_created_at": "2022-11-30T16:43:48+00:00",
        "comment_author": "mike-plummer",
        "comment_body": "To validate the \"legacy\" mount behavior would we want this React18 test to attempt using the React17 mount and validate the user gets the helpful message?",
        "pr_file_module": null
      }
    ]
  }
]