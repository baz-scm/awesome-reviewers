[
  {
    "discussion_id": "629135730",
    "pr_number": 9298,
    "pr_file": ".github/workflows/build-deploy-linux-cuda-11.0.yml",
    "created_at": "2021-05-10T08:15:19+00:00",
    "commented_code": "run: |\n             echo \"LIBND4J_HOME=${GITHUB_WORKSPACE}/libnd4j_home/libnd4j\" >> \"$GITHUB_ENV\"\n         if: ${{ github.event.inputs.libnd4jUrl != '' }}\n+      - name: Set mvn build command based on matrix\n+        shell: bash\n+        run: |\n+              HELPER=${{ matrix.helper }}\n+              EXTENSION=${{ matrix.extension }}\n+              if [ \"${HELPER}\" != '' ] && [ \"${EXTENSION}\" != '' ]; then\n+              command=\"mvn  -Possrh -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform.extension=-${{ matrix.helper }}-${{ matrix.extension }} -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda   --also-make  -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }} -Pcuda  clean --batch-mode package deploy  -DskipTests\"\n+              elif [ \"${HELPER}\" != '' ]; then\n+                  command=\"mvn  -Possrh -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform.extension=-${{ matrix.helper }} -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda   --also-make  -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }} -Pcuda  clean --batch-mode package deploy  -DskipTests\"\n+              else\n+                  command=\"mvn  -Possrh -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform.extension=${{ matrix.extension }} -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda   --also-make  -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }} -Pcuda  clean --batch-mode package deploy  -DskipTests\"\n+              fi\n+              echo \"Setting command for helper ${{ matrix.helper }} and extension ${{ matrix.extension }} to ${command}\"\n+              echo \"COMMAND=${command}\" >> $GITHUB_ENV\n+",
    "repo_full_name": "deeplearning4j/deeplearning4j",
    "discussion_comments": [
      {
        "comment_id": "629135730",
        "repo_full_name": "deeplearning4j/deeplearning4j",
        "pr_number": 9298,
        "pr_file": ".github/workflows/build-deploy-linux-cuda-11.0.yml",
        "discussion_id": "629135730",
        "commented_code": "@@ -122,6 +127,21 @@ jobs:\n         run: |\n             echo \"LIBND4J_HOME=${GITHUB_WORKSPACE}/libnd4j_home/libnd4j\" >> \"$GITHUB_ENV\"\n         if: ${{ github.event.inputs.libnd4jUrl != '' }}\n+      - name: Set mvn build command based on matrix\n+        shell: bash\n+        run: |\n+              HELPER=${{ matrix.helper }}\n+              EXTENSION=${{ matrix.extension }}\n+              if [ \"${HELPER}\" != '' ] && [ \"${EXTENSION}\" != '' ]; then\n+              command=\"mvn  -Possrh -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform.extension=-${{ matrix.helper }}-${{ matrix.extension }} -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda   --also-make  -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }} -Pcuda  clean --batch-mode package deploy  -DskipTests\"\n+              elif [ \"${HELPER}\" != '' ]; then\n+                  command=\"mvn  -Possrh -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform.extension=-${{ matrix.helper }} -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda   --also-make  -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }} -Pcuda  clean --batch-mode package deploy  -DskipTests\"\n+              else\n+                  command=\"mvn  -Possrh -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform.extension=${{ matrix.extension }} -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda   --also-make  -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }} -Pcuda  clean --batch-mode package deploy  -DskipTests\"\n+              fi\n+              echo \"Setting command for helper ${{ matrix.helper }} and extension ${{ matrix.extension }} to ${command}\"\n+              echo \"COMMAND=${command}\" >> $GITHUB_ENV\n+",
        "comment_created_at": "2021-05-10T08:15:19+00:00",
        "comment_author": "treo",
        "comment_body": "I'd probably split this some more into a base command and extension parameters. \r\n\r\nSomething like\r\n```bash\r\nif [ \"${HELPER}\" != '' ] && [ \"${EXTENSION}\" != '' ]; then\r\n    mvn_ext=\"-Djavacpp.platform.extension=-${{ matrix.helper }}-${{ matrix.extension }} -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }}\"\r\nelif [ \"${HELPER}\" != '' ]; then\r\n    mvn_ext=\"-Djavacpp.platform.extension=-${{ matrix.helper }} -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }}\"\r\nelse\r\n    mvn_ext=\"-Djavacpp.platform.extension=${{ matrix.extension }} -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }}\"\r\nfi\r\n\r\ncommand=\"mvn -Possrh ${mvn_ext} -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }}  -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda --also-make -Pcuda clean --batch-mode package deploy -DskipTests\"\r\n```\r\n\r\nAnd having refactored it like that, I wonder, why do you even specify those values in the cases where they aren't defined?",
        "pr_file_module": null
      },
      {
        "comment_id": "629146644",
        "repo_full_name": "deeplearning4j/deeplearning4j",
        "pr_number": 9298,
        "pr_file": ".github/workflows/build-deploy-linux-cuda-11.0.yml",
        "discussion_id": "629135730",
        "commented_code": "@@ -122,6 +127,21 @@ jobs:\n         run: |\n             echo \"LIBND4J_HOME=${GITHUB_WORKSPACE}/libnd4j_home/libnd4j\" >> \"$GITHUB_ENV\"\n         if: ${{ github.event.inputs.libnd4jUrl != '' }}\n+      - name: Set mvn build command based on matrix\n+        shell: bash\n+        run: |\n+              HELPER=${{ matrix.helper }}\n+              EXTENSION=${{ matrix.extension }}\n+              if [ \"${HELPER}\" != '' ] && [ \"${EXTENSION}\" != '' ]; then\n+              command=\"mvn  -Possrh -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform.extension=-${{ matrix.helper }}-${{ matrix.extension }} -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda   --also-make  -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }} -Pcuda  clean --batch-mode package deploy  -DskipTests\"\n+              elif [ \"${HELPER}\" != '' ]; then\n+                  command=\"mvn  -Possrh -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform.extension=-${{ matrix.helper }} -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda   --also-make  -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }} -Pcuda  clean --batch-mode package deploy  -DskipTests\"\n+              else\n+                  command=\"mvn  -Possrh -Dlibnd4j.buildThreads=${{ github.event.inputs.buildThreads }} -Djavacpp.platform.extension=${{ matrix.extension }} -Djavacpp.platform=linux-x86_64 -Dlibnd4j.chip=cuda   --also-make  -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{ matrix.extension }} -Pcuda  clean --batch-mode package deploy  -DskipTests\"\n+              fi\n+              echo \"Setting command for helper ${{ matrix.helper }} and extension ${{ matrix.extension }} to ${command}\"\n+              echo \"COMMAND=${command}\" >> $GITHUB_ENV\n+",
        "comment_created_at": "2021-05-10T08:28:54+00:00",
        "comment_author": "agibsonccc",
        "comment_body": "@treo  that was mainly due to environment variable/GH actions debugging. I refactored based on your comments there.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "625575444",
    "pr_number": 9281,
    "pr_file": ".github/workflows/build-deploy-linux-x86_64.yml",
    "created_at": "2021-05-04T07:48:32+00:00",
    "commented_code": "protoc --version\n           sudo sysctl vm.overcommit_memory=2\n           export PATH=/opt/protobuf/bin:/opt/cmake/bin:$PATH\n+          # NOTE: Complete hack. Find better way later. This moves libgomp.so to a directory where javacpp can find it.\n+          # For linux, this can be found here: https://github.com/eclipse/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-native-preset/src/main/java/org/nd4j/nativeblas/Nd4jCpuPresets.java#L150\n+          # Note also, that the g++ --version as of this writing (May 3,2021) currently returns 5.5.0. This will need to be changed in other versions if there is an update.\n+          sudo cp  /usr/lib/gcc/x86_64-linux-gnu/5.5.0/libgomp.so /usr/lib",
    "repo_full_name": "deeplearning4j/deeplearning4j",
    "discussion_comments": [
      {
        "comment_id": "625575444",
        "repo_full_name": "deeplearning4j/deeplearning4j",
        "pr_number": 9281,
        "pr_file": ".github/workflows/build-deploy-linux-x86_64.yml",
        "discussion_id": "625575444",
        "commented_code": "@@ -136,6 +136,10 @@ jobs:\n           protoc --version\n           sudo sysctl vm.overcommit_memory=2\n           export PATH=/opt/protobuf/bin:/opt/cmake/bin:$PATH\n+          # NOTE: Complete hack. Find better way later. This moves libgomp.so to a directory where javacpp can find it.\n+          # For linux, this can be found here: https://github.com/eclipse/deeplearning4j/blob/master/nd4j/nd4j-backends/nd4j-backend-impls/nd4j-native-preset/src/main/java/org/nd4j/nativeblas/Nd4jCpuPresets.java#L150\n+          # Note also, that the g++ --version as of this writing (May 3,2021) currently returns 5.5.0. This will need to be changed in other versions if there is an update.\n+          sudo cp  /usr/lib/gcc/x86_64-linux-gnu/5.5.0/libgomp.so /usr/lib",
        "comment_created_at": "2021-05-04T07:48:32+00:00",
        "comment_author": "treo",
        "comment_body": "If you want to make the hack hackier, you can replace the version this with\r\n```\r\nsudo cp /usr/lib/gcc/x86_64-linux-gnu/`gcc --version | head -n 1 | grep -o '[^ ]*$'` /usr/lib\r\n```",
        "pr_file_module": null
      }
    ]
  }
]