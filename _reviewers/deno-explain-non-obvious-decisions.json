[
  {
    "discussion_id": "2183633708",
    "pr_number": 29990,
    "pr_file": "cli/module_loader.rs",
    "created_at": "2025-07-03T19:43:13+00:00",
    "commented_code": "match requested_module_type {\n           RequestedModuleType::Text | RequestedModuleType::Bytes => self\n-            .load_asset(&specifier, is_dynamic, requested_module_type)\n+            .load_asset(&specifier, true, requested_module_type)",
    "repo_full_name": "denoland/deno",
    "discussion_comments": [
      {
        "comment_id": "2183633708",
        "repo_full_name": "denoland/deno",
        "pr_number": 29990,
        "pr_file": "cli/module_loader.rs",
        "discussion_id": "2183633708",
        "commented_code": "@@ -834,7 +822,7 @@ impl<TGraphContainer: ModuleGraphContainer>\n \n         match requested_module_type {\n           RequestedModuleType::Text | RequestedModuleType::Bytes => self\n-            .load_asset(&specifier, is_dynamic, requested_module_type)\n+            .load_asset(&specifier, true, requested_module_type)",
        "comment_created_at": "2025-07-03T19:43:13+00:00",
        "comment_author": "bartlomieju",
        "comment_body": "Maybe add a comment why are we forcing this to `true`?",
        "pr_file_module": null
      },
      {
        "comment_id": "2183639548",
        "repo_full_name": "denoland/deno",
        "pr_number": 29990,
        "pr_file": "cli/module_loader.rs",
        "discussion_id": "2183633708",
        "commented_code": "@@ -834,7 +822,7 @@ impl<TGraphContainer: ModuleGraphContainer>\n \n         match requested_module_type {\n           RequestedModuleType::Text | RequestedModuleType::Bytes => self\n-            .load_asset(&specifier, is_dynamic, requested_module_type)\n+            .load_asset(&specifier, true, requested_module_type)",
        "comment_created_at": "2025-07-03T19:48:03+00:00",
        "comment_author": "dsherret",
        "comment_body": "Done, and used the enum instead.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2107784178",
    "pr_number": 29413,
    "pr_file": "cli/module_loader.rs",
    "created_at": "2025-05-26T19:22:48+00:00",
    "commented_code": ".module_graph_builder\n       .build_graph_with_npm_resolution(\n         graph,\n-        CreateGraphOptions {\n+        BuildGraphWithNpmOptions {\n           is_dynamic,\n-          graph_kind: graph.graph_kind(),\n-          roots: roots.to_vec(),\n+          request: BuildGraphRequest::Roots(roots.to_vec()),\n           loader: Some(&mut cache),\n           npm_caching: self.options.default_npm_caching_strategy(),\n         },\n       )\n       .await?;\n \n-    self.graph_roots_valid(graph, roots, allow_unknown_media_types)?;\n+    if !skip_graph_roots_validation {",
    "repo_full_name": "denoland/deno",
    "discussion_comments": [
      {
        "comment_id": "2107784178",
        "repo_full_name": "denoland/deno",
        "pr_number": 29413,
        "pr_file": "cli/module_loader.rs",
        "discussion_id": "2107784178",
        "commented_code": "@@ -206,17 +214,18 @@ impl ModuleLoadPreparer {\n       .module_graph_builder\n       .build_graph_with_npm_resolution(\n         graph,\n-        CreateGraphOptions {\n+        BuildGraphWithNpmOptions {\n           is_dynamic,\n-          graph_kind: graph.graph_kind(),\n-          roots: roots.to_vec(),\n+          request: BuildGraphRequest::Roots(roots.to_vec()),\n           loader: Some(&mut cache),\n           npm_caching: self.options.default_npm_caching_strategy(),\n         },\n       )\n       .await?;\n \n-    self.graph_roots_valid(graph, roots, allow_unknown_media_types)?;\n+    if !skip_graph_roots_validation {",
        "comment_created_at": "2025-05-26T19:22:48+00:00",
        "comment_author": "bartlomieju",
        "comment_body": "I think it might be useful to add a comment here when we want to skip this validation - it's not so obvious to me so far",
        "pr_file_module": null
      },
      {
        "comment_id": "2107807703",
        "repo_full_name": "denoland/deno",
        "pr_number": 29413,
        "pr_file": "cli/module_loader.rs",
        "discussion_id": "2107784178",
        "commented_code": "@@ -206,17 +214,18 @@ impl ModuleLoadPreparer {\n       .module_graph_builder\n       .build_graph_with_npm_resolution(\n         graph,\n-        CreateGraphOptions {\n+        BuildGraphWithNpmOptions {\n           is_dynamic,\n-          graph_kind: graph.graph_kind(),\n-          roots: roots.to_vec(),\n+          request: BuildGraphRequest::Roots(roots.to_vec()),\n           loader: Some(&mut cache),\n           npm_caching: self.options.default_npm_caching_strategy(),\n         },\n       )\n       .await?;\n \n-    self.graph_roots_valid(graph, roots, allow_unknown_media_types)?;\n+    if !skip_graph_roots_validation {",
        "comment_created_at": "2025-05-26T19:56:38+00:00",
        "comment_author": "dsherret",
        "comment_body": "It's up to the caller. I'll add a doc comment on the option.",
        "pr_file_module": null
      },
      {
        "comment_id": "2107825112",
        "repo_full_name": "denoland/deno",
        "pr_number": 29413,
        "pr_file": "cli/module_loader.rs",
        "discussion_id": "2107784178",
        "commented_code": "@@ -206,17 +214,18 @@ impl ModuleLoadPreparer {\n       .module_graph_builder\n       .build_graph_with_npm_resolution(\n         graph,\n-        CreateGraphOptions {\n+        BuildGraphWithNpmOptions {\n           is_dynamic,\n-          graph_kind: graph.graph_kind(),\n-          roots: roots.to_vec(),\n+          request: BuildGraphRequest::Roots(roots.to_vec()),\n           loader: Some(&mut cache),\n           npm_caching: self.options.default_npm_caching_strategy(),\n         },\n       )\n       .await?;\n \n-    self.graph_roots_valid(graph, roots, allow_unknown_media_types)?;\n+    if !skip_graph_roots_validation {",
        "comment_created_at": "2025-05-26T20:22:48+00:00",
        "comment_author": "bartlomieju",
        "comment_body": "Thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2022831699",
    "pr_number": 28297,
    "pr_file": "cli/lib/version.rs",
    "created_at": "2025-04-01T13:13:44+00:00",
    "commented_code": "}\n       });\n \n-    DenoVersionInfo {\n-      deno: if release_channel == ReleaseChannel::Canary {\n+    let deno = libsui::find_section(\"denoversion\")",
    "repo_full_name": "denoland/deno",
    "discussion_comments": [
      {
        "comment_id": "2022831699",
        "repo_full_name": "denoland/deno",
        "pr_number": 28297,
        "pr_file": "cli/lib/version.rs",
        "discussion_id": "2022831699",
        "commented_code": "@@ -36,12 +36,16 @@ pub static DENO_VERSION_INFO: std::sync::LazyLock<DenoVersionInfo> =\n         }\n       });\n \n-    DenoVersionInfo {\n-      deno: if release_channel == ReleaseChannel::Canary {\n+    let deno = libsui::find_section(\"denoversion\")",
        "comment_created_at": "2025-04-01T13:13:44+00:00",
        "comment_author": "ry",
        "comment_body": "I don't understand why libsui is being introduced here. Why does the previous logic not work? Add a comment",
        "pr_file_module": null
      }
    ]
  }
]