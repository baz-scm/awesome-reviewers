[
  {
    "discussion_id": "1990836369",
    "pr_number": 28463,
    "pr_file": "ext/node/polyfills/http.ts",
    "created_at": "2025-03-12T07:35:22+00:00",
    "commented_code": "this.emit(\"response\", incoming);\n         }\n       } catch (err) {\n+        if (span) {\n+          span.recordException(err);\n+          if (err.name) {\n+            span.setAttribute(\"error.type\", err.name);\n+          }\n+          span.setStatus({\n+            code: 2, // Error\n+            message: err.message,\n+          });\n+        }",
    "repo_full_name": "denoland/deno",
    "discussion_comments": [
      {
        "comment_id": "1990836369",
        "repo_full_name": "denoland/deno",
        "pr_number": 28463,
        "pr_file": "ext/node/polyfills/http.ts",
        "discussion_id": "1990836369",
        "commented_code": "@@ -634,6 +638,17 @@ class ClientRequest extends OutgoingMessage {\n           this.emit(\"response\", incoming);\n         }\n       } catch (err) {\n+        if (span) {\n+          span.recordException(err);\n+          if (err.name) {\n+            span.setAttribute(\"error.type\", err.name);\n+          }\n+          span.setStatus({\n+            code: 2, // Error\n+            message: err.message,\n+          });\n+        }",
        "comment_created_at": "2025-03-12T07:35:22+00:00",
        "comment_author": "lucacasonato",
        "comment_body": "Can you handle the case where err.name is not set?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1808271879",
    "pr_number": 26357,
    "pr_file": "ext/http/00_serve.ts",
    "created_at": "2024-10-21T07:49:37+00:00",
    "commented_code": "innerRequest = new InnerRequest(req, context);\n       const request = fromInnerRequest(innerRequest, \"immutable\");\n       innerRequest.request = request;\n-      response = await callback(\n+      response = callback(\n         request,\n         new ServeHandlerInfo(innerRequest),\n       );\n \n+      if (typeof response === \"object\" && ReflectHas(response, \"then\")) {",
    "repo_full_name": "denoland/deno",
    "discussion_comments": [
      {
        "comment_id": "1808271879",
        "repo_full_name": "denoland/deno",
        "pr_number": 26357,
        "pr_file": "ext/http/00_serve.ts",
        "discussion_id": "1808271879",
        "commented_code": "@@ -499,11 +500,15 @@ function mapToCallback(context, callback, onError) {\n       innerRequest = new InnerRequest(req, context);\n       const request = fromInnerRequest(innerRequest, \"immutable\");\n       innerRequest.request = request;\n-      response = await callback(\n+      response = callback(\n         request,\n         new ServeHandlerInfo(innerRequest),\n       );\n \n+      if (typeof response === \"object\" && ReflectHas(response, \"then\")) {",
        "comment_created_at": "2024-10-21T07:49:37+00:00",
        "comment_author": "marvinhagemeister",
        "comment_body": "Should we add a null check here? Calling `Reflect.has(null, \"then\")` will throw, but not sure how strict we are in ensuring that the `callback` cannot return `null` prior to here.\r\n\r\n```suggestion\r\n      if (response !== null && typeof response === \"object\" && ReflectHas(response, \"then\")) {\r\n```",
        "pr_file_module": null
      }
    ]
  }
]