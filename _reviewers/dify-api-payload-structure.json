[
  {
    "discussion_id": "2283864784",
    "pr_number": 23976,
    "pr_file": "web/app/components/workflow-app/hooks/use-nodes-sync-draft.ts",
    "created_at": "2025-08-19T06:55:07+00:00",
    "commented_code": "sensitive_word_avoidance: features.moderation,\n             file_upload: features.file,\n           },\n-          environment_variables: environmentVariables,\n+          environment_variables: environmentVariables.map((item: EnvironmentVariable) => {\n+            // If it's a restored secret, send the from_version field\n+            if (item.value_type === 'secret' && restoredSecretsInfo[item.id]) {\n+              return {\n+                id: item.id,\n+                name: item.name,\n+                value_type: item.value_type,\n+                from_version: restoredSecretsInfo[item.id].from_version,\n+                // Add missing properties to satisfy the EnvironmentVariable type\n+                value: '',\n+                description: '',",
    "repo_full_name": "langgenius/dify",
    "discussion_comments": [
      {
        "comment_id": "2284308515",
        "repo_full_name": "langgenius/dify",
        "pr_number": 23976,
        "pr_file": "web/app/components/workflow-app/hooks/use-nodes-sync-draft.ts",
        "discussion_id": "2283864784",
        "commented_code": "@@ -82,7 +85,23 @@ export const useNodesSyncDraft = () => {\n             sensitive_word_avoidance: features.moderation,\n             file_upload: features.file,\n           },\n-          environment_variables: environmentVariables,\n+          environment_variables: environmentVariables.map((item: EnvironmentVariable) => {\n+            // If it's a restored secret, send the from_version field\n+            if (item.value_type === 'secret' && restoredSecretsInfo[item.id]) {\n+              return {\n+                id: item.id,\n+                name: item.name,\n+                value_type: item.value_type,\n+                from_version: restoredSecretsInfo[item.id].from_version,\n+                // Add missing properties to satisfy the EnvironmentVariable type\n+                value: '',\n+                description: '',",
        "comment_created_at": "2025-08-19T06:55:07+00:00",
        "comment_author": "xuzijie1995",
        "comment_body": "In this specific case, I made a conscious trade-off. While making value and description optional in the EnvironmentVariable type or creating a separate API payload type would be a more elegant long-term solution, it would also significantly expand the scope of this PR. The EnvironmentVariable type is widely used across the application, and changing it would require extensive regression testing and potential refactoring in many other components.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1749556091",
    "pr_number": 8119,
    "pr_file": "web/service/common.ts",
    "created_at": "2024-09-09T04:51:47+00:00",
    "commented_code": "return post<UpdateOpenAIKeyResponse>(url, { body })\n }\n \n-export const invitationCheck: Fetcher<CommonResponse & { is_valid: boolean; workspace_name: string }, { url: string; params: { workspace_id: string; email: string; token: string } }> = ({ url, params }) => {\n-  return get<CommonResponse & { is_valid: boolean; workspace_name: string }>(url, { params })\n+export const invitationCheck: Fetcher<CommonResponse & { is_valid: boolean; data: { workspace_name: string;email: string;workspace_id: string } }, { url: string; params: { workspace_id?: string; email?: string; token: string } }> = ({ url, params }) => {",
    "repo_full_name": "langgenius/dify",
    "discussion_comments": [
      {
        "comment_id": "1749556091",
        "repo_full_name": "langgenius/dify",
        "pr_number": 8119,
        "pr_file": "web/service/common.ts",
        "discussion_id": "1749556091",
        "commented_code": "@@ -156,12 +156,12 @@ export const updatePluginProviderAIKey: Fetcher<UpdateOpenAIKeyResponse, { url:\n   return post<UpdateOpenAIKeyResponse>(url, { body })\n }\n \n-export const invitationCheck: Fetcher<CommonResponse & { is_valid: boolean; workspace_name: string }, { url: string; params: { workspace_id: string; email: string; token: string } }> = ({ url, params }) => {\n-  return get<CommonResponse & { is_valid: boolean; workspace_name: string }>(url, { params })\n+export const invitationCheck: Fetcher<CommonResponse & { is_valid: boolean; data: { workspace_name: string;email: string;workspace_id: string } }, { url: string; params: { workspace_id?: string; email?: string; token: string } }> = ({ url, params }) => {",
        "comment_created_at": "2024-09-09T04:51:47+00:00",
        "comment_author": "crazywoola",
        "comment_body": "```suggestion\r\nexport const invitationCheck: Fetcher<CommonResponse & { is_valid: boolean; data: { workspace_name: string; email: string; workspace_id: string } }, { url: string; params: { workspace_id?: string; email?: string; token: string } }> = ({ url, params }) => {\r\n```",
        "pr_file_module": null
      }
    ]
  }
]