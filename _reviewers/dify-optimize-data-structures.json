[
  {
    "discussion_id": "2346905066",
    "pr_number": 25653,
    "pr_file": "api/core/ops/ops_trace_manager.py",
    "created_at": "2025-09-13T19:33:49+00:00",
    "commented_code": "logger = logging.getLogger(__name__)\n \n \n-class OpsTraceProviderConfigMap(dict[str, dict[str, Any]]):\n+class OpsTraceProviderConfigMap(collections.UserDict[str, dict[str, Any]]):",
    "repo_full_name": "langgenius/dify",
    "discussion_comments": [
      {
        "comment_id": "2346915276",
        "repo_full_name": "langgenius/dify",
        "pr_number": 25653,
        "pr_file": "api/core/ops/ops_trace_manager.py",
        "discussion_id": "2346905066",
        "commented_code": "@@ -40,7 +41,7 @@\n logger = logging.getLogger(__name__)\n \n \n-class OpsTraceProviderConfigMap(dict[str, dict[str, Any]]):\n+class OpsTraceProviderConfigMap(collections.UserDict[str, dict[str, Any]]):",
        "comment_created_at": "2025-09-13T19:33:49+00:00",
        "comment_author": "asukaminato0721",
        "comment_body": "https://stackoverflow.com/questions/7148419/subclass-dict-userdict-dict-or-abc",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1907113646",
    "pr_number": 12498,
    "pr_file": "api/core/workflow/graph_engine/graph_engine.py",
    "created_at": "2025-01-08T12:31:41+00:00",
    "commented_code": "parallel_start_node_id: Optional[str] = None,\n         handle_exceptions: list[str] = [],\n     ) -> Generator[GraphEngineEvent | str, None, None]:\n-        # if nodes has no run conditions, parallel run all nodes\n-        parallel_id = self.graph.node_parallel_mapping.get(edge_mappings[0].target_node_id)\n-        if not parallel_id:\n-            node_id = edge_mappings[0].target_node_id\n-            node_config = self.graph.node_id_config_mapping.get(node_id)\n-            if not node_config:\n+        \n+        target_nodes: dict[str, list[GraphEdge]] = {}\n+        for edge in edge_mappings:\n+            if edge.target_node_id not in target_nodes:\n+                target_nodes[edge.target_node_id] = []\n+            target_nodes[edge.target_node_id].append(edge)",
    "repo_full_name": "langgenius/dify",
    "discussion_comments": [
      {
        "comment_id": "1907113646",
        "repo_full_name": "langgenius/dify",
        "pr_number": 12498,
        "pr_file": "api/core/workflow/graph_engine/graph_engine.py",
        "discussion_id": "1907113646",
        "commented_code": "@@ -439,83 +439,94 @@ def _run_parallel_branches(\n         parallel_start_node_id: Optional[str] = None,\n         handle_exceptions: list[str] = [],\n     ) -> Generator[GraphEngineEvent | str, None, None]:\n-        # if nodes has no run conditions, parallel run all nodes\n-        parallel_id = self.graph.node_parallel_mapping.get(edge_mappings[0].target_node_id)\n-        if not parallel_id:\n-            node_id = edge_mappings[0].target_node_id\n-            node_config = self.graph.node_id_config_mapping.get(node_id)\n-            if not node_config:\n+        \n+        target_nodes: dict[str, list[GraphEdge]] = {}\n+        for edge in edge_mappings:\n+            if edge.target_node_id not in target_nodes:\n+                target_nodes[edge.target_node_id] = []\n+            target_nodes[edge.target_node_id].append(edge)",
        "comment_created_at": "2025-01-08T12:31:41+00:00",
        "comment_author": "yihong0618",
        "comment_body": "this can use defaultdict?",
        "pr_file_module": null
      },
      {
        "comment_id": "1907143967",
        "repo_full_name": "langgenius/dify",
        "pr_number": 12498,
        "pr_file": "api/core/workflow/graph_engine/graph_engine.py",
        "discussion_id": "1907113646",
        "commented_code": "@@ -439,83 +439,94 @@ def _run_parallel_branches(\n         parallel_start_node_id: Optional[str] = None,\n         handle_exceptions: list[str] = [],\n     ) -> Generator[GraphEngineEvent | str, None, None]:\n-        # if nodes has no run conditions, parallel run all nodes\n-        parallel_id = self.graph.node_parallel_mapping.get(edge_mappings[0].target_node_id)\n-        if not parallel_id:\n-            node_id = edge_mappings[0].target_node_id\n-            node_config = self.graph.node_id_config_mapping.get(node_id)\n-            if not node_config:\n+        \n+        target_nodes: dict[str, list[GraphEdge]] = {}\n+        for edge in edge_mappings:\n+            if edge.target_node_id not in target_nodes:\n+                target_nodes[edge.target_node_id] = []\n+            target_nodes[edge.target_node_id].append(edge)",
        "comment_created_at": "2025-01-08T12:57:20+00:00",
        "comment_author": "lazyFrogLOL",
        "comment_body": "Sure, using defaultdict would be better.\r\n\r\n```\r\nfrom collections import defaultdict\r\n\r\ntarget_nodes = defaultdict(list)\r\ntarget_nodes[edge.target_node_id].append(edge)\r\n```\r\nI will commit this updating asap.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1851511264",
    "pr_number": 10931,
    "pr_file": "api/core/rag/rerank/weight_rerank.py",
    "created_at": "2024-11-21T07:39:53+00:00",
    "commented_code": ":return:\n         \"\"\"\n         unique_documents = []\n-        doc_id = set()\n+        doc_ids = set()\n         for document in documents:\n-            doc_id = document.metadata.get(\"doc_id\")\n-            if doc_id not in doc_id:\n-                doc_id.add(doc_id)\n+            if document.metadata[\"doc_id\"] not in doc_ids:\n+                doc_ids.add(document.metadata[\"doc_id\"])\n                 unique_documents.append(document)",
    "repo_full_name": "langgenius/dify",
    "discussion_comments": [
      {
        "comment_id": "1851511264",
        "repo_full_name": "langgenius/dify",
        "pr_number": 10931,
        "pr_file": "api/core/rag/rerank/weight_rerank.py",
        "discussion_id": "1851511264",
        "commented_code": "@@ -37,11 +37,10 @@ def run(\n         :return:\n         \"\"\"\n         unique_documents = []\n-        doc_id = set()\n+        doc_ids = set()\n         for document in documents:\n-            doc_id = document.metadata.get(\"doc_id\")\n-            if doc_id not in doc_id:\n-                doc_id.add(doc_id)\n+            if document.metadata[\"doc_id\"] not in doc_ids:\n+                doc_ids.add(document.metadata[\"doc_id\"])\n                 unique_documents.append(document)",
        "comment_created_at": "2024-11-21T07:39:53+00:00",
        "comment_author": "bowenliang123",
        "comment_body": "Here's another optimised version in single-line code, with an equivalent effect for all these lines. \u270c\ud83c\udffb\r\n\r\n`unique_documents = {doc.metadata[\"doc_id\"]: doc for doc in documents}.values()`",
        "pr_file_module": null
      },
      {
        "comment_id": "1851520298",
        "repo_full_name": "langgenius/dify",
        "pr_number": 10931,
        "pr_file": "api/core/rag/rerank/weight_rerank.py",
        "discussion_id": "1851511264",
        "commented_code": "@@ -37,11 +37,10 @@ def run(\n         :return:\n         \"\"\"\n         unique_documents = []\n-        doc_id = set()\n+        doc_ids = set()\n         for document in documents:\n-            doc_id = document.metadata.get(\"doc_id\")\n-            if doc_id not in doc_id:\n-                doc_id.add(doc_id)\n+            if document.metadata[\"doc_id\"] not in doc_ids:\n+                doc_ids.add(document.metadata[\"doc_id\"])\n                 unique_documents.append(document)",
        "comment_created_at": "2024-11-21T07:47:57+00:00",
        "comment_author": "AkisAya",
        "comment_body": "yes, it's pythonic",
        "pr_file_module": null
      },
      {
        "comment_id": "1851533630",
        "repo_full_name": "langgenius/dify",
        "pr_number": 10931,
        "pr_file": "api/core/rag/rerank/weight_rerank.py",
        "discussion_id": "1851511264",
        "commented_code": "@@ -37,11 +37,10 @@ def run(\n         :return:\n         \"\"\"\n         unique_documents = []\n-        doc_id = set()\n+        doc_ids = set()\n         for document in documents:\n-            doc_id = document.metadata.get(\"doc_id\")\n-            if doc_id not in doc_id:\n-                doc_id.add(doc_id)\n+            if document.metadata[\"doc_id\"] not in doc_ids:\n+                doc_ids.add(document.metadata[\"doc_id\"])\n                 unique_documents.append(document)",
        "comment_created_at": "2024-11-21T07:58:58+00:00",
        "comment_author": "AkisAya",
        "comment_body": "in rerank_model.py which dealt with document.provider == \"external\"\r\n```\r\nelif document.provider == \"external\":\r\n    if document not in unique_documents:\r\n        unique_documents.append(document)\r\n```\r\nis this the only way to judge whether a external document duplicate?\r\ndoes a external document has a doc_id in metadata?\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1851599816",
        "repo_full_name": "langgenius/dify",
        "pr_number": 10931,
        "pr_file": "api/core/rag/rerank/weight_rerank.py",
        "discussion_id": "1851511264",
        "commented_code": "@@ -37,11 +37,10 @@ def run(\n         :return:\n         \"\"\"\n         unique_documents = []\n-        doc_id = set()\n+        doc_ids = set()\n         for document in documents:\n-            doc_id = document.metadata.get(\"doc_id\")\n-            if doc_id not in doc_id:\n-                doc_id.add(doc_id)\n+            if document.metadata[\"doc_id\"] not in doc_ids:\n+                doc_ids.add(document.metadata[\"doc_id\"])\n                 unique_documents.append(document)",
        "comment_created_at": "2024-11-21T08:46:45+00:00",
        "comment_author": "bowenliang123",
        "comment_body": "Just a piece of advice. We could ignore it.\r\nLGTM for now.",
        "pr_file_module": null
      }
    ]
  }
]