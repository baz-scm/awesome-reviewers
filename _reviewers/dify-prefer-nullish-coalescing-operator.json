[
  {
    "discussion_id": "2341855498",
    "pr_number": 25557,
    "pr_file": "web/app/components/app/configuration/config-vision/index.tsx",
    "created_at": "2025-09-11T17:22:19+00:00",
    "commented_code": "if (draft.file) {\n         draft.file.enabled = (draft.file.allowed_file_types?.length ?? 0) > 0\n         draft.file.image = {\n-          ...(draft.file.image || {}),\n+          ...draft.file.image,",
    "repo_full_name": "langgenius/dify",
    "discussion_comments": [
      {
        "comment_id": "2341855498",
        "repo_full_name": "langgenius/dify",
        "pr_number": 25557,
        "pr_file": "web/app/components/app/configuration/config-vision/index.tsx",
        "discussion_id": "2341855498",
        "commented_code": "@@ -45,7 +45,7 @@ const ConfigVision: FC = () => {\n       if (draft.file) {\n         draft.file.enabled = (draft.file.allowed_file_types?.length ?? 0) > 0\n         draft.file.image = {\n-          ...(draft.file.image || {}),\n+          ...draft.file.image,",
        "comment_created_at": "2025-09-11T17:22:19+00:00",
        "comment_author": "asukaminato0721",
        "comment_body": "```suggestion\r\n          ...(draft.file.image ?? {}),\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2188459062",
    "pr_number": 21957,
    "pr_file": "web/app/components/app/configuration/config/config-audio.tsx",
    "created_at": "2025-07-06T16:40:19+00:00",
    "commented_code": "+'use client'\n+import type { FC } from 'react'\n+import React, { useCallback } from 'react'\n+import { useTranslation } from 'react-i18next'\n+import produce from 'immer'\n+import { useContext } from 'use-context-selector'\n+\n+import { Microphone01 } from '@/app/components/base/icons/src/vender/features'\n+import Tooltip from '@/app/components/base/tooltip'\n+import ConfigContext from '@/context/debug-configuration'\n+import { SupportUploadFileTypes } from '@/app/components/workflow/types'\n+import { useFeatures, useFeaturesStore } from '@/app/components/base/features/hooks'\n+import Switch from '@/app/components/base/switch'\n+\n+const ConfigAudio: FC = () => {\n+  const { t } = useTranslation()\n+  const file = useFeatures(s => s.features.file)\n+  const featuresStore = useFeaturesStore()\n+  const { isShowAudioConfig } = useContext(ConfigContext)\n+\n+  const isAudioEnabled = file?.allowed_file_types?.includes(SupportUploadFileTypes.audio) ?? false\n+\n+  const handleChange = useCallback((value: boolean) => {\n+    const {\n+      features,\n+      setFeatures,\n+    } = featuresStore!.getState()\n+\n+    const newFeatures = produce(features, (draft) => {\n+      if (value) {\n+        draft.file!.allowed_file_types = Array.from(new Set([\n+          ...(draft.file?.allowed_file_types || []),",
    "repo_full_name": "langgenius/dify",
    "discussion_comments": [
      {
        "comment_id": "2188459062",
        "repo_full_name": "langgenius/dify",
        "pr_number": 21957,
        "pr_file": "web/app/components/app/configuration/config/config-audio.tsx",
        "discussion_id": "2188459062",
        "commented_code": "@@ -0,0 +1,78 @@\n+'use client'\n+import type { FC } from 'react'\n+import React, { useCallback } from 'react'\n+import { useTranslation } from 'react-i18next'\n+import produce from 'immer'\n+import { useContext } from 'use-context-selector'\n+\n+import { Microphone01 } from '@/app/components/base/icons/src/vender/features'\n+import Tooltip from '@/app/components/base/tooltip'\n+import ConfigContext from '@/context/debug-configuration'\n+import { SupportUploadFileTypes } from '@/app/components/workflow/types'\n+import { useFeatures, useFeaturesStore } from '@/app/components/base/features/hooks'\n+import Switch from '@/app/components/base/switch'\n+\n+const ConfigAudio: FC = () => {\n+  const { t } = useTranslation()\n+  const file = useFeatures(s => s.features.file)\n+  const featuresStore = useFeaturesStore()\n+  const { isShowAudioConfig } = useContext(ConfigContext)\n+\n+  const isAudioEnabled = file?.allowed_file_types?.includes(SupportUploadFileTypes.audio) ?? false\n+\n+  const handleChange = useCallback((value: boolean) => {\n+    const {\n+      features,\n+      setFeatures,\n+    } = featuresStore!.getState()\n+\n+    const newFeatures = produce(features, (draft) => {\n+      if (value) {\n+        draft.file!.allowed_file_types = Array.from(new Set([\n+          ...(draft.file?.allowed_file_types || []),",
        "comment_created_at": "2025-07-06T16:40:19+00:00",
        "comment_author": "pavan-gopala",
        "comment_body": "try using ?? to make sure empty array from allowed_file_types preserved",
        "pr_file_module": null
      }
    ]
  }
]