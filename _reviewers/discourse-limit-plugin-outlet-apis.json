[
  {
    "discussion_id": "2204360914",
    "pr_number": 32558,
    "pr_file": "app/assets/javascripts/discourse/app/components/sub-category-item.gjs",
    "created_at": "2025-07-14T09:33:34+00:00",
    "commented_code": "+import PluginOutlet from \"discourse/components/plugin-outlet\";\n import CategoryListItem from \"discourse/components/category-list-item\";\n import CategoryTitleBefore from \"discourse/components/category-title-before\";\n import CategoryUnread from \"discourse/components/category-unread\";\n import categoryLink from \"discourse/helpers/category-link\";\n \n export default class SubCategoryItem extends CategoryListItem {\n   <template>\n-    {{#unless this.isMuted}}\n-      {{#if this.site.mobileView}}\n-        {{categoryLink this.category}}\n-      {{else}}\n-        <span class=\"subcategory\">\n-          <CategoryTitleBefore @category={{this.category}} />\n-          {{categoryLink this.category hideParent=\"true\"}}\n-          {{#unless this.hideUnread}}\n-            <CategoryUnread\n-              @category={{this.category}}\n-              @unreadTopicsCount={{this.unreadTopicsCount}}\n-              @newTopicsCount={{this.newTopicsCount}}\n-            />\n-          {{/unless}}\n-        </span>\n-      {{/if}}\n-    {{/unless}}\n+    <PluginOutlet\n+      @name=\"sub-category-item\"\n+      @outletArgs={{hash subCategoryItem=this}}>",
    "repo_full_name": "discourse/discourse",
    "discussion_comments": [
      {
        "comment_id": "2204360914",
        "repo_full_name": "discourse/discourse",
        "pr_number": 32558,
        "pr_file": "app/assets/javascripts/discourse/app/components/sub-category-item.gjs",
        "discussion_id": "2204360914",
        "commented_code": "@@ -1,26 +1,31 @@\n+import PluginOutlet from \"discourse/components/plugin-outlet\";\n import CategoryListItem from \"discourse/components/category-list-item\";\n import CategoryTitleBefore from \"discourse/components/category-title-before\";\n import CategoryUnread from \"discourse/components/category-unread\";\n import categoryLink from \"discourse/helpers/category-link\";\n \n export default class SubCategoryItem extends CategoryListItem {\n   <template>\n-    {{#unless this.isMuted}}\n-      {{#if this.site.mobileView}}\n-        {{categoryLink this.category}}\n-      {{else}}\n-        <span class=\"subcategory\">\n-          <CategoryTitleBefore @category={{this.category}} />\n-          {{categoryLink this.category hideParent=\"true\"}}\n-          {{#unless this.hideUnread}}\n-            <CategoryUnread\n-              @category={{this.category}}\n-              @unreadTopicsCount={{this.unreadTopicsCount}}\n-              @newTopicsCount={{this.newTopicsCount}}\n-            />\n-          {{/unless}}\n-        </span>\n-      {{/if}}\n-    {{/unless}}\n+    <PluginOutlet\n+      @name=\"sub-category-item\"\n+      @outletArgs={{hash subCategoryItem=this}}>",
        "comment_created_at": "2025-07-14T09:33:34+00:00",
        "comment_author": "davidtaylorhq",
        "comment_body": "Exposing an entire component instance to a plugin outlet is not ideal, because it makes the entire component 'public API', and therefore harder to refactor in future.\n\nPlease can you update this so that it passes explicit arguments which theme/plugin authors might need.\n\nAlso, this `hash` should be swapped out for a `lazyHash`. If you rebase this branch onto latest `main` (or merge `main` into it), then the linting rules should catch that.",
        "pr_file_module": null
      },
      {
        "comment_id": "2216071468",
        "repo_full_name": "discourse/discourse",
        "pr_number": 32558,
        "pr_file": "app/assets/javascripts/discourse/app/components/sub-category-item.gjs",
        "discussion_id": "2204360914",
        "commented_code": "@@ -1,26 +1,31 @@\n+import PluginOutlet from \"discourse/components/plugin-outlet\";\n import CategoryListItem from \"discourse/components/category-list-item\";\n import CategoryTitleBefore from \"discourse/components/category-title-before\";\n import CategoryUnread from \"discourse/components/category-unread\";\n import categoryLink from \"discourse/helpers/category-link\";\n \n export default class SubCategoryItem extends CategoryListItem {\n   <template>\n-    {{#unless this.isMuted}}\n-      {{#if this.site.mobileView}}\n-        {{categoryLink this.category}}\n-      {{else}}\n-        <span class=\"subcategory\">\n-          <CategoryTitleBefore @category={{this.category}} />\n-          {{categoryLink this.category hideParent=\"true\"}}\n-          {{#unless this.hideUnread}}\n-            <CategoryUnread\n-              @category={{this.category}}\n-              @unreadTopicsCount={{this.unreadTopicsCount}}\n-              @newTopicsCount={{this.newTopicsCount}}\n-            />\n-          {{/unless}}\n-        </span>\n-      {{/if}}\n-    {{/unless}}\n+    <PluginOutlet\n+      @name=\"sub-category-item\"\n+      @outletArgs={{hash subCategoryItem=this}}>",
        "comment_created_at": "2025-07-18T13:38:57+00:00",
        "comment_author": "tomvanenckevort",
        "comment_body": "Changes made as requested.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2134029122",
    "pr_number": 33071,
    "pr_file": "app/assets/javascripts/discourse/app/templates/exception.gjs",
    "created_at": "2025-06-07T17:19:07+00:00",
    "commented_code": "import { and } from \"truth-helpers\";\n import ConditionalLoadingSpinner from \"discourse/components/conditional-loading-spinner\";\n import DButton from \"discourse/components/d-button\";\n+import PluginOutlet from \"discourse/components/plugin-outlet\";\n import icon from \"discourse/helpers/d-icon\";\n+import lazyHash from \"discourse/helpers/lazy-hash\";\n import { i18n } from \"discourse-i18n\";\n \n export default RouteTemplate(\n   <template>\n-    <div class=\"container\">\n-      {{#if (and @controller.errorHtml @controller.isForbidden)}}\n-        <div class=\"not-found\">{{htmlSafe @controller.errorHtml}}</div>\n-      {{else}}\n-        <div class=\"error-page\">\n-          <div class=\"face\">:(</div>\n-          <div class=\"reason\">{{@controller.reason}}</div>\n-          {{#if @controller.requestUrl}}\n-            <div class=\"url\">\n-              {{i18n \"errors.prev_page\"}}\n-              <a\n-                href={{@controller.requestUrl}}\n-                data-auto-route=\"true\"\n-              >{{@controller.requestUrl}}</a>\n-            </div>\n-          {{/if}}\n-          <div class=\"desc\">\n-            {{#if @controller.networkFixed}}\n-              {{icon \"circle-check\"}}\n+    <PluginOutlet\n+      @name=\"exception-wrapper\"\n+      @outletArgs={{lazyHash\n+        controller=@controller",
    "repo_full_name": "discourse/discourse",
    "discussion_comments": [
      {
        "comment_id": "2134029122",
        "repo_full_name": "discourse/discourse",
        "pr_number": 33071,
        "pr_file": "app/assets/javascripts/discourse/app/templates/exception.gjs",
        "discussion_id": "2134029122",
        "commented_code": "@@ -3,47 +3,58 @@ import RouteTemplate from \"ember-route-template\";\n import { and } from \"truth-helpers\";\n import ConditionalLoadingSpinner from \"discourse/components/conditional-loading-spinner\";\n import DButton from \"discourse/components/d-button\";\n+import PluginOutlet from \"discourse/components/plugin-outlet\";\n import icon from \"discourse/helpers/d-icon\";\n+import lazyHash from \"discourse/helpers/lazy-hash\";\n import { i18n } from \"discourse-i18n\";\n \n export default RouteTemplate(\n   <template>\n-    <div class=\"container\">\n-      {{#if (and @controller.errorHtml @controller.isForbidden)}}\n-        <div class=\"not-found\">{{htmlSafe @controller.errorHtml}}</div>\n-      {{else}}\n-        <div class=\"error-page\">\n-          <div class=\"face\">:(</div>\n-          <div class=\"reason\">{{@controller.reason}}</div>\n-          {{#if @controller.requestUrl}}\n-            <div class=\"url\">\n-              {{i18n \"errors.prev_page\"}}\n-              <a\n-                href={{@controller.requestUrl}}\n-                data-auto-route=\"true\"\n-              >{{@controller.requestUrl}}</a>\n-            </div>\n-          {{/if}}\n-          <div class=\"desc\">\n-            {{#if @controller.networkFixed}}\n-              {{icon \"circle-check\"}}\n+    <PluginOutlet\n+      @name=\"exception-wrapper\"\n+      @outletArgs={{lazyHash\n+        controller=@controller",
        "comment_created_at": "2025-06-07T17:19:07+00:00",
        "comment_author": "CvX",
        "comment_body": "passing in a whole controller into an outlet is an anti-pattern, it's a much better api to provide it with specific set of properties and actions.",
        "pr_file_module": null
      }
    ]
  }
]