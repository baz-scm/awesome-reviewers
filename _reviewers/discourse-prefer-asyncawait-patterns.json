[
  {
    "discussion_id": "2096826998",
    "pr_number": 32743,
    "pr_file": "app/assets/javascripts/discourse/app/models/post.js",
    "created_at": "2025-05-20T03:53:04+00:00",
    "commented_code": "}\n \n   destroy(deletedBy, opts) {\n+    this.set(\"isDeleting\", true);\n     return this.setDeletedState(deletedBy).then(() => {",
    "repo_full_name": "discourse/discourse",
    "discussion_comments": [
      {
        "comment_id": "2096826998",
        "repo_full_name": "discourse/discourse",
        "pr_number": 32743,
        "pr_file": "app/assets/javascripts/discourse/app/models/post.js",
        "discussion_id": "2096826998",
        "commented_code": "@@ -568,10 +570,13 @@ export default class Post extends RestModel {\n   }\n \n   destroy(deletedBy, opts) {\n+    this.set(\"isDeleting\", true);\n     return this.setDeletedState(deletedBy).then(() => {",
        "comment_created_at": "2025-05-20T03:53:04+00:00",
        "comment_author": "SamSaffron",
        "comment_body": "I think the finally might not be in the right spot? it only operates on the internal promise, we probably want outside. \r\n\r\nTo simplify I would probably just make this an async function. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2098688008",
        "repo_full_name": "discourse/discourse",
        "pr_number": 32743,
        "pr_file": "app/assets/javascripts/discourse/app/models/post.js",
        "discussion_id": "2096826998",
        "commented_code": "@@ -568,10 +570,13 @@ export default class Post extends RestModel {\n   }\n \n   destroy(deletedBy, opts) {\n+    this.set(\"isDeleting\", true);\n     return this.setDeletedState(deletedBy).then(() => {",
        "comment_created_at": "2025-05-20T19:12:37+00:00",
        "comment_author": "0-o0",
        "comment_body": "Thanks for your suggestion! I've updated the code to address both issues:\r\n1. Converted both `destroy` and `recover` methods to proper async functions\r\n2. Moved the `finally` block outside to wrap the entire operation, not just the internal promise",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2166925703",
    "pr_number": 33346,
    "pr_file": "app/assets/javascripts/admin/addon/services/admin-search-data-source.js",
    "created_at": "2025-06-25T14:48:59+00:00",
    "commented_code": "};\n   @tracked _mapCached = false;\n \n-  get isLoaded() {\n-    return this._mapCached;\n-  }\n-\n   async buildMap() {\n-    if (this.isLoaded) {\n-      return Promise.resolve();",
    "repo_full_name": "discourse/discourse",
    "discussion_comments": [
      {
        "comment_id": "2166925703",
        "repo_full_name": "discourse/discourse",
        "pr_number": 33346,
        "pr_file": "app/assets/javascripts/admin/addon/services/admin-search-data-source.js",
        "discussion_id": "2166925703",
        "commented_code": "@@ -222,13 +222,9 @@ export default class AdminSearchDataSource extends Service {\n   };\n   @tracked _mapCached = false;\n \n-  get isLoaded() {\n-    return this._mapCached;\n-  }\n-\n   async buildMap() {\n-    if (this.isLoaded) {\n-      return Promise.resolve();",
        "comment_created_at": "2025-06-25T14:48:59+00:00",
        "comment_author": "CvX",
        "comment_body": "returning `Promise.resolve()` from an `async` function is basically a no-op",
        "pr_file_module": null
      }
    ]
  }
]