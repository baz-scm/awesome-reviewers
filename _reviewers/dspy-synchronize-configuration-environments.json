[
  {
    "discussion_id": "1976807023",
    "pr_number": 7876,
    "pr_file": ".github/workflows/build_and_release.yml",
    "created_at": "2025-03-03T02:37:26+00:00",
    "commented_code": "echo \"Version to be used for TestPyPI release: $NEW_VERSION\"  \n           echo \"::set-output name=version::$NEW_VERSION\"  \n       - name: Update version in pyproject.toml\n-        run: sed -i '/#replace_package_version_marker/{n;s/version=\"[^\"]*\"/version=\"${{ steps.check_version.outputs.version }}\"/;}' pyproject.toml        \n+        run: sed -i '/#replace_package_version_marker/{n;s/version=\"[^\"]*\"/version=\"${{ steps.check_version.outputs.version }}\"/;}' pyproject.toml  \n+      - name: Update version in __metadata__.py\n+        run: sed -i '/#replace_package_version_marker/{n;s/__version__=\"[^\"]*\"/__version__=\"${{ steps.check_version.outputs.version }}\"/;}' ./dspy/__metadata__.py   \n       - name: Update package name in pyproject.toml\n         run: sed -i '/#replace_package_name_marker/{n;s/name=\"[^\"]*\"/name=\"dspy-ai-test\"/;}' pyproject.toml  \n       - name: Build a binary wheel\n         run: python3 -m build\n+      # Test the locally built wheel\n+      - name: Create test environment\n+        run: python -m venv test_env\n+      - name: Test package installation and functionality\n+        run: |\n+          source test_env/bin/activate\n+          # Install the locally built wheel and testing dependencies\n+          pip install dist/*.whl pytest\n+          python -c \"import dspy; print(dspy.__version__)\"",
    "repo_full_name": "stanfordnlp/dspy",
    "discussion_comments": [
      {
        "comment_id": "1976807023",
        "repo_full_name": "stanfordnlp/dspy",
        "pr_number": 7876,
        "pr_file": ".github/workflows/build_and_release.yml",
        "discussion_id": "1976807023",
        "commented_code": "@@ -41,11 +41,24 @@ jobs:\n           echo \"Version to be used for TestPyPI release: $NEW_VERSION\"  \n           echo \"::set-output name=version::$NEW_VERSION\"  \n       - name: Update version in pyproject.toml\n-        run: sed -i '/#replace_package_version_marker/{n;s/version=\"[^\"]*\"/version=\"${{ steps.check_version.outputs.version }}\"/;}' pyproject.toml        \n+        run: sed -i '/#replace_package_version_marker/{n;s/version=\"[^\"]*\"/version=\"${{ steps.check_version.outputs.version }}\"/;}' pyproject.toml  \n+      - name: Update version in __metadata__.py\n+        run: sed -i '/#replace_package_version_marker/{n;s/__version__=\"[^\"]*\"/__version__=\"${{ steps.check_version.outputs.version }}\"/;}' ./dspy/__metadata__.py   \n       - name: Update package name in pyproject.toml\n         run: sed -i '/#replace_package_name_marker/{n;s/name=\"[^\"]*\"/name=\"dspy-ai-test\"/;}' pyproject.toml  \n       - name: Build a binary wheel\n         run: python3 -m build\n+      # Test the locally built wheel\n+      - name: Create test environment\n+        run: python -m venv test_env\n+      - name: Test package installation and functionality\n+        run: |\n+          source test_env/bin/activate\n+          # Install the locally built wheel and testing dependencies\n+          pip install dist/*.whl pytest\n+          python -c \"import dspy; print(dspy.__version__)\"",
        "comment_created_at": "2025-03-03T02:37:26+00:00",
        "comment_author": "TomeHirata",
        "comment_body": "Did this line actually fail when we removed `pip install dist/*.whl pytest` above? I wonder if this still works without the installation due to the flat structure of this repo.",
        "pr_file_module": null
      },
      {
        "comment_id": "1976832261",
        "repo_full_name": "stanfordnlp/dspy",
        "pr_number": 7876,
        "pr_file": ".github/workflows/build_and_release.yml",
        "discussion_id": "1976807023",
        "commented_code": "@@ -41,11 +41,24 @@ jobs:\n           echo \"Version to be used for TestPyPI release: $NEW_VERSION\"  \n           echo \"::set-output name=version::$NEW_VERSION\"  \n       - name: Update version in pyproject.toml\n-        run: sed -i '/#replace_package_version_marker/{n;s/version=\"[^\"]*\"/version=\"${{ steps.check_version.outputs.version }}\"/;}' pyproject.toml        \n+        run: sed -i '/#replace_package_version_marker/{n;s/version=\"[^\"]*\"/version=\"${{ steps.check_version.outputs.version }}\"/;}' pyproject.toml  \n+      - name: Update version in __metadata__.py\n+        run: sed -i '/#replace_package_version_marker/{n;s/__version__=\"[^\"]*\"/__version__=\"${{ steps.check_version.outputs.version }}\"/;}' ./dspy/__metadata__.py   \n       - name: Update package name in pyproject.toml\n         run: sed -i '/#replace_package_name_marker/{n;s/name=\"[^\"]*\"/name=\"dspy-ai-test\"/;}' pyproject.toml  \n       - name: Build a binary wheel\n         run: python3 -m build\n+      # Test the locally built wheel\n+      - name: Create test environment\n+        run: python -m venv test_env\n+      - name: Test package installation and functionality\n+        run: |\n+          source test_env/bin/activate\n+          # Install the locally built wheel and testing dependencies\n+          pip install dist/*.whl pytest\n+          python -c \"import dspy; print(dspy.__version__)\"",
        "comment_created_at": "2025-03-03T03:34:39+00:00",
        "comment_author": "chenmoneygithub",
        "comment_body": "Great question!\n\nThe answer is it will fail. The reason is activating virtual env changes the sys path, which doesn't include the working dir . any more. Without virtual env, or using the conda env includes the working dir in sys path, so even if we don't do installation the import still works.",
        "pr_file_module": null
      },
      {
        "comment_id": "1976850128",
        "repo_full_name": "stanfordnlp/dspy",
        "pr_number": 7876,
        "pr_file": ".github/workflows/build_and_release.yml",
        "discussion_id": "1976807023",
        "commented_code": "@@ -41,11 +41,24 @@ jobs:\n           echo \"Version to be used for TestPyPI release: $NEW_VERSION\"  \n           echo \"::set-output name=version::$NEW_VERSION\"  \n       - name: Update version in pyproject.toml\n-        run: sed -i '/#replace_package_version_marker/{n;s/version=\"[^\"]*\"/version=\"${{ steps.check_version.outputs.version }}\"/;}' pyproject.toml        \n+        run: sed -i '/#replace_package_version_marker/{n;s/version=\"[^\"]*\"/version=\"${{ steps.check_version.outputs.version }}\"/;}' pyproject.toml  \n+      - name: Update version in __metadata__.py\n+        run: sed -i '/#replace_package_version_marker/{n;s/__version__=\"[^\"]*\"/__version__=\"${{ steps.check_version.outputs.version }}\"/;}' ./dspy/__metadata__.py   \n       - name: Update package name in pyproject.toml\n         run: sed -i '/#replace_package_name_marker/{n;s/name=\"[^\"]*\"/name=\"dspy-ai-test\"/;}' pyproject.toml  \n       - name: Build a binary wheel\n         run: python3 -m build\n+      # Test the locally built wheel\n+      - name: Create test environment\n+        run: python -m venv test_env\n+      - name: Test package installation and functionality\n+        run: |\n+          source test_env/bin/activate\n+          # Install the locally built wheel and testing dependencies\n+          pip install dist/*.whl pytest\n+          python -c \"import dspy; print(dspy.__version__)\"",
        "comment_created_at": "2025-03-03T04:13:04+00:00",
        "comment_author": "TomeHirata",
        "comment_body": "Thank you for the answer! Can we add comments for the context to the venv step above?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1539877390",
    "pr_number": 704,
    "pr_file": ".github/workflows/run_tests.yml",
    "created_at": "2024-03-26T18:26:55+00:00",
    "commented_code": "types: [opened, synchronize, reopened]\n \n env:\n-  POETRY_VERSION: \"1.6.1\"\n+  POETRY_VERSION: \"1.7.1\"",
    "repo_full_name": "stanfordnlp/dspy",
    "discussion_comments": [
      {
        "comment_id": "1539877390",
        "repo_full_name": "stanfordnlp/dspy",
        "pr_number": 704,
        "pr_file": ".github/workflows/run_tests.yml",
        "discussion_id": "1539877390",
        "commented_code": "@@ -8,7 +8,7 @@ on:\n     types: [opened, synchronize, reopened]\n \n env:\n-  POETRY_VERSION: \"1.6.1\"\n+  POETRY_VERSION: \"1.7.1\"",
        "comment_created_at": "2024-03-26T18:26:55+00:00",
        "comment_author": "Joshmantova",
        "comment_body": "In the poetry lock file, it looks like it's getting compiled with `1.7.1` - I'd recommend updating the version in CI to reflect what developers are using locally.",
        "pr_file_module": null
      }
    ]
  }
]