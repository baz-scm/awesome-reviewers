[
  {
    "discussion_id": "1885853802",
    "pr_number": 15349,
    "pr_file": "src/execution/column_binding_resolver.cpp",
    "created_at": "2024-12-15T20:45:52+00:00",
    "commented_code": "auto child_indexes = VerifyInternal(*child);\n \t\tfor (auto index : child_indexes) {\n \t\t\tD_ASSERT(index != DConstants::INVALID_INDEX);\n-\t\t\tif (result.find(index) != result.end()) {\n+\t\t\tconst bool is_new = result.emplace(index).second;",
    "repo_full_name": "duckdb/duckdb",
    "discussion_comments": [
      {
        "comment_id": "1885853802",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 15349,
        "pr_file": "src/execution/column_binding_resolver.cpp",
        "discussion_id": "1885853802",
        "commented_code": "@@ -174,19 +174,19 @@ unordered_set<idx_t> ColumnBindingResolver::VerifyInternal(LogicalOperator &op)\n \t\tauto child_indexes = VerifyInternal(*child);\n \t\tfor (auto index : child_indexes) {\n \t\t\tD_ASSERT(index != DConstants::INVALID_INDEX);\n-\t\t\tif (result.find(index) != result.end()) {\n+\t\t\tconst bool is_new = result.emplace(index).second;",
        "comment_created_at": "2024-12-15T20:45:52+00:00",
        "comment_author": "carlopi",
        "comment_body": "```suggestion\r\n\t\t\tconst bool is_new = result.insert(index).second;\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1885921887",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 15349,
        "pr_file": "src/execution/column_binding_resolver.cpp",
        "discussion_id": "1885853802",
        "commented_code": "@@ -174,19 +174,19 @@ unordered_set<idx_t> ColumnBindingResolver::VerifyInternal(LogicalOperator &op)\n \t\tauto child_indexes = VerifyInternal(*child);\n \t\tfor (auto index : child_indexes) {\n \t\t\tD_ASSERT(index != DConstants::INVALID_INDEX);\n-\t\t\tif (result.find(index) != result.end()) {\n+\t\t\tconst bool is_new = result.emplace(index).second;",
        "comment_created_at": "2024-12-15T23:04:58+00:00",
        "comment_author": "dentiny",
        "comment_body": "Updated.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1885853829",
    "pr_number": 15349,
    "pr_file": "src/execution/column_binding_resolver.cpp",
    "created_at": "2024-12-15T20:46:02+00:00",
    "commented_code": "auto child_indexes = VerifyInternal(*child);\n \t\tfor (auto index : child_indexes) {\n \t\t\tD_ASSERT(index != DConstants::INVALID_INDEX);\n-\t\t\tif (result.find(index) != result.end()) {\n+\t\t\tconst bool is_new = result.emplace(index).second;\n+\t\t\tif (!is_new) {\n \t\t\t\tthrow InternalException(\"Duplicate table index \\\"%lld\\\" found\", index);\n \t\t\t}\n-\t\t\tresult.insert(index);\n \t\t}\n \t}\n \tauto indexes = op.GetTableIndex();\n \tfor (auto index : indexes) {\n \t\tD_ASSERT(index != DConstants::INVALID_INDEX);\n-\t\tif (result.find(index) != result.end()) {\n+\t\tconst bool is_new = result.emplace(index).second;",
    "repo_full_name": "duckdb/duckdb",
    "discussion_comments": [
      {
        "comment_id": "1885853829",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 15349,
        "pr_file": "src/execution/column_binding_resolver.cpp",
        "discussion_id": "1885853829",
        "commented_code": "@@ -174,19 +174,19 @@ unordered_set<idx_t> ColumnBindingResolver::VerifyInternal(LogicalOperator &op)\n \t\tauto child_indexes = VerifyInternal(*child);\n \t\tfor (auto index : child_indexes) {\n \t\t\tD_ASSERT(index != DConstants::INVALID_INDEX);\n-\t\t\tif (result.find(index) != result.end()) {\n+\t\t\tconst bool is_new = result.emplace(index).second;\n+\t\t\tif (!is_new) {\n \t\t\t\tthrow InternalException(\"Duplicate table index \\\"%lld\\\" found\", index);\n \t\t\t}\n-\t\t\tresult.insert(index);\n \t\t}\n \t}\n \tauto indexes = op.GetTableIndex();\n \tfor (auto index : indexes) {\n \t\tD_ASSERT(index != DConstants::INVALID_INDEX);\n-\t\tif (result.find(index) != result.end()) {\n+\t\tconst bool is_new = result.emplace(index).second;",
        "comment_created_at": "2024-12-15T20:46:02+00:00",
        "comment_author": "carlopi",
        "comment_body": "```suggestion\r\n\t\tconst bool is_new = result.insert(index).second;\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1885921932",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 15349,
        "pr_file": "src/execution/column_binding_resolver.cpp",
        "discussion_id": "1885853829",
        "commented_code": "@@ -174,19 +174,19 @@ unordered_set<idx_t> ColumnBindingResolver::VerifyInternal(LogicalOperator &op)\n \t\tauto child_indexes = VerifyInternal(*child);\n \t\tfor (auto index : child_indexes) {\n \t\t\tD_ASSERT(index != DConstants::INVALID_INDEX);\n-\t\t\tif (result.find(index) != result.end()) {\n+\t\t\tconst bool is_new = result.emplace(index).second;\n+\t\t\tif (!is_new) {\n \t\t\t\tthrow InternalException(\"Duplicate table index \\\"%lld\\\" found\", index);\n \t\t\t}\n-\t\t\tresult.insert(index);\n \t\t}\n \t}\n \tauto indexes = op.GetTableIndex();\n \tfor (auto index : indexes) {\n \t\tD_ASSERT(index != DConstants::INVALID_INDEX);\n-\t\tif (result.find(index) != result.end()) {\n+\t\tconst bool is_new = result.emplace(index).second;",
        "comment_created_at": "2024-12-15T23:05:08+00:00",
        "comment_author": "dentiny",
        "comment_body": "Updated.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1885854107",
    "pr_number": 15349,
    "pr_file": "src/execution/operator/persistent/physical_update.cpp",
    "created_at": "2024-12-15T20:46:39+00:00",
    "commented_code": "for (idx_t i = 0; i < update_chunk.size(); i++) {\n \t\tauto row_id = row_id_data[i];\n-\t\tif (g_state.updated_rows.find(row_id) == g_state.updated_rows.end()) {\n-\t\t\tg_state.updated_rows.insert(row_id);\n+\t\tconst auto is_new = g_state.updated_rows.emplace(row_id).second;",
    "repo_full_name": "duckdb/duckdb",
    "discussion_comments": [
      {
        "comment_id": "1885854107",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 15349,
        "pr_file": "src/execution/operator/persistent/physical_update.cpp",
        "discussion_id": "1885854107",
        "commented_code": "@@ -160,8 +160,8 @@ SinkResultType PhysicalUpdate::Sink(ExecutionContext &context, DataChunk &chunk,\n \n \tfor (idx_t i = 0; i < update_chunk.size(); i++) {\n \t\tauto row_id = row_id_data[i];\n-\t\tif (g_state.updated_rows.find(row_id) == g_state.updated_rows.end()) {\n-\t\t\tg_state.updated_rows.insert(row_id);\n+\t\tconst auto is_new = g_state.updated_rows.emplace(row_id).second;",
        "comment_created_at": "2024-12-15T20:46:39+00:00",
        "comment_author": "carlopi",
        "comment_body": "```suggestion\r\n\t\tconst auto is_new = g_state.updated_rows.insert(row_id).second;\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1885922654",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 15349,
        "pr_file": "src/execution/operator/persistent/physical_update.cpp",
        "discussion_id": "1885854107",
        "commented_code": "@@ -160,8 +160,8 @@ SinkResultType PhysicalUpdate::Sink(ExecutionContext &context, DataChunk &chunk,\n \n \tfor (idx_t i = 0; i < update_chunk.size(); i++) {\n \t\tauto row_id = row_id_data[i];\n-\t\tif (g_state.updated_rows.find(row_id) == g_state.updated_rows.end()) {\n-\t\t\tg_state.updated_rows.insert(row_id);\n+\t\tconst auto is_new = g_state.updated_rows.emplace(row_id).second;",
        "comment_created_at": "2024-12-15T23:06:11+00:00",
        "comment_author": "dentiny",
        "comment_body": "Updated.",
        "pr_file_module": null
      }
    ]
  }
]