[
  {
    "discussion_id": "1976447779",
    "pr_number": 15462,
    "pr_file": "tools/pythonpkg/tests/fast/spark/test_spark_functions_date.py",
    "created_at": "2025-03-01T16:28:20+00:00",
    "commented_code": "assert result[0].with_literal == date(2024, 6, 12)\n         assert result[0].with_str == date(2024, 7, 12)\n         assert result[0].with_col == date(2024, 7, 12)\n+\n+    def test_try_to_timestamp(self, spark):\n+        df = spark.createDataFrame([('1997-02-28 10:30:00',), ('2024-01-01',), ('invalid')], ['t'])\n+        res = df.select(F.try_to_timestamp(df.t).alias('dt')).collect()",
    "repo_full_name": "duckdb/duckdb",
    "discussion_comments": [
      {
        "comment_id": "1976447779",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 15462,
        "pr_file": "tools/pythonpkg/tests/fast/spark/test_spark_functions_date.py",
        "discussion_id": "1976447779",
        "commented_code": "@@ -224,3 +224,10 @@ def test_add_months(self, spark):\n         assert result[0].with_literal == date(2024, 6, 12)\n         assert result[0].with_str == date(2024, 7, 12)\n         assert result[0].with_col == date(2024, 7, 12)\n+\n+    def test_try_to_timestamp(self, spark):\n+        df = spark.createDataFrame([('1997-02-28 10:30:00',), ('2024-01-01',), ('invalid')], ['t'])\n+        res = df.select(F.try_to_timestamp(df.t).alias('dt')).collect()",
        "comment_created_at": "2025-03-01T16:28:20+00:00",
        "comment_author": "Tishj",
        "comment_body": "This only tests the path where `format` is None, not the path where an explicit format is given",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1971213587",
    "pr_number": 16418,
    "pr_file": "tools/pythonpkg/tests/fast/test_relation.py",
    "created_at": "2025-02-26T09:14:06+00:00",
    "commented_code": "rel = get_relation(conn)\n         assert rel.order('j').execute().fetchall() == [(4, 'four'), (1, 'one'), (3, 'three'), (2, 'two')]\n \n+    def test_projection_mixed_types(self):",
    "repo_full_name": "duckdb/duckdb",
    "discussion_comments": [
      {
        "comment_id": "1971213587",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 16418,
        "pr_file": "tools/pythonpkg/tests/fast/test_relation.py",
        "discussion_id": "1971213587",
        "commented_code": "@@ -71,6 +71,16 @@ def test_projection_operator_double(self):\n         rel = get_relation(conn)\n         assert rel.order('j').execute().fetchall() == [(4, 'four'), (1, 'one'), (3, 'three'), (2, 'two')]\n \n+    def test_projection_mixed_types(self):",
        "comment_created_at": "2025-02-26T09:14:06+00:00",
        "comment_author": "Tishj",
        "comment_body": "This test does not stress the new functionality added at all, since your string is just `'i'` this was already covered by the old behavior, this would implicitly become a `ColumnExpression`",
        "pr_file_module": null
      }
    ]
  }
]