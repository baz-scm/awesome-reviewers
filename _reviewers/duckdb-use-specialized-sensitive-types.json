[
  {
    "discussion_id": "2156993618",
    "pr_number": 17950,
    "pr_file": "src/include/duckdb/main/config.hpp",
    "created_at": "2025-06-19T13:13:09+00:00",
    "commented_code": "string custom_user_agent;\n \t//! Use old implicit casting style (i.e. allow everything to be implicitly casted to VARCHAR)\n \tbool old_implicit_casting = false;\n+\t//! Database encryption key (plaintext)\n+\t//! This key corresponds to one database\n+\tshared_ptr<string> user_key;",
    "repo_full_name": "duckdb/duckdb",
    "discussion_comments": [
      {
        "comment_id": "2156993618",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 17950,
        "pr_file": "src/include/duckdb/main/config.hpp",
        "discussion_id": "2156993618",
        "commented_code": "@@ -266,6 +266,10 @@ struct DBConfigOptions {\n \tstring custom_user_agent;\n \t//! Use old implicit casting style (i.e. allow everything to be implicitly casted to VARCHAR)\n \tbool old_implicit_casting = false;\n+\t//! Database encryption key (plaintext)\n+\t//! This key corresponds to one database\n+\tshared_ptr<string> user_key;",
        "comment_created_at": "2025-06-19T13:13:09+00:00",
        "comment_author": "Mytherin",
        "comment_body": "Should this be a string, or an `EncryptionKey`?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2137342159",
    "pr_number": 17275,
    "pr_file": "src/include/duckdb/storage/storage_options.hpp",
    "created_at": "2025-06-10T09:10:49+00:00",
    "commented_code": "optional_idx storage_version;\n \t//! Block header size (only used for encryption)\n \toptional_idx block_header_size;\n+\n \t//! Whether the database is encrypted\n \tbool encryption = false;\n+\t//! Encryption algorithm (default = GCM)\n+\tstring encryption_cipher = \"gcm\";\n+\t//! encryption key\n+\tstring encryption_key;",
    "repo_full_name": "duckdb/duckdb",
    "discussion_comments": [
      {
        "comment_id": "2137342159",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 17275,
        "pr_file": "src/include/duckdb/storage/storage_options.hpp",
        "discussion_id": "2137342159",
        "commented_code": "@@ -22,8 +22,20 @@ struct StorageOptions {\n \toptional_idx storage_version;\n \t//! Block header size (only used for encryption)\n \toptional_idx block_header_size;\n+\n \t//! Whether the database is encrypted\n \tbool encryption = false;\n+\t//! Encryption algorithm (default = GCM)\n+\tstring encryption_cipher = \"gcm\";\n+\t//! encryption key\n+\tstring encryption_key;",
        "comment_created_at": "2025-06-10T09:10:49+00:00",
        "comment_author": "Mytherin",
        "comment_body": "Similar - should this be a string?",
        "pr_file_module": null
      },
      {
        "comment_id": "2138308871",
        "repo_full_name": "duckdb/duckdb",
        "pr_number": 17275,
        "pr_file": "src/include/duckdb/storage/storage_options.hpp",
        "discussion_id": "2137342159",
        "commented_code": "@@ -22,8 +22,20 @@ struct StorageOptions {\n \toptional_idx storage_version;\n \t//! Block header size (only used for encryption)\n \toptional_idx block_header_size;\n+\n \t//! Whether the database is encrypted\n \tbool encryption = false;\n+\t//! Encryption algorithm (default = GCM)\n+\tstring encryption_cipher = \"gcm\";\n+\t//! encryption key\n+\tstring encryption_key;",
        "comment_created_at": "2025-06-10T16:15:49+00:00",
        "comment_author": "ccfelius",
        "comment_body": "Yes, this in on purpose. This is not the actual key, but this is the user input, which can be of _any_ length and is almost instantly deleted because another 32-byte key is derived (which is locked and stored in bytes in an EncryptionKey object).\r\n\r\nSince this an input key, and is only around for a short period, its memory is also not locked. This value in the `StorageOptions` is basically just used to pass on the input key to the single file block manager, until we are able to generate or extract the salt from the main database header which we use to derive the final key. This string is then immediately wiped.",
        "pr_file_module": null
      }
    ]
  }
]