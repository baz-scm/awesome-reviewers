[
  {
    "discussion_id": "2175560758",
    "pr_number": 130280,
    "pr_file": "docs/reference/elasticsearch/index-lifecycle-actions/ilm-forcemerge.md",
    "created_at": "2025-06-30T17:23:09+00:00",
    "commented_code": "Phases allowed: hot, warm.\n\n[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments).\n\n::::{note}\nShards that are relocating during a `forcemerge` will not be merged.\n::::\n\n[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments). This operation is best effort. For example, shards that are relocating during a `forcemerge` will not be merged.\n\nTo use the `forcemerge` action in the `hot` phase, the `rollover` action **must** be present. If no rollover action is configured, {{ilm-init}} will reject the policy.\n\n:::::{admonition} Performance considerations\n:name: ilm-forcemerge-performance\n\nForce merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. This can happen when you apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple phases. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n\nIf you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings).\n\n::::{important}\nThis can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n::::\nForce merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. For example, this can happen when you \n* modify an existing {{ilm-init}} policy's phase `min_age` such that indices trigger into force-merging phase faster.",
    "repo_full_name": "elastic/elasticsearch",
    "discussion_comments": [
      {
        "comment_id": "2175560758",
        "repo_full_name": "elastic/elasticsearch",
        "pr_number": 130280,
        "pr_file": "docs/reference/elasticsearch/index-lifecycle-actions/ilm-forcemerge.md",
        "discussion_id": "2175560758",
        "commented_code": "@@ -7,29 +7,26 @@ mapped_pages:\n \n Phases allowed: hot, warm.\n \n-[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments).\n-\n-::::{note}\n-Shards that are relocating during a `forcemerge` will not be merged.\n-::::\n-\n+[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments). This operation is best effort. For example, shards that are relocating during a `forcemerge` will not be merged.\n \n To use the `forcemerge` action in the `hot` phase, the `rollover` action **must** be present. If no rollover action is configured, {{ilm-init}} will reject the policy.\n \n :::::{admonition} Performance considerations\n :name: ilm-forcemerge-performance\n \n-Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. This can happen when you apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple phases. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n-\n-If you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings).\n-\n-::::{important}\n-This can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n-::::\n+Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. For example, this can happen when you \n+* modify an existing {{ilm-init}} policy's phase `min_age` such that indices trigger into force-merging phase faster.",
        "comment_created_at": "2025-06-30T17:23:09+00:00",
        "comment_author": "kilfoyle",
        "comment_body": "```suggestion\r\n* modify an {{ilm-init}} policy to lower the [`min_age`](./ilm-rollover.md#ilm-rollover-options) for one or more phases, causing indices to trigger the force merge at a faster rate.\r\n```\r\n\r\nI think it'd be helpful to link to the docs for this setting. It's probably not obvious that it's a rollover setting rather than an ILM setting.",
        "pr_file_module": null
      },
      {
        "comment_id": "2175889489",
        "repo_full_name": "elastic/elasticsearch",
        "pr_number": 130280,
        "pr_file": "docs/reference/elasticsearch/index-lifecycle-actions/ilm-forcemerge.md",
        "discussion_id": "2175560758",
        "commented_code": "@@ -7,29 +7,26 @@ mapped_pages:\n \n Phases allowed: hot, warm.\n \n-[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments).\n-\n-::::{note}\n-Shards that are relocating during a `forcemerge` will not be merged.\n-::::\n-\n+[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments). This operation is best effort. For example, shards that are relocating during a `forcemerge` will not be merged.\n \n To use the `forcemerge` action in the `hot` phase, the `rollover` action **must** be present. If no rollover action is configured, {{ilm-init}} will reject the policy.\n \n :::::{admonition} Performance considerations\n :name: ilm-forcemerge-performance\n \n-Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. This can happen when you apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple phases. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n-\n-If you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings).\n-\n-::::{important}\n-This can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n-::::\n+Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. For example, this can happen when you \n+* modify an existing {{ilm-init}} policy's phase `min_age` such that indices trigger into force-merging phase faster.",
        "comment_created_at": "2025-06-30T20:46:45+00:00",
        "comment_author": "stefnestor",
        "comment_body": "I had meant a phase's `min_age` and not the `hot.rollover`'s `min_age` setting actually. \r\n\r\nJust updating the rollover `min_age` would potentially not cascade multiple indices immediately, but the example we frequently encounter is \"oh no my hot/warm/cold is filling up disk, let me lower frozen `min_age` to push data to it faster\" **mass** triggers force merge queues and causes heap+cpu performance issues on the data tier you were just trying to resolve disk on ðŸ˜… . ",
        "pr_file_module": null
      },
      {
        "comment_id": "2175980577",
        "repo_full_name": "elastic/elasticsearch",
        "pr_number": 130280,
        "pr_file": "docs/reference/elasticsearch/index-lifecycle-actions/ilm-forcemerge.md",
        "discussion_id": "2175560758",
        "commented_code": "@@ -7,29 +7,26 @@ mapped_pages:\n \n Phases allowed: hot, warm.\n \n-[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments).\n-\n-::::{note}\n-Shards that are relocating during a `forcemerge` will not be merged.\n-::::\n-\n+[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments). This operation is best effort. For example, shards that are relocating during a `forcemerge` will not be merged.\n \n To use the `forcemerge` action in the `hot` phase, the `rollover` action **must** be present. If no rollover action is configured, {{ilm-init}} will reject the policy.\n \n :::::{admonition} Performance considerations\n :name: ilm-forcemerge-performance\n \n-Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. This can happen when you apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple phases. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n-\n-If you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings).\n-\n-::::{important}\n-This can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n-::::\n+Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. For example, this can happen when you \n+* modify an existing {{ilm-init}} policy's phase `min_age` such that indices trigger into force-merging phase faster.",
        "comment_created_at": "2025-06-30T21:16:55+00:00",
        "comment_author": "kilfoyle",
        "comment_body": "Ah, okay. Let's not use the link then.\r\n\r\nI see now that `min_age` is also part of the [`/_ilm/policy` API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-ilm-put-lifecycle). I didn't realize that these are different things.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2175578616",
    "pr_number": 130280,
    "pr_file": "docs/reference/elasticsearch/index-lifecycle-actions/ilm-forcemerge.md",
    "created_at": "2025-06-30T17:35:48+00:00",
    "commented_code": "Phases allowed: hot, warm.\n\n[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments).\n\n::::{note}\nShards that are relocating during a `forcemerge` will not be merged.\n::::\n\n[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments). This operation is best effort. For example, shards that are relocating during a `forcemerge` will not be merged.\n\nTo use the `forcemerge` action in the `hot` phase, the `rollover` action **must** be present. If no rollover action is configured, {{ilm-init}} will reject the policy.\n\n:::::{admonition} Performance considerations\n:name: ilm-forcemerge-performance\n\nForce merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. This can happen when you apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple phases. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n\nIf you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings).\n\n::::{important}\nThis can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n::::\nForce merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. For example, this can happen when you \n* modify an existing {{ilm-init}} policy's phase `min_age` such that indices trigger into force-merging phase faster.\n* apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple actions. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n* run the [{{ilm-init}} Move Step API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-ilm-move-to-step) against multiple indices.\n\nIf you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings). This is considered an expert setting override as this can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.",
    "repo_full_name": "elastic/elasticsearch",
    "discussion_comments": [
      {
        "comment_id": "2175578616",
        "repo_full_name": "elastic/elasticsearch",
        "pr_number": 130280,
        "pr_file": "docs/reference/elasticsearch/index-lifecycle-actions/ilm-forcemerge.md",
        "discussion_id": "2175578616",
        "commented_code": "@@ -7,29 +7,26 @@ mapped_pages:\n \n Phases allowed: hot, warm.\n \n-[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments).\n-\n-::::{note}\n-Shards that are relocating during a `forcemerge` will not be merged.\n-::::\n-\n+[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments). This operation is best effort. For example, shards that are relocating during a `forcemerge` will not be merged.\n \n To use the `forcemerge` action in the `hot` phase, the `rollover` action **must** be present. If no rollover action is configured, {{ilm-init}} will reject the policy.\n \n :::::{admonition} Performance considerations\n :name: ilm-forcemerge-performance\n \n-Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. This can happen when you apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple phases. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n-\n-If you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings).\n-\n-::::{important}\n-This can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n-::::\n+Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. For example, this can happen when you \n+* modify an existing {{ilm-init}} policy's phase `min_age` such that indices trigger into force-merging phase faster.\n+* apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple actions. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n+* run the [{{ilm-init}} Move Step API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-ilm-move-to-step) against multiple indices.\n \n+If you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings). This is considered an expert setting override as this can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.",
        "comment_created_at": "2025-06-30T17:35:48+00:00",
        "comment_author": "kilfoyle",
        "comment_body": "```suggestion\r\nIf you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings). \r\n\r\n::::{important}\r\nNote that `thread_pool.force_merge.size` is an advanced setting. Adjusting it can cause cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\r\n::::\r\n```\r\nI think it's a good idea to keep this in an \"important\" block just so it's easier for users to notice.\r\n\r\n<img width=\"463\" alt=\"screen25\" src=\"https://github.com/user-attachments/assets/0846cec8-3b6f-4506-bf31-3979aadb5ae0\" />\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2175632315",
    "pr_number": 130280,
    "pr_file": "docs/reference/elasticsearch/index-lifecycle-actions/ilm-forcemerge.md",
    "created_at": "2025-06-30T18:11:49+00:00",
    "commented_code": "Phases allowed: hot, warm.\n\n[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments).\n\n::::{note}\nShards that are relocating during a `forcemerge` will not be merged.\n::::\n\n[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments). This operation is best effort. For example, shards that are relocating during a `forcemerge` will not be merged.\n\nTo use the `forcemerge` action in the `hot` phase, the `rollover` action **must** be present. If no rollover action is configured, {{ilm-init}} will reject the policy.\n\n:::::{admonition} Performance considerations\n:name: ilm-forcemerge-performance\n\nForce merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. This can happen when you apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple phases. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n\nIf you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings).\n\n::::{important}\nThis can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n::::\nForce merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. For example, this can happen when you \n* modify an existing {{ilm-init}} policy's phase `min_age` such that indices trigger into force-merging phase faster.\n* apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple actions. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n* run the [{{ilm-init}} Move Step API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-ilm-move-to-step) against multiple indices.\n\nIf you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings). This is considered an expert setting override as this can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n\nForce merging will be performed by the nodes within the current phase of the index. A forcemerge in the `hot` phase will use hot nodes with potentially faster nodes, while impacting ingestion more. A forcemerge in the `warm` phase will use warm nodes and potentially take longer to perform, but without impacting ingestion in the `hot` tier.\nForce merging will be performed by the node hosting the shard. The [node's role](https://www.elastic.co/docs/deploy-manage/distributed-architecture/clusters-nodes-shards/node-roles#data-node-role) frequently is equal to the [data tier](https://www.elastic.co/docs/manage-data/lifecycle/data-tiers) of the {{ilm-init}}'s phase of the index, but this is not guaranteed. For example, a forcemerge in the \n* `hot` phase will use hot nodes; however, performing merges on this potentially higher performance hardware may have a trade off of impacting ingestion. \n* `warm` phase will use warm nodes; however, merges may potentially take longer to perform on less performant hardware but will avoid impacting ingestion in the `hot` tier.\n* `cold` or `frozen` phase [{{ilm-init}} Searchable Snapshots](https://www.elastic.co/docs/reference/elasticsearch/index-lifecycle-actions/ilm-searchable-snapshot) via `force_merge_index` happens on the preceeding data tier.",
    "repo_full_name": "elastic/elasticsearch",
    "discussion_comments": [
      {
        "comment_id": "2175632315",
        "repo_full_name": "elastic/elasticsearch",
        "pr_number": 130280,
        "pr_file": "docs/reference/elasticsearch/index-lifecycle-actions/ilm-forcemerge.md",
        "discussion_id": "2175632315",
        "commented_code": "@@ -7,29 +7,26 @@ mapped_pages:\n \n Phases allowed: hot, warm.\n \n-[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments).\n-\n-::::{note}\n-Shards that are relocating during a `forcemerge` will not be merged.\n-::::\n-\n+[Force merges](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-forcemerge) the index into the specified maximum number of [segments](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-indices-segments). This operation is best effort. For example, shards that are relocating during a `forcemerge` will not be merged.\n \n To use the `forcemerge` action in the `hot` phase, the `rollover` action **must** be present. If no rollover action is configured, {{ilm-init}} will reject the policy.\n \n :::::{admonition} Performance considerations\n :name: ilm-forcemerge-performance\n \n-Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. This can happen when you apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple phases. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n-\n-If you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings).\n-\n-::::{important}\n-This can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n-::::\n+Force merge is a resource-intensive operation. If too many force merges are triggered at once, it can negatively impact your cluster. For example, this can happen when you \n+* modify an existing {{ilm-init}} policy's phase `min_age` such that indices trigger into force-merging phase faster.\n+* apply an {{ilm-init}} policy that includes a force merge action to existing indices. If they meet the `min_age` criteria, they can immediately proceed through multiple actions. You can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date` to change how the index age is calculated.\n+* run the [{{ilm-init}} Move Step API](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-ilm-move-to-step) against multiple indices.\n \n+If you experience a force merge task queue backlog, you might need to increase the size of the force merge threadpool so indices can be force merged in parallel. To do this, configure the `thread_pool.force_merge.size` [cluster setting](https://www.elastic.co/docs/api/doc/elasticsearch/operation/operation-cluster-get-settings). This is considered an expert setting override as this can have cascading performance impacts. Monitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n \n-Force merging will be performed by the nodes within the current phase of the index. A forcemerge in the `hot` phase will use hot nodes with potentially faster nodes, while impacting ingestion more. A forcemerge in the `warm` phase will use warm nodes and potentially take longer to perform, but without impacting ingestion in the `hot` tier.\n+Force merging will be performed by the node hosting the shard. The [node's role](https://www.elastic.co/docs/deploy-manage/distributed-architecture/clusters-nodes-shards/node-roles#data-node-role) frequently is equal to the [data tier](https://www.elastic.co/docs/manage-data/lifecycle/data-tiers) of the {{ilm-init}}'s phase of the index, but this is not guaranteed. For example, a forcemerge in the \n+* `hot` phase will use hot nodes; however, performing merges on this potentially higher performance hardware may have a trade off of impacting ingestion. \n+* `warm` phase will use warm nodes; however, merges may potentially take longer to perform on less performant hardware but will avoid impacting ingestion in the `hot` tier.\n+* `cold` or `frozen` phase [{{ilm-init}} Searchable Snapshots](https://www.elastic.co/docs/reference/elasticsearch/index-lifecycle-actions/ilm-searchable-snapshot) via `force_merge_index` happens on the preceeding data tier.",
        "comment_created_at": "2025-06-30T18:11:49+00:00",
        "comment_author": "kilfoyle",
        "comment_body": "```suggestion\r\nForce merging will be performed by the node hosting the shard. The [node's role](docs-content://deploy-manage/distributed-architecture/clusters-nodes-shards/node-settings.md#node-roles) frequently matches the [data tier](docs-content://manage-data/lifecycle/data-tiers.md) of the {{ilm-init}}'s phase of the index, but this is not guaranteed. For example: \r\n* A force merge in the `hot` phase will use hot nodes. Merges may be faster on this potentially higher performance hardware but may have the tradeoff of impacting ingestion. \r\n* A force merge in the `warm` phase will use warm nodes. Merges may take longer to perform on potentially lower performance hardware but will avoid impacting ingestion in the `hot` tier.\r\n* A force merge in the `cold` or `frozen` phase [{{ilm-init}} Searchable Snapshots](./ilm-searchable-snapshot) using `force_merge_index` happens on the preceeding data tier.\r\n```\r\n\r\nThe above rephrases things bit and fixes up the links. ",
        "pr_file_module": null
      }
    ]
  }
]