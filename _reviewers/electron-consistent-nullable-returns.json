[
  {
    "discussion_id": "2223774888",
    "pr_number": 47850,
    "pr_file": "docs/api/web-frame-main.md",
    "created_at": "2025-07-22T20:36:12+00:00",
    "commented_code": "Returns `WebFrameMain | undefined` - A frame with the given process and routing IDs,\n or `undefined` if there is no WebFrameMain associated with the given IDs.\n \n+### `webFrameMain.fromFrameToken(processId, frameToken)`\n+\n+* `processId` Integer - An `Integer` representing the internal ID of the process which owns the frame.\n+* `frameToken` string - A `string` representing the unique frame token in the\n+  current renderer process.\n+\n+Returns `WebFrameMain | undefined` - A frame with the given process and frame token,\n+or `undefined` if there is no WebFrameMain associated with the given IDs.",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "2223774888",
        "repo_full_name": "electron/electron",
        "pr_number": 47850,
        "pr_file": "docs/api/web-frame-main.md",
        "discussion_id": "2223774888",
        "commented_code": "@@ -66,6 +66,15 @@ These methods can be accessed from the `webFrameMain` module:\n Returns `WebFrameMain | undefined` - A frame with the given process and routing IDs,\n or `undefined` if there is no WebFrameMain associated with the given IDs.\n \n+### `webFrameMain.fromFrameToken(processId, frameToken)`\n+\n+* `processId` Integer - An `Integer` representing the internal ID of the process which owns the frame.\n+* `frameToken` string - A `string` representing the unique frame token in the\n+  current renderer process.\n+\n+Returns `WebFrameMain | undefined` - A frame with the given process and frame token,\n+or `undefined` if there is no WebFrameMain associated with the given IDs.",
        "comment_created_at": "2025-07-22T20:36:12+00:00",
        "comment_author": "dsanders11",
        "comment_body": "```suggestion\r\nReturns `WebFrameMain | null` - A frame with the given process and frame token,\r\nor `null` if there is no WebFrameMain associated with the given IDs.\r\n```\r\n\r\nNot blocking, but we had some discussion on Slack regarding `undefined` vs `null` for these kinds of APIs and I think consensus was heading towards returning `null` for the not found case.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2208462356",
    "pr_number": 47741,
    "pr_file": "docs/api/browser-window.md",
    "created_at": "2025-07-15T19:22:05+00:00",
    "commented_code": "> `relaunchCommand` and `relaunchDisplayName` must always be set\n > together. If one of those properties is not set, then neither will be used.\n \n+#### `win.setAccentColor(accentColor)` _Windows_\n+\n+* `accentColor` boolean | string - The accent color for the window. By default, follows user preference in System Settings. Set to `false` to explicitly disable, or set the color in Hex, RGB, RGBA, HSL, HSLA or named CSS color format. Alpha values will be ignored.\n+\n+Sets the system accent color and highlighting of active window border.\n+\n+#### `win.getAccentColor()` _Windows_\n+\n+Returns `string | null` - the system accent color and highlighting of active window border in RGB format.",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "2208462356",
        "repo_full_name": "electron/electron",
        "pr_number": 47741,
        "pr_file": "docs/api/browser-window.md",
        "discussion_id": "2208462356",
        "commented_code": "@@ -1440,6 +1440,19 @@ Sets the properties for the window's taskbar button.\n > `relaunchCommand` and `relaunchDisplayName` must always be set\n > together. If one of those properties is not set, then neither will be used.\n \n+#### `win.setAccentColor(accentColor)` _Windows_\n+\n+* `accentColor` boolean | string - The accent color for the window. By default, follows user preference in System Settings. Set to `false` to explicitly disable, or set the color in Hex, RGB, RGBA, HSL, HSLA or named CSS color format. Alpha values will be ignored.\n+\n+Sets the system accent color and highlighting of active window border.\n+\n+#### `win.getAccentColor()` _Windows_\n+\n+Returns `string | null` - the system accent color and highlighting of active window border in RGB format.",
        "comment_created_at": "2025-07-15T19:22:05+00:00",
        "comment_author": "itsananderson",
        "comment_body": "This is documented as `string | null` but the implementation seems to be `string | false`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1403649081",
    "pr_number": 40569,
    "pr_file": "docs/api/browser-view.md",
    "created_at": "2023-11-23T18:11:10+00:00",
    "commented_code": "#### `view.webContents` _Experimental_\n \n-A [`WebContents`](web-contents.md) object owned by this view.\n+Returns `WebContents | null` - The `WebContents` owned by this view\n+or `null` if the contents are [destroyed](web-contents.md#event-destroyed).",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "1403649081",
        "repo_full_name": "electron/electron",
        "pr_number": 40569,
        "pr_file": "docs/api/browser-view.md",
        "discussion_id": "1403649081",
        "commented_code": "@@ -41,7 +41,8 @@ Objects created with `new BrowserView` have the following properties:\n \n #### `view.webContents` _Experimental_\n \n-A [`WebContents`](web-contents.md) object owned by this view.\n+Returns `WebContents | null` - The `WebContents` owned by this view\n+or `null` if the contents are [destroyed](web-contents.md#event-destroyed).",
        "comment_created_at": "2023-11-23T18:11:10+00:00",
        "comment_author": "Juice10",
        "comment_body": "```suggestion\nReturns `WebContents | null` - The `WebContents` owned by this view or `null` if the contents are [destroyed](web-contents.md#event-destroyed).\n```\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1927911487",
    "pr_number": 45232,
    "pr_file": "docs/api/service-workers.md",
    "created_at": "2025-01-24T00:13:23+00:00",
    "commented_code": "Returns `Record<number, ServiceWorkerInfo>` - A [ServiceWorkerInfo](structures/service-worker-info.md) object where the keys are the service worker version ID and the values are the information about that service worker.\n \n-#### `serviceWorkers.getFromVersionID(versionId)`\n+#### `serviceWorkers.getInfoFromVersionID(versionId)`\n+\n+* `versionId` number - ID of the service worker version\n \n-* `versionId` number\n+Returns [`ServiceWorkerInfo`](structures/service-worker-info.md) - Information about this service worker\n+\n+If the service worker does not exist or is not running this method will throw an exception.\n+\n+#### `serviceWorkers.getFromVersionID(versionId)` _Deprecated_\n+\n+* `versionId` number - ID of the service worker version\n \n Returns [`ServiceWorkerInfo`](structures/service-worker-info.md) - Information about this service worker\n \n If the service worker does not exist or is not running this method will throw an exception.\n+\n+**Deprecated:** Use the new `serviceWorkers.getInfoFromVersionID` API.\n+\n+#### `serviceWorkers.getWorkerFromVersionID(versionId)` _Experimental_\n+\n+* `versionId` number - ID of the service worker version\n+\n+Returns [`ServiceWorkerMain | undefined`](service-worker-main.md) - Instance of the service worker associated with the given version ID.",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "1927911487",
        "repo_full_name": "electron/electron",
        "pr_number": 45232,
        "pr_file": "docs/api/service-workers.md",
        "discussion_id": "1927911487",
        "commented_code": "@@ -64,10 +75,56 @@ The following methods are available on instances of `ServiceWorkers`:\n \n Returns `Record<number, ServiceWorkerInfo>` - A [ServiceWorkerInfo](structures/service-worker-info.md) object where the keys are the service worker version ID and the values are the information about that service worker.\n \n-#### `serviceWorkers.getFromVersionID(versionId)`\n+#### `serviceWorkers.getInfoFromVersionID(versionId)`\n+\n+* `versionId` number - ID of the service worker version\n \n-* `versionId` number\n+Returns [`ServiceWorkerInfo`](structures/service-worker-info.md) - Information about this service worker\n+\n+If the service worker does not exist or is not running this method will throw an exception.\n+\n+#### `serviceWorkers.getFromVersionID(versionId)` _Deprecated_\n+\n+* `versionId` number - ID of the service worker version\n \n Returns [`ServiceWorkerInfo`](structures/service-worker-info.md) - Information about this service worker\n \n If the service worker does not exist or is not running this method will throw an exception.\n+\n+**Deprecated:** Use the new `serviceWorkers.getInfoFromVersionID` API.\n+\n+#### `serviceWorkers.getWorkerFromVersionID(versionId)` _Experimental_\n+\n+* `versionId` number - ID of the service worker version\n+\n+Returns [`ServiceWorkerMain | undefined`](service-worker-main.md) - Instance of the service worker associated with the given version ID.",
        "comment_created_at": "2025-01-24T00:13:23+00:00",
        "comment_author": "itsananderson",
        "comment_body": "If I understand correctly, when a ServiceWorker is cleaned up by Chromium, this API could return `undefined`, but that happens at some indeterminate point after the worker becomes \"redundant\", or possibly in other cases?\r\n\r\nIs it possible to explain any of that info here without having to fully explain the lifecycle of ServiceWorkers? If so, it might help people understand how to handle `undefined` return values.\r\n\r\nPerhaps adding something like:\r\n\r\n* \"Returns `undefined` if the ServiceWorker has been cleaned up\"\r\n* \"Returns `undefined` if the ServiceWorker no longer exists\"\r\n* \"Returns `undefined` if the ServiceWorker has been unregistered\"\r\n\r\nI'm not sure which terminology is the most accurate way to describe this, so I'm offering a few suggestions in case any of them sound reasonable \ud83d\ude05 ",
        "pr_file_module": null
      },
      {
        "comment_id": "1927997465",
        "repo_full_name": "electron/electron",
        "pr_number": 45232,
        "pr_file": "docs/api/service-workers.md",
        "discussion_id": "1927911487",
        "commented_code": "@@ -64,10 +75,56 @@ The following methods are available on instances of `ServiceWorkers`:\n \n Returns `Record<number, ServiceWorkerInfo>` - A [ServiceWorkerInfo](structures/service-worker-info.md) object where the keys are the service worker version ID and the values are the information about that service worker.\n \n-#### `serviceWorkers.getFromVersionID(versionId)`\n+#### `serviceWorkers.getInfoFromVersionID(versionId)`\n+\n+* `versionId` number - ID of the service worker version\n \n-* `versionId` number\n+Returns [`ServiceWorkerInfo`](structures/service-worker-info.md) - Information about this service worker\n+\n+If the service worker does not exist or is not running this method will throw an exception.\n+\n+#### `serviceWorkers.getFromVersionID(versionId)` _Deprecated_\n+\n+* `versionId` number - ID of the service worker version\n \n Returns [`ServiceWorkerInfo`](structures/service-worker-info.md) - Information about this service worker\n \n If the service worker does not exist or is not running this method will throw an exception.\n+\n+**Deprecated:** Use the new `serviceWorkers.getInfoFromVersionID` API.\n+\n+#### `serviceWorkers.getWorkerFromVersionID(versionId)` _Experimental_\n+\n+* `versionId` number - ID of the service worker version\n+\n+Returns [`ServiceWorkerMain | undefined`](service-worker-main.md) - Instance of the service worker associated with the given version ID.",
        "comment_created_at": "2025-01-24T02:23:49+00:00",
        "comment_author": "samuelmaddock",
        "comment_body": "Clarified that it relates to the service worker's running status in [96dedfd](https://github.com/electron/electron/pull/45232/commits/96dedfd3ce0280486e2f824b599ea4c3f567a96f)",
        "pr_file_module": null
      }
    ]
  }
]