[
  {
    "discussion_id": "2158252765",
    "pr_number": 47505,
    "pr_file": "lib/node/asar-fs-wrapper.ts",
    "created_at": "2025-06-20T07:34:33+00:00",
    "commented_code": "const archive = getOrCreateArchive(asarPath);\n     if (!archive) {\n-      if (shouldThrowStatError(options)) {\n+      if (options?.throwIfNoEntry === true) {\n         throw createError(AsarError.INVALID_ARCHIVE, { asarPath });\n       };\n       return null;\n     }\n \n     const stats = archive.stat(filePath);\n     if (!stats) {\n-      if (shouldThrowStatError(options)) {\n+      if (options?.throwIfNoEntry === true) {\n         throw createError(AsarError.NOT_FOUND, { asarPath, filePath });\n       };\n       return null;\n     }\n \n-    return asarStatsToFsStats(stats);\n+    return asarStatsToFsStats(stats, options);",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "2158252765",
        "repo_full_name": "electron/electron",
        "pr_number": 47505,
        "pr_file": "lib/node/asar-fs-wrapper.ts",
        "discussion_id": "2158252765",
        "commented_code": "@@ -308,21 +310,21 @@ export const wrapFsWithAsar = (fs: Record<string, any>) => {\n \n     const archive = getOrCreateArchive(asarPath);\n     if (!archive) {\n-      if (shouldThrowStatError(options)) {\n+      if (options?.throwIfNoEntry === true) {\n         throw createError(AsarError.INVALID_ARCHIVE, { asarPath });\n       };\n       return null;\n     }\n \n     const stats = archive.stat(filePath);\n     if (!stats) {\n-      if (shouldThrowStatError(options)) {\n+      if (options?.throwIfNoEntry === true) {\n         throw createError(AsarError.NOT_FOUND, { asarPath, filePath });\n       };\n       return null;\n     }\n \n-    return asarStatsToFsStats(stats);\n+    return asarStatsToFsStats(stats, options);",
        "comment_created_at": "2025-06-20T07:34:33+00:00",
        "comment_author": "panther7",
        "comment_body": "Question is, why it not used native lstat for compute values, like:\r\n\r\n```suggestion\r\n    return lstat(pathArgument, options, callback);\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2158885308",
        "repo_full_name": "electron/electron",
        "pr_number": 47505,
        "pr_file": "lib/node/asar-fs-wrapper.ts",
        "discussion_id": "2158252765",
        "commented_code": "@@ -308,21 +310,21 @@ export const wrapFsWithAsar = (fs: Record<string, any>) => {\n \n     const archive = getOrCreateArchive(asarPath);\n     if (!archive) {\n-      if (shouldThrowStatError(options)) {\n+      if (options?.throwIfNoEntry === true) {\n         throw createError(AsarError.INVALID_ARCHIVE, { asarPath });\n       };\n       return null;\n     }\n \n     const stats = archive.stat(filePath);\n     if (!stats) {\n-      if (shouldThrowStatError(options)) {\n+      if (options?.throwIfNoEntry === true) {\n         throw createError(AsarError.NOT_FOUND, { asarPath, filePath });\n       };\n       return null;\n     }\n \n-    return asarStatsToFsStats(stats);\n+    return asarStatsToFsStats(stats, options);",
        "comment_created_at": "2025-06-20T12:47:54+00:00",
        "comment_author": "codebytere",
        "comment_body": "@MarshallOfSound i think you probably have the most context here ",
        "pr_file_module": null
      },
      {
        "comment_id": "2163866347",
        "repo_full_name": "electron/electron",
        "pr_number": 47505,
        "pr_file": "lib/node/asar-fs-wrapper.ts",
        "discussion_id": "2158252765",
        "commented_code": "@@ -308,21 +310,21 @@ export const wrapFsWithAsar = (fs: Record<string, any>) => {\n \n     const archive = getOrCreateArchive(asarPath);\n     if (!archive) {\n-      if (shouldThrowStatError(options)) {\n+      if (options?.throwIfNoEntry === true) {\n         throw createError(AsarError.INVALID_ARCHIVE, { asarPath });\n       };\n       return null;\n     }\n \n     const stats = archive.stat(filePath);\n     if (!stats) {\n-      if (shouldThrowStatError(options)) {\n+      if (options?.throwIfNoEntry === true) {\n         throw createError(AsarError.NOT_FOUND, { asarPath, filePath });\n       };\n       return null;\n     }\n \n-    return asarStatsToFsStats(stats);\n+    return asarStatsToFsStats(stats, options);",
        "comment_created_at": "2025-06-24T12:32:08+00:00",
        "comment_author": "panther7",
        "comment_body": "Probably, hotfix:\r\n\r\n```ts\r\n    if (stats.size === 0) {\r\n      stats.size = lstatSync(filePath, options).size;\r\n    }\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2051186648",
    "pr_number": 42628,
    "pr_file": "lib/common/api/net-client-request.ts",
    "created_at": "2025-04-18T22:30:06+00:00",
    "commented_code": "origin: options.origin,\n     referrerPolicy: options.referrerPolicy,\n     cache: options.cache,\n-    allowNonHttpProtocols: Object.hasOwn(options, kAllowNonHttpProtocols)\n+    allowNonHttpProtocols: Object.hasOwn(options, kAllowNonHttpProtocols),\n+    priority: options.priority\n   };\n+  if ('priorityIncremental' in options) {\n+    urlLoaderOptions.priorityIncremental = options.priorityIncremental;\n+  }",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "2051186648",
        "repo_full_name": "electron/electron",
        "pr_number": 42628,
        "pr_file": "lib/common/api/net-client-request.ts",
        "discussion_id": "2051186648",
        "commented_code": "@@ -288,8 +288,12 @@ function parseOptions (optionsIn: ClientRequestConstructorOptions | string): Nod\n     origin: options.origin,\n     referrerPolicy: options.referrerPolicy,\n     cache: options.cache,\n-    allowNonHttpProtocols: Object.hasOwn(options, kAllowNonHttpProtocols)\n+    allowNonHttpProtocols: Object.hasOwn(options, kAllowNonHttpProtocols),\n+    priority: options.priority\n   };\n+  if ('priorityIncremental' in options) {\n+    urlLoaderOptions.priorityIncremental = options.priorityIncremental;\n+  }",
        "comment_created_at": "2025-04-18T22:30:06+00:00",
        "comment_author": "nornagon",
        "comment_body": "any reason not to have this as a key in the object above unconditionally?",
        "pr_file_module": null
      },
      {
        "comment_id": "2051210134",
        "repo_full_name": "electron/electron",
        "pr_number": 42628,
        "pr_file": "lib/common/api/net-client-request.ts",
        "discussion_id": "2051186648",
        "commented_code": "@@ -288,8 +288,12 @@ function parseOptions (optionsIn: ClientRequestConstructorOptions | string): Nod\n     origin: options.origin,\n     referrerPolicy: options.referrerPolicy,\n     cache: options.cache,\n-    allowNonHttpProtocols: Object.hasOwn(options, kAllowNonHttpProtocols)\n+    allowNonHttpProtocols: Object.hasOwn(options, kAllowNonHttpProtocols),\n+    priority: options.priority\n   };\n+  if ('priorityIncremental' in options) {\n+    urlLoaderOptions.priorityIncremental = options.priorityIncremental;\n+  }",
        "comment_created_at": "2025-04-18T22:43:01+00:00",
        "comment_author": "zeeker999",
        "comment_body": "To preserve the default value(true), otherwise the priorityIncremental will be false if it's unspecified and then assigned to `undefined` unconditionally.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1439763451",
    "pr_number": 40569,
    "pr_file": "lib/browser/api/browser-window.ts",
    "created_at": "2024-01-02T19:44:28+00:00",
    "commented_code": "};\n \n BrowserWindow.fromBrowserView = (browserView: BrowserView) => {\n+  const { webContents } = browserView;\n+  if (!webContents) return null;",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "1439763451",
        "repo_full_name": "electron/electron",
        "pr_number": 40569,
        "pr_file": "lib/browser/api/browser-window.ts",
        "discussion_id": "1439763451",
        "commented_code": "@@ -91,6 +91,8 @@ BrowserWindow.fromWebContents = (webContents: WebContents) => {\n };\n \n BrowserWindow.fromBrowserView = (browserView: BrowserView) => {\n+  const { webContents } = browserView;\n+  if (!webContents) return null;",
        "comment_created_at": "2024-01-02T19:44:28+00:00",
        "comment_author": "nornagon",
        "comment_body": "you'll need to update the docs for `BrowserWindow.fromBrowserView` to state that it can return `null`, too.",
        "pr_file_module": null
      }
    ]
  }
]