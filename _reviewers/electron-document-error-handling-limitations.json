[
  {
    "discussion_id": "2082033179",
    "pr_number": 47018,
    "pr_file": "docs/api/command-line-switches.md",
    "created_at": "2025-05-09T16:27:29+00:00",
    "commented_code": "Silence deprecation warnings.\n \n+### `--no-warnings`\n+\n+Silence all process warnings (including deprecations).",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "2082033179",
        "repo_full_name": "electron/electron",
        "pr_number": 47018,
        "pr_file": "docs/api/command-line-switches.md",
        "discussion_id": "2082033179",
        "commented_code": "@@ -292,6 +299,10 @@ By default inspector websocket url is available in stderr and under /json/list e\n \n Silence deprecation warnings.\n \n+### `--no-warnings`\n+\n+Silence all process warnings (including deprecations).",
        "comment_created_at": "2025-05-09T16:27:29+00:00",
        "comment_author": "itsananderson",
        "comment_body": "I wonder if we should mention that this flag silences the default handler that prints the warnings, but that apps can still use `process.on('warning')` to listen for and report any warnings they care about?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2059043232",
    "pr_number": 46762,
    "pr_file": "docs/breaking-changes.md",
    "created_at": "2025-04-24T18:46:58+00:00",
    "commented_code": "## Planned Breaking API Changes (37.0)\n \n+### Utility Process unhandled rejection behavior change\n+\n+Utility Processes will now warn with an error message when an unhandled\n+rejection occurs instead of crashing the process.\n+\n+To restore the previous behavior, you can use:\n+\n+```js\n+process.on('unhandledRejection', () => {\n+  process.exit(1)",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "2059043232",
        "repo_full_name": "electron/electron",
        "pr_number": 46762,
        "pr_file": "docs/breaking-changes.md",
        "discussion_id": "2059043232",
        "commented_code": "@@ -14,6 +14,19 @@ This document uses the following convention to categorize breaking changes:\n \n ## Planned Breaking API Changes (37.0)\n \n+### Utility Process unhandled rejection behavior change\n+\n+Utility Processes will now warn with an error message when an unhandled\n+rejection occurs instead of crashing the process.\n+\n+To restore the previous behavior, you can use:\n+\n+```js\n+process.on('unhandledRejection', () => {\n+  process.exit(1)",
        "comment_created_at": "2025-04-24T18:46:58+00:00",
        "comment_author": "nikwen",
        "comment_body": "This is tricky because `process.exit()` does not synchronously crash the utility process. See https://github.com/electron/electron/issues/44174.\r\n\r\nI wonder if there's a different function that will kill the process immediately (or if we can get the linked issue fixed for v37).",
        "pr_file_module": null
      },
      {
        "comment_id": "2059069220",
        "repo_full_name": "electron/electron",
        "pr_number": 46762,
        "pr_file": "docs/breaking-changes.md",
        "discussion_id": "2059043232",
        "commented_code": "@@ -14,6 +14,19 @@ This document uses the following convention to categorize breaking changes:\n \n ## Planned Breaking API Changes (37.0)\n \n+### Utility Process unhandled rejection behavior change\n+\n+Utility Processes will now warn with an error message when an unhandled\n+rejection occurs instead of crashing the process.\n+\n+To restore the previous behavior, you can use:\n+\n+```js\n+process.on('unhandledRejection', () => {\n+  process.exit(1)",
        "comment_created_at": "2025-04-24T19:07:10+00:00",
        "comment_author": "mlaurencin",
        "comment_body": "So #45921 above is the PR but it does not have a linked issue attached. It actually looks like you might have been the last one to update the docs for this in https://github.com/electron/electron/pull/46093. Has something changed since then? \r\n\r\nI am all good with updating the docs in addition to the correcting of the release versions. I am just unfamiliar with this code.",
        "pr_file_module": null
      },
      {
        "comment_id": "2059094407",
        "repo_full_name": "electron/electron",
        "pr_number": 46762,
        "pr_file": "docs/breaking-changes.md",
        "discussion_id": "2059043232",
        "commented_code": "@@ -14,6 +14,19 @@ This document uses the following convention to categorize breaking changes:\n \n ## Planned Breaking API Changes (37.0)\n \n+### Utility Process unhandled rejection behavior change\n+\n+Utility Processes will now warn with an error message when an unhandled\n+rejection occurs instead of crashing the process.\n+\n+To restore the previous behavior, you can use:\n+\n+```js\n+process.on('unhandledRejection', () => {\n+  process.exit(1)",
        "comment_created_at": "2025-04-24T19:26:34+00:00",
        "comment_author": "clavin",
        "comment_body": "Chiming in with my two cents: since this is still marked for 37, we have plenty of time to fix the underlying bug (https://github.com/electron/electron/issues/44174) before it goes live. (Which will also require its own breaking change mention anyways lol.)\r\n\r\nI'm fine with us leaving the \"ideal\" code here in the meantime, especially because it's already in this doc.",
        "pr_file_module": null
      },
      {
        "comment_id": "2059276753",
        "repo_full_name": "electron/electron",
        "pr_number": 46762,
        "pr_file": "docs/breaking-changes.md",
        "discussion_id": "2059043232",
        "commented_code": "@@ -14,6 +14,19 @@ This document uses the following convention to categorize breaking changes:\n \n ## Planned Breaking API Changes (37.0)\n \n+### Utility Process unhandled rejection behavior change\n+\n+Utility Processes will now warn with an error message when an unhandled\n+rejection occurs instead of crashing the process.\n+\n+To restore the previous behavior, you can use:\n+\n+```js\n+process.on('unhandledRejection', () => {\n+  process.exit(1)",
        "comment_created_at": "2025-04-24T21:42:16+00:00",
        "comment_author": "nikwen",
        "comment_body": "@mlaurencin Yes, I last edited the code fragment to fix a docs mistake in #46093. Unfortunately, I didn't have time to review the code sample when it was first merged.\r\n\r\nI'll throw #44174 onto the 37 project board when it is created.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1993993504",
    "pr_number": 45921,
    "pr_file": "docs/breaking-changes.md",
    "created_at": "2025-03-13T17:19:55+00:00",
    "commented_code": "## Planned Breaking API Changes (36.0)\n \n+### Utility Process unhandled rejection behavior change\n+\n+Utility Processes will now warn with an error message when an unhandled\n+rejection occurs instead of crashing the process.",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "1993993504",
        "repo_full_name": "electron/electron",
        "pr_number": 45921,
        "pr_file": "docs/breaking-changes.md",
        "discussion_id": "1993993504",
        "commented_code": "@@ -14,6 +14,11 @@ This document uses the following convention to categorize breaking changes:\n \n ## Planned Breaking API Changes (36.0)\n \n+### Utility Process unhandled rejection behavior change\n+\n+Utility Processes will now warn with an error message when an unhandled\n+rejection occurs instead of crashing the process.",
        "comment_created_at": "2025-03-13T17:19:55+00:00",
        "comment_author": "itsananderson",
        "comment_body": "Should we add a code snippet to explain how to add an unhandled rejection handler and crash the utility process, if people want to restore the old behavior?",
        "pr_file_module": null
      },
      {
        "comment_id": "1994228220",
        "repo_full_name": "electron/electron",
        "pr_number": 45921,
        "pr_file": "docs/breaking-changes.md",
        "discussion_id": "1993993504",
        "commented_code": "@@ -14,6 +14,11 @@ This document uses the following convention to categorize breaking changes:\n \n ## Planned Breaking API Changes (36.0)\n \n+### Utility Process unhandled rejection behavior change\n+\n+Utility Processes will now warn with an error message when an unhandled\n+rejection occurs instead of crashing the process.",
        "comment_created_at": "2025-03-13T20:02:02+00:00",
        "comment_author": "codebytere",
        "comment_body": "@itsananderson done!",
        "pr_file_module": null
      }
    ]
  }
]