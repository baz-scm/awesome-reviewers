[
  {
    "discussion_id": "2082030033",
    "pr_number": 47018,
    "pr_file": "docs/api/command-line-switches.md",
    "created_at": "2025-05-09T16:25:21+00:00",
    "commented_code": "Aliased to `--debug-port=[host:]port`.\n \n+### `--disable-warning=code-or-type`",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "2082030033",
        "repo_full_name": "electron/electron",
        "pr_number": 47018,
        "pr_file": "docs/api/command-line-switches.md",
        "discussion_id": "2082030033",
        "commented_code": "@@ -272,6 +272,13 @@ Set the `host:port` to be used when the inspector is activated. Useful when acti\n \n Aliased to `--debug-port=[host:]port`.\n \n+### `--disable-warning=code-or-type`",
        "comment_created_at": "2025-05-09T16:25:21+00:00",
        "comment_author": "itsananderson",
        "comment_body": "This is marked as `Stability: 1.1 - Active development` in the [Node docs](https://nodejs.org/api/cli.html#--disable-warningcode-or-type). Should we also flag it as experimental in our docs?\r\n\r\nIs it possible to add this flag multiple times to disable multiple warnings? If so, it might be useful to add a note about that as well.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2154967254",
    "pr_number": 47425,
    "pr_file": "docs/api/structures/base-window-options.md",
    "created_at": "2025-06-18T15:51:35+00:00",
    "commented_code": "Default is `false`.\n * `hiddenInMissionControl` boolean (optional) _macOS_ - Whether window should be hidden when the user toggles into mission control.\n * `kiosk` boolean (optional) - Whether the window is in kiosk mode. Default is `false`.\n+* `windowStateRestoreOptions` [WindowStateRestoreOptions](window-state-restore-options.md?inline) (optional) - Options for saving and restoring window state: position, size, maximized state, etc.",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "2154967254",
        "repo_full_name": "electron/electron",
        "pr_number": 47425,
        "pr_file": "docs/api/structures/base-window-options.md",
        "discussion_id": "2154967254",
        "commented_code": "@@ -42,6 +42,7 @@\n   Default is `false`.\n * `hiddenInMissionControl` boolean (optional) _macOS_ - Whether window should be hidden when the user toggles into mission control.\n * `kiosk` boolean (optional) - Whether the window is in kiosk mode. Default is `false`.\n+* `windowStateRestoreOptions` [WindowStateRestoreOptions](window-state-restore-options.md?inline) (optional) - Options for saving and restoring window state: position, size, maximized state, etc.",
        "comment_created_at": "2025-06-18T15:51:35+00:00",
        "comment_author": "erickzhao",
        "comment_body": "```suggestion\r\n* `windowStateRestoreOptions` [WindowStateRestoreOptions](window-state-restore-options.md?inline) (optional) - Options for saving and restoring window state: position, size, maximized state, etc. _Experimental_\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1936114664",
    "pr_number": 45377,
    "pr_file": "docs/api/structures/web-preferences.md",
    "created_at": "2025-01-30T18:41:02+00:00",
    "commented_code": "this will cause the `preferred-size-changed` event to be emitted on the\n   `WebContents` when the preferred size changes. Default is `false`.\n * `transparent` boolean (optional) - Whether to enable background transparency for the guest page. Default is `true`. **Note:** The guest page's text and background colors are derived from the [color scheme](https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme) of its root element. When transparency is enabled, the text color will still change accordingly but the background will remain transparent.\n+* `deprecatedPasteEnabled` boolean (optional) - Whether to enable the `paste` [execCommand](https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand). Default is `false`.",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "1936114664",
        "repo_full_name": "electron/electron",
        "pr_number": 45377,
        "pr_file": "docs/api/structures/web-preferences.md",
        "discussion_id": "1936114664",
        "commented_code": "@@ -148,6 +148,7 @@\n   this will cause the `preferred-size-changed` event to be emitted on the\n   `WebContents` when the preferred size changes. Default is `false`.\n * `transparent` boolean (optional) - Whether to enable background transparency for the guest page. Default is `true`. **Note:** The guest page's text and background colors are derived from the [color scheme](https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme) of its root element. When transparency is enabled, the text color will still change accordingly but the background will remain transparent.\n+* `deprecatedPasteEnabled` boolean (optional) - Whether to enable the `paste` [execCommand](https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand). Default is `false`.",
        "comment_created_at": "2025-01-30T18:41:02+00:00",
        "comment_author": "erickzhao",
        "comment_body": "```suggestion\r\n* `deprecatedPasteEnabled` boolean (optional) - Whether to enable the `paste` [execCommand](https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand). Default is `false`. _Deprecated_\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1482325658",
    "pr_number": 38571,
    "pr_file": "docs/api/structures/web-preferences.md",
    "created_at": "2024-02-08T02:04:37+00:00",
    "commented_code": "enabling Node.js support in sub-frames such as iframes and child windows. All your preloads will load for\n   every iframe, you can use `process.isMainFrame` to determine if you are\n   in the main frame or not.\n+* `frozenIntrinsics` boolean (optional) - Experimental option for passing\n+  [`--frozen-intrinsics`](https://nodejs.org/api/cli.html#--frozen-intrinsics) to Node.js.",
    "repo_full_name": "electron/electron",
    "discussion_comments": [
      {
        "comment_id": "1482325658",
        "repo_full_name": "electron/electron",
        "pr_number": 38571,
        "pr_file": "docs/api/structures/web-preferences.md",
        "discussion_id": "1482325658",
        "commented_code": "@@ -10,6 +10,8 @@\n   enabling Node.js support in sub-frames such as iframes and child windows. All your preloads will load for\n   every iframe, you can use `process.isMainFrame` to determine if you are\n   in the main frame or not.\n+* `frozenIntrinsics` boolean (optional) - Experimental option for passing\n+  [`--frozen-intrinsics`](https://nodejs.org/api/cli.html#--frozen-intrinsics) to Node.js.",
        "comment_created_at": "2024-02-08T02:04:37+00:00",
        "comment_author": "zcbenz",
        "comment_body": "The document should clarity whether this requires `nodeIntegration: true` to work, and how it works with `contextIsolate: true`.",
        "pr_file_module": null
      }
    ]
  }
]