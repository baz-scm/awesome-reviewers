[
  {
    "discussion_id": "1467732647",
    "pr_number": 3611,
    "pr_file": "lib/shared/types.ts",
    "created_at": "2024-01-26T14:39:29+00:00",
    "commented_code": "// Unlike node, Deno lacks the necessary APIs to clean up child processes\n // automatically. You must manually call stop() in Deno when you're done\n // using esbuild or Deno will continue running forever.",
    "repo_full_name": "evanw/esbuild",
    "discussion_comments": [
      {
        "comment_id": "1467732647",
        "repo_full_name": "evanw/esbuild",
        "pr_number": 3611,
        "pr_file": "lib/shared/types.ts",
        "discussion_id": "1467732647",
        "commented_code": "@@ -673,4 +673,4 @@ export let version: string\n // Unlike node, Deno lacks the necessary APIs to clean up child processes\n // automatically. You must manually call stop() in Deno when you're done\n // using esbuild or Deno will continue running forever.",
        "comment_created_at": "2024-01-26T14:39:29+00:00",
        "comment_author": "lucacasonato",
        "comment_body": "Also FYI, the new API has `Deno.ChildProcess#ref` and `Deno.ChildProcess#unref` methods that should let most users avoid calling this API (unless they are running in a test with sanitization, like you are here).\r\n\r\nI suggest you call `process.unref()` like you do in Node, and then most users don't have to call this method at all anymore :)",
        "pr_file_module": null
      },
      {
        "comment_id": "1467976761",
        "repo_full_name": "evanw/esbuild",
        "pr_number": 3611,
        "pr_file": "lib/shared/types.ts",
        "discussion_id": "1467732647",
        "commented_code": "@@ -673,4 +673,4 @@ export let version: string\n // Unlike node, Deno lacks the necessary APIs to clean up child processes\n // automatically. You must manually call stop() in Deno when you're done\n // using esbuild or Deno will continue running forever.",
        "comment_created_at": "2024-01-26T18:09:49+00:00",
        "comment_author": "evanw",
        "comment_body": "Yes, that comment is old. Thanks for mentioning it. I just became aware of `unref` while doing this yesterday and still need to look into it.\r\n\r\nAlthough thinking about the bigger picture, I suppose perhaps this whole `deno.land/x/esbuild` library is unnecessary now that Deno has since added support for npm packages. It feels like I should just deprecate and abandon it, and then tell people to import from `npm:esbuild` instead.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1468048077",
        "repo_full_name": "evanw/esbuild",
        "pr_number": 3611,
        "pr_file": "lib/shared/types.ts",
        "discussion_id": "1467732647",
        "commented_code": "@@ -673,4 +673,4 @@ export let version: string\n // Unlike node, Deno lacks the necessary APIs to clean up child processes\n // automatically. You must manually call stop() in Deno when you're done\n // using esbuild or Deno will continue running forever.",
        "comment_created_at": "2024-01-26T19:14:09+00:00",
        "comment_author": "lucacasonato",
        "comment_body": "That is certainly an option - however in that case a user may still want to support the explicit shutdown of the underlying esbuild process.",
        "pr_file_module": null
      },
      {
        "comment_id": "1468206699",
        "repo_full_name": "evanw/esbuild",
        "pr_number": 3611,
        "pr_file": "lib/shared/types.ts",
        "discussion_id": "1467732647",
        "commented_code": "@@ -673,4 +673,4 @@ export let version: string\n // Unlike node, Deno lacks the necessary APIs to clean up child processes\n // automatically. You must manually call stop() in Deno when you're done\n // using esbuild or Deno will continue running forever.",
        "comment_created_at": "2024-01-26T22:31:57+00:00",
        "comment_author": "evanw",
        "comment_body": "Yes, that's true. Calling `esbuild.stop()` from `npm:esbuild` currently prints the following:\r\n\r\n```\r\nWarning: Not implemented: ChildProcess.prototype.disconnect\r\n```\r\n\r\nI'm not sure why though as esbuild never calls `disconnect` and there is no stack trace associated with the warning.",
        "pr_file_module": null
      },
      {
        "comment_id": "1516907860",
        "repo_full_name": "evanw/esbuild",
        "pr_number": 3611,
        "pr_file": "lib/shared/types.ts",
        "discussion_id": "1467732647",
        "commented_code": "@@ -673,4 +673,4 @@ export let version: string\n // Unlike node, Deno lacks the necessary APIs to clean up child processes\n // automatically. You must manually call stop() in Deno when you're done\n // using esbuild or Deno will continue running forever.",
        "comment_created_at": "2024-03-07T22:15:24+00:00",
        "comment_author": "evanw",
        "comment_body": "Note: Calling `unref` seems to have caused a regression: #3682. I'm removing the call to `unref` to fix the regression: #3685.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "475169514",
    "pr_number": 342,
    "pr_file": "lib/browser.ts",
    "created_at": "2020-08-23T04:40:40+00:00",
    "commented_code": "startService,\n };\n \n-module.exports = api;",
    "repo_full_name": "evanw/esbuild",
    "discussion_comments": [
      {
        "comment_id": "475169514",
        "repo_full_name": "evanw/esbuild",
        "pr_number": 342,
        "pr_file": "lib/browser.ts",
        "discussion_id": "475169514",
        "commented_code": "@@ -87,4 +87,4 @@ let api: typeof types = {\n   startService,\n };\n \n-module.exports = api;",
        "comment_created_at": "2020-08-23T04:40:40+00:00",
        "comment_author": "calebeby",
        "comment_body": "This change was needed, because without it, ESM shim code was being included in the ESM build. I switched it so that now it uses a default export as well as named exports. I took a look at the outputs of the various bundles and it _seems_ correct. The bundle that I'm least sure about is the `browser.js` bundle, but it looks right as far as I can tell.",
        "pr_file_module": null
      }
    ]
  }
]