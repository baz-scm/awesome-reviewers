[
  {
    "discussion_id": "141214286",
    "pr_number": 3427,
    "pr_file": "examples/auth/index.js",
    "created_at": "2017-09-26T23:46:56+00:00",
    "commented_code": "* Module dependencies.\n  */\n \n-var express = require('../..');\n-var bodyParser = require('body-parser');\n-var hash = require('pbkdf2-password')()\n-var path = require('path');\n-var session = require('express-session');\n+const express = require('../..'),",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "141214286",
        "repo_full_name": "expressjs/express",
        "pr_number": 3427,
        "pr_file": "examples/auth/index.js",
        "discussion_id": "141214286",
        "commented_code": "@@ -2,13 +2,13 @@\n  * Module dependencies.\n  */\n \n-var express = require('../..');\n-var bodyParser = require('body-parser');\n-var hash = require('pbkdf2-password')()\n-var path = require('path');\n-var session = require('express-session');\n+const express = require('../..'),",
        "comment_created_at": "2017-09-26T23:46:56+00:00",
        "comment_author": "wesleytodd",
        "comment_body": "We are moving toward using `standard` for formatting, which mandates multiple `const` statements.",
        "pr_file_module": null
      },
      {
        "comment_id": "141214911",
        "repo_full_name": "expressjs/express",
        "pr_number": 3427,
        "pr_file": "examples/auth/index.js",
        "discussion_id": "141214286",
        "commented_code": "@@ -2,13 +2,13 @@\n  * Module dependencies.\n  */\n \n-var express = require('../..');\n-var bodyParser = require('body-parser');\n-var hash = require('pbkdf2-password')()\n-var path = require('path');\n-var session = require('express-session');\n+const express = require('../..'),",
        "comment_created_at": "2017-09-26T23:51:18+00:00",
        "comment_author": "wesleytodd",
        "comment_body": "For reference: https://github.com/standard/standard",
        "pr_file_module": null
      },
      {
        "comment_id": "141215127",
        "repo_full_name": "expressjs/express",
        "pr_number": 3427,
        "pr_file": "examples/auth/index.js",
        "discussion_id": "141214286",
        "commented_code": "@@ -2,13 +2,13 @@\n  * Module dependencies.\n  */\n \n-var express = require('../..');\n-var bodyParser = require('body-parser');\n-var hash = require('pbkdf2-password')()\n-var path = require('path');\n-var session = require('express-session');\n+const express = require('../..'),",
        "comment_created_at": "2017-09-26T23:52:56+00:00",
        "comment_author": "vildevev",
        "comment_body": "I see. I will format them in the standard way.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "143334428",
    "pr_number": 3427,
    "pr_file": "examples/multipart/index.js",
    "created_at": "2017-10-07T16:10:11+00:00",
    "commented_code": "* Module dependencies.\n  */\n \n-var express = require('../..');\n-var multiparty = require('multiparty');\n-var format = require('util').format;\n+const express = require('../..');\n+const multiparty = require('multiparty');\n+const format = require('util').format;\n \n-var app = module.exports = express();\n+const app = module.exports = express();\n \n-app.get('/', function(req, res){\n+app.get('/',(req, res) => {\n   res.send('<form method=\"post\" enctype=\"multipart/form-data\">'\n     + '<p>Title: <input type=\"text\" name=\"title\" /></p>'\n     + '<p>Image: <input type=\"file\" name=\"image\" /></p>'\n     + '<p><input type=\"submit\" value=\"Upload\" /></p>'\n     + '</form>');\n });\n \n-app.post('/', function(req, res, next){\n+app.post('/', (req, res, next) => {",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "143334428",
        "repo_full_name": "expressjs/express",
        "pr_number": 3427,
        "pr_file": "examples/multipart/index.js",
        "discussion_id": "143334428",
        "commented_code": "@@ -2,42 +2,42 @@\n  * Module dependencies.\n  */\n \n-var express = require('../..');\n-var multiparty = require('multiparty');\n-var format = require('util').format;\n+const express = require('../..');\n+const multiparty = require('multiparty');\n+const format = require('util').format;\n \n-var app = module.exports = express();\n+const app = module.exports = express();\n \n-app.get('/', function(req, res){\n+app.get('/',(req, res) => {\n   res.send('<form method=\"post\" enctype=\"multipart/form-data\">'\n     + '<p>Title: <input type=\"text\" name=\"title\" /></p>'\n     + '<p>Image: <input type=\"file\" name=\"image\" /></p>'\n     + '<p><input type=\"submit\" value=\"Upload\" /></p>'\n     + '</form>');\n });\n \n-app.post('/', function(req, res, next){\n+app.post('/', (req, res, next) => {",
        "comment_created_at": "2017-10-07T16:10:11+00:00",
        "comment_author": "nikagar4",
        "comment_body": "inconsistency: space before callback, other places don't have spaces",
        "pr_file_module": null
      },
      {
        "comment_id": "143340773",
        "repo_full_name": "expressjs/express",
        "pr_number": 3427,
        "pr_file": "examples/multipart/index.js",
        "discussion_id": "143334428",
        "commented_code": "@@ -2,42 +2,42 @@\n  * Module dependencies.\n  */\n \n-var express = require('../..');\n-var multiparty = require('multiparty');\n-var format = require('util').format;\n+const express = require('../..');\n+const multiparty = require('multiparty');\n+const format = require('util').format;\n \n-var app = module.exports = express();\n+const app = module.exports = express();\n \n-app.get('/', function(req, res){\n+app.get('/',(req, res) => {\n   res.send('<form method=\"post\" enctype=\"multipart/form-data\">'\n     + '<p>Title: <input type=\"text\" name=\"title\" /></p>'\n     + '<p>Image: <input type=\"file\" name=\"image\" /></p>'\n     + '<p><input type=\"submit\" value=\"Upload\" /></p>'\n     + '</form>');\n });\n \n-app.post('/', function(req, res, next){\n+app.post('/', (req, res, next) => {",
        "comment_created_at": "2017-10-07T21:15:32+00:00",
        "comment_author": "LinusU",
        "comment_body": "Which space do you mean? To me this looks right, and seems to be following [standard style](https://standardjs.com)",
        "pr_file_module": null
      },
      {
        "comment_id": "143490683",
        "repo_full_name": "expressjs/express",
        "pr_number": 3427,
        "pr_file": "examples/multipart/index.js",
        "discussion_id": "143334428",
        "commented_code": "@@ -2,42 +2,42 @@\n  * Module dependencies.\n  */\n \n-var express = require('../..');\n-var multiparty = require('multiparty');\n-var format = require('util').format;\n+const express = require('../..');\n+const multiparty = require('multiparty');\n+const format = require('util').format;\n \n-var app = module.exports = express();\n+const app = module.exports = express();\n \n-app.get('/', function(req, res){\n+app.get('/',(req, res) => {\n   res.send('<form method=\"post\" enctype=\"multipart/form-data\">'\n     + '<p>Title: <input type=\"text\" name=\"title\" /></p>'\n     + '<p>Image: <input type=\"file\" name=\"image\" /></p>'\n     + '<p><input type=\"submit\" value=\"Upload\" /></p>'\n     + '</form>');\n });\n \n-app.post('/', function(req, res, next){\n+app.post('/', (req, res, next) => {",
        "comment_created_at": "2017-10-09T14:53:15+00:00",
        "comment_author": "wesleytodd",
        "comment_body": "This is the correct formatting AFAIK for standard.  Any places without the space should be updated to follow this example.  Like line 11 of this file, it should have a space after the comma.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "237585546",
    "pr_number": 3812,
    "pr_file": "test/middleware.basic.js",
    "created_at": "2018-11-29T17:30:35+00:00",
    "commented_code": "describe('middleware', function(){\n   describe('.next()', function(){\n     it('should behave like connect', function(done){\n-      var app = express()\n-        , calls = [];\n+      var app = express();",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "237585546",
        "repo_full_name": "expressjs/express",
        "pr_number": 3812,
        "pr_file": "test/middleware.basic.js",
        "discussion_id": "237585546",
        "commented_code": "@@ -5,8 +5,8 @@ var request = require('supertest');\n describe('middleware', function(){\n   describe('.next()', function(){\n     it('should behave like connect', function(done){\n-      var app = express()\n-        , calls = [];\n+      var app = express();",
        "comment_created_at": "2018-11-29T17:30:35+00:00",
        "comment_author": "wesleytodd",
        "comment_body": "Express now follows `standard` formatting for all new work, so that would be no-semicolons on these lines.  To be clear, that does not mean apply it to all other lines, just the ones you are touching already.",
        "pr_file_module": null
      },
      {
        "comment_id": "237591378",
        "repo_full_name": "expressjs/express",
        "pr_number": 3812,
        "pr_file": "test/middleware.basic.js",
        "discussion_id": "237585546",
        "commented_code": "@@ -5,8 +5,8 @@ var request = require('supertest');\n describe('middleware', function(){\n   describe('.next()', function(){\n     it('should behave like connect', function(done){\n-      var app = express()\n-        , calls = [];\n+      var app = express();",
        "comment_created_at": "2018-11-29T17:47:15+00:00",
        "comment_author": "dougwilson",
        "comment_body": "I would just leave this off the pr since it's a style only change.",
        "pr_file_module": null
      },
      {
        "comment_id": "237616690",
        "repo_full_name": "expressjs/express",
        "pr_number": 3812,
        "pr_file": "test/middleware.basic.js",
        "discussion_id": "237585546",
        "commented_code": "@@ -5,8 +5,8 @@ var request = require('supertest');\n describe('middleware', function(){\n   describe('.next()', function(){\n     it('should behave like connect', function(done){\n-      var app = express()\n-        , calls = [];\n+      var app = express();",
        "comment_created_at": "2018-11-29T18:58:49+00:00",
        "comment_author": "A1vinSmith",
        "comment_body": "Good to know.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "210204882",
    "pr_number": 3718,
    "pr_file": "examples/multi-router/index.js",
    "created_at": "2018-08-15T08:41:15+00:00",
    "commented_code": "app.use('/api/v2', require('./controllers/api_v2'));\n \n app.get('/', function(req, res) {\n-  res.send('Hello form root route.');\n+  res.send('Hello from root route.');",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "210204882",
        "repo_full_name": "expressjs/express",
        "pr_number": 3718,
        "pr_file": "examples/multi-router/index.js",
        "discussion_id": "210204882",
        "commented_code": "@@ -6,7 +6,7 @@ app.use('/api/v1', require('./controllers/api_v1'));\n app.use('/api/v2', require('./controllers/api_v2'));\n \n app.get('/', function(req, res) {\n-  res.send('Hello form root route.');\n+  res.send('Hello from root route.');",
        "comment_created_at": "2018-08-15T08:41:15+00:00",
        "comment_author": "LinusU",
        "comment_body": "Can you strip the semicolon from this line?\r\n\r\nWe are slowly transitioning to follow standard style, and whenever we touch a line we update that line to follow it 👌 ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "117317017",
    "pr_number": 3314,
    "pr_file": "lib/utils.js",
    "created_at": "2017-05-18T18:14:28+00:00",
    "commented_code": "var qs = require('qs');\n var querystring = require('querystring');\n \n+\n+/**\n+ * Helper function (requiring partial application)\n+ * for setting exports.etag or exports.wetag.\n+ *\n+ * @param {Boolean} weak\n+ * @return {Function}\n+ * @api private\n+ */\n+\n+function setTag(weak) {\n+  return function(body, encoding) {\n+    var buf = !Buffer.isBuffer(body)\n+      ? new Buffer(body, encoding)\n+      : body;\n+\n+    return etag(buf, {weak: weak});",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "117317017",
        "repo_full_name": "expressjs/express",
        "pr_number": 3314,
        "pr_file": "lib/utils.js",
        "discussion_id": "117317017",
        "commented_code": "@@ -23,6 +23,26 @@ var proxyaddr = require('proxy-addr');\n var qs = require('qs');\n var querystring = require('querystring');\n \n+\n+/**\n+ * Helper function (requiring partial application)\n+ * for setting exports.etag or exports.wetag.\n+ *\n+ * @param {Boolean} weak\n+ * @return {Function}\n+ * @api private\n+ */\n+\n+function setTag(weak) {\n+  return function(body, encoding) {\n+    var buf = !Buffer.isBuffer(body)\n+      ? new Buffer(body, encoding)\n+      : body;\n+\n+    return etag(buf, {weak: weak});",
        "comment_created_at": "2017-05-18T18:14:28+00:00",
        "comment_author": "dougwilson",
        "comment_body": "All net new code should be written in StandardJS style per https://github.com/expressjs/express/blob/master/Collaborator-Guide.md#prs-and-code-contributions",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "115894410",
    "pr_number": 3305,
    "pr_file": "test/res.set.js",
    "created_at": "2017-05-11T02:29:15+00:00",
    "commented_code": "var express = require('..');\n var request = require('supertest');\n \n-describe('res', function(){\n-  describe('.set(field, value)', function(){\n-    it('should set the response header field', function(done){\n+describe('res', function () {\n+  describe('.set(field, value)', function () {\n+    it('should set the response header field', function (done) {\n       var app = express();\n \n-      app.use(function(req, res){\n+      app.use(function (req, res) {\n         res.set('Content-Type', 'text/x-foo; charset=utf-8').end();\n       });\n \n       request(app)\n-      .get('/')\n-      .expect('Content-Type', 'text/x-foo; charset=utf-8')\n-      .end(done);\n+        .get('/')",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "115894410",
        "repo_full_name": "expressjs/express",
        "pr_number": 3305,
        "pr_file": "test/res.set.js",
        "discussion_id": "115894410",
        "commented_code": "@@ -2,19 +2,19 @@\n var express = require('..');\n var request = require('supertest');\n \n-describe('res', function(){\n-  describe('.set(field, value)', function(){\n-    it('should set the response header field', function(done){\n+describe('res', function () {\n+  describe('.set(field, value)', function () {\n+    it('should set the response header field', function (done) {\n       var app = express();\n \n-      app.use(function(req, res){\n+      app.use(function (req, res) {\n         res.set('Content-Type', 'text/x-foo; charset=utf-8').end();\n       });\n \n       request(app)\n-      .get('/')\n-      .expect('Content-Type', 'text/x-foo; charset=utf-8')\n-      .end(done);\n+        .get('/')",
        "comment_created_at": "2017-05-11T02:29:15+00:00",
        "comment_author": "dougwilson",
        "comment_body": "Typically we do not indent these lines, keeping the `.` at the same indent as the function call. Can you revert all the re-formatting of the file that wasn't related to your changes?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2426826",
    "pr_number": 1446,
    "pr_file": "test/Router.js",
    "created_at": "2012-12-14T23:05:45+00:00",
    "commented_code": ".expect('foo', done);\n     })\n   })\n-})\n\\ No newline at end of file\n+\n+  describe('.multiple callbacks', function () {",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "2426826",
        "repo_full_name": "expressjs/express",
        "pr_number": 1446,
        "pr_file": "test/Router.js",
        "discussion_id": "2426826",
        "commented_code": "@@ -76,4 +76,28 @@ describe('Router', function(){\n       .expect('foo', done);\n     })\n   })\n-})\n\\ No newline at end of file\n+\n+  describe('.multiple callbacks', function () {",
        "comment_created_at": "2012-12-14T23:05:45+00:00",
        "comment_author": "tj",
        "comment_body": "I'll fix these but it's good to look at the code around and see what the style is `function(){` instead of `function () {` etc\n",
        "pr_file_module": null
      }
    ]
  }
]