[
  {
    "discussion_id": "1986277611",
    "pr_number": 6382,
    "pr_file": "index.d.ts",
    "created_at": "2025-03-09T09:52:46+00:00",
    "commented_code": "+/* =================== USAGE ===================\n+\n+    import express = require(\"express\");\n+    var app = express();\n+\n+ =============================================== */\n+\n+/// <reference types=\"./core\" />\n+/// <reference types=\"serve-static\" />\n+\n+import * as bodyParser from \"body-parser\";\n+import * as core from \"./core\";\n+// import * as qs from \"qs\"; // @see https://github.com/expressjs/discussions/issues/192#issuecomment-2708756867\n+import * as serveStatic from \"serve-static\";\n+\n+/**\n+ * Creates an Express application. The express() function is a top-level function exported by the express module.\n+ */\n+declare function e(): core.Express;\n+\n+declare namespace e {\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with JSON payloads and is based on body-parser.\n+   * @since 4.16.0\n+   */\n+  var json: typeof bodyParser.json;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with Buffer payloads and is based on body-parser.\n+   * @since 4.17.0\n+   */\n+  var raw: typeof bodyParser.raw;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with text payloads and is based on body-parser.\n+   * @since 4.17.0\n+   */\n+  var text: typeof bodyParser.text;\n+\n+  /**\n+   * These are the exposed prototypes.\n+   */\n+  var application: Application;\n+  var request: Request;\n+  var response: Response;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It serves static files and is based on serve-static.\n+   */\n+  var static: serveStatic.RequestHandlerConstructor<Response>;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with urlencoded payloads and is based on body-parser.\n+   * @since 4.16.0\n+   */\n+  var urlencoded: typeof bodyParser.urlencoded;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming request query parameters.\n+   * @todo this seems to be outdated, not implemented and should be removed\n+   * @link https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43217\n+   * @link https://github.com/expressjs/discussions/issues/192#issuecomment-2708756867\n+   */\n+  // export function query(options: qs.IParseOptions | typeof qs.parse): Handler;",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "1986277611",
        "repo_full_name": "expressjs/express",
        "pr_number": 6382,
        "pr_file": "index.d.ts",
        "discussion_id": "1986277611",
        "commented_code": "@@ -0,0 +1,131 @@\n+/* =================== USAGE ===================\n+\n+    import express = require(\"express\");\n+    var app = express();\n+\n+ =============================================== */\n+\n+/// <reference types=\"./core\" />\n+/// <reference types=\"serve-static\" />\n+\n+import * as bodyParser from \"body-parser\";\n+import * as core from \"./core\";\n+// import * as qs from \"qs\"; // @see https://github.com/expressjs/discussions/issues/192#issuecomment-2708756867\n+import * as serveStatic from \"serve-static\";\n+\n+/**\n+ * Creates an Express application. The express() function is a top-level function exported by the express module.\n+ */\n+declare function e(): core.Express;\n+\n+declare namespace e {\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with JSON payloads and is based on body-parser.\n+   * @since 4.16.0\n+   */\n+  var json: typeof bodyParser.json;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with Buffer payloads and is based on body-parser.\n+   * @since 4.17.0\n+   */\n+  var raw: typeof bodyParser.raw;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with text payloads and is based on body-parser.\n+   * @since 4.17.0\n+   */\n+  var text: typeof bodyParser.text;\n+\n+  /**\n+   * These are the exposed prototypes.\n+   */\n+  var application: Application;\n+  var request: Request;\n+  var response: Response;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It serves static files and is based on serve-static.\n+   */\n+  var static: serveStatic.RequestHandlerConstructor<Response>;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with urlencoded payloads and is based on body-parser.\n+   * @since 4.16.0\n+   */\n+  var urlencoded: typeof bodyParser.urlencoded;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming request query parameters.\n+   * @todo this seems to be outdated, not implemented and should be removed\n+   * @link https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43217\n+   * @link https://github.com/expressjs/discussions/issues/192#issuecomment-2708756867\n+   */\n+  // export function query(options: qs.IParseOptions | typeof qs.parse): Handler;",
        "comment_created_at": "2025-03-09T09:52:46+00:00",
        "comment_author": "RobinTail",
        "comment_body": "this one needs to be clarified, because ATTW noticed that there is no such thing anymore as `express.query` in the source code",
        "pr_file_module": null
      },
      {
        "comment_id": "1986283474",
        "repo_full_name": "expressjs/express",
        "pr_number": 6382,
        "pr_file": "index.d.ts",
        "discussion_id": "1986277611",
        "commented_code": "@@ -0,0 +1,131 @@\n+/* =================== USAGE ===================\n+\n+    import express = require(\"express\");\n+    var app = express();\n+\n+ =============================================== */\n+\n+/// <reference types=\"./core\" />\n+/// <reference types=\"serve-static\" />\n+\n+import * as bodyParser from \"body-parser\";\n+import * as core from \"./core\";\n+// import * as qs from \"qs\"; // @see https://github.com/expressjs/discussions/issues/192#issuecomment-2708756867\n+import * as serveStatic from \"serve-static\";\n+\n+/**\n+ * Creates an Express application. The express() function is a top-level function exported by the express module.\n+ */\n+declare function e(): core.Express;\n+\n+declare namespace e {\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with JSON payloads and is based on body-parser.\n+   * @since 4.16.0\n+   */\n+  var json: typeof bodyParser.json;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with Buffer payloads and is based on body-parser.\n+   * @since 4.17.0\n+   */\n+  var raw: typeof bodyParser.raw;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with text payloads and is based on body-parser.\n+   * @since 4.17.0\n+   */\n+  var text: typeof bodyParser.text;\n+\n+  /**\n+   * These are the exposed prototypes.\n+   */\n+  var application: Application;\n+  var request: Request;\n+  var response: Response;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It serves static files and is based on serve-static.\n+   */\n+  var static: serveStatic.RequestHandlerConstructor<Response>;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming requests with urlencoded payloads and is based on body-parser.\n+   * @since 4.16.0\n+   */\n+  var urlencoded: typeof bodyParser.urlencoded;\n+\n+  /**\n+   * This is a built-in middleware function in Express. It parses incoming request query parameters.\n+   * @todo this seems to be outdated, not implemented and should be removed\n+   * @link https://github.com/DefinitelyTyped/DefinitelyTyped/pull/43217\n+   * @link https://github.com/expressjs/discussions/issues/192#issuecomment-2708756867\n+   */\n+  // export function query(options: qs.IParseOptions | typeof qs.parse): Handler;",
        "comment_created_at": "2025-03-09T10:20:45+00:00",
        "comment_author": "RobinTail",
        "comment_body": "found the proof https://github.com/expressjs/express/blob/master/History.md#500-alpha1--2014-11-06",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "913453843",
    "pr_number": 4942,
    "pr_file": "examples/typescript/index.ts",
    "created_at": "2022-07-05T07:05:38+00:00",
    "commented_code": "+const express = require(\"express\");\n+\n+const app: import(\"express\").Application = module.exports = express();",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "913453843",
        "repo_full_name": "expressjs/express",
        "pr_number": 4942,
        "pr_file": "examples/typescript/index.ts",
        "discussion_id": "913453843",
        "commented_code": "@@ -0,0 +1,13 @@\n+const express = require(\"express\");\n+\n+const app: import(\"express\").Application = module.exports = express();",
        "comment_created_at": "2022-07-05T07:05:38+00:00",
        "comment_author": "bozzelliandrea",
        "comment_body": "Why are you using this statement? you can easily set app value like this `const app = express();`",
        "pr_file_module": null
      },
      {
        "comment_id": "921833859",
        "repo_full_name": "expressjs/express",
        "pr_number": 4942,
        "pr_file": "examples/typescript/index.ts",
        "discussion_id": "913453843",
        "commented_code": "@@ -0,0 +1,13 @@\n+const express = require(\"express\");\n+\n+const app: import(\"express\").Application = module.exports = express();",
        "comment_created_at": "2022-07-15T05:51:38+00:00",
        "comment_author": "Segmentational",
        "comment_body": "Speaking from memory, I believe it was due to the narrowing and the [strictness](https://www.typescriptlang.org/docs/handbook/2/basic-types.html#strictness) of using the `@types/express` `npm` package. Overall, it's to my understanding there's a few issues with [`@types/expess`](https://github.com/DefinitelyTyped/DefinitelyTyped).\r\n\r\nAgain speaking from memory, I thought I had read in the documentation that `express` is 100% `http` compliant (relating to the built-in node.js library); however, there's loss of the exposed `HTTP.Server` types. Example\r\n\r\n```ts\r\nimport express from \"express\";\r\n\r\nimport type HTTP from \"http\";\r\nimport type { Express } from \"express-serve-static-core\";\r\n\r\nconst Application: Express & HTTP.Server = express();\r\n```\r\n\r\nDoes not allow compilation.\r\n\r\n---\r\n\r\nRegardless, I certainly can simplify",
        "pr_file_module": null
      }
    ]
  }
]