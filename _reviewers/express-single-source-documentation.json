[
  {
    "discussion_id": "2173881665",
    "pr_number": 6604,
    "pr_file": "code_of_conduct.md",
    "created_at": "2025-06-29T19:08:50+00:00",
    "commented_code": null,
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "2173881665",
        "repo_full_name": "expressjs/express",
        "pr_number": 6604,
        "pr_file": "code_of_conduct.md",
        "discussion_id": "2173881665",
        "commented_code": null,
        "comment_created_at": "2025-06-29T19:08:50+00:00",
        "comment_author": "bjohansebas",
        "comment_body": "The content of this file should say something like \"The code of conduct is located in https://github.com/expressjs/.github/blob/HEAD/CODE_OF_CONDUCT.md\" rather than bringing back the full content, since we donâ€™t want to maintain two versions in different places.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1575969017",
    "pr_number": 5619,
    "pr_file": "Readme.md",
    "created_at": "2024-04-23T09:46:08+00:00",
    "commented_code": "[npm-install-size-url]: https://packagephobia.com/result?p=express\n [npm-url]: https://npmjs.org/package/express\n [npm-version-image]: https://badgen.net/npm/v/express\n+[Code of Conduct]: https://github.com/mertcanaltin/express/blob/master/Code-Of-Conduct.md",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "1575969017",
        "repo_full_name": "expressjs/express",
        "pr_number": 5619,
        "pr_file": "Readme.md",
        "discussion_id": "1575969017",
        "commented_code": "@@ -164,3 +217,4 @@ The current lead maintainer is [Douglas Christopher Wilson](https://github.com/d\n [npm-install-size-url]: https://packagephobia.com/result?p=express\n [npm-url]: https://npmjs.org/package/express\n [npm-version-image]: https://badgen.net/npm/v/express\n+[Code of Conduct]: https://github.com/mertcanaltin/express/blob/master/Code-Of-Conduct.md",
        "comment_created_at": "2024-04-23T09:46:08+00:00",
        "comment_author": "krzysdz",
        "comment_body": "Shouldn't it point to the CoC in expressjs/express? Or maybe just `Code-Of-Conduct.md`, since GitHub supports [relative links](https://github.blog/2013-01-31-relative-links-in-markup-files/)",
        "pr_file_module": null
      },
      {
        "comment_id": "1576332299",
        "repo_full_name": "expressjs/express",
        "pr_number": 5619,
        "pr_file": "Readme.md",
        "discussion_id": "1575969017",
        "commented_code": "@@ -164,3 +217,4 @@ The current lead maintainer is [Douglas Christopher Wilson](https://github.com/d\n [npm-install-size-url]: https://packagephobia.com/result?p=express\n [npm-url]: https://npmjs.org/package/express\n [npm-version-image]: https://badgen.net/npm/v/express\n+[Code of Conduct]: https://github.com/mertcanaltin/express/blob/master/Code-Of-Conduct.md",
        "comment_created_at": "2024-04-23T14:08:57+00:00",
        "comment_author": "wesleytodd",
        "comment_body": "Also we are going to move these to the admin or `.github` repo I think. Not sure if we need to do that before but we will need to remember to do it after we move them.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "363590695",
    "pr_number": 4144,
    "pr_file": "CHARTER.md",
    "created_at": "2020-01-07T04:51:43+00:00",
    "commented_code": "+# Express Charter\n+\n+## Section 0: Guiding Principles\n+\n+The Express project is part of the OpenJS Foundation which operates transparently, openly, collaboratively, and ethically.\n+Project proposals, timelines, and status must not merely be open, but also easily visible to outsiders.\n+\n+## Section 1: Scope\n+\n+Express is a web server framework with a simple and expressive API which is highly aligned with Node.js core.\n+We aim to be be the best in class for writing performant, spec compliant and powerful web servers in Node.js.\n+As one of the oldest and most popular web frameworks in the ecosystem, we have an important place for new\n+users and experts alike.\n+\n+### 1.1: In-scope\n+\n+Express is made of many modules spread between three GitHub Orgs:\n+\n+- [expressjs](http://github.com/expressjs/): Top level middleware and libraries\n+- [pillarjs](http://github.com/pillarjs/): Components which make up Express but can also be used for other web frameworks\n+- [jshttp](http://github.com/jshttp/): Low level http libraries\n+\n+### 1.2: Out-of-Scope\n+\n+Section Intentionally Left Blank\n+\n+## Section 2: Relationship with OpenJS Foundation CPC.\n+\n+Technical leadership for the projects within the OpenJS Foundation is delegated to the projects through their project\n+charters by the OpenJS Cross Project Council (CPC). In the case of the Express project, it is delegated to the Express\n+Technical Committee (\"TC\").\n+\n+This Technical Committee is in charge of both the day-to-day operations of the project, as well as its techincal management.\n+This charter can be amended by the TC requiring atleast two approvals and minium two week comment period for other TC members\n+or CPC members to object. Any changes the CPC wishes to propose will be considered a priority but follow the same process.\n+\n+### 2.1 Other Formal Project Relationships\n+\n+Section Intentionally Left Blank\n+\n+## Section 3: Express Governing Body\n+\n+The Express project is managed by the Technical Committee (\"TC\"). Members can be added to the TC at any time. Any committer can\n+nominate another committer to the TC and the TC uses its standard consensus seeking process to evaluate whether or not to add\n+this new member. Members who do not participate consistently at the level of a majority of the other members are expected to resign.\n+\n+## Section 4: Roles & Responsibilities\n+\n+The Express TC manages all aspects both the technical and community parts of the project. Members of the TC should attend the regular meetings\n+when possiable, and be available for discussion of time sensitive or important issues.\n+\n+### Section 4.1 Project Operations & Management\n+\n+Section Intentionally Left Blank\n+\n+### Section 4.2: Decision-making, Voting, and/or Elections\n+\n+The Express TC uses a \"consensus seeking\" process for issues that are escalated to the TC. The group tries to find a resolution",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "363590695",
        "repo_full_name": "expressjs/express",
        "pr_number": 4144,
        "pr_file": "CHARTER.md",
        "discussion_id": "363590695",
        "commented_code": "@@ -0,0 +1,73 @@\n+# Express Charter\n+\n+## Section 0: Guiding Principles\n+\n+The Express project is part of the OpenJS Foundation which operates transparently, openly, collaboratively, and ethically.\n+Project proposals, timelines, and status must not merely be open, but also easily visible to outsiders.\n+\n+## Section 1: Scope\n+\n+Express is a web server framework with a simple and expressive API which is highly aligned with Node.js core.\n+We aim to be be the best in class for writing performant, spec compliant and powerful web servers in Node.js.\n+As one of the oldest and most popular web frameworks in the ecosystem, we have an important place for new\n+users and experts alike.\n+\n+### 1.1: In-scope\n+\n+Express is made of many modules spread between three GitHub Orgs:\n+\n+- [expressjs](http://github.com/expressjs/): Top level middleware and libraries\n+- [pillarjs](http://github.com/pillarjs/): Components which make up Express but can also be used for other web frameworks\n+- [jshttp](http://github.com/jshttp/): Low level http libraries\n+\n+### 1.2: Out-of-Scope\n+\n+Section Intentionally Left Blank\n+\n+## Section 2: Relationship with OpenJS Foundation CPC.\n+\n+Technical leadership for the projects within the OpenJS Foundation is delegated to the projects through their project\n+charters by the OpenJS Cross Project Council (CPC). In the case of the Express project, it is delegated to the Express\n+Technical Committee (\"TC\").\n+\n+This Technical Committee is in charge of both the day-to-day operations of the project, as well as its techincal management.\n+This charter can be amended by the TC requiring atleast two approvals and minium two week comment period for other TC members\n+or CPC members to object. Any changes the CPC wishes to propose will be considered a priority but follow the same process.\n+\n+### 2.1 Other Formal Project Relationships\n+\n+Section Intentionally Left Blank\n+\n+## Section 3: Express Governing Body\n+\n+The Express project is managed by the Technical Committee (\"TC\"). Members can be added to the TC at any time. Any committer can\n+nominate another committer to the TC and the TC uses its standard consensus seeking process to evaluate whether or not to add\n+this new member. Members who do not participate consistently at the level of a majority of the other members are expected to resign.\n+\n+## Section 4: Roles & Responsibilities\n+\n+The Express TC manages all aspects both the technical and community parts of the project. Members of the TC should attend the regular meetings\n+when possiable, and be available for discussion of time sensitive or important issues.\n+\n+### Section 4.1 Project Operations & Management\n+\n+Section Intentionally Left Blank\n+\n+### Section 4.2: Decision-making, Voting, and/or Elections\n+\n+The Express TC uses a \"consensus seeking\" process for issues that are escalated to the TC. The group tries to find a resolution",
        "comment_created_at": "2020-01-07T04:51:43+00:00",
        "comment_author": "dougwilson",
        "comment_body": "Should this section link to https://github.com/expressjs/express/blob/master/Contributing.md#tc-process , just replace that part of that other document, or something else? It seems like a duplication and could easily get lost where we make a change to one but forget the other, so the less duplication probably the better.",
        "pr_file_module": null
      },
      {
        "comment_id": "365556753",
        "repo_full_name": "expressjs/express",
        "pr_number": 4144,
        "pr_file": "CHARTER.md",
        "discussion_id": "363590695",
        "commented_code": "@@ -0,0 +1,73 @@\n+# Express Charter\n+\n+## Section 0: Guiding Principles\n+\n+The Express project is part of the OpenJS Foundation which operates transparently, openly, collaboratively, and ethically.\n+Project proposals, timelines, and status must not merely be open, but also easily visible to outsiders.\n+\n+## Section 1: Scope\n+\n+Express is a web server framework with a simple and expressive API which is highly aligned with Node.js core.\n+We aim to be be the best in class for writing performant, spec compliant and powerful web servers in Node.js.\n+As one of the oldest and most popular web frameworks in the ecosystem, we have an important place for new\n+users and experts alike.\n+\n+### 1.1: In-scope\n+\n+Express is made of many modules spread between three GitHub Orgs:\n+\n+- [expressjs](http://github.com/expressjs/): Top level middleware and libraries\n+- [pillarjs](http://github.com/pillarjs/): Components which make up Express but can also be used for other web frameworks\n+- [jshttp](http://github.com/jshttp/): Low level http libraries\n+\n+### 1.2: Out-of-Scope\n+\n+Section Intentionally Left Blank\n+\n+## Section 2: Relationship with OpenJS Foundation CPC.\n+\n+Technical leadership for the projects within the OpenJS Foundation is delegated to the projects through their project\n+charters by the OpenJS Cross Project Council (CPC). In the case of the Express project, it is delegated to the Express\n+Technical Committee (\"TC\").\n+\n+This Technical Committee is in charge of both the day-to-day operations of the project, as well as its techincal management.\n+This charter can be amended by the TC requiring atleast two approvals and minium two week comment period for other TC members\n+or CPC members to object. Any changes the CPC wishes to propose will be considered a priority but follow the same process.\n+\n+### 2.1 Other Formal Project Relationships\n+\n+Section Intentionally Left Blank\n+\n+## Section 3: Express Governing Body\n+\n+The Express project is managed by the Technical Committee (\"TC\"). Members can be added to the TC at any time. Any committer can\n+nominate another committer to the TC and the TC uses its standard consensus seeking process to evaluate whether or not to add\n+this new member. Members who do not participate consistently at the level of a majority of the other members are expected to resign.\n+\n+## Section 4: Roles & Responsibilities\n+\n+The Express TC manages all aspects both the technical and community parts of the project. Members of the TC should attend the regular meetings\n+when possiable, and be available for discussion of time sensitive or important issues.\n+\n+### Section 4.1 Project Operations & Management\n+\n+Section Intentionally Left Blank\n+\n+### Section 4.2: Decision-making, Voting, and/or Elections\n+\n+The Express TC uses a \"consensus seeking\" process for issues that are escalated to the TC. The group tries to find a resolution",
        "comment_created_at": "2020-01-12T04:17:50+00:00",
        "comment_author": "wesleytodd",
        "comment_body": "I think this is supposed to take the place of that, but I didnt want to make one PR which had cross cutting changes.  If you think I should then I can remove it from that doc.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "53367178",
    "pr_number": 2892,
    "pr_file": "doc/app-METHOD.md",
    "created_at": "2016-02-18T19:19:57+00:00",
    "commented_code": "+<!---\n+ Copyright (c) 2016 StrongLoop, IBM, and Express Contributors\n+ License: MIT\n+-->\n+\n+<h3 id='app.METHOD'>app.METHOD(path, callback [, callback ...])</h3>\n+\n+Routes an HTTP request, where METHOD is the HTTP method of the request, such as GET,\n+PUT, POST, and so on, in lowercase. Thus, the actual methods are `app.get()`,\n+`app.post()`, `app.put()`, and so on.  See below for the complete list.\n+\n+For more information, see the [routing guide](/guide/routing.html).",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "53367178",
        "repo_full_name": "expressjs/express",
        "pr_number": 2892,
        "pr_file": "doc/app-METHOD.md",
        "discussion_id": "53367178",
        "commented_code": "@@ -0,0 +1,80 @@\n+<!---\n+ Copyright (c) 2016 StrongLoop, IBM, and Express Contributors\n+ License: MIT\n+-->\n+\n+<h3 id='app.METHOD'>app.METHOD(path, callback [, callback ...])</h3>\n+\n+Routes an HTTP request, where METHOD is the HTTP method of the request, such as GET,\n+PUT, POST, and so on, in lowercase. Thus, the actual methods are `app.get()`,\n+`app.post()`, `app.put()`, and so on.  See below for the complete list.\n+\n+For more information, see the [routing guide](/guide/routing.html).",
        "comment_created_at": "2016-02-18T19:19:57+00:00",
        "comment_author": "crandmck",
        "comment_body": "The only way I can think of would be to convert all the links here to links that would work in the repo and then write a post-processing script for the expressjs.com repo that would convert these back to links that would work on the website.  I might be able to figure this out, but it's somewhat beyond my expertise, though I don't expect it would actually be that hard for a real programmer.\n\nBut IMO this \"scope creep\" for this PR, since the point of this is to just move the API docs into this repo, not make them work perfectly in GitHub.  @dougwilson I understand and essentially agree with your suggestion, but could we please do it in a separate PR once this is landed?  \n\nThis is getting a bit \"meta\" but up until now, the .md doc source files have been specifically an _authoring_ format, NOT a _publishing_ format, which is essentially the suggestion here.  This is a significant change, and (as I said) I'm not opposed, but it has a lot of implications.\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "53373633",
    "pr_number": 2892,
    "pr_file": "doc/app-METHOD.md",
    "created_at": "2016-02-18T20:00:06+00:00",
    "commented_code": "+<!---\n+ Copyright (c) 2016 StrongLoop, IBM, and Express Contributors\n+ License: MIT\n+-->\n+\n+<h3 id='app.METHOD'>app.METHOD(path, callback [, callback ...])</h3>\n+\n+Routes an HTTP request, where METHOD is the HTTP method of the request, such as GET,\n+PUT, POST, and so on, in lowercase. Thus, the actual methods are `app.get()`,\n+`app.post()`, `app.put()`, and so on.  See below for the complete list.\n+\n+For more information, see the [routing guide](/guide/routing.html).",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "53373633",
        "repo_full_name": "expressjs/express",
        "pr_number": 2892,
        "pr_file": "doc/app-METHOD.md",
        "discussion_id": "53373633",
        "commented_code": "@@ -0,0 +1,80 @@\n+<!---\n+ Copyright (c) 2016 StrongLoop, IBM, and Express Contributors\n+ License: MIT\n+-->\n+\n+<h3 id='app.METHOD'>app.METHOD(path, callback [, callback ...])</h3>\n+\n+Routes an HTTP request, where METHOD is the HTTP method of the request, such as GET,\n+PUT, POST, and so on, in lowercase. Thus, the actual methods are `app.get()`,\n+`app.post()`, `app.put()`, and so on.  See below for the complete list.\n+\n+For more information, see the [routing guide](/guide/routing.html).",
        "comment_created_at": "2016-02-18T20:00:06+00:00",
        "comment_author": "crandmck",
        "comment_body": "> If that is the stance, I don' even see what the point of putting the documentation in this repository is. Just keep them in the website repository, which is the whole point of why they were never in here in the first place. \n\nWell, that is just my viewpoint as a tech. writer.  @jasnell and others may have a different opinion....as do you I presume.   In my view, having the API docs in markdown in this repo  doesn't make much sense because they are all published on the website.  I'm just doing what I was asked to do, and no one articulated the goal in general (to me anyway).\n\n> To move them in here, means we need to make it work correctly, otherwise there is no purpose, because nothing keeps people from making pull requests to the website repository.\n\nYes, I guess the rub is what does \"work correctly\" mean?  To me, it means the doc displays properly in the website, but I think you're proposing that it means that _plus_ displaying properly (at least legibly) in this repo when viewed in GH.  Not unreasonable, but a fair amount of additional work.  And obviously, that goal was not entirely clear to me.\n\n> Ideally, since we need to maintain jsdoc comments for tools like WebStorm, all this is now duplicating all that content anyway. Why don't we just generate the documentation from the jsdoc comments and forget duplicating everything three times?\n\nI've wondered that myself, since I became involved in the project.  IMHO that would be the best solution, but no one has actually proposed it until now.  Having the API doc generated from comments directly in the code is ideal, because it helps to ensure that whenever someone updates the code, the doc is right there in their face.... But there are other \"pros and cons\" to that approach: for example it's not clear we could make the API docs look as nice as they do now (at least without a lot of work).  \n\nPerhaps we should consider pursuing that approach instead of this?  \n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "396871972",
    "pr_number": 4210,
    "pr_file": "Contributing.md",
    "created_at": "2020-03-24T02:41:48+00:00",
    "commented_code": "not to add this new member. Members who do not participate consistently at the level of\n a majority of the other members are expected to resign.\n \n-\n+# Project Captains\n+\n+The Express TC can designate captains for individual projects/repos in the\n+organizations. These captains are responsible for being the primary\n+day-to-day maintainers of the repo on a technical and community front.\n+Repo captains are empowered with repo ownership and module publication rights.\n+When there are conflicts, especially on topics that effect the Express project\n+at large, captains are responsible to bring it up with the TC and drive\n+those conflicts to resolution. Captains are also responsible in making sure\n+community members follow the community guidelines, maintaining the repo\n+and the registry, as well as in providing user support.\n+\n+To become a captain for a project you will be expected to participate in that",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "396871972",
        "repo_full_name": "expressjs/express",
        "pr_number": 4210,
        "pr_file": "Contributing.md",
        "discussion_id": "396871972",
        "commented_code": "@@ -82,4 +83,32 @@ to the TC and the TC uses its standard consensus seeking process to evaluate whe\n not to add this new member. Members who do not participate consistently at the level of\n a majority of the other members are expected to resign.\n \n-\n+# Project Captains\n+\n+The Express TC can designate captains for individual projects/repos in the\n+organizations. These captains are responsible for being the primary\n+day-to-day maintainers of the repo on a technical and community front.\n+Repo captains are empowered with repo ownership and module publication rights.\n+When there are conflicts, especially on topics that effect the Express project\n+at large, captains are responsible to bring it up with the TC and drive\n+those conflicts to resolution. Captains are also responsible in making sure\n+community members follow the community guidelines, maintaining the repo\n+and the registry, as well as in providing user support.\n+\n+To become a captain for a project you will be expected to participate in that",
        "comment_created_at": "2020-03-24T02:41:48+00:00",
        "comment_author": "dougwilson",
        "comment_body": "All of these \"you\"s need to be re-worded in to the third person from the second person, as the document is meant to be in the third person form.",
        "pr_file_module": null
      },
      {
        "comment_id": "396879828",
        "repo_full_name": "expressjs/express",
        "pr_number": 4210,
        "pr_file": "Contributing.md",
        "discussion_id": "396871972",
        "commented_code": "@@ -82,4 +83,32 @@ to the TC and the TC uses its standard consensus seeking process to evaluate whe\n not to add this new member. Members who do not participate consistently at the level of\n a majority of the other members are expected to resign.\n \n-\n+# Project Captains\n+\n+The Express TC can designate captains for individual projects/repos in the\n+organizations. These captains are responsible for being the primary\n+day-to-day maintainers of the repo on a technical and community front.\n+Repo captains are empowered with repo ownership and module publication rights.\n+When there are conflicts, especially on topics that effect the Express project\n+at large, captains are responsible to bring it up with the TC and drive\n+those conflicts to resolution. Captains are also responsible in making sure\n+community members follow the community guidelines, maintaining the repo\n+and the registry, as well as in providing user support.\n+\n+To become a captain for a project you will be expected to participate in that",
        "comment_created_at": "2020-03-24T03:13:35+00:00",
        "comment_author": "gireeshpunathil",
        "comment_body": "done, disambiguated beyond any doubt: `Like TC members, Repo captains are a subset of committers.`\r\n\r\nAll the `you`s are replaced with third person",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "353296552",
    "pr_number": 4055,
    "pr_file": "Contributing.md",
    "created_at": "2019-12-03T16:47:21+00:00",
    "commented_code": "small minority of issues be brought to the TC for resolution and that discussion and\n compromise among committers be the default resolution mechanism.\n \n+# Triaging\n+\n+Open issues in this repo are subject to the following triage criteria:\n+\n+`needs triage`: Issues that are opened and un-attended / unclassified belong to this \n+category, and are either automatically or manually labelled with `needs triage`\n+\n+`question`: Issues that are not leading upto a bug or an enhancement to any of the \n+express repos, but emanating from the usage of it are classified as `question`\n+\n+`bug`: Issues that, after investigation, provides a reasonable conviction about\n+a potential bug in the express code, are classified as `bug`\n+\n+`enhancement`: Issues that, after discussion, investigation, and technical assessment,\n+found to be a reasonable candidate for a good to have feature, are tagged as `enhancement`.\n+\n+Raisers may appeal to change the tag with sufficient reasoning.\n+Maintainers can change the tag based on the change in inference in the course of investigation.\n+\n+In all cases, issues may be closed by maintainers if they don't receive timely response when\n+further information is sought, or when additional questions are asked.\n+\n+## Approaches and Best Practices for getting into triage contributions\n+\n+ - review the organization's [Dashboard][]",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "353296552",
        "repo_full_name": "expressjs/express",
        "pr_number": 4055,
        "pr_file": "Contributing.md",
        "discussion_id": "353296552",
        "commented_code": "@@ -56,6 +56,70 @@ discuss pending contributions in order to find a resolution. It is expected that\n small minority of issues be brought to the TC for resolution and that discussion and\n compromise among committers be the default resolution mechanism.\n \n+# Triaging\n+\n+Open issues in this repo are subject to the following triage criteria:\n+\n+`needs triage`: Issues that are opened and un-attended / unclassified belong to this \n+category, and are either automatically or manually labelled with `needs triage`\n+\n+`question`: Issues that are not leading upto a bug or an enhancement to any of the \n+express repos, but emanating from the usage of it are classified as `question`\n+\n+`bug`: Issues that, after investigation, provides a reasonable conviction about\n+a potential bug in the express code, are classified as `bug`\n+\n+`enhancement`: Issues that, after discussion, investigation, and technical assessment,\n+found to be a reasonable candidate for a good to have feature, are tagged as `enhancement`.\n+\n+Raisers may appeal to change the tag with sufficient reasoning.\n+Maintainers can change the tag based on the change in inference in the course of investigation.\n+\n+In all cases, issues may be closed by maintainers if they don't receive timely response when\n+further information is sought, or when additional questions are asked.\n+\n+## Approaches and Best Practices for getting into triage contributions\n+\n+ - review the organization's [Dashboard][]",
        "comment_created_at": "2019-12-03T16:47:21+00:00",
        "comment_author": "wesleytodd",
        "comment_body": "```suggestion\r\n - review the organization's [StatusBoard](https://expressjs.github.io/statusboard/)\r\n```\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "353301019",
        "repo_full_name": "expressjs/express",
        "pr_number": 4055,
        "pr_file": "Contributing.md",
        "discussion_id": "353296552",
        "commented_code": "@@ -56,6 +56,70 @@ discuss pending contributions in order to find a resolution. It is expected that\n small minority of issues be brought to the TC for resolution and that discussion and\n compromise among committers be the default resolution mechanism.\n \n+# Triaging\n+\n+Open issues in this repo are subject to the following triage criteria:\n+\n+`needs triage`: Issues that are opened and un-attended / unclassified belong to this \n+category, and are either automatically or manually labelled with `needs triage`\n+\n+`question`: Issues that are not leading upto a bug or an enhancement to any of the \n+express repos, but emanating from the usage of it are classified as `question`\n+\n+`bug`: Issues that, after investigation, provides a reasonable conviction about\n+a potential bug in the express code, are classified as `bug`\n+\n+`enhancement`: Issues that, after discussion, investigation, and technical assessment,\n+found to be a reasonable candidate for a good to have feature, are tagged as `enhancement`.\n+\n+Raisers may appeal to change the tag with sufficient reasoning.\n+Maintainers can change the tag based on the change in inference in the course of investigation.\n+\n+In all cases, issues may be closed by maintainers if they don't receive timely response when\n+further information is sought, or when additional questions are asked.\n+\n+## Approaches and Best Practices for getting into triage contributions\n+\n+ - review the organization's [Dashboard][]",
        "comment_created_at": "2019-12-03T16:54:51+00:00",
        "comment_author": "wesleytodd",
        "comment_body": "I think this section would read better as a paragraph than a series of bullet points:\r\n\r\n\r\n> Review the organization's [StatusBoard](https://expressjs.github.io/statusboard/), pay special attention to these columns: stars, watchers, open issues and contributors. This gives you a general idea about the criticality and health of the repository. Pick a few projects based on that criteria and your interests and skills (existing or aspiring).\r\n> \r\n> Review the project's contribution guideline if present. In a nutshell, pledge yourself to the community's standards and values. Review the documentation, for most of the projects it is just the `README.md`, and make sure you understand the key APIs, semantics, configurations, and use cases.\r\n> \r\n> It might be helpful to write your own test programs to re-affirm your understanding of the key functions. This may identify some gaps in documentation, record those as they might be good PR's to open later. Skim through the issue backlog; identify low hanging ones and mostly new ones. From those, attempt to recreate issues based on the OP description and sk questions if required. No question is a bad question!\r\n\r\nThe rest of the points I think do fit as a bullet list, but maybe put a header above them like \"Other Helpful Hints\"?",
        "pr_file_module": null
      },
      {
        "comment_id": "353567628",
        "repo_full_name": "expressjs/express",
        "pr_number": 4055,
        "pr_file": "Contributing.md",
        "discussion_id": "353296552",
        "commented_code": "@@ -56,6 +56,70 @@ discuss pending contributions in order to find a resolution. It is expected that\n small minority of issues be brought to the TC for resolution and that discussion and\n compromise among committers be the default resolution mechanism.\n \n+# Triaging\n+\n+Open issues in this repo are subject to the following triage criteria:\n+\n+`needs triage`: Issues that are opened and un-attended / unclassified belong to this \n+category, and are either automatically or manually labelled with `needs triage`\n+\n+`question`: Issues that are not leading upto a bug or an enhancement to any of the \n+express repos, but emanating from the usage of it are classified as `question`\n+\n+`bug`: Issues that, after investigation, provides a reasonable conviction about\n+a potential bug in the express code, are classified as `bug`\n+\n+`enhancement`: Issues that, after discussion, investigation, and technical assessment,\n+found to be a reasonable candidate for a good to have feature, are tagged as `enhancement`.\n+\n+Raisers may appeal to change the tag with sufficient reasoning.\n+Maintainers can change the tag based on the change in inference in the course of investigation.\n+\n+In all cases, issues may be closed by maintainers if they don't receive timely response when\n+further information is sought, or when additional questions are asked.\n+\n+## Approaches and Best Practices for getting into triage contributions\n+\n+ - review the organization's [Dashboard][]",
        "comment_created_at": "2019-12-04T06:27:53+00:00",
        "comment_author": "gireeshpunathil",
        "comment_body": "@wesleytodd - thanks for the suggestion; I followed this model",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "362876556",
    "pr_number": 4145,
    "pr_file": "Readme.md",
    "created_at": "2020-01-03T16:40:24+00:00",
    "commented_code": "Before installing, [download and install Node.js](https://nodejs.org/en/download/).\n Node.js 0.10 or higher is required.\n \n+If this is a brand new project, make sure to\n+[create a package.json](https://docs.npmjs.com/creating-a-package-json-file)\n+before installing express\n+(suggestion: `$ npm init`)",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "362876556",
        "repo_full_name": "expressjs/express",
        "pr_number": 4145,
        "pr_file": "Readme.md",
        "discussion_id": "362876556",
        "commented_code": "@@ -27,6 +27,11 @@ This is a [Node.js](https://nodejs.org/en/) module available through the\n Before installing, [download and install Node.js](https://nodejs.org/en/download/).\n Node.js 0.10 or higher is required.\n \n+If this is a brand new project, make sure to\n+[create a package.json](https://docs.npmjs.com/creating-a-package-json-file)\n+before installing express\n+(suggestion: `$ npm init`)",
        "comment_created_at": "2020-01-03T16:40:24+00:00",
        "comment_author": "fed135",
        "comment_body": "Would it be preferable to format the statement and command suggestion like the npm install below ?\r\n- No $ sign\r\n- Link to the npm docs for that command ?",
        "pr_file_module": null
      },
      {
        "comment_id": "362999623",
        "repo_full_name": "expressjs/express",
        "pr_number": 4145,
        "pr_file": "Readme.md",
        "discussion_id": "362876556",
        "commented_code": "@@ -27,6 +27,11 @@ This is a [Node.js](https://nodejs.org/en/) module available through the\n Before installing, [download and install Node.js](https://nodejs.org/en/download/).\n Node.js 0.10 or higher is required.\n \n+If this is a brand new project, make sure to\n+[create a package.json](https://docs.npmjs.com/creating-a-package-json-file)\n+before installing express\n+(suggestion: `$ npm init`)",
        "comment_created_at": "2020-01-04T00:12:59+00:00",
        "comment_author": "glennfaison",
        "comment_body": "Thank you. I just sent another PR.",
        "pr_file_module": null
      }
    ]
  }
]