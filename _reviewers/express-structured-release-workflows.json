[
  {
    "discussion_id": "53379192",
    "pr_number": 2890,
    "pr_file": "releases.md",
    "created_at": "2016-02-18T20:42:37+00:00",
    "commented_code": "+# Express Release Process\n+\n+This document contains the technical aspects of the Express release process. The\n+intended audience is those who have been authorized by the Express Technical\n+Committee (TC) to create, promote and sign official release builds for Express,\n+as npm packages hosted on https://npmjs.com/package/express.\n+\n+## Who can make releases?\n+\n+Release authorization is given by the Express TC. Once authorized, an individual\n+must have the following:\n+\n+### 1. Github release access\n+\n+Releases can be tagged by members of the @expressjs/express team with Write or\n+Admin permission level.\n+[tunniclm: Is there  a separate way to indicate whether an individual is allowed\n+           to tag a release, or some higher level of permission?]\n+\n+### 2. npmjs.com release accesss\n+\n+Releases can be published to npmjs.com by members of the npmjs.com express\n+organisation.\n+\n+## How to create a release\n+\n+### 1. Check all the code and doc changes are in\n+\n+Check the milestone and labels for the release in github, depending on the",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "53379192",
        "repo_full_name": "expressjs/express",
        "pr_number": 2890,
        "pr_file": "releases.md",
        "discussion_id": "53379192",
        "commented_code": "@@ -0,0 +1,106 @@\n+# Express Release Process\n+\n+This document contains the technical aspects of the Express release process. The\n+intended audience is those who have been authorized by the Express Technical\n+Committee (TC) to create, promote and sign official release builds for Express,\n+as npm packages hosted on https://npmjs.com/package/express.\n+\n+## Who can make releases?\n+\n+Release authorization is given by the Express TC. Once authorized, an individual\n+must have the following:\n+\n+### 1. Github release access\n+\n+Releases can be tagged by members of the @expressjs/express team with Write or\n+Admin permission level.\n+[tunniclm: Is there  a separate way to indicate whether an individual is allowed\n+           to tag a release, or some higher level of permission?]\n+\n+### 2. npmjs.com release accesss\n+\n+Releases can be published to npmjs.com by members of the npmjs.com express\n+organisation.\n+\n+## How to create a release\n+\n+### 1. Check all the code and doc changes are in\n+\n+Check the milestone and labels for the release in github, depending on the",
        "comment_created_at": "2016-02-18T20:42:37+00:00",
        "comment_author": "dougwilson",
        "comment_body": "I'm not sure if this was the way it has ever been done. Typically there are two main release flows: patch and non-patch.\n\nThe patch flow is pretty simple: it's just extremely simple updates, like typo fixes, patch dependency updates, and maybe a fix, depending on how risky it is. Every other change is always a non-patch flow.\n\nThe non-patch flow is done using a separate branch (for example `4.13`, `5.0`, etc.) and tracked using a release pull request (for example, https://github.com/expressjs/express/pull/2682, https://github.com/expressjs/express/pull/2237, etc.).\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "53729592",
    "pr_number": 2890,
    "pr_file": "releases.md",
    "created_at": "2016-02-23T02:39:30+00:00",
    "commented_code": "+# Express Release Process\n+\n+This document contains the technical aspects of the Express release process. The\n+intended audience is those who have been authorized by the Express Technical\n+Committee (TC) to create, promote and sign official release builds for Express,\n+as npm packages hosted on https://npmjs.com/package/express.\n+\n+## Who can make releases?\n+\n+Release authorization is given by the Express TC. Once authorized, an individual\n+must have the following access permissions:\n+\n+### 1. Github release access\n+\n+The individual making the release will need to be a member of the\n+expressjs/express team with Write or Admin permission level so they are\n+able to tag the release commit and push changes to the expressjs/express\n+repository (see Steps 4 and 5).\n+\n+[tunniclm: Is there  a separate way to indicate whether an individual is allowed\n+           to tag a release, or some higher level of permission?]\n+\n+### 2. npmjs.com release access\n+\n+The individual making the release will need to be a member of the expressjs\n+organisation on npmjs.com so they are able to publish the release package\n+(see Step 6).",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "53729592",
        "repo_full_name": "expressjs/express",
        "pr_number": 2890,
        "pr_file": "releases.md",
        "discussion_id": "53729592",
        "commented_code": "@@ -0,0 +1,195 @@\n+# Express Release Process\n+\n+This document contains the technical aspects of the Express release process. The\n+intended audience is those who have been authorized by the Express Technical\n+Committee (TC) to create, promote and sign official release builds for Express,\n+as npm packages hosted on https://npmjs.com/package/express.\n+\n+## Who can make releases?\n+\n+Release authorization is given by the Express TC. Once authorized, an individual\n+must have the following access permissions:\n+\n+### 1. Github release access\n+\n+The individual making the release will need to be a member of the\n+expressjs/express team with Write or Admin permission level so they are\n+able to tag the release commit and push changes to the expressjs/express\n+repository (see Steps 4 and 5).\n+\n+[tunniclm: Is there  a separate way to indicate whether an individual is allowed\n+           to tag a release, or some higher level of permission?]\n+\n+### 2. npmjs.com release access\n+\n+The individual making the release will need to be a member of the expressjs\n+organisation on npmjs.com so they are able to publish the release package\n+(see Step 6).",
        "comment_created_at": "2016-02-23T02:39:30+00:00",
        "comment_author": "jasnell",
        "comment_body": "Yeah not sure an npm org would work but a shared ID for publishing releases for express related stuff would be good. The shared secrets can be managed in a private repo the way we do shared secrets for core stuff. (There may\nalready be some tool for this somewhere)\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "53767728",
    "pr_number": 2890,
    "pr_file": "releases.md",
    "created_at": "2016-02-23T11:28:13+00:00",
    "commented_code": "+# Express Release Process\n+\n+This document contains the technical aspects of the Express release process. The\n+intended audience is those who have been authorized by the Express Technical\n+Committee (TC) to create, promote and sign official release builds for Express,\n+as npm packages hosted on https://npmjs.com/package/express.\n+\n+## Who can make releases?\n+\n+Release authorization is given by the Express TC. Once authorized, an individual\n+must have the following access permissions:\n+\n+### 1. Github release access\n+\n+The individual making the release will need to be a member of the\n+expressjs/express team with Write or Admin permission level so they are\n+able to tag the release commit and push changes to the expressjs/express\n+repository (see Steps 4 and 5).\n+\n+[tunniclm: Is there  a separate way to indicate whether an individual is allowed\n+           to tag a release, or some higher level of permission?]\n+\n+### 2. npmjs.com release access\n+\n+The individual making the release will need to be a member of the expressjs\n+organisation on npmjs.com so they are able to publish the release package\n+(see Step 6).",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "53767728",
        "repo_full_name": "expressjs/express",
        "pr_number": 2890,
        "pr_file": "releases.md",
        "discussion_id": "53767728",
        "commented_code": "@@ -0,0 +1,195 @@\n+# Express Release Process\n+\n+This document contains the technical aspects of the Express release process. The\n+intended audience is those who have been authorized by the Express Technical\n+Committee (TC) to create, promote and sign official release builds for Express,\n+as npm packages hosted on https://npmjs.com/package/express.\n+\n+## Who can make releases?\n+\n+Release authorization is given by the Express TC. Once authorized, an individual\n+must have the following access permissions:\n+\n+### 1. Github release access\n+\n+The individual making the release will need to be a member of the\n+expressjs/express team with Write or Admin permission level so they are\n+able to tag the release commit and push changes to the expressjs/express\n+repository (see Steps 4 and 5).\n+\n+[tunniclm: Is there  a separate way to indicate whether an individual is allowed\n+           to tag a release, or some higher level of permission?]\n+\n+### 2. npmjs.com release access\n+\n+The individual making the release will need to be a member of the expressjs\n+organisation on npmjs.com so they are able to publish the release package\n+(see Step 6).",
        "comment_created_at": "2016-02-23T11:28:13+00:00",
        "comment_author": "tunniclm",
        "comment_body": "For some reason I thought express was using an org, but I see it is not actually. For now I will modify this to read \"will need to be a collaborator on the express package on npmjs.org\". Maybe an org would be possible for the future since there are lots of packages besides express itself to manage.\n",
        "pr_file_module": null
      }
    ]
  }
]