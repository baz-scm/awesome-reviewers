[
  {
    "discussion_id": "698069907",
    "pr_number": 4692,
    "pr_file": "examples/auth/index.js",
    "created_at": "2021-08-29T21:00:13+00:00",
    "commented_code": "// when you create a user, generate a salt\n // and hash the password ('foobar' is the pass here)\n \n-hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n-  if (err) throw err;\n-  // store the salt & hash in the \"db\"\n-  users.tj.salt = salt;\n-  users.tj.hash = hash;\n-});\n+  //  ------------------ Old Way  ----------------- \n+// hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n+//   if (err) throw err;\n+//   // store the salt & hash in the \"db\"\n+//   users.tj.salt = salt;\n+//   users.tj.hash = hash;\n+// });\n+\n+//  ------------------ A better Way to Hash Password without passing any salt using Bcrypt.Js----------------- \n+var encryPassword = bcrypt.hashSync({ password: 'foobar' },10) //password Encrypter , here '10' is the salt used for encryption",
    "repo_full_name": "expressjs/express",
    "discussion_comments": [
      {
        "comment_id": "698069907",
        "repo_full_name": "expressjs/express",
        "pr_number": 4692,
        "pr_file": "examples/auth/index.js",
        "discussion_id": "698069907",
        "commented_code": "@@ -45,12 +47,17 @@ var users = {\n // when you create a user, generate a salt\n // and hash the password ('foobar' is the pass here)\n \n-hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n-  if (err) throw err;\n-  // store the salt & hash in the \"db\"\n-  users.tj.salt = salt;\n-  users.tj.hash = hash;\n-});\n+  //  ------------------ Old Way  ----------------- \n+// hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n+//   if (err) throw err;\n+//   // store the salt & hash in the \"db\"\n+//   users.tj.salt = salt;\n+//   users.tj.hash = hash;\n+// });\n+\n+//  ------------------ A better Way to Hash Password without passing any salt using Bcrypt.Js----------------- \n+var encryPassword = bcrypt.hashSync({ password: 'foobar' },10) //password Encrypter , here '10' is the salt used for encryption",
        "comment_created_at": "2021-08-29T21:00:13+00:00",
        "comment_author": "dougwilson",
        "comment_body": "> here '10' is the salt used for encryption\r\n\r\nI thought your PR said you don't need a salt? Can you vlarify this comment and/or PR description?",
        "pr_file_module": null
      },
      {
        "comment_id": "699502385",
        "repo_full_name": "expressjs/express",
        "pr_number": 4692,
        "pr_file": "examples/auth/index.js",
        "discussion_id": "698069907",
        "commented_code": "@@ -45,12 +47,17 @@ var users = {\n // when you create a user, generate a salt\n // and hash the password ('foobar' is the pass here)\n \n-hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n-  if (err) throw err;\n-  // store the salt & hash in the \"db\"\n-  users.tj.salt = salt;\n-  users.tj.hash = hash;\n-});\n+  //  ------------------ Old Way  ----------------- \n+// hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n+//   if (err) throw err;\n+//   // store the salt & hash in the \"db\"\n+//   users.tj.salt = salt;\n+//   users.tj.hash = hash;\n+// });\n+\n+//  ------------------ A better Way to Hash Password without passing any salt using Bcrypt.Js----------------- \n+var encryPassword = bcrypt.hashSync({ password: 'foobar' },10) //password Encrypter , here '10' is the salt used for encryption",
        "comment_created_at": "2021-08-31T16:44:30+00:00",
        "comment_author": "itsaamyth",
        "comment_body": "You Need a Salt !\r\nBut We don't have to store the salt in database everytime for hashing the password",
        "pr_file_module": null
      },
      {
        "comment_id": "699507112",
        "repo_full_name": "expressjs/express",
        "pr_number": 4692,
        "pr_file": "examples/auth/index.js",
        "discussion_id": "698069907",
        "commented_code": "@@ -45,12 +47,17 @@ var users = {\n // when you create a user, generate a salt\n // and hash the password ('foobar' is the pass here)\n \n-hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n-  if (err) throw err;\n-  // store the salt & hash in the \"db\"\n-  users.tj.salt = salt;\n-  users.tj.hash = hash;\n-});\n+  //  ------------------ Old Way  ----------------- \n+// hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n+//   if (err) throw err;\n+//   // store the salt & hash in the \"db\"\n+//   users.tj.salt = salt;\n+//   users.tj.hash = hash;\n+// });\n+\n+//  ------------------ A better Way to Hash Password without passing any salt using Bcrypt.Js----------------- \n+var encryPassword = bcrypt.hashSync({ password: 'foobar' },10) //password Encrypter , here '10' is the salt used for encryption",
        "comment_created_at": "2021-08-31T16:50:35+00:00",
        "comment_author": "dougwilson",
        "comment_body": "Gotcha. So then the comment right above this seems misleading/confusing:\r\n\r\n> A better Way to Hash Password without passing any salt using Bcrypt.Js\r\n\r\nit says \"without passing any salt\", but this line's comment says \"here '10' is the salt\"",
        "pr_file_module": null
      },
      {
        "comment_id": "699515361",
        "repo_full_name": "expressjs/express",
        "pr_number": 4692,
        "pr_file": "examples/auth/index.js",
        "discussion_id": "698069907",
        "commented_code": "@@ -45,12 +47,17 @@ var users = {\n // when you create a user, generate a salt\n // and hash the password ('foobar' is the pass here)\n \n-hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n-  if (err) throw err;\n-  // store the salt & hash in the \"db\"\n-  users.tj.salt = salt;\n-  users.tj.hash = hash;\n-});\n+  //  ------------------ Old Way  ----------------- \n+// hash({ password: 'foobar' }, function (err, pass, salt, hash) {\n+//   if (err) throw err;\n+//   // store the salt & hash in the \"db\"\n+//   users.tj.salt = salt;\n+//   users.tj.hash = hash;\n+// });\n+\n+//  ------------------ A better Way to Hash Password without passing any salt using Bcrypt.Js----------------- \n+var encryPassword = bcrypt.hashSync({ password: 'foobar' },10) //password Encrypter , here '10' is the salt used for encryption",
        "comment_created_at": "2021-08-31T17:01:34+00:00",
        "comment_author": "krzysdz",
        "comment_body": "> You Need a Salt !\r\n> But We don't have to store the salt in database everytime for hashing the password\r\n\r\nSalts should be unique for each user, otherwise their usability is reduced. With the same salt, identical passwords will still have identical hashes. Using random salts prevents this and makes cracking passwords harder. Constant salt almost completely neutralises the benefits of it.",
        "pr_file_module": null
      }
    ]
  }
]