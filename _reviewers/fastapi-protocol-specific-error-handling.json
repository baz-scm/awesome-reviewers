[
  {
    "discussion_id": "1257338326",
    "pr_number": 9829,
    "pr_file": "docs/en/docs/tutorial/cors.md",
    "created_at": "2023-07-08T19:07:13+00:00",
    "commented_code": "* `allow_origin_regex` - A regex string to match against origins that should be permitted to make cross-origin requests. e.g. `'https://.*\\.example\\.org'`.\n * `allow_methods` - A list of HTTP methods that should be allowed for cross-origin requests. Defaults to `['GET']`. You can use `['*']` to allow all standard methods.\n * `allow_headers` - A list of HTTP request headers that should be supported for cross-origin requests. Defaults to `[]`. You can use `['*']` to allow all headers. The `Accept`, `Accept-Language`, `Content-Language` and `Content-Type` headers are always allowed for <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests\" class=\"external-link\" rel=\"noopener\" target=\"_blank\">simple CORS requests</a>.\n-* `allow_credentials` - Indicate that cookies should be supported for cross-origin requests. Defaults to `False`. Also, `allow_origins` cannot be set to `['*']` for credentials to be allowed, origins must be specified.\n+* `allow_credentials` - Indicate that cookies should be supported for cross-origin requests. Defaults to `False`. Also, none of `allow_origins`, `allow_methods` and `allow_headers` can be set to `['*']` if `allow_credentials` is set to `True`. All of them must be <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#credentialed_requests_and_wildcards\" class=\"external-link\" rel=\"noopener\" target=\"_blank\">explicitly specified</a>.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1257338326",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 9829,
        "pr_file": "docs/en/docs/tutorial/cors.md",
        "discussion_id": "1257338326",
        "commented_code": "@@ -58,7 +58,7 @@ The following arguments are supported:\n * `allow_origin_regex` - A regex string to match against origins that should be permitted to make cross-origin requests. e.g. `'https://.*\\.example\\.org'`.\n * `allow_methods` - A list of HTTP methods that should be allowed for cross-origin requests. Defaults to `['GET']`. You can use `['*']` to allow all standard methods.\n * `allow_headers` - A list of HTTP request headers that should be supported for cross-origin requests. Defaults to `[]`. You can use `['*']` to allow all headers. The `Accept`, `Accept-Language`, `Content-Language` and `Content-Type` headers are always allowed for <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests\" class=\"external-link\" rel=\"noopener\" target=\"_blank\">simple CORS requests</a>.\n-* `allow_credentials` - Indicate that cookies should be supported for cross-origin requests. Defaults to `False`. Also, `allow_origins` cannot be set to `['*']` for credentials to be allowed, origins must be specified.\n+* `allow_credentials` - Indicate that cookies should be supported for cross-origin requests. Defaults to `False`. Also, none of `allow_origins`, `allow_methods` and `allow_headers` can be set to `['*']` if `allow_credentials` is set to `True`. All of them must be <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#credentialed_requests_and_wildcards\" class=\"external-link\" rel=\"noopener\" target=\"_blank\">explicitly specified</a>.",
        "comment_created_at": "2023-07-08T19:07:13+00:00",
        "comment_author": "mikeedjones",
        "comment_body": "```suggestion\r\n* `allow_credentials` - Indicate that cookies should be supported for cross-origin requests. Defaults to `False`. \r\n\r\nNone of `allow_origins`, `allow_methods` and `allow_headers` can be set to `['*']` if `allow_credentials` is set to `True`. All of them must be <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#credentialed_requests_and_wildcards\" class=\"external-link\" rel=\"noopener\" target=\"_blank\">explicitly specified</a>.\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1739129550",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 9829,
        "pr_file": "docs/en/docs/tutorial/cors.md",
        "discussion_id": "1257338326",
        "commented_code": "@@ -58,7 +58,7 @@ The following arguments are supported:\n * `allow_origin_regex` - A regex string to match against origins that should be permitted to make cross-origin requests. e.g. `'https://.*\\.example\\.org'`.\n * `allow_methods` - A list of HTTP methods that should be allowed for cross-origin requests. Defaults to `['GET']`. You can use `['*']` to allow all standard methods.\n * `allow_headers` - A list of HTTP request headers that should be supported for cross-origin requests. Defaults to `[]`. You can use `['*']` to allow all headers. The `Accept`, `Accept-Language`, `Content-Language` and `Content-Type` headers are always allowed for <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests\" class=\"external-link\" rel=\"noopener\" target=\"_blank\">simple CORS requests</a>.\n-* `allow_credentials` - Indicate that cookies should be supported for cross-origin requests. Defaults to `False`. Also, `allow_origins` cannot be set to `['*']` for credentials to be allowed, origins must be specified.\n+* `allow_credentials` - Indicate that cookies should be supported for cross-origin requests. Defaults to `False`. Also, none of `allow_origins`, `allow_methods` and `allow_headers` can be set to `['*']` if `allow_credentials` is set to `True`. All of them must be <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#credentialed_requests_and_wildcards\" class=\"external-link\" rel=\"noopener\" target=\"_blank\">explicitly specified</a>.",
        "comment_created_at": "2024-08-30T16:54:13+00:00",
        "comment_author": "alejsdev",
        "comment_body": "Thank you @mikeedjones, I think this way is slightly better for readability.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1969472102",
    "pr_number": 13412,
    "pr_file": "docs/ru/docs/tutorial/middleware.md",
    "created_at": "2025-02-25T10:18:24+00:00",
    "commented_code": "+# Middleware (\u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439)\n+\n+\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (middleware) \u0432 \u0432\u0430\u0448\u0438 **FastAPI** \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n+\n+\"Middleware\" \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0434\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+\u0410 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434 \u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c.\n+\n+\n+* \u041e\u043d\u0430 \u0431\u0435\u0440\u0451\u0442 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0439 **\u0437\u0430\u043f\u0440\u043e\u0441**\n+* \u0414\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441 \u044d\u0442\u0438\u043c **\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434.\n+* \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 *\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442** \u043e\u0442 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u0427\u0442\u043e-\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441 \u044d\u0442\u0438\u043c **\u043e\u0442\u0432\u0435\u0442\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434\n+* \u0418 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442**\n+\n+/// note | \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0438\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043d\u0435\u043a\u0438\u0435 \u0444\u043e\u043d\u043e\u0432\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 (\u0441\u043c. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e), \u0442\u043e \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b \u043f\u043e\u0441\u043b\u0435 middleware.\n+\n+///\n+\n+## \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 middleware\n+\n+\u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f middleware \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 `@app.middleware(\"http\")`.\n+\n+\u0424\u0443\u043d\u043a\u0446\u0438\u044f middleware \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442:\n+\n+* `request` (\u043e\u0431\u044a\u0435\u043a\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430).\n+* \u0424\u0443\u043d\u043a\u0446\u0438\u044e `call_next`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 `request` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430.\n+    * \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442 `request` \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+    * \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 `response`, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+* \u0422\u0430\u043a\u0436\u0435 \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c `response`, \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u0435\u0433\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c.\n+\n+{* ../../docs_src/middleware/tutorial001.py hl[8:9,11,14] *}\n+\n+/// tip | \u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430\n+\n+\u0418\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\" class=\"external-link\" target=\"_blank\">\u0441 'X-' \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u043c</a>.\n+\n+\u0415\u0441\u043b\u0438 \u0436\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u043b\u0438\u0435\u043d\u0442 \u0441\u043c\u043e\u0436\u0435\u0442 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435, \u0442\u043e \u0432\u0430\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u0445 \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 CORS ([CORS (Cross-Origin Resource Sharing)](cors.md){.internal-link target=_blank}), \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 expose_headers`, \u0441\u043c. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e <a href=\"https://www.starlette.io/middleware/#corsmiddleware\" class=\"external-link\" target=\"_blank\">Starlette's CORS docs</a>.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1969472102",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969472102",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (\u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439)\n+\n+\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (middleware) \u0432 \u0432\u0430\u0448\u0438 **FastAPI** \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n+\n+\"Middleware\" \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0434\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+\u0410 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434 \u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c.\n+\n+\n+* \u041e\u043d\u0430 \u0431\u0435\u0440\u0451\u0442 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0439 **\u0437\u0430\u043f\u0440\u043e\u0441**\n+* \u0414\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441 \u044d\u0442\u0438\u043c **\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434.\n+* \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 *\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442** \u043e\u0442 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u0427\u0442\u043e-\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441 \u044d\u0442\u0438\u043c **\u043e\u0442\u0432\u0435\u0442\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434\n+* \u0418 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442**\n+\n+/// note | \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0438\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043d\u0435\u043a\u0438\u0435 \u0444\u043e\u043d\u043e\u0432\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 (\u0441\u043c. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e), \u0442\u043e \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b \u043f\u043e\u0441\u043b\u0435 middleware.\n+\n+///\n+\n+## \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 middleware\n+\n+\u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f middleware \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 `@app.middleware(\"http\")`.\n+\n+\u0424\u0443\u043d\u043a\u0446\u0438\u044f middleware \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442:\n+\n+* `request` (\u043e\u0431\u044a\u0435\u043a\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430).\n+* \u0424\u0443\u043d\u043a\u0446\u0438\u044e `call_next`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 `request` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430.\n+    * \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442 `request` \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+    * \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 `response`, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+* \u0422\u0430\u043a\u0436\u0435 \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c `response`, \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u0435\u0433\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c.\n+\n+{* ../../docs_src/middleware/tutorial001.py hl[8:9,11,14] *}\n+\n+/// tip | \u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430\n+\n+\u0418\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\" class=\"external-link\" target=\"_blank\">\u0441 'X-' \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u043c</a>.\n+\n+\u0415\u0441\u043b\u0438 \u0436\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u043b\u0438\u0435\u043d\u0442 \u0441\u043c\u043e\u0436\u0435\u0442 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435, \u0442\u043e \u0432\u0430\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u0445 \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 CORS ([CORS (Cross-Origin Resource Sharing)](cors.md){.internal-link target=_blank}), \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 expose_headers`, \u0441\u043c. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e <a href=\"https://www.starlette.io/middleware/#corsmiddleware\" class=\"external-link\" target=\"_blank\">Starlette's CORS docs</a>.",
        "comment_created_at": "2025-02-25T10:18:24+00:00",
        "comment_author": "Rishat-F",
        "comment_body": "\u041d\u043e \u0435\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u043a\u043b\u0438\u0435\u043d\u0442 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0441\u043c\u043e\u0433 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432\u0430\u0448\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438, \u0442\u043e \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u0445 \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 CORS ([CORS (Cross-Origin Resource Sharing)](cors.md){.internal-link target=_blank}), \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `expose_headers`, \u0441\u043c. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e <a href=\"https://www.starlette.io/middleware/#corsmiddleware\" class=\"external-link\" target=\"_blank\">Starlette's CORS docs</a>.",
        "pr_file_module": null
      },
      {
        "comment_id": "1969602360",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969472102",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (\u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439)\n+\n+\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (middleware) \u0432 \u0432\u0430\u0448\u0438 **FastAPI** \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n+\n+\"Middleware\" \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0434\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+\u0410 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434 \u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c.\n+\n+\n+* \u041e\u043d\u0430 \u0431\u0435\u0440\u0451\u0442 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0439 **\u0437\u0430\u043f\u0440\u043e\u0441**\n+* \u0414\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441 \u044d\u0442\u0438\u043c **\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434.\n+* \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 *\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442** \u043e\u0442 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u0427\u0442\u043e-\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441 \u044d\u0442\u0438\u043c **\u043e\u0442\u0432\u0435\u0442\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434\n+* \u0418 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442**\n+\n+/// note | \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0438\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043d\u0435\u043a\u0438\u0435 \u0444\u043e\u043d\u043e\u0432\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 (\u0441\u043c. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e), \u0442\u043e \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b \u043f\u043e\u0441\u043b\u0435 middleware.\n+\n+///\n+\n+## \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 middleware\n+\n+\u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f middleware \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 `@app.middleware(\"http\")`.\n+\n+\u0424\u0443\u043d\u043a\u0446\u0438\u044f middleware \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442:\n+\n+* `request` (\u043e\u0431\u044a\u0435\u043a\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430).\n+* \u0424\u0443\u043d\u043a\u0446\u0438\u044e `call_next`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 `request` \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430.\n+    * \u042d\u0442\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442 `request` \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+    * \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 `response`, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+* \u0422\u0430\u043a\u0436\u0435 \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c `response`, \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u0435\u0433\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c.\n+\n+{* ../../docs_src/middleware/tutorial001.py hl[8:9,11,14] *}\n+\n+/// tip | \u041f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430\n+\n+\u0418\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0432\u043e\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\" class=\"external-link\" target=\"_blank\">\u0441 'X-' \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u043c</a>.\n+\n+\u0415\u0441\u043b\u0438 \u0436\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u043b\u0438\u0435\u043d\u0442 \u0441\u043c\u043e\u0436\u0435\u0442 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435, \u0442\u043e \u0432\u0430\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u0445 \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 CORS ([CORS (Cross-Origin Resource Sharing)](cors.md){.internal-link target=_blank}), \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 expose_headers`, \u0441\u043c. \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e <a href=\"https://www.starlette.io/middleware/#corsmiddleware\" class=\"external-link\" target=\"_blank\">Starlette's CORS docs</a>.",
        "comment_created_at": "2025-02-25T11:43:52+00:00",
        "comment_author": "alv2017",
        "comment_body": "\u0437\u0434\u0435\u0441\u044c \u043e\u0441\u0442\u0430\u0432\u043b\u044e \u043a\u0430\u043a \u0435\u0441\u0442\u044c",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "776553859",
    "pr_number": 3257,
    "pr_file": "docs/es/docs/tutorial/middleware.md",
    "created_at": "2021-12-30T03:06:50+00:00",
    "commented_code": "+# Middleware\n+\n+Puedes a\u00f1adir middlewares a tus aplicaciones de **FastAPI**.\n+\n+Un \"middleware\" es una funci\u00f3n que se ejecuta con cada **petici\u00f3n** antes de que se procesada por cualquier <abbr title=\"path operation\">*operaci\u00f3n de ruta*</abbr>. Y antes de devolver cada **respuesta**.\n+\n+* Toma cada **petici\u00f3n** que llega a tu aplicaci\u00f3n.\n+* Luego puede hacer algo con esa **petici\u00f3n** o ejecutar cualquier c\u00f3digo necesario.\n+* Posteriormente toma la **petici\u00f3n** para ser procesada por el resto de la aplicaci\u00f3n (por alguna *operaci\u00f3n de path*).\n+* Luego toma la **respuesta** generada por la aplicaci\u00f3n (por alguna *operaci\u00f3n de path*).\n+* Puede realizar algo con esa **respuesta** o ejecutar cualquier c\u00f3digo necesario.\n+* Y por ultimo, retornar la **respuesta**.\n+\n+!!! note \" Detalles T\u00e9cnicos \"\n+    Si tienes dependencias que utilicen `yield`, el c\u00f3digo de salida se ejecutara *despu\u00e9s* del middleware.\n+\n+    Si existen tareas ejecut\u00e1ndose en segundo plano (documentadas posteriormente), se ejecutaran *despu\u00e9s* del middleware.\n+\n+## Crear un middleware\n+\n+Para crear un middleware debemos utilizar el decorador `@app.middleware(\"http\")` encima de la funci\u00f3n.\n+\n+La funci\u00f3n del middleware recibe:\n+\n+* La `petici\u00f3n`.\n+* Una funci\u00f3n <abbr title=\"para llamar despu\u00e9s\">`call_next`</abbr> que recibir\u00e1 la `petici\u00f3n` como par\u00e1metro.\n+    * Esta funci\u00f3n pasar\u00e1 la `petici\u00f3n` a la correspondiente <abbr title=\"path operation\">*operaci\u00f3n de path*</abbr>.\n+    * Posteriormente retorna la `respuesta` generada por la *operaci\u00f3n de path*.\n+* Luego, puedes modificar aun m\u00e1s la `respuesta` antes de devolverla.\n+\n+```Python hl_lines=\"8-9  11  14\"\n+{!../../../docs_src/middleware/tutorial001.py!}\n+```\n+\n+!!! tip\n+    Ten en cuenta que puedes a\u00f1adir <abbr title=\"encabezados\">headers</abbr> personalizados <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\" class=\"external-link\" target=\"_blank\">utilizando el prefijo 'X-' </a>.\n+\n+    Pero, si tienes headers personalizados que deseas que un cliente pueda visualizar en un navegador, debes agregarlos a tus configuraciones de CORS ([CORS (Cross-Origin Resource Sharing)](cors.md){.internal-link target=_blank}) usando el par\u00e1metro `expose_headers`, puedes consultar m\u00e1s en <a href=\"https://www.starlette.io/middleware/#corsmiddleware\" class=\"external-link\" target=\"_blank\">la documentaci\u00f3n de Starlette acerca de CORS</a>.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "776553859",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 3257,
        "pr_file": "docs/es/docs/tutorial/middleware.md",
        "discussion_id": "776553859",
        "commented_code": "@@ -0,0 +1,61 @@\n+# Middleware\n+\n+Puedes a\u00f1adir middlewares a tus aplicaciones de **FastAPI**.\n+\n+Un \"middleware\" es una funci\u00f3n que se ejecuta con cada **petici\u00f3n** antes de que se procesada por cualquier <abbr title=\"path operation\">*operaci\u00f3n de ruta*</abbr>. Y antes de devolver cada **respuesta**.\n+\n+* Toma cada **petici\u00f3n** que llega a tu aplicaci\u00f3n.\n+* Luego puede hacer algo con esa **petici\u00f3n** o ejecutar cualquier c\u00f3digo necesario.\n+* Posteriormente toma la **petici\u00f3n** para ser procesada por el resto de la aplicaci\u00f3n (por alguna *operaci\u00f3n de path*).\n+* Luego toma la **respuesta** generada por la aplicaci\u00f3n (por alguna *operaci\u00f3n de path*).\n+* Puede realizar algo con esa **respuesta** o ejecutar cualquier c\u00f3digo necesario.\n+* Y por ultimo, retornar la **respuesta**.\n+\n+!!! note \" Detalles T\u00e9cnicos \"\n+    Si tienes dependencias que utilicen `yield`, el c\u00f3digo de salida se ejecutara *despu\u00e9s* del middleware.\n+\n+    Si existen tareas ejecut\u00e1ndose en segundo plano (documentadas posteriormente), se ejecutaran *despu\u00e9s* del middleware.\n+\n+## Crear un middleware\n+\n+Para crear un middleware debemos utilizar el decorador `@app.middleware(\"http\")` encima de la funci\u00f3n.\n+\n+La funci\u00f3n del middleware recibe:\n+\n+* La `petici\u00f3n`.\n+* Una funci\u00f3n <abbr title=\"para llamar despu\u00e9s\">`call_next`</abbr> que recibir\u00e1 la `petici\u00f3n` como par\u00e1metro.\n+    * Esta funci\u00f3n pasar\u00e1 la `petici\u00f3n` a la correspondiente <abbr title=\"path operation\">*operaci\u00f3n de path*</abbr>.\n+    * Posteriormente retorna la `respuesta` generada por la *operaci\u00f3n de path*.\n+* Luego, puedes modificar aun m\u00e1s la `respuesta` antes de devolverla.\n+\n+```Python hl_lines=\"8-9  11  14\"\n+{!../../../docs_src/middleware/tutorial001.py!}\n+```\n+\n+!!! tip\n+    Ten en cuenta que puedes a\u00f1adir <abbr title=\"encabezados\">headers</abbr> personalizados <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\" class=\"external-link\" target=\"_blank\">utilizando el prefijo 'X-' </a>.\n+\n+    Pero, si tienes headers personalizados que deseas que un cliente pueda visualizar en un navegador, debes agregarlos a tus configuraciones de CORS ([CORS (Cross-Origin Resource Sharing)](cors.md){.internal-link target=_blank}) usando el par\u00e1metro `expose_headers`, puedes consultar m\u00e1s en <a href=\"https://www.starlette.io/middleware/#corsmiddleware\" class=\"external-link\" target=\"_blank\">la documentaci\u00f3n de Starlette acerca de CORS</a>.",
        "comment_created_at": "2021-12-30T03:06:50+00:00",
        "comment_author": "israteneda",
        "comment_body": "```suggestion\r\n    Pero, si tienes headers personalizados que deseas que un cliente pueda visualizar en un navegador, debes agregarlos a tus configuraciones de CORS ([CORS (Cross-Origin Resource Sharing)](cors.md){.internal-link target=_blank}) empleando el par\u00e1metro `expose_headers`, puedes consultar m\u00e1s en <a href=\"https://www.starlette.io/middleware/#corsmiddleware\" class=\"external-link\" target=\"_blank\">la documentaci\u00f3n de Starlette acerca de CORS</a>.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1107867753",
    "pr_number": 5466,
    "pr_file": "docs/es/docs/tutorial/response-status-code.md",
    "created_at": "2023-02-15T23:59:29+00:00",
    "commented_code": "+# Response Status Code\n+\n+De la misma manera que puedes especificar un modelo de respuesta, tambi\u00e9n puedes declarar codigos de estado HTTP\n+usados para la respuesta con el parametro `status_code` en cualquiera de los *path operations*:\n+\n+- `@app.get()`\n+- `@app.post()`\n+- `@app.put()`\n+- `@app.delete()`\n+- etc.\n+\n+```Python hl_lines=\"6\"\n+{!../../../docs_src/response_status_code/tutorial001.py!}\n+```\n+\n+!!! note\n+    Toma en cuenta que `status_code` es un par\u00e1metro del m\u00e9todo del \"decorador\" (`get`, `post`, etc)-\n+No de la funci\u00f3n de tu *path operation*, como todos los par\u00e1metros y cuerpo.\n+\n+\n+El par\u00e1metro `status_code` recibe un n\u00famero con el c\u00f3digo del estado HTTP.\n+\n+!!! info\n+   `status_code` puede alternamente recibir un `IntEnum`, como <a href=\"https://docs.python.org/3/library/http.html#http.HTTPStatus\" class=\"external-link\" target=\"_blank\">`http.HTTPStatus`</a> de Python.\n+\n+Ser\u00e1:\n+\n+- Retorna ese c\u00f3digo de estado en la respuesta.\n+- Documentado como en el OpenAPI \"schema\" (adem\u00e1s, en la interfaz de usuario):\n+\n+<img src=\"../../../en/docs/img/tutorial/response-status-code/image01.png\">\n+\n+\n+!!! note\n+    Algunos c\u00f3digos de respuesta (ve la siguiente secci\u00f3n) indica que la respuesta no tiene body.\n+\n+```\n+FastAPI sabe esto, y producir\u00e1 documentati\u00f3n OpenAPI diciendo que no hay body en la respuesta.\n+```\n+\n+# Acerca de los c\u00f3digos de estado HTTP.\n+\n+!!! note\n+    Si ya sabes lo que son los c\u00f3digos de estado HTTP, salta a la siguiente secci\u00f3n.\n+\n+En HTTP, tu env\u00edas un c\u00f3digo de estado de tres d\u00edgitos como parte de la respuesta.\n+\n+Estos c\u00f3digos de estado tienen un nombre asociado para reconocerlos, pero lo m\u00e1s importante es el n\u00famero.\n+\n+En resumen:\n+\n+ - `100` en adelante son para \"Informaci\u00f3n\". Rara vez los usas directamente. Las respuestas con estos c\u00f3digos de estado no tienen body.\n+ - `200` en adelante son para respuestas \"Exitosas\". Esta son las que se usan con mayor frecuencia.\n+      - `200` c\u00f3digo  de estado por defecto, el cual significa que todo estuvo \"OK\".\n+      - Otro ejemplo ser\u00eda `201`, \"Creado\". Es com\u00fanmente usado despu\u00e9s de crear una observaci\u00f3n en la base de datos.\n+      - `204` es un caso especial, \"Sin contenido\". Esta respuesta es usada cuando no hay contenido de retorno por parte del cliente,\n+      y la respuesta no debe tener cuerpo.\n+\n+- `300` en adelante son para \"Redirecci\u00f3n\". Respuestas con estos c\u00f3digos de estado pueden o no tener body, excepto para `304`, \"No Modificado\",\n+  el cual no debe tener body.\n+\n+- `400` en adelante son para respuestas para `Error del Cliente`. Estos son el segundo tipo de codig\u00f3s que m\u00e1s usar\u00e1s.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1107867753",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 5466,
        "pr_file": "docs/es/docs/tutorial/response-status-code.md",
        "discussion_id": "1107867753",
        "commented_code": "@@ -0,0 +1,105 @@\n+# Response Status Code\n+\n+De la misma manera que puedes especificar un modelo de respuesta, tambi\u00e9n puedes declarar codigos de estado HTTP\n+usados para la respuesta con el parametro `status_code` en cualquiera de los *path operations*:\n+\n+- `@app.get()`\n+- `@app.post()`\n+- `@app.put()`\n+- `@app.delete()`\n+- etc.\n+\n+```Python hl_lines=\"6\"\n+{!../../../docs_src/response_status_code/tutorial001.py!}\n+```\n+\n+!!! note\n+    Toma en cuenta que `status_code` es un par\u00e1metro del m\u00e9todo del \"decorador\" (`get`, `post`, etc)-\n+No de la funci\u00f3n de tu *path operation*, como todos los par\u00e1metros y cuerpo.\n+\n+\n+El par\u00e1metro `status_code` recibe un n\u00famero con el c\u00f3digo del estado HTTP.\n+\n+!!! info\n+   `status_code` puede alternamente recibir un `IntEnum`, como <a href=\"https://docs.python.org/3/library/http.html#http.HTTPStatus\" class=\"external-link\" target=\"_blank\">`http.HTTPStatus`</a> de Python.\n+\n+Ser\u00e1:\n+\n+- Retorna ese c\u00f3digo de estado en la respuesta.\n+- Documentado como en el OpenAPI \"schema\" (adem\u00e1s, en la interfaz de usuario):\n+\n+<img src=\"../../../en/docs/img/tutorial/response-status-code/image01.png\">\n+\n+\n+!!! note\n+    Algunos c\u00f3digos de respuesta (ve la siguiente secci\u00f3n) indica que la respuesta no tiene body.\n+\n+```\n+FastAPI sabe esto, y producir\u00e1 documentati\u00f3n OpenAPI diciendo que no hay body en la respuesta.\n+```\n+\n+# Acerca de los c\u00f3digos de estado HTTP.\n+\n+!!! note\n+    Si ya sabes lo que son los c\u00f3digos de estado HTTP, salta a la siguiente secci\u00f3n.\n+\n+En HTTP, tu env\u00edas un c\u00f3digo de estado de tres d\u00edgitos como parte de la respuesta.\n+\n+Estos c\u00f3digos de estado tienen un nombre asociado para reconocerlos, pero lo m\u00e1s importante es el n\u00famero.\n+\n+En resumen:\n+\n+ - `100` en adelante son para \"Informaci\u00f3n\". Rara vez los usas directamente. Las respuestas con estos c\u00f3digos de estado no tienen body.\n+ - `200` en adelante son para respuestas \"Exitosas\". Esta son las que se usan con mayor frecuencia.\n+      - `200` c\u00f3digo  de estado por defecto, el cual significa que todo estuvo \"OK\".\n+      - Otro ejemplo ser\u00eda `201`, \"Creado\". Es com\u00fanmente usado despu\u00e9s de crear una observaci\u00f3n en la base de datos.\n+      - `204` es un caso especial, \"Sin contenido\". Esta respuesta es usada cuando no hay contenido de retorno por parte del cliente,\n+      y la respuesta no debe tener cuerpo.\n+\n+- `300` en adelante son para \"Redirecci\u00f3n\". Respuestas con estos c\u00f3digos de estado pueden o no tener body, excepto para `304`, \"No Modificado\",\n+  el cual no debe tener body.\n+\n+- `400` en adelante son para respuestas para `Error del Cliente`. Estos son el segundo tipo de codig\u00f3s que m\u00e1s usar\u00e1s.",
        "comment_created_at": "2023-02-15T23:59:29+00:00",
        "comment_author": "erudin",
        "comment_body": "```suggestion\r\n- `400` en adelante son para respuestas de `Error del Cliente`. Estos son el segundo tipo de codig\u00f3s que probablemente m\u00e1s usar\u00e1s.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "624641267",
    "pr_number": 3134,
    "pr_file": "docs/es/docs/advanced/websockets.md",
    "created_at": "2021-05-02T06:41:14+00:00",
    "commented_code": "+# WebSockets\n+\n+Puedes utilizar <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\" class=\"external-link\" target=\"_blank\"> <abbr>WebSockets</abbr> </a> con **FastAPI**.\n+\n+## Cliente de WebSockets \n+\n+### En producci\u00f3n\n+\n+En tu sistema de producci\u00f3n , posiblemente tienes un <abbr>frontend</abbr> creado con alg\u00fan <abbr>framework</abbr> moderno como lo puede ser React , Vue.js o Angular.\n+\n+Y si utilizas <abbr>WebSockets</abbr> para comunicarte con tu <abbr>backend</abbr> muy probablemente utilices las <abbr>utilities</abbr> de t\u00fa <abbr>frontend</abbr>. \n+\n+O posiblemente cuentes con una aplicaci\u00f3n m\u00f3vil nativa que se comunique con el <abbr>WebSocket</abbr> de tu <abbr>backend</abbr> directamente , utilizando c\u00f3digo nativo. \n+\n+O posiblemente cuentes con otra manera de comunicarte con el <abbr>WebSocket</abbr> del <abbr>endpoint</abbr>.\n+\n+---\n+\n+Pero para este ejemplo , utilizaremos un documento muy simple de HTML con un poco de Javascript , todo dentro de un largo string. \n+\n+Esto , por supuesto , no es \u00f3ptimo y tampoco deber\u00edas utilizarlo para producci\u00f3n. \n+\n+En producci\u00f3n tendr\u00e1s una de las opciones anteriormente comentadas. \n+\n+Pero es la forma m\u00e1s simple de enfocarnos en el lado del servidor de los <abbr>WebSockets</abbr> y tener un ejemplo pr\u00e1ctico: \n+\n+```Python hl_lines=\"2  6-38  41-43\"\n+{!../../../docs_src/websockets/tutorial001.py!}\n+```\n+\n+## Creando un `websocket`\n+\n+En tu aplicaci\u00f3n de **FastAPI** , crea un <abbr>`websocket`</abbr> :\n+\n+```Python hl_lines=\"1  46-47\"\n+{!../../../docs_src/websockets/tutorial001.py!}\n+```\n+\n+!!! note \"Detalles T\u00e9cnicos\"\n+    Tambi\u00e9n puedes utilizar `from starlette.websockets import WebSocket`.\n+\n+    **FastAPI** proporciona el mismo <abbr>`WebSocket`</abbr> directamente solo como una conveniencia para ti , el desarrollador. Pero viene directamente de Starlette. \n+\n+## Esperar por mensajes y enviar mensajes \n+\n+En la ruta de tu <abbr>WebSocket</abbr> puedes `esperar` por mensajes y enviar mensajes.\n+\n+```Python hl_lines=\"48-52\"\n+{!../../../docs_src/websockets/tutorial001.py!}\n+```\n+\n+Puedes enviar y recibir archivos binarios , textos e informaci\u00f3n en formato JSON.\n+\n+## Pru\u00e9balo\n+\n+Si el nombre de tu archivo es `main.py`, ejecuta tu aplicaci\u00f3n utilizando:\n+\n+<div class=\"termy\">\n+\n+```console\n+$ uvicorn main:app --reload\n+\n+<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n+```\n+\n+</div>\n+\n+Abre tu navegador en <a href=\"http://127.0.0.1:8000\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000</a>.\n+ \n+Ver\u00e1s una simple pagina parecida a esto: \n+\n+<img src=\"https://fastapi.tiangolo.com/img/tutorial/websockets/image01.png\">\n+\n+Puedes escribir mensajes en la caja de entrada , y luego enviarlos: \n+\n+<img src=\"https://fastapi.tiangolo.com/img/tutorial/websockets/image02.png\">\n+\n+Y t\u00fa aplicaci\u00f3n de **FastAPI** con <abbr>WebSockets</abbr> te responder\u00e1:\n+\n+<img src=\"https://fastapi.tiangolo.com/img/tutorial/websockets/image03.png\">\n+\n+Puedes enviar ( y recibir ) muchos mensajes: \n+\n+<img src=\"https://fastapi.tiangolo.com/img/tutorial/websockets/image04.png\">\n+\n+Y todos ellos utilizaran la misma conexi\u00f3n de <abbr>WebSocket</abbr>.\n+\n+## Usando `Depends` y otros\n+\n+En los <abbr>endpoints</abbr> del <abbr>WebSocket</abbr> puedes importar desde `fastapi` y utilizar: \n+\n+* `Depends`\n+* `Security`\n+* `Cookie`\n+* `Header`\n+* `Path`\n+* `Query`\n+\n+Trabajan de las misma manera que otros <abbr>endpoints</abbr>/*operaciones de <abbr>path</abbr>* en FastAPI:\n+\n+```Python hl_lines=\"58-65  68-83\"\n+{!../../../docs_src/websockets/tutorial002.py!}\n+```\n+\n+!!! info\n+    En un <abbr>WebSocket</abbr> realmente no vale la pena causar un <abbr>`HTTPException`</abbr>. Por lo tanto es mejor cerrar directamente la conexi\u00f3n al <abbr>WebSocket</abbr>.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "624641267",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 3134,
        "pr_file": "docs/es/docs/advanced/websockets.md",
        "discussion_id": "624641267",
        "commented_code": "@@ -0,0 +1,172 @@\n+# WebSockets\n+\n+Puedes utilizar <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\" class=\"external-link\" target=\"_blank\"> <abbr>WebSockets</abbr> </a> con **FastAPI**.\n+\n+## Cliente de WebSockets \n+\n+### En producci\u00f3n\n+\n+En tu sistema de producci\u00f3n , posiblemente tienes un <abbr>frontend</abbr> creado con alg\u00fan <abbr>framework</abbr> moderno como lo puede ser React , Vue.js o Angular.\n+\n+Y si utilizas <abbr>WebSockets</abbr> para comunicarte con tu <abbr>backend</abbr> muy probablemente utilices las <abbr>utilities</abbr> de t\u00fa <abbr>frontend</abbr>. \n+\n+O posiblemente cuentes con una aplicaci\u00f3n m\u00f3vil nativa que se comunique con el <abbr>WebSocket</abbr> de tu <abbr>backend</abbr> directamente , utilizando c\u00f3digo nativo. \n+\n+O posiblemente cuentes con otra manera de comunicarte con el <abbr>WebSocket</abbr> del <abbr>endpoint</abbr>.\n+\n+---\n+\n+Pero para este ejemplo , utilizaremos un documento muy simple de HTML con un poco de Javascript , todo dentro de un largo string. \n+\n+Esto , por supuesto , no es \u00f3ptimo y tampoco deber\u00edas utilizarlo para producci\u00f3n. \n+\n+En producci\u00f3n tendr\u00e1s una de las opciones anteriormente comentadas. \n+\n+Pero es la forma m\u00e1s simple de enfocarnos en el lado del servidor de los <abbr>WebSockets</abbr> y tener un ejemplo pr\u00e1ctico: \n+\n+```Python hl_lines=\"2  6-38  41-43\"\n+{!../../../docs_src/websockets/tutorial001.py!}\n+```\n+\n+## Creando un `websocket`\n+\n+En tu aplicaci\u00f3n de **FastAPI** , crea un <abbr>`websocket`</abbr> :\n+\n+```Python hl_lines=\"1  46-47\"\n+{!../../../docs_src/websockets/tutorial001.py!}\n+```\n+\n+!!! note \"Detalles T\u00e9cnicos\"\n+    Tambi\u00e9n puedes utilizar `from starlette.websockets import WebSocket`.\n+\n+    **FastAPI** proporciona el mismo <abbr>`WebSocket`</abbr> directamente solo como una conveniencia para ti , el desarrollador. Pero viene directamente de Starlette. \n+\n+## Esperar por mensajes y enviar mensajes \n+\n+En la ruta de tu <abbr>WebSocket</abbr> puedes `esperar` por mensajes y enviar mensajes.\n+\n+```Python hl_lines=\"48-52\"\n+{!../../../docs_src/websockets/tutorial001.py!}\n+```\n+\n+Puedes enviar y recibir archivos binarios , textos e informaci\u00f3n en formato JSON.\n+\n+## Pru\u00e9balo\n+\n+Si el nombre de tu archivo es `main.py`, ejecuta tu aplicaci\u00f3n utilizando:\n+\n+<div class=\"termy\">\n+\n+```console\n+$ uvicorn main:app --reload\n+\n+<span style=\"color: green;\">INFO</span>:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\n+```\n+\n+</div>\n+\n+Abre tu navegador en <a href=\"http://127.0.0.1:8000\" class=\"external-link\" target=\"_blank\">http://127.0.0.1:8000</a>.\n+ \n+Ver\u00e1s una simple pagina parecida a esto: \n+\n+<img src=\"https://fastapi.tiangolo.com/img/tutorial/websockets/image01.png\">\n+\n+Puedes escribir mensajes en la caja de entrada , y luego enviarlos: \n+\n+<img src=\"https://fastapi.tiangolo.com/img/tutorial/websockets/image02.png\">\n+\n+Y t\u00fa aplicaci\u00f3n de **FastAPI** con <abbr>WebSockets</abbr> te responder\u00e1:\n+\n+<img src=\"https://fastapi.tiangolo.com/img/tutorial/websockets/image03.png\">\n+\n+Puedes enviar ( y recibir ) muchos mensajes: \n+\n+<img src=\"https://fastapi.tiangolo.com/img/tutorial/websockets/image04.png\">\n+\n+Y todos ellos utilizaran la misma conexi\u00f3n de <abbr>WebSocket</abbr>.\n+\n+## Usando `Depends` y otros\n+\n+En los <abbr>endpoints</abbr> del <abbr>WebSocket</abbr> puedes importar desde `fastapi` y utilizar: \n+\n+* `Depends`\n+* `Security`\n+* `Cookie`\n+* `Header`\n+* `Path`\n+* `Query`\n+\n+Trabajan de las misma manera que otros <abbr>endpoints</abbr>/*operaciones de <abbr>path</abbr>* en FastAPI:\n+\n+```Python hl_lines=\"58-65  68-83\"\n+{!../../../docs_src/websockets/tutorial002.py!}\n+```\n+\n+!!! info\n+    En un <abbr>WebSocket</abbr> realmente no vale la pena causar un <abbr>`HTTPException`</abbr>. Por lo tanto es mejor cerrar directamente la conexi\u00f3n al <abbr>WebSocket</abbr>.",
        "comment_created_at": "2021-05-02T06:41:14+00:00",
        "comment_author": "anthonycepeda",
        "comment_body": "Debido a que en un <abbr>WebSocket</abbr> no es necesario lanzar un <abbr>`HTTPException`</abbr>, lo mejor ser\u00eda cerrar directamente la conexi\u00f3n al <abbr>WebSocket</abbr>.",
        "pr_file_module": null
      }
    ]
  }
]