[
  {
    "discussion_id": "1969375502",
    "pr_number": 13412,
    "pr_file": "docs/ru/docs/tutorial/middleware.md",
    "created_at": "2025-02-25T09:37:35+00:00",
    "commented_code": "+# Middleware (\u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439)\n+\n+\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (middleware) \u0432 \u0432\u0430\u0448\u0438 **FastAPI** \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n+\n+\"Middleware\" \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0434\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+\u0410 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434 \u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c.\n+\n+\n+* \u041e\u043d\u0430 \u0431\u0435\u0440\u0451\u0442 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0439 **\u0437\u0430\u043f\u0440\u043e\u0441**\n+* \u0414\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441 \u044d\u0442\u0438\u043c **\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434.\n+* \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 *\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442** \u043e\u0442 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u0427\u0442\u043e-\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441 \u044d\u0442\u0438\u043c **\u043e\u0442\u0432\u0435\u0442\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434\n+* \u0418 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442**\n+\n+/// note | \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0438\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1969375502",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969375502",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (\u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439)\n+\n+\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (middleware) \u0432 \u0432\u0430\u0448\u0438 **FastAPI** \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n+\n+\"Middleware\" \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0434\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+\u0410 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434 \u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c.\n+\n+\n+* \u041e\u043d\u0430 \u0431\u0435\u0440\u0451\u0442 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0439 **\u0437\u0430\u043f\u0440\u043e\u0441**\n+* \u0414\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441 \u044d\u0442\u0438\u043c **\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434.\n+* \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 *\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442** \u043e\u0442 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u0427\u0442\u043e-\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441 \u044d\u0442\u0438\u043c **\u043e\u0442\u0432\u0435\u0442\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0435\u043a\u0438\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434\n+* \u0418 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442**\n+\n+/// note | \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0438\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.",
        "comment_created_at": "2025-02-25T09:37:35+00:00",
        "comment_author": "Rishat-F",
        "comment_body": "\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1969674993",
    "pr_number": 13412,
    "pr_file": "docs/ru/docs/tutorial/middleware.md",
    "created_at": "2025-02-25T12:28:57+00:00",
    "commented_code": "+# Middleware (\u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439)\n+\n+\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (middleware) \u0432 **FastAPI** \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n+\n+\"Middleware\" \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0434\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+\u0410 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434 \u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c.\n+\n+\n+* \u041e\u043d\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0439 **\u0437\u0430\u043f\u0440\u043e\u0441**\n+* \u041c\u043e\u0436\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c **\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434.\n+* \u0417\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 *\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442** \u043e\u0442 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041c\u043e\u0436\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c **\u043e\u0442\u0432\u0435\u0442\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434\n+* \u0418 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442**\n+\n+/// note | \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0438\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1969674993",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969674993",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (\u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439)\n+\n+\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (middleware) \u0432 **FastAPI** \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n+\n+\"Middleware\" \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0434\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+\u0410 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434 \u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c.\n+\n+\n+* \u041e\u043d\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0439 **\u0437\u0430\u043f\u0440\u043e\u0441**\n+* \u041c\u043e\u0436\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c **\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434.\n+* \u0417\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 *\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442** \u043e\u0442 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041c\u043e\u0436\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c **\u043e\u0442\u0432\u0435\u0442\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434\n+* \u0418 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442**\n+\n+/// note | \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0438\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.",
        "comment_created_at": "2025-02-25T12:28:57+00:00",
        "comment_author": "Rishat-F",
        "comment_body": "\u042f \u0436\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u044e, \u0447\u0442\u043e \u043f\u043e\u0434 \"exit code\" \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0432\u0432\u0438\u0434\u0443 \"\u0443\u0447\u0430\u0441\u0442\u043e\u043a \u043a\u043e\u0434\u0430 \u043f\u043e\u0441\u043b\u0435 `yield`\"?",
        "pr_file_module": null
      },
      {
        "comment_id": "1969687461",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969674993",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (\u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439)\n+\n+\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (middleware) \u0432 **FastAPI** \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n+\n+\"Middleware\" \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0434\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+\u0410 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434 \u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c.\n+\n+\n+* \u041e\u043d\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0439 **\u0437\u0430\u043f\u0440\u043e\u0441**\n+* \u041c\u043e\u0436\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c **\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434.\n+* \u0417\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 *\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442** \u043e\u0442 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041c\u043e\u0436\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c **\u043e\u0442\u0432\u0435\u0442\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434\n+* \u0418 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442**\n+\n+/// note | \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0438\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.",
        "comment_created_at": "2025-02-25T12:34:59+00:00",
        "comment_author": "Rishat-F",
        "comment_body": "\u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u0442\u0430\u043a, \u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0432\u043c\u0435\u0441\u0442\u043e \"\u043a\u043e\u0434\u0430 \u0432\u044b\u0445\u043e\u0434\u0430\" \u0438 \"exit code\" \u044f\u0432\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0448\u0435\u043c \u0447\u0442\u043e \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u0432\u0432\u0438\u0434\u0443 \"\u043a\u043e\u0434 \u043f\u043e\u0441\u043b\u0435 `yield`\"?",
        "pr_file_module": null
      },
      {
        "comment_id": "1969877865",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969674993",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (\u041f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439)\n+\n+\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (middleware) \u0432 **FastAPI** \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n+\n+\"Middleware\" \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0434\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 *\u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*.\n+\u0410 \u0442\u0430\u043a\u0436\u0435 \u0441 \u043a\u0430\u0436\u0434\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434 \u0435\u0433\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435\u043c.\n+\n+\n+* \u041e\u043d\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0438\u0439 **\u0437\u0430\u043f\u0440\u043e\u0441**\n+* \u041c\u043e\u0436\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c **\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434.\n+* \u0417\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432 *\u0444\u0443\u043d\u043a\u0446\u0438\u044e \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442** \u043e\u0442 *\u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430*\n+* \u041c\u043e\u0436\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u044d\u0442\u0438\u043c **\u043e\u0442\u0432\u0435\u0442\u043e\u043c** \u0438\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043e\u0434\n+* \u0418 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 **\u043e\u0442\u0432\u0435\u0442**\n+\n+/// note | \u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0435\u0442\u0430\u043b\u0438\n+\n+\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (exit code) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.",
        "comment_created_at": "2025-02-25T14:19:12+00:00",
        "comment_author": "alv2017",
        "comment_body": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u043e\u0436\u043d\u043e \u0442\u0430\u043a:\r\n\u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 `yield`, \u0442\u043e \u043a\u043e\u0434 \u0432\u044b\u0445\u043e\u0434\u0430 (\u043a\u043e\u0434 \u043f\u043e\u0441\u043b\u0435 `yield`) \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f *\u043f\u043e\u0441\u043b\u0435* middleware.\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1908876296",
    "pr_number": 13163,
    "pr_file": "docs/en/docs/advanced/async-tests.md",
    "created_at": "2025-01-09T14:11:55+00:00",
    "commented_code": "## In Detail\n \n-The marker `@pytest.mark.anyio` tells pytest that this test function should be called asynchronously:\n+The lifespan function demonstrates how to manage the lifecycle of application-wide resources. During the app's lifespan, we open a resource (`some_state_open`) at startup and clean it up (`some_state_close`) during shutdown.\n \n-{* ../../docs_src/async_tests/test_main.py hl[7] *}\n+We use **ASGITransport** from **HTTPX** to interact directly with the **FastAPI** app in an async test environment.\n \n-/// tip\n+When testing **FastAPI** apps with a custom lifespan, it's critical to manually trigger it in the test context to ensure proper setup and teardown of resources.\n \n-Note that the test function is now `async def` instead of just `def` as before when using the `TestClient`.\n+If you observe issues with state initialization or teardown in your tests, ensure that the lifespan is correctly invoked, and verify the app's state before and after requests.\n \n-///\n-\n-Then we can create an `AsyncClient` with the app, and send async requests to it, using `await`.\n-\n-{* ../../docs_src/async_tests/test_main.py hl[9:12] *}\n-\n-This is the equivalent to:\n-\n-```Python\n-response = client.get('/')\n-```\n-\n-...that we used to make our requests with the `TestClient`.\n-\n-/// tip\n-\n-Note that we're using async/await with the new `AsyncClient` - the request is asynchronous.\n-\n-///\n-\n-/// warning\n-\n-If your application relies on lifespan events, the `AsyncClient` won't trigger these events. To ensure they are triggered, use `LifespanManager` from <a href=\"https://github.com/florimondmanca/asgi-lifespan#usage\" class=\"external-link\" target=\"_blank\">florimondmanca/asgi-lifespan</a>.\n-\n-///\n \n ## Other Asynchronous Function Calls\n \n-As the testing function is now asynchronous, you can now also call (and `await`) other `async` functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n+As the testing function is now asynchronous, you can now also call (and await) other async functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n \n /// tip\n \n-If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests (e.g. when using <a href=\"https://stackoverflow.com/questions/41584243/runtimeerror-task-attached-to-a-different-loop\" class=\"external-link\" target=\"_blank\">MongoDB's MotorClient</a>), remember to instantiate objects that need an event loop only within async functions, e.g. an `'@app.on_event(\"startup\")` callback.\n+If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests, you can override the default pytest event loop using the following fixture:\n+\n+```python\n+@pytest.fixture(scope=\"session\")\n+def event_loop() -> Generator[AbstractEventLoop, None, None]:\n+    \"\"\"Overrides pytest default function scoped event loop\"\"\"\n+    policy = asyncio.get_event_loop_policy()",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1908876296",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13163,
        "pr_file": "docs/en/docs/advanced/async-tests.md",
        "discussion_id": "1908876296",
        "commented_code": "@@ -54,46 +59,31 @@ $ pytest\n \n ## In Detail\n \n-The marker `@pytest.mark.anyio` tells pytest that this test function should be called asynchronously:\n+The lifespan function demonstrates how to manage the lifecycle of application-wide resources. During the app's lifespan, we open a resource (`some_state_open`) at startup and clean it up (`some_state_close`) during shutdown.\n \n-{* ../../docs_src/async_tests/test_main.py hl[7] *}\n+We use **ASGITransport** from **HTTPX** to interact directly with the **FastAPI** app in an async test environment.\n \n-/// tip\n+When testing **FastAPI** apps with a custom lifespan, it's critical to manually trigger it in the test context to ensure proper setup and teardown of resources.\n \n-Note that the test function is now `async def` instead of just `def` as before when using the `TestClient`.\n+If you observe issues with state initialization or teardown in your tests, ensure that the lifespan is correctly invoked, and verify the app's state before and after requests.\n \n-///\n-\n-Then we can create an `AsyncClient` with the app, and send async requests to it, using `await`.\n-\n-{* ../../docs_src/async_tests/test_main.py hl[9:12] *}\n-\n-This is the equivalent to:\n-\n-```Python\n-response = client.get('/')\n-```\n-\n-...that we used to make our requests with the `TestClient`.\n-\n-/// tip\n-\n-Note that we're using async/await with the new `AsyncClient` - the request is asynchronous.\n-\n-///\n-\n-/// warning\n-\n-If your application relies on lifespan events, the `AsyncClient` won't trigger these events. To ensure they are triggered, use `LifespanManager` from <a href=\"https://github.com/florimondmanca/asgi-lifespan#usage\" class=\"external-link\" target=\"_blank\">florimondmanca/asgi-lifespan</a>.\n-\n-///\n \n ## Other Asynchronous Function Calls\n \n-As the testing function is now asynchronous, you can now also call (and `await`) other `async` functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n+As the testing function is now asynchronous, you can now also call (and await) other async functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n \n /// tip\n \n-If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests (e.g. when using <a href=\"https://stackoverflow.com/questions/41584243/runtimeerror-task-attached-to-a-different-loop\" class=\"external-link\" target=\"_blank\">MongoDB's MotorClient</a>), remember to instantiate objects that need an event loop only within async functions, e.g. an `'@app.on_event(\"startup\")` callback.\n+If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests, you can override the default pytest event loop using the following fixture:\n+\n+```python\n+@pytest.fixture(scope=\"session\")\n+def event_loop() -> Generator[AbstractEventLoop, None, None]:\n+    \"\"\"Overrides pytest default function scoped event loop\"\"\"\n+    policy = asyncio.get_event_loop_policy()",
        "comment_created_at": "2025-01-09T14:11:55+00:00",
        "comment_author": "graingert",
        "comment_body": "event loop policy is deprecated in 3.14 and will be removed",
        "pr_file_module": null
      },
      {
        "comment_id": "1909191086",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13163,
        "pr_file": "docs/en/docs/advanced/async-tests.md",
        "discussion_id": "1908876296",
        "commented_code": "@@ -54,46 +59,31 @@ $ pytest\n \n ## In Detail\n \n-The marker `@pytest.mark.anyio` tells pytest that this test function should be called asynchronously:\n+The lifespan function demonstrates how to manage the lifecycle of application-wide resources. During the app's lifespan, we open a resource (`some_state_open`) at startup and clean it up (`some_state_close`) during shutdown.\n \n-{* ../../docs_src/async_tests/test_main.py hl[7] *}\n+We use **ASGITransport** from **HTTPX** to interact directly with the **FastAPI** app in an async test environment.\n \n-/// tip\n+When testing **FastAPI** apps with a custom lifespan, it's critical to manually trigger it in the test context to ensure proper setup and teardown of resources.\n \n-Note that the test function is now `async def` instead of just `def` as before when using the `TestClient`.\n+If you observe issues with state initialization or teardown in your tests, ensure that the lifespan is correctly invoked, and verify the app's state before and after requests.\n \n-///\n-\n-Then we can create an `AsyncClient` with the app, and send async requests to it, using `await`.\n-\n-{* ../../docs_src/async_tests/test_main.py hl[9:12] *}\n-\n-This is the equivalent to:\n-\n-```Python\n-response = client.get('/')\n-```\n-\n-...that we used to make our requests with the `TestClient`.\n-\n-/// tip\n-\n-Note that we're using async/await with the new `AsyncClient` - the request is asynchronous.\n-\n-///\n-\n-/// warning\n-\n-If your application relies on lifespan events, the `AsyncClient` won't trigger these events. To ensure they are triggered, use `LifespanManager` from <a href=\"https://github.com/florimondmanca/asgi-lifespan#usage\" class=\"external-link\" target=\"_blank\">florimondmanca/asgi-lifespan</a>.\n-\n-///\n \n ## Other Asynchronous Function Calls\n \n-As the testing function is now asynchronous, you can now also call (and `await`) other `async` functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n+As the testing function is now asynchronous, you can now also call (and await) other async functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n \n /// tip\n \n-If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests (e.g. when using <a href=\"https://stackoverflow.com/questions/41584243/runtimeerror-task-attached-to-a-different-loop\" class=\"external-link\" target=\"_blank\">MongoDB's MotorClient</a>), remember to instantiate objects that need an event loop only within async functions, e.g. an `'@app.on_event(\"startup\")` callback.\n+If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests, you can override the default pytest event loop using the following fixture:\n+\n+```python\n+@pytest.fixture(scope=\"session\")\n+def event_loop() -> Generator[AbstractEventLoop, None, None]:\n+    \"\"\"Overrides pytest default function scoped event loop\"\"\"\n+    policy = asyncio.get_event_loop_policy()",
        "comment_created_at": "2025-01-09T17:19:00+00:00",
        "comment_author": "oleg-korshunov",
        "comment_body": "corrected description \r\n![image](https://github.com/user-attachments/assets/a9690aff-40a8-41d6-bd0b-d9ea80a1b7a4)\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1909240715",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13163,
        "pr_file": "docs/en/docs/advanced/async-tests.md",
        "discussion_id": "1908876296",
        "commented_code": "@@ -54,46 +59,31 @@ $ pytest\n \n ## In Detail\n \n-The marker `@pytest.mark.anyio` tells pytest that this test function should be called asynchronously:\n+The lifespan function demonstrates how to manage the lifecycle of application-wide resources. During the app's lifespan, we open a resource (`some_state_open`) at startup and clean it up (`some_state_close`) during shutdown.\n \n-{* ../../docs_src/async_tests/test_main.py hl[7] *}\n+We use **ASGITransport** from **HTTPX** to interact directly with the **FastAPI** app in an async test environment.\n \n-/// tip\n+When testing **FastAPI** apps with a custom lifespan, it's critical to manually trigger it in the test context to ensure proper setup and teardown of resources.\n \n-Note that the test function is now `async def` instead of just `def` as before when using the `TestClient`.\n+If you observe issues with state initialization or teardown in your tests, ensure that the lifespan is correctly invoked, and verify the app's state before and after requests.\n \n-///\n-\n-Then we can create an `AsyncClient` with the app, and send async requests to it, using `await`.\n-\n-{* ../../docs_src/async_tests/test_main.py hl[9:12] *}\n-\n-This is the equivalent to:\n-\n-```Python\n-response = client.get('/')\n-```\n-\n-...that we used to make our requests with the `TestClient`.\n-\n-/// tip\n-\n-Note that we're using async/await with the new `AsyncClient` - the request is asynchronous.\n-\n-///\n-\n-/// warning\n-\n-If your application relies on lifespan events, the `AsyncClient` won't trigger these events. To ensure they are triggered, use `LifespanManager` from <a href=\"https://github.com/florimondmanca/asgi-lifespan#usage\" class=\"external-link\" target=\"_blank\">florimondmanca/asgi-lifespan</a>.\n-\n-///\n \n ## Other Asynchronous Function Calls\n \n-As the testing function is now asynchronous, you can now also call (and `await`) other `async` functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n+As the testing function is now asynchronous, you can now also call (and await) other async functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n \n /// tip\n \n-If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests (e.g. when using <a href=\"https://stackoverflow.com/questions/41584243/runtimeerror-task-attached-to-a-different-loop\" class=\"external-link\" target=\"_blank\">MongoDB's MotorClient</a>), remember to instantiate objects that need an event loop only within async functions, e.g. an `'@app.on_event(\"startup\")` callback.\n+If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests, you can override the default pytest event loop using the following fixture:\n+\n+```python\n+@pytest.fixture(scope=\"session\")\n+def event_loop() -> Generator[AbstractEventLoop, None, None]:\n+    \"\"\"Overrides pytest default function scoped event loop\"\"\"\n+    policy = asyncio.get_event_loop_policy()",
        "comment_created_at": "2025-01-09T18:03:15+00:00",
        "comment_author": "graingert",
        "comment_body": "The deprecated event loop policy is still being used here",
        "pr_file_module": null
      },
      {
        "comment_id": "1909393805",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13163,
        "pr_file": "docs/en/docs/advanced/async-tests.md",
        "discussion_id": "1908876296",
        "commented_code": "@@ -54,46 +59,31 @@ $ pytest\n \n ## In Detail\n \n-The marker `@pytest.mark.anyio` tells pytest that this test function should be called asynchronously:\n+The lifespan function demonstrates how to manage the lifecycle of application-wide resources. During the app's lifespan, we open a resource (`some_state_open`) at startup and clean it up (`some_state_close`) during shutdown.\n \n-{* ../../docs_src/async_tests/test_main.py hl[7] *}\n+We use **ASGITransport** from **HTTPX** to interact directly with the **FastAPI** app in an async test environment.\n \n-/// tip\n+When testing **FastAPI** apps with a custom lifespan, it's critical to manually trigger it in the test context to ensure proper setup and teardown of resources.\n \n-Note that the test function is now `async def` instead of just `def` as before when using the `TestClient`.\n+If you observe issues with state initialization or teardown in your tests, ensure that the lifespan is correctly invoked, and verify the app's state before and after requests.\n \n-///\n-\n-Then we can create an `AsyncClient` with the app, and send async requests to it, using `await`.\n-\n-{* ../../docs_src/async_tests/test_main.py hl[9:12] *}\n-\n-This is the equivalent to:\n-\n-```Python\n-response = client.get('/')\n-```\n-\n-...that we used to make our requests with the `TestClient`.\n-\n-/// tip\n-\n-Note that we're using async/await with the new `AsyncClient` - the request is asynchronous.\n-\n-///\n-\n-/// warning\n-\n-If your application relies on lifespan events, the `AsyncClient` won't trigger these events. To ensure they are triggered, use `LifespanManager` from <a href=\"https://github.com/florimondmanca/asgi-lifespan#usage\" class=\"external-link\" target=\"_blank\">florimondmanca/asgi-lifespan</a>.\n-\n-///\n \n ## Other Asynchronous Function Calls\n \n-As the testing function is now asynchronous, you can now also call (and `await`) other `async` functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n+As the testing function is now asynchronous, you can now also call (and await) other async functions apart from sending requests to your FastAPI application in your tests, exactly as you would call them anywhere else in your code.\n \n /// tip\n \n-If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests (e.g. when using <a href=\"https://stackoverflow.com/questions/41584243/runtimeerror-task-attached-to-a-different-loop\" class=\"external-link\" target=\"_blank\">MongoDB's MotorClient</a>), remember to instantiate objects that need an event loop only within async functions, e.g. an `'@app.on_event(\"startup\")` callback.\n+If you encounter a `RuntimeError: Task attached to a different loop` when integrating asynchronous function calls in your tests, you can override the default pytest event loop using the following fixture:\n+\n+```python\n+@pytest.fixture(scope=\"session\")\n+def event_loop() -> Generator[AbstractEventLoop, None, None]:\n+    \"\"\"Overrides pytest default function scoped event loop\"\"\"\n+    policy = asyncio.get_event_loop_policy()",
        "comment_created_at": "2025-01-09T20:28:43+00:00",
        "comment_author": "oleg-korshunov",
        "comment_body": "corrected it to asyncio.Runner",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "477435684",
    "pr_number": 1945,
    "pr_file": "docs/ja/docs/tutorial/request-files.md",
    "created_at": "2020-08-26T16:35:46+00:00",
    "commented_code": "+# \u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\n+\n+\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306f`File`\u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+\n+!!! info \"\u60c5\u5831\"\n+    \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u53d7\u4fe1\u3059\u308b\u306b\u306f\u3001\u307e\u305a<a href=\"https://andrew-d.github.io/python-multipart/\" class=\"external-link\" target=\"_blank\">`python-multipart`</a>\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n+\n+    \u4f8b\u3048\u3070`pip install python-multipart`\u306e\u3088\u3046\u306b\u3002\n+\n+    \u3053\u308c\u306f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u300c\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u300d\u3068\u3057\u3066\u9001\u4fe1\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002\n+\n+## `File`\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n+\n+`fastapi`\u304b\u3089`File`\u3068`UploadFile`\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059:\n+\n+```Python hl_lines=\"1\"\n+{!../../../docs_src/request_files/tutorial001.py!}\n+```\n+\n+## `File`\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\n+\n+\u30d5\u30a1\u30a4\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u306f`Body`\u3084`Form`\u3068\u540c\u3058\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3059:\n+\n+```Python hl_lines=\"7\"\n+{!../../../docs_src/request_files/tutorial001.py!}\n+```\n+\n+!!! info \"\u60c5\u5831\"\n+    `File`\u306f`Form`\u3092\u76f4\u63a5\u7d99\u627f\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n+\n+    \u3057\u304b\u3057\u3001`fastapi`\u304b\u3089`Query`\u3084`Path`\u3001`File`\u306a\u3069\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u3001\u305d\u308c\u3089\u306f\u5b9f\u969b\u306b\u306f\u7279\u6b8a\u306a\u30af\u30e9\u30b9\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3042\u308b\u3053\u3068\u3092\u899a\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n+\n+!!! tip \"\u8c46\u77e5\u8b58\"\n+    \u30d5\u30a1\u30a4\u30eb\u306e\u30dc\u30c7\u30a3\u3092\u5ba3\u8a00\u3059\u308b\u306b\u306f\u3001`File`\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3084\u30dc\u30c7\u30a3\uff08JSON\uff09\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u3066\u3057\u307e\u3059\u304b\u3089\u3067\u3059\u3002\n+\n+\u30d5\u30a1\u30a4\u30eb\u306f\u300c\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u300d\u3068\u3057\u3066\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\n+\n+*path operation\u95a2\u6570*\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u578b\u3092`bytes`\u3068\u5ba3\u8a00\u3059\u308b\u3068\u3001**FastAPI** \u304c\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001`bytes`\u3068\u3057\u3066\u5185\u5bb9\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n+\n+\u3053\u308c\u306f\u3001\u5168\u4f53\u306e\u5185\u5bb9\u304c\u30e1\u30e2\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3053\u3068\u3092\u899a\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u5c0f\u3055\u306a\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306b\u306f\u3046\u307e\u304f\u3044\u304f\u3067\u3057\u3087\u3046\u3002\n+\n+`UploadFile`\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u6069\u6075\u3092\u53d7\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b1\u30fc\u30b9\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n+\n+## `UploadFile`\u3092\u6301\u3064`File`\u30d1\u30e9\u30e1\u30fc\u30bf\n+\n+`File`\u30d1\u30e9\u30e1\u30fc\u30bf\u3092`UploadFile`\u578b\u3067\u5b9a\u7fa9\u3057\u307e\u3059:\n+\n+```Python hl_lines=\"12\"\n+{!../../../docs_src/request_files/tutorial001.py!}\n+```\n+\n+`UploadFile`\u3092\u4f7f\u3046\u3053\u3068\u306f`bytes`\u3088\u308a\u3082\u3044\u304f\u3064\u304b\u306e\u5229\u70b9\u304c\u3042\u308a\u307e\u3059:\n+\n+* \u305d\u308c\u306f\u300cspooled\u300d\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059:\n+    * \u30b5\u30a4\u30ba\u306e\u4e0a\u9650\u307e\u3067\u30e1\u30e2\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u4e0a\u9650\u3092\u8d85\u3048\u308b\u3068\u30c7\u30a3\u30b9\u30af\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n+* \u753b\u50cf\u3084\u52d5\u753b\u3001\u5927\u304d\u306a\u30d0\u30a4\u30ca\u30ea\u306a\u3069\u306e\u5927\u304d\u306a\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u3001\u30e1\u30e2\u30ea\u3092\u6d88\u8cbb\u3059\u308b\u3053\u3068\u306a\u304f\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n+* \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+* <a href=\"https://docs.python.org/3/glossary.html#term-file-like-object\" class=\"external-link\" target=\"_blank\">file-like</a>`async`\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n+* \u3053\u308c\u306f\u5b9f\u969b\u306ePython\u306e<a href=\"https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile\" class=\"external-link\" target=\"_blank\">`SpooledTemporaryFile`</a>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u516c\u958b\u3057\u3066\u304a\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u30e9\u30a4\u30af\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u671f\u5f85\u3059\u308b\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u76f4\u63a5\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+\n+### `UploadFile`\n+\n+`UploadFile`\u306f\u4ee5\u4e0b\u306e\u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u307e\u3059:\n+\n+* `filename`: \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u5143\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6301\u3064`str`\uff08\u4f8b\uff1a`myimage.jpg`\uff09\u3002\n+* `content_type`: \u30b3\u30f3\u30c6\u30f3\u30c4\u30bf\u30a4\u30d7\uff08MIME\u30bf\u30a4\u30d7\u30fb\u30e1\u30c7\u30a3\u30a2\u30bf\u30a4\u30d7\uff09\u3092\u6301\u3064`str`\uff08\u4f8b\uff1a`image/jpeg`\uff09\u3002\n+* `file`: <a href=\"https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile\" class=\"external-link\" target=\"_blank\">`SpooledTemporaryFile`</a> (<a href=\"https://docs.python.org/3/glossary.html#term-file-like-object\" class=\"external-link\" target=\"_blank\">\u30d5\u30a1\u30a4\u30eb\u30e9\u30a4\u30af</a>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\u3002\u3053\u308c\u304c\u5b9f\u969b\u306ePython\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u300c\u30d5\u30a1\u30a4\u30eb\u30e9\u30a4\u30af\u300d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u671f\u5f85\u3059\u308b\u4ed6\u306e\u95a2\u6570\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u76f4\u63a5\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+\n+`UploadFile`\u306f\u4ee5\u4e0b\u306e`async`\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3059\u3079\u3066\uff08\u5185\u90e8\u306e`SpooledTemporaryFile`\u3092\u4f7f\u7528\u3057\u3066\uff09\u305d\u306e\u4e0b\u306b\u3042\u308b\u5bfe\u5fdc\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n+\n+* `write(data)`: \u30d5\u30a1\u30a4\u30eb\u306b`data`\uff08`str`\u307e\u305f\u306f`bytes`\uff09\u3092\u66f8\u304d\u8fbc\u3080\u3002\n+* `read(size)`: \u30d5\u30a1\u30a4\u30eb\u306e`size`\uff08`int`\uff09\u30d0\u30a4\u30c8\u30fb\u6587\u5b57\u3092\u8aad\u307f\u8fbc\u3080\u3002\n+* `seek(offset)`: \u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30a4\u30c8\u4f4d\u7f6e`offset`\uff08`int`\uff09\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n+    * \u4f8b\u3048\u3070\u3001`await myfile.seek(0)`\u306f\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n+    * \u3053\u308c\u306f\u3001`await myfile.read()`\u3092\u4e00\u5ea6\u5b9f\u884c\u3057\u305f\u5f8c\u3001\u518d\u5ea6\u5185\u5bb9\u3092\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u7279\u306b\u6709\u7528\u3067\u3059\u3002\n+* `close()`: \u30d5\u30a1\u30a4\u30eb\u3092\u9589\u3058\u307e\u3059\u3002\n+\n+\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3079\u3066`async`\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u300c\u5f85\u6a5f\uff08await\uff09\u300d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n+\n+\u4f8b\u3048\u3070\u3001`async`*path operation\u95a2\u6570*\u306e\u5185\u90e8\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n+\n+```Python\n+contents = await myfile.read()\n+```\n+\n+\u901a\u5e38\u306e`def`*path operation\u95a2\u6570*\u306e\u5185\u90e8\u306b\u3042\u308b\u5834\u5408\u3001\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b`UploadFile.file`\u306b\u76f4\u63a5\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n+\n+```Python\n+contents = myfile.file.read()\n+```\n+\n+!!! note \"`async` \u6280\u8853\u8a73\u7d30\"\n+    `async`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001**FastAPI** \u306f\u30d5\u30a1\u30a4\u30eb\u30e1\u30bd\u30c3\u30c9\u3092\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3067\u5b9f\u884c\u3057\u3001\u305d\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3061\u307e\u3059\u3002",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "477435684",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 1945,
        "pr_file": "docs/ja/docs/tutorial/request-files.md",
        "discussion_id": "477435684",
        "commented_code": "@@ -0,0 +1,145 @@\n+# \u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\n+\n+\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306f`File`\u3092\u7528\u3044\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+\n+!!! info \"\u60c5\u5831\"\n+    \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u53d7\u4fe1\u3059\u308b\u306b\u306f\u3001\u307e\u305a<a href=\"https://andrew-d.github.io/python-multipart/\" class=\"external-link\" target=\"_blank\">`python-multipart`</a>\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n+\n+    \u4f8b\u3048\u3070`pip install python-multipart`\u306e\u3088\u3046\u306b\u3002\n+\n+    \u3053\u308c\u306f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u300c\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u300d\u3068\u3057\u3066\u9001\u4fe1\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002\n+\n+## `File`\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n+\n+`fastapi`\u304b\u3089`File`\u3068`UploadFile`\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059:\n+\n+```Python hl_lines=\"1\"\n+{!../../../docs_src/request_files/tutorial001.py!}\n+```\n+\n+## `File`\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\n+\n+\u30d5\u30a1\u30a4\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u306f`Body`\u3084`Form`\u3068\u540c\u3058\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3059:\n+\n+```Python hl_lines=\"7\"\n+{!../../../docs_src/request_files/tutorial001.py!}\n+```\n+\n+!!! info \"\u60c5\u5831\"\n+    `File`\u306f`Form`\u3092\u76f4\u63a5\u7d99\u627f\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n+\n+    \u3057\u304b\u3057\u3001`fastapi`\u304b\u3089`Query`\u3084`Path`\u3001`File`\u306a\u3069\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\u3001\u305d\u308c\u3089\u306f\u5b9f\u969b\u306b\u306f\u7279\u6b8a\u306a\u30af\u30e9\u30b9\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3042\u308b\u3053\u3068\u3092\u899a\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n+\n+!!! tip \"\u8c46\u77e5\u8b58\"\n+    \u30d5\u30a1\u30a4\u30eb\u306e\u30dc\u30c7\u30a3\u3092\u5ba3\u8a00\u3059\u308b\u306b\u306f\u3001`File`\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3084\u30dc\u30c7\u30a3\uff08JSON\uff09\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u3066\u3057\u307e\u3059\u304b\u3089\u3067\u3059\u3002\n+\n+\u30d5\u30a1\u30a4\u30eb\u306f\u300c\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u300d\u3068\u3057\u3066\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\n+\n+*path operation\u95a2\u6570*\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u578b\u3092`bytes`\u3068\u5ba3\u8a00\u3059\u308b\u3068\u3001**FastAPI** \u304c\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001`bytes`\u3068\u3057\u3066\u5185\u5bb9\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n+\n+\u3053\u308c\u306f\u3001\u5168\u4f53\u306e\u5185\u5bb9\u304c\u30e1\u30e2\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3053\u3068\u3092\u899a\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u5c0f\u3055\u306a\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306b\u306f\u3046\u307e\u304f\u3044\u304f\u3067\u3057\u3087\u3046\u3002\n+\n+`UploadFile`\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u6069\u6075\u3092\u53d7\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b1\u30fc\u30b9\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n+\n+## `UploadFile`\u3092\u6301\u3064`File`\u30d1\u30e9\u30e1\u30fc\u30bf\n+\n+`File`\u30d1\u30e9\u30e1\u30fc\u30bf\u3092`UploadFile`\u578b\u3067\u5b9a\u7fa9\u3057\u307e\u3059:\n+\n+```Python hl_lines=\"12\"\n+{!../../../docs_src/request_files/tutorial001.py!}\n+```\n+\n+`UploadFile`\u3092\u4f7f\u3046\u3053\u3068\u306f`bytes`\u3088\u308a\u3082\u3044\u304f\u3064\u304b\u306e\u5229\u70b9\u304c\u3042\u308a\u307e\u3059:\n+\n+* \u305d\u308c\u306f\u300cspooled\u300d\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059:\n+    * \u30b5\u30a4\u30ba\u306e\u4e0a\u9650\u307e\u3067\u30e1\u30e2\u30ea\u306b\u4fdd\u5b58\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u4e0a\u9650\u3092\u8d85\u3048\u308b\u3068\u30c7\u30a3\u30b9\u30af\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n+* \u753b\u50cf\u3084\u52d5\u753b\u3001\u5927\u304d\u306a\u30d0\u30a4\u30ca\u30ea\u306a\u3069\u306e\u5927\u304d\u306a\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u3001\u30e1\u30e2\u30ea\u3092\u6d88\u8cbb\u3059\u308b\u3053\u3068\u306a\u304f\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n+* \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+* <a href=\"https://docs.python.org/3/glossary.html#term-file-like-object\" class=\"external-link\" target=\"_blank\">file-like</a>`async`\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n+* \u3053\u308c\u306f\u5b9f\u969b\u306ePython\u306e<a href=\"https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile\" class=\"external-link\" target=\"_blank\">`SpooledTemporaryFile`</a>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u516c\u958b\u3057\u3066\u304a\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u30e9\u30a4\u30af\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u671f\u5f85\u3059\u308b\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u76f4\u63a5\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+\n+### `UploadFile`\n+\n+`UploadFile`\u306f\u4ee5\u4e0b\u306e\u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u307e\u3059:\n+\n+* `filename`: \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u5143\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6301\u3064`str`\uff08\u4f8b\uff1a`myimage.jpg`\uff09\u3002\n+* `content_type`: \u30b3\u30f3\u30c6\u30f3\u30c4\u30bf\u30a4\u30d7\uff08MIME\u30bf\u30a4\u30d7\u30fb\u30e1\u30c7\u30a3\u30a2\u30bf\u30a4\u30d7\uff09\u3092\u6301\u3064`str`\uff08\u4f8b\uff1a`image/jpeg`\uff09\u3002\n+* `file`: <a href=\"https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile\" class=\"external-link\" target=\"_blank\">`SpooledTemporaryFile`</a> (<a href=\"https://docs.python.org/3/glossary.html#term-file-like-object\" class=\"external-link\" target=\"_blank\">\u30d5\u30a1\u30a4\u30eb\u30e9\u30a4\u30af</a>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\u3002\u3053\u308c\u304c\u5b9f\u969b\u306ePython\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u300c\u30d5\u30a1\u30a4\u30eb\u30e9\u30a4\u30af\u300d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u671f\u5f85\u3059\u308b\u4ed6\u306e\u95a2\u6570\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u76f4\u63a5\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+\n+`UploadFile`\u306f\u4ee5\u4e0b\u306e`async`\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3059\u3079\u3066\uff08\u5185\u90e8\u306e`SpooledTemporaryFile`\u3092\u4f7f\u7528\u3057\u3066\uff09\u305d\u306e\u4e0b\u306b\u3042\u308b\u5bfe\u5fdc\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n+\n+* `write(data)`: \u30d5\u30a1\u30a4\u30eb\u306b`data`\uff08`str`\u307e\u305f\u306f`bytes`\uff09\u3092\u66f8\u304d\u8fbc\u3080\u3002\n+* `read(size)`: \u30d5\u30a1\u30a4\u30eb\u306e`size`\uff08`int`\uff09\u30d0\u30a4\u30c8\u30fb\u6587\u5b57\u3092\u8aad\u307f\u8fbc\u3080\u3002\n+* `seek(offset)`: \u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30a4\u30c8\u4f4d\u7f6e`offset`\uff08`int`\uff09\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n+    * \u4f8b\u3048\u3070\u3001`await myfile.seek(0)`\u306f\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n+    * \u3053\u308c\u306f\u3001`await myfile.read()`\u3092\u4e00\u5ea6\u5b9f\u884c\u3057\u305f\u5f8c\u3001\u518d\u5ea6\u5185\u5bb9\u3092\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u7279\u306b\u6709\u7528\u3067\u3059\u3002\n+* `close()`: \u30d5\u30a1\u30a4\u30eb\u3092\u9589\u3058\u307e\u3059\u3002\n+\n+\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3079\u3066`async`\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u300c\u5f85\u6a5f\uff08await\uff09\u300d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n+\n+\u4f8b\u3048\u3070\u3001`async`*path operation\u95a2\u6570*\u306e\u5185\u90e8\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n+\n+```Python\n+contents = await myfile.read()\n+```\n+\n+\u901a\u5e38\u306e`def`*path operation\u95a2\u6570*\u306e\u5185\u90e8\u306b\u3042\u308b\u5834\u5408\u3001\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b`UploadFile.file`\u306b\u76f4\u63a5\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n+\n+```Python\n+contents = myfile.file.read()\n+```\n+\n+!!! note \"`async` \u6280\u8853\u8a73\u7d30\"\n+    `async`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001**FastAPI** \u306f\u30d5\u30a1\u30a4\u30eb\u30e1\u30bd\u30c3\u30c9\u3092\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3067\u5b9f\u884c\u3057\u3001\u305d\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3061\u307e\u3059\u3002",
        "comment_created_at": "2020-08-26T16:35:46+00:00",
        "comment_author": "tokusumi",
        "comment_body": "`async`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001**FastAPI** \u306f\u30d5\u30a1\u30a4\u30eb\u30e1\u30bd\u30c3\u30c9\u3092\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3067\u5b9f\u884c\u3057\u3001\u305d\u308c\u3089\u3092\u5f85\u6a5f\uff08await\uff09\u3057\u307e\u3059\u3002",
        "pr_file_module": null
      }
    ]
  }
]