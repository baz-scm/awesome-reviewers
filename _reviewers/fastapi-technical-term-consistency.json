[
  {
    "discussion_id": "1960935380",
    "pr_number": 13063,
    "pr_file": "docs/ko/docs/tutorial/extra-models.md",
    "created_at": "2025-02-19T04:31:21+00:00",
    "commented_code": "+# 추가 모델",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1960935380",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13063,
        "pr_file": "docs/ko/docs/tutorial/extra-models.md",
        "discussion_id": "1960935380",
        "commented_code": "@@ -0,0 +1,223 @@\n+# 추가 모델",
        "comment_created_at": "2025-02-19T04:31:21+00:00",
        "comment_author": "sodaMelon",
        "comment_body": "I think we have to focus on meaning of **extra** model.🤔\r\ncurrent Korean subject isn't clear when read this. \r\n\r\n``추가 모델``이라고 했는데, ``추가``라는 말이 엑스트라 모델에는 뜻이 잘 안드러나는 것 같아요. \r\n``여분 모델``이나 ``엑스트라 모델``을 그대로 쓰는 건 어떠세요? 한국에서는 ``엑스트라``라는 말을 자주 쓰긴 합니다.",
        "pr_file_module": null
      },
      {
        "comment_id": "1961204890",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13063,
        "pr_file": "docs/ko/docs/tutorial/extra-models.md",
        "discussion_id": "1960935380",
        "commented_code": "@@ -0,0 +1,223 @@\n+# 추가 모델",
        "comment_created_at": "2025-02-19T08:35:39+00:00",
        "comment_author": "timothy-jeong",
        "comment_body": "@sodaMelon \r\nThank you for your thorough review.\r\n\r\nI must admit that I had been pondering how best to translate the term `extra`. Initially, I prioritized examples from previously translated documents—most notably, the example at [FastAPI's Korean tutorial](https://fastapi.tiangolo.com/ko/tutorial/extra-data-types/), where `extra` was translated as `추가` (\"additional\").\r\n\r\nSince this document explains that it is not necessary to use only one Pydantic model to implement a particular use case, and that `additional` Pydantic models can also be used, I feel that `additional` better captures the intended nuance than `여분`.\r\n\r\nCould you please explain in detail which aspects led you to feel that `여분` was more appropriate?",
        "pr_file_module": null
      },
      {
        "comment_id": "1961230535",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13063,
        "pr_file": "docs/ko/docs/tutorial/extra-models.md",
        "discussion_id": "1960935380",
        "commented_code": "@@ -0,0 +1,223 @@\n+# 추가 모델",
        "comment_created_at": "2025-02-19T08:52:51+00:00",
        "comment_author": "sodaMelon",
        "comment_body": "ah i understood your ref.\r\ni thougth the context in the same kanji culture. \r\nnow, If that's your intention, no problem. 👍",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1948684958",
    "pr_number": 13333,
    "pr_file": "docs/ko/docs/tutorial/security/oauth2-jwt.md",
    "created_at": "2025-02-10T09:15:51+00:00",
    "commented_code": "+# 패스워드 해싱을 이용한 OAuth2, JWT 토큰을 사용하는 Bearer 인증\n+\n+모든 보안 흐름을 구성했으므로, 이제 <abbr title=\"JSON Web Tokens\">JWT</abbr> 토큰과 패스워드 해싱을 사용해 애플리케이션을 안전하게 만들 것입니다.\n+\n+이 코드는 실제로 애플리케이션에서 패스워드를 해싱하여 DB에 저장하는 등의 작업에 활용할 수 있습니다.\n+\n+이전 장에 이어서 시작해 봅시다.\n+\n+## JWT\n+\n+JWT 는 \"JSON Web Tokens\" 을 의미합니다.\n+\n+JSON 객체를 공백이 없는 긴 문자열로 인코딩하는 표준이며, 다음과 같은 형태입니다.\n+\n+```\n+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n+```\n+\n+JWT는 암호화되지 않아 누구든지 토큰에서 정보를 복원할 수 있습니다.\n+\n+하지만 서명되어 있으므로 자신이 발급한 토큰을 받았을 때, 실제로 자신이 발급한게 맞는지 검증할 수 있습니다.\n+\n+만료 기간이 일주일인 토큰을 발행했다고 가정해 봅시다. 다음 날 사용자가 토큰을 가져왔을 때, 그 사용자가 시스템에 여전히 로그인되어 있다는 것을 알 수 있습니다.\n+\n+일주일 뒤에는 토큰이 만료될 것이고, 사용자는 인증되지 않아 새 토큰을 받기 위해 다시 로그인해야 할 것입니다. 만약 사용자(또는 제3자)가 토큰을 수정하거나 만료일을 변경하면 서명이 일치하지 않아 알아챌 수 있을 것입니다.\n+\n+만약 JWT 토큰의 작동 방식을 알아보고 싶다면 <a href=\"https://jwt.io/\" class=\"external-link\" target=\"_blank\">https://jwt.io</a> 을 확인하십시오.\n+\n+## `PyJWT` 설치\n+\n+파이썬으로 JWT 토큰을 생성하고 검증하려면 `PyJWT` 를 설치해야 합니다.\n+\n+[가상환경](../../virtual-environments.md){.internal-link target=_blank} 을 만들고 활성화한 다음 `pyjwt` 를 설치하십시오.\n+\n+<div class=\"termy\">\n+\n+```console\n+$ pip install pyjwt\n+\n+---> 100%\n+```\n+\n+</div>\n+\n+/// info | 참고\n+\n+RSA나 ECDSA 같은 전자 서명 알고리즘을 사용하려면, `pyjwt[crypto]`라는 암호화 라이브러리 의존성을 설치해야 합니다.\n+\n+더 자세한 내용은 <a href=\"https://pyjwt.readthedocs.io/en/latest/installation.html\" class=\"external-link\" target=\"_blank\">PyJWT 설치</a> 에서 확인할 수 있습니다.\n+\n+///\n+\n+## 패스워드 해싱\n+\n+\"해싱(Hashing)\"은 어떤 내용(여기서는 패스워드)을 해석할 수 없는 일련의 바이트 집합(단순 문자열)으로 변환하는 것을 의미합니다.\n+\n+동일한 내용(똑같은 패스워드)을 해싱하면 동일한 문자열을 얻습니다.\n+\n+하지만 그 문자열을 다시 패스워드로 되돌릴 수는 없습니다.\n+\n+### 패스워드를 해싱하는 이유\n+\n+데이터베이스를 탈취당하더라도, 침입자는 사용자의 평문 패스워드 대신 해시 값만 얻을 수 있습니다.\n+\n+따라서 침입자는 훔친 사용자 패스워드를 다른 시스템에서 활용할 수 없습니다. (대다수 사용자가 여러 시스템에서 동일한 패스워드를 사용하기 때문에 평문 패스워드가 유출되면 위험합니다.)\n+\n+## `passlib` 설치\n+\n+PassLib는 패스워드 해시를 다루는 훌륭한 파이썬 패키지입니다.\n+\n+많은 안전한 해시 알고리즘과 도구들을 지원합니다.\n+\n+추천 알고리즘은 \"Bcrypt\"입니다.\n+\n+[가상환경](../../virtual-environments.md){.internal-link target=_blank} 을 만들고 활성화한 다음 PassLib와 Bcrypt를 설치하십시오.\n+\n+<div class=\"termy\">\n+\n+```console\n+$ pip install \"passlib[bcrypt]\"\n+\n+---> 100%\n+```\n+\n+</div>\n+\n+/// tip | 팁\n+\n+`passlib`를 사용하여, **Django**, **Flask** 의 보안 플러그인 등의 다른 도구로 생성한 패스워드도 읽도록 설정할 수 있습니다.\n+\n+예를 들자면, FastAPI 애플리케이션과 Django 애플리케이션이 같은 데이터베이스에서 데이터를 공유할 수 있습니다. 또는 같은 데이터베이스를 사용하여 Django 애플리케이션을 점진적으로 마이그레이션 할 수도 있습니다.\n+\n+그리고 사용자는 FastAPI 애플리케이션과 Django 애플리케이션에 동시에 로그인할 수 있습니다.\n+\n+///\n+\n+## 패스워드의 해시와 검증\n+\n+필요한 도구를 `passlib`에서 임포트합니다.\n+\n+PassLib \"컨텍스트(context)\"를 생성합니다. 이것은 패스워드를 해싱하고 검증하는데 사용합니다.\n+\n+/// tip | 팁\n+\n+PassLib 컨텍스트는 더 이상 사용되지 않는 오래된 해시 알고리즘을 포함해 다른 해시 알고리즘을 사용하고 검증하는 기능도 있습니다.\n+\n+예를 들어, 다른 시스템(Django 같은)에서 생성한 패스워드를 읽고 검증하고, 새 패스워드는 Bcrypt 처럼 다른 알고리즘으로 해싱하도록 사용할 수 있습니다.\n+\n+그리고 모든 알고리즘과 호환되도록 만들 수 있습니다.\n+\n+///\n+\n+사용자로부터 입력받은 패스워드를 해싱하는 함수를 생성합니다.\n+\n+그리고 입력받은 패스워드를 저장된 해시와 일치하는지 검증하는 또 다른 함수도 생성합니다.\n+\n+그리고 사용자를 인증하고 반환하는 또 다른 함수도 생성합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[8,49,56:57,60:61,70:76] *}\n+\n+/// note\n+\n+새로운(가짜) 데이터베이스 `fake_users_db`를 확인하면 해시 된 패스워드 이러한 형태로 저장되는 것을 확인 할 수 있습니다.\n+`\"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\"`.\n+\n+///\n+\n+## JWT 토큰 처리\n+\n+설치된 모듈을 임포트 합니다.\n+\n+JWT 토큰 서명에 사용될 임의의 비밀 키를 생성합니다.\n+\n+안전한 임의의 비밀 키를 생성하려면 다음 명령어를 사용하십시오.\n+\n+<div class=\"termy\">\n+\n+```console\n+$ openssl rand -hex 32\n+\n+09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\n+```\n+\n+</div>\n+\n+그리고 생성한 비밀 키를 복사해 변수 `SECRET_KEY`에 대입합니다. (이 예제의 변수 값을 그대로 사용하지 마십시오.)\n+\n+JWT 토큰을 서명하는 데 사용될 알고리즘을 위한 변수 `ALGORITHM` 을 생성하고 `\"HS256\"` 으로 설정합니다.\n+\n+토큰 만료 기간을 위한 변수를 생성합니다.\n+\n+통신 간 토큰 응답에 사용될 Pydantic 모델을 정의합니다.\n+\n+새로운 액세스 토큰을 생성하기 위한 함수를 생성합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[4,7,13:15,29:31,79:87] *}\n+\n+## 의존성 수정\n+\n+`get_current_user` 함수를 이전과 동일한 토큰을 받도록 수정하되, 이번에는 JWT 토큰을 사용하도록 합니다.\n+\n+받은 토큰을 디코딩하고 검증한 후 현재 사용자를 반환합니다.\n+\n+토큰이 유효하지 않다면 HTTP 오류를 반환합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[90:107] *}\n+\n+## `/token` 경로 작업 수정\n+\n+토큰의 만료 시각을 설정하기 위해 `timedelta` 를 생성합니다.\n+\n+실제 JWT 액세스 토큰을 생성하여 반환합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[118:133] *}\n+\n+### JWT \"주제(subject)\" `sub`에 대한 기술 세부 사항",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1948684958",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13333,
        "pr_file": "docs/ko/docs/tutorial/security/oauth2-jwt.md",
        "discussion_id": "1948684958",
        "commented_code": "@@ -0,0 +1,275 @@\n+# 패스워드 해싱을 이용한 OAuth2, JWT 토큰을 사용하는 Bearer 인증\n+\n+모든 보안 흐름을 구성했으므로, 이제 <abbr title=\"JSON Web Tokens\">JWT</abbr> 토큰과 패스워드 해싱을 사용해 애플리케이션을 안전하게 만들 것입니다.\n+\n+이 코드는 실제로 애플리케이션에서 패스워드를 해싱하여 DB에 저장하는 등의 작업에 활용할 수 있습니다.\n+\n+이전 장에 이어서 시작해 봅시다.\n+\n+## JWT\n+\n+JWT 는 \"JSON Web Tokens\" 을 의미합니다.\n+\n+JSON 객체를 공백이 없는 긴 문자열로 인코딩하는 표준이며, 다음과 같은 형태입니다.\n+\n+```\n+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n+```\n+\n+JWT는 암호화되지 않아 누구든지 토큰에서 정보를 복원할 수 있습니다.\n+\n+하지만 서명되어 있으므로 자신이 발급한 토큰을 받았을 때, 실제로 자신이 발급한게 맞는지 검증할 수 있습니다.\n+\n+만료 기간이 일주일인 토큰을 발행했다고 가정해 봅시다. 다음 날 사용자가 토큰을 가져왔을 때, 그 사용자가 시스템에 여전히 로그인되어 있다는 것을 알 수 있습니다.\n+\n+일주일 뒤에는 토큰이 만료될 것이고, 사용자는 인증되지 않아 새 토큰을 받기 위해 다시 로그인해야 할 것입니다. 만약 사용자(또는 제3자)가 토큰을 수정하거나 만료일을 변경하면 서명이 일치하지 않아 알아챌 수 있을 것입니다.\n+\n+만약 JWT 토큰의 작동 방식을 알아보고 싶다면 <a href=\"https://jwt.io/\" class=\"external-link\" target=\"_blank\">https://jwt.io</a> 을 확인하십시오.\n+\n+## `PyJWT` 설치\n+\n+파이썬으로 JWT 토큰을 생성하고 검증하려면 `PyJWT` 를 설치해야 합니다.\n+\n+[가상환경](../../virtual-environments.md){.internal-link target=_blank} 을 만들고 활성화한 다음 `pyjwt` 를 설치하십시오.\n+\n+<div class=\"termy\">\n+\n+```console\n+$ pip install pyjwt\n+\n+---> 100%\n+```\n+\n+</div>\n+\n+/// info | 참고\n+\n+RSA나 ECDSA 같은 전자 서명 알고리즘을 사용하려면, `pyjwt[crypto]`라는 암호화 라이브러리 의존성을 설치해야 합니다.\n+\n+더 자세한 내용은 <a href=\"https://pyjwt.readthedocs.io/en/latest/installation.html\" class=\"external-link\" target=\"_blank\">PyJWT 설치</a> 에서 확인할 수 있습니다.\n+\n+///\n+\n+## 패스워드 해싱\n+\n+\"해싱(Hashing)\"은 어떤 내용(여기서는 패스워드)을 해석할 수 없는 일련의 바이트 집합(단순 문자열)으로 변환하는 것을 의미합니다.\n+\n+동일한 내용(똑같은 패스워드)을 해싱하면 동일한 문자열을 얻습니다.\n+\n+하지만 그 문자열을 다시 패스워드로 되돌릴 수는 없습니다.\n+\n+### 패스워드를 해싱하는 이유\n+\n+데이터베이스를 탈취당하더라도, 침입자는 사용자의 평문 패스워드 대신 해시 값만 얻을 수 있습니다.\n+\n+따라서 침입자는 훔친 사용자 패스워드를 다른 시스템에서 활용할 수 없습니다. (대다수 사용자가 여러 시스템에서 동일한 패스워드를 사용하기 때문에 평문 패스워드가 유출되면 위험합니다.)\n+\n+## `passlib` 설치\n+\n+PassLib는 패스워드 해시를 다루는 훌륭한 파이썬 패키지입니다.\n+\n+많은 안전한 해시 알고리즘과 도구들을 지원합니다.\n+\n+추천 알고리즘은 \"Bcrypt\"입니다.\n+\n+[가상환경](../../virtual-environments.md){.internal-link target=_blank} 을 만들고 활성화한 다음 PassLib와 Bcrypt를 설치하십시오.\n+\n+<div class=\"termy\">\n+\n+```console\n+$ pip install \"passlib[bcrypt]\"\n+\n+---> 100%\n+```\n+\n+</div>\n+\n+/// tip | 팁\n+\n+`passlib`를 사용하여, **Django**, **Flask** 의 보안 플러그인 등의 다른 도구로 생성한 패스워드도 읽도록 설정할 수 있습니다.\n+\n+예를 들자면, FastAPI 애플리케이션과 Django 애플리케이션이 같은 데이터베이스에서 데이터를 공유할 수 있습니다. 또는 같은 데이터베이스를 사용하여 Django 애플리케이션을 점진적으로 마이그레이션 할 수도 있습니다.\n+\n+그리고 사용자는 FastAPI 애플리케이션과 Django 애플리케이션에 동시에 로그인할 수 있습니다.\n+\n+///\n+\n+## 패스워드의 해시와 검증\n+\n+필요한 도구를 `passlib`에서 임포트합니다.\n+\n+PassLib \"컨텍스트(context)\"를 생성합니다. 이것은 패스워드를 해싱하고 검증하는데 사용합니다.\n+\n+/// tip | 팁\n+\n+PassLib 컨텍스트는 더 이상 사용되지 않는 오래된 해시 알고리즘을 포함해 다른 해시 알고리즘을 사용하고 검증하는 기능도 있습니다.\n+\n+예를 들어, 다른 시스템(Django 같은)에서 생성한 패스워드를 읽고 검증하고, 새 패스워드는 Bcrypt 처럼 다른 알고리즘으로 해싱하도록 사용할 수 있습니다.\n+\n+그리고 모든 알고리즘과 호환되도록 만들 수 있습니다.\n+\n+///\n+\n+사용자로부터 입력받은 패스워드를 해싱하는 함수를 생성합니다.\n+\n+그리고 입력받은 패스워드를 저장된 해시와 일치하는지 검증하는 또 다른 함수도 생성합니다.\n+\n+그리고 사용자를 인증하고 반환하는 또 다른 함수도 생성합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[8,49,56:57,60:61,70:76] *}\n+\n+/// note\n+\n+새로운(가짜) 데이터베이스 `fake_users_db`를 확인하면 해시 된 패스워드 이러한 형태로 저장되는 것을 확인 할 수 있습니다.\n+`\"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\"`.\n+\n+///\n+\n+## JWT 토큰 처리\n+\n+설치된 모듈을 임포트 합니다.\n+\n+JWT 토큰 서명에 사용될 임의의 비밀 키를 생성합니다.\n+\n+안전한 임의의 비밀 키를 생성하려면 다음 명령어를 사용하십시오.\n+\n+<div class=\"termy\">\n+\n+```console\n+$ openssl rand -hex 32\n+\n+09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\n+```\n+\n+</div>\n+\n+그리고 생성한 비밀 키를 복사해 변수 `SECRET_KEY`에 대입합니다. (이 예제의 변수 값을 그대로 사용하지 마십시오.)\n+\n+JWT 토큰을 서명하는 데 사용될 알고리즘을 위한 변수 `ALGORITHM` 을 생성하고 `\"HS256\"` 으로 설정합니다.\n+\n+토큰 만료 기간을 위한 변수를 생성합니다.\n+\n+통신 간 토큰 응답에 사용될 Pydantic 모델을 정의합니다.\n+\n+새로운 액세스 토큰을 생성하기 위한 함수를 생성합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[4,7,13:15,29:31,79:87] *}\n+\n+## 의존성 수정\n+\n+`get_current_user` 함수를 이전과 동일한 토큰을 받도록 수정하되, 이번에는 JWT 토큰을 사용하도록 합니다.\n+\n+받은 토큰을 디코딩하고 검증한 후 현재 사용자를 반환합니다.\n+\n+토큰이 유효하지 않다면 HTTP 오류를 반환합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[90:107] *}\n+\n+## `/token` 경로 작업 수정\n+\n+토큰의 만료 시각을 설정하기 위해 `timedelta` 를 생성합니다.\n+\n+실제 JWT 액세스 토큰을 생성하여 반환합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[118:133] *}\n+\n+### JWT \"주제(subject)\" `sub`에 대한 기술 세부 사항",
        "comment_created_at": "2025-02-10T09:15:51+00:00",
        "comment_author": "timothy-jeong",
        "comment_body": "```suggestion\r\n### JWT \"주체(subject)\" `sub`에 대한 기술 세부 사항\r\n```\r\nin general \"subject\" can be translated to \"주제\" in korean, but when it comes to JWT it is more natural with \"주체\". because as this document says, sub contains 'user's identifier' its mean sub contains who owned this token\r\n\r\nmore solid [specification](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.2) is here, just for fun!",
        "pr_file_module": null
      },
      {
        "comment_id": "1951227634",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13333,
        "pr_file": "docs/ko/docs/tutorial/security/oauth2-jwt.md",
        "discussion_id": "1948684958",
        "commented_code": "@@ -0,0 +1,275 @@\n+# 패스워드 해싱을 이용한 OAuth2, JWT 토큰을 사용하는 Bearer 인증\n+\n+모든 보안 흐름을 구성했으므로, 이제 <abbr title=\"JSON Web Tokens\">JWT</abbr> 토큰과 패스워드 해싱을 사용해 애플리케이션을 안전하게 만들 것입니다.\n+\n+이 코드는 실제로 애플리케이션에서 패스워드를 해싱하여 DB에 저장하는 등의 작업에 활용할 수 있습니다.\n+\n+이전 장에 이어서 시작해 봅시다.\n+\n+## JWT\n+\n+JWT 는 \"JSON Web Tokens\" 을 의미합니다.\n+\n+JSON 객체를 공백이 없는 긴 문자열로 인코딩하는 표준이며, 다음과 같은 형태입니다.\n+\n+```\n+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n+```\n+\n+JWT는 암호화되지 않아 누구든지 토큰에서 정보를 복원할 수 있습니다.\n+\n+하지만 서명되어 있으므로 자신이 발급한 토큰을 받았을 때, 실제로 자신이 발급한게 맞는지 검증할 수 있습니다.\n+\n+만료 기간이 일주일인 토큰을 발행했다고 가정해 봅시다. 다음 날 사용자가 토큰을 가져왔을 때, 그 사용자가 시스템에 여전히 로그인되어 있다는 것을 알 수 있습니다.\n+\n+일주일 뒤에는 토큰이 만료될 것이고, 사용자는 인증되지 않아 새 토큰을 받기 위해 다시 로그인해야 할 것입니다. 만약 사용자(또는 제3자)가 토큰을 수정하거나 만료일을 변경하면 서명이 일치하지 않아 알아챌 수 있을 것입니다.\n+\n+만약 JWT 토큰의 작동 방식을 알아보고 싶다면 <a href=\"https://jwt.io/\" class=\"external-link\" target=\"_blank\">https://jwt.io</a> 을 확인하십시오.\n+\n+## `PyJWT` 설치\n+\n+파이썬으로 JWT 토큰을 생성하고 검증하려면 `PyJWT` 를 설치해야 합니다.\n+\n+[가상환경](../../virtual-environments.md){.internal-link target=_blank} 을 만들고 활성화한 다음 `pyjwt` 를 설치하십시오.\n+\n+<div class=\"termy\">\n+\n+```console\n+$ pip install pyjwt\n+\n+---> 100%\n+```\n+\n+</div>\n+\n+/// info | 참고\n+\n+RSA나 ECDSA 같은 전자 서명 알고리즘을 사용하려면, `pyjwt[crypto]`라는 암호화 라이브러리 의존성을 설치해야 합니다.\n+\n+더 자세한 내용은 <a href=\"https://pyjwt.readthedocs.io/en/latest/installation.html\" class=\"external-link\" target=\"_blank\">PyJWT 설치</a> 에서 확인할 수 있습니다.\n+\n+///\n+\n+## 패스워드 해싱\n+\n+\"해싱(Hashing)\"은 어떤 내용(여기서는 패스워드)을 해석할 수 없는 일련의 바이트 집합(단순 문자열)으로 변환하는 것을 의미합니다.\n+\n+동일한 내용(똑같은 패스워드)을 해싱하면 동일한 문자열을 얻습니다.\n+\n+하지만 그 문자열을 다시 패스워드로 되돌릴 수는 없습니다.\n+\n+### 패스워드를 해싱하는 이유\n+\n+데이터베이스를 탈취당하더라도, 침입자는 사용자의 평문 패스워드 대신 해시 값만 얻을 수 있습니다.\n+\n+따라서 침입자는 훔친 사용자 패스워드를 다른 시스템에서 활용할 수 없습니다. (대다수 사용자가 여러 시스템에서 동일한 패스워드를 사용하기 때문에 평문 패스워드가 유출되면 위험합니다.)\n+\n+## `passlib` 설치\n+\n+PassLib는 패스워드 해시를 다루는 훌륭한 파이썬 패키지입니다.\n+\n+많은 안전한 해시 알고리즘과 도구들을 지원합니다.\n+\n+추천 알고리즘은 \"Bcrypt\"입니다.\n+\n+[가상환경](../../virtual-environments.md){.internal-link target=_blank} 을 만들고 활성화한 다음 PassLib와 Bcrypt를 설치하십시오.\n+\n+<div class=\"termy\">\n+\n+```console\n+$ pip install \"passlib[bcrypt]\"\n+\n+---> 100%\n+```\n+\n+</div>\n+\n+/// tip | 팁\n+\n+`passlib`를 사용하여, **Django**, **Flask** 의 보안 플러그인 등의 다른 도구로 생성한 패스워드도 읽도록 설정할 수 있습니다.\n+\n+예를 들자면, FastAPI 애플리케이션과 Django 애플리케이션이 같은 데이터베이스에서 데이터를 공유할 수 있습니다. 또는 같은 데이터베이스를 사용하여 Django 애플리케이션을 점진적으로 마이그레이션 할 수도 있습니다.\n+\n+그리고 사용자는 FastAPI 애플리케이션과 Django 애플리케이션에 동시에 로그인할 수 있습니다.\n+\n+///\n+\n+## 패스워드의 해시와 검증\n+\n+필요한 도구를 `passlib`에서 임포트합니다.\n+\n+PassLib \"컨텍스트(context)\"를 생성합니다. 이것은 패스워드를 해싱하고 검증하는데 사용합니다.\n+\n+/// tip | 팁\n+\n+PassLib 컨텍스트는 더 이상 사용되지 않는 오래된 해시 알고리즘을 포함해 다른 해시 알고리즘을 사용하고 검증하는 기능도 있습니다.\n+\n+예를 들어, 다른 시스템(Django 같은)에서 생성한 패스워드를 읽고 검증하고, 새 패스워드는 Bcrypt 처럼 다른 알고리즘으로 해싱하도록 사용할 수 있습니다.\n+\n+그리고 모든 알고리즘과 호환되도록 만들 수 있습니다.\n+\n+///\n+\n+사용자로부터 입력받은 패스워드를 해싱하는 함수를 생성합니다.\n+\n+그리고 입력받은 패스워드를 저장된 해시와 일치하는지 검증하는 또 다른 함수도 생성합니다.\n+\n+그리고 사용자를 인증하고 반환하는 또 다른 함수도 생성합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[8,49,56:57,60:61,70:76] *}\n+\n+/// note\n+\n+새로운(가짜) 데이터베이스 `fake_users_db`를 확인하면 해시 된 패스워드 이러한 형태로 저장되는 것을 확인 할 수 있습니다.\n+`\"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\"`.\n+\n+///\n+\n+## JWT 토큰 처리\n+\n+설치된 모듈을 임포트 합니다.\n+\n+JWT 토큰 서명에 사용될 임의의 비밀 키를 생성합니다.\n+\n+안전한 임의의 비밀 키를 생성하려면 다음 명령어를 사용하십시오.\n+\n+<div class=\"termy\">\n+\n+```console\n+$ openssl rand -hex 32\n+\n+09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\n+```\n+\n+</div>\n+\n+그리고 생성한 비밀 키를 복사해 변수 `SECRET_KEY`에 대입합니다. (이 예제의 변수 값을 그대로 사용하지 마십시오.)\n+\n+JWT 토큰을 서명하는 데 사용될 알고리즘을 위한 변수 `ALGORITHM` 을 생성하고 `\"HS256\"` 으로 설정합니다.\n+\n+토큰 만료 기간을 위한 변수를 생성합니다.\n+\n+통신 간 토큰 응답에 사용될 Pydantic 모델을 정의합니다.\n+\n+새로운 액세스 토큰을 생성하기 위한 함수를 생성합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[4,7,13:15,29:31,79:87] *}\n+\n+## 의존성 수정\n+\n+`get_current_user` 함수를 이전과 동일한 토큰을 받도록 수정하되, 이번에는 JWT 토큰을 사용하도록 합니다.\n+\n+받은 토큰을 디코딩하고 검증한 후 현재 사용자를 반환합니다.\n+\n+토큰이 유효하지 않다면 HTTP 오류를 반환합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[90:107] *}\n+\n+## `/token` 경로 작업 수정\n+\n+토큰의 만료 시각을 설정하기 위해 `timedelta` 를 생성합니다.\n+\n+실제 JWT 액세스 토큰을 생성하여 반환합니다.\n+\n+{* ../../docs_src/security/tutorial004_an_py310.py hl[118:133] *}\n+\n+### JWT \"주제(subject)\" `sub`에 대한 기술 세부 사항",
        "comment_created_at": "2025-02-11T16:54:40+00:00",
        "comment_author": "yes0ng",
        "comment_body": "Thank you for the feedback. I have applied the suggested changes.\r\n\r\nI looked up the meanings of \"[주제](https://ko.dict.naver.com/#/entry/koko/13fe731acbee494d9af254a3f41e4a72\r\n)\" and \"[주체](https://ko.dict.naver.com/#/entry/koko/6c77c156f4e44b6d87a5a79b62ea5606)\" and I believe \"주체\" is more appropriate.\r\nAdditionally, I searched for how \"subject\" in JWT is commonly translated. But unfortunately, I couldn't find any other Korean documents.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1969775793",
    "pr_number": 13412,
    "pr_file": "docs/ru/docs/tutorial/middleware.md",
    "created_at": "2025-02-25T13:22:32+00:00",
    "commented_code": "+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1969775793",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-25T13:22:32+00:00",
        "comment_author": "Yarous",
        "comment_body": "не знаю, как лучше, но в оригинале используется \"path operation\", да и в других местах доки это называют операцией пути",
        "pr_file_module": null
      },
      {
        "comment_id": "1970288027",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-25T18:01:32+00:00",
        "comment_author": "alv2017",
        "comment_body": "@Yarous: имхо, *функция эндпоинта* понятнее и используется чаще.  Но можно и обсудить. :blush:\r\n\r\n\r\n> \"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.\r\n\r\n> \"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *операцией пути*.\r\n\r\n[\"эндпоинт at fastapi.tiangolo.com\"](https://www.google.com/search?q=%22%D1%8D%D0%BD%D0%B4%D0%BF%D0%BE%D0%B8%D0%BD%D1%82%22+site%3Afastapi.tiangolo.com)",
        "pr_file_module": null
      },
      {
        "comment_id": "1970323429",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-25T18:26:37+00:00",
        "comment_author": "Rishat-F",
        "comment_body": "Я согласен с @Yarous.\r\n@alv2017, ведь в переводе \"Большие приложения, в которых много файлов\", ты все \"_path operation_\" перевела либо как \"_операция пути_\", либо как \"_эндпоинт_\".\r\nА \"_функция операции пути_\" или \"_функция эндпоинта_\" - это уже \"_operation path function_\".",
        "pr_file_module": null
      },
      {
        "comment_id": "1970345741",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-25T18:44:23+00:00",
        "comment_author": "alv2017",
        "comment_body": "я исхожу из контекста, в данном контексте нужно переводить operation как функцию (тут проблем нет), а\r\npath как эндпоинт  (это некорректно с точки зрения русского языка)\r\n\r\nвообще-то, если дословно, то \"path operation\" = \"функция пути\"\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1970360571",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-25T18:56:19+00:00",
        "comment_author": "Rishat-F",
        "comment_body": "Исходя из предыдущих переводов я думал так:\r\n\"path operation\" = \"операция пути\" или \"эндпоинт\"\r\n\"path operation function\" = \"функция операции пути\" или \"функция эндпоинта\"",
        "pr_file_module": null
      },
      {
        "comment_id": "1970367211",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-25T19:01:28+00:00",
        "comment_author": "Rishat-F",
        "comment_body": "И под \"path operation\" подрузумевается вся вот эта конструкция:\r\n\r\n@app.get(\"/\")\r\nasync def root():\r\n    return {\"message\": \"Hello World\"}\r\n\r\nгде `async def root()` является \"функцией операции пути\" или \"функцией эндпоинта\"",
        "pr_file_module": null
      },
      {
        "comment_id": "1970506470",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-25T20:35:52+00:00",
        "comment_author": "alv2017",
        "comment_body": "@Rishat-F , @Yarous, всё, я вас услышала, теперь понятно, что вы имеете в виду \r\nHello, World! : или место встречи изменить нельзя :smile:\r\n\r\nИсправляю на операцию пути. :smile:",
        "pr_file_module": null
      },
      {
        "comment_id": "1973943896",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-27T16:28:58+00:00",
        "comment_author": "alv2017",
        "comment_body": "@Rishat-F \r\n\r\nendpoint -> url\r\npass operations -> набор функций/операций, обслуживающих запросы на определенный url\r\npass operation -> \"операция пути\" ~ \"операция эндпоинта\" ~ \"функция эндпоинта\"\r\npath operation decorator: `@app.get(\"/\")`\r\npath operation function: `async def root()`",
        "pr_file_module": null
      },
      {
        "comment_id": "1974065899",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-27T17:42:10+00:00",
        "comment_author": "Rishat-F",
        "comment_body": "@alv2017 , разве мы не можем просто следующим образом переводить:\r\n- если в оригинале написано \"path operation\", то переводим \"операция пути\"\r\n- если в оригинале написано \"path operation function\", то переводим \"функция операции пути\"\r\n\r\n?",
        "pr_file_module": null
      },
      {
        "comment_id": "1974100758",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-27T18:07:23+00:00",
        "comment_author": "alv2017",
        "comment_body": "@Rishat-F \r\n1) можем, но это не всегда работает.\r\n2) операция пути не( самый )удачный термин, и в обычной жизни не используется\r\n3) и хочется объяснить более доступно, но не всегда получается :blush:\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1974121367",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-27T18:21:57+00:00",
        "comment_author": "Rishat-F",
        "comment_body": "@alv2017 , но ведь мы можем пока придерживаться такой (пусть и не самой удачной) терминологии, просто чтобы везде было однообразно.\r\nИ потом если кому-то в голову придет более удачный термин, то тогда массово разом везде поправить.\r\nИ если везде будут одинаковые неудачные термины, то массово поправить будет легче, чем если они будут везде по-разному прописаны.",
        "pr_file_module": null
      },
      {
        "comment_id": "1974479615",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13412,
        "pr_file": "docs/ru/docs/tutorial/middleware.md",
        "discussion_id": "1969775793",
        "commented_code": "@@ -0,0 +1,74 @@\n+# Middleware (Промежуточный слой)\n+\n+Вы можете добавить промежуточный слой (middleware) в **FastAPI** приложения.\n+\n+\"Middleware\" это функция, которая выполняется с каждым запросом до его обработки *функцией эндпоинта*.",
        "comment_created_at": "2025-02-27T23:16:53+00:00",
        "comment_author": "alv2017",
        "comment_body": "@Rishat-F, мы такой стратегии и придерживаемся, разве нет? :smile:",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1966722372",
    "pr_number": 13330,
    "pr_file": "docs/ja/docs/tutorial/cookie-param-models.md",
    "created_at": "2025-02-23T09:30:00+00:00",
    "commented_code": "+# クッキーパラメータモデル\n+\n+もし関連する**複数のクッキー**から成るグループがあるなら、それらを宣言するために、**Pydanticモデル**を作成できます。🍪\n+\n+こうすることで、**複数の場所**で**そのPydanticモデルを再利用**でき、バリデーションやメタデータを、すべてのクッキーパラメータに対して一度に宣言できます。😎\n+\n+/// note | 備考\n+\n+この機能は、FastAPIのバージョン `0.115.0` からサポートされています。🤓\n+\n+///\n+\n+/// tip | 豆知識\n+\n+これと同じテクニックは `Query` 、 `Cookie` 、 `Header` にも適用できます。 😎\n+\n+///\n+\n+## クッキーにPydanticモデルを使用する\n+\n+必要な複数の**クッキー**パラメータを**Pydanticモデル**で宣言し、さらに、それを `Cookie` として宣言しましょう:\n+\n+{* ../../docs_src/cookie_param_models/tutorial001_an_py310.py hl[9:12,16] *}\n+\n+**FastAPI**は、リクエストの**クッキー**から**それぞれのフィールド**のデータを**抽出**し、定義された**Pydanticモデル**を提供します。\n+\n+## ドキュメントの確認\n+\n+対話的APIドキュメントUI `/docs` で、定義されているクッキーを確認できます:\n+\n+<div class=\"screenshot\">\n+<img src=\"/img/tutorial/cookie-param-models/image01.png\">\n+</div>\n+\n+/// info | 備考\n+\n+\n+**ブラウザがクッキーを処理し**ていますが、特別な方法で内部的に処理を行っているために、**JavaScript**からは簡単に操作**できない**ことに留意してください。\n+\n+**対話的APIドキュメントUI** `/docs` にアクセスすれば、*パスオペレーション*に関するクッキーの**ドキュメンテーション**を確認できます。\n+\n+しかし、たとえ**クッキーデータを入力して**「Execute」をクリックしても、対話的APIドキュメントUIは**JavaScript**で動作しているためクッキーは送信されず、まるで値を入力しなかったかのような**エラー**メッセージが表示されます。\n+\n+///\n+\n+## 余分なクッキーを禁止する\n+\n+特定の（あまり一般的ではないかもしれない）ケースで、受け付けるクッキーを**制限**する必要があるかもしれません。\n+\n+あなたのAPIは独自の <abbr title=\"念のためですが、これはジョークです。クッキー同意とは関係ありませんが、APIでさえ不適切なクッキーを拒否できるとは愉快ですね。クッキーでも食べてでください。🍪 （原文: This is a joke, just in case. It has nothing to do with cookie consents, but it's funny that even the API can now reject the poor cookies. Have a cookie. 🍪）\">クッキー同意</abbr> を管理する能力を持っています。 🤪🍪\n+\n+Pydanticのモデルの configuration を利用して、 `extra` フィールドを `forbid` とすることができます。",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1966722372",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13330,
        "pr_file": "docs/ja/docs/tutorial/cookie-param-models.md",
        "discussion_id": "1966722372",
        "commented_code": "@@ -0,0 +1,77 @@\n+# クッキーパラメータモデル\n+\n+もし関連する**複数のクッキー**から成るグループがあるなら、それらを宣言するために、**Pydanticモデル**を作成できます。🍪\n+\n+こうすることで、**複数の場所**で**そのPydanticモデルを再利用**でき、バリデーションやメタデータを、すべてのクッキーパラメータに対して一度に宣言できます。😎\n+\n+/// note | 備考\n+\n+この機能は、FastAPIのバージョン `0.115.0` からサポートされています。🤓\n+\n+///\n+\n+/// tip | 豆知識\n+\n+これと同じテクニックは `Query` 、 `Cookie` 、 `Header` にも適用できます。 😎\n+\n+///\n+\n+## クッキーにPydanticモデルを使用する\n+\n+必要な複数の**クッキー**パラメータを**Pydanticモデル**で宣言し、さらに、それを `Cookie` として宣言しましょう:\n+\n+{* ../../docs_src/cookie_param_models/tutorial001_an_py310.py hl[9:12,16] *}\n+\n+**FastAPI**は、リクエストの**クッキー**から**それぞれのフィールド**のデータを**抽出**し、定義された**Pydanticモデル**を提供します。\n+\n+## ドキュメントの確認\n+\n+対話的APIドキュメントUI `/docs` で、定義されているクッキーを確認できます:\n+\n+<div class=\"screenshot\">\n+<img src=\"/img/tutorial/cookie-param-models/image01.png\">\n+</div>\n+\n+/// info | 備考\n+\n+\n+**ブラウザがクッキーを処理し**ていますが、特別な方法で内部的に処理を行っているために、**JavaScript**からは簡単に操作**できない**ことに留意してください。\n+\n+**対話的APIドキュメントUI** `/docs` にアクセスすれば、*パスオペレーション*に関するクッキーの**ドキュメンテーション**を確認できます。\n+\n+しかし、たとえ**クッキーデータを入力して**「Execute」をクリックしても、対話的APIドキュメントUIは**JavaScript**で動作しているためクッキーは送信されず、まるで値を入力しなかったかのような**エラー**メッセージが表示されます。\n+\n+///\n+\n+## 余分なクッキーを禁止する\n+\n+特定の（あまり一般的ではないかもしれない）ケースで、受け付けるクッキーを**制限**する必要があるかもしれません。\n+\n+あなたのAPIは独自の <abbr title=\"念のためですが、これはジョークです。クッキー同意とは関係ありませんが、APIでさえ不適切なクッキーを拒否できるとは愉快ですね。クッキーでも食べてでください。🍪 （原文: This is a joke, just in case. It has nothing to do with cookie consents, but it's funny that even the API can now reject the poor cookies. Have a cookie. 🍪）\">クッキー同意</abbr> を管理する能力を持っています。 🤪🍪\n+\n+Pydanticのモデルの configuration を利用して、 `extra` フィールドを `forbid` とすることができます。",
        "comment_created_at": "2025-02-23T09:30:00+00:00",
        "comment_author": "maru0123-2004",
        "comment_body": "I want to know why you translate this as \"モデルの configuration\", if you are okay.",
        "pr_file_module": null
      },
      {
        "comment_id": "1967873297",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13330,
        "pr_file": "docs/ja/docs/tutorial/cookie-param-models.md",
        "discussion_id": "1966722372",
        "commented_code": "@@ -0,0 +1,77 @@\n+# クッキーパラメータモデル\n+\n+もし関連する**複数のクッキー**から成るグループがあるなら、それらを宣言するために、**Pydanticモデル**を作成できます。🍪\n+\n+こうすることで、**複数の場所**で**そのPydanticモデルを再利用**でき、バリデーションやメタデータを、すべてのクッキーパラメータに対して一度に宣言できます。😎\n+\n+/// note | 備考\n+\n+この機能は、FastAPIのバージョン `0.115.0` からサポートされています。🤓\n+\n+///\n+\n+/// tip | 豆知識\n+\n+これと同じテクニックは `Query` 、 `Cookie` 、 `Header` にも適用できます。 😎\n+\n+///\n+\n+## クッキーにPydanticモデルを使用する\n+\n+必要な複数の**クッキー**パラメータを**Pydanticモデル**で宣言し、さらに、それを `Cookie` として宣言しましょう:\n+\n+{* ../../docs_src/cookie_param_models/tutorial001_an_py310.py hl[9:12,16] *}\n+\n+**FastAPI**は、リクエストの**クッキー**から**それぞれのフィールド**のデータを**抽出**し、定義された**Pydanticモデル**を提供します。\n+\n+## ドキュメントの確認\n+\n+対話的APIドキュメントUI `/docs` で、定義されているクッキーを確認できます:\n+\n+<div class=\"screenshot\">\n+<img src=\"/img/tutorial/cookie-param-models/image01.png\">\n+</div>\n+\n+/// info | 備考\n+\n+\n+**ブラウザがクッキーを処理し**ていますが、特別な方法で内部的に処理を行っているために、**JavaScript**からは簡単に操作**できない**ことに留意してください。\n+\n+**対話的APIドキュメントUI** `/docs` にアクセスすれば、*パスオペレーション*に関するクッキーの**ドキュメンテーション**を確認できます。\n+\n+しかし、たとえ**クッキーデータを入力して**「Execute」をクリックしても、対話的APIドキュメントUIは**JavaScript**で動作しているためクッキーは送信されず、まるで値を入力しなかったかのような**エラー**メッセージが表示されます。\n+\n+///\n+\n+## 余分なクッキーを禁止する\n+\n+特定の（あまり一般的ではないかもしれない）ケースで、受け付けるクッキーを**制限**する必要があるかもしれません。\n+\n+あなたのAPIは独自の <abbr title=\"念のためですが、これはジョークです。クッキー同意とは関係ありませんが、APIでさえ不適切なクッキーを拒否できるとは愉快ですね。クッキーでも食べてでください。🍪 （原文: This is a joke, just in case. It has nothing to do with cookie consents, but it's funny that even the API can now reject the poor cookies. Have a cookie. 🍪）\">クッキー同意</abbr> を管理する能力を持っています。 🤪🍪\n+\n+Pydanticのモデルの configuration を利用して、 `extra` フィールドを `forbid` とすることができます。",
        "comment_created_at": "2025-02-24T15:27:00+00:00",
        "comment_author": "k94-ishi",
        "comment_body": "I'm okay. In this context, 'configuration' refers to 'model_config' ([Configuration](https://docs.pydantic.dev/latest/api/config/#pydantic.config.ConfigDict.extra)) in Pydantic , so I thought it would be better not to translate the word. If I translated 'configuration' as '設定' or something similar, it might be harder to recognize that it refers to 'model_config'.",
        "pr_file_module": null
      },
      {
        "comment_id": "1968570194",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13330,
        "pr_file": "docs/ja/docs/tutorial/cookie-param-models.md",
        "discussion_id": "1966722372",
        "commented_code": "@@ -0,0 +1,77 @@\n+# クッキーパラメータモデル\n+\n+もし関連する**複数のクッキー**から成るグループがあるなら、それらを宣言するために、**Pydanticモデル**を作成できます。🍪\n+\n+こうすることで、**複数の場所**で**そのPydanticモデルを再利用**でき、バリデーションやメタデータを、すべてのクッキーパラメータに対して一度に宣言できます。😎\n+\n+/// note | 備考\n+\n+この機能は、FastAPIのバージョン `0.115.0` からサポートされています。🤓\n+\n+///\n+\n+/// tip | 豆知識\n+\n+これと同じテクニックは `Query` 、 `Cookie` 、 `Header` にも適用できます。 😎\n+\n+///\n+\n+## クッキーにPydanticモデルを使用する\n+\n+必要な複数の**クッキー**パラメータを**Pydanticモデル**で宣言し、さらに、それを `Cookie` として宣言しましょう:\n+\n+{* ../../docs_src/cookie_param_models/tutorial001_an_py310.py hl[9:12,16] *}\n+\n+**FastAPI**は、リクエストの**クッキー**から**それぞれのフィールド**のデータを**抽出**し、定義された**Pydanticモデル**を提供します。\n+\n+## ドキュメントの確認\n+\n+対話的APIドキュメントUI `/docs` で、定義されているクッキーを確認できます:\n+\n+<div class=\"screenshot\">\n+<img src=\"/img/tutorial/cookie-param-models/image01.png\">\n+</div>\n+\n+/// info | 備考\n+\n+\n+**ブラウザがクッキーを処理し**ていますが、特別な方法で内部的に処理を行っているために、**JavaScript**からは簡単に操作**できない**ことに留意してください。\n+\n+**対話的APIドキュメントUI** `/docs` にアクセスすれば、*パスオペレーション*に関するクッキーの**ドキュメンテーション**を確認できます。\n+\n+しかし、たとえ**クッキーデータを入力して**「Execute」をクリックしても、対話的APIドキュメントUIは**JavaScript**で動作しているためクッキーは送信されず、まるで値を入力しなかったかのような**エラー**メッセージが表示されます。\n+\n+///\n+\n+## 余分なクッキーを禁止する\n+\n+特定の（あまり一般的ではないかもしれない）ケースで、受け付けるクッキーを**制限**する必要があるかもしれません。\n+\n+あなたのAPIは独自の <abbr title=\"念のためですが、これはジョークです。クッキー同意とは関係ありませんが、APIでさえ不適切なクッキーを拒否できるとは愉快ですね。クッキーでも食べてでください。🍪 （原文: This is a joke, just in case. It has nothing to do with cookie consents, but it's funny that even the API can now reject the poor cookies. Have a cookie. 🍪）\">クッキー同意</abbr> を管理する能力を持っています。 🤪🍪\n+\n+Pydanticのモデルの configuration を利用して、 `extra` フィールドを `forbid` とすることができます。",
        "comment_created_at": "2025-02-24T23:29:14+00:00",
        "comment_author": "maru0123-2004",
        "comment_body": "Thank you four your replying!\nI see. I think the \"configuration\" refers pydantic's Configuration, it acts as a proper noun phrase.\nSo it may be better to change to Uppercased first character(Configuration), and/or remove \"の\" before \"モデル\"(Pydanticモデルのconfiguration) , I think.\nBut I think keeping it as current one is not bad, too.\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1969777456",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13330,
        "pr_file": "docs/ja/docs/tutorial/cookie-param-models.md",
        "discussion_id": "1966722372",
        "commented_code": "@@ -0,0 +1,77 @@\n+# クッキーパラメータモデル\n+\n+もし関連する**複数のクッキー**から成るグループがあるなら、それらを宣言するために、**Pydanticモデル**を作成できます。🍪\n+\n+こうすることで、**複数の場所**で**そのPydanticモデルを再利用**でき、バリデーションやメタデータを、すべてのクッキーパラメータに対して一度に宣言できます。😎\n+\n+/// note | 備考\n+\n+この機能は、FastAPIのバージョン `0.115.0` からサポートされています。🤓\n+\n+///\n+\n+/// tip | 豆知識\n+\n+これと同じテクニックは `Query` 、 `Cookie` 、 `Header` にも適用できます。 😎\n+\n+///\n+\n+## クッキーにPydanticモデルを使用する\n+\n+必要な複数の**クッキー**パラメータを**Pydanticモデル**で宣言し、さらに、それを `Cookie` として宣言しましょう:\n+\n+{* ../../docs_src/cookie_param_models/tutorial001_an_py310.py hl[9:12,16] *}\n+\n+**FastAPI**は、リクエストの**クッキー**から**それぞれのフィールド**のデータを**抽出**し、定義された**Pydanticモデル**を提供します。\n+\n+## ドキュメントの確認\n+\n+対話的APIドキュメントUI `/docs` で、定義されているクッキーを確認できます:\n+\n+<div class=\"screenshot\">\n+<img src=\"/img/tutorial/cookie-param-models/image01.png\">\n+</div>\n+\n+/// info | 備考\n+\n+\n+**ブラウザがクッキーを処理し**ていますが、特別な方法で内部的に処理を行っているために、**JavaScript**からは簡単に操作**できない**ことに留意してください。\n+\n+**対話的APIドキュメントUI** `/docs` にアクセスすれば、*パスオペレーション*に関するクッキーの**ドキュメンテーション**を確認できます。\n+\n+しかし、たとえ**クッキーデータを入力して**「Execute」をクリックしても、対話的APIドキュメントUIは**JavaScript**で動作しているためクッキーは送信されず、まるで値を入力しなかったかのような**エラー**メッセージが表示されます。\n+\n+///\n+\n+## 余分なクッキーを禁止する\n+\n+特定の（あまり一般的ではないかもしれない）ケースで、受け付けるクッキーを**制限**する必要があるかもしれません。\n+\n+あなたのAPIは独自の <abbr title=\"念のためですが、これはジョークです。クッキー同意とは関係ありませんが、APIでさえ不適切なクッキーを拒否できるとは愉快ですね。クッキーでも食べてでください。🍪 （原文: This is a joke, just in case. It has nothing to do with cookie consents, but it's funny that even the API can now reject the poor cookies. Have a cookie. 🍪）\">クッキー同意</abbr> を管理する能力を持っています。 🤪🍪\n+\n+Pydanticのモデルの configuration を利用して、 `extra` フィールドを `forbid` とすることができます。",
        "comment_created_at": "2025-02-25T13:23:25+00:00",
        "comment_author": "k94-ishi",
        "comment_body": "I agree with your suggestion and have changed 'configuration' to 'Configuration'. Thank you for your advice!",
        "pr_file_module": null
      },
      {
        "comment_id": "1975216602",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13330,
        "pr_file": "docs/ja/docs/tutorial/cookie-param-models.md",
        "discussion_id": "1966722372",
        "commented_code": "@@ -0,0 +1,77 @@\n+# クッキーパラメータモデル\n+\n+もし関連する**複数のクッキー**から成るグループがあるなら、それらを宣言するために、**Pydanticモデル**を作成できます。🍪\n+\n+こうすることで、**複数の場所**で**そのPydanticモデルを再利用**でき、バリデーションやメタデータを、すべてのクッキーパラメータに対して一度に宣言できます。😎\n+\n+/// note | 備考\n+\n+この機能は、FastAPIのバージョン `0.115.0` からサポートされています。🤓\n+\n+///\n+\n+/// tip | 豆知識\n+\n+これと同じテクニックは `Query` 、 `Cookie` 、 `Header` にも適用できます。 😎\n+\n+///\n+\n+## クッキーにPydanticモデルを使用する\n+\n+必要な複数の**クッキー**パラメータを**Pydanticモデル**で宣言し、さらに、それを `Cookie` として宣言しましょう:\n+\n+{* ../../docs_src/cookie_param_models/tutorial001_an_py310.py hl[9:12,16] *}\n+\n+**FastAPI**は、リクエストの**クッキー**から**それぞれのフィールド**のデータを**抽出**し、定義された**Pydanticモデル**を提供します。\n+\n+## ドキュメントの確認\n+\n+対話的APIドキュメントUI `/docs` で、定義されているクッキーを確認できます:\n+\n+<div class=\"screenshot\">\n+<img src=\"/img/tutorial/cookie-param-models/image01.png\">\n+</div>\n+\n+/// info | 備考\n+\n+\n+**ブラウザがクッキーを処理し**ていますが、特別な方法で内部的に処理を行っているために、**JavaScript**からは簡単に操作**できない**ことに留意してください。\n+\n+**対話的APIドキュメントUI** `/docs` にアクセスすれば、*パスオペレーション*に関するクッキーの**ドキュメンテーション**を確認できます。\n+\n+しかし、たとえ**クッキーデータを入力して**「Execute」をクリックしても、対話的APIドキュメントUIは**JavaScript**で動作しているためクッキーは送信されず、まるで値を入力しなかったかのような**エラー**メッセージが表示されます。\n+\n+///\n+\n+## 余分なクッキーを禁止する\n+\n+特定の（あまり一般的ではないかもしれない）ケースで、受け付けるクッキーを**制限**する必要があるかもしれません。\n+\n+あなたのAPIは独自の <abbr title=\"念のためですが、これはジョークです。クッキー同意とは関係ありませんが、APIでさえ不適切なクッキーを拒否できるとは愉快ですね。クッキーでも食べてでください。🍪 （原文: This is a joke, just in case. It has nothing to do with cookie consents, but it's funny that even the API can now reject the poor cookies. Have a cookie. 🍪）\">クッキー同意</abbr> を管理する能力を持っています。 🤪🍪\n+\n+Pydanticのモデルの configuration を利用して、 `extra` フィールドを `forbid` とすることができます。",
        "comment_created_at": "2025-02-28T10:55:58+00:00",
        "comment_author": "svlandeg",
        "comment_body": "@k94-ishi: for each of the comments on this PR, if you have resolved them, could you mark them as such with the button \"Resolve conversation\"? This helps us see what the state of the PR is, and whether there are any open issues to address or not. Thanks!",
        "pr_file_module": null
      },
      {
        "comment_id": "1975238778",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13330,
        "pr_file": "docs/ja/docs/tutorial/cookie-param-models.md",
        "discussion_id": "1966722372",
        "commented_code": "@@ -0,0 +1,77 @@\n+# クッキーパラメータモデル\n+\n+もし関連する**複数のクッキー**から成るグループがあるなら、それらを宣言するために、**Pydanticモデル**を作成できます。🍪\n+\n+こうすることで、**複数の場所**で**そのPydanticモデルを再利用**でき、バリデーションやメタデータを、すべてのクッキーパラメータに対して一度に宣言できます。😎\n+\n+/// note | 備考\n+\n+この機能は、FastAPIのバージョン `0.115.0` からサポートされています。🤓\n+\n+///\n+\n+/// tip | 豆知識\n+\n+これと同じテクニックは `Query` 、 `Cookie` 、 `Header` にも適用できます。 😎\n+\n+///\n+\n+## クッキーにPydanticモデルを使用する\n+\n+必要な複数の**クッキー**パラメータを**Pydanticモデル**で宣言し、さらに、それを `Cookie` として宣言しましょう:\n+\n+{* ../../docs_src/cookie_param_models/tutorial001_an_py310.py hl[9:12,16] *}\n+\n+**FastAPI**は、リクエストの**クッキー**から**それぞれのフィールド**のデータを**抽出**し、定義された**Pydanticモデル**を提供します。\n+\n+## ドキュメントの確認\n+\n+対話的APIドキュメントUI `/docs` で、定義されているクッキーを確認できます:\n+\n+<div class=\"screenshot\">\n+<img src=\"/img/tutorial/cookie-param-models/image01.png\">\n+</div>\n+\n+/// info | 備考\n+\n+\n+**ブラウザがクッキーを処理し**ていますが、特別な方法で内部的に処理を行っているために、**JavaScript**からは簡単に操作**できない**ことに留意してください。\n+\n+**対話的APIドキュメントUI** `/docs` にアクセスすれば、*パスオペレーション*に関するクッキーの**ドキュメンテーション**を確認できます。\n+\n+しかし、たとえ**クッキーデータを入力して**「Execute」をクリックしても、対話的APIドキュメントUIは**JavaScript**で動作しているためクッキーは送信されず、まるで値を入力しなかったかのような**エラー**メッセージが表示されます。\n+\n+///\n+\n+## 余分なクッキーを禁止する\n+\n+特定の（あまり一般的ではないかもしれない）ケースで、受け付けるクッキーを**制限**する必要があるかもしれません。\n+\n+あなたのAPIは独自の <abbr title=\"念のためですが、これはジョークです。クッキー同意とは関係ありませんが、APIでさえ不適切なクッキーを拒否できるとは愉快ですね。クッキーでも食べてでください。🍪 （原文: This is a joke, just in case. It has nothing to do with cookie consents, but it's funny that even the API can now reject the poor cookies. Have a cookie. 🍪）\">クッキー同意</abbr> を管理する能力を持っています。 🤪🍪\n+\n+Pydanticのモデルの configuration を利用して、 `extra` フィールドを `forbid` とすることができます。",
        "comment_created_at": "2025-02-28T11:13:59+00:00",
        "comment_author": "k94-ishi",
        "comment_body": "@svlandeg  Thank you for your message! I've marked them as resolved.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1947842755",
    "pr_number": 13262,
    "pr_file": "docs/ko/docs/help-fastapi.md",
    "created_at": "2025-02-08T15:17:47+00:00",
    "commented_code": "-* # FastAPI 지원 - 도움말 받기\n+# FastAPI 지원 - 도움 받기\n \n-  **FastAPI** 가 마음에 드시나요?\n+**FastAPI** 가 마음에 드시나요?\n \n-  FastAPI, 다른 사용자, 개발자를 응원하고 싶으신가요?\n+FastAPI, 다른 사용자, 개발자를 응원하고 싶으신가요?\n \n-  혹은 **FastAPI** 에 대해 도움이 필요하신가요?\n+혹은 **FastAPI** 에 대해 도움이 필요하신가요?\n \n-  아주 간단하게 응원할 수 있습니다 (몇 번의 클릭만으로).\n+아주 간단하게 응원할 수 있습니다 (몇 번의 클릭만으로).\n \n-  또한 도움을 받을 수 있는 방법도 몇 가지 있습니다.\n+또한 도움을 받을 수 있는 방법도 몇 가지 있습니다.\n \n-  ## 뉴스레터 구독\n+## 뉴스레터 구독\n \n-  [**FastAPI와 친구** 뉴스레터](https://github.com/fastapi/fastapi/blob/master/newsletter)를 구독하여 최신 정보를 유지할 수 있습니다{.internal-link target=_blank}:\n+[**FastAPI와 친구** 뉴스레터](newsletter.md){.internal-link target=\\_blank}를 구독하여 최신 정보를 유지할 수 있습니다:",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1947842755",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13262,
        "pr_file": "docs/ko/docs/help-fastapi.md",
        "discussion_id": "1947842755",
        "commented_code": "@@ -1,162 +1,269 @@\n-* # FastAPI 지원 - 도움말 받기\n+# FastAPI 지원 - 도움 받기\n \n-  **FastAPI** 가 마음에 드시나요?\n+**FastAPI** 가 마음에 드시나요?\n \n-  FastAPI, 다른 사용자, 개발자를 응원하고 싶으신가요?\n+FastAPI, 다른 사용자, 개발자를 응원하고 싶으신가요?\n \n-  혹은 **FastAPI** 에 대해 도움이 필요하신가요?\n+혹은 **FastAPI** 에 대해 도움이 필요하신가요?\n \n-  아주 간단하게 응원할 수 있습니다 (몇 번의 클릭만으로).\n+아주 간단하게 응원할 수 있습니다 (몇 번의 클릭만으로).\n \n-  또한 도움을 받을 수 있는 방법도 몇 가지 있습니다.\n+또한 도움을 받을 수 있는 방법도 몇 가지 있습니다.\n \n-  ## 뉴스레터 구독\n+## 뉴스레터 구독\n \n-  [**FastAPI와 친구** 뉴스레터](https://github.com/fastapi/fastapi/blob/master/newsletter)를 구독하여 최신 정보를 유지할 수 있습니다{.internal-link target=_blank}:\n+[**FastAPI와 친구** 뉴스레터](newsletter.md){.internal-link target=\\_blank}를 구독하여 최신 정보를 유지할 수 있습니다:",
        "comment_created_at": "2025-02-08T15:17:47+00:00",
        "comment_author": "timothy-jeong",
        "comment_body": "```suggestion\r\n[**FastAPI and friends** 뉴스레터](newsletter.md){.internal-link target=\\_blank}를 구독하여 최신 정보를 유지할 수 있습니다:\r\n```\r\n\"FastAPI and friends\" is considered a proper noun referring to FastAPI and its related projects in this context. Therefore, I suggest keeping \"FastAPI and friends\" in English rather than translating it. What do you think about this approach?\r\n\r\nFor reference, the [독일어 번역버전](https://fastapi.tiangolo.com/de/help-fastapi/#newsletter-abonnieren) retains the original text.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1948133800",
    "pr_number": 13262,
    "pr_file": "docs/ko/docs/help-fastapi.md",
    "created_at": "2025-02-09T15:32:39+00:00",
    "commented_code": "-* # FastAPI 지원 - 도움말 받기\n+# FastAPI 지원 - 도움 받기\n \n-  **FastAPI** 가 마음에 드시나요?\n+**FastAPI** 가 마음에 드시나요?\n \n-  FastAPI, 다른 사용자, 개발자를 응원하고 싶으신가요?\n+FastAPI, 다른 사용자, 개발자를 응원하고 싶으신가요?\n \n-  혹은 **FastAPI** 에 대해 도움이 필요하신가요?\n+혹은 **FastAPI** 에 대해 도움이 필요하신가요?\n \n-  아주 간단하게 응원할 수 있습니다 (몇 번의 클릭만으로).\n+아주 간단하게 응원할 수 있습니다 (몇 번의 클릭만으로).\n \n-  또한 도움을 받을 수 있는 방법도 몇 가지 있습니다.\n+또한 도움을 받을 수 있는 방법도 몇 가지 있습니다.\n \n-  ## 뉴스레터 구독\n+## 뉴스레터 구독\n \n-  [**FastAPI와 친구** 뉴스레터](https://github.com/fastapi/fastapi/blob/master/newsletter)를 구독하여 최신 정보를 유지할 수 있습니다{.internal-link target=_blank}:\n+[**FastAPI and friends** 뉴스레터](newsletter.md){.internal-link target=\\_blank}를 구독하여 최신 정보를 유지할 수 있습니다:\n \n-  - FastAPI 와 그 친구들에 대한 뉴스 🚀\n-  - 가이드 📝\n-  - 특징 ✨\n-  - 획기적인 변화 🚨\n-  - 팁과 요령 ✅\n+* FastAPI and friends에 대한 뉴스 🚀\n+* 가이드 📝\n+* 기능 ✨\n+* 획기적인 변화 🚨\n+* 팁과 요령 ✅\n \n-  ## 트위터에서 FastAPI 팔로우하기\n+## 트위터에서 FastAPI 팔로우하기\n \n-  [Follow @fastapi on **Twitter**](https://twitter.com/fastapi) 를 팔로우하여 **FastAPI** 에 대한 최신 뉴스를 얻을 수 있습니다. 🐦\n+<a href=\"https://twitter.com/fastapi\" class=\"external-link\" target=\"_blank\">**Twitter**의 @fastapi를 팔로우</a>하여 **FastAPI** 에 대한 최신 뉴스를 얻을 수 있습니다. 🐦\n \n-  ## Star **FastAPI** in GitHub\n+## Star **FastAPI** in GitHub\n \n-  GitHub에서 FastAPI에 \"star\"를 붙일 수 있습니다(오른쪽 상단의 star 버튼을 클릭): https://github.com/fastapi/fastapi. ⭐️\n+GitHub에서 FastAPI에 \"star\"를 붙일 수 있습니다 (오른쪽 상단의 star 버튼을 클릭): <a href=\"https://github.com/fastapi/fastapi\" class=\"external-link\" target=\"_blank\">https://github.com/fastapi/fastapi</a>. ⭐️\n \n-  스타를 늘림으로써, 다른 사용자들이 좀 더 쉽게 찾을 수 있고, 많은 사람들에게 유용한 것임을 나타낼 수 있습니다.\n+스타를 늘림으로써, 다른 사용자들이 좀 더 쉽게 찾을 수 있고, 많은 사람들에게 유용한 것임을 나타낼 수 있습니다.\n \n-  ## GitHub 저장소에서  릴리즈 확인\n+## GitHub 저장소에서 릴리즈 확인\n \n-  GitHub에서 FastAPI를 \"watch\"할 수 있습니다 (오른쪽 상단 watch 버튼을 클릭): https://github.com/fastapi/fastapi. 👀\n+GitHub에서 FastAPI를 \"watch\"할 수 있습니다 (오른쪽 상단 watch 버튼을 클릭): <a href=\"https://github.com/fastapi/fastapi\" class=\"external-link\" target=\"_blank\">https://github.com/fastapi/fastapi</a>. 👀\n \n-  여기서 \"Releases only\"을 선택할 수 있습니다.\n+여기서 \"Releases only\"을 선택할 수 있습니다.\n \n-  이렇게하면, **FastAPI** 의 버그 수정 및 새로운 기능의 구현 등의 새로운 자료 (최신 버전)이 있을 때마다 (이메일) 통지를 받을 수 있습니다.\n+이렇게하면, **FastAPI** 의 버그 수정 및 새로운 기능의 구현 등의 새로운 자료 (최신 버전)이 있을 때마다 (이메일) 통지를 받을 수 있습니다.\n \n-  ## 개발자와의 연결\n+## 개발자와의 연결\n \n-  개발자인 [me (Sebastián Ramírez / `tiangolo`)](https://tiangolo.com/) 와 연락을 취할 수 있습니다.\n+개발자인 <a href=\"https://tiangolo.com\" class=\"external-link\" target=\"_blank\">me (Sebastián Ramírez / `tiangolo`)</a>와 연락을 취할 수 있습니다.\n \n-  여러분은 할 수 있습니다:\n+여러분은 할 수 있습니다:\n \n-  - [**GitHub**에서 팔로우하기](https://github.com/tiangolo).\n-  - 당신에게 도움이 될 저의 다른 오픈소스 프로젝트를 확인하십시오.\n-    - 새로운 오픈소스 프로젝트를 만들었을 때 확인하려면 팔로우 하십시오.\n+* <a href=\"https://github.com/tiangolo\" class=\"external-link\" target=\"_blank\">**GitHub**에서 팔로우하기.</a>.\n+    * 당신에게 도움이 될 저의 다른 오픈소스 프로젝트를 확인하십시오.\n+    * 새로운 오픈소스 프로젝트를 만들었을 때 확인하려면 팔로우 하십시오.\n+* <a href=\"https://twitter.com/tiangolo\" class=\"external-link\" target=\"_blank\">**Twitter**</a> 또는 <a href=\"https://fosstodon.org/@tiangolo\" class=\"external-link\" target=\"_blank\">Mastodon</a>에서 팔로우하기.\n+    * FastAPI의 사용 용도를 알려주세요 (그것을 듣는 것을 좋아합니다).\n+    * 발표나 새로운 툴 출시 소식을 받아보십시오.\n+    * <a href=\"https://twitter.com/fastapi\" class=\"external-link\" target=\"_blank\">**Twitter**의 @fastapi를 팔로우</a> (별도 계정에서) 할 수 있습니다.\n+* <a href=\"https://www.linkedin.com/in/tiangolo/\" class=\"external-link\" target=\"_blank\">**LinkedIn**에서 팔로우하기.</a>.\n+    * 새로운 툴의 발표나 출시 소식을 받아보십시오. (단, Twitter를 더 자주 사용합니다 🤷‍♂).\n+* <a href=\"https://dev.to/tiangolo\" class=\"external-link\" target=\"_blank\">**Dev.to**</a> 또는 <a href=\"https://medium.com/@tiangolo\" class=\"external-link\" target=\"_blank\">**Medium**</a>에서 제가 작성한 내용을 읽어 보십시오 (또는 팔로우).\n+    * 다른 기사나 아이디어들을 읽고, 제가 만들어왔던 툴에 대해서도 읽으십시오.\n+    * 새로운 기사를 읽기 위해 팔로우 하십시오.\n \n-  - [**Twitter**에서 팔로우하기](https://twitter.com/tiangolo).\n-    - FastAPI의 사용 용도를 알려주세요 (그것을 듣는 것을 좋아합니다).\n-    - 발표 또는 새로운 툴 출시할 때 들으십시오.\n-    - [follow @fastapi on Twitter](https://twitter.com/fastapi) (별도 계정에서) 할 수 있습니다.\n+## **FastAPI**에 대한 트윗\n \n-  - [**Linkedin**에서의 연결](https://www.linkedin.com/in/tiangolo/).\n-    - 새로운 툴의 발표나 릴리스를 들을 수 있습니다 (단, Twitter를 더 자주 사용합니다 🤷‍♂).\n+<a href=\"https://twitter.com/compose/tweet?text=I'm loving @fastapi because... https://github.com/fastapi/fastapi\" class=\"external-link\" target=\"_blank\">**FastAPI**에 대해 트윗</a> 하고 FastAPI가 마음에 드는 이유를 알려주세요. 🎉\n \n-  - [**Dev.to**](https://dev.to/tiangolo) 또는 [**Medium**](https://medium.com/@tiangolo)에서 제가 작성한 내용을 읽어 보십시오(또는 팔로우).\n-    - 다른 기사나 아이디어들을 읽고, 제가 만들어왔던 툴에 대해서도 읽으십시오.\n-    - 새로운 기사를 읽기 위해 팔로우 하십시오.\n+**FastAPI**가 어떻게 사용되고 있는지, 어떤 점이 마음에 들었는지, 어떤 프로젝트/회사에서 사용하고 있는지 등에 대해 듣고 싶습니다.\n \n-  ## **FastAPI**에 대한 트윗\n+## FastAPI에 투표하기\n \n-  [**FastAPI**에 대해 트윗](https://twitter.com/compose/tweet?text=I'm loving @fastapi because... https://github.com/fastapi/fastapi) 하고 FastAPI가 마음에 드는 이유를 알려주세요. 🎉\n+* <a href=\"https://www.slant.co/options/34241/~fastapi-review\" class=\"external-link\" target=\"_blank\">Slant에서 **FastAPI** 에 대해 투표하십시오</a>.\n+* <a href=\"https://alternativeto.net/software/fastapi/about/\" class=\"external-link\" target=\"_blank\">AlternativeTo에서 **FastAPI** 에 대해 투표하십시오</a>.\n+* <a href=\"https://stackshare.io/pypi-fastapi\" class=\"external-link\" target=\"_blank\">StackShare에서 **FastAPI** 에 대해 투표하십시오</a>.\n \n-  **FastAPI**가 어떻게 사용되고 있는지, 어떤 점이 마음에 들었는지, 어떤 프로젝트/회사에서 사용하고 있는지 등에 대해 듣고 싶습니다.\n+## GitHub의 이슈로 다른사람 돕기\n \n-  ## FastAPI에 투표하기\n+다른 사람들의 질문에 도움을 줄 수 있습니다:\n \n-  - [Slant에서 **FastAPI** 에 대해 투표하십시오](https://www.slant.co/options/34241/~fastapi-review).\n-  - [AlternativeTo**FastAPI** 에 대해 투표하십시오](https://alternativeto.net/software/fastapi/).\n+* <a href=\"https://github.com/fastapi/fastapi/discussions/categories/questions?discussions_q=category%3AQuestions+is%3Aunanswered\" class=\"external-link\" target=\"_blank\">GitHub 디스커션</a>\n+* <a href=\"https://github.com/fastapi/fastapi/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aquestion+-label%3Aanswered+\" class=\"external-link\" target=\"_blank\">GitHub 이슈</a>\n \n-  ## GitHub의 이슈로 다른사람 돕기\n+많은 경우, 여러분은 이미 그 질문에 대한 답을 알고 있을 수도 있습니다. 🤓\n \n-  [존재하는 이슈](https://github.com/fastapi/fastapi/issues)를 확인하고 그것을 시도하고 도와줄 수 있습니다. 대부분의 경우 이미 답을 알고 있는 질문입니다. 🤓\n+만약 많은 사람들의 문제를 도와준다면, 공식적인 [FastAPI 전문가](fastapi-people.md#fastapi-experts){.internal-link target=\\_blank} 가 될 것입니다. 🎉\n \n-  많은 사람들의 문제를 도와준다면, 공식적인 [FastAPI 전문가](https://github.com/fastapi/fastapi/blob/master/docs/en/docs/fastapi-people.md#experts) 가 될 수 있습니다{.internal-link target=_blank}. 🎉\n+가장 중요한 점은: 친절하려고 노력하는 것입니다. 사람들은 좌절감을 안고 오며, 많은 경우 최선의 방식으로 질문하지 않을 수도 있습니다. 하지만 최대한 친절하게 대하려고 노력하세요. 🤗\n \n-  ## GitHub 저장소 보기\n+**FastAPI** 커뮤니티의 목표는 친절하고 환영하는 것입니다. 동시에, 괴롭힘이나 무례한 행동을 받아들이지 마세요. 우리는 서로를 돌봐야 합니다.\n \n-  GitHub에서 FastAPI를 \"watch\"할 수 있습니다 (오른쪽 상단 watch 버튼을 클릭): https://github.com/fastapi/fastapi. 👀\n+---\n \n-  \"Releases only\" 대신 \"Watching\"을 선택하면 다른 사용자가 새로운 issue를 생성할 때 알림이 수신됩니다.\n+다른 사람들의 질문 (디스커션 또는 이슈에서) 해결을 도울 수 있는 방법은 다음과 같습니다.\n \n-  그런 다음 이런 issues를 해결 할 수 있도록 도움을 줄 수 있습니다.\n+### 질문 이해하기\n \n-  ## 이슈 생성하기\n+* 질문하는 사람이 가진 **목적**과 사용 사례를 이해할 수 있는지 확인하세요.\n \n-  GitHub 저장소에 [새로운 이슈 생성](https://github.com/fastapi/fastapi/issues/new/choose) 을 할 수 있습니다, 예를들면 다음과 같습니다:\n+* 질문 (대부분은 질문입니다)이 **명확**한지 확인하세요.\n \n-  - **질문**을 하거나 **문제**에 대해 질문합니다.\n-  - 새로운 **기능**을 제안 합니다.\n+* 많은 경우, 사용자가 가정한 해결책에 대한 질문을 하지만, 더 **좋은** 해결책이 있을 수 있습니다. 문제와 사용 사례를 더 잘 이해하면 더 나은 **대안적인 해결책**을 제안할 수 있습니다.\n \n-  **참고**: 만약 이슈를 생성한다면, 저는 여러분에게 다른 사람들을 도와달라고 부탁할 것입니다. 😉\n+* 질문을 이해할 수 없다면, 더 **자세한 정보**를 요청하세요.\n \n-  ## Pull Request를 만드십시오\n+### 문제 재현하기\n \n-  Pull Requests를 이용하여 소스코드에 [컨트리뷰트](https://github.com/fastapi/fastapi/blob/master/docs/en/docs/contributing.md){.internal-link target=_blank} 할 수 있습니다. 예를 들면 다음과 같습니다:\n+대부분의 경우, 질문은 질문자의 **원본 코드**와 관련이 있습니다.\n \n-  - 문서에서 찾은 오타를 수정할 때.\n+많은 경우, 코드의 일부만 복사해서 올리지만, 그것만으로는 **문제를 재현**하기에 충분하지 않습니다.\n \n-  - FastAPI를 [편집하여](https://github.com/fastapi/fastapi/edit/master/docs/en/data/external_links.yml) 작성했거나 찾은 문서, 비디오 또는 팟캐스트를 공유할 때.\n+* 질문자에게 <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\" class=\"external-link\" target=\"_blank\">최소한의 재현 가능한 예제</a>를 제공해달라고 요청하세요. 이렇게 하면 코드를 **복사-붙여넣기**하여 직접 실행하고, 동일한 오류나 동작을 확인하거나 사용 사례를 더 잘 이해할 수 있습니다.\n \n-    - 해당 섹션의 시작 부분에 링크를 추가했는지 확인하십시오.\n+* 너그러운 마음이 든다면, 문제 설명만을 기반으로 직접 **예제를 만들어**볼 수도 있습니다. 하지만, 이는 시간이 많이 걸릴 수 있으므로, 먼저 질문을 명확히 해달라고 요청하는 것이 좋습니다.\n \n-  - 당신의 언어로 [문서 번역하는데](https://github.com/fastapi/fastapi/blob/master/docs/en/docs/contributing.md#translations){.internal-link target=_blank} 기여할 때.\n+### 해결책 제안하기\n \n-    - 또한 다른 사용자가 만든 번역을 검토하는데 도움을 줄 수도 있습니다.\n+* 질문을 충분히 이해한 후에는 가능한 **답변**을 제공할 수 있습니다.\n \n-  - 새로운 문서의 섹션을 제안할 때.\n+* 많은 경우, 질문자의 **근본적인 문제나 사용 사례**를 이해하는 것이 중요합니다. 그들이 시도하는 방법보다 더 나은 해결책이 있을 수 있기 때문입니다.\n \n-  - 기존 문제/버그를 수정할 때.\n+### 해결 요청하기\n \n-  - 새로운 feature를 추가할 때.\n+질문자가 답변을 확인하고 나면, 당신이 문제를 해결했을 가능성이 높습니다. 축하합니다, **당신은 영웅입니다**! 🦸\n \n-  ## 채팅에 참여하십시오\n+* 이제 문제를 해결했다면, 질문자에게 다음을 요청할 수 있습니다.\n \n-  👥 [디스코드 채팅 서버](https://discord.gg/VQjSZaeJmf) 👥 에 가입하고 FastAPI 커뮤니티에서 다른 사람들과 어울리세요.\n+    * GitHub 디스커션에서: 댓글을 **답변**으로 표시하도록 요청하세요.\n+    * GitHub 이슈에서: 이슈를 **닫아달라고** 요청하세요.\n \n-  /// tip\n+## GitHub 저장소 보기\n \n-  질문이 있는 경우, [GitHub 이슈 ](https://github.com/fastapi/fastapi/issues/new/choose) 에서 질문하십시오, [FastAPI 전문가](https://github.com/fastapi/fastapi/blob/master/docs/en/docs/fastapi-people.md#experts) 의 도움을 받을 가능성이 높습니다{.internal-link target=_blank} .\n+GitHub에서 FastAPI를 \"watch\"할 수 있습니다 (오른쪽 상단 watch 버튼을 클릭): <a href=\"https://github.com/fastapi/fastapi\" class=\"external-link\" target=\"_blank\">https://github.com/fastapi/fastapi</a>. 👀\n \n-  ///\n+\"Releases only\" 대신 \"Watching\"을 선택하면, 새로운 issue나 질문이 생성될 때 알림을 받을 수 있습니다. 또한, 특정하게 새로운 issue, discussion, PR 등만 알림 받도록 설정할 수도 있습니다.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1948133800",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13262,
        "pr_file": "docs/ko/docs/help-fastapi.md",
        "discussion_id": "1948133800",
        "commented_code": "@@ -1,162 +1,269 @@\n-* # FastAPI 지원 - 도움말 받기\n+# FastAPI 지원 - 도움 받기\n \n-  **FastAPI** 가 마음에 드시나요?\n+**FastAPI** 가 마음에 드시나요?\n \n-  FastAPI, 다른 사용자, 개발자를 응원하고 싶으신가요?\n+FastAPI, 다른 사용자, 개발자를 응원하고 싶으신가요?\n \n-  혹은 **FastAPI** 에 대해 도움이 필요하신가요?\n+혹은 **FastAPI** 에 대해 도움이 필요하신가요?\n \n-  아주 간단하게 응원할 수 있습니다 (몇 번의 클릭만으로).\n+아주 간단하게 응원할 수 있습니다 (몇 번의 클릭만으로).\n \n-  또한 도움을 받을 수 있는 방법도 몇 가지 있습니다.\n+또한 도움을 받을 수 있는 방법도 몇 가지 있습니다.\n \n-  ## 뉴스레터 구독\n+## 뉴스레터 구독\n \n-  [**FastAPI와 친구** 뉴스레터](https://github.com/fastapi/fastapi/blob/master/newsletter)를 구독하여 최신 정보를 유지할 수 있습니다{.internal-link target=_blank}:\n+[**FastAPI and friends** 뉴스레터](newsletter.md){.internal-link target=\\_blank}를 구독하여 최신 정보를 유지할 수 있습니다:\n \n-  - FastAPI 와 그 친구들에 대한 뉴스 🚀\n-  - 가이드 📝\n-  - 특징 ✨\n-  - 획기적인 변화 🚨\n-  - 팁과 요령 ✅\n+* FastAPI and friends에 대한 뉴스 🚀\n+* 가이드 📝\n+* 기능 ✨\n+* 획기적인 변화 🚨\n+* 팁과 요령 ✅\n \n-  ## 트위터에서 FastAPI 팔로우하기\n+## 트위터에서 FastAPI 팔로우하기\n \n-  [Follow @fastapi on **Twitter**](https://twitter.com/fastapi) 를 팔로우하여 **FastAPI** 에 대한 최신 뉴스를 얻을 수 있습니다. 🐦\n+<a href=\"https://twitter.com/fastapi\" class=\"external-link\" target=\"_blank\">**Twitter**의 @fastapi를 팔로우</a>하여 **FastAPI** 에 대한 최신 뉴스를 얻을 수 있습니다. 🐦\n \n-  ## Star **FastAPI** in GitHub\n+## Star **FastAPI** in GitHub\n \n-  GitHub에서 FastAPI에 \"star\"를 붙일 수 있습니다(오른쪽 상단의 star 버튼을 클릭): https://github.com/fastapi/fastapi. ⭐️\n+GitHub에서 FastAPI에 \"star\"를 붙일 수 있습니다 (오른쪽 상단의 star 버튼을 클릭): <a href=\"https://github.com/fastapi/fastapi\" class=\"external-link\" target=\"_blank\">https://github.com/fastapi/fastapi</a>. ⭐️\n \n-  스타를 늘림으로써, 다른 사용자들이 좀 더 쉽게 찾을 수 있고, 많은 사람들에게 유용한 것임을 나타낼 수 있습니다.\n+스타를 늘림으로써, 다른 사용자들이 좀 더 쉽게 찾을 수 있고, 많은 사람들에게 유용한 것임을 나타낼 수 있습니다.\n \n-  ## GitHub 저장소에서  릴리즈 확인\n+## GitHub 저장소에서 릴리즈 확인\n \n-  GitHub에서 FastAPI를 \"watch\"할 수 있습니다 (오른쪽 상단 watch 버튼을 클릭): https://github.com/fastapi/fastapi. 👀\n+GitHub에서 FastAPI를 \"watch\"할 수 있습니다 (오른쪽 상단 watch 버튼을 클릭): <a href=\"https://github.com/fastapi/fastapi\" class=\"external-link\" target=\"_blank\">https://github.com/fastapi/fastapi</a>. 👀\n \n-  여기서 \"Releases only\"을 선택할 수 있습니다.\n+여기서 \"Releases only\"을 선택할 수 있습니다.\n \n-  이렇게하면, **FastAPI** 의 버그 수정 및 새로운 기능의 구현 등의 새로운 자료 (최신 버전)이 있을 때마다 (이메일) 통지를 받을 수 있습니다.\n+이렇게하면, **FastAPI** 의 버그 수정 및 새로운 기능의 구현 등의 새로운 자료 (최신 버전)이 있을 때마다 (이메일) 통지를 받을 수 있습니다.\n \n-  ## 개발자와의 연결\n+## 개발자와의 연결\n \n-  개발자인 [me (Sebastián Ramírez / `tiangolo`)](https://tiangolo.com/) 와 연락을 취할 수 있습니다.\n+개발자인 <a href=\"https://tiangolo.com\" class=\"external-link\" target=\"_blank\">me (Sebastián Ramírez / `tiangolo`)</a>와 연락을 취할 수 있습니다.\n \n-  여러분은 할 수 있습니다:\n+여러분은 할 수 있습니다:\n \n-  - [**GitHub**에서 팔로우하기](https://github.com/tiangolo).\n-  - 당신에게 도움이 될 저의 다른 오픈소스 프로젝트를 확인하십시오.\n-    - 새로운 오픈소스 프로젝트를 만들었을 때 확인하려면 팔로우 하십시오.\n+* <a href=\"https://github.com/tiangolo\" class=\"external-link\" target=\"_blank\">**GitHub**에서 팔로우하기.</a>.\n+    * 당신에게 도움이 될 저의 다른 오픈소스 프로젝트를 확인하십시오.\n+    * 새로운 오픈소스 프로젝트를 만들었을 때 확인하려면 팔로우 하십시오.\n+* <a href=\"https://twitter.com/tiangolo\" class=\"external-link\" target=\"_blank\">**Twitter**</a> 또는 <a href=\"https://fosstodon.org/@tiangolo\" class=\"external-link\" target=\"_blank\">Mastodon</a>에서 팔로우하기.\n+    * FastAPI의 사용 용도를 알려주세요 (그것을 듣는 것을 좋아합니다).\n+    * 발표나 새로운 툴 출시 소식을 받아보십시오.\n+    * <a href=\"https://twitter.com/fastapi\" class=\"external-link\" target=\"_blank\">**Twitter**의 @fastapi를 팔로우</a> (별도 계정에서) 할 수 있습니다.\n+* <a href=\"https://www.linkedin.com/in/tiangolo/\" class=\"external-link\" target=\"_blank\">**LinkedIn**에서 팔로우하기.</a>.\n+    * 새로운 툴의 발표나 출시 소식을 받아보십시오. (단, Twitter를 더 자주 사용합니다 🤷‍♂).\n+* <a href=\"https://dev.to/tiangolo\" class=\"external-link\" target=\"_blank\">**Dev.to**</a> 또는 <a href=\"https://medium.com/@tiangolo\" class=\"external-link\" target=\"_blank\">**Medium**</a>에서 제가 작성한 내용을 읽어 보십시오 (또는 팔로우).\n+    * 다른 기사나 아이디어들을 읽고, 제가 만들어왔던 툴에 대해서도 읽으십시오.\n+    * 새로운 기사를 읽기 위해 팔로우 하십시오.\n \n-  - [**Twitter**에서 팔로우하기](https://twitter.com/tiangolo).\n-    - FastAPI의 사용 용도를 알려주세요 (그것을 듣는 것을 좋아합니다).\n-    - 발표 또는 새로운 툴 출시할 때 들으십시오.\n-    - [follow @fastapi on Twitter](https://twitter.com/fastapi) (별도 계정에서) 할 수 있습니다.\n+## **FastAPI**에 대한 트윗\n \n-  - [**Linkedin**에서의 연결](https://www.linkedin.com/in/tiangolo/).\n-    - 새로운 툴의 발표나 릴리스를 들을 수 있습니다 (단, Twitter를 더 자주 사용합니다 🤷‍♂).\n+<a href=\"https://twitter.com/compose/tweet?text=I'm loving @fastapi because... https://github.com/fastapi/fastapi\" class=\"external-link\" target=\"_blank\">**FastAPI**에 대해 트윗</a> 하고 FastAPI가 마음에 드는 이유를 알려주세요. 🎉\n \n-  - [**Dev.to**](https://dev.to/tiangolo) 또는 [**Medium**](https://medium.com/@tiangolo)에서 제가 작성한 내용을 읽어 보십시오(또는 팔로우).\n-    - 다른 기사나 아이디어들을 읽고, 제가 만들어왔던 툴에 대해서도 읽으십시오.\n-    - 새로운 기사를 읽기 위해 팔로우 하십시오.\n+**FastAPI**가 어떻게 사용되고 있는지, 어떤 점이 마음에 들었는지, 어떤 프로젝트/회사에서 사용하고 있는지 등에 대해 듣고 싶습니다.\n \n-  ## **FastAPI**에 대한 트윗\n+## FastAPI에 투표하기\n \n-  [**FastAPI**에 대해 트윗](https://twitter.com/compose/tweet?text=I'm loving @fastapi because... https://github.com/fastapi/fastapi) 하고 FastAPI가 마음에 드는 이유를 알려주세요. 🎉\n+* <a href=\"https://www.slant.co/options/34241/~fastapi-review\" class=\"external-link\" target=\"_blank\">Slant에서 **FastAPI** 에 대해 투표하십시오</a>.\n+* <a href=\"https://alternativeto.net/software/fastapi/about/\" class=\"external-link\" target=\"_blank\">AlternativeTo에서 **FastAPI** 에 대해 투표하십시오</a>.\n+* <a href=\"https://stackshare.io/pypi-fastapi\" class=\"external-link\" target=\"_blank\">StackShare에서 **FastAPI** 에 대해 투표하십시오</a>.\n \n-  **FastAPI**가 어떻게 사용되고 있는지, 어떤 점이 마음에 들었는지, 어떤 프로젝트/회사에서 사용하고 있는지 등에 대해 듣고 싶습니다.\n+## GitHub의 이슈로 다른사람 돕기\n \n-  ## FastAPI에 투표하기\n+다른 사람들의 질문에 도움을 줄 수 있습니다:\n \n-  - [Slant에서 **FastAPI** 에 대해 투표하십시오](https://www.slant.co/options/34241/~fastapi-review).\n-  - [AlternativeTo**FastAPI** 에 대해 투표하십시오](https://alternativeto.net/software/fastapi/).\n+* <a href=\"https://github.com/fastapi/fastapi/discussions/categories/questions?discussions_q=category%3AQuestions+is%3Aunanswered\" class=\"external-link\" target=\"_blank\">GitHub 디스커션</a>\n+* <a href=\"https://github.com/fastapi/fastapi/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3Aquestion+-label%3Aanswered+\" class=\"external-link\" target=\"_blank\">GitHub 이슈</a>\n \n-  ## GitHub의 이슈로 다른사람 돕기\n+많은 경우, 여러분은 이미 그 질문에 대한 답을 알고 있을 수도 있습니다. 🤓\n \n-  [존재하는 이슈](https://github.com/fastapi/fastapi/issues)를 확인하고 그것을 시도하고 도와줄 수 있습니다. 대부분의 경우 이미 답을 알고 있는 질문입니다. 🤓\n+만약 많은 사람들의 문제를 도와준다면, 공식적인 [FastAPI 전문가](fastapi-people.md#fastapi-experts){.internal-link target=\\_blank} 가 될 것입니다. 🎉\n \n-  많은 사람들의 문제를 도와준다면, 공식적인 [FastAPI 전문가](https://github.com/fastapi/fastapi/blob/master/docs/en/docs/fastapi-people.md#experts) 가 될 수 있습니다{.internal-link target=_blank}. 🎉\n+가장 중요한 점은: 친절하려고 노력하는 것입니다. 사람들은 좌절감을 안고 오며, 많은 경우 최선의 방식으로 질문하지 않을 수도 있습니다. 하지만 최대한 친절하게 대하려고 노력하세요. 🤗\n \n-  ## GitHub 저장소 보기\n+**FastAPI** 커뮤니티의 목표는 친절하고 환영하는 것입니다. 동시에, 괴롭힘이나 무례한 행동을 받아들이지 마세요. 우리는 서로를 돌봐야 합니다.\n \n-  GitHub에서 FastAPI를 \"watch\"할 수 있습니다 (오른쪽 상단 watch 버튼을 클릭): https://github.com/fastapi/fastapi. 👀\n+---\n \n-  \"Releases only\" 대신 \"Watching\"을 선택하면 다른 사용자가 새로운 issue를 생성할 때 알림이 수신됩니다.\n+다른 사람들의 질문 (디스커션 또는 이슈에서) 해결을 도울 수 있는 방법은 다음과 같습니다.\n \n-  그런 다음 이런 issues를 해결 할 수 있도록 도움을 줄 수 있습니다.\n+### 질문 이해하기\n \n-  ## 이슈 생성하기\n+* 질문하는 사람이 가진 **목적**과 사용 사례를 이해할 수 있는지 확인하세요.\n \n-  GitHub 저장소에 [새로운 이슈 생성](https://github.com/fastapi/fastapi/issues/new/choose) 을 할 수 있습니다, 예를들면 다음과 같습니다:\n+* 질문 (대부분은 질문입니다)이 **명확**한지 확인하세요.\n \n-  - **질문**을 하거나 **문제**에 대해 질문합니다.\n-  - 새로운 **기능**을 제안 합니다.\n+* 많은 경우, 사용자가 가정한 해결책에 대한 질문을 하지만, 더 **좋은** 해결책이 있을 수 있습니다. 문제와 사용 사례를 더 잘 이해하면 더 나은 **대안적인 해결책**을 제안할 수 있습니다.\n \n-  **참고**: 만약 이슈를 생성한다면, 저는 여러분에게 다른 사람들을 도와달라고 부탁할 것입니다. 😉\n+* 질문을 이해할 수 없다면, 더 **자세한 정보**를 요청하세요.\n \n-  ## Pull Request를 만드십시오\n+### 문제 재현하기\n \n-  Pull Requests를 이용하여 소스코드에 [컨트리뷰트](https://github.com/fastapi/fastapi/blob/master/docs/en/docs/contributing.md){.internal-link target=_blank} 할 수 있습니다. 예를 들면 다음과 같습니다:\n+대부분의 경우, 질문은 질문자의 **원본 코드**와 관련이 있습니다.\n \n-  - 문서에서 찾은 오타를 수정할 때.\n+많은 경우, 코드의 일부만 복사해서 올리지만, 그것만으로는 **문제를 재현**하기에 충분하지 않습니다.\n \n-  - FastAPI를 [편집하여](https://github.com/fastapi/fastapi/edit/master/docs/en/data/external_links.yml) 작성했거나 찾은 문서, 비디오 또는 팟캐스트를 공유할 때.\n+* 질문자에게 <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\" class=\"external-link\" target=\"_blank\">최소한의 재현 가능한 예제</a>를 제공해달라고 요청하세요. 이렇게 하면 코드를 **복사-붙여넣기**하여 직접 실행하고, 동일한 오류나 동작을 확인하거나 사용 사례를 더 잘 이해할 수 있습니다.\n \n-    - 해당 섹션의 시작 부분에 링크를 추가했는지 확인하십시오.\n+* 너그러운 마음이 든다면, 문제 설명만을 기반으로 직접 **예제를 만들어**볼 수도 있습니다. 하지만, 이는 시간이 많이 걸릴 수 있으므로, 먼저 질문을 명확히 해달라고 요청하는 것이 좋습니다.\n \n-  - 당신의 언어로 [문서 번역하는데](https://github.com/fastapi/fastapi/blob/master/docs/en/docs/contributing.md#translations){.internal-link target=_blank} 기여할 때.\n+### 해결책 제안하기\n \n-    - 또한 다른 사용자가 만든 번역을 검토하는데 도움을 줄 수도 있습니다.\n+* 질문을 충분히 이해한 후에는 가능한 **답변**을 제공할 수 있습니다.\n \n-  - 새로운 문서의 섹션을 제안할 때.\n+* 많은 경우, 질문자의 **근본적인 문제나 사용 사례**를 이해하는 것이 중요합니다. 그들이 시도하는 방법보다 더 나은 해결책이 있을 수 있기 때문입니다.\n \n-  - 기존 문제/버그를 수정할 때.\n+### 해결 요청하기\n \n-  - 새로운 feature를 추가할 때.\n+질문자가 답변을 확인하고 나면, 당신이 문제를 해결했을 가능성이 높습니다. 축하합니다, **당신은 영웅입니다**! 🦸\n \n-  ## 채팅에 참여하십시오\n+* 이제 문제를 해결했다면, 질문자에게 다음을 요청할 수 있습니다.\n \n-  👥 [디스코드 채팅 서버](https://discord.gg/VQjSZaeJmf) 👥 에 가입하고 FastAPI 커뮤니티에서 다른 사람들과 어울리세요.\n+    * GitHub 디스커션에서: 댓글을 **답변**으로 표시하도록 요청하세요.\n+    * GitHub 이슈에서: 이슈를 **닫아달라고** 요청하세요.\n \n-  /// tip\n+## GitHub 저장소 보기\n \n-  질문이 있는 경우, [GitHub 이슈 ](https://github.com/fastapi/fastapi/issues/new/choose) 에서 질문하십시오, [FastAPI 전문가](https://github.com/fastapi/fastapi/blob/master/docs/en/docs/fastapi-people.md#experts) 의 도움을 받을 가능성이 높습니다{.internal-link target=_blank} .\n+GitHub에서 FastAPI를 \"watch\"할 수 있습니다 (오른쪽 상단 watch 버튼을 클릭): <a href=\"https://github.com/fastapi/fastapi\" class=\"external-link\" target=\"_blank\">https://github.com/fastapi/fastapi</a>. 👀\n \n-  ///\n+\"Releases only\" 대신 \"Watching\"을 선택하면, 새로운 issue나 질문이 생성될 때 알림을 받을 수 있습니다. 또한, 특정하게 새로운 issue, discussion, PR 등만 알림 받도록 설정할 수도 있습니다.",
        "comment_created_at": "2025-02-09T15:32:39+00:00",
        "comment_author": "yes0ng",
        "comment_body": "```suggestion\r\n\"Releases only\" 대신 \"Watching\"을 선택하면, 새로운 이슈나 질문이 생성될 때 알림을 받을 수 있습니다. 또한, 특정하게 새로운 이슈, 디스커션, PR 등만 알림 받도록 설정할 수도 있습니다.\r\n```\r\nI think It would be better to translate \"issue\"→\"이슈\" and \"discussion\"→\"디스커션\" in lines 130, 132.\r\nBecause \"이슈\" and \"디스커션\" are already used in lines 72, 89, and 123.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1946574841",
    "pr_number": 13265,
    "pr_file": "docs/ko/docs/advanced/custom-response.md",
    "created_at": "2025-02-07T14:02:33+00:00",
    "commented_code": "+# 사용자 정의 응답 - HTML, Stream, 파일, 기타\n+\n+기본적으로, **FastAPI** 응답을 `JSONResponse`를 사용하여 반환합니다.\n+\n+이를 재정의 하려면 [응답을 직접 반환하기](response-directly.md){.internal-link target=_blank}에서 본 것처럼 `Response`를 직접 반환하면 됩니다.\n+\n+그러나 `Response` (또는 `JSONResponse`와 같은 하위 클래스)를 직접 반환하면, 데이터가 자동으로 변환되지 않으며 (심지어 `response_model`을 선언했더라도), 문서화가 자동으로 생성되지 않습니다(예를 들어, 생성된 OpenAPI의 일부로 HTTP 헤더 `Content-Type`에 특정 \"미디어 타입\"을 포함하는 경우).\n+\n+하지만 *경로 작업 데코레이터*에서 `response_class` 매개변수를 사용하여 원하는 `Response`(예: 모든 `Response` 하위 클래스)를 선언할 수도 있습니다.\n+\n+*경로 작업 함수*에서 반환하는 내용은 해당 `Response`안에 포함됩니다.\n+\n+그리고 만약 그 `Response`가 `JSONResponse`와 `UJSONResponse`의 경우 처럼 JSON 미디어 타입(`application/json`)을 가지고 있다면, *경로 작업 데코레이터*에서 선언한 Pydantic의 `response_model`을 사용해 자동으로 변환(및 필터링) 됩니다.\n+\n+/// note | 참고\n+\n+미디어 타입이 없는 응답 클래스를 사용하는 경우, FastAPI는 응답에 내용이 없을 것으로 예상하므로 생성된 OpenAPI 문서에서 응답 형식을 문서화하지 않습니다.\n+\n+///\n+\n+## `ORJSONResponse` 사용하기\n+\n+예를 들어, 성능을 극대화하려는 경우, <a href=\"https://github.com/ijl/orjson\" class=\"external-link\" target=\"_blank\">orjson</a>을 설치하여 사용하고 응답을 `ORJSONResponse`로 설정 할수 있습니다.\n+\n+사용하고자 하는 `Response` 클래스(하위 클래스)를 가져와서 **경로 작동 테코레이터*에서 선언하세요.\n+\n+대규모 응답의 경우, 사전을 반환하는 것보다 `Response`를 반환하는 것이 훨씬 빠릅니다.\n+\n+이유는 기본적으로, FastAPI가 내부의 모든 항목을 검사하고 JSON으로 직렬화할 수 있는지 확인하기 때문입니다. 이는 사용자 안내서에서 설명된 [JSON 호환 가능 인코더](../tutorial/encoder.md){.internal-link target=_blank}를 사용하는 방식과 동일합니다. 이를 통해 데이터베이스 모델과 같은 **임의의 객체**를 반환할 수 있습니다.\n+\n+하지만 반환하는 내용이 **JSON으로 직렬화 가능**하다고 확신하는 경우, 해당 내용을 응답 클래스에 직접 전달할 수 있으며, FastAPI가 반환 내용을 `jsonable_encoder`를 통해 처리한 뒤 응답 클래스에 전달하는 추가적인 시간을 피할 수 있습니다.\n+\n+{* ../../docs_src/custom_response/tutorial001b.py hl[2,7] *}\n+\n+/// info | 정보\n+\n+`response_class` 매개변수는 응답의 \"미디어 타입\"을 정의하는 데에도 사용됩니다.\n+\n+이 경우, HTTP 헤더 `Content-Type`은 `application/json`으로 설정됩니다.\n+\n+그리고 이는 OpenAPI에 그대로 문서화됩니다.\n+\n+///\n+\n+/// tip | 팁\n+\n+`ORJSONResponse`는 FastAPI에서만 사용할 수 있고 Starlette에서는 사용할 수 없습니다.\n+\n+///\n+\n+## HTML 응답\n+\n+**FastAPI**에서 HTML 응답을 직접 반환하려면 `HTMLResponse`를 사용하세요.\n+\n+* `HTMLResponse`를 가져옵니다.",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1946574841",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13265,
        "pr_file": "docs/ko/docs/advanced/custom-response.md",
        "discussion_id": "1946574841",
        "commented_code": "@@ -0,0 +1,313 @@\n+# 사용자 정의 응답 - HTML, Stream, 파일, 기타\n+\n+기본적으로, **FastAPI** 응답을 `JSONResponse`를 사용하여 반환합니다.\n+\n+이를 재정의 하려면 [응답을 직접 반환하기](response-directly.md){.internal-link target=_blank}에서 본 것처럼 `Response`를 직접 반환하면 됩니다.\n+\n+그러나 `Response` (또는 `JSONResponse`와 같은 하위 클래스)를 직접 반환하면, 데이터가 자동으로 변환되지 않으며 (심지어 `response_model`을 선언했더라도), 문서화가 자동으로 생성되지 않습니다(예를 들어, 생성된 OpenAPI의 일부로 HTTP 헤더 `Content-Type`에 특정 \"미디어 타입\"을 포함하는 경우).\n+\n+하지만 *경로 작업 데코레이터*에서 `response_class` 매개변수를 사용하여 원하는 `Response`(예: 모든 `Response` 하위 클래스)를 선언할 수도 있습니다.\n+\n+*경로 작업 함수*에서 반환하는 내용은 해당 `Response`안에 포함됩니다.\n+\n+그리고 만약 그 `Response`가 `JSONResponse`와 `UJSONResponse`의 경우 처럼 JSON 미디어 타입(`application/json`)을 가지고 있다면, *경로 작업 데코레이터*에서 선언한 Pydantic의 `response_model`을 사용해 자동으로 변환(및 필터링) 됩니다.\n+\n+/// note | 참고\n+\n+미디어 타입이 없는 응답 클래스를 사용하는 경우, FastAPI는 응답에 내용이 없을 것으로 예상하므로 생성된 OpenAPI 문서에서 응답 형식을 문서화하지 않습니다.\n+\n+///\n+\n+## `ORJSONResponse` 사용하기\n+\n+예를 들어, 성능을 극대화하려는 경우, <a href=\"https://github.com/ijl/orjson\" class=\"external-link\" target=\"_blank\">orjson</a>을 설치하여 사용하고 응답을 `ORJSONResponse`로 설정 할수 있습니다.\n+\n+사용하고자 하는 `Response` 클래스(하위 클래스)를 가져와서 **경로 작동 테코레이터*에서 선언하세요.\n+\n+대규모 응답의 경우, 사전을 반환하는 것보다 `Response`를 반환하는 것이 훨씬 빠릅니다.\n+\n+이유는 기본적으로, FastAPI가 내부의 모든 항목을 검사하고 JSON으로 직렬화할 수 있는지 확인하기 때문입니다. 이는 사용자 안내서에서 설명된 [JSON 호환 가능 인코더](../tutorial/encoder.md){.internal-link target=_blank}를 사용하는 방식과 동일합니다. 이를 통해 데이터베이스 모델과 같은 **임의의 객체**를 반환할 수 있습니다.\n+\n+하지만 반환하는 내용이 **JSON으로 직렬화 가능**하다고 확신하는 경우, 해당 내용을 응답 클래스에 직접 전달할 수 있으며, FastAPI가 반환 내용을 `jsonable_encoder`를 통해 처리한 뒤 응답 클래스에 전달하는 추가적인 시간을 피할 수 있습니다.\n+\n+{* ../../docs_src/custom_response/tutorial001b.py hl[2,7] *}\n+\n+/// info | 정보\n+\n+`response_class` 매개변수는 응답의 \"미디어 타입\"을 정의하는 데에도 사용됩니다.\n+\n+이 경우, HTTP 헤더 `Content-Type`은 `application/json`으로 설정됩니다.\n+\n+그리고 이는 OpenAPI에 그대로 문서화됩니다.\n+\n+///\n+\n+/// tip | 팁\n+\n+`ORJSONResponse`는 FastAPI에서만 사용할 수 있고 Starlette에서는 사용할 수 없습니다.\n+\n+///\n+\n+## HTML 응답\n+\n+**FastAPI**에서 HTML 응답을 직접 반환하려면 `HTMLResponse`를 사용하세요.\n+\n+* `HTMLResponse`를 가져옵니다.",
        "comment_created_at": "2025-02-07T14:02:33+00:00",
        "comment_author": "timothy-jeong",
        "comment_body": "Since \"import\" is a [Python-specific keyword](https://docs.python.org/3.13/reference/import.html), retaining it as \"임포트\" preserves its intended meaning. I recommend keeping it as is.\r\n\r\nOther Korean translated documents, such as [body-fields](https://fastapi.tiangolo.com/ko/tutorial/body-fields/#field) and [body-nested-models](https://fastapi.tiangolo.com/ko/tutorial/body-nested-models/#typing-list), directly translate the term \"import\" as \"임포트.\"\r\n\r\nthis review include line 25 and 55",
        "pr_file_module": null
      }
    ]
  }
]