[
  {
    "discussion_id": "1961868204",
    "pr_number": 13391,
    "pr_file": "tests/test_openapi_separate_input_output_schemas.py",
    "created_at": "2025-02-19T15:12:51+00:00",
    "commented_code": "Item(name=\"Plumbus\"),\n         ]\n \n-    client = TestClient(app)\n-    return client\n+    return app\n \n \n-def test_create_item():\n-    client = get_app_client()\n-    client_no = get_app_client(separate_input_output_schemas=False)\n+@pytest.mark.parametrize(\"separate_input_output_schemas\", [True, False])\n+def test_create_item(app: FastAPI, separate_input_output_schemas: bool):",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "1961868204",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13391,
        "pr_file": "tests/test_openapi_separate_input_output_schemas.py",
        "discussion_id": "1961868204",
        "commented_code": "@@ -45,47 +47,40 @@ def read_items() -> List[Item]:\n             Item(name=\"Plumbus\"),\n         ]\n \n-    client = TestClient(app)\n-    return client\n+    return app\n \n \n-def test_create_item():\n-    client = get_app_client()\n-    client_no = get_app_client(separate_input_output_schemas=False)\n+@pytest.mark.parametrize(\"separate_input_output_schemas\", [True, False])\n+def test_create_item(app: FastAPI, separate_input_output_schemas: bool):",
        "comment_created_at": "2025-02-19T15:12:51+00:00",
        "comment_author": "valentinDruzhinin",
        "comment_body": "I would rename the testcase to be smt like: `test_create_item_when_separate_input_output_schemas_is`.\r\nIn that case we will have the clearer log output.",
        "pr_file_module": null
      },
      {
        "comment_id": "1961926631",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13391,
        "pr_file": "tests/test_openapi_separate_input_output_schemas.py",
        "discussion_id": "1961868204",
        "commented_code": "@@ -45,47 +47,40 @@ def read_items() -> List[Item]:\n             Item(name=\"Plumbus\"),\n         ]\n \n-    client = TestClient(app)\n-    return client\n+    return app\n \n \n-def test_create_item():\n-    client = get_app_client()\n-    client_no = get_app_client(separate_input_output_schemas=False)\n+@pytest.mark.parametrize(\"separate_input_output_schemas\", [True, False])\n+def test_create_item(app: FastAPI, separate_input_output_schemas: bool):",
        "comment_created_at": "2025-02-19T15:43:24+00:00",
        "comment_author": "alv2017",
        "comment_body": "I do not agree with that:\r\n1) This was the initial name of the test. The renaming of tests is not the goal of this PR. \r\n\r\n2) Moreover, we already see the information on what do we test from the name of the test, and if we use the verbosity option -v, we will also see what value is set on the parameter in each of the tests. Hence there is no need to add an extra information to the name of the test.",
        "pr_file_module": null
      },
      {
        "comment_id": "1962319223",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 13391,
        "pr_file": "tests/test_openapi_separate_input_output_schemas.py",
        "discussion_id": "1961868204",
        "commented_code": "@@ -45,47 +47,40 @@ def read_items() -> List[Item]:\n             Item(name=\"Plumbus\"),\n         ]\n \n-    client = TestClient(app)\n-    return client\n+    return app\n \n \n-def test_create_item():\n-    client = get_app_client()\n-    client_no = get_app_client(separate_input_output_schemas=False)\n+@pytest.mark.parametrize(\"separate_input_output_schemas\", [True, False])\n+def test_create_item(app: FastAPI, separate_input_output_schemas: bool):",
        "comment_created_at": "2025-02-19T20:18:43+00:00",
        "comment_author": "valentinDruzhinin",
        "comment_body": "That's what you actually see with your change and `-v` option activated:\r\n```\r\npytest tests/test_openapi_separate_input_output_schemas.py -v\r\n===================================================================== test session starts ======================================================================                                                                                                                                 \r\n\r\ntests/test_openapi_separate_input_output_schemas.py::test_create_item[True] PASSED                                                                       [ 10%]\r\ntests/test_openapi_separate_input_output_schemas.py::test_create_item[False] PASSED                                                                      [ 20%]\r\n```\r\n\r\nAnd that's how it will be after the change:\r\n```\r\npytest tests/test_openapi_separate_input_output_schemas.py -v\r\n===================================================================== test session starts ======================================================================                                                                                                                                 \r\n\r\ntests/test_openapi_separate_input_output_schemas.py::test_create_item_when_separate_input_output_schemas_is[True] PASSED                                 [ 10%]\r\ntests/test_openapi_separate_input_output_schemas.py::test_create_item_when_separate_input_output_schemas_is[False] PASSED                                [ 20%]    \r\n```\r\n\r\nSo right now it requires me to take a look into the testcase to understand what exactly is broken. But with more precise naming you get more info even when take a look on the test log. \r\nOverall that's not a big deal, as I said. Just a recommendation. Feel free to leave it as it is.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "933994583",
    "pr_number": 5168,
    "pr_file": "tests/test_stoplight_elements_docs.py",
    "created_at": "2022-07-31T14:22:30+00:00",
    "commented_code": "+from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n+\n+app = FastAPI(title=\"White Shuli 2\")\n+\n+\n+@app.get(\"/pita/shuli\")",
    "repo_full_name": "fastapi/fastapi",
    "discussion_comments": [
      {
        "comment_id": "933994583",
        "repo_full_name": "fastapi/fastapi",
        "pr_number": 5168,
        "pr_file": "tests/test_stoplight_elements_docs.py",
        "discussion_id": "933994583",
        "commented_code": "@@ -0,0 +1,25 @@\n+from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n+\n+app = FastAPI(title=\"White Shuli 2\")\n+\n+\n+@app.get(\"/pita/shuli\")",
        "comment_created_at": "2022-07-31T14:22:30+00:00",
        "comment_author": "JarroVGIT",
        "comment_body": "Recommend to use very neutral language in tests, like \r\n```\r\n@app.get(\"/a/b\")\r\ndef get_a_and_b():\r\n    return {\"a\": \"b\"}\r\n```\r\nOtherwise this might confuse future developers who have no idea what pita shuli is.",
        "pr_file_module": null
      }
    ]
  }
]