[
  {
    "discussion_id": "1886458689",
    "pr_number": 3249,
    "pr_file": "docs/client/response.md",
    "created_at": "2024-12-16T09:20:59+00:00",
    "commented_code": "\", out)\n \n ## XML\n \n-XML method will unmarshal body to xml.\n+**XML** unmarshals the response body into the provided variable `v` using XML decoding.\n \n ```go title=\"Signature\"\n func (r *Response) XML(v any) error\n ```\n \n ## CBOR\n \n-CBOR method will unmarshal body to CBOR.\n+**CBOR** unmarshals the response body into `v` using CBOR decoding.\n \n ```go title=\"Signature\"\n func (r *Response) CBOR(v any) error\n ```\n \n ## Save\n \n-Save method will save the body to a file or io.Writer.\n+**Save** writes the response body to a file or an `io.Writer`. If `v` is a string, it interprets it as a file path, creates the file (and directories if needed), and writes the response to it. If `v` is an `io.Writer`, it writes directly to it.\n \n ```go title=\"Signature\"\n func (r *Response) Save(v any) error\n ```\n \n ## Reset\n \n-Reset clears the Response object.\n+**Reset** clears the `Response` object, making it ready for reuse by `ReleaseResponse`.\n \n ```go title=\"Signature\"\n-func (r *Response) Reset() \n+func (r *Response) Reset()\n ```\n \n ## Close\n \n-Close method will release the Request and Response objects; after calling Close, please do not use these objects.\n+**Close** releases both the associated `Request` and `Response` objects back to their pools.\n+\n+\u26a0\ufe0f **WARNING**: After calling `Close`, any attempt to use the request or response may result in data races or undefined behavior. Ensure all processing is complete before closing.",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "1886458689",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3249,
        "pr_file": "docs/client/response.md",
        "discussion_id": "1886458689",
        "commented_code": "@@ -238,39 +241,41 @@ fmt.Printf(\"%+v\\n\", out)\n \n ## XML\n \n-XML method will unmarshal body to xml.\n+**XML** unmarshals the response body into the provided variable `v` using XML decoding.\n \n ```go title=\"Signature\"\n func (r *Response) XML(v any) error\n ```\n \n ## CBOR\n \n-CBOR method will unmarshal body to CBOR.\n+**CBOR** unmarshals the response body into `v` using CBOR decoding.\n \n ```go title=\"Signature\"\n func (r *Response) CBOR(v any) error\n ```\n \n ## Save\n \n-Save method will save the body to a file or io.Writer.\n+**Save** writes the response body to a file or an `io.Writer`. If `v` is a string, it interprets it as a file path, creates the file (and directories if needed), and writes the response to it. If `v` is an `io.Writer`, it writes directly to it.\n \n ```go title=\"Signature\"\n func (r *Response) Save(v any) error\n ```\n \n ## Reset\n \n-Reset clears the Response object.\n+**Reset** clears the `Response` object, making it ready for reuse by `ReleaseResponse`.\n \n ```go title=\"Signature\"\n-func (r *Response) Reset() \n+func (r *Response) Reset()\n ```\n \n ## Close\n \n-Close method will release the Request and Response objects; after calling Close, please do not use these objects.\n+**Close** releases both the associated `Request` and `Response` objects back to their pools.\n+\n+\u26a0\ufe0f **WARNING**: After calling `Close`, any attempt to use the request or response may result in data races or undefined behavior. Ensure all processing is complete before closing.",
        "comment_created_at": "2024-12-16T09:20:59+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "```suggestion\r\n:::warning\r\nAfter calling `Close`, any attempt to use the request or response may result in data races or undefined behavior. Ensure all processing is complete before closing.\r\n:::\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1886463455",
    "pr_number": 3249,
    "pr_file": "docs/client/hooks.md",
    "created_at": "2024-12-16T09:24:15+00:00",
    "commented_code": "</details>\n \n-There are also some builtin request hooks provide some functionalities for Fiber client. Here is a list of them:\n+### Built-in Request Hooks\n \n-- [parserRequestURL](https://github.com/gofiber/fiber/blob/main/client/hooks.go#L62): parserRequestURL customizes the URL according to the path params and query params. It's necessary for `PathParam` and `QueryParam` methods.\n+Fiber provides some built-in request hooks:\n \n-- [parserRequestHeader](https://github.com/gofiber/fiber/blob/main/client/hooks.go#L113): parserRequestHeader sets request headers, cookies, body type, referer, user agent according to client and request properties. It's necessary to make request header and cookiejar methods functional.\n+- **parserRequestURL**: Normalizes and customizes the URL based on path and query parameters. Required for `PathParam` and `QueryParam` methods.\n+- **parserRequestHeader**: Sets request headers, cookies, content type, referer, and user agent based on client and request properties.\n+- **parserRequestBody**: Automatically serializes the request body (JSON, XML, form, file uploads, etc.).\n \n-- [parserRequestBody](https://github.com/gofiber/fiber/blob/main/client/hooks.go#L178): parserRequestBody serializes the body automatically. It is useful for XML, JSON, form, file bodies.\n+If any request hook returns an error, the request is interrupted and the error is returned immediately.",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "1886463455",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3249,
        "pr_file": "docs/client/hooks.md",
        "discussion_id": "1886463455",
        "commented_code": "@@ -73,17 +88,17 @@ Full Name: gofiber/fiber\n \n </details>\n \n-There are also some builtin request hooks provide some functionalities for Fiber client. Here is a list of them:\n+### Built-in Request Hooks\n \n-- [parserRequestURL](https://github.com/gofiber/fiber/blob/main/client/hooks.go#L62): parserRequestURL customizes the URL according to the path params and query params. It's necessary for `PathParam` and `QueryParam` methods.\n+Fiber provides some built-in request hooks:\n \n-- [parserRequestHeader](https://github.com/gofiber/fiber/blob/main/client/hooks.go#L113): parserRequestHeader sets request headers, cookies, body type, referer, user agent according to client and request properties. It's necessary to make request header and cookiejar methods functional.\n+- **parserRequestURL**: Normalizes and customizes the URL based on path and query parameters. Required for `PathParam` and `QueryParam` methods.\n+- **parserRequestHeader**: Sets request headers, cookies, content type, referer, and user agent based on client and request properties.\n+- **parserRequestBody**: Automatically serializes the request body (JSON, XML, form, file uploads, etc.).\n \n-- [parserRequestBody](https://github.com/gofiber/fiber/blob/main/client/hooks.go#L178): parserRequestBody serializes the body automatically. It is useful for XML, JSON, form, file bodies.\n+If any request hook returns an error, the request is interrupted and the error is returned immediately.",
        "comment_created_at": "2024-12-16T09:24:15+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "```suggestion\r\n:::info\r\nIf any request hook returns an error, the request is interrupted and the error is returned immediately.\r\n:::\r\n```",
        "pr_file_module": null
      }
    ]
  }
]