[
  {
    "discussion_id": "1997841755",
    "pr_number": 3354,
    "pr_file": ".golangci.yml",
    "created_at": "2025-03-17T02:19:25+00:00",
    "commented_code": "disabled: true # TODO: Do not disable\n       - name: unhandled-error\n         arguments: ['bytes\\.Buffer\\.Write']\n+      - name: unhandled-error\n+        disabled: true",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "1997841755",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3354,
        "pr_file": ".golangci.yml",
        "discussion_id": "1997841755",
        "commented_code": "@@ -187,6 +187,8 @@ linters-settings:\n         disabled: true # TODO: Do not disable\n       - name: unhandled-error\n         arguments: ['bytes\\.Buffer\\.Write']\n+      - name: unhandled-error\n+        disabled: true",
        "comment_created_at": "2025-03-17T02:19:25+00:00",
        "comment_author": "ldez",
        "comment_body": "there is a duplication of `unhandled-error`",
        "pr_file_module": null
      },
      {
        "comment_id": "1997844947",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3354,
        "pr_file": ".golangci.yml",
        "discussion_id": "1997841755",
        "commented_code": "@@ -187,6 +187,8 @@ linters-settings:\n         disabled: true # TODO: Do not disable\n       - name: unhandled-error\n         arguments: ['bytes\\.Buffer\\.Write']\n+      - name: unhandled-error\n+        disabled: true",
        "comment_created_at": "2025-03-17T02:25:47+00:00",
        "comment_author": "gaby",
        "comment_body": "Fixed, thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1501072460",
    "pr_number": 2874,
    "pr_file": ".golangci.yml",
    "created_at": "2024-02-23T19:12:15+00:00",
    "commented_code": "tenv:\n     all: true\n \n-  #unparam:\n-  #  check-exported: true\n+  testifylint:\n+    enable-all: true\n+    # TODO: Do not disable any options\n+    disable:\n+      - go-require\n+\n+  testpackage:\n+    skip-regexp: \"^$\"\n+\n+  unparam:\n+    # NOTE: Set this option to false if other projects rely on this project's code\n+    check-exported: false\n+\n+  unused:\n+    # TODO: Uncomment these two lines\n+    # parameters-are-used: false\n+    # local-variables-are-used: false\n+    # NOTE: Set these options to true if other projects rely on this project's code\n+    field-writes-are-uses: true\n+    # exported-is-used: true # TODO: Fix issues with this option (upstream)\n+    exported-fields-are-used: true\n+\n+  usestdlibvars:\n+    http-method: true\n+    http-status-code: true\n+    time-weekday: false # TODO: Set to true\n+    time-month: false # TODO: Set to true\n+    time-layout: false # TODO: Set to true\n+    crypto-hash: true\n+    default-rpc-path: true\n+    os-dev-null: true\n+    sql-isolation-level: true\n+    tls-signature-scheme: true\n+    constant-kind: true\n+    syslog-priority: true\n \n   wrapcheck:\n     ignorePackageGlobs:\n       - github.com/gofiber/fiber/*\n       - github.com/valyala/fasthttp\n \n issues:\n-   exclude-use-default: false\n+  exclude-use-default: false\n+  exclude-case-sensitive: true\n+  max-issues-per-linter: 0\n+  max-same-issues: 0\n+  exclude-rules:\n+    - linters:\n+        - goerr113\n+      text: 'do not define dynamic errors, use wrapped static errors instead*'\n+  # fix: true\n \n linters:\n-  disable:\n-    - spancheck # opentelemetry, irrelevant\n-    - tagalign  # requires awkward manual formatting of struct tags\n   enable:\n     - asasalint\n     - asciicheck\n     - bidichk\n     - bodyclose\n     - containedctx\n     - contextcheck\n+    # - cyclop\n+    - deadcode\n+    - decorder\n     - depguard\n     - dogsled\n+    # - dupl\n+    # - dupword # TODO: Enable\n     - durationcheck\n     - errcheck\n     - errchkjson\n     - errname\n     - errorlint\n     - execinquery\n     - exhaustive\n+    # - exhaustivestruct\n+    # - exhaustruct\n     - exportloopref\n     - forbidigo\n     - forcetypeassert\n-    # - gochecksumtype # TODO https://github.com/gofiber/fiber/issues/2816\n-    # - goconst # TODO https://github.com/gofiber/fiber/issues/2816\n+    # - funlen\n+    # - gci # TODO: Enable\n+    - ginkgolinter\n+    # - gocheckcompilerdirectives # TODO: Enable\n+    # - gochecknoglobals # TODO: Enable\n+    # - gochecknoinits # TODO: Enable\n+    - gochecksumtype\n+    # - gocognit\n+    # - goconst # TODO: Enable\n     - gocritic\n+    # - gocyclo\n+    # - godot\n+    # - godox\n+    - goerr113\n     - gofmt\n     - gofumpt\n-    - goimports\n+    # - goheader\n+    # - goimports\n+    # - golint\n+    # - gomnd # TODO: Enable\n     - gomoddirectives\n+    # - gomodguard\n     - goprintffuncname\n     - gosec\n     - gosimple\n-    # - gosmopolitan # TODO https://github.com/gofiber/fiber/issues/2816\n+    # - gosmopolitan # TODO: Enable\n     - govet\n     - grouper\n-    - inamedparam\n+    # - ifshort # TODO: Enable\n+    # - importas\n+    # - inamedparam\n+    - ineffassign\n+    # - interfacebloat\n+    # - interfacer\n+    # - ireturn\n+    # - lll\n     - loggercheck\n+    # - maintidx\n+    - makezero\n+    # - maligned\n     - mirror\n     - misspell\n+    - musttag\n     - nakedret\n+    # - nestif\n     - nilerr\n     - nilnil\n+    # - nlreturn\n     - noctx\n     - nolintlint\n     - nonamedreturns\n+    - nosnakecase\n     - nosprintfhostport\n+    # - paralleltest # TODO: Enable\n     - perfsprint\n+    # - prealloc\n     - predeclared\n     - promlinter\n+    - protogetter\n     - reassign\n     - revive\n     - rowserrcheck\n+    # - scopelint # TODO: Enable\n+    - sloglint\n+    - spancheck\n     - sqlclosecheck\n     - staticcheck\n+    - structcheck\n     - stylecheck\n+    # - tagalign # TODO: Enable\n     - tagliatelle\n+    - tenv\n+    - testableexamples\n     - testifylint\n-    # - testpackage # TODO: Enable once https://github.com/gofiber/fiber/issues/2252 is implemented\n+    # - testpackage # TODO: Enable\n     - thelper\n     - tparallel\n     - typecheck\n     - unconvert\n     - unparam\n     - unused\n     - usestdlibvars\n-    # - wastedassign # TODO https://github.com/gofiber/fiber/issues/2816\n+    - varcheck",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "1501072460",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 2874,
        "pr_file": ".golangci.yml",
        "discussion_id": "1501072460",
        "commented_code": "@@ -151,84 +213,171 @@ linters-settings:\n   tenv:\n     all: true\n \n-  #unparam:\n-  #  check-exported: true\n+  testifylint:\n+    enable-all: true\n+    # TODO: Do not disable any options\n+    disable:\n+      - go-require\n+\n+  testpackage:\n+    skip-regexp: \"^$\"\n+\n+  unparam:\n+    # NOTE: Set this option to false if other projects rely on this project's code\n+    check-exported: false\n+\n+  unused:\n+    # TODO: Uncomment these two lines\n+    # parameters-are-used: false\n+    # local-variables-are-used: false\n+    # NOTE: Set these options to true if other projects rely on this project's code\n+    field-writes-are-uses: true\n+    # exported-is-used: true # TODO: Fix issues with this option (upstream)\n+    exported-fields-are-used: true\n+\n+  usestdlibvars:\n+    http-method: true\n+    http-status-code: true\n+    time-weekday: false # TODO: Set to true\n+    time-month: false # TODO: Set to true\n+    time-layout: false # TODO: Set to true\n+    crypto-hash: true\n+    default-rpc-path: true\n+    os-dev-null: true\n+    sql-isolation-level: true\n+    tls-signature-scheme: true\n+    constant-kind: true\n+    syslog-priority: true\n \n   wrapcheck:\n     ignorePackageGlobs:\n       - github.com/gofiber/fiber/*\n       - github.com/valyala/fasthttp\n \n issues:\n-   exclude-use-default: false\n+  exclude-use-default: false\n+  exclude-case-sensitive: true\n+  max-issues-per-linter: 0\n+  max-same-issues: 0\n+  exclude-rules:\n+    - linters:\n+        - goerr113\n+      text: 'do not define dynamic errors, use wrapped static errors instead*'\n+  # fix: true\n \n linters:\n-  disable:\n-    - spancheck # opentelemetry, irrelevant\n-    - tagalign  # requires awkward manual formatting of struct tags\n   enable:\n     - asasalint\n     - asciicheck\n     - bidichk\n     - bodyclose\n     - containedctx\n     - contextcheck\n+    # - cyclop\n+    - deadcode\n+    - decorder\n     - depguard\n     - dogsled\n+    # - dupl\n+    # - dupword # TODO: Enable\n     - durationcheck\n     - errcheck\n     - errchkjson\n     - errname\n     - errorlint\n     - execinquery\n     - exhaustive\n+    # - exhaustivestruct\n+    # - exhaustruct\n     - exportloopref\n     - forbidigo\n     - forcetypeassert\n-    # - gochecksumtype # TODO https://github.com/gofiber/fiber/issues/2816\n-    # - goconst # TODO https://github.com/gofiber/fiber/issues/2816\n+    # - funlen\n+    # - gci # TODO: Enable\n+    - ginkgolinter\n+    # - gocheckcompilerdirectives # TODO: Enable\n+    # - gochecknoglobals # TODO: Enable\n+    # - gochecknoinits # TODO: Enable\n+    - gochecksumtype\n+    # - gocognit\n+    # - goconst # TODO: Enable\n     - gocritic\n+    # - gocyclo\n+    # - godot\n+    # - godox\n+    - goerr113\n     - gofmt\n     - gofumpt\n-    - goimports\n+    # - goheader\n+    # - goimports\n+    # - golint\n+    # - gomnd # TODO: Enable\n     - gomoddirectives\n+    # - gomodguard\n     - goprintffuncname\n     - gosec\n     - gosimple\n-    # - gosmopolitan # TODO https://github.com/gofiber/fiber/issues/2816\n+    # - gosmopolitan # TODO: Enable\n     - govet\n     - grouper\n-    - inamedparam\n+    # - ifshort # TODO: Enable\n+    # - importas\n+    # - inamedparam\n+    - ineffassign\n+    # - interfacebloat\n+    # - interfacer\n+    # - ireturn\n+    # - lll\n     - loggercheck\n+    # - maintidx\n+    - makezero\n+    # - maligned\n     - mirror\n     - misspell\n+    - musttag\n     - nakedret\n+    # - nestif\n     - nilerr\n     - nilnil\n+    # - nlreturn\n     - noctx\n     - nolintlint\n     - nonamedreturns\n+    - nosnakecase\n     - nosprintfhostport\n+    # - paralleltest # TODO: Enable\n     - perfsprint\n+    # - prealloc\n     - predeclared\n     - promlinter\n+    - protogetter\n     - reassign\n     - revive\n     - rowserrcheck\n+    # - scopelint # TODO: Enable\n+    - sloglint\n+    - spancheck\n     - sqlclosecheck\n     - staticcheck\n+    - structcheck\n     - stylecheck\n+    # - tagalign # TODO: Enable\n     - tagliatelle\n+    - tenv\n+    - testableexamples\n     - testifylint\n-    # - testpackage # TODO: Enable once https://github.com/gofiber/fiber/issues/2252 is implemented\n+    # - testpackage # TODO: Enable\n     - thelper\n     - tparallel\n     - typecheck\n     - unconvert\n     - unparam\n     - unused\n     - usestdlibvars\n-    # - wastedassign # TODO https://github.com/gofiber/fiber/issues/2816\n+    - varcheck",
        "comment_created_at": "2024-02-23T19:12:15+00:00",
        "comment_author": "nickajacks1",
        "comment_body": "Varcheck is deprecated in favor of unused",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1198741317",
    "pr_number": 2469,
    "pr_file": ".golangci.yml",
    "created_at": "2023-05-19T09:19:54+00:00",
    "commented_code": "sort-results: true\n \n linters-settings:\n+  depguard:\n+    include-go-root: true\n+    packages:\n+      - flag\n+      - io/ioutil\n+      # - reflect # TODO: Disallow reflect package\n+      - unsafe",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "1198741317",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 2469,
        "pr_file": ".golangci.yml",
        "discussion_id": "1198741317",
        "commented_code": "@@ -11,15 +12,29 @@ output:\n   sort-results: true\n \n linters-settings:\n+  depguard:\n+    include-go-root: true\n+    packages:\n+      - flag\n+      - io/ioutil\n+      # - reflect # TODO: Disallow reflect package\n+      - unsafe",
        "comment_created_at": "2023-05-19T09:19:54+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "the performance and speed of fiber and fasthttp relies on some trick with the unsafe packet\r\ni am not sure if we should limit this ? or is the plan to make exceptions where this is used ?",
        "pr_file_module": null
      },
      {
        "comment_id": "1199842478",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 2469,
        "pr_file": ".golangci.yml",
        "discussion_id": "1198741317",
        "commented_code": "@@ -11,15 +12,29 @@ output:\n   sort-results: true\n \n linters-settings:\n+  depguard:\n+    include-go-root: true\n+    packages:\n+      - flag\n+      - io/ioutil\n+      # - reflect # TODO: Disallow reflect package\n+      - unsafe",
        "comment_created_at": "2023-05-21T23:10:26+00:00",
        "comment_author": "leonklingele",
        "comment_body": "I'd go with a allowlist-approach here, i.e. deny the `unsafe` package by default and require `//nolint:depguard //  Explanation why an import of the \"unsafe\" package is required here`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1200008010",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 2469,
        "pr_file": ".golangci.yml",
        "discussion_id": "1198741317",
        "commented_code": "@@ -11,15 +12,29 @@ output:\n   sort-results: true\n \n linters-settings:\n+  depguard:\n+    include-go-root: true\n+    packages:\n+      - flag\n+      - io/ioutil\n+      # - reflect # TODO: Disallow reflect package\n+      - unsafe",
        "comment_created_at": "2023-05-22T06:27:42+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "ok",
        "pr_file_module": null
      }
    ]
  }
]