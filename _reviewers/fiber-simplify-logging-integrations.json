[
  {
    "discussion_id": "1801080689",
    "pr_number": 3153,
    "pr_file": "docs/middleware/logger.md",
    "created_at": "2024-10-15T12:35:19+00:00",
    "commented_code": "app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "1801080689",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-15T12:35:19+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "@haochunchang can we put that or a better generic wrapper in the code so that not every dev has to create this struct? or would that be too undynamic? \r\n\r\nwhat do you think? @gaby @efectn ",
        "pr_file_module": null
      },
      {
        "comment_id": "1801083376",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-15T12:37:10+00:00",
        "comment_author": "gaby",
        "comment_body": "Yeah, this looks too complicated for just a logger. Unless i'm looking at it wrong? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1801084459",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-15T12:37:57+00:00",
        "comment_author": "gaby",
        "comment_body": "Having it in the code would be ideal, a lot of users don't check the docs ",
        "pr_file_module": null
      },
      {
        "comment_id": "1801088735",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-15T12:40:42+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "maybe we should recommend something like this ?\r\n\r\n```go\r\nfunc LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\r\n\treturn &struct {\r\n\t\tWrite func(p []byte) (n int, err error)\r\n\t}{\r\n\t\tWrite: func(p []byte) (n int, err error) {\r\n\t\t\tswitch level {\r\n\t\t\tcase fiberlog.LevelDebug:\r\n\t\t\t\tcustomLogger.Debug(string(p))\r\n\t\t\tcase fiberlog.LevelError:\r\n\t\t\t\tcustomLogger.Error(string(p))\r\n\t\t\t}\r\n\t\t\treturn len(p), nil\r\n\t\t},\r\n\t}\r\n}\r\n```\r\nthen we really don\u00b4t need extra code in the codebase",
        "pr_file_module": null
      },
      {
        "comment_id": "1801200364",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-15T13:44:11+00:00",
        "comment_author": "haochunchang",
        "comment_body": "I think we can provide the `LoggerToWriter` in the example to show how to use fiberlog interface in the middleware.",
        "pr_file_module": null
      },
      {
        "comment_id": "1802855122",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-16T10:42:39+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "ok @haochunchang pls adjust it a little bit\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1806170490",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-18T09:16:28+00:00",
        "comment_author": "haochunchang",
        "comment_body": "I\u2019ve tried to condensed into a single function wrapper that return io.Writer but it seems it still need to declare the `Write` method in order to satisfy the `io.Writer` interface.",
        "pr_file_module": null
      },
      {
        "comment_id": "1806347486",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-18T11:31:23+00:00",
        "comment_author": "gaby",
        "comment_body": "@haochunchang True, that makes sense",
        "pr_file_module": null
      },
      {
        "comment_id": "1812405656",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-23T10:10:09+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "@haochunchang yeah, but in my example its there\r\nso can you update the PR with this code snippet ?",
        "pr_file_module": null
      },
      {
        "comment_id": "1816142497",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-10-25T07:27:48+00:00",
        "comment_author": "haochunchang",
        "comment_body": "Do you mean adding it into the example?\r\nCause I failed to adopt this into the unit tests :sweat_smile:",
        "pr_file_module": null
      },
      {
        "comment_id": "1843316753",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1801080689",
        "commented_code": "@@ -88,6 +88,33 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+type dumbLogger struct {\n+\tlogger fiberlog.AllLogger\n+    level  log.Level\n+}\n+\n+func (l *dumbLogger) Write(p []byte) (n int, err error) {\n+\tswitch l.level {\n+\tcase log.LevelDebug:\n+\t\tl.logger.Debug(string(p))\n+\tcase log.LevelError:\n+\t\tl.logger.Error(string(p))\n+    }\n+\treturn len(p), nil\n+}\n+\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &dumbLogger{\n+        logger: customLogger,\n+        level: level,\n+    }\n+}",
        "comment_created_at": "2024-11-15T07:46:14+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "@haochunchang \r\nyeah add it in the readme in a new sub section",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1855447290",
    "pr_number": 3153,
    "pr_file": "docs/middleware/logger.md",
    "created_at": "2024-11-24T13:10:46+00:00",
    "commented_code": "app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &struct {\n+\t\tWrite func(p []byte) (n int, err error)\n+\t}{\n+\t\tWrite: func(p []byte) (n int, err error) {\n+\t\t\tswitch level {\n+\t\t\tcase fiberlog.LevelDebug:\n+\t\t\t\tcustomLogger.Debug(string(p))\n+\t\t\tcase fiberlog.LevelError:\n+\t\t\t\tcustomLogger.Error(string(p))",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "1855447290",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1855447290",
        "commented_code": "@@ -88,6 +88,27 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &struct {\n+\t\tWrite func(p []byte) (n int, err error)\n+\t}{\n+\t\tWrite: func(p []byte) (n int, err error) {\n+\t\t\tswitch level {\n+\t\t\tcase fiberlog.LevelDebug:\n+\t\t\t\tcustomLogger.Debug(string(p))\n+\t\t\tcase fiberlog.LevelError:\n+\t\t\t\tcustomLogger.Error(string(p))",
        "comment_created_at": "2024-11-24T13:10:46+00:00",
        "comment_author": "efectn",
        "comment_body": "Can you add support for other logging levels too?",
        "pr_file_module": null
      },
      {
        "comment_id": "1863147629",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3153,
        "pr_file": "docs/middleware/logger.md",
        "discussion_id": "1855447290",
        "commented_code": "@@ -88,6 +88,27 @@ app.Use(logger.New(logger.Config{\n app.Use(logger.New(logger.Config{\n     DisableColors: true,\n }))\n+\n+// Use Custom Logger with Fiber Logger Interface\n+func LoggerToWriter(customLogger fiberlog.AllLogger, level fiberlog.Level) io.Writer {\n+\treturn &struct {\n+\t\tWrite func(p []byte) (n int, err error)\n+\t}{\n+\t\tWrite: func(p []byte) (n int, err error) {\n+\t\t\tswitch level {\n+\t\t\tcase fiberlog.LevelDebug:\n+\t\t\t\tcustomLogger.Debug(string(p))\n+\t\t\tcase fiberlog.LevelError:\n+\t\t\t\tcustomLogger.Error(string(p))",
        "comment_created_at": "2024-11-29T08:39:24+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "@coderabbitai pls prepare this change",
        "pr_file_module": null
      }
    ]
  }
]