[
  {
    "discussion_id": "2146400195",
    "pr_number": 3518,
    "pr_file": "middleware/timeout/config.go",
    "created_at": "2025-06-14T03:18:53+00:00",
    "commented_code": "+package timeout\n+\n+import (\n+\t\"time\"\n+\n+\t\"github.com/gofiber/fiber/v3\"\n+)\n+\n+// Config defines the configuration options for the timeout middleware.\n+type Config struct {\n+\t// Next defines a function to skip this middleware.\n+\t// Optional. Default: nil\n+\tNext func(c fiber.Ctx) bool\n+\n+\t// Timeout defines the default timeout duration for all routes.\n+\t// Optional. Default: 0 (no timeout)\n+\tTimeout time.Duration\n+\n+\t// OnTimeout is called when a timeout occurs.\n+\t// Optional. Default: nil (return fiber.ErrRequestTimeout)\n+\tOnTimeout fiber.Handler\n+\n+\t// SkipPaths defines request paths that should ignore the timeout.\n+\t// Optional. Default: nil\n+\tSkipPaths []string\n+\n+\t// Routes allows specifying timeouts per path. If a path is present,\n+\t// its timeout overrides the default Timeout value.\n+\t// Optional. Default: nil\n+\tRoutes map[string]time.Duration\n+\n+\t// Errors defines custom errors that are treated as timeouts.\n+\t// Optional. Default: nil\n+\tErrors []error\n+}\n+\n+// ConfigDefault is the default configuration.\n+var ConfigDefault = Config{\n+\tNext:      nil,\n+\tTimeout:   0,\n+\tOnTimeout: nil,\n+\tSkipPaths: nil,\n+\tRoutes:    nil,\n+\tErrors:    nil,\n+}\n+\n+// Helper function to set default values.\n+func configDefault(config ...Config) Config {\n+\tif len(config) < 1 {\n+\t\treturn ConfigDefault\n+\t}\n+\n+\tcfg := config[0]\n+\n+\tif cfg.SkipPaths == nil {\n+\t\tcfg.SkipPaths = ConfigDefault.SkipPaths\n+\t}\n+\tif cfg.Routes == nil {\n+\t\tcfg.Routes = ConfigDefault.Routes\n+\t}\n+\tif cfg.OnTimeout == nil {\n+\t\tcfg.OnTimeout = ConfigDefault.OnTimeout\n+\t}\n+\tif cfg.Next == nil {\n+\t\tcfg.Next = ConfigDefault.Next\n+\t}\n+\tif cfg.Errors == nil {",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "2146400195",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3518,
        "pr_file": "middleware/timeout/config.go",
        "discussion_id": "2146400195",
        "commented_code": "@@ -0,0 +1,72 @@\n+package timeout\n+\n+import (\n+\t\"time\"\n+\n+\t\"github.com/gofiber/fiber/v3\"\n+)\n+\n+// Config defines the configuration options for the timeout middleware.\n+type Config struct {\n+\t// Next defines a function to skip this middleware.\n+\t// Optional. Default: nil\n+\tNext func(c fiber.Ctx) bool\n+\n+\t// Timeout defines the default timeout duration for all routes.\n+\t// Optional. Default: 0 (no timeout)\n+\tTimeout time.Duration\n+\n+\t// OnTimeout is called when a timeout occurs.\n+\t// Optional. Default: nil (return fiber.ErrRequestTimeout)\n+\tOnTimeout fiber.Handler\n+\n+\t// SkipPaths defines request paths that should ignore the timeout.\n+\t// Optional. Default: nil\n+\tSkipPaths []string\n+\n+\t// Routes allows specifying timeouts per path. If a path is present,\n+\t// its timeout overrides the default Timeout value.\n+\t// Optional. Default: nil\n+\tRoutes map[string]time.Duration\n+\n+\t// Errors defines custom errors that are treated as timeouts.\n+\t// Optional. Default: nil\n+\tErrors []error\n+}\n+\n+// ConfigDefault is the default configuration.\n+var ConfigDefault = Config{\n+\tNext:      nil,\n+\tTimeout:   0,\n+\tOnTimeout: nil,\n+\tSkipPaths: nil,\n+\tRoutes:    nil,\n+\tErrors:    nil,\n+}\n+\n+// Helper function to set default values.\n+func configDefault(config ...Config) Config {\n+\tif len(config) < 1 {\n+\t\treturn ConfigDefault\n+\t}\n+\n+\tcfg := config[0]\n+\n+\tif cfg.SkipPaths == nil {\n+\t\tcfg.SkipPaths = ConfigDefault.SkipPaths\n+\t}\n+\tif cfg.Routes == nil {\n+\t\tcfg.Routes = ConfigDefault.Routes\n+\t}\n+\tif cfg.OnTimeout == nil {\n+\t\tcfg.OnTimeout = ConfigDefault.OnTimeout\n+\t}\n+\tif cfg.Next == nil {\n+\t\tcfg.Next = ConfigDefault.Next\n+\t}\n+\tif cfg.Errors == nil {",
        "comment_created_at": "2025-06-14T03:18:53+00:00",
        "comment_author": "Andrei-hub11",
        "comment_body": " if cfg.Timeout < 0 {\r\n        cfg.Timeout = ConfigDefault.Timeout  // To avoid the chances of negative values\r\n    }",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2160299835",
    "pr_number": 3535,
    "pr_file": "listen.go",
    "created_at": "2025-06-26T07:48:26+00:00",
    "commented_code": "func listenConfigDefault(config ...ListenConfig) ListenConfig {\n \tif len(config) < 1 {\n \t\treturn ListenConfig{\n-\t\t\tTLSMinVersion:   tls.VersionTLS12,\n-\t\t\tListenerNetwork: NetworkTCP4,\n-\t\t\tShutdownTimeout: 10 * time.Second,\n+\t\t\tTLSMinVersion:      tls.VersionTLS12,\n+\t\t\tListenerNetwork:    NetworkTCP4,\n+\t\t\tUnixSocketFileMode: 0o775,",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "2168423761",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3535,
        "pr_file": "listen.go",
        "discussion_id": "2160299835",
        "commented_code": "@@ -123,9 +128,10 @@ type ListenConfig struct {\n func listenConfigDefault(config ...ListenConfig) ListenConfig {\n \tif len(config) < 1 {\n \t\treturn ListenConfig{\n-\t\t\tTLSMinVersion:   tls.VersionTLS12,\n-\t\t\tListenerNetwork: NetworkTCP4,\n-\t\t\tShutdownTimeout: 10 * time.Second,\n+\t\t\tTLSMinVersion:      tls.VersionTLS12,\n+\t\t\tListenerNetwork:    NetworkTCP4,\n+\t\t\tUnixSocketFileMode: 0o775,",
        "comment_created_at": "2025-06-26T07:48:26+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "@LaptopCat what do you thing?",
        "pr_file_module": null
      },
      {
        "comment_id": "2168605590",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3535,
        "pr_file": "listen.go",
        "discussion_id": "2160299835",
        "commented_code": "@@ -123,9 +128,10 @@ type ListenConfig struct {\n func listenConfigDefault(config ...ListenConfig) ListenConfig {\n \tif len(config) < 1 {\n \t\treturn ListenConfig{\n-\t\t\tTLSMinVersion:   tls.VersionTLS12,\n-\t\t\tListenerNetwork: NetworkTCP4,\n-\t\t\tShutdownTimeout: 10 * time.Second,\n+\t\t\tTLSMinVersion:      tls.VersionTLS12,\n+\t\t\tListenerNetwork:    NetworkTCP4,\n+\t\t\tUnixSocketFileMode: 0o775,",
        "comment_created_at": "2025-06-26T09:18:02+00:00",
        "comment_author": "LaptopCat",
        "comment_body": "> @LaptopCat what do you thing?\r\n\r\nI set 0775 because that was permissions the socket got created with by default for some reason. Maybe something like 0777 or 0666 would be better, so anyone can connect by default (like with regular TCP). Would be good to hear what others think about this too",
        "pr_file_module": null
      },
      {
        "comment_id": "2168763837",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3535,
        "pr_file": "listen.go",
        "discussion_id": "2160299835",
        "commented_code": "@@ -123,9 +128,10 @@ type ListenConfig struct {\n func listenConfigDefault(config ...ListenConfig) ListenConfig {\n \tif len(config) < 1 {\n \t\treturn ListenConfig{\n-\t\t\tTLSMinVersion:   tls.VersionTLS12,\n-\t\t\tListenerNetwork: NetworkTCP4,\n-\t\t\tShutdownTimeout: 10 * time.Second,\n+\t\t\tTLSMinVersion:      tls.VersionTLS12,\n+\t\t\tListenerNetwork:    NetworkTCP4,\n+\t\t\tUnixSocketFileMode: 0o775,",
        "comment_created_at": "2025-06-26T10:41:23+00:00",
        "comment_author": "gaby",
        "comment_body": "This should be 770 by default. If the users the server to be accessible by the whole host they can change it to 775",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1867736475",
    "pr_number": 3220,
    "pr_file": "listen.go",
    "created_at": "2024-12-03T13:37:38+00:00",
    "commented_code": "// Default : \"\"\n \tCertClientFile string `json:\"cert_client_file\"`\n \n+\t// When the graceful shutdown begins, use this field to set the timeout\n+\t// duration. If the timeout is reached, OnShutdownError will be called.\n+\t// The default value is 0, which means the timeout setting is disabled.\n+\t//\n+\t// Default: 0",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "1867736475",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3220,
        "pr_file": "listen.go",
        "discussion_id": "1867736475",
        "commented_code": "@@ -94,6 +93,13 @@ type ListenConfig struct {\n \t// Default : \"\"\n \tCertClientFile string `json:\"cert_client_file\"`\n \n+\t// When the graceful shutdown begins, use this field to set the timeout\n+\t// duration. If the timeout is reached, OnShutdownError will be called.\n+\t// The default value is 0, which means the timeout setting is disabled.\n+\t//\n+\t// Default: 0",
        "comment_created_at": "2024-12-03T13:37:38+00:00",
        "comment_author": "gaby",
        "comment_body": "I think default should be 10s. Having infinite will cause for example Docker to send a `SIGKILL`.\r\n\r\nSee: https://docs.docker.com/reference/cli/docker/container/stop/#time",
        "pr_file_module": null
      },
      {
        "comment_id": "1867749529",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3220,
        "pr_file": "listen.go",
        "discussion_id": "1867736475",
        "commented_code": "@@ -94,6 +93,13 @@ type ListenConfig struct {\n \t// Default : \"\"\n \tCertClientFile string `json:\"cert_client_file\"`\n \n+\t// When the graceful shutdown begins, use this field to set the timeout\n+\t// duration. If the timeout is reached, OnShutdownError will be called.\n+\t// The default value is 0, which means the timeout setting is disabled.\n+\t//\n+\t// Default: 0",
        "comment_created_at": "2024-12-03T13:46:11+00:00",
        "comment_author": "gaby",
        "comment_body": "@efectn @ReneWerner87 Thoughts? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1868833421",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3220,
        "pr_file": "listen.go",
        "discussion_id": "1867736475",
        "commented_code": "@@ -94,6 +93,13 @@ type ListenConfig struct {\n \t// Default : \"\"\n \tCertClientFile string `json:\"cert_client_file\"`\n \n+\t// When the graceful shutdown begins, use this field to set the timeout\n+\t// duration. If the timeout is reached, OnShutdownError will be called.\n+\t// The default value is 0, which means the timeout setting is disabled.\n+\t//\n+\t// Default: 0",
        "comment_created_at": "2024-12-04T07:15:18+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "yeah makes sense, lets have 10s as default\r\n@ksw2000 can you do this",
        "pr_file_module": null
      },
      {
        "comment_id": "1869386186",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 3220,
        "pr_file": "listen.go",
        "discussion_id": "1867736475",
        "commented_code": "@@ -94,6 +93,13 @@ type ListenConfig struct {\n \t// Default : \"\"\n \tCertClientFile string `json:\"cert_client_file\"`\n \n+\t// When the graceful shutdown begins, use this field to set the timeout\n+\t// duration. If the timeout is reached, OnShutdownError will be called.\n+\t// The default value is 0, which means the timeout setting is disabled.\n+\t//\n+\t// Default: 0",
        "comment_created_at": "2024-12-04T12:16:28+00:00",
        "comment_author": "ksw2000",
        "comment_body": "@ReneWerner87 Yes, I have changed the default value to 10s in `listenConfigDefault`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1398276274",
    "pr_number": 2731,
    "pr_file": "middleware/requestid/config.go",
    "created_at": "2023-11-18T21:50:09+00:00",
    "commented_code": "if cfg.Generator == nil {\n \t\tcfg.Generator = ConfigDefault.Generator\n \t}\n-\tif cfg.ContextKey == \"\" {\n+\tif cfg.ContextKey == nil || cfg.ContextKey == \"\" {",
    "repo_full_name": "gofiber/fiber",
    "discussion_comments": [
      {
        "comment_id": "1398276274",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 2731,
        "pr_file": "middleware/requestid/config.go",
        "discussion_id": "1398276274",
        "commented_code": "@@ -57,7 +57,7 @@ func configDefault(config ...Config) Config {\n \tif cfg.Generator == nil {\n \t\tcfg.Generator = ConfigDefault.Generator\n \t}\n-\tif cfg.ContextKey == \"\" {\n+\tif cfg.ContextKey == nil || cfg.ContextKey == \"\" {",
        "comment_created_at": "2023-11-18T21:50:09+00:00",
        "comment_author": "nickajacks1",
        "comment_body": "ContextKey will only ever be \"\" if the user explicitly sets it to that value. In that case, overriding it to be \"requestid\" might be surprising.\r\nThough I suppose changing it to accept \"\" now might break someone's code out there.",
        "pr_file_module": null
      },
      {
        "comment_id": "1402487307",
        "repo_full_name": "gofiber/fiber",
        "pr_number": 2731,
        "pr_file": "middleware/requestid/config.go",
        "discussion_id": "1398276274",
        "commented_code": "@@ -57,7 +57,7 @@ func configDefault(config ...Config) Config {\n \tif cfg.Generator == nil {\n \t\tcfg.Generator = ConfigDefault.Generator\n \t}\n-\tif cfg.ContextKey == \"\" {\n+\tif cfg.ContextKey == nil || cfg.ContextKey == \"\" {",
        "comment_created_at": "2023-11-22T18:00:07+00:00",
        "comment_author": "ReneWerner87",
        "comment_body": "should be fine, check this https://github.com/gofiber/fiber/pull/2731#issuecomment-1823236098",
        "pr_file_module": null
      }
    ]
  }
]