[
  {
    "discussion_id": "1899510207",
    "pr_number": 1021,
    "pr_file": "apps/js-sdk/firecrawl/src/index.ts",
    "created_at": "2024-12-30T12:25:22+00:00",
    "commented_code": "public status: CrawlStatusResponse[\"status\"];\n   public id: string;\n \n+  private static loadWebSocket() {\n+    try {\n+      return require('isows').WebSocket;\n+    } catch {\n+      try {\n+        return import('isows').then(m => m.WebSocket);",
    "repo_full_name": "firecrawl/firecrawl",
    "discussion_comments": [
      {
        "comment_id": "1899510207",
        "repo_full_name": "firecrawl/firecrawl",
        "pr_number": 1021,
        "pr_file": "apps/js-sdk/firecrawl/src/index.ts",
        "discussion_id": "1899510207",
        "commented_code": "@@ -947,10 +947,23 @@ export class CrawlWatcher extends TypedEventTarget<CrawlWatcherEvents> {\n   public status: CrawlStatusResponse[\"status\"];\n   public id: string;\n \n+  private static loadWebSocket() {\n+    try {\n+      return require('isows').WebSocket;\n+    } catch {\n+      try {\n+        return import('isows').then(m => m.WebSocket);",
        "comment_created_at": "2024-12-30T12:25:22+00:00",
        "comment_author": "mogery",
        "comment_body": "Missing an await here, right? Either here or on line 964.",
        "pr_file_module": null
      },
      {
        "comment_id": "1899599904",
        "repo_full_name": "firecrawl/firecrawl",
        "pr_number": 1021,
        "pr_file": "apps/js-sdk/firecrawl/src/index.ts",
        "discussion_id": "1899510207",
        "commented_code": "@@ -947,10 +947,23 @@ export class CrawlWatcher extends TypedEventTarget<CrawlWatcherEvents> {\n   public status: CrawlStatusResponse[\"status\"];\n   public id: string;\n \n+  private static loadWebSocket() {\n+    try {\n+      return require('isows').WebSocket;\n+    } catch {\n+      try {\n+        return import('isows').then(m => m.WebSocket);",
        "comment_created_at": "2024-12-30T14:56:24+00:00",
        "comment_author": "RutamBhagat",
        "comment_body": "Thanks for catching that! I've updated the code to properly handle the WebSocket loading. Could you please review the changes again?",
        "pr_file_module": null
      },
      {
        "comment_id": "1899699126",
        "repo_full_name": "firecrawl/firecrawl",
        "pr_number": 1021,
        "pr_file": "apps/js-sdk/firecrawl/src/index.ts",
        "discussion_id": "1899510207",
        "commented_code": "@@ -947,10 +947,23 @@ export class CrawlWatcher extends TypedEventTarget<CrawlWatcherEvents> {\n   public status: CrawlStatusResponse[\"status\"];\n   public id: string;\n \n+  private static loadWebSocket() {\n+    try {\n+      return require('isows').WebSocket;\n+    } catch {\n+      try {\n+        return import('isows').then(m => m.WebSocket);",
        "comment_created_at": "2024-12-30T17:42:59+00:00",
        "comment_author": "mogery",
        "comment_body": "This can cause a race condition. I'd prefer importing it lazily in an already-asynchronous function, like the watch crawl endpoint's function.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1748592969",
    "pr_number": 634,
    "pr_file": "apps/api/src/scraper/WebScraper/crawler.ts",
    "created_at": "2024-09-07T16:22:09+00:00",
    "commented_code": "if (sitemapLinks.length > 0) {\n       let filteredLinks = this.filterLinks(sitemapLinks, this.limit, this.maxCrawledDepth);\n       return filteredLinks.map(link => ({ url: link, html: \"\" }));\n+    } else {\n+      // Yoast SEO sitemap index\n+      let sitemapLinks = await this.tryFetchSitemapLinks(this.initialUrl, \"/sitemap_index.xml\");",
    "repo_full_name": "firecrawl/firecrawl",
    "discussion_comments": [
      {
        "comment_id": "1748592969",
        "repo_full_name": "firecrawl/firecrawl",
        "pr_number": 634,
        "pr_file": "apps/api/src/scraper/WebScraper/crawler.ts",
        "discussion_id": "1748592969",
        "commented_code": "@@ -156,6 +156,13 @@ export class WebCrawler {\n     if (sitemapLinks.length > 0) {\n       let filteredLinks = this.filterLinks(sitemapLinks, this.limit, this.maxCrawledDepth);\n       return filteredLinks.map(link => ({ url: link, html: \"\" }));\n+    } else {\n+      // Yoast SEO sitemap index\n+      let sitemapLinks = await this.tryFetchSitemapLinks(this.initialUrl, \"/sitemap_index.xml\");",
        "comment_created_at": "2024-09-07T16:22:09+00:00",
        "comment_author": "nickscamara",
        "comment_body": "Can we do this concurrently when we fetch the sitemaps?",
        "pr_file_module": null
      }
    ]
  }
]