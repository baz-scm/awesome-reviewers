[
  {
    "discussion_id": "2086556212",
    "pr_number": 55724,
    "pr_file": "src/Illuminate/Foundation/Http/MaintenanceModeBypassCookie.php",
    "created_at": "2025-05-13T11:06:49+00:00",
    "commented_code": "*/\n    public static function create(string $key)\n    {\n        $expiresAt = Carbon::now()->addHours(12);\n        $expiresAt = Carbon::now()->addHours(config('session.maintenance_bypass_cookie_lifetime'));",
    "repo_full_name": "laravel/framework",
    "discussion_comments": [
      {
        "comment_id": "2086556212",
        "repo_full_name": "laravel/framework",
        "pr_number": 55724,
        "pr_file": "src/Illuminate/Foundation/Http/MaintenanceModeBypassCookie.php",
        "discussion_id": "2086556212",
        "commented_code": "@@ -15,7 +15,7 @@ class MaintenanceModeBypassCookie\n      */\n     public static function create(string $key)\n     {\n-        $expiresAt = Carbon::now()->addHours(12);\n+        $expiresAt = Carbon::now()->addHours(config('session.maintenance_bypass_cookie_lifetime'));",
        "comment_created_at": "2025-05-13T11:06:49+00:00",
        "comment_author": "shaedrich",
        "comment_body": "According to your config doc block,\r\n> number of minutes\r\n\r\nthis is now minutes that are added\r\n```suggestion\r\n        $expiresAt = Carbon::now()->addMinutes(config('session.maintenance_bypass_cookie_lifetime'));\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2086558463",
    "pr_number": 55724,
    "pr_file": "config/session.php",
    "created_at": "2025-05-13T11:08:14+00:00",
    "commented_code": "'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Maintenance Bypass Cookie Lifetime\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the number of minutes the maintenance mode\n    | bypass cookie should remain valid. This cookie is issued when a\n    | user accesses the application using the secret bypass URL. Once\n    | set, it allows temporary access to the application while it is\n    | in maintenance mode. The default duration is 12 hours.\n    |\n    */\n\n    'maintenance_bypass_cookie_lifetime' => (int) env('SESSION_MAINTENANCE_BYPASS_COOKIE_LIFETIME', 7720),",
    "repo_full_name": "laravel/framework",
    "discussion_comments": [
      {
        "comment_id": "2086558463",
        "repo_full_name": "laravel/framework",
        "pr_number": 55724,
        "pr_file": "config/session.php",
        "discussion_id": "2086558463",
        "commented_code": "@@ -36,6 +36,21 @@\n \n     'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),\n \n+    /*\n+    |--------------------------------------------------------------------------\n+    | Maintenance Bypass Cookie Lifetime\n+    |--------------------------------------------------------------------------\n+    |\n+    | Here you may specify the number of minutes the maintenance mode\n+    | bypass cookie should remain valid. This cookie is issued when a\n+    | user accesses the application using the secret bypass URL. Once\n+    | set, it allows temporary access to the application while it is\n+    | in maintenance mode. The default duration is 12 hours.\n+    |\n+    */\n+\n+    'maintenance_bypass_cookie_lifetime' => (int) env('SESSION_MAINTENANCE_BYPASS_COOKIE_LIFETIME', 7720),",
        "comment_created_at": "2025-05-13T11:08:14+00:00",
        "comment_author": "shaedrich",
        "comment_body": "Accoding to your PHPDoc block,\r\n> number of minutes\r\n\r\nbut 7720 minutes is not 12 hours\r\n```suggestion\r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | Maintenance Bypass Cookie Lifetime\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | Here you may specify the number of minutes the maintenance mode\r\n    | bypass cookie should remain valid. This cookie is issued when a\r\n    | user accesses the application using the secret bypass URL. Once\r\n    | set, it allows temporary access to the application while it is\r\n    | in maintenance mode. The default duration is 12 hours.\r\n    |\r\n    */\r\n\r\n    'maintenance_bypass_cookie_lifetime' => (int) env('SESSION_MAINTENANCE_BYPASS_COOKIE_LIFETIME', 720),\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2086559648",
        "repo_full_name": "laravel/framework",
        "pr_number": 55724,
        "pr_file": "config/session.php",
        "discussion_id": "2086558463",
        "commented_code": "@@ -36,6 +36,21 @@\n \n     'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),\n \n+    /*\n+    |--------------------------------------------------------------------------\n+    | Maintenance Bypass Cookie Lifetime\n+    |--------------------------------------------------------------------------\n+    |\n+    | Here you may specify the number of minutes the maintenance mode\n+    | bypass cookie should remain valid. This cookie is issued when a\n+    | user accesses the application using the secret bypass URL. Once\n+    | set, it allows temporary access to the application while it is\n+    | in maintenance mode. The default duration is 12 hours.\n+    |\n+    */\n+\n+    'maintenance_bypass_cookie_lifetime' => (int) env('SESSION_MAINTENANCE_BYPASS_COOKIE_LIFETIME', 7720),",
        "comment_created_at": "2025-05-13T11:09:02+00:00",
        "comment_author": "shaedrich",
        "comment_body": "Maybe, to avoid confusion when using, the unit should be included in the key:\r\n```suggestion\r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | Maintenance Bypass Cookie Lifetime\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    | Here you may specify the number of minutes the maintenance mode\r\n    | bypass cookie should remain valid. This cookie is issued when a\r\n    | user accesses the application using the secret bypass URL. Once\r\n    | set, it allows temporary access to the application while it is\r\n    | in maintenance mode. The default duration is 12 hours.\r\n    |\r\n    */\r\n\r\n    'maintenance_bypass_cookie_lifetime_minutes' => (int) env('SESSION_MAINTENANCE_BYPASS_COOKIE_LIFETIME_MINUTES', 720),\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2086578428",
        "repo_full_name": "laravel/framework",
        "pr_number": 55724,
        "pr_file": "config/session.php",
        "discussion_id": "2086558463",
        "commented_code": "@@ -36,6 +36,21 @@\n \n     'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),\n \n+    /*\n+    |--------------------------------------------------------------------------\n+    | Maintenance Bypass Cookie Lifetime\n+    |--------------------------------------------------------------------------\n+    |\n+    | Here you may specify the number of minutes the maintenance mode\n+    | bypass cookie should remain valid. This cookie is issued when a\n+    | user accesses the application using the secret bypass URL. Once\n+    | set, it allows temporary access to the application while it is\n+    | in maintenance mode. The default duration is 12 hours.\n+    |\n+    */\n+\n+    'maintenance_bypass_cookie_lifetime' => (int) env('SESSION_MAINTENANCE_BYPASS_COOKIE_LIFETIME', 7720),",
        "comment_created_at": "2025-05-13T11:20:06+00:00",
        "comment_author": "sajjadhossainshohag",
        "comment_body": "@shaedrich This was a mistake, thanks.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1868980349",
    "pr_number": 53749,
    "pr_file": "config/mail.php",
    "created_at": "2024-12-04T08:46:30+00:00",
    "commented_code": "'mailers' => [\n\n        'smtp' => [\n            'scheme' => env('MAIL_MAILER', 'smtp'),",
    "repo_full_name": "laravel/framework",
    "discussion_comments": [
      {
        "comment_id": "1868980349",
        "repo_full_name": "laravel/framework",
        "pr_number": 53749,
        "pr_file": "config/mail.php",
        "discussion_id": "1868980349",
        "commented_code": "@@ -38,6 +38,7 @@\n     'mailers' => [\n \n         'smtp' => [\n+            'scheme' => env('MAIL_MAILER', 'smtp'),",
        "comment_created_at": "2024-12-04T08:46:30+00:00",
        "comment_author": "crynobone",
        "comment_body": "This is incorrect, possible values of `MAIL_MAILER` are \"smtp\", \"sendmail\", \"mailgun\", \"ses\", \"ses-v2\", \"postmark\", \"resend\", \"log\", \"array\", \"failover\" or \"roundrobin\"",
        "pr_file_module": null
      },
      {
        "comment_id": "1869165206",
        "repo_full_name": "laravel/framework",
        "pr_number": 53749,
        "pr_file": "config/mail.php",
        "discussion_id": "1868980349",
        "commented_code": "@@ -38,6 +38,7 @@\n     'mailers' => [\n \n         'smtp' => [\n+            'scheme' => env('MAIL_MAILER', 'smtp'),",
        "comment_created_at": "2024-12-04T10:29:31+00:00",
        "comment_author": "danielrona",
        "comment_body": "Yes, you are right this should be of course a new variable, my mistake I added our hotfix instead of the generic config option.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1869186104",
    "pr_number": 53749,
    "pr_file": "config/mail.php",
    "created_at": "2024-12-04T10:38:39+00:00",
    "commented_code": "'mailers' => [\n\n        'smtp' => [\n            'scheme' => env('MAIL_SCHEME', 'smtp'),",
    "repo_full_name": "laravel/framework",
    "discussion_comments": [
      {
        "comment_id": "1869186104",
        "repo_full_name": "laravel/framework",
        "pr_number": 53749,
        "pr_file": "config/mail.php",
        "discussion_id": "1869186104",
        "commented_code": "@@ -38,6 +38,7 @@\n     'mailers' => [\n \n         'smtp' => [\n+            'scheme' => env('MAIL_SCHEME', 'smtp'),",
        "comment_created_at": "2024-12-04T10:38:39+00:00",
        "comment_author": "crynobone",
        "comment_body": "This will make `scheme` default to `smtp` instead of relying on `port` value as indicated in #53585\r\n\r\nWith this changes everyone using the following configuration:\r\n\r\n```ini\r\nMAIL_ENCRYPTION=tls\r\nMAIL_PORT=465\r\n```\r\n\r\nWill resolved to `stmp` instead correctly using `smtps` and create more gotcha than what we correctly have with `MAIL_ENCRYPTION`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1869237308",
        "repo_full_name": "laravel/framework",
        "pr_number": 53749,
        "pr_file": "config/mail.php",
        "discussion_id": "1869186104",
        "commented_code": "@@ -38,6 +38,7 @@\n     'mailers' => [\n \n         'smtp' => [\n+            'scheme' => env('MAIL_SCHEME', 'smtp'),",
        "comment_created_at": "2024-12-04T11:01:21+00:00",
        "comment_author": "danielrona",
        "comment_body": "Right now everyone who has configured ```MAIL_ENCRYPTION=null``` has a broken configuration.\r\n\r\nI also do not understand why we would be relying on a port to define a scheme that makes no sense.\r\n\r\nJust because a port can be smtp or smtps doesn't mean it needs to be, \r\nI can have port 25 be smpts or I can have port 587 be smtp this is totally up to the setup of the provider.\r\n\r\nYes the defaults would be smtp  for 25 and smtps for 587 not to mention that 465 is a legacy default port for smtps nowadays it would/should be 587. \r\n\r\nSo right now this would still end up causing issues for most people and having a dedicated configuration parameter would resolve this.\r\n\r\nYou can setup a fresh laravel installation and it will fail due to not having the proper config entries.\r\n\r\n```env\r\nMAIL_MAILER=smtp\r\nMAIL_HOST=127.0.0.1\r\nMAIL_PORT=9925\r\nMAIL_USERNAME=null\r\nMAIL_PASSWORD=null\r\nMAIL_ENCRYPTION=null\r\nMAIL_FROM_ADDRESS=\"hello@example.com\"\r\nMAIL_FROM_NAME=\"${APP_NAME}\"\r\n``` \r\nTestMail is a empty view Mailabable\r\n\r\n```php\r\nMail::to('test@localhost')->send(new TestMail());\r\n```\r\nwill fail with \r\n`The \"\" scheme is not supported; supported schemes for mailer \"smtp\" are: \"smtp\", \"smtps\".`",
        "pr_file_module": null
      },
      {
        "comment_id": "1869272592",
        "repo_full_name": "laravel/framework",
        "pr_number": 53749,
        "pr_file": "config/mail.php",
        "discussion_id": "1869186104",
        "commented_code": "@@ -38,6 +38,7 @@\n     'mailers' => [\n \n         'smtp' => [\n+            'scheme' => env('MAIL_SCHEME', 'smtp'),",
        "comment_created_at": "2024-12-04T11:19:16+00:00",
        "comment_author": "crynobone",
        "comment_body": "> I also do not understand why we would be relying on a port to define a scheme that makes no sense.\r\n\r\nThis is a requirement by Symfony Mailer. `scheme` here is only used to comply with `Dsn` instance but the result is then passed to `EsmtpTransport` differently. \r\n\r\nhttps://github.com/symfony/mailer/blob/e4d358702fb66e4c8a2af08e90e7271a62de39cc/Transport/Smtp/EsmtpTransport.php#L56-L68\r\n\r\n> The \"\" scheme is not supported; supported schemes for mailer \"smtp\" are: \"smtp\", \"smtps\".\r\n\r\nThe fixed in https://github.com/laravel/framework/pull/53585 has already fixed this and before the release can be done you should downgrade to 7.1 as suggested.\r\n\r\nWe will look into removing `MAIL_ENCRYPTION` and streamlining the configuration for next major version if possible.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1869424105",
        "repo_full_name": "laravel/framework",
        "pr_number": 53749,
        "pr_file": "config/mail.php",
        "discussion_id": "1869186104",
        "commented_code": "@@ -38,6 +38,7 @@\n     'mailers' => [\n \n         'smtp' => [\n+            'scheme' => env('MAIL_SCHEME', 'smtp'),",
        "comment_created_at": "2024-12-04T12:42:14+00:00",
        "comment_author": "danielrona",
        "comment_body": "while #53585 might fix this for everyone using port 465 , this doesn't make much sense and it's still a breaking change because everyone with a port != 465 will have not ```smtps``` set on their configuration files while actually having ```MAIL_ENCRYPTION=tls```",
        "pr_file_module": null
      },
      {
        "comment_id": "1869441169",
        "repo_full_name": "laravel/framework",
        "pr_number": 53749,
        "pr_file": "config/mail.php",
        "discussion_id": "1869186104",
        "commented_code": "@@ -38,6 +38,7 @@\n     'mailers' => [\n \n         'smtp' => [\n+            'scheme' => env('MAIL_SCHEME', 'smtp'),",
        "comment_created_at": "2024-12-04T12:53:58+00:00",
        "comment_author": "crynobone",
        "comment_body": "https://github.com/symfony/mailer/blob/7.2/CHANGELOG.md#440\n\n`encryption` configuration was deprecated and removed in earlier `symfony/mailer` release. This probably being left out from `swiftmailer` era",
        "pr_file_module": null
      },
      {
        "comment_id": "1869587190",
        "repo_full_name": "laravel/framework",
        "pr_number": 53749,
        "pr_file": "config/mail.php",
        "discussion_id": "1869186104",
        "commented_code": "@@ -38,6 +38,7 @@\n     'mailers' => [\n \n         'smtp' => [\n+            'scheme' => env('MAIL_SCHEME', 'smtp'),",
        "comment_created_at": "2024-12-04T14:02:47+00:00",
        "comment_author": "danielrona",
        "comment_body": "I adjusted my pull dropped the config changes and this would solve the issue, until ```MAIL_ENCRYPTION``` is removed and the configuration file streamlined with the next major version.",
        "pr_file_module": null
      }
    ]
  }
]