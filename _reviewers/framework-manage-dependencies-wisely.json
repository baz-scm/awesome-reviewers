[
  {
    "discussion_id": "2019945476",
    "pr_number": 55203,
    "pr_file": "src/Illuminate/Concurrency/composer.json",
    "created_at": "2025-03-29T19:04:13+00:00",
    "commented_code": "],\n    \"require\": {\n        \"php\": \"^8.2\",\n        \"illuminate/console\": \"^12.0\",\n        \"illuminate/contracts\": \"^12.0\",\n        \"illuminate/process\": \"^12.0\",",
    "repo_full_name": "laravel/framework",
    "discussion_comments": [
      {
        "comment_id": "2019945476",
        "repo_full_name": "laravel/framework",
        "pr_number": 55203,
        "pr_file": "src/Illuminate/Concurrency/composer.json",
        "discussion_id": "2019945476",
        "commented_code": "@@ -15,9 +15,7 @@\n     ],\n     \"require\": {\n         \"php\": \"^8.2\",\n-        \"illuminate/console\": \"^12.0\",\n         \"illuminate/contracts\": \"^12.0\",\n-        \"illuminate/process\": \"^12.0\",",
        "comment_created_at": "2025-03-29T19:04:13+00:00",
        "comment_author": "AndrewMast",
        "comment_body": "Why are `illuminate/console` and `illuminate/process` removed? I see that `console` is added to the `suggest` field, but what about `process`? Does the rest of the subpackage not need these? If not, it might be best to address the changes in a separate PR.\r\n\r\nI do like the idea of adding `spatie/fork` and the other driver options to `suggest`, though. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2019948808",
        "repo_full_name": "laravel/framework",
        "pr_number": 55203,
        "pr_file": "src/Illuminate/Concurrency/composer.json",
        "discussion_id": "2019945476",
        "commented_code": "@@ -15,9 +15,7 @@\n     ],\n     \"require\": {\n         \"php\": \"^8.2\",\n-        \"illuminate/console\": \"^12.0\",\n         \"illuminate/contracts\": \"^12.0\",\n-        \"illuminate/process\": \"^12.0\",",
        "comment_created_at": "2025-03-29T19:09:46+00:00",
        "comment_author": "Amirhf1",
        "comment_body": "You are absolutely right. It was my mistake to remove the dependencies for `illuminate/console` and `illuminate/process`. I’ve corrected that and added both dependencies back to the composer.json file. I’ve still kept the suggestions for illuminate/redis and spatie/fork, as they are needed for optional drivers.\r\nThank you for your thorough review.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1934190230",
    "pr_number": 54375,
    "pr_file": "composer.json",
    "created_at": "2025-01-29T16:18:29+00:00",
    "commented_code": "\"symfony/uid\": \"^7.0.3\",\n        \"symfony/var-dumper\": \"^7.0.3\",\n        \"tijsverkoyen/css-to-inline-styles\": \"^2.2.5\",\n        \"visus/cuid2\": \"^5.0.0\",",
    "repo_full_name": "laravel/framework",
    "discussion_comments": [
      {
        "comment_id": "1934190230",
        "repo_full_name": "laravel/framework",
        "pr_number": 54375,
        "pr_file": "composer.json",
        "discussion_id": "1934190230",
        "commented_code": "@@ -57,6 +58,7 @@\n         \"symfony/uid\": \"^7.0.3\",\n         \"symfony/var-dumper\": \"^7.0.3\",\n         \"tijsverkoyen/css-to-inline-styles\": \"^2.2.5\",\n+        \"visus/cuid2\": \"^5.0.0\",",
        "comment_created_at": "2025-01-29T16:18:29+00:00",
        "comment_author": "stevebauman",
        "comment_body": "This maintainer isn't very active. I'd be very hesitant to base the framework on this package's support.",
        "pr_file_module": null
      },
      {
        "comment_id": "1976438706",
        "repo_full_name": "laravel/framework",
        "pr_number": 54375,
        "pr_file": "composer.json",
        "discussion_id": "1934190230",
        "commented_code": "@@ -57,6 +58,7 @@\n         \"symfony/uid\": \"^7.0.3\",\n         \"symfony/var-dumper\": \"^7.0.3\",\n         \"tijsverkoyen/css-to-inline-styles\": \"^2.2.5\",\n+        \"visus/cuid2\": \"^5.0.0\",",
        "comment_created_at": "2025-03-01T15:34:45+00:00",
        "comment_author": "xaoseric",
        "comment_body": "Something like cuid2 ideally won't need a lot of updates, but if that is a blocker then I can bring over the code for it as an illuminate/cuid2 package so we can update it without relying on that package.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1667427139",
    "pr_number": 52039,
    "pr_file": "composer.json",
    "created_at": "2024-07-06T19:56:55+00:00",
    "commented_code": "\"ext-openssl\": \"*\",\n        \"ext-session\": \"*\",\n        \"ext-tokenizer\": \"*\",\n        \"ext-zlib\": \"*\",",
    "repo_full_name": "laravel/framework",
    "discussion_comments": [
      {
        "comment_id": "1667427139",
        "repo_full_name": "laravel/framework",
        "pr_number": 52039,
        "pr_file": "composer.json",
        "discussion_id": "1667427139",
        "commented_code": "@@ -23,6 +23,7 @@\n         \"ext-openssl\": \"*\",\n         \"ext-session\": \"*\",\n         \"ext-tokenizer\": \"*\",\n+        \"ext-zlib\": \"*\",",
        "comment_created_at": "2024-07-06T19:56:55+00:00",
        "comment_author": "rojtjo",
        "comment_body": "Adding an additional extension in a patch release is a breaking change. This should either only be in the `suggest` section (with an `extension_loaded` check in the code) or be targeted at 12.x instead.",
        "pr_file_module": null
      },
      {
        "comment_id": "1668174517",
        "repo_full_name": "laravel/framework",
        "pr_number": 52039,
        "pr_file": "composer.json",
        "discussion_id": "1667427139",
        "commented_code": "@@ -23,6 +23,7 @@\n         \"ext-openssl\": \"*\",\n         \"ext-session\": \"*\",\n         \"ext-tokenizer\": \"*\",\n+        \"ext-zlib\": \"*\",",
        "comment_created_at": "2024-07-08T08:07:27+00:00",
        "comment_author": "driesvints",
        "comment_body": "Just for reference, this isn't a breaking change. Composer will warn you about the missing extension. Adding new dependencies on patch releases is allowed.",
        "pr_file_module": null
      },
      {
        "comment_id": "1668209544",
        "repo_full_name": "laravel/framework",
        "pr_number": 52039,
        "pr_file": "composer.json",
        "discussion_id": "1667427139",
        "commented_code": "@@ -23,6 +23,7 @@\n         \"ext-openssl\": \"*\",\n         \"ext-session\": \"*\",\n         \"ext-tokenizer\": \"*\",\n+        \"ext-zlib\": \"*\",",
        "comment_created_at": "2024-07-08T08:29:38+00:00",
        "comment_author": "rodrigopedra",
        "comment_body": "@driesvints thanks for clarifying that. I understand the argument for composer dependencies, but does it also applies for extensions?\r\n\r\nThat Composer warns about a missing extension, it does, indeed, all good about that.\r\n\r\nWhat I mean is: if someone is running a Laravel 11 app on a server which they are not allowed to freely install extensions, such as shared hosting, then they wouldn't be able to update their app due to the inability to install a newly required extension.\r\n\r\nDoesn't it count as a breaking change? As a requirement change?\r\n\r\nI believe a `suggests` entry would be a better fit in that case.\r\n\r\nIf that case is still allowed, as a requirement, I believe docs should also be updated to reflect the newly required extension on the \"Server Requirements\" section:\r\n\r\nhttps://laravel.com/docs/11.x/deployment#server-requirements",
        "pr_file_module": null
      },
      {
        "comment_id": "1668251380",
        "repo_full_name": "laravel/framework",
        "pr_number": 52039,
        "pr_file": "composer.json",
        "discussion_id": "1667427139",
        "commented_code": "@@ -23,6 +23,7 @@\n         \"ext-openssl\": \"*\",\n         \"ext-session\": \"*\",\n         \"ext-tokenizer\": \"*\",\n+        \"ext-zlib\": \"*\",",
        "comment_created_at": "2024-07-08T08:52:47+00:00",
        "comment_author": "driesvints",
        "comment_body": "If the extension isn't needed for a core essential of Laravel then it can indeed be added as a suggest. I believe this can be done here since the feature is indeed isolated.\r\n\r\nSemVer doesn't look at things like shared hosting and the ability to not install extensions. It's solely focused on what is a breaking change and adding a dependency on a patch release isn't one. A good dependency manager, like Composer, will warn you about the new requirement and prevent you from moving forward in a deploy/install process until you've fulfilled the requirement. And thus nothing will break.",
        "pr_file_module": null
      },
      {
        "comment_id": "1668706256",
        "repo_full_name": "laravel/framework",
        "pr_number": 52039,
        "pr_file": "composer.json",
        "discussion_id": "1667427139",
        "commented_code": "@@ -23,6 +23,7 @@\n         \"ext-openssl\": \"*\",\n         \"ext-session\": \"*\",\n         \"ext-tokenizer\": \"*\",\n+        \"ext-zlib\": \"*\",",
        "comment_created_at": "2024-07-08T14:06:01+00:00",
        "comment_author": "driesvints",
        "comment_body": "@rmunate move this to suggest please. Also for the `composer.json` of the support package.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1847590909",
    "pr_number": 53552,
    "pr_file": "composer.json",
    "created_at": "2024-11-19T03:33:16+00:00",
    "commented_code": "\"guzzlehttp/guzzle\": \"^7.8\",\n        \"guzzlehttp/uri-template\": \"^1.0\",\n        \"laravel/prompts\": \"^0.1.18|^0.2.0|^0.3.0\",\n        \"laravel/serializable-closure\": \"^1.3\",\n        \"laravel/serializable-closure\": \"^2.0@dev\",",
    "repo_full_name": "laravel/framework",
    "discussion_comments": [
      {
        "comment_id": "1847590909",
        "repo_full_name": "laravel/framework",
        "pr_number": 53552,
        "pr_file": "composer.json",
        "discussion_id": "1847590909",
        "commented_code": "@@ -32,7 +32,7 @@\n         \"guzzlehttp/guzzle\": \"^7.8\",\n         \"guzzlehttp/uri-template\": \"^1.0\",\n         \"laravel/prompts\": \"^0.1.18|^0.2.0|^0.3.0\",\n-        \"laravel/serializable-closure\": \"^1.3\",\n+        \"laravel/serializable-closure\": \"^2.0@dev\",",
        "comment_created_at": "2024-11-19T03:33:16+00:00",
        "comment_author": "crynobone",
        "comment_body": "```suggestion\r\n        \"laravel/serializable-closure\": \"^1.3|^2.0\",\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1661941378",
    "pr_number": 51983,
    "pr_file": "src/Illuminate/Cache/composer.json",
    "created_at": "2024-07-02T07:00:36+00:00",
    "commented_code": "\"illuminate/collections\": \"^11.0\",\n        \"illuminate/contracts\": \"^11.0\",\n        \"illuminate/macroable\": \"^11.0\",\n        \"illuminate/support\": \"^11.0\"\n        \"illuminate/support\": \"^11.0\",\n        \"psr/simple-cache\": \"^1.0|^2.0|^3.0\"",
    "repo_full_name": "laravel/framework",
    "discussion_comments": [
      {
        "comment_id": "1661941378",
        "repo_full_name": "laravel/framework",
        "pr_number": 51983,
        "pr_file": "src/Illuminate/Cache/composer.json",
        "discussion_id": "1661941378",
        "commented_code": "@@ -18,7 +18,8 @@\n         \"illuminate/collections\": \"^11.0\",\n         \"illuminate/contracts\": \"^11.0\",\n         \"illuminate/macroable\": \"^11.0\",\n-        \"illuminate/support\": \"^11.0\"\n+        \"illuminate/support\": \"^11.0\",\n+        \"psr/simple-cache\": \"^1.0|^2.0|^3.0\"",
        "comment_created_at": "2024-07-02T07:00:36+00:00",
        "comment_author": "driesvints",
        "comment_body": "This isn't correct. This package doesn't use this dependency directly but through a Symfony component. Please revert this.",
        "pr_file_module": null
      },
      {
        "comment_id": "1661979504",
        "repo_full_name": "laravel/framework",
        "pr_number": 51983,
        "pr_file": "src/Illuminate/Cache/composer.json",
        "discussion_id": "1661941378",
        "commented_code": "@@ -18,7 +18,8 @@\n         \"illuminate/collections\": \"^11.0\",\n         \"illuminate/contracts\": \"^11.0\",\n         \"illuminate/macroable\": \"^11.0\",\n-        \"illuminate/support\": \"^11.0\"\n+        \"illuminate/support\": \"^11.0\",\n+        \"psr/simple-cache\": \"^1.0|^2.0|^3.0\"",
        "comment_created_at": "2024-07-02T07:27:40+00:00",
        "comment_author": "seriquynh",
        "comment_body": "Oh, my bad. `illuminate\\cache` doesn't use directly `psr/simple-cache`, it uses through `illuminate/contracts`. I restored this change and updated PR's description. Thank you!\r\nhttps://github.com/laravel/framework/blob/11.x/src/Illuminate/Contracts/Cache/Repository.php\r\n\r\n```php\r\n<?php\r\n\r\nnamespace Illuminate\\Contracts\\Cache;\r\n\r\nuse Closure;\r\nuse Psr\\SimpleCache\\CacheInterface;\r\n\r\ninterface Repository extends CacheInterface\r\n{\r\n    //\r\n}\r\n```",
        "pr_file_module": null
      }
    ]
  }
]