[
  {
    "discussion_id": "383008363",
    "pr_number": 1666,
    "pr_file": "models/auth/auth.go",
    "created_at": "2020-02-23T14:23:35+00:00",
    "commented_code": "+// Copyright 2020 guylewin, guy@lewin.co.il\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package auth\n+\n+import (\n+\t\"github.com/fatedier/frp/models/config\"\n+\t\"github.com/fatedier/frp/models/consts\"\n+\t\"github.com/fatedier/frp/models/msg\"\n+)\n+\n+type BaseAuth struct {",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "383008363",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "383008363",
        "commented_code": "@@ -0,0 +1,82 @@\n+// Copyright 2020 guylewin, guy@lewin.co.il\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package auth\n+\n+import (\n+\t\"github.com/fatedier/frp/models/config\"\n+\t\"github.com/fatedier/frp/models/consts\"\n+\t\"github.com/fatedier/frp/models/msg\"\n+)\n+\n+type BaseAuth struct {",
        "comment_created_at": "2020-02-23T14:23:35+00:00",
        "comment_author": "fatedier",
        "comment_body": "This struct doesn't need to be exported, change `BaseAuth` to `baseAuth` ?",
        "pr_file_module": null
      },
      {
        "comment_id": "383511231",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "383008363",
        "commented_code": "@@ -0,0 +1,82 @@\n+// Copyright 2020 guylewin, guy@lewin.co.il\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package auth\n+\n+import (\n+\t\"github.com/fatedier/frp/models/config\"\n+\t\"github.com/fatedier/frp/models/consts\"\n+\t\"github.com/fatedier/frp/models/msg\"\n+)\n+\n+type BaseAuth struct {",
        "comment_created_at": "2020-02-24T21:00:20+00:00",
        "comment_author": "GuyLewin",
        "comment_body": "True. Done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "530177474",
    "pr_number": 2103,
    "pr_file": "pkg/config/server_common.go",
    "created_at": "2020-11-25T08:12:10+00:00",
    "commented_code": "for name, section := range sections {\n \t\tif strings.HasPrefix(name, \"plugin.\") {\n \t\t\tname = strings.TrimSpace(strings.TrimPrefix(name, \"plugin.\"))\n+\t\t\tvar tls_verify, err = strconv.ParseBool(section[\"tls_verify\"])\n+\t\t\tif err != nil {\n+\t\t\t\ttls_verify = true\n+\t\t\t}\n \t\t\toptions := plugin.HTTPPluginOptions{\n-\t\t\t\tName: name,\n-\t\t\t\tAddr: section[\"addr\"],\n-\t\t\t\tPath: section[\"path\"],\n-\t\t\t\tOps:  strings.Split(section[\"ops\"], \",\"),\n+\t\t\t\tName:      name,\n+\t\t\t\tAddr:      section[\"addr\"],\n+\t\t\t\tPath:      section[\"path\"],\n+\t\t\t\tOps:       strings.Split(section[\"ops\"], \",\"),\n+\t\t\t\tTlsVerify: tls_verify,",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "530177474",
        "repo_full_name": "fatedier/frp",
        "pr_number": 2103,
        "pr_file": "pkg/config/server_common.go",
        "discussion_id": "530177474",
        "commented_code": "@@ -458,11 +458,16 @@ func UnmarshalPluginsFromIni(sections ini.File, cfg *ServerCommonConf) {\n \tfor name, section := range sections {\n \t\tif strings.HasPrefix(name, \"plugin.\") {\n \t\t\tname = strings.TrimSpace(strings.TrimPrefix(name, \"plugin.\"))\n+\t\t\tvar tls_verify, err = strconv.ParseBool(section[\"tls_verify\"])\n+\t\t\tif err != nil {\n+\t\t\t\ttls_verify = true\n+\t\t\t}\n \t\t\toptions := plugin.HTTPPluginOptions{\n-\t\t\t\tName: name,\n-\t\t\t\tAddr: section[\"addr\"],\n-\t\t\t\tPath: section[\"path\"],\n-\t\t\t\tOps:  strings.Split(section[\"ops\"], \",\"),\n+\t\t\t\tName:      name,\n+\t\t\t\tAddr:      section[\"addr\"],\n+\t\t\t\tPath:      section[\"path\"],\n+\t\t\t\tOps:       strings.Split(section[\"ops\"], \",\"),\n+\t\t\t\tTlsVerify: tls_verify,",
        "comment_created_at": "2020-11-25T08:12:10+00:00",
        "comment_author": "yuyulei",
        "comment_body": "`TlsVerify` -> `TLSVerify`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "382974151",
    "pr_number": 1661,
    "pr_file": "client/proxy/proxy.go",
    "created_at": "2020-02-23T08:03:34+00:00",
    "commented_code": "conn, []byte(pxy.clientCfg.Token), m)\n }\n \n+// TCP HTTP Tunnel\n+type TcpHttpTunnelProxy struct {",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "382974151",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1661,
        "pr_file": "client/proxy/proxy.go",
        "discussion_id": "382974151",
        "commented_code": "@@ -141,6 +146,35 @@ func (pxy *TcpProxy) InWorkConn(conn net.Conn, m *msg.StartWorkConn) {\n \t\tconn, []byte(pxy.clientCfg.Token), m)\n }\n \n+// TCP HTTP Tunnel\n+type TcpHttpTunnelProxy struct {",
        "comment_created_at": "2020-02-23T08:03:34+00:00",
        "comment_author": "mpeterson",
        "comment_body": "Regarding the naming of `TcpHttpTunnelProxy`. According to [Go best practices](https://github.com/golang/go/wiki/CodeReviewComments#initialisms) the name should be `TCPHTTPTunnelProxy`\r\n\r\nThis same comment applies to other places but I'll post it only once. I'd understand if you rather not change this to have only one style in the `frp` code. However, in either case, I think we should refactor the code to comply with the recommended style. As such, you can either start by this and with another patch we bring the codebase to this. Or we leave this as is, and then with another patch we change the codebase + this code.",
        "pr_file_module": null
      },
      {
        "comment_id": "387318802",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1661,
        "pr_file": "client/proxy/proxy.go",
        "discussion_id": "382974151",
        "commented_code": "@@ -141,6 +146,35 @@ func (pxy *TcpProxy) InWorkConn(conn net.Conn, m *msg.StartWorkConn) {\n \t\tconn, []byte(pxy.clientCfg.Token), m)\n }\n \n+// TCP HTTP Tunnel\n+type TcpHttpTunnelProxy struct {",
        "comment_created_at": "2020-03-03T21:58:07+00:00",
        "comment_author": "GuyLewin",
        "comment_body": "I tried doing that but too much of the current code isn't like this. I'm not going to convert everything now (unless @fatedier thinks strongly otherwise), and I think the code should have a single code style.",
        "pr_file_module": null
      },
      {
        "comment_id": "387418670",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1661,
        "pr_file": "client/proxy/proxy.go",
        "discussion_id": "382974151",
        "commented_code": "@@ -141,6 +146,35 @@ func (pxy *TcpProxy) InWorkConn(conn net.Conn, m *msg.StartWorkConn) {\n \t\tconn, []byte(pxy.clientCfg.Token), m)\n }\n \n+// TCP HTTP Tunnel\n+type TcpHttpTunnelProxy struct {",
        "comment_created_at": "2020-03-04T02:39:12+00:00",
        "comment_author": "fatedier",
        "comment_body": "It can be done after this PR merged.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "207954053",
    "pr_number": 879,
    "pr_file": "cmd/frps/root.go",
    "created_at": "2018-08-06T16:31:50+00:00",
    "commented_code": "cfgFile     string\n \tshowVersion bool\n \n-\tbindAddr          string\n-\tbindPort          int\n-\tbindUdpPort       int\n-\tkcpBindPort       int\n-\tproxyBindAddr     string\n-\tvhostHttpPort     int\n-\tvhostHttpsPort    int\n-\tdashboardAddr     string\n-\tdashboardPort     int\n-\tdashboardUser     string\n-\tdashboardPwd      string\n-\tassetsDir         string\n-\tlogFile           string\n-\tlogWay            string\n-\tlogLevel          string\n-\tlogMaxDays        int64\n-\ttoken             string\n-\tauthTimeout       int64\n-\tsubDomainHost     string\n-\ttcpMux            bool\n-\tallowPorts        string\n-\tmaxPoolCount      int64\n-\tmaxPortsPerClient int64\n+\tbindAddr              string\n+\tbindPort              int\n+\tbindUdpPort           int\n+\tkcpBindPort           int\n+\tproxyBindAddr         string\n+\tvhostHttpPort         int\n+\tvhostHttpsPort        int\n+\tdashboardAddr         string\n+\tdashboardPort         int\n+\tdashboardUser         string\n+\tdashboardPwd          string\n+\tassetsDir             string\n+\tlogFile               string\n+\tlogWay                string\n+\tlogLevel              string\n+\tlogMaxDays            int64\n+\ttoken                 string\n+\tauthTimeout           int64\n+\tsubDomainHost         string\n+\ttcpMux                bool\n+\tallowPorts            string\n+\tmaxPoolCount          int64\n+\tmaxPortsPerClient     int64\n+\tResponseHeaderTimeout int64",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "207954053",
        "repo_full_name": "fatedier/frp",
        "pr_number": 879,
        "pr_file": "cmd/frps/root.go",
        "discussion_id": "207954053",
        "commented_code": "@@ -37,29 +37,30 @@ var (\n \tcfgFile     string\n \tshowVersion bool\n \n-\tbindAddr          string\n-\tbindPort          int\n-\tbindUdpPort       int\n-\tkcpBindPort       int\n-\tproxyBindAddr     string\n-\tvhostHttpPort     int\n-\tvhostHttpsPort    int\n-\tdashboardAddr     string\n-\tdashboardPort     int\n-\tdashboardUser     string\n-\tdashboardPwd      string\n-\tassetsDir         string\n-\tlogFile           string\n-\tlogWay            string\n-\tlogLevel          string\n-\tlogMaxDays        int64\n-\ttoken             string\n-\tauthTimeout       int64\n-\tsubDomainHost     string\n-\ttcpMux            bool\n-\tallowPorts        string\n-\tmaxPoolCount      int64\n-\tmaxPortsPerClient int64\n+\tbindAddr              string\n+\tbindPort              int\n+\tbindUdpPort           int\n+\tkcpBindPort           int\n+\tproxyBindAddr         string\n+\tvhostHttpPort         int\n+\tvhostHttpsPort        int\n+\tdashboardAddr         string\n+\tdashboardPort         int\n+\tdashboardUser         string\n+\tdashboardPwd          string\n+\tassetsDir             string\n+\tlogFile               string\n+\tlogWay                string\n+\tlogLevel              string\n+\tlogMaxDays            int64\n+\ttoken                 string\n+\tauthTimeout           int64\n+\tsubDomainHost         string\n+\ttcpMux                bool\n+\tallowPorts            string\n+\tmaxPoolCount          int64\n+\tmaxPortsPerClient     int64\n+\tResponseHeaderTimeout int64",
        "comment_created_at": "2018-08-06T16:31:50+00:00",
        "comment_author": "fatedier",
        "comment_body": "Use lowercase letter at the beginning and the word `ResponseHeaderTimeout` is not clear for others to figure out where it's used.\r\n`vhost_http_timeout` is better.",
        "pr_file_module": null
      },
      {
        "comment_id": "208087785",
        "repo_full_name": "fatedier/frp",
        "pr_number": 879,
        "pr_file": "cmd/frps/root.go",
        "discussion_id": "207954053",
        "commented_code": "@@ -37,29 +37,30 @@ var (\n \tcfgFile     string\n \tshowVersion bool\n \n-\tbindAddr          string\n-\tbindPort          int\n-\tbindUdpPort       int\n-\tkcpBindPort       int\n-\tproxyBindAddr     string\n-\tvhostHttpPort     int\n-\tvhostHttpsPort    int\n-\tdashboardAddr     string\n-\tdashboardPort     int\n-\tdashboardUser     string\n-\tdashboardPwd      string\n-\tassetsDir         string\n-\tlogFile           string\n-\tlogWay            string\n-\tlogLevel          string\n-\tlogMaxDays        int64\n-\ttoken             string\n-\tauthTimeout       int64\n-\tsubDomainHost     string\n-\ttcpMux            bool\n-\tallowPorts        string\n-\tmaxPoolCount      int64\n-\tmaxPortsPerClient int64\n+\tbindAddr              string\n+\tbindPort              int\n+\tbindUdpPort           int\n+\tkcpBindPort           int\n+\tproxyBindAddr         string\n+\tvhostHttpPort         int\n+\tvhostHttpsPort        int\n+\tdashboardAddr         string\n+\tdashboardPort         int\n+\tdashboardUser         string\n+\tdashboardPwd          string\n+\tassetsDir             string\n+\tlogFile               string\n+\tlogWay                string\n+\tlogLevel              string\n+\tlogMaxDays            int64\n+\ttoken                 string\n+\tauthTimeout           int64\n+\tsubDomainHost         string\n+\ttcpMux                bool\n+\tallowPorts            string\n+\tmaxPoolCount          int64\n+\tmaxPortsPerClient     int64\n+\tResponseHeaderTimeout int64",
        "comment_created_at": "2018-08-07T03:16:23+00:00",
        "comment_author": "235832289",
        "comment_body": "OK, I've changed it",
        "pr_file_module": null
      }
    ]
  }
]