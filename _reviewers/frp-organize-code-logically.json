[
  {
    "discussion_id": "1387884610",
    "pr_number": 3671,
    "pr_file": "server/service.go",
    "created_at": "2023-11-09T11:42:21+00:00",
    "commented_code": "// Accept connections from client\n \tlistener net.Listener\n \n+\t// Accept connections using ssh\n+\tsshListener net.Listener",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "1387884610",
        "repo_full_name": "fatedier/frp",
        "pr_number": 3671,
        "pr_file": "server/service.go",
        "discussion_id": "1387884610",
        "commented_code": "@@ -66,6 +68,10 @@ type Service struct {\n \t// Accept connections from client\n \tlistener net.Listener\n \n+\t// Accept connections using ssh\n+\tsshListener net.Listener",
        "comment_created_at": "2023-11-09T11:42:21+00:00",
        "comment_author": "fatedier",
        "comment_body": "ssh \u76f8\u5173\u7684\u90e8\u5206\u6700\u597d\u80fd\u5c01\u88c5\u8d77\u6765\u653e\u5230 `pkg/ssh` \u76ee\u5f55\u4e0b\u3002",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "690284965",
    "pr_number": 2255,
    "pr_file": "assets/frpc/embed.go",
    "created_at": "2021-08-17T11:35:55+00:00",
    "commented_code": "+package frpc",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "690284965",
        "repo_full_name": "fatedier/frp",
        "pr_number": 2255,
        "pr_file": "assets/frpc/embed.go",
        "discussion_id": "690284965",
        "commented_code": "@@ -0,0 +1,14 @@\n+package frpc",
        "comment_created_at": "2021-08-17T11:35:55+00:00",
        "comment_author": "fatedier",
        "comment_body": "You'd better not move static files into this directory. Keep it in a independent static directory.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "486840852",
    "pr_number": 1974,
    "pr_file": "server/service.go",
    "created_at": "2020-09-11T07:56:35+00:00",
    "commented_code": "import (\n \t\"bytes\"\n \t\"context\"\n-\t\"crypto/rand\"\n-\t\"crypto/rsa\"\n \t\"crypto/tls\"\n-\t\"crypto/x509\"\n-\t\"encoding/pem\"\n \t\"fmt\"\n+\t\"github.com/fatedier/frp/models/transport\"",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "486840852",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1974,
        "pr_file": "server/service.go",
        "discussion_id": "486840852",
        "commented_code": "@@ -17,14 +17,10 @@ package server\n import (\n \t\"bytes\"\n \t\"context\"\n-\t\"crypto/rand\"\n-\t\"crypto/rsa\"\n \t\"crypto/tls\"\n-\t\"crypto/x509\"\n-\t\"encoding/pem\"\n \t\"fmt\"\n+\t\"github.com/fatedier/frp/models/transport\"",
        "comment_created_at": "2020-09-11T07:56:35+00:00",
        "comment_author": "fatedier",
        "comment_body": "Code format, move it to single import section.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "486841040",
    "pr_number": 1974,
    "pr_file": "client/control.go",
    "created_at": "2020-09-11T07:56:54+00:00",
    "commented_code": "\"context\"\n \t\"crypto/tls\"\n \t\"fmt\"\n+\t\"github.com/fatedier/frp/models/transport\"",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "486841040",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1974,
        "pr_file": "client/control.go",
        "discussion_id": "486841040",
        "commented_code": "@@ -18,6 +18,7 @@ import (\n \t\"context\"\n \t\"crypto/tls\"\n \t\"fmt\"\n+\t\"github.com/fatedier/frp/models/transport\"",
        "comment_created_at": "2020-09-11T07:56:54+00:00",
        "comment_author": "fatedier",
        "comment_body": "Move it to single import section.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "387523637",
    "pr_number": 1661,
    "pr_file": "utils/vhost/vhost.go",
    "created_at": "2020-03-04T08:53:23+00:00",
    "commented_code": "type muxFunc func(net.Conn) (net.Conn, map[string]string, error)\n type httpAuthFunc func(net.Conn, string, string, string) (bool, error)\n type hostRewriteFunc func(net.Conn, string) (net.Conn, error)\n+type successFunc func(net.Conn) error\n \n type VhostMuxer struct {\n \tlistener       net.Listener\n \ttimeout        time.Duration\n \tvhostFunc      muxFunc\n \tauthFunc       httpAuthFunc\n+\tsuccessFunc    successFunc\n \trewriteFunc    hostRewriteFunc\n \tregistryRouter *VhostRouters\n }\n \n-func NewVhostMuxer(listener net.Listener, vhostFunc muxFunc, authFunc httpAuthFunc, rewriteFunc hostRewriteFunc, timeout time.Duration) (mux *VhostMuxer, err error) {\n+func NewVhostMuxer(listener net.Listener, vhostFunc muxFunc, authFunc httpAuthFunc, successFunc successFunc, rewriteFunc hostRewriteFunc, timeout time.Duration) (mux *VhostMuxer, err error) {",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "387523637",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1661,
        "pr_file": "utils/vhost/vhost.go",
        "discussion_id": "387523637",
        "commented_code": "@@ -29,22 +29,25 @@ import (\n type muxFunc func(net.Conn) (net.Conn, map[string]string, error)\n type httpAuthFunc func(net.Conn, string, string, string) (bool, error)\n type hostRewriteFunc func(net.Conn, string) (net.Conn, error)\n+type successFunc func(net.Conn) error\n \n type VhostMuxer struct {\n \tlistener       net.Listener\n \ttimeout        time.Duration\n \tvhostFunc      muxFunc\n \tauthFunc       httpAuthFunc\n+\tsuccessFunc    successFunc\n \trewriteFunc    hostRewriteFunc\n \tregistryRouter *VhostRouters\n }\n \n-func NewVhostMuxer(listener net.Listener, vhostFunc muxFunc, authFunc httpAuthFunc, rewriteFunc hostRewriteFunc, timeout time.Duration) (mux *VhostMuxer, err error) {\n+func NewVhostMuxer(listener net.Listener, vhostFunc muxFunc, authFunc httpAuthFunc, successFunc successFunc, rewriteFunc hostRewriteFunc, timeout time.Duration) (mux *VhostMuxer, err error) {",
        "comment_created_at": "2020-03-04T08:53:23+00:00",
        "comment_author": "mpeterson",
        "comment_body": "non-voting: all the callbacks should be moved into a struct and interfaces. \r\n\r\nI put this as non-voting because it's out of the scope of this patch, but perhaps you can add a `TODO` comment to get back to it later. A good example of what I mean is [the way kubernetes does it for informers](https://github.com/kubernetes/client-go/blob/eb0bad8167df60e402297b26e2cee1bddffde108/tools/cache/shared_informer.go#L138), in particular the [`ResourceHandler`](https://github.com/kubernetes/client-go/blob/eb0bad8167df60e402297b26e2cee1bddffde108/tools/cache/controller.go#L200:6)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "422577534",
    "pr_number": 1798,
    "pr_file": "cmd/frpc/sub/http.go",
    "created_at": "2020-05-10T03:19:26+00:00",
    "commented_code": "httpCmd.PersistentFlags().StringVarP(&hostHeaderRewrite, \"host_header_rewrite\", \"\", \"\", \"host header rewrite\")\n \thttpCmd.PersistentFlags().BoolVarP(&useEncryption, \"ue\", \"\", false, \"use encryption\")\n \thttpCmd.PersistentFlags().BoolVarP(&useCompression, \"uc\", \"\", false, \"use compression\")\n+\thttpCmd.PersistentFlags().BoolVarP(&tlsEnable, \"tls_enable\", \"\", false, \"enable frpc tls\")",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "422577534",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1798,
        "pr_file": "cmd/frpc/sub/http.go",
        "discussion_id": "422577534",
        "commented_code": "@@ -46,6 +46,7 @@ func init() {\n \thttpCmd.PersistentFlags().StringVarP(&hostHeaderRewrite, \"host_header_rewrite\", \"\", \"\", \"host header rewrite\")\n \thttpCmd.PersistentFlags().BoolVarP(&useEncryption, \"ue\", \"\", false, \"use encryption\")\n \thttpCmd.PersistentFlags().BoolVarP(&useCompression, \"uc\", \"\", false, \"use compression\")\n+\thttpCmd.PersistentFlags().BoolVarP(&tlsEnable, \"tls_enable\", \"\", false, \"enable frpc tls\")",
        "comment_created_at": "2020-05-10T03:19:26+00:00",
        "comment_author": "fatedier",
        "comment_body": "You can improve this flag register section after this PR has been merged. \r\n\r\nIt's not convenient to add new flag since we should add it to all different commands.\r\n\r\nIt's better to add a new function like `RegisterCommonFlags(cmd *cobra.Common)` and call it for each command.",
        "pr_file_module": null
      },
      {
        "comment_id": "422616513",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1798,
        "pr_file": "cmd/frpc/sub/http.go",
        "discussion_id": "422577534",
        "commented_code": "@@ -46,6 +46,7 @@ func init() {\n \thttpCmd.PersistentFlags().StringVarP(&hostHeaderRewrite, \"host_header_rewrite\", \"\", \"\", \"host header rewrite\")\n \thttpCmd.PersistentFlags().BoolVarP(&useEncryption, \"ue\", \"\", false, \"use encryption\")\n \thttpCmd.PersistentFlags().BoolVarP(&useCompression, \"uc\", \"\", false, \"use compression\")\n+\thttpCmd.PersistentFlags().BoolVarP(&tlsEnable, \"tls_enable\", \"\", false, \"enable frpc tls\")",
        "comment_created_at": "2020-05-10T09:23:33+00:00",
        "comment_author": "blizard863",
        "comment_body": "got it ",
        "pr_file_module": null
      }
    ]
  }
]