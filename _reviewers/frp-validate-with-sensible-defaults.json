[
  {
    "discussion_id": "1094785426",
    "pr_number": 3271,
    "pr_file": "pkg/config/proxy.go",
    "created_at": "2023-02-02T16:38:15+00:00",
    "commented_code": "}\n \t}\n \n+\tif bandwidthMode, err := section.GetKey(\"bandwidth_limit_mode\"); err == nil {\n+\t\tcfg.BandwidthLimitMode, err = NewBandwidthLimitMode(bandwidthMode.String())",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "1094785426",
        "repo_full_name": "fatedier/frp",
        "pr_number": 3271,
        "pr_file": "pkg/config/proxy.go",
        "discussion_id": "1094785426",
        "commented_code": "@@ -365,6 +370,15 @@ func (cfg *BaseProxyConf) decorate(prefix string, name string, section *ini.Sect\n \t\t}\n \t}\n \n+\tif bandwidthMode, err := section.GetKey(\"bandwidth_limit_mode\"); err == nil {\n+\t\tcfg.BandwidthLimitMode, err = NewBandwidthLimitMode(bandwidthMode.String())",
        "comment_created_at": "2023-02-02T16:38:15+00:00",
        "comment_author": "fatedier",
        "comment_body": "Validate it in `checkForCli` and `CheckForSvr`.\r\n\r\nString value doesn't need a custom decode logic.",
        "pr_file_module": null
      },
      {
        "comment_id": "1095323240",
        "repo_full_name": "fatedier/frp",
        "pr_number": 3271,
        "pr_file": "pkg/config/proxy.go",
        "discussion_id": "1094785426",
        "commented_code": "@@ -365,6 +370,15 @@ func (cfg *BaseProxyConf) decorate(prefix string, name string, section *ini.Sect\n \t\t}\n \t}\n \n+\tif bandwidthMode, err := section.GetKey(\"bandwidth_limit_mode\"); err == nil {\n+\t\tcfg.BandwidthLimitMode, err = NewBandwidthLimitMode(bandwidthMode.String())",
        "comment_created_at": "2023-02-03T03:33:50+00:00",
        "comment_author": "cbodonnell",
        "comment_body": "moved validation of `bandwidth_limit_mode` to `CheckForCli`\r\n\r\n**Edit:** also added validation in `CheckForSrv`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "486867179",
    "pr_number": 1974,
    "pr_file": "models/config/client_common.go",
    "created_at": "2020-09-11T08:45:24+00:00",
    "commented_code": "err = fmt.Errorf(\"Parse conf error: invalid heartbeat_timeout, heartbeat_timeout is less than heartbeat_interval\")\n \t\treturn\n \t}\n+\n+\tif cfg.TLSEnable == false {\n+\t\tif cfg.TLSCertFile != \"\" {\n+\t\t\terr = fmt.Errorf(\"Parse conf error: forbidden tls_cert_file, it only works when tls_enabled is true\")",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "486867179",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1974,
        "pr_file": "models/config/client_common.go",
        "discussion_id": "486867179",
        "commented_code": "@@ -320,5 +347,23 @@ func (cfg *ClientCommonConf) Check() (err error) {\n \t\terr = fmt.Errorf(\"Parse conf error: invalid heartbeat_timeout, heartbeat_timeout is less than heartbeat_interval\")\n \t\treturn\n \t}\n+\n+\tif cfg.TLSEnable == false {\n+\t\tif cfg.TLSCertFile != \"\" {\n+\t\t\terr = fmt.Errorf(\"Parse conf error: forbidden tls_cert_file, it only works when tls_enabled is true\")",
        "comment_created_at": "2020-09-11T08:45:24+00:00",
        "comment_author": "fatedier",
        "comment_body": "Do not return error. Give it a warning like `tls_cert_file can only work when tls_enable is true`.\r\n\r\nIf users want to disable TLS, they can just comment `# tls_enable = true`.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "54369899",
    "pr_number": 6,
    "pr_file": "src/frp/models/client/config.go",
    "created_at": "2016-02-29T05:13:17+00:00",
    "commented_code": "return fmt.Errorf(\"Parse ini file error: proxy [%s] no passwd found\", proxyClient.Name)\n \t\t\t}\n \n+\t\t\tproxyClient.LocalIp, ok = section[\"local_ip\"]\n+\t\t\tif !ok {\n+\t\t\t\treturn fmt.Errorf(\"Parse ini file error: proxy [%s] no local_ip found\", proxyClient.Name)",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "54369899",
        "repo_full_name": "fatedier/frp",
        "pr_number": 6,
        "pr_file": "src/frp/models/client/config.go",
        "discussion_id": "54369899",
        "commented_code": "@@ -66,6 +66,11 @@ func LoadConf(confFile string) (err error) {\n \t\t\t\treturn fmt.Errorf(\"Parse ini file error: proxy [%s] no passwd found\", proxyClient.Name)\n \t\t\t}\n \n+\t\t\tproxyClient.LocalIp, ok = section[\"local_ip\"]\n+\t\t\tif !ok {\n+\t\t\t\treturn fmt.Errorf(\"Parse ini file error: proxy [%s] no local_ip found\", proxyClient.Name)",
        "comment_created_at": "2016-02-29T05:13:17+00:00",
        "comment_author": "fatedier",
        "comment_body": "If no ip set, use 127.0.0.1 as default.\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "384681773",
    "pr_number": 1666,
    "pr_file": "models/auth/auth.go",
    "created_at": "2020-02-26T18:30:18+00:00",
    "commented_code": "package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
    "repo_full_name": "fatedier/frp",
    "discussion_comments": [
      {
        "comment_id": "384681773",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "384681773",
        "commented_code": "@@ -15,14 +15,103 @@\n package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
        "comment_created_at": "2020-02-26T18:30:18+00:00",
        "comment_author": "fatedier",
        "comment_body": "I prefer not put parse functions here. There is no need to coupled them together since how to unmarshal config is not releated to this package.\r\n\r\nWe may support more configure file types future. It will be a bit complicated to modify code everywhere.",
        "pr_file_module": null
      },
      {
        "comment_id": "384695742",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "384681773",
        "commented_code": "@@ -15,14 +15,103 @@\n package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
        "comment_created_at": "2020-02-26T18:56:00+00:00",
        "comment_author": "GuyLewin",
        "comment_body": "So you prefer the .ini unmarshal specifically should happen back in client_common and server_common?",
        "pr_file_module": null
      },
      {
        "comment_id": "384886185",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "384681773",
        "commented_code": "@@ -15,14 +15,103 @@\n package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
        "comment_created_at": "2020-02-27T02:47:12+00:00",
        "comment_author": "fatedier",
        "comment_body": "Yes.",
        "pr_file_module": null
      },
      {
        "comment_id": "385073267",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "384681773",
        "commented_code": "@@ -15,14 +15,103 @@\n package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
        "comment_created_at": "2020-02-27T11:38:31+00:00",
        "comment_author": "mpeterson",
        "comment_body": "For common things, I agree. But for example, each option that is specific to an auth provider should be processed by that auth provider. So auth providers should also have an interface to parse the configuration and they should implement it. ",
        "pr_file_module": null
      },
      {
        "comment_id": "385096405",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "384681773",
        "commented_code": "@@ -15,14 +15,103 @@\n package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
        "comment_created_at": "2020-02-27T12:30:31+00:00",
        "comment_author": "GuyLewin",
        "comment_body": "I agree with mpeterson, I think it's cleaner that `common` isn't aware of the OIDC / token specific configurations. And since we're doing that, I don't mind that the auth configuration resides here, like Proxy has unmarshalFromIni",
        "pr_file_module": null
      },
      {
        "comment_id": "385096492",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "384681773",
        "commented_code": "@@ -15,14 +15,103 @@\n package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
        "comment_created_at": "2020-02-27T12:30:43+00:00",
        "comment_author": "fatedier",
        "comment_body": "Not really. `AuthClientConfig` includes all auth provider's options. What one auth provider need to implement is how to validate options it needs, not how to parse it from configuration file. \r\n\r\nFor example, once we want to support json format, we parse the `ServerConfig` once, no need to call each module's parsing funtions.\r\n\r\n```go\r\ntype ServerConfig struct {\r\n    ...\r\n    Auth auth.AuthClientConfig `json:\"auth\"`\r\n    ...\r\n}\r\n\r\nvar config ServerConfig\r\njson.Unmarshal(buf, &config)\r\n\r\nauthSetter := auth.NewAuthSetter(config.Auth)\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "385098003",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "384681773",
        "commented_code": "@@ -15,14 +15,103 @@\n package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
        "comment_created_at": "2020-02-27T12:34:00+00:00",
        "comment_author": "GuyLewin",
        "comment_body": "@fatedier but that will make server_common aware of every new protocol that we add, with every small configuration within, and that's the only reference this configuration will have outside of the `auth` module.\r\n\r\nIn addition, IDK if we want to give AuthClientConfig a name (e.g. Auth) because that suggests that the structure isn't flat, when in reality the .ini is flat.",
        "pr_file_module": null
      },
      {
        "comment_id": "385106885",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "384681773",
        "commented_code": "@@ -15,14 +15,103 @@\n package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
        "comment_created_at": "2020-02-27T12:52:55+00:00",
        "comment_author": "mpeterson",
        "comment_body": "Yeah, I think this doesn't scale up if new protocols will be added in the future. In a way by doing so packages are \"leaking\" implementation details.",
        "pr_file_module": null
      },
      {
        "comment_id": "385109976",
        "repo_full_name": "fatedier/frp",
        "pr_number": 1666,
        "pr_file": "models/auth/auth.go",
        "discussion_id": "384681773",
        "commented_code": "@@ -15,14 +15,103 @@\n package auth\n \n import (\n-\t\"github.com/fatedier/frp/models/config\"\n+\t\"fmt\"\n+\n \t\"github.com/fatedier/frp/models/consts\"\n \t\"github.com/fatedier/frp/models/msg\"\n+\n+\t\"github.com/vaughan0/go-ini\"\n )\n \n-type BaseAuth struct {\n-\tauthenticateHeartBeats   bool\n-\tauthenticateNewWorkConns bool\n+type baseConfig struct {\n+\t// AuthenticationMethod specifies what authentication method to use to\n+\t// authenticate frpc with frps. If \"token\" is specified - token will be\n+\t// read into login message. If \"oidc\" is specified - OIDC (Open ID Connect)\n+\t// token will be issued using OIDC settings. By default, this value is \"token\".\n+\tAuthenticationMethod string `json:\"authentication_method\"`\n+\t// AuthenticateHeartBeats specifies whether to include authentication token in\n+\t// heartbeats sent to frps. By default, this value is false.\n+\tAuthenticateHeartBeats bool `json:\"authenticate_heartbeats\"`\n+\t// AuthenticateNewWorkConns specifies whether to include authentication token in\n+\t// new work connections sent to frps. By default, this value is false.\n+\tAuthenticateNewWorkConns bool `json:\"authenticate_new_work_conns\"`\n+}\n+\n+func getDefaultBaseConf() baseConfig {\n+\treturn baseConfig{\n+\t\tAuthenticationMethod:     \"token\",\n+\t\tAuthenticateHeartBeats:   false,\n+\t\tAuthenticateNewWorkConns: false,\n+\t}\n+}\n+\n+func unmarshalBaseConfFromIni(conf ini.File) baseConfig {",
        "comment_created_at": "2020-02-27T12:59:35+00:00",
        "comment_author": "fatedier",
        "comment_body": "Yes, you are right. It's annoying that we can't map the struct to ini file in a simple way.\r\n\r\nKeep it here for ini now. I will try to support toml or other formats later.",
        "pr_file_module": null
      }
    ]
  }
]