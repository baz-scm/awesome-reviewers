[
  {
    "discussion_id": "2223583925",
    "pr_number": 3936,
    "pr_file": "packages/cli/src/ui/App.tsx",
    "created_at": "2025-07-22T19:03:59+00:00",
    "commented_code": "openAuthDialog,\n     openEditorDialog,\n     toggleCorgiMode,\n+    () => toggleVimModeRef.current?.(), // Wrapper function that calls the ref",
    "repo_full_name": "google-gemini/gemini-cli",
    "discussion_comments": [
      {
        "comment_id": "2223583925",
        "repo_full_name": "google-gemini/gemini-cli",
        "pr_number": 3936,
        "pr_file": "packages/cli/src/ui/App.tsx",
        "discussion_id": "2223583925",
        "commented_code": "@@ -388,6 +389,7 @@ const App = ({ config, settings, startupWarnings = [], version }: AppProps) => {\n     openAuthDialog,\n     openEditorDialog,\n     toggleCorgiMode,\n+    () => toggleVimModeRef.current?.(), // Wrapper function that calls the ref",
        "comment_created_at": "2025-07-22T19:03:59+00:00",
        "comment_author": "jacob314",
        "comment_body": "we should be able to avoid toggleVimModeRef. Let me know if you need help figuring out how to avoid it and I can dig into it. would expect you can duplicate other patterns in this file and that with the right instructions Gemini CLI can likely help you remove this without introducing circular reference issues.\ngenerally we try to avoid useRef in the code base unless we strictly have to as the logic is easier to reason about when we don't.",
        "pr_file_module": null
      },
      {
        "comment_id": "2224694029",
        "repo_full_name": "google-gemini/gemini-cli",
        "pr_number": 3936,
        "pr_file": "packages/cli/src/ui/App.tsx",
        "discussion_id": "2223583925",
        "commented_code": "@@ -388,6 +389,7 @@ const App = ({ config, settings, startupWarnings = [], version }: AppProps) => {\n     openAuthDialog,\n     openEditorDialog,\n     toggleCorgiMode,\n+    () => toggleVimModeRef.current?.(), // Wrapper function that calls the ref",
        "comment_created_at": "2025-07-23T07:41:15+00:00",
        "comment_author": "sijieamoy",
        "comment_body": "With the help of Gemini CLI, I considered two options:\r\n1. Create a `VimContext` that wraps the App component\r\n2. Pass a generic settings update function instead of the specific `toggleVimMode`.\r\n\r\nEnded up going with (2) because the amount of changes is smaller, and the `VimContext` feels an overkill because the rest of the app will unlikely need to use the context. Let me know if this makes sense.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2202044404",
    "pr_number": 1743,
    "pr_file": "packages/cli/src/ui/App.tsx",
    "created_at": "2025-07-11T23:11:56+00:00",
    "commented_code": "return getAllGeminiMdFilenames();\n   }, [settings.merged.contextFileName]);\n \n+  useEffect(() => {\n+    const prompt = config.getQuestion();",
    "repo_full_name": "google-gemini/gemini-cli",
    "discussion_comments": [
      {
        "comment_id": "2202044404",
        "repo_full_name": "google-gemini/gemini-cli",
        "pr_number": 1743,
        "pr_file": "packages/cli/src/ui/App.tsx",
        "discussion_id": "2202044404",
        "commented_code": "@@ -637,6 +638,31 @@ const App = ({ config, settings, startupWarnings = [], version }: AppProps) => {\n     return getAllGeminiMdFilenames();\n   }, [settings.merged.contextFileName]);\n \n+  useEffect(() => {\n+    const prompt = config.getQuestion();",
        "comment_created_at": "2025-07-11T23:11:56+00:00",
        "comment_author": "NTaylorMullen",
        "comment_body": "This is going to get re-invoked on every render. Is there a better way?",
        "pr_file_module": null
      },
      {
        "comment_id": "2202051190",
        "repo_full_name": "google-gemini/gemini-cli",
        "pr_number": 1743,
        "pr_file": "packages/cli/src/ui/App.tsx",
        "discussion_id": "2202044404",
        "commented_code": "@@ -637,6 +638,31 @@ const App = ({ config, settings, startupWarnings = [], version }: AppProps) => {\n     return getAllGeminiMdFilenames();\n   }, [settings.merged.contextFileName]);\n \n+  useEffect(() => {\n+    const prompt = config.getQuestion();",
        "comment_created_at": "2025-07-11T23:21:55+00:00",
        "comment_author": "taeold",
        "comment_body": "pulled out prompt outside of the effect block. The whole effect block itself has dependencies so should only run when the dependencies change \ud83d\udc4d\ud83c\udffc ",
        "pr_file_module": null
      }
    ]
  }
]