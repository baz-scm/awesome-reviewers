[
  {
    "discussion_id": "2165975221",
    "pr_number": 7608,
    "pr_file": "src/shell-integration/bash/ghostty.bash",
    "created_at": "2025-06-25T07:13:52+00:00",
    "commented_code": "}\n fi\n \n+# SSH Integration\n+if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-(env|terminfo) ]]; then\n+\n+  if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-terminfo ]]; then\n+    readonly _CACHE=\"${GHOSTTY_RESOURCES_DIR}/shell-integration/shared/ghostty-ssh-cache\"\n+    # If 'ssh-terminfo' flag is enabled, wrap ghostty to provide cache management commands\n+    ghostty() {\n+      case \"$1\" in\n+        ssh-cache-list) \"$_CACHE\" list ;;\n+        ssh-cache-clear) \"$_CACHE\" clear ;;\n+        *) builtin command ghostty \"$@\" ;;\n+      esac\n+    }\n+  fi\n+\n+  # SSH wrapper\n+  ssh() {\n+    local e=() o=() c=()  # Removed 't' from here",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2165975221",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/shell-integration/bash/ghostty.bash",
        "discussion_id": "2165975221",
        "commented_code": "@@ -95,6 +95,86 @@ if [[ \"$GHOSTTY_SHELL_FEATURES\" == *\"sudo\"* && -n \"$TERMINFO\" ]]; then\n   }\n fi\n \n+# SSH Integration\n+if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-(env|terminfo) ]]; then\n+\n+  if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-terminfo ]]; then\n+    readonly _CACHE=\"${GHOSTTY_RESOURCES_DIR}/shell-integration/shared/ghostty-ssh-cache\"\n+    # If 'ssh-terminfo' flag is enabled, wrap ghostty to provide cache management commands\n+    ghostty() {\n+      case \"$1\" in\n+        ssh-cache-list) \"$_CACHE\" list ;;\n+        ssh-cache-clear) \"$_CACHE\" clear ;;\n+        *) builtin command ghostty \"$@\" ;;\n+      esac\n+    }\n+  fi\n+\n+  # SSH wrapper\n+  ssh() {\n+    local e=() o=() c=()  # Removed 't' from here",
        "comment_created_at": "2025-06-25T07:13:52+00:00",
        "comment_author": "00-kat",
        "comment_body": "Better variable names would be nice in my opinion :).",
        "pr_file_module": null
      },
      {
        "comment_id": "2166935462",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/shell-integration/bash/ghostty.bash",
        "discussion_id": "2165975221",
        "commented_code": "@@ -95,6 +95,86 @@ if [[ \"$GHOSTTY_SHELL_FEATURES\" == *\"sudo\"* && -n \"$TERMINFO\" ]]; then\n   }\n fi\n \n+# SSH Integration\n+if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-(env|terminfo) ]]; then\n+\n+  if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-terminfo ]]; then\n+    readonly _CACHE=\"${GHOSTTY_RESOURCES_DIR}/shell-integration/shared/ghostty-ssh-cache\"\n+    # If 'ssh-terminfo' flag is enabled, wrap ghostty to provide cache management commands\n+    ghostty() {\n+      case \"$1\" in\n+        ssh-cache-list) \"$_CACHE\" list ;;\n+        ssh-cache-clear) \"$_CACHE\" clear ;;\n+        *) builtin command ghostty \"$@\" ;;\n+      esac\n+    }\n+  fi\n+\n+  # SSH wrapper\n+  ssh() {\n+    local e=() o=() c=()  # Removed 't' from here",
        "comment_created_at": "2025-06-25T14:53:00+00:00",
        "comment_author": "jasonrayne",
        "comment_body": "Yeah, that's fair. Guess I got a little _too_ focused on optimizing. \ud83d\ude05 \r\n\r\n**Update:** Decided to go with an optimized-but-readable approach (`env`, `opts`, `ctrl`, `target`, `tinfo`, `cpath`) and applied it consistently across all shell integrations in https://github.com/ghostty-org/ghostty/pull/7608/commits/d46b5ae6e3b69e6096fd1a5e1061c3e6cd235b71",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2169309406",
    "pr_number": 7608,
    "pr_file": "src/shell-integration/bash/ghostty.bash",
    "created_at": "2025-06-26T15:12:40+00:00",
    "commented_code": "}\n fi\n \n+# SSH Integration\n+if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-(env|terminfo) ]]; then\n+\n+  if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-terminfo ]]; then\n+    readonly _CACHE=\"${GHOSTTY_RESOURCES_DIR}/shell-integration/shared/ghostty-ssh-cache\"\n+  fi\n+\n+  # SSH wrapper\n+  ssh() {\n+    local env=() opts=() ctrl=()",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2169309406",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/shell-integration/bash/ghostty.bash",
        "discussion_id": "2169309406",
        "commented_code": "@@ -95,6 +95,78 @@ if [[ \"$GHOSTTY_SHELL_FEATURES\" == *\"sudo\"* && -n \"$TERMINFO\" ]]; then\n   }\n fi\n \n+# SSH Integration\n+if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-(env|terminfo) ]]; then\n+\n+  if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-terminfo ]]; then\n+    readonly _CACHE=\"${GHOSTTY_RESOURCES_DIR}/shell-integration/shared/ghostty-ssh-cache\"\n+  fi\n+\n+  # SSH wrapper\n+  ssh() {\n+    local env=() opts=() ctrl=()",
        "comment_created_at": "2025-06-26T15:12:40+00:00",
        "comment_author": "jparise",
        "comment_body": "It's not a big thing either way, but it might be helpful to prefix these particular local variables with `ssh_` to communicate that these are the values we're going to use when executing `ssh` itself.\r\n\r\n```suggestion\r\n    local ssh_env=() ssh_opts=() ssh_ctrl=()\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2184484922",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/shell-integration/bash/ghostty.bash",
        "discussion_id": "2169309406",
        "commented_code": "@@ -95,6 +95,78 @@ if [[ \"$GHOSTTY_SHELL_FEATURES\" == *\"sudo\"* && -n \"$TERMINFO\" ]]; then\n   }\n fi\n \n+# SSH Integration\n+if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-(env|terminfo) ]]; then\n+\n+  if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-terminfo ]]; then\n+    readonly _CACHE=\"${GHOSTTY_RESOURCES_DIR}/shell-integration/shared/ghostty-ssh-cache\"\n+  fi\n+\n+  # SSH wrapper\n+  ssh() {\n+    local env=() opts=() ctrl=()",
        "comment_created_at": "2025-07-04T05:59:06+00:00",
        "comment_author": "jasonrayne",
        "comment_body": "Fair! Fixed in https://github.com/ghostty-org/ghostty/pull/7608/commits/75c703071a6ab176f2d7982a17cde1e593e14737",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1934739387",
    "pr_number": 5397,
    "pr_file": "include/ghostty.h",
    "created_at": "2025-01-29T22:23:43+00:00",
    "commented_code": "GHOSTTY_FULLSCREEN_NATIVE,\n   GHOSTTY_FULLSCREEN_NON_NATIVE,\n   GHOSTTY_FULLSCREEN_NON_NATIVE_VISIBLE_MENU,\n+  GHOSTTY_FULLSCREEN_TITLED_NON_NATIVE_VISIBLE_MENU,",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1934739387",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5397,
        "pr_file": "include/ghostty.h",
        "discussion_id": "1934739387",
        "commented_code": "@@ -412,6 +412,7 @@ typedef enum {\n   GHOSTTY_FULLSCREEN_NATIVE,\n   GHOSTTY_FULLSCREEN_NON_NATIVE,\n   GHOSTTY_FULLSCREEN_NON_NATIVE_VISIBLE_MENU,\n+  GHOSTTY_FULLSCREEN_TITLED_NON_NATIVE_VISIBLE_MENU,",
        "comment_created_at": "2025-01-29T22:23:43+00:00",
        "comment_author": "mitchellh",
        "comment_body": "I think this naming doesn't match the pattern of other variants. It should be `GHOSTTY_FULLSCREEN_NON_NATIVE_TITLED_VISIBLE_MENU` probably along with all the other enums and so on throughout this PR.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1996794879",
    "pr_number": 6661,
    "pr_file": "src/apprt/gtk/flatpak.zig",
    "created_at": "2025-03-15T11:49:55+00:00",
    "commented_code": "+const std = @import(\"std\");\n+const Allocator = std.mem.Allocator;\n+const build_config = @import(\"../../build_config.zig\");\n+const internal_os = @import(\"../../os/main.zig\");\n+const glib = @import(\"glib\");\n+\n+pub fn resourcesDir(alloc: Allocator, hostAccessible: bool) !?[]const u8 {",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1996794879",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 6661,
        "pr_file": "src/apprt/gtk/flatpak.zig",
        "discussion_id": "1996794879",
        "commented_code": "@@ -0,0 +1,23 @@\n+const std = @import(\"std\");\n+const Allocator = std.mem.Allocator;\n+const build_config = @import(\"../../build_config.zig\");\n+const internal_os = @import(\"../../os/main.zig\");\n+const glib = @import(\"glib\");\n+\n+pub fn resourcesDir(alloc: Allocator, hostAccessible: bool) !?[]const u8 {",
        "comment_created_at": "2025-03-15T11:49:55+00:00",
        "comment_author": "pluiedev",
        "comment_body": "Non-snake_case variables can be confused for functions\r\n\r\n```suggestion\r\npub fn resourcesDir(alloc: Allocator, host_accessible: bool) !?[]const u8 {\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1917430626",
    "pr_number": 5122,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-01-15T22:43:35+00:00",
    "commented_code": "/// you may want to disable it.\n @\"macos-secure-input-indication\": bool = true,\n \n+/// If true, the macOS icon in the dock and cmd-tab will be hidden. This is\n+/// mainly intended for those primarily using the quick-terminal mode.\n+///\n+/// Note that setting this to true means that keyboard layout changes\n+/// will no longer be automatic.\n+@\"macos-hidden\": bool = false,",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1917430626",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5122,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1917430626",
        "commented_code": "@@ -1909,6 +1909,13 @@ keybind: Keybinds = .{},\n /// you may want to disable it.\n @\"macos-secure-input-indication\": bool = true,\n \n+/// If true, the macOS icon in the dock and cmd-tab will be hidden. This is\n+/// mainly intended for those primarily using the quick-terminal mode.\n+///\n+/// Note that setting this to true means that keyboard layout changes\n+/// will no longer be automatic.\n+@\"macos-hidden\": bool = false,",
        "comment_created_at": "2025-01-15T22:43:35+00:00",
        "comment_author": "AlexJuca",
        "comment_body": "@xalbd Should we name this `is-app-icon-hidden-from-macos`?\n\nIf you want to be more pedantic you could have it be `is-app-icon-hidden-from-macos_dock_and_app_switcher`",
        "pr_file_module": null
      },
      {
        "comment_id": "1917461292",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5122,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1917430626",
        "commented_code": "@@ -1909,6 +1909,13 @@ keybind: Keybinds = .{},\n /// you may want to disable it.\n @\"macos-secure-input-indication\": bool = true,\n \n+/// If true, the macOS icon in the dock and cmd-tab will be hidden. This is\n+/// mainly intended for those primarily using the quick-terminal mode.\n+///\n+/// Note that setting this to true means that keyboard layout changes\n+/// will no longer be automatic.\n+@\"macos-hidden\": bool = false,",
        "comment_created_at": "2025-01-15T23:19:17+00:00",
        "comment_author": "xalbd",
        "comment_body": "What about `macos-icon-hide` or `macos-icon-hidden` to keep naming consistent with other `macos-` options?",
        "pr_file_module": null
      },
      {
        "comment_id": "1917864923",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5122,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1917430626",
        "commented_code": "@@ -1909,6 +1909,13 @@ keybind: Keybinds = .{},\n /// you may want to disable it.\n @\"macos-secure-input-indication\": bool = true,\n \n+/// If true, the macOS icon in the dock and cmd-tab will be hidden. This is\n+/// mainly intended for those primarily using the quick-terminal mode.\n+///\n+/// Note that setting this to true means that keyboard layout changes\n+/// will no longer be automatic.\n+@\"macos-hidden\": bool = false,",
        "comment_created_at": "2025-01-16T07:21:42+00:00",
        "comment_author": "AlexJuca",
        "comment_body": "Those are also good options. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2056104226",
    "pr_number": 7167,
    "pr_file": "src/apprt/gtk/ui/1.0/menu-window-titlebar_menu.blp",
    "created_at": "2025-04-23T13:48:21+00:00",
    "commented_code": "}\n \n   section {\n+    item {\n+      label: _(\"Command Palette\");\n+      action: \"win.command-palette\";",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2056104226",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7167,
        "pr_file": "src/apprt/gtk/ui/1.0/menu-window-titlebar_menu.blp",
        "discussion_id": "2056104226",
        "commented_code": "@@ -81,6 +81,11 @@ menu menu {\n   }\n \n   section {\n+    item {\n+      label: _(\"Command Palette\");\n+      action: \"win.command-palette\";",
        "comment_created_at": "2025-04-23T13:48:21+00:00",
        "comment_author": "jcollie",
        "comment_body": "As above, add `toggle-` prefix.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2056109783",
    "pr_number": 7167,
    "pr_file": "src/apprt/gtk/Window.zig",
    "created_at": "2025-04-23T13:51:08+00:00",
    "commented_code": ".{ \"split-left\", gtkActionSplitLeft },\n         .{ \"split-up\", gtkActionSplitUp },\n         .{ \"toggle-inspector\", gtkActionToggleInspector },\n+        .{ \"command-palette\", gtkActionToggleCommandPalette },",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2056109783",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7167,
        "pr_file": "src/apprt/gtk/Window.zig",
        "discussion_id": "2056109783",
        "commented_code": "@@ -577,6 +587,7 @@ fn initActions(self: *Window) void {\n         .{ \"split-left\", gtkActionSplitLeft },\n         .{ \"split-up\", gtkActionSplitUp },\n         .{ \"toggle-inspector\", gtkActionToggleInspector },\n+        .{ \"command-palette\", gtkActionToggleCommandPalette },",
        "comment_created_at": "2025-04-23T13:51:08+00:00",
        "comment_author": "jcollie",
        "comment_body": "Add prefix `toggle-`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1978369587",
    "pr_number": 5326,
    "pr_file": "include/ghostty.h",
    "created_at": "2025-03-03T23:12:09+00:00",
    "commented_code": "GHOSTTY_ACTION_COLOR_CHANGE,\n   GHOSTTY_ACTION_RELOAD_CONFIG,\n   GHOSTTY_ACTION_CONFIG_CHANGE,\n+  GHOSTTY_ACTION_BELL,",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1978369587",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5326,
        "pr_file": "include/ghostty.h",
        "discussion_id": "1978369587",
        "commented_code": "@@ -600,6 +600,7 @@ typedef enum {\n   GHOSTTY_ACTION_COLOR_CHANGE,\n   GHOSTTY_ACTION_RELOAD_CONFIG,\n   GHOSTTY_ACTION_CONFIG_CHANGE,\n+  GHOSTTY_ACTION_BELL,",
        "comment_created_at": "2025-03-03T23:12:09+00:00",
        "comment_author": "tristan957",
        "comment_body": "Feels like we should be more consistent with action names.\r\n\r\n```\r\nTOGGLE_SPLIT_ZOOM\r\nPWD\r\nRELOAD_CONFIG\r\nBELL\r\n```\r\n\r\nMaybe `RING_BELL` would be more consistent?",
        "pr_file_module": null
      },
      {
        "comment_id": "2044968866",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5326,
        "pr_file": "include/ghostty.h",
        "discussion_id": "1978369587",
        "commented_code": "@@ -600,6 +600,7 @@ typedef enum {\n   GHOSTTY_ACTION_COLOR_CHANGE,\n   GHOSTTY_ACTION_RELOAD_CONFIG,\n   GHOSTTY_ACTION_CONFIG_CHANGE,\n+  GHOSTTY_ACTION_BELL,",
        "comment_created_at": "2025-04-15T15:55:55+00:00",
        "comment_author": "jcollie",
        "comment_body": "#7087 switched to RING_BELL",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2009491124",
    "pr_number": 6885,
    "pr_file": "src/os/i18n.zig",
    "created_at": "2025-03-24T05:38:35+00:00",
    "commented_code": "// Buffer must be 16 or at least as long as the locale and null term\n     if (buf.len < @max(16, locale.len + 1)) return error.NoSpaceLeft;\n \n+    // Fix zh locales for macOS\n+    const updated = fixZHLocale(locale);",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2009491124",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 6885,
        "pr_file": "src/os/i18n.zig",
        "discussion_id": "2009491124",
        "commented_code": "@@ -108,12 +108,15 @@ pub fn canonicalizeLocale(\n     // Buffer must be 16 or at least as long as the locale and null term\n     if (buf.len < @max(16, locale.len + 1)) return error.NoSpaceLeft;\n \n+    // Fix zh locales for macOS\n+    const updated = fixZHLocale(locale);",
        "comment_created_at": "2025-03-24T05:38:35+00:00",
        "comment_author": "00-kat",
        "comment_body": "Pretty sure the Zig convention is to not full-caps acronyms.\r\n>  Acronyms, initialisms, proper nouns, or any other word that has capitalization rules in written English are subject to naming conventions just like any other word. Even acronyms that are only 2 letters long are subject to these conventions.\r\n\r\n([Zig Language Reference \u00a7 Style Guide][style-guide])\r\n```suggestion\r\n    const updated = fixZhLocale(locale);\r\n```\r\n[style-guide]: https://ziglang.org/documentation/0.14.0/#toc-Names",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1987353480",
    "pr_number": 6658,
    "pr_file": "src/os/flatpak.zig",
    "created_at": "2025-03-10T14:03:13+00:00",
    "commented_code": "}\n     }\n \n+    /// Wait for the process to end asynchronously via libxev. This\n+    /// can only be called ONCE.\n+    pub fn wait_xev(",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1987353480",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 6658,
        "pr_file": "src/os/flatpak.zig",
        "discussion_id": "1987353480",
        "commented_code": "@@ -135,6 +148,77 @@ pub const FlatpakHostCommand = struct {\n         }\n     }\n \n+    /// Wait for the process to end asynchronously via libxev. This\n+    /// can only be called ONCE.\n+    pub fn wait_xev(",
        "comment_created_at": "2025-03-10T14:03:13+00:00",
        "comment_author": "pluiedev",
        "comment_body": "Functions in Zig are camelCased\n\n```suggestion\n    pub fn waitXev(\n```\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1904739016",
    "pr_number": 4724,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-01-06T23:28:54+00:00",
    "commented_code": "}\n };\n \n+/// See window-decoration\n+pub const WindowDecoration = enum {\n+    true,\n+    server,\n+    false,",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1904739016",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 4724,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1904739016",
        "commented_code": "@@ -5780,6 +5780,27 @@ pub const BackgroundBlur = union(enum) {\n     }\n };\n \n+/// See window-decoration\n+pub const WindowDecoration = enum {\n+    true,\n+    server,\n+    false,",
        "comment_created_at": "2025-01-06T23:28:54+00:00",
        "comment_author": "jcollie",
        "comment_body": "Same as `true` above, except call it `none`. This matches the protocol more directly.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1964306369",
    "pr_number": 5905,
    "pr_file": "src/apprt/gtk/Surface.zig",
    "created_at": "2025-02-20T20:39:40+00:00",
    "commented_code": "}\n \n const zoom_title_prefix = \"\ud83d\udd0d \";\n+pub const SetTitleSource = enum { USER, TERMINAL };",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1964306369",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5905,
        "pr_file": "src/apprt/gtk/Surface.zig",
        "discussion_id": "1964306369",
        "commented_code": "@@ -931,8 +936,9 @@ fn updateTitleLabels(self: *Surface) void {\n }\n \n const zoom_title_prefix = \"\ud83d\udd0d \";\n+pub const SetTitleSource = enum { USER, TERMINAL };",
        "comment_created_at": "2025-02-20T20:39:40+00:00",
        "comment_author": "jcollie",
        "comment_body": "Enums values in Zig should be lower case unless there's a specific reason not to.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1903160162",
    "pr_number": 4584,
    "pr_file": "src/os/xdg.zig",
    "created_at": "2025-01-04T22:14:01+00:00",
    "commented_code": "try testing.expectEqualSlices([*:0]const u8, actual, &.{ \"a\", \"-e\", \"b\", \"c\" });\n     }\n }\n+\n+/// https://specifications.freedesktop.org/basedir-spec/latest/\n+pub const Dirs = enum {",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1903160162",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 4584,
        "pr_file": "src/os/xdg.zig",
        "discussion_id": "1903160162",
        "commented_code": "@@ -193,3 +193,87 @@ test parseTerminalExec {\n         try testing.expectEqualSlices([*:0]const u8, actual, &.{ \"a\", \"-e\", \"b\", \"c\" });\n     }\n }\n+\n+/// https://specifications.freedesktop.org/basedir-spec/latest/\n+pub const Dirs = enum {",
        "comment_created_at": "2025-01-04T22:14:01+00:00",
        "comment_author": "mitchellh",
        "comment_body": "Rename to `Dir`, usually singular. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1903163858",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 4584,
        "pr_file": "src/os/xdg.zig",
        "discussion_id": "1903160162",
        "commented_code": "@@ -193,3 +193,87 @@ test parseTerminalExec {\n         try testing.expectEqualSlices([*:0]const u8, actual, &.{ \"a\", \"-e\", \"b\", \"c\" });\n     }\n }\n+\n+/// https://specifications.freedesktop.org/basedir-spec/latest/\n+pub const Dirs = enum {",
        "comment_created_at": "2025-01-04T22:51:13+00:00",
        "comment_author": "jcollie",
        "comment_body": "Fixed.",
        "pr_file_module": null
      }
    ]
  }
]