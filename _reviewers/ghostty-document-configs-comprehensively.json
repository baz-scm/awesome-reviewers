[
  {
    "discussion_id": "1955478061",
    "pr_number": 5749,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-02-14T02:36:03+00:00",
    "commented_code": "///    more subtle border.\n ///\n /// Changing this value at runtime will only affect new windows.\n-@\"adw-toolbar-style\": AdwToolbarStyle = .raised,\n+@\"gtk-toolbar-style\": GtkToolbarStyle = .raised,\n \n /// If `true` (default), then the Ghostty GTK tabs will be \"wide.\" Wide tabs\n /// are the new typical Gnome style where tabs fill their available space.\n /// If you set this to `false` then tabs will only take up space they need,\n /// which is the old style.\n @\"gtk-wide-tabs\": bool = true,\n \n-/// If `true` (default), Ghostty will enable Adwaita theme support. This\n-/// will make `window-theme` work properly and will also allow Ghostty to\n-/// properly respond to system theme changes, light/dark mode changing, etc.\n-/// This requires a GTK4 desktop with a GTK4 theme.\n-///\n-/// If you are running GTK3 or have a GTK3 theme, you may have to set this\n-/// to false to get your theme picked up properly. Having this set to true\n-/// with GTK3 should not cause any problems, but it may not work exactly as\n-/// expected.\n-///\n-/// This configuration only has an effect if Ghostty was built with\n-/// Adwaita support.\n-@\"gtk-adwaita\": bool = true,",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1955478061",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5749,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1955478061",
        "commented_code": "@@ -2153,28 +2147,14 @@ keybind: Keybinds = .{},\n ///    more subtle border.\n ///\n /// Changing this value at runtime will only affect new windows.\n-@\"adw-toolbar-style\": AdwToolbarStyle = .raised,\n+@\"gtk-toolbar-style\": GtkToolbarStyle = .raised,\n \n /// If `true` (default), then the Ghostty GTK tabs will be \"wide.\" Wide tabs\n /// are the new typical Gnome style where tabs fill their available space.\n /// If you set this to `false` then tabs will only take up space they need,\n /// which is the old style.\n @\"gtk-wide-tabs\": bool = true,\n \n-/// If `true` (default), Ghostty will enable Adwaita theme support. This\n-/// will make `window-theme` work properly and will also allow Ghostty to\n-/// properly respond to system theme changes, light/dark mode changing, etc.\n-/// This requires a GTK4 desktop with a GTK4 theme.\n-///\n-/// If you are running GTK3 or have a GTK3 theme, you may have to set this\n-/// to false to get your theme picked up properly. Having this set to true\n-/// with GTK3 should not cause any problems, but it may not work exactly as\n-/// expected.\n-///\n-/// This configuration only has an effect if Ghostty was built with\n-/// Adwaita support.\n-@\"gtk-adwaita\": bool = true,",
        "comment_created_at": "2025-02-14T02:36:03+00:00",
        "comment_author": "tristan957",
        "comment_body": "Maybe it would be easier for users if we just blackholed this option and warned in the logs?",
        "pr_file_module": null
      },
      {
        "comment_id": "1955484942",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5749,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1955478061",
        "commented_code": "@@ -2153,28 +2147,14 @@ keybind: Keybinds = .{},\n ///    more subtle border.\n ///\n /// Changing this value at runtime will only affect new windows.\n-@\"adw-toolbar-style\": AdwToolbarStyle = .raised,\n+@\"gtk-toolbar-style\": GtkToolbarStyle = .raised,\n \n /// If `true` (default), then the Ghostty GTK tabs will be \"wide.\" Wide tabs\n /// are the new typical Gnome style where tabs fill their available space.\n /// If you set this to `false` then tabs will only take up space they need,\n /// which is the old style.\n @\"gtk-wide-tabs\": bool = true,\n \n-/// If `true` (default), Ghostty will enable Adwaita theme support. This\n-/// will make `window-theme` work properly and will also allow Ghostty to\n-/// properly respond to system theme changes, light/dark mode changing, etc.\n-/// This requires a GTK4 desktop with a GTK4 theme.\n-///\n-/// If you are running GTK3 or have a GTK3 theme, you may have to set this\n-/// to false to get your theme picked up properly. Having this set to true\n-/// with GTK3 should not cause any problems, but it may not work exactly as\n-/// expected.\n-///\n-/// This configuration only has an effect if Ghostty was built with\n-/// Adwaita support.\n-@\"gtk-adwaita\": bool = true,",
        "comment_created_at": "2025-02-14T02:47:57+00:00",
        "comment_author": "jcollie",
        "comment_body": "I'd bet that a lot of users will never see the logs, so I think that we need something noisier than that. I think that options that just silently do nothing will frustrate more people that don't read the release notes. I think that it's going to become increasingly more common to have people that install Ghostty from their package manager and launch it from a GUI desktop icon so they may not even know where to look for the logs.",
        "pr_file_module": null
      },
      {
        "comment_id": "1955519412",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5749,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1955478061",
        "commented_code": "@@ -2153,28 +2147,14 @@ keybind: Keybinds = .{},\n ///    more subtle border.\n ///\n /// Changing this value at runtime will only affect new windows.\n-@\"adw-toolbar-style\": AdwToolbarStyle = .raised,\n+@\"gtk-toolbar-style\": GtkToolbarStyle = .raised,\n \n /// If `true` (default), then the Ghostty GTK tabs will be \"wide.\" Wide tabs\n /// are the new typical Gnome style where tabs fill their available space.\n /// If you set this to `false` then tabs will only take up space they need,\n /// which is the old style.\n @\"gtk-wide-tabs\": bool = true,\n \n-/// If `true` (default), Ghostty will enable Adwaita theme support. This\n-/// will make `window-theme` work properly and will also allow Ghostty to\n-/// properly respond to system theme changes, light/dark mode changing, etc.\n-/// This requires a GTK4 desktop with a GTK4 theme.\n-///\n-/// If you are running GTK3 or have a GTK3 theme, you may have to set this\n-/// to false to get your theme picked up properly. Having this set to true\n-/// with GTK3 should not cause any problems, but it may not work exactly as\n-/// expected.\n-///\n-/// This configuration only has an effect if Ghostty was built with\n-/// Adwaita support.\n-@\"gtk-adwaita\": bool = true,",
        "comment_created_at": "2025-02-14T03:50:50+00:00",
        "comment_author": "mitchellh",
        "comment_body": "Again, normally I'm very much in the camp of bending over backwards to support backwards compatibility. In this case, we've explicitly warned for a couple releases now that this is coming and that we will be breaking compatibility, so I think in this case, we should hard remove as @jcollie has done and have the config warnings popup come up.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1943668348",
    "pr_number": 5593,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-02-05T21:12:11+00:00",
    "commented_code": "/// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n+/// current gtk implementation for color management is not good enough.\n+/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n+@\"disable-gtk-color-mgmt\": bool = false,",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1943668348",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5593,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1943668348",
        "commented_code": "@@ -1350,6 +1350,10 @@ keybind: Keybinds = .{},\n /// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n+/// current gtk implementation for color management is not good enough.\n+/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n+@\"disable-gtk-color-mgmt\": bool = false,",
        "comment_created_at": "2025-02-05T21:12:11+00:00",
        "comment_author": "jcollie",
        "comment_body": "A better name would be `gtk-gdk-disable-color-mgmt`. Any GTK-specific config entries should be prefixed with `gtk`.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1943671089",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5593,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1943668348",
        "commented_code": "@@ -1350,6 +1350,10 @@ keybind: Keybinds = .{},\n /// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n+/// current gtk implementation for color management is not good enough.\n+/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n+@\"disable-gtk-color-mgmt\": bool = false,",
        "comment_created_at": "2025-02-05T21:14:49+00:00",
        "comment_author": "jcollie",
        "comment_body": "I'd expand the comment here and explain the purpose and effect of the setting a little more clearly (including the default and under what situations you'd want to enable this). While fine for an inline code comment, this will appear in user-facing documentation.",
        "pr_file_module": null
      },
      {
        "comment_id": "1943793710",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5593,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1943668348",
        "commented_code": "@@ -1350,6 +1350,10 @@ keybind: Keybinds = .{},\n /// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n+/// current gtk implementation for color management is not good enough.\n+/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n+@\"disable-gtk-color-mgmt\": bool = false,",
        "comment_created_at": "2025-02-05T23:04:02+00:00",
        "comment_author": "pluiedev",
        "comment_body": "I still am of the opinion that this should not be a config option. We already work around numerous GTK quirks that were tied to specific versions in the code base and IMHO that's necessary for a good OOTB experience. If we go down this route, expect tons of Plasma 6.3 users (whenever it comes out) on buggy GTK versions to complain...",
        "pr_file_module": null
      },
      {
        "comment_id": "1943823692",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5593,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1943668348",
        "commented_code": "@@ -1350,6 +1350,10 @@ keybind: Keybinds = .{},\n /// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n+/// current gtk implementation for color management is not good enough.\n+/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n+@\"disable-gtk-color-mgmt\": bool = false,",
        "comment_created_at": "2025-02-05T23:28:11+00:00",
        "comment_author": "jcollie",
        "comment_body": "I agree in general that defaulting to \"doing the right thing\" automatically is good, wouldn't this necessitate conditioning based on both the GTK version _and_ the Plasma version? We'd need to add detection for fixed versions of GTK (easy if we know the versions) as well as KDE version (not sure how hard this would be for a GTK app).",
        "pr_file_module": null
      },
      {
        "comment_id": "1943878309",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5593,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1943668348",
        "commented_code": "@@ -1350,6 +1350,10 @@ keybind: Keybinds = .{},\n /// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n+/// current gtk implementation for color management is not good enough.\n+/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n+@\"disable-gtk-color-mgmt\": bool = false,",
        "comment_created_at": "2025-02-06T00:51:54+00:00",
        "comment_author": "pluiedev",
        "comment_body": "In my understanding it's that Plasma is implementing the xx_color_management_v4 protocol completely correctly and GTK is the one that's doing it wrong, so we shouldn't really need to care about the Plasma version (aka should another compositor implement the protocol correctly, GTK would also render incorrectly)",
        "pr_file_module": null
      },
      {
        "comment_id": "1944295907",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5593,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1943668348",
        "commented_code": "@@ -1350,6 +1350,10 @@ keybind: Keybinds = .{},\n /// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n+/// current gtk implementation for color management is not good enough.\n+/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n+@\"disable-gtk-color-mgmt\": bool = false,",
        "comment_created_at": "2025-02-06T08:24:31+00:00",
        "comment_author": "eifr",
        "comment_body": "I ran Fedora Rawhide on a VM with GTK 4.17.4, and it\u2019s working fine without disabling `color-mgmt`. Honestly, I\u2019m not sure why\u2014I checked the GTK changelog, but nothing specifically points to these fixes.  \r\n\r\nBecause of that, I decided to remove the config. But anyway, maybe we should allow users to pass env vars for `GTK_DISABLE`.  \r\n\r\n[[This issue](https://gitlab.gnome.org/GNOME/gtk/-/issues/6864)] tracks their fixes.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1944052013",
    "pr_number": 5593,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-02-06T03:40:54+00:00",
    "commented_code": "/// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n-/// current gtk implementation for color management is not good enough.\n-/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n-@\"disable-gtk-color-mgmt\": bool = false,\n+/// Controls whether to disable GDK color management in GTK applications.\n+///\n+/// By default this is set to `false`, meaning color management is enabled.\n+/// You may want to enable this setting (set to `true`) if you experience:\n+/// - Incorrect or washed out colors in your terminal\n+/// - Color inconsistencies between GTK applications\n+/// - Performance issues related to color management\n+///\n+/// This is a workaround for known issues with GTK's color management implementation,\n+/// particularly affecting applications running under Wayland.\n+/// See: https://bugs.kde.org/show_bug.cgi?id=495647",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1944052013",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5593,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1944052013",
        "commented_code": "@@ -1350,9 +1350,18 @@ keybind: Keybinds = .{},\n /// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n-/// current gtk implementation for color management is not good enough.\n-/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n-@\"disable-gtk-color-mgmt\": bool = false,\n+/// Controls whether to disable GDK color management in GTK applications.\n+///\n+/// By default this is set to `false`, meaning color management is enabled.\n+/// You may want to enable this setting (set to `true`) if you experience:\n+/// - Incorrect or washed out colors in your terminal\n+/// - Color inconsistencies between GTK applications\n+/// - Performance issues related to color management\n+///\n+/// This is a workaround for known issues with GTK's color management implementation,\n+/// particularly affecting applications running under Wayland.\n+/// See: https://bugs.kde.org/show_bug.cgi?id=495647",
        "comment_created_at": "2025-02-06T03:40:54+00:00",
        "comment_author": "jcollie",
        "comment_body": "This looks good, but is there a corresponding GTK bug that we can link to?",
        "pr_file_module": null
      },
      {
        "comment_id": "1952859221",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5593,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1944052013",
        "commented_code": "@@ -1350,9 +1350,18 @@ keybind: Keybinds = .{},\n /// Specified as either hex (`#RRGGBB` or `RRGGBB`) or a named X11 color.\n @\"window-titlebar-foreground\": ?Color = null,\n \n-/// current gtk implementation for color management is not good enough.\n-/// see: https://bugs.kde.org/show_bug.cgi?id=495647\n-@\"disable-gtk-color-mgmt\": bool = false,\n+/// Controls whether to disable GDK color management in GTK applications.\n+///\n+/// By default this is set to `false`, meaning color management is enabled.\n+/// You may want to enable this setting (set to `true`) if you experience:\n+/// - Incorrect or washed out colors in your terminal\n+/// - Color inconsistencies between GTK applications\n+/// - Performance issues related to color management\n+///\n+/// This is a workaround for known issues with GTK's color management implementation,\n+/// particularly affecting applications running under Wayland.\n+/// See: https://bugs.kde.org/show_bug.cgi?id=495647",
        "comment_created_at": "2025-02-12T15:15:20+00:00",
        "comment_author": "pluiedev",
        "comment_body": "After a *lot* of digging it appears that this is the corresponding GTK MR: https://gitlab.gnome.org/GNOME/gtk/-/merge_requests/7612, fixed in [4.15.6](https://gitlab.gnome.org/GNOME/gtk/-/blob/15edfe4ffa7a800ab67717e6a6be81d0b37c1813/NEWS#L28) \r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1978380983",
    "pr_number": 5326,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-03-03T23:27:24+00:00",
    "commented_code": "/// This only works on macOS since only macOS has an auto-update feature.\n @\"auto-update-channel\": ?build_config.ReleaseChannel = null,\n \n+/// Bell features to enable if bell support is available in your runtime. The\n+/// format of this is a list of features to enable separated by commas. If you\n+/// prefix a feature with `no-` then it is disabled. If you omit a feature, its\n+/// default value is used, so you must explicitly disable features you don't\n+/// want.\n+///\n+/// Available features:\n+///\n+///   * `system` - Use a system function to play an audible sound. This differs\n+///     from the `audio` feature in that the sound played is not customizable\n+///     from within Ghostty. Your system may allow for the sound to be\n+///     customized externally to Ghostty.\n+///   * `audio` - Play a custom sound. (GTK only).\n+///\n+/// Example: `audio`, `no-audio`, `system`, `no-system`:\n+///\n+/// By default, no bell features are enabled.\n+@\"bell-features\": BellFeatures = .{},",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1978380983",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5326,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1978380983",
        "commented_code": "@@ -2309,6 +2309,30 @@ term: []const u8 = \"xterm-ghostty\",\n /// This only works on macOS since only macOS has an auto-update feature.\n @\"auto-update-channel\": ?build_config.ReleaseChannel = null,\n \n+/// Bell features to enable if bell support is available in your runtime. The\n+/// format of this is a list of features to enable separated by commas. If you\n+/// prefix a feature with `no-` then it is disabled. If you omit a feature, its\n+/// default value is used, so you must explicitly disable features you don't\n+/// want.\n+///\n+/// Available features:\n+///\n+///   * `system` - Use a system function to play an audible sound. This differs\n+///     from the `audio` feature in that the sound played is not customizable\n+///     from within Ghostty. Your system may allow for the sound to be\n+///     customized externally to Ghostty.\n+///   * `audio` - Play a custom sound. (GTK only).\n+///\n+/// Example: `audio`, `no-audio`, `system`, `no-system`:\n+///\n+/// By default, no bell features are enabled.\n+@\"bell-features\": BellFeatures = .{},",
        "comment_created_at": "2025-03-03T23:27:24+00:00",
        "comment_author": "00-kat",
        "comment_body": "Should there be a note that this is currently only supported on Linux?",
        "pr_file_module": null
      },
      {
        "comment_id": "1985808293",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5326,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1978380983",
        "commented_code": "@@ -2309,6 +2309,30 @@ term: []const u8 = \"xterm-ghostty\",\n /// This only works on macOS since only macOS has an auto-update feature.\n @\"auto-update-channel\": ?build_config.ReleaseChannel = null,\n \n+/// Bell features to enable if bell support is available in your runtime. The\n+/// format of this is a list of features to enable separated by commas. If you\n+/// prefix a feature with `no-` then it is disabled. If you omit a feature, its\n+/// default value is used, so you must explicitly disable features you don't\n+/// want.\n+///\n+/// Available features:\n+///\n+///   * `system` - Use a system function to play an audible sound. This differs\n+///     from the `audio` feature in that the sound played is not customizable\n+///     from within Ghostty. Your system may allow for the sound to be\n+///     customized externally to Ghostty.\n+///   * `audio` - Play a custom sound. (GTK only).\n+///\n+/// Example: `audio`, `no-audio`, `system`, `no-system`:\n+///\n+/// By default, no bell features are enabled.\n+@\"bell-features\": BellFeatures = .{},",
        "comment_created_at": "2025-03-07T22:43:23+00:00",
        "comment_author": "jcollie",
        "comment_body": "No, I think that mentioning support should be on a per-feature basis as there may be features that are not supported by all platforms.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1978920887",
    "pr_number": 5326,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-03-04T08:50:32+00:00",
    "commented_code": "/// This only works on macOS since only macOS has an auto-update feature.\n @\"auto-update-channel\": ?build_config.ReleaseChannel = null,\n \n+/// Bell features to enable if bell support is available in your runtime. The\n+/// format of this is a list of features to enable separated by commas. If you\n+/// prefix a feature with `no-` then it is disabled. If you omit a feature, its\n+/// default value is used, so you must explicitly disable features you don't\n+/// want.\n+///\n+/// Available features:\n+///\n+///   * `system` - Use a system function to play an audible sound. This differs\n+///     from the `audio` feature in that the sound played is not customizable\n+///     from within Ghostty. Your system may allow for the sound to be\n+///     customized externally to Ghostty.\n+///   * `audio` - Play a custom sound. (GTK only).\n+///\n+/// Example: `audio`, `no-audio`, `system`, `no-system`:\n+///\n+/// By default, no bell features are enabled.\n+@\"bell-features\": BellFeatures = .{},\n+\n+/// If `audio` is an enabled bell feature, this is a path to an audio file.\n+/// If the path is not absolute, it is considered relative to the `media`\n+/// subdirectory of the Ghostty configuration directory.",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1978920887",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5326,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1978920887",
        "commented_code": "@@ -2309,6 +2309,30 @@ term: []const u8 = \"xterm-ghostty\",\n /// This only works on macOS since only macOS has an auto-update feature.\n @\"auto-update-channel\": ?build_config.ReleaseChannel = null,\n \n+/// Bell features to enable if bell support is available in your runtime. The\n+/// format of this is a list of features to enable separated by commas. If you\n+/// prefix a feature with `no-` then it is disabled. If you omit a feature, its\n+/// default value is used, so you must explicitly disable features you don't\n+/// want.\n+///\n+/// Available features:\n+///\n+///   * `system` - Use a system function to play an audible sound. This differs\n+///     from the `audio` feature in that the sound played is not customizable\n+///     from within Ghostty. Your system may allow for the sound to be\n+///     customized externally to Ghostty.\n+///   * `audio` - Play a custom sound. (GTK only).\n+///\n+/// Example: `audio`, `no-audio`, `system`, `no-system`:\n+///\n+/// By default, no bell features are enabled.\n+@\"bell-features\": BellFeatures = .{},\n+\n+/// If `audio` is an enabled bell feature, this is a path to an audio file.\n+/// If the path is not absolute, it is considered relative to the `media`\n+/// subdirectory of the Ghostty configuration directory.",
        "comment_created_at": "2025-03-04T08:50:32+00:00",
        "comment_author": "pluiedev",
        "comment_body": "I'm really not sure whether we should do this. I think people should just always specify absolute paths so that it works regardless of Ghostty configs",
        "pr_file_module": null
      },
      {
        "comment_id": "1979526098",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5326,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1978920887",
        "commented_code": "@@ -2309,6 +2309,30 @@ term: []const u8 = \"xterm-ghostty\",\n /// This only works on macOS since only macOS has an auto-update feature.\n @\"auto-update-channel\": ?build_config.ReleaseChannel = null,\n \n+/// Bell features to enable if bell support is available in your runtime. The\n+/// format of this is a list of features to enable separated by commas. If you\n+/// prefix a feature with `no-` then it is disabled. If you omit a feature, its\n+/// default value is used, so you must explicitly disable features you don't\n+/// want.\n+///\n+/// Available features:\n+///\n+///   * `system` - Use a system function to play an audible sound. This differs\n+///     from the `audio` feature in that the sound played is not customizable\n+///     from within Ghostty. Your system may allow for the sound to be\n+///     customized externally to Ghostty.\n+///   * `audio` - Play a custom sound. (GTK only).\n+///\n+/// Example: `audio`, `no-audio`, `system`, `no-system`:\n+///\n+/// By default, no bell features are enabled.\n+@\"bell-features\": BellFeatures = .{},\n+\n+/// If `audio` is an enabled bell feature, this is a path to an audio file.\n+/// If the path is not absolute, it is considered relative to the `media`\n+/// subdirectory of the Ghostty configuration directory.",
        "comment_created_at": "2025-03-04T14:06:08+00:00",
        "comment_author": "jcollie",
        "comment_body": "That would only work if they are generating their configs to account for differences in systems, for example if system A is Linux then their home directory is probably `/home/<username>` but on macOS it's probably `/Users/<username>`. I can agree that this logic should probably be abstracted and centralized.",
        "pr_file_module": null
      },
      {
        "comment_id": "1985752879",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5326,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1978920887",
        "commented_code": "@@ -2309,6 +2309,30 @@ term: []const u8 = \"xterm-ghostty\",\n /// This only works on macOS since only macOS has an auto-update feature.\n @\"auto-update-channel\": ?build_config.ReleaseChannel = null,\n \n+/// Bell features to enable if bell support is available in your runtime. The\n+/// format of this is a list of features to enable separated by commas. If you\n+/// prefix a feature with `no-` then it is disabled. If you omit a feature, its\n+/// default value is used, so you must explicitly disable features you don't\n+/// want.\n+///\n+/// Available features:\n+///\n+///   * `system` - Use a system function to play an audible sound. This differs\n+///     from the `audio` feature in that the sound played is not customizable\n+///     from within Ghostty. Your system may allow for the sound to be\n+///     customized externally to Ghostty.\n+///   * `audio` - Play a custom sound. (GTK only).\n+///\n+/// Example: `audio`, `no-audio`, `system`, `no-system`:\n+///\n+/// By default, no bell features are enabled.\n+@\"bell-features\": BellFeatures = .{},\n+\n+/// If `audio` is an enabled bell feature, this is a path to an audio file.\n+/// If the path is not absolute, it is considered relative to the `media`\n+/// subdirectory of the Ghostty configuration directory.",
        "comment_created_at": "2025-03-07T21:46:59+00:00",
        "comment_author": "gpanders",
        "comment_body": "How does it work for `config-file` or `custom-shader`? IIRC in both cases a relative path resolves relative to the directory of the config file, which seems reasonable to do here too",
        "pr_file_module": null
      },
      {
        "comment_id": "1985806754",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5326,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1978920887",
        "commented_code": "@@ -2309,6 +2309,30 @@ term: []const u8 = \"xterm-ghostty\",\n /// This only works on macOS since only macOS has an auto-update feature.\n @\"auto-update-channel\": ?build_config.ReleaseChannel = null,\n \n+/// Bell features to enable if bell support is available in your runtime. The\n+/// format of this is a list of features to enable separated by commas. If you\n+/// prefix a feature with `no-` then it is disabled. If you omit a feature, its\n+/// default value is used, so you must explicitly disable features you don't\n+/// want.\n+///\n+/// Available features:\n+///\n+///   * `system` - Use a system function to play an audible sound. This differs\n+///     from the `audio` feature in that the sound played is not customizable\n+///     from within Ghostty. Your system may allow for the sound to be\n+///     customized externally to Ghostty.\n+///   * `audio` - Play a custom sound. (GTK only).\n+///\n+/// Example: `audio`, `no-audio`, `system`, `no-system`:\n+///\n+/// By default, no bell features are enabled.\n+@\"bell-features\": BellFeatures = .{},\n+\n+/// If `audio` is an enabled bell feature, this is a path to an audio file.\n+/// If the path is not absolute, it is considered relative to the `media`\n+/// subdirectory of the Ghostty configuration directory.",
        "comment_created_at": "2025-03-07T22:41:28+00:00",
        "comment_author": "jcollie",
        "comment_body": "Hmm it's all a bit convoluted but it looks like `config-file`, `custom-shader`, and `gtk-custom-css` are always treated relative to the directory of the file that they are referenced from, or in the case of CLI args, the current working directory. Re-using that logic I think would be fine.",
        "pr_file_module": null
      },
      {
        "comment_id": "1986112417",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5326,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1978920887",
        "commented_code": "@@ -2309,6 +2309,30 @@ term: []const u8 = \"xterm-ghostty\",\n /// This only works on macOS since only macOS has an auto-update feature.\n @\"auto-update-channel\": ?build_config.ReleaseChannel = null,\n \n+/// Bell features to enable if bell support is available in your runtime. The\n+/// format of this is a list of features to enable separated by commas. If you\n+/// prefix a feature with `no-` then it is disabled. If you omit a feature, its\n+/// default value is used, so you must explicitly disable features you don't\n+/// want.\n+///\n+/// Available features:\n+///\n+///   * `system` - Use a system function to play an audible sound. This differs\n+///     from the `audio` feature in that the sound played is not customizable\n+///     from within Ghostty. Your system may allow for the sound to be\n+///     customized externally to Ghostty.\n+///   * `audio` - Play a custom sound. (GTK only).\n+///\n+/// Example: `audio`, `no-audio`, `system`, `no-system`:\n+///\n+/// By default, no bell features are enabled.\n+@\"bell-features\": BellFeatures = .{},\n+\n+/// If `audio` is an enabled bell feature, this is a path to an audio file.\n+/// If the path is not absolute, it is considered relative to the `media`\n+/// subdirectory of the Ghostty configuration directory.",
        "comment_created_at": "2025-03-08T16:29:55+00:00",
        "comment_author": "jcollie",
        "comment_body": "I pushed PR #6622 to refactor RepeatablePath and add NonRepeatablePath (because I don't think it makes any sense to have multiple audio files). This way `bell-audio` has the same behavior as other configuration entries with regards to relative directories or expanding `~/`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1901156189",
    "pr_number": 4403,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-01-02T18:36:10+00:00",
    "commented_code": "@\"background-opacity\": f64 = 1.0,\n \n /// A positive value enables blurring of the background when background-opacity\n-/// is less than 1. The value is the blur radius to apply. A value of 20\n+/// is less than 1.\n+///\n+/// On macOS, the value is the blur radius to apply. A value of 20\n /// is reasonable for a good looking blur. Higher values will cause strange\n /// rendering issues as well as performance issues.\n ///\n-/// This is only supported on macOS.\n+/// On KDE Plasma under Wayland, the exact value is _ignored_ \u2014  the reason is\n+/// that KWin, the window compositor powering Plasma, only has one global blur\n+/// setting and does not allow applications to have individual blur settings.\n+///\n+/// To configure KWin's global blur setting, open System Settings and go to\n+/// \"Apps & Windows\" > \"Window Management\" > \"Desktop Effects\" and select the\n+/// \"Blur\" plugin. If disabled, enable it by ticking the checkbox to the left.\n+/// Then click on the \"Configure\" button and there will be two sliders that\n+/// allow you to set background blur and noise strengths for all apps,\n+/// including Ghostty.\n+///\n+/// All other Linux desktop environments are as of now unsupported. Users may\n+/// need to set environment-specific settings and/or install third-party plugins\n+/// in order to support background blur, as there isn't a unified interface for\n+/// doing so.\n @\"background-blur-radius\": u8 = 0,",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1901156189",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 4403,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1901156189",
        "commented_code": "@@ -563,11 +563,27 @@ palette: Palette = .{},\n @\"background-opacity\": f64 = 1.0,\n \n /// A positive value enables blurring of the background when background-opacity\n-/// is less than 1. The value is the blur radius to apply. A value of 20\n+/// is less than 1.\n+///\n+/// On macOS, the value is the blur radius to apply. A value of 20\n /// is reasonable for a good looking blur. Higher values will cause strange\n /// rendering issues as well as performance issues.\n ///\n-/// This is only supported on macOS.\n+/// On KDE Plasma under Wayland, the exact value is _ignored_ \u2014  the reason is\n+/// that KWin, the window compositor powering Plasma, only has one global blur\n+/// setting and does not allow applications to have individual blur settings.\n+///\n+/// To configure KWin's global blur setting, open System Settings and go to\n+/// \"Apps & Windows\" > \"Window Management\" > \"Desktop Effects\" and select the\n+/// \"Blur\" plugin. If disabled, enable it by ticking the checkbox to the left.\n+/// Then click on the \"Configure\" button and there will be two sliders that\n+/// allow you to set background blur and noise strengths for all apps,\n+/// including Ghostty.\n+///\n+/// All other Linux desktop environments are as of now unsupported. Users may\n+/// need to set environment-specific settings and/or install third-party plugins\n+/// in order to support background blur, as there isn't a unified interface for\n+/// doing so.\n @\"background-blur-radius\": u8 = 0,",
        "comment_created_at": "2025-01-02T18:36:10+00:00",
        "comment_author": "jcollie",
        "comment_body": "I think that it would be better to introduce a `background-blur` boolean to enable/disable background blur and then `background-blur-radius` would then only have an effect on macOS. Or make `background-blur-radius` an optional that defaults to `null`, but I think that the explicit boolean would be clearer.",
        "pr_file_module": null
      },
      {
        "comment_id": "1901445202",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 4403,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1901156189",
        "commented_code": "@@ -563,11 +563,27 @@ palette: Palette = .{},\n @\"background-opacity\": f64 = 1.0,\n \n /// A positive value enables blurring of the background when background-opacity\n-/// is less than 1. The value is the blur radius to apply. A value of 20\n+/// is less than 1.\n+///\n+/// On macOS, the value is the blur radius to apply. A value of 20\n /// is reasonable for a good looking blur. Higher values will cause strange\n /// rendering issues as well as performance issues.\n ///\n-/// This is only supported on macOS.\n+/// On KDE Plasma under Wayland, the exact value is _ignored_ \u2014  the reason is\n+/// that KWin, the window compositor powering Plasma, only has one global blur\n+/// setting and does not allow applications to have individual blur settings.\n+///\n+/// To configure KWin's global blur setting, open System Settings and go to\n+/// \"Apps & Windows\" > \"Window Management\" > \"Desktop Effects\" and select the\n+/// \"Blur\" plugin. If disabled, enable it by ticking the checkbox to the left.\n+/// Then click on the \"Configure\" button and there will be two sliders that\n+/// allow you to set background blur and noise strengths for all apps,\n+/// including Ghostty.\n+///\n+/// All other Linux desktop environments are as of now unsupported. Users may\n+/// need to set environment-specific settings and/or install third-party plugins\n+/// in order to support background blur, as there isn't a unified interface for\n+/// doing so.\n @\"background-blur-radius\": u8 = 0,",
        "comment_created_at": "2025-01-03T03:41:18+00:00",
        "comment_author": "mitchellh",
        "comment_body": "I disagree about introducing a new config. macOS uses 0 to disable blur. We should do the same here. The uglier part is that the magnitude of value doesn't matter for Linux.\r\n\r\nI'd propose introduce a new type here `BackgroundBlurRadius` that wraps a `u8` but parses `false` to 0 and `true` to something else (I recommend 20, since that's a reasonable value for macOS). That way this works on both macOS and Linux with \"true\" but also can be set to a specific number to have an effect on macOS and still enable on Linux.\r\n\r\nAnd ultimately, this keeps a single, backwards compatible config. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1901460881",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 4403,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1901156189",
        "commented_code": "@@ -563,11 +563,27 @@ palette: Palette = .{},\n @\"background-opacity\": f64 = 1.0,\n \n /// A positive value enables blurring of the background when background-opacity\n-/// is less than 1. The value is the blur radius to apply. A value of 20\n+/// is less than 1.\n+///\n+/// On macOS, the value is the blur radius to apply. A value of 20\n /// is reasonable for a good looking blur. Higher values will cause strange\n /// rendering issues as well as performance issues.\n ///\n-/// This is only supported on macOS.\n+/// On KDE Plasma under Wayland, the exact value is _ignored_ \u2014  the reason is\n+/// that KWin, the window compositor powering Plasma, only has one global blur\n+/// setting and does not allow applications to have individual blur settings.\n+///\n+/// To configure KWin's global blur setting, open System Settings and go to\n+/// \"Apps & Windows\" > \"Window Management\" > \"Desktop Effects\" and select the\n+/// \"Blur\" plugin. If disabled, enable it by ticking the checkbox to the left.\n+/// Then click on the \"Configure\" button and there will be two sliders that\n+/// allow you to set background blur and noise strengths for all apps,\n+/// including Ghostty.\n+///\n+/// All other Linux desktop environments are as of now unsupported. Users may\n+/// need to set environment-specific settings and/or install third-party plugins\n+/// in order to support background blur, as there isn't a unified interface for\n+/// doing so.\n @\"background-blur-radius\": u8 = 0,",
        "comment_created_at": "2025-01-03T04:39:20+00:00",
        "comment_author": "pluiedev",
        "comment_body": "The config key's name is definitely a bit awkward though... `background-blur-radius = true` doesn't *quite* make sense",
        "pr_file_module": null
      },
      {
        "comment_id": "1901469335",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 4403,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1901156189",
        "commented_code": "@@ -563,11 +563,27 @@ palette: Palette = .{},\n @\"background-opacity\": f64 = 1.0,\n \n /// A positive value enables blurring of the background when background-opacity\n-/// is less than 1. The value is the blur radius to apply. A value of 20\n+/// is less than 1.\n+///\n+/// On macOS, the value is the blur radius to apply. A value of 20\n /// is reasonable for a good looking blur. Higher values will cause strange\n /// rendering issues as well as performance issues.\n ///\n-/// This is only supported on macOS.\n+/// On KDE Plasma under Wayland, the exact value is _ignored_ \u2014  the reason is\n+/// that KWin, the window compositor powering Plasma, only has one global blur\n+/// setting and does not allow applications to have individual blur settings.\n+///\n+/// To configure KWin's global blur setting, open System Settings and go to\n+/// \"Apps & Windows\" > \"Window Management\" > \"Desktop Effects\" and select the\n+/// \"Blur\" plugin. If disabled, enable it by ticking the checkbox to the left.\n+/// Then click on the \"Configure\" button and there will be two sliders that\n+/// allow you to set background blur and noise strengths for all apps,\n+/// including Ghostty.\n+///\n+/// All other Linux desktop environments are as of now unsupported. Users may\n+/// need to set environment-specific settings and/or install third-party plugins\n+/// in order to support background blur, as there isn't a unified interface for\n+/// doing so.\n @\"background-blur-radius\": u8 = 0,",
        "comment_created_at": "2025-01-03T05:03:44+00:00",
        "comment_author": "mitchellh",
        "comment_body": "That's right. Let me think about this a bit more. I'm not ready to accept two configs.",
        "pr_file_module": null
      },
      {
        "comment_id": "1901498222",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 4403,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1901156189",
        "commented_code": "@@ -563,11 +563,27 @@ palette: Palette = .{},\n @\"background-opacity\": f64 = 1.0,\n \n /// A positive value enables blurring of the background when background-opacity\n-/// is less than 1. The value is the blur radius to apply. A value of 20\n+/// is less than 1.\n+///\n+/// On macOS, the value is the blur radius to apply. A value of 20\n /// is reasonable for a good looking blur. Higher values will cause strange\n /// rendering issues as well as performance issues.\n ///\n-/// This is only supported on macOS.\n+/// On KDE Plasma under Wayland, the exact value is _ignored_ \u2014  the reason is\n+/// that KWin, the window compositor powering Plasma, only has one global blur\n+/// setting and does not allow applications to have individual blur settings.\n+///\n+/// To configure KWin's global blur setting, open System Settings and go to\n+/// \"Apps & Windows\" > \"Window Management\" > \"Desktop Effects\" and select the\n+/// \"Blur\" plugin. If disabled, enable it by ticking the checkbox to the left.\n+/// Then click on the \"Configure\" button and there will be two sliders that\n+/// allow you to set background blur and noise strengths for all apps,\n+/// including Ghostty.\n+///\n+/// All other Linux desktop environments are as of now unsupported. Users may\n+/// need to set environment-specific settings and/or install third-party plugins\n+/// in order to support background blur, as there isn't a unified interface for\n+/// doing so.\n @\"background-blur-radius\": u8 = 0,",
        "comment_created_at": "2025-01-03T06:20:59+00:00",
        "comment_author": "pluiedev",
        "comment_body": "To me the best option is to just have one option called `background-blur`: `background-blur = true` and `background-blur = 20` both make sense IMO",
        "pr_file_module": null
      },
      {
        "comment_id": "1903163268",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 4403,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "1901156189",
        "commented_code": "@@ -563,11 +563,27 @@ palette: Palette = .{},\n @\"background-opacity\": f64 = 1.0,\n \n /// A positive value enables blurring of the background when background-opacity\n-/// is less than 1. The value is the blur radius to apply. A value of 20\n+/// is less than 1.\n+///\n+/// On macOS, the value is the blur radius to apply. A value of 20\n /// is reasonable for a good looking blur. Higher values will cause strange\n /// rendering issues as well as performance issues.\n ///\n-/// This is only supported on macOS.\n+/// On KDE Plasma under Wayland, the exact value is _ignored_ \u2014  the reason is\n+/// that KWin, the window compositor powering Plasma, only has one global blur\n+/// setting and does not allow applications to have individual blur settings.\n+///\n+/// To configure KWin's global blur setting, open System Settings and go to\n+/// \"Apps & Windows\" > \"Window Management\" > \"Desktop Effects\" and select the\n+/// \"Blur\" plugin. If disabled, enable it by ticking the checkbox to the left.\n+/// Then click on the \"Configure\" button and there will be two sliders that\n+/// allow you to set background blur and noise strengths for all apps,\n+/// including Ghostty.\n+///\n+/// All other Linux desktop environments are as of now unsupported. Users may\n+/// need to set environment-specific settings and/or install third-party plugins\n+/// in order to support background blur, as there isn't a unified interface for\n+/// doing so.\n @\"background-blur-radius\": u8 = 0,",
        "comment_created_at": "2025-01-04T22:45:38+00:00",
        "comment_author": "mitchellh",
        "comment_body": "I agree with this. I think we need to introduce a mechanism to rename. I can work on that. For the sake of this PR, please override `background-blur-radius`. We'll add the mechanism to rename and do the rename in a follow up PR. I don't want to block this for you.",
        "pr_file_module": null
      }
    ]
  }
]