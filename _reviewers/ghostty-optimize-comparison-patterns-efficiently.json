[
  {
    "discussion_id": "2188588674",
    "pr_number": 7608,
    "pr_file": "src/shell-integration/bash/ghostty.bash",
    "created_at": "2025-07-06T20:37:59+00:00",
    "commented_code": "}\n fi\n \n+# SSH Integration\n+if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-(env|terminfo) ]]; then\n+  ssh() {\n+    builtin local ssh_env ssh_opts ssh_exported_vars\n+    ssh_env=()\n+    ssh_opts=()\n+    ssh_exported_vars=()\n+\n+    # Configure environment variables for remote session\n+    if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-env ]]; then",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2188588674",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/shell-integration/bash/ghostty.bash",
        "discussion_id": "2188588674",
        "commented_code": "@@ -95,6 +95,170 @@ if [[ \"$GHOSTTY_SHELL_FEATURES\" == *\"sudo\"* && -n \"$TERMINFO\" ]]; then\n   }\n fi\n \n+# SSH Integration\n+if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-(env|terminfo) ]]; then\n+  ssh() {\n+    builtin local ssh_env ssh_opts ssh_exported_vars\n+    ssh_env=()\n+    ssh_opts=()\n+    ssh_exported_vars=()\n+\n+    # Configure environment variables for remote session\n+    if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-env ]]; then",
        "comment_created_at": "2025-07-06T20:37:59+00:00",
        "comment_author": "jparise",
        "comment_body": "We use a glob-based test elsewhere. e.g.:\r\n\r\n```suggestion\r\n    if [[ \"$GHOSTTY_SHELL_FEATURES\" == *ssh-env* ]]; then\r\n```\r\n\r\nI think I determined that was faster than the regex-based test for these glob-able strings.",
        "pr_file_module": null
      },
      {
        "comment_id": "2190500917",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/shell-integration/bash/ghostty.bash",
        "discussion_id": "2188588674",
        "commented_code": "@@ -95,6 +95,170 @@ if [[ \"$GHOSTTY_SHELL_FEATURES\" == *\"sudo\"* && -n \"$TERMINFO\" ]]; then\n   }\n fi\n \n+# SSH Integration\n+if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-(env|terminfo) ]]; then\n+  ssh() {\n+    builtin local ssh_env ssh_opts ssh_exported_vars\n+    ssh_env=()\n+    ssh_opts=()\n+    ssh_exported_vars=()\n+\n+    # Configure environment variables for remote session\n+    if [[ \"$GHOSTTY_SHELL_FEATURES\" =~ ssh-env ]]; then",
        "comment_created_at": "2025-07-07T16:10:03+00:00",
        "comment_author": "jasonrayne",
        "comment_body": "Makes sense! Updated all these checks to use glob patterns instead of regex in https://github.com/ghostty-org/ghostty/pull/7608/commits/08db61e27e875b1a211867523d72ca414224656b",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2106283462",
    "pr_number": 7442,
    "pr_file": "src/apprt/gtk/App.zig",
    "created_at": "2025-05-25T19:12:36+00:00",
    "commented_code": "// can develop Ghostty in Ghostty.\n     const app_id: [:0]const u8 = app_id: {\n         if (config.class) |class| {\n-            if (isValidAppId(class)) {\n+            if (gio.Application.idIsValid(class) == 1) {",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2106283462",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7442,
        "pr_file": "src/apprt/gtk/App.zig",
        "discussion_id": "2106283462",
        "commented_code": "@@ -288,7 +288,7 @@ pub fn init(core_app: *CoreApp, opts: Options) !App {\n     // can develop Ghostty in Ghostty.\n     const app_id: [:0]const u8 = app_id: {\n         if (config.class) |class| {\n-            if (isValidAppId(class)) {\n+            if (gio.Application.idIsValid(class) == 1) {",
        "comment_created_at": "2025-05-25T19:12:36+00:00",
        "comment_author": "jcollie",
        "comment_body": "My preference when dealing with C 'booleans' is to compare to `!= 0` as any non-zero value is considered 'true'.",
        "pr_file_module": null
      },
      {
        "comment_id": "2106284898",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7442,
        "pr_file": "src/apprt/gtk/App.zig",
        "discussion_id": "2106283462",
        "commented_code": "@@ -288,7 +288,7 @@ pub fn init(core_app: *CoreApp, opts: Options) !App {\n     // can develop Ghostty in Ghostty.\n     const app_id: [:0]const u8 = app_id: {\n         if (config.class) |class| {\n-            if (isValidAppId(class)) {\n+            if (gio.Application.idIsValid(class) == 1) {",
        "comment_created_at": "2025-05-25T19:20:00+00:00",
        "comment_author": "pluiedev",
        "comment_body": "Doing == 1 is also just strictly wrong. gbooleans are defined so that any non-zero value is considered to be true, and often times GTK authors would exploit that fact and return a positive numeric value if it's easier for them to do so.",
        "pr_file_module": null
      },
      {
        "comment_id": "2106297673",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7442,
        "pr_file": "src/apprt/gtk/App.zig",
        "discussion_id": "2106283462",
        "commented_code": "@@ -288,7 +288,7 @@ pub fn init(core_app: *CoreApp, opts: Options) !App {\n     // can develop Ghostty in Ghostty.\n     const app_id: [:0]const u8 = app_id: {\n         if (config.class) |class| {\n-            if (isValidAppId(class)) {\n+            if (gio.Application.idIsValid(class) == 1) {",
        "comment_created_at": "2025-05-25T20:20:40+00:00",
        "comment_author": "alex-huff",
        "comment_body": "Thanks",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1976554350",
    "pr_number": 5086,
    "pr_file": "src/apprt/gtk/Window.zig",
    "created_at": "2025-03-02T06:51:28+00:00",
    "commented_code": "};\n }\n \n+/// Toggle the background opacity for this window.\n+pub fn toggleBackgroundOpacity(self: *Window) !f64 {\n+    if (self.app.config.@\"background-opacity\" >= 1) return self.app.config.@\"background-opacity\";\n+\n+    self.config.background_opacity = if (self.config.background_opacity == 1.0) self.app.config.@\"background-opacity\" else 1.0;",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "1976554350",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 5086,
        "pr_file": "src/apprt/gtk/Window.zig",
        "discussion_id": "1976554350",
        "commented_code": "@@ -661,6 +661,16 @@ pub fn toggleWindowDecorations(self: *Window) void {\n     };\n }\n \n+/// Toggle the background opacity for this window.\n+pub fn toggleBackgroundOpacity(self: *Window) !f64 {\n+    if (self.app.config.@\"background-opacity\" >= 1) return self.app.config.@\"background-opacity\";\n+\n+    self.config.background_opacity = if (self.config.background_opacity == 1.0) self.app.config.@\"background-opacity\" else 1.0;",
        "comment_created_at": "2025-03-02T06:51:28+00:00",
        "comment_author": "pluiedev",
        "comment_body": "Doing == on a float isn't a good idea. Use the `a - b < epsilon` method.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2001512191",
    "pr_number": 6797,
    "pr_file": "src/apprt/gtk/gtk_version.zig",
    "created_at": "2025-03-18T16:51:42+00:00",
    "commented_code": ") bool {\n     // We use the functions instead of the constants such as c.GTK_MINOR_VERSION\n     // because the function gets the actual runtime version.\n-    if (gtk.getMajorVersion() >= major) {\n-        if (gtk.getMajorVersion() > major) return true;\n-        if (gtk.getMinorVersion() >= minor) {\n-            if (gtk.getMinorVersion() > minor) return true;\n-            return gtk.getMicroVersion() >= micro;\n-        }\n-    }\n-\n-    return false;\n+    const runtime_version = getRuntimeVersion();\n+    return !(runtime_version.order(.{\n+        .major = major,\n+        .minor = minor,\n+        .patch = micro,\n+    }) == .lt);",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2001512191",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 6797,
        "pr_file": "src/apprt/gtk/gtk_version.zig",
        "discussion_id": "2001512191",
        "commented_code": "@@ -75,15 +79,12 @@ pub inline fn runtimeAtLeast(\n ) bool {\n     // We use the functions instead of the constants such as c.GTK_MINOR_VERSION\n     // because the function gets the actual runtime version.\n-    if (gtk.getMajorVersion() >= major) {\n-        if (gtk.getMajorVersion() > major) return true;\n-        if (gtk.getMinorVersion() >= minor) {\n-            if (gtk.getMinorVersion() > minor) return true;\n-            return gtk.getMicroVersion() >= micro;\n-        }\n-    }\n-\n-    return false;\n+    const runtime_version = getRuntimeVersion();\n+    return !(runtime_version.order(.{\n+        .major = major,\n+        .minor = minor,\n+        .patch = micro,\n+    }) == .lt);",
        "comment_created_at": "2025-03-18T16:51:42+00:00",
        "comment_author": "pluiedev",
        "comment_body": "```suggestion\n    const runtime_version = getRuntimeVersion();\n    return runtime_version.order(.{\n        .major = major,\n        .minor = minor,\n        .patch = micro,\n    }) != .lt;\n```\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2001598191",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 6797,
        "pr_file": "src/apprt/gtk/gtk_version.zig",
        "discussion_id": "2001512191",
        "commented_code": "@@ -75,15 +79,12 @@ pub inline fn runtimeAtLeast(\n ) bool {\n     // We use the functions instead of the constants such as c.GTK_MINOR_VERSION\n     // because the function gets the actual runtime version.\n-    if (gtk.getMajorVersion() >= major) {\n-        if (gtk.getMajorVersion() > major) return true;\n-        if (gtk.getMinorVersion() >= minor) {\n-            if (gtk.getMinorVersion() > minor) return true;\n-            return gtk.getMicroVersion() >= micro;\n-        }\n-    }\n-\n-    return false;\n+    const runtime_version = getRuntimeVersion();\n+    return !(runtime_version.order(.{\n+        .major = major,\n+        .minor = minor,\n+        .patch = micro,\n+    }) == .lt);",
        "comment_created_at": "2025-03-18T17:31:29+00:00",
        "comment_author": "jcollie",
        "comment_body": "Fixed.",
        "pr_file_module": null
      }
    ]
  }
]