[
  {
    "discussion_id": "2151156227",
    "pr_number": 7608,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-06-17T01:39:59+00:00",
    "commented_code": "/// Example: `cursor`, `no-cursor`, `sudo`, `no-sudo`, `title`, `no-title`\n @\"shell-integration-features\": ShellIntegrationFeatures = .{},\n \n+/// SSH integration configuration for shell integration.\n+///\n+/// When enabled (any value other than `off`), Ghostty replaces the `ssh` command\n+/// with a shell function to provide enhanced terminal compatibility and feature\n+/// propagation when connecting to remote hosts. Users can verify this by running\n+/// `type ssh` which will show \"ssh is a shell function\" instead of the binary path.\n+///\n+/// Allowable values are:\n+///\n+///   * `off` - No SSH integration, use standard ssh binary\n+///\n+///   * `term-only` - Automatically converts TERM from `xterm-ghostty` to `xterm-256color`\n+///     when connecting to remote hosts. This prevents \"unknown terminal type\" errors\n+///     on systems that lack Ghostty's terminfo entry, but sacrifices Ghostty-specific\n+///     terminal features like enhanced cursor reporting and shell integration markers.\n+///     See: https://ghostty.org/docs/help/terminfo",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2151156227",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "2151156227",
        "commented_code": "@@ -1927,6 +1927,36 @@ keybind: Keybinds = .{},\n /// Example: `cursor`, `no-cursor`, `sudo`, `no-sudo`, `title`, `no-title`\n @\"shell-integration-features\": ShellIntegrationFeatures = .{},\n \n+/// SSH integration configuration for shell integration.\n+///\n+/// When enabled (any value other than `off`), Ghostty replaces the `ssh` command\n+/// with a shell function to provide enhanced terminal compatibility and feature\n+/// propagation when connecting to remote hosts. Users can verify this by running\n+/// `type ssh` which will show \"ssh is a shell function\" instead of the binary path.\n+///\n+/// Allowable values are:\n+///\n+///   * `off` - No SSH integration, use standard ssh binary\n+///\n+///   * `term-only` - Automatically converts TERM from `xterm-ghostty` to `xterm-256color`\n+///     when connecting to remote hosts. This prevents \"unknown terminal type\" errors\n+///     on systems that lack Ghostty's terminfo entry, but sacrifices Ghostty-specific\n+///     terminal features like enhanced cursor reporting and shell integration markers.\n+///     See: https://ghostty.org/docs/help/terminfo",
        "comment_created_at": "2025-06-17T01:39:59+00:00",
        "comment_author": "00-kat",
        "comment_body": "Is this link useful?  The majority of that page is just *how* to do the thing this automates, and the remaining parts are already summarised in this paragraph itself.",
        "pr_file_module": null
      },
      {
        "comment_id": "2153239087",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "2151156227",
        "commented_code": "@@ -1927,6 +1927,36 @@ keybind: Keybinds = .{},\n /// Example: `cursor`, `no-cursor`, `sudo`, `no-sudo`, `title`, `no-title`\n @\"shell-integration-features\": ShellIntegrationFeatures = .{},\n \n+/// SSH integration configuration for shell integration.\n+///\n+/// When enabled (any value other than `off`), Ghostty replaces the `ssh` command\n+/// with a shell function to provide enhanced terminal compatibility and feature\n+/// propagation when connecting to remote hosts. Users can verify this by running\n+/// `type ssh` which will show \"ssh is a shell function\" instead of the binary path.\n+///\n+/// Allowable values are:\n+///\n+///   * `off` - No SSH integration, use standard ssh binary\n+///\n+///   * `term-only` - Automatically converts TERM from `xterm-ghostty` to `xterm-256color`\n+///     when connecting to remote hosts. This prevents \"unknown terminal type\" errors\n+///     on systems that lack Ghostty's terminfo entry, but sacrifices Ghostty-specific\n+///     terminal features like enhanced cursor reporting and shell integration markers.\n+///     See: https://ghostty.org/docs/help/terminfo",
        "comment_created_at": "2025-06-17T21:58:19+00:00",
        "comment_author": "jasonrayne",
        "comment_body": "I added the link based on feedback from [pluiedev](https://github.com/ghostty-org/ghostty/pull/7608#discussion_r2150945405). It might be useful for some people, but if it seems too redundant I've got no issue with removing it.",
        "pr_file_module": null
      },
      {
        "comment_id": "2153359967",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "2151156227",
        "commented_code": "@@ -1927,6 +1927,36 @@ keybind: Keybinds = .{},\n /// Example: `cursor`, `no-cursor`, `sudo`, `no-sudo`, `title`, `no-title`\n @\"shell-integration-features\": ShellIntegrationFeatures = .{},\n \n+/// SSH integration configuration for shell integration.\n+///\n+/// When enabled (any value other than `off`), Ghostty replaces the `ssh` command\n+/// with a shell function to provide enhanced terminal compatibility and feature\n+/// propagation when connecting to remote hosts. Users can verify this by running\n+/// `type ssh` which will show \"ssh is a shell function\" instead of the binary path.\n+///\n+/// Allowable values are:\n+///\n+///   * `off` - No SSH integration, use standard ssh binary\n+///\n+///   * `term-only` - Automatically converts TERM from `xterm-ghostty` to `xterm-256color`\n+///     when connecting to remote hosts. This prevents \"unknown terminal type\" errors\n+///     on systems that lack Ghostty's terminfo entry, but sacrifices Ghostty-specific\n+///     terminal features like enhanced cursor reporting and shell integration markers.\n+///     See: https://ghostty.org/docs/help/terminfo",
        "comment_created_at": "2025-06-18T00:01:12+00:00",
        "comment_author": "00-kat",
        "comment_body": "@pluiedev what's your opinion on this?",
        "pr_file_module": null
      },
      {
        "comment_id": "2155568699",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "2151156227",
        "commented_code": "@@ -1927,6 +1927,36 @@ keybind: Keybinds = .{},\n /// Example: `cursor`, `no-cursor`, `sudo`, `no-sudo`, `title`, `no-title`\n @\"shell-integration-features\": ShellIntegrationFeatures = .{},\n \n+/// SSH integration configuration for shell integration.\n+///\n+/// When enabled (any value other than `off`), Ghostty replaces the `ssh` command\n+/// with a shell function to provide enhanced terminal compatibility and feature\n+/// propagation when connecting to remote hosts. Users can verify this by running\n+/// `type ssh` which will show \"ssh is a shell function\" instead of the binary path.\n+///\n+/// Allowable values are:\n+///\n+///   * `off` - No SSH integration, use standard ssh binary\n+///\n+///   * `term-only` - Automatically converts TERM from `xterm-ghostty` to `xterm-256color`\n+///     when connecting to remote hosts. This prevents \"unknown terminal type\" errors\n+///     on systems that lack Ghostty's terminfo entry, but sacrifices Ghostty-specific\n+///     terminal features like enhanced cursor reporting and shell integration markers.\n+///     See: https://ghostty.org/docs/help/terminfo",
        "comment_created_at": "2025-06-18T21:54:12+00:00",
        "comment_author": "pluiedev",
        "comment_body": "I thought the page had included more information on what Terminfo is... hmm. I still think the link is valuable since it goes into more length about e.g. manual terminfo installation. It definitely needs to be rephrased more naturally though. There's also some stylistic things such as formatting and using imperative sentences for the description of each field, but I'll have to formalize them some day first.\r\n\r\nSomething like this would be better. For user-facing items with a complex topic I usually opt to go with a short, terse summary, a tangible problem statement that is *visible* to the end user, a more technical explanation as to how it works, and advice as to when the user would want this. It's very important to consider the user's perspective on all of this.\r\n\r\n```zig\r\n///   * `term-only`\r\n///\r\n///     Automatically set the `TERM` environment variable to `xterm-256color` when\r\n///     connecting to remote hosts using SSH.\r\n///\r\n///     By default, Ghostty identifies itself with the terminal type `xterm-ghostty`,\r\n///     which could cause problems for remote machines where Ghostty's _terminfo files_\r\n///     are not installed. Many programs rely on terminfo files to know what the\r\n///     terminal is capable of, and may crash with \"unknown terminal type\" errors when\r\n///     the terminfo files are absent or exhibit strange behavior (e.g. not being able\r\n///     to clear the screen with a shell keybind, on-screen artifacts, etc.).\r\n///\r\n///     When `term-only` is set, for remote connections Ghostty would instead identify\r\n///     itself as `xterm-256color`, which is a compatibility mode understood in most\r\n///     systems. This allows Ghostty to be used on any remote machine, although many\r\n///     advanced features would become unavailable. A detailed list of supported and\r\n///     unsupported features in `xterm-256color` mode can be found on our\r\n///     [Terminfo FAQ](https://ghostty.org/docs/help/terminfo) page.\r\n///\r\n///     This option is best used when you need to connect to a wide variety of remote\r\n///     devices, some of which you might not have access to. If you only need to\r\n///     connect to a few hosts, consider allowing Ghostty to automatically upload\r\n///     Terminfo files or installing them yourself for a more feature-rich experience.\r\n```\r\n\r\n(There isn't a feature list on the terminfo page right now, but we should totally add one.)\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2155585837",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "2151156227",
        "commented_code": "@@ -1927,6 +1927,36 @@ keybind: Keybinds = .{},\n /// Example: `cursor`, `no-cursor`, `sudo`, `no-sudo`, `title`, `no-title`\n @\"shell-integration-features\": ShellIntegrationFeatures = .{},\n \n+/// SSH integration configuration for shell integration.\n+///\n+/// When enabled (any value other than `off`), Ghostty replaces the `ssh` command\n+/// with a shell function to provide enhanced terminal compatibility and feature\n+/// propagation when connecting to remote hosts. Users can verify this by running\n+/// `type ssh` which will show \"ssh is a shell function\" instead of the binary path.\n+///\n+/// Allowable values are:\n+///\n+///   * `off` - No SSH integration, use standard ssh binary\n+///\n+///   * `term-only` - Automatically converts TERM from `xterm-ghostty` to `xterm-256color`\n+///     when connecting to remote hosts. This prevents \"unknown terminal type\" errors\n+///     on systems that lack Ghostty's terminfo entry, but sacrifices Ghostty-specific\n+///     terminal features like enhanced cursor reporting and shell integration markers.\n+///     See: https://ghostty.org/docs/help/terminfo",
        "comment_created_at": "2025-06-18T22:08:53+00:00",
        "comment_author": "jasonrayne",
        "comment_body": "Yeah, that was kind of my thought as well. Doesn't really hurt anything to leave it in for now, I'll go ahead and mark this as resolved. \ud83d\ude80 ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2167606189",
    "pr_number": 7608,
    "pr_file": "src/cli/action.zig",
    "created_at": "2025-06-25T20:48:29+00:00",
    "commented_code": "/// List keybind actions\n     @\"list-actions\",\n \n+    /// List hosts with Ghostty SSH terminfo installed",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2167606189",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/cli/action.zig",
        "discussion_id": "2167606189",
        "commented_code": "@@ -41,6 +43,12 @@ pub const Action = enum {\n     /// List keybind actions\n     @\"list-actions\",\n \n+    /// List hosts with Ghostty SSH terminfo installed",
        "comment_created_at": "2025-06-25T20:48:29+00:00",
        "comment_author": "mitchellh",
        "comment_body": "I think both this and the clear command need a more detailed synopsis. This makes it sound like it'll magically list hosts but really it's shell-integration specific. Perhaps something more like \"List hosts cached for SSH shell integration\"",
        "pr_file_module": null
      },
      {
        "comment_id": "2167780894",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7608,
        "pr_file": "src/cli/action.zig",
        "discussion_id": "2167606189",
        "commented_code": "@@ -41,6 +43,12 @@ pub const Action = enum {\n     /// List keybind actions\n     @\"list-actions\",\n \n+    /// List hosts with Ghostty SSH terminfo installed",
        "comment_created_at": "2025-06-25T23:00:14+00:00",
        "comment_author": "jasonrayne",
        "comment_body": "Fixed in https://github.com/ghostty-org/ghostty/pull/7608/commits/0ccb7cf3538e189ea25a518c48c721eee243243a and https://github.com/ghostty-org/ghostty/pull/7608/commits/21d95c42c6dc7c94347de91aacae5dece67fb202",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2053248579",
    "pr_number": 7154,
    "pr_file": "src/apprt/gtk/winproto/wayland.zig",
    "created_at": "2025-04-22T02:52:08+00:00",
    "commented_code": "return null;\n     }\n \n-    pub fn supportsQuickTerminal(_: App) bool {\n-        if (!gtk4_layer_shell.isSupported()) {\n+    pub fn supportsQuickTerminal(self: App) bool {\n+        if (!gtk4_layer_shell.isProtocolSupported()) {\n             log.warn(\"your compositor does not support the wlr-layer-shell protocol; disabling quick terminal\", .{});\n             return false;\n         }\n+        // GTK4 >= 4.16.0 uses xdg_wm_dialog protocol if available which breaks gtk_layer_shell < 1.0.4\n+        // See: https://github.com/wmww/gtk4-layer-shell/issues/50\n+        if (self.context.xdg_wm_dialog) |_| {\n+            if (gtk_version.atLeast(4, 16, 0) and !gtk_layer_version.atLeast(1, 0, 4)) {\n+                log.warn(\"Your gtk4-layer-shell version is too old for your compositor and gtk4 version; disabling quick terminal\", .{});",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2053248579",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7154,
        "pr_file": "src/apprt/gtk/winproto/wayland.zig",
        "discussion_id": "2053248579",
        "commented_code": "@@ -97,11 +102,19 @@ pub const App = struct {\n         return null;\n     }\n \n-    pub fn supportsQuickTerminal(_: App) bool {\n-        if (!gtk4_layer_shell.isSupported()) {\n+    pub fn supportsQuickTerminal(self: App) bool {\n+        if (!gtk4_layer_shell.isProtocolSupported()) {\n             log.warn(\"your compositor does not support the wlr-layer-shell protocol; disabling quick terminal\", .{});\n             return false;\n         }\n+        // GTK4 >= 4.16.0 uses xdg_wm_dialog protocol if available which breaks gtk_layer_shell < 1.0.4\n+        // See: https://github.com/wmww/gtk4-layer-shell/issues/50\n+        if (self.context.xdg_wm_dialog) |_| {\n+            if (gtk_version.atLeast(4, 16, 0) and !gtk_layer_version.atLeast(1, 0, 4)) {\n+                log.warn(\"Your gtk4-layer-shell version is too old for your compositor and gtk4 version; disabling quick terminal\", .{});",
        "comment_created_at": "2025-04-22T02:52:08+00:00",
        "comment_author": "pluiedev",
        "comment_body": "This is way too vague. Something more akin to \"your distro's gtk4-layer-shell version is defective; update to 1.0.4 or later (and contact distro maintainers)\" would work better.",
        "pr_file_module": null
      },
      {
        "comment_id": "2055321043",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7154,
        "pr_file": "src/apprt/gtk/winproto/wayland.zig",
        "discussion_id": "2053248579",
        "commented_code": "@@ -97,11 +102,19 @@ pub const App = struct {\n         return null;\n     }\n \n-    pub fn supportsQuickTerminal(_: App) bool {\n-        if (!gtk4_layer_shell.isSupported()) {\n+    pub fn supportsQuickTerminal(self: App) bool {\n+        if (!gtk4_layer_shell.isProtocolSupported()) {\n             log.warn(\"your compositor does not support the wlr-layer-shell protocol; disabling quick terminal\", .{});\n             return false;\n         }\n+        // GTK4 >= 4.16.0 uses xdg_wm_dialog protocol if available which breaks gtk_layer_shell < 1.0.4\n+        // See: https://github.com/wmww/gtk4-layer-shell/issues/50\n+        if (self.context.xdg_wm_dialog) |_| {\n+            if (gtk_version.atLeast(4, 16, 0) and !gtk_layer_version.atLeast(1, 0, 4)) {\n+                log.warn(\"Your gtk4-layer-shell version is too old for your compositor and gtk4 version; disabling quick terminal\", .{});",
        "comment_created_at": "2025-04-23T06:14:54+00:00",
        "comment_author": "AnthonyZhOon",
        "comment_body": "Yes, providing the version they should upgrade to and who to contact was missing.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2059789202",
    "pr_number": 7190,
    "pr_file": "src/config/Config.zig",
    "created_at": "2025-04-25T08:22:26+00:00",
    "commented_code": "/// Custom CSS files to be loaded.\n ///\n+/// GTK CSS documentation can be found at the following links:\n+///\n+///   * <https://docs.gtk.org/gtk4/css-overview.html> - An overview of GTK CSS.\n+///   * <https://docs.gtk.org/gtk4/css-properties.html> - A comprehensive list\n+///     of supported CSS properties.\n+///\n+/// Running Ghostty from the command-line can aid in styling as CSS errors and\n+/// warnings are only printed to Ghostty's standard error. Launching Ghostty\n+/// with `env GTK_DEBUG=interactive ghostty` also opens a GTK inspector which\n+/// can be tremendously helpful when determining what class each element is\n+/// assigned, for inspecting the state of the UI, and to prototype CSS\n+/// modifications.",
    "repo_full_name": "ghostty-org/ghostty",
    "discussion_comments": [
      {
        "comment_id": "2059789202",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7190,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "2059789202",
        "commented_code": "@@ -2276,6 +2276,19 @@ keybind: Keybinds = .{},\n \n /// Custom CSS files to be loaded.\n ///\n+/// GTK CSS documentation can be found at the following links:\n+///\n+///   * <https://docs.gtk.org/gtk4/css-overview.html> - An overview of GTK CSS.\n+///   * <https://docs.gtk.org/gtk4/css-properties.html> - A comprehensive list\n+///     of supported CSS properties.\n+///\n+/// Running Ghostty from the command-line can aid in styling as CSS errors and\n+/// warnings are only printed to Ghostty's standard error. Launching Ghostty\n+/// with `env GTK_DEBUG=interactive ghostty` also opens a GTK inspector which\n+/// can be tremendously helpful when determining what class each element is\n+/// assigned, for inspecting the state of the UI, and to prototype CSS\n+/// modifications.",
        "comment_created_at": "2025-04-25T08:22:26+00:00",
        "comment_author": "pluiedev",
        "comment_body": "This is really quite awkward to read. I'd suggest changing it to more along the lines of:\n\n> You can tweak your custom CSS and see its effects in real time using the GTK inspector, which can be accessed by launching Ghostty via `env GTK_DEBUG=interactive ghostty`. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2059864736",
        "repo_full_name": "ghostty-org/ghostty",
        "pr_number": 7190,
        "pr_file": "src/config/Config.zig",
        "discussion_id": "2059789202",
        "commented_code": "@@ -2276,6 +2276,19 @@ keybind: Keybinds = .{},\n \n /// Custom CSS files to be loaded.\n ///\n+/// GTK CSS documentation can be found at the following links:\n+///\n+///   * <https://docs.gtk.org/gtk4/css-overview.html> - An overview of GTK CSS.\n+///   * <https://docs.gtk.org/gtk4/css-properties.html> - A comprehensive list\n+///     of supported CSS properties.\n+///\n+/// Running Ghostty from the command-line can aid in styling as CSS errors and\n+/// warnings are only printed to Ghostty's standard error. Launching Ghostty\n+/// with `env GTK_DEBUG=interactive ghostty` also opens a GTK inspector which\n+/// can be tremendously helpful when determining what class each element is\n+/// assigned, for inspecting the state of the UI, and to prototype CSS\n+/// modifications.",
        "comment_created_at": "2025-04-25T09:10:34+00:00",
        "comment_author": "00-kat",
        "comment_body": "I've [rewritten that paragraph] to be more comprehensible now.\r\n\r\n[rewritten that paragraph]: https://github.com/ghostty-org/ghostty/compare/ddea282ba9b92d43434d607cbe60f44674fe3266..bfacbef894ab0612c1ba2edd98045047700f2632",
        "pr_file_module": null
      }
    ]
  }
]