[
  {
    "discussion_id": "1110460826",
    "pr_number": 3503,
    "pr_file": "gin.go",
    "created_at": "2023-02-18T00:22:48+00:00",
    "commented_code": "req := c.Request\n \tp := req.URL.Path\n \tif prefix := path.Clean(c.Request.Header.Get(\"X-Forwarded-Prefix\")); prefix != \".\" {\n-\t\tprefix = url.QueryEscape(prefix)\n-\t\tprefix = strings.ReplaceAll(prefix, \"%2F\", \"/\")\n+\t\treg := regexp.MustCompile(\"[^a-zA-Z0-9/-]+\")",
    "repo_full_name": "gin-gonic/gin",
    "discussion_comments": [
      {
        "comment_id": "1110460826",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 3503,
        "pr_file": "gin.go",
        "discussion_id": "1110460826",
        "commented_code": "@@ -669,8 +669,9 @@ func redirectTrailingSlash(c *Context) {\n \treq := c.Request\n \tp := req.URL.Path\n \tif prefix := path.Clean(c.Request.Header.Get(\"X-Forwarded-Prefix\")); prefix != \".\" {\n-\t\tprefix = url.QueryEscape(prefix)\n-\t\tprefix = strings.ReplaceAll(prefix, \"%2F\", \"/\")\n+\t\treg := regexp.MustCompile(\"[^a-zA-Z0-9/-]+\")",
        "comment_created_at": "2023-02-18T00:22:48+00:00",
        "comment_author": "appleboy",
        "comment_body": "move to the top for performance issues. only compile once.",
        "pr_file_module": null
      },
      {
        "comment_id": "1110525702",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 3503,
        "pr_file": "gin.go",
        "discussion_id": "1110460826",
        "commented_code": "@@ -669,8 +669,9 @@ func redirectTrailingSlash(c *Context) {\n \treq := c.Request\n \tp := req.URL.Path\n \tif prefix := path.Clean(c.Request.Header.Get(\"X-Forwarded-Prefix\")); prefix != \".\" {\n-\t\tprefix = url.QueryEscape(prefix)\n-\t\tprefix = strings.ReplaceAll(prefix, \"%2F\", \"/\")\n+\t\treg := regexp.MustCompile(\"[^a-zA-Z0-9/-]+\")",
        "comment_created_at": "2023-02-18T02:43:31+00:00",
        "comment_author": "t0rchwo0d",
        "comment_body": "Hi, @appleboy !\r\nThank you for your review.\r\n\r\nOh, I'm sorry.\r\nI lacked explanation, This is not performance issues.\r\n(Please let me know if I misunderstood.)\r\n\r\nThe previous PR was modified because there was a bypassable problem as follows.\r\n- Path modulation is still possible because '..' remains and '../../' can still be requested.\r\n- If only '..' is removed here, Redirect is possible through '//'.\r\n\r\nPlease refer to the results below for the second case.\r\n```bash\r\ncurl -L --path-as-is -i \"http://192.168.1.19:8080/bug/\" -H \"x-forwarded-prefix: ../../gin-gonic.com\"\r\nHTTP/1.1 301 Moved Permanently\r\nContent-Type: text/html; charset=utf-8\r\nLocation: //gin-gonic.com//bug\r\nDate: Sat, 18 Feb 2023 02:37:22 GMT\r\nContent-Length: 55\r\n\r\nHTTP/1.1 301 Moved Permanently\r\nConnection: keep-alive\r\nContent-Length: 162\r\nServer: GitHub.com\r\nContent-Type: text/html\r\nLocation: https://gin-gonic.com//bug\r\nX-GitHub-Request-Id: A53E:7A87:35ADF3:3CDC2D:63F039B8\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1110526405",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 3503,
        "pr_file": "gin.go",
        "discussion_id": "1110460826",
        "commented_code": "@@ -669,8 +669,9 @@ func redirectTrailingSlash(c *Context) {\n \treq := c.Request\n \tp := req.URL.Path\n \tif prefix := path.Clean(c.Request.Header.Get(\"X-Forwarded-Prefix\")); prefix != \".\" {\n-\t\tprefix = url.QueryEscape(prefix)\n-\t\tprefix = strings.ReplaceAll(prefix, \"%2F\", \"/\")\n+\t\treg := regexp.MustCompile(\"[^a-zA-Z0-9/-]+\")",
        "comment_created_at": "2023-02-18T02:45:00+00:00",
        "comment_author": "t0rchwo0d",
        "comment_body": "Aoso, I fixed allocation problem of `prefix`.\r\n\r\nhttps://github.com/gin-gonic/gin/commit/6b8cd84e5eed9f414d66f2c267b921bef5ff4f1d#diff-447bee2da23875fead662441fef4b89e1918d4b5f01d1aa3f5d6cdc0cc51a4acR672",
        "pr_file_module": null
      },
      {
        "comment_id": "1110653825",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 3503,
        "pr_file": "gin.go",
        "discussion_id": "1110460826",
        "commented_code": "@@ -669,8 +669,9 @@ func redirectTrailingSlash(c *Context) {\n \treq := c.Request\n \tp := req.URL.Path\n \tif prefix := path.Clean(c.Request.Header.Get(\"X-Forwarded-Prefix\")); prefix != \".\" {\n-\t\tprefix = url.QueryEscape(prefix)\n-\t\tprefix = strings.ReplaceAll(prefix, \"%2F\", \"/\")\n+\t\treg := regexp.MustCompile(\"[^a-zA-Z0-9/-]+\")",
        "comment_created_at": "2023-02-18T05:42:07+00:00",
        "comment_author": "appleboy",
        "comment_body": "Only initialize once if moving to the top of this file.\r\n\r\n```go\r\nvar reg = regexp.MustCompile(\"[^a-zA-Z0-9/-]+\")\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1110744463",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 3503,
        "pr_file": "gin.go",
        "discussion_id": "1110460826",
        "commented_code": "@@ -669,8 +669,9 @@ func redirectTrailingSlash(c *Context) {\n \treq := c.Request\n \tp := req.URL.Path\n \tif prefix := path.Clean(c.Request.Header.Get(\"X-Forwarded-Prefix\")); prefix != \".\" {\n-\t\tprefix = url.QueryEscape(prefix)\n-\t\tprefix = strings.ReplaceAll(prefix, \"%2F\", \"/\")\n+\t\treg := regexp.MustCompile(\"[^a-zA-Z0-9/-]+\")",
        "comment_created_at": "2023-02-18T06:50:22+00:00",
        "comment_author": "t0rchwo0d",
        "comment_body": "I modified it.",
        "pr_file_module": null
      }
    ]
  }
]