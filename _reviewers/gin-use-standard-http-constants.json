[
  {
    "discussion_id": "208074136",
    "pr_number": 1460,
    "pr_file": "response_writer_test.go",
    "created_at": "2018-08-07T01:26:29+00:00",
    "commented_code": "w.Flush()\n }\n+\n+func TestResponseWriterFlush(t *testing.T) {\n+\ttestServer := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n+\t\twriter := &responseWriter{}\n+\t\twriter.reset(w)\n+\n+\t\twriter.WriteHeader(500)",
    "repo_full_name": "gin-gonic/gin",
    "discussion_comments": [
      {
        "comment_id": "208074136",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 1460,
        "pr_file": "response_writer_test.go",
        "discussion_id": "208074136",
        "commented_code": "@@ -113,3 +113,19 @@ func TestResponseWriterHijack(t *testing.T) {\n \n \tw.Flush()\n }\n+\n+func TestResponseWriterFlush(t *testing.T) {\n+\ttestServer := httptest.NewServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n+\t\twriter := &responseWriter{}\n+\t\twriter.reset(w)\n+\n+\t\twriter.WriteHeader(500)",
        "comment_created_at": "2018-08-07T01:26:29+00:00",
        "comment_author": "thinkerou",
        "comment_body": "I like `http.StatusInternalServerError`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "199349450",
    "pr_number": 1358,
    "pr_file": "context_test.go",
    "created_at": "2018-07-01T13:22:27+00:00",
    "commented_code": "assert.Equal(t, \"application/json; charset=utf-8\", w.HeaderMap.Get(\"Content-Type\"))\n }\n \n+func TestContextRenderNoContentAsciiJSON(t *testing.T) {\n+\tw := httptest.NewRecorder()\n+\tc, _ := CreateTestContext(w)\n+\n+\tc.AsciiJSON(204, []string{\"lang\", \"Go语言\"})",
    "repo_full_name": "gin-gonic/gin",
    "discussion_comments": [
      {
        "comment_id": "199349450",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 1358,
        "pr_file": "context_test.go",
        "discussion_id": "199349450",
        "commented_code": "@@ -686,6 +686,17 @@ func TestContextRenderNoContentSecureJSON(t *testing.T) {\n \tassert.Equal(t, \"application/json; charset=utf-8\", w.HeaderMap.Get(\"Content-Type\"))\n }\n \n+func TestContextRenderNoContentAsciiJSON(t *testing.T) {\n+\tw := httptest.NewRecorder()\n+\tc, _ := CreateTestContext(w)\n+\n+\tc.AsciiJSON(204, []string{\"lang\", \"Go语言\"})",
        "comment_created_at": "2018-07-01T13:22:27+00:00",
        "comment_author": "appleboy",
        "comment_body": "Please change `204` to `http` status code in HTTP package for maintainable.",
        "pr_file_module": null
      },
      {
        "comment_id": "199353454",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 1358,
        "pr_file": "context_test.go",
        "discussion_id": "199349450",
        "commented_code": "@@ -686,6 +686,17 @@ func TestContextRenderNoContentSecureJSON(t *testing.T) {\n \tassert.Equal(t, \"application/json; charset=utf-8\", w.HeaderMap.Get(\"Content-Type\"))\n }\n \n+func TestContextRenderNoContentAsciiJSON(t *testing.T) {\n+\tw := httptest.NewRecorder()\n+\tc, _ := CreateTestContext(w)\n+\n+\tc.AsciiJSON(204, []string{\"lang\", \"Go语言\"})",
        "comment_created_at": "2018-07-01T15:50:01+00:00",
        "comment_author": "duguying",
        "comment_body": "which status code should i use? you mean `http.StatusNoContent` or using other status code",
        "pr_file_module": null
      },
      {
        "comment_id": "199376529",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 1358,
        "pr_file": "context_test.go",
        "discussion_id": "199349450",
        "commented_code": "@@ -686,6 +686,17 @@ func TestContextRenderNoContentSecureJSON(t *testing.T) {\n \tassert.Equal(t, \"application/json; charset=utf-8\", w.HeaderMap.Get(\"Content-Type\"))\n }\n \n+func TestContextRenderNoContentAsciiJSON(t *testing.T) {\n+\tw := httptest.NewRecorder()\n+\tc, _ := CreateTestContext(w)\n+\n+\tc.AsciiJSON(204, []string{\"lang\", \"Go语言\"})",
        "comment_created_at": "2018-07-02T03:07:38+00:00",
        "comment_author": "appleboy",
        "comment_body": "`http.StatusNoContent`",
        "pr_file_module": null
      },
      {
        "comment_id": "199384674",
        "repo_full_name": "gin-gonic/gin",
        "pr_number": 1358,
        "pr_file": "context_test.go",
        "discussion_id": "199349450",
        "commented_code": "@@ -686,6 +686,17 @@ func TestContextRenderNoContentSecureJSON(t *testing.T) {\n \tassert.Equal(t, \"application/json; charset=utf-8\", w.HeaderMap.Get(\"Content-Type\"))\n }\n \n+func TestContextRenderNoContentAsciiJSON(t *testing.T) {\n+\tw := httptest.NewRecorder()\n+\tc, _ := CreateTestContext(w)\n+\n+\tc.AsciiJSON(204, []string{\"lang\", \"Go语言\"})",
        "comment_created_at": "2018-07-02T04:49:20+00:00",
        "comment_author": "duguying",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  }
]