[
  {
    "discussion_id": "1563620686",
    "pr_number": 66805,
    "pr_file": "src/os/file.go",
    "created_at": "2024-04-13T02:47:22+00:00",
    "commented_code": "//\n // The result implements [io/fs.StatFS], [io/fs.ReadFileFS] and\n // [io/fs.ReadDirFS].\n-func DirFS(dir string) fs.FS {\n+func DirFS(dir string) fs.ReadDirFS {",
    "repo_full_name": "golang/go",
    "discussion_comments": [
      {
        "comment_id": "1563620686",
        "repo_full_name": "golang/go",
        "pr_number": 66805,
        "pr_file": "src/os/file.go",
        "discussion_id": "1563620686",
        "commented_code": "@@ -680,7 +680,7 @@ func (f *File) SyscallConn() (syscall.RawConn, error) {\n //\n // The result implements [io/fs.StatFS], [io/fs.ReadFileFS] and\n // [io/fs.ReadDirFS].\n-func DirFS(dir string) fs.FS {\n+func DirFS(dir string) fs.ReadDirFS {",
        "comment_created_at": "2024-04-13T02:47:22+00:00",
        "comment_author": "kilianc",
        "comment_body": "```suggestion\r\nfunc DirFS(dir string) fs.ReadFileFS {\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "310377560",
    "pr_number": 33450,
    "pr_file": "src/log/log.go",
    "created_at": "2019-08-04T08:59:19+00:00",
    "commented_code": "mu     sync.Mutex // ensures atomic writes; protects the following fields\n \tprefix string     // prefix to write at beginning of each line\n \tflag   int        // properties\n-\tout    io.Writer  // destination for output\n+\t//out    io.Writer  // destination for output\n+\touts   []io.Writer// destinations for ouput\n \tbuf    []byte     // for accumulating text to write\n }\n \n-// New creates a new Logger. The out variable sets the\n-// destination to which log data will be written.\n+// New creates a new Logger. The outs variable sets the\n+// destinations to which log data will be written.\n // The prefix appears at the beginning of each generated log line.\n // The flag argument defines the logging properties.\n func New(out io.Writer, prefix string, flag int) *Logger {",
    "repo_full_name": "golang/go",
    "discussion_comments": [
      {
        "comment_id": "310377560",
        "repo_full_name": "golang/go",
        "pr_number": 33450,
        "pr_file": "src/log/log.go",
        "discussion_id": "310377560",
        "commented_code": "@@ -51,23 +51,24 @@ type Logger struct {\n \tmu     sync.Mutex // ensures atomic writes; protects the following fields\n \tprefix string     // prefix to write at beginning of each line\n \tflag   int        // properties\n-\tout    io.Writer  // destination for output\n+\t//out    io.Writer  // destination for output\n+\touts   []io.Writer// destinations for ouput\n \tbuf    []byte     // for accumulating text to write\n }\n \n-// New creates a new Logger. The out variable sets the\n-// destination to which log data will be written.\n+// New creates a new Logger. The outs variable sets the\n+// destinations to which log data will be written.\n // The prefix appears at the beginning of each generated log line.\n // The flag argument defines the logging properties.\n func New(out io.Writer, prefix string, flag int) *Logger {",
        "comment_created_at": "2019-08-04T08:59:19+00:00",
        "comment_author": "kerbalwzy",
        "comment_body": "Return the original parameter form to make the code backward compatible",
        "pr_file_module": null
      }
    ]
  }
]