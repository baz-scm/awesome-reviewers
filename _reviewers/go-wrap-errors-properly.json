[
  {
    "discussion_id": "1096054826",
    "pr_number": 58299,
    "pr_file": "src/crypto/x509/x509.go",
    "created_at": "2023-02-03T17:18:47+00:00",
    "commented_code": "b, err := asn1.Marshal(attr)\n \t\tif err != nil {\n-\t\t\treturn nil, errors.New(\"x509: failed to serialise extensions attribute: \" + err.Error())\n+\t\t\treturn nil, fmt.Errorf(\"x509: failed to serialise extensions attribute: %w\", err)",
    "repo_full_name": "golang/go",
    "discussion_comments": [
      {
        "comment_id": "1096054826",
        "repo_full_name": "golang/go",
        "pr_number": 58299,
        "pr_file": "src/crypto/x509/x509.go",
        "discussion_id": "1096054826",
        "commented_code": "@@ -2023,7 +2023,7 @@ func CreateCertificateRequest(rand io.Reader, template *CertificateRequest, priv\n \n \t\tb, err := asn1.Marshal(attr)\n \t\tif err != nil {\n-\t\t\treturn nil, errors.New(\"x509: failed to serialise extensions attribute: \" + err.Error())\n+\t\t\treturn nil, fmt.Errorf(\"x509: failed to serialise extensions attribute: %w\", err)",
        "comment_created_at": "2023-02-03T17:18:47+00:00",
        "comment_author": "dcormier",
        "comment_body": "I had an urge to fix this existing typo, but I did not.\r\n\r\n```suggestion\r\n\t\t\treturn nil, fmt.Errorf(\"x509: failed to serialize extensions attribute: %w\", err)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1151246820",
    "pr_number": 59301,
    "pr_file": "src/errors/join.go",
    "created_at": "2023-03-28T23:28:49+00:00",
    "commented_code": "// The error formats as the concatenation of the strings obtained\n // by calling the Error method of each element of errs, with a newline\n // between each string.\n+//\n+// A non-nil error returned by Join implements the Unwrap() []error method.",
    "repo_full_name": "golang/go",
    "discussion_comments": [
      {
        "comment_id": "1151246820",
        "repo_full_name": "golang/go",
        "pr_number": 59301,
        "pr_file": "src/errors/join.go",
        "discussion_id": "1151246820",
        "commented_code": "@@ -10,6 +10,8 @@ package errors\n // The error formats as the concatenation of the strings obtained\n // by calling the Error method of each element of errs, with a newline\n // between each string.\n+//\n+// A non-nil error returned by Join implements the Unwrap() []error method.",
        "comment_created_at": "2023-03-28T23:28:49+00:00",
        "comment_author": "dnephin",
        "comment_body": "Would it be appropriate to be more explicit here, and say something about \"the returned error can not be unwrapped by [Unwrap]\" ?",
        "pr_file_module": null
      }
    ]
  }
]