[
  {
    "discussion_id": "2279714221",
    "pr_number": 4080,
    "pr_file": "ui/desktop/src/hooks/useRecipeManager.ts",
    "created_at": "2025-08-15T19:12:05+00:00",
    "commented_code": "}\n   }, [chatContext, locationState]);\n \n-  // Check if recipe has been accepted before\n+  // Check if recipe has been accepted before and scan for security warnings\n   useEffect(() => {\n     const checkRecipeAcceptance = async () => {\n       if (recipeConfig) {\n         try {\n+          const scanResult = await scanRecipe(recipeConfig);\n+          setHasSecurityWarnings(scanResult.has_security_warnings);\n+\n           const hasAccepted = await window.electron.hasAcceptedRecipeBefore(recipeConfig);\n           if (!hasAccepted) {\n             setIsRecipeWarningModalOpen(true);\n           } else {\n             setRecipeAccepted(true);\n           }\n         } catch (error) {\n-          console.error('Error checking recipe acceptance:', error);\n-          // If there's an error, assume the recipe hasn't been accepted\n+          setHasSecurityWarnings(false);",
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2279714221",
        "repo_full_name": "block/goose",
        "pr_number": 4080,
        "pr_file": "ui/desktop/src/hooks/useRecipeManager.ts",
        "discussion_id": "2279714221",
        "commented_code": "@@ -78,20 +79,22 @@ export const useRecipeManager = (messages: Message[], locationState?: LocationSt\n     }\n   }, [chatContext, locationState]);\n \n-  // Check if recipe has been accepted before\n+  // Check if recipe has been accepted before and scan for security warnings\n   useEffect(() => {\n     const checkRecipeAcceptance = async () => {\n       if (recipeConfig) {\n         try {\n+          const scanResult = await scanRecipe(recipeConfig);\n+          setHasSecurityWarnings(scanResult.has_security_warnings);\n+\n           const hasAccepted = await window.electron.hasAcceptedRecipeBefore(recipeConfig);\n           if (!hasAccepted) {\n             setIsRecipeWarningModalOpen(true);\n           } else {\n             setRecipeAccepted(true);\n           }\n         } catch (error) {\n-          console.error('Error checking recipe acceptance:', error);\n-          // If there's an error, assume the recipe hasn't been accepted\n+          setHasSecurityWarnings(false);",
        "comment_created_at": "2025-08-15T19:12:05+00:00",
        "comment_author": "DOsinga",
        "comment_body": "if there is an error here, we show the dialog but never the secuirty warning, even if the scan failed?",
        "pr_file_module": null
      },
      {
        "comment_id": "2280033046",
        "repo_full_name": "block/goose",
        "pr_number": 4080,
        "pr_file": "ui/desktop/src/hooks/useRecipeManager.ts",
        "discussion_id": "2279714221",
        "commented_code": "@@ -78,20 +79,22 @@ export const useRecipeManager = (messages: Message[], locationState?: LocationSt\n     }\n   }, [chatContext, locationState]);\n \n-  // Check if recipe has been accepted before\n+  // Check if recipe has been accepted before and scan for security warnings\n   useEffect(() => {\n     const checkRecipeAcceptance = async () => {\n       if (recipeConfig) {\n         try {\n+          const scanResult = await scanRecipe(recipeConfig);\n+          setHasSecurityWarnings(scanResult.has_security_warnings);\n+\n           const hasAccepted = await window.electron.hasAcceptedRecipeBefore(recipeConfig);\n           if (!hasAccepted) {\n             setIsRecipeWarningModalOpen(true);\n           } else {\n             setRecipeAccepted(true);\n           }\n         } catch (error) {\n-          console.error('Error checking recipe acceptance:', error);\n-          // If there's an error, assume the recipe hasn't been accepted\n+          setHasSecurityWarnings(false);",
        "comment_created_at": "2025-08-15T23:45:08+00:00",
        "comment_author": "amed-xyz",
        "comment_body": "yes, basically we default to a generic warning (current behaviour) instead of assuming there's an actual security warning and saying so",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2225107236",
    "pr_number": 3507,
    "pr_file": "ui/desktop/src/utils/openRouterSetup.ts",
    "created_at": "2025-07-23T10:32:16+00:00",
    "commented_code": "+export interface OpenRouterSetupStatus {\n+  isRunning: boolean;\n+  error: string | null;\n+}\n+\n+export async function startOpenRouterSetup(): Promise<{ success: boolean; message: string }> {\n+  try {\n+    const baseUrl = `${window.appConfig.get('GOOSE_API_HOST')}:${window.appConfig.get('GOOSE_PORT')}`;\n+    const response = await fetch(`${baseUrl}/setup/openrouter/start`, {\n+      method: 'POST',\n+      headers: {\n+        'Content-Type': 'application/json',\n+      },\n+    });\n+\n+    if (!response.ok) {\n+      throw new Error(`HTTP error! status: ${response.status}`);\n+    }\n+\n+    const result = await response.json();\n+    return result;\n+  } catch (error) {",
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2225107236",
        "repo_full_name": "block/goose",
        "pr_number": 3507,
        "pr_file": "ui/desktop/src/utils/openRouterSetup.ts",
        "discussion_id": "2225107236",
        "commented_code": "@@ -0,0 +1,29 @@\n+export interface OpenRouterSetupStatus {\n+  isRunning: boolean;\n+  error: string | null;\n+}\n+\n+export async function startOpenRouterSetup(): Promise<{ success: boolean; message: string }> {\n+  try {\n+    const baseUrl = `${window.appConfig.get('GOOSE_API_HOST')}:${window.appConfig.get('GOOSE_PORT')}`;\n+    const response = await fetch(`${baseUrl}/setup/openrouter/start`, {\n+      method: 'POST',\n+      headers: {\n+        'Content-Type': 'application/json',\n+      },\n+    });\n+\n+    if (!response.ok) {\n+      throw new Error(`HTTP error! status: ${response.status}`);\n+    }\n+\n+    const result = await response.json();\n+    return result;\n+  } catch (error) {",
        "comment_created_at": "2025-07-23T10:32:16+00:00",
        "comment_author": "DOsinga",
        "comment_body": "I don't think you want to generally catch errors here like this, just let it bubble up",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2225112885",
    "pr_number": 3507,
    "pr_file": "ui/desktop/src/utils/openRouterSetup.ts",
    "created_at": "2025-07-23T10:35:03+00:00",
    "commented_code": "+export interface OpenRouterSetupStatus {\n+  isRunning: boolean;\n+  error: string | null;\n+}\n+\n+export async function startOpenRouterSetup(): Promise<{ success: boolean; message: string }> {\n+  try {\n+    const baseUrl = `${window.appConfig.get('GOOSE_API_HOST')}:${window.appConfig.get('GOOSE_PORT')}`;\n+    const response = await fetch(`${baseUrl}/setup/openrouter/start`, {\n+      method: 'POST',\n+      headers: {\n+        'Content-Type': 'application/json',\n+      },\n+    });\n+\n+    if (!response.ok) {\n+      throw new Error(`HTTP error! status: ${response.status}`);\n+    }\n+\n+    const result = await response.json();",
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2225112885",
        "repo_full_name": "block/goose",
        "pr_number": 3507,
        "pr_file": "ui/desktop/src/utils/openRouterSetup.ts",
        "discussion_id": "2225112885",
        "commented_code": "@@ -0,0 +1,29 @@\n+export interface OpenRouterSetupStatus {\n+  isRunning: boolean;\n+  error: string | null;\n+}\n+\n+export async function startOpenRouterSetup(): Promise<{ success: boolean; message: string }> {\n+  try {\n+    const baseUrl = `${window.appConfig.get('GOOSE_API_HOST')}:${window.appConfig.get('GOOSE_PORT')}`;\n+    const response = await fetch(`${baseUrl}/setup/openrouter/start`, {\n+      method: 'POST',\n+      headers: {\n+        'Content-Type': 'application/json',\n+      },\n+    });\n+\n+    if (!response.ok) {\n+      throw new Error(`HTTP error! status: ${response.status}`);\n+    }\n+\n+    const result = await response.json();",
        "comment_created_at": "2025-07-23T10:35:03+00:00",
        "comment_author": "DOsinga",
        "comment_body": "use safeJsonParse here, now in main",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2209787694",
    "pr_number": 3151,
    "pr_file": "ui/desktop/src/hooks/useMessageStream.ts",
    "created_at": "2025-07-16T09:25:59+00:00",
    "commented_code": "if (!response.ok) {\n           const text = await response.text();\n+\n+          // Handle 529 (Service Overloaded) with retry\n+          if (response.status === 529 && retryCount < MAX_RETRIES) {",
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2209787694",
        "repo_full_name": "block/goose",
        "pr_number": 3151,
        "pr_file": "ui/desktop/src/hooks/useMessageStream.ts",
        "discussion_id": "2209787694",
        "commented_code": "@@ -413,6 +425,26 @@ export function useMessageStream({\n \n         if (!response.ok) {\n           const text = await response.text();\n+\n+          // Handle 529 (Service Overloaded) with retry\n+          if (response.status === 529 && retryCount < MAX_RETRIES) {",
        "comment_created_at": "2025-07-16T09:25:59+00:00",
        "comment_author": "DOsinga",
        "comment_body": "maybe also check 503?",
        "pr_file_module": null
      }
    ]
  }
]