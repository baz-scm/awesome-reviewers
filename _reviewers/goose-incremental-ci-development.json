[
  {
    "discussion_id": "2292499229",
    "pr_number": 3890,
    "pr_file": ".github/workflows/build-termux-cli.yml",
    "created_at": "2025-08-22T01:35:21+00:00",
    "commented_code": "+# https://github.com/termux/termux-docker\n+# https://github.com/termux/termux-docker/issues/62\n+# https://github.com/robertkirkman/termux-on-gha/blob/master/.github/workflows/build-and-test.yml\n+\n+on:\n+  push:\n+    branches:\n+      - \"build-termux-*\"\n+      - \"main\"\n+\n+name: \"Termux build\"\n+\n+jobs:\n+  build-cli-termux:\n+    name: Build Termux CLI\n+    strategy:\n+      matrix:\n+        include:\n+#          - runner: ubuntu-24.04\n+#            architecture: i686\n+#          - runner: ubuntu-24.04\n+#            architecture: x86_64\n+#          - runner: ubuntu-24.04-arm\n+#            architecture: arm\n+          - runner: ubuntu-24.04-arm\n+            architecture: aarch64\n+    runs-on: ${{ matrix.runner }}\n+    container:\n+      image: termux/termux-docker:${{ matrix.architecture }}\n+      volumes:\n+        - /tmp/node20:/__e/node20\n+    env:\n+      TERMUX_MAIN_PACKAGE_FORMAT: debian\n+      ANDROID_ROOT: /system\n+      ANDROID_DATA: /data\n+      PREFIX: /data/data/com.termux/files/usr\n+      HOME: /data/data/com.termux/files/home\n+      PATH: /data/data/com.termux/files/usr/bin\n+      TMPDIR: /data/data/com.termux/files/usr/tmp\n+      LANG: en_US.UTF-8\n+      TZ: UTC\n+    steps:\n+      - name: set pkg command to use the packages-cf.termux.dev mirror\n+        run: ln -sf ${PREFIX}/etc/termux/mirrors/default ${PREFIX}/etc/termux/chosen_mirrors\n+      - name: upgrade all packages to prepare for installing nodejs\n+        run: /entrypoint.sh bash -c \"yes | pkg upgrade -y\"\n+      - name: fix executable bit for all binaries in $PREFIX/bin for all users\n+        run: chmod -R o+x ${PREFIX}/bin\n+      - name: install bionic-libc nodejs to force compatibility with actions/checkout and actions/upload-artifact\n+        run: |\n+          /entrypoint.sh pkg install -y nodejs-lts\n+          ln -sf ${PREFIX}/bin /__e/node20/bin\n+      - uses: actions/checkout@v4.2.2\n+      - name: fix permissions of repository after actions/checkout, which ran as root user, while entrypoint.sh activates system user (1000)\n+        run: chown -R 1000:1000 .\n+      - name: setup\n+        run: |\n+          /entrypoint.sh pkg install -y rust\n+          /entrypoint.sh pkg install -y cmake protobuf clang build-essential\n+          /entrypoint.sh pkg install -y tar gzip zip bzip2\n+      - name: build\n+        run: |\n+          # patch for android\n+          /entrypoint.sh ./crates/goose-mcp/android-patch.sh\n+          /entrypoint.sh cargo build --release\n+          # Create a directory for the package contents\n+          /entrypoint.sh mkdir -p \"target/release/goose-package\"\n+          /entrypoint.sh cp \"target/release/goose\" \"target/release/goose-package/\"\n+          /entrypoint.sh tar -cjf \"goose-termux-${{ matrix.architecture }}.tar.bz2\" -C target/release/goose-package .\n+      - name: Upload CLI artifact\n+        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # pin@v4\n+        with:\n+          name: goose-termux-${{ matrix.architecture }}\n+          path: goose-termux-${{ matrix.architecture }}.tar.bz2\n+  release:",
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2292499229",
        "repo_full_name": "block/goose",
        "pr_number": 3890,
        "pr_file": ".github/workflows/build-termux-cli.yml",
        "discussion_id": "2292499229",
        "commented_code": "@@ -0,0 +1,99 @@\n+# https://github.com/termux/termux-docker\n+# https://github.com/termux/termux-docker/issues/62\n+# https://github.com/robertkirkman/termux-on-gha/blob/master/.github/workflows/build-and-test.yml\n+\n+on:\n+  push:\n+    branches:\n+      - \"build-termux-*\"\n+      - \"main\"\n+\n+name: \"Termux build\"\n+\n+jobs:\n+  build-cli-termux:\n+    name: Build Termux CLI\n+    strategy:\n+      matrix:\n+        include:\n+#          - runner: ubuntu-24.04\n+#            architecture: i686\n+#          - runner: ubuntu-24.04\n+#            architecture: x86_64\n+#          - runner: ubuntu-24.04-arm\n+#            architecture: arm\n+          - runner: ubuntu-24.04-arm\n+            architecture: aarch64\n+    runs-on: ${{ matrix.runner }}\n+    container:\n+      image: termux/termux-docker:${{ matrix.architecture }}\n+      volumes:\n+        - /tmp/node20:/__e/node20\n+    env:\n+      TERMUX_MAIN_PACKAGE_FORMAT: debian\n+      ANDROID_ROOT: /system\n+      ANDROID_DATA: /data\n+      PREFIX: /data/data/com.termux/files/usr\n+      HOME: /data/data/com.termux/files/home\n+      PATH: /data/data/com.termux/files/usr/bin\n+      TMPDIR: /data/data/com.termux/files/usr/tmp\n+      LANG: en_US.UTF-8\n+      TZ: UTC\n+    steps:\n+      - name: set pkg command to use the packages-cf.termux.dev mirror\n+        run: ln -sf ${PREFIX}/etc/termux/mirrors/default ${PREFIX}/etc/termux/chosen_mirrors\n+      - name: upgrade all packages to prepare for installing nodejs\n+        run: /entrypoint.sh bash -c \"yes | pkg upgrade -y\"\n+      - name: fix executable bit for all binaries in $PREFIX/bin for all users\n+        run: chmod -R o+x ${PREFIX}/bin\n+      - name: install bionic-libc nodejs to force compatibility with actions/checkout and actions/upload-artifact\n+        run: |\n+          /entrypoint.sh pkg install -y nodejs-lts\n+          ln -sf ${PREFIX}/bin /__e/node20/bin\n+      - uses: actions/checkout@v4.2.2\n+      - name: fix permissions of repository after actions/checkout, which ran as root user, while entrypoint.sh activates system user (1000)\n+        run: chown -R 1000:1000 .\n+      - name: setup\n+        run: |\n+          /entrypoint.sh pkg install -y rust\n+          /entrypoint.sh pkg install -y cmake protobuf clang build-essential\n+          /entrypoint.sh pkg install -y tar gzip zip bzip2\n+      - name: build\n+        run: |\n+          # patch for android\n+          /entrypoint.sh ./crates/goose-mcp/android-patch.sh\n+          /entrypoint.sh cargo build --release\n+          # Create a directory for the package contents\n+          /entrypoint.sh mkdir -p \"target/release/goose-package\"\n+          /entrypoint.sh cp \"target/release/goose\" \"target/release/goose-package/\"\n+          /entrypoint.sh tar -cjf \"goose-termux-${{ matrix.architecture }}.tar.bz2\" -C target/release/goose-package .\n+      - name: Upload CLI artifact\n+        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # pin@v4\n+        with:\n+          name: goose-termux-${{ matrix.architecture }}\n+          path: goose-termux-${{ matrix.architecture }}.tar.bz2\n+  release:",
        "comment_created_at": "2025-08-22T01:35:21+00:00",
        "comment_author": "michaelneale",
        "comment_body": "never quite sure on how to test changes to release workflows, or additions - ideas?",
        "pr_file_module": null
      },
      {
        "comment_id": "2292503917",
        "repo_full_name": "block/goose",
        "pr_number": 3890,
        "pr_file": ".github/workflows/build-termux-cli.yml",
        "discussion_id": "2292499229",
        "commented_code": "@@ -0,0 +1,99 @@\n+# https://github.com/termux/termux-docker\n+# https://github.com/termux/termux-docker/issues/62\n+# https://github.com/robertkirkman/termux-on-gha/blob/master/.github/workflows/build-and-test.yml\n+\n+on:\n+  push:\n+    branches:\n+      - \"build-termux-*\"\n+      - \"main\"\n+\n+name: \"Termux build\"\n+\n+jobs:\n+  build-cli-termux:\n+    name: Build Termux CLI\n+    strategy:\n+      matrix:\n+        include:\n+#          - runner: ubuntu-24.04\n+#            architecture: i686\n+#          - runner: ubuntu-24.04\n+#            architecture: x86_64\n+#          - runner: ubuntu-24.04-arm\n+#            architecture: arm\n+          - runner: ubuntu-24.04-arm\n+            architecture: aarch64\n+    runs-on: ${{ matrix.runner }}\n+    container:\n+      image: termux/termux-docker:${{ matrix.architecture }}\n+      volumes:\n+        - /tmp/node20:/__e/node20\n+    env:\n+      TERMUX_MAIN_PACKAGE_FORMAT: debian\n+      ANDROID_ROOT: /system\n+      ANDROID_DATA: /data\n+      PREFIX: /data/data/com.termux/files/usr\n+      HOME: /data/data/com.termux/files/home\n+      PATH: /data/data/com.termux/files/usr/bin\n+      TMPDIR: /data/data/com.termux/files/usr/tmp\n+      LANG: en_US.UTF-8\n+      TZ: UTC\n+    steps:\n+      - name: set pkg command to use the packages-cf.termux.dev mirror\n+        run: ln -sf ${PREFIX}/etc/termux/mirrors/default ${PREFIX}/etc/termux/chosen_mirrors\n+      - name: upgrade all packages to prepare for installing nodejs\n+        run: /entrypoint.sh bash -c \"yes | pkg upgrade -y\"\n+      - name: fix executable bit for all binaries in $PREFIX/bin for all users\n+        run: chmod -R o+x ${PREFIX}/bin\n+      - name: install bionic-libc nodejs to force compatibility with actions/checkout and actions/upload-artifact\n+        run: |\n+          /entrypoint.sh pkg install -y nodejs-lts\n+          ln -sf ${PREFIX}/bin /__e/node20/bin\n+      - uses: actions/checkout@v4.2.2\n+      - name: fix permissions of repository after actions/checkout, which ran as root user, while entrypoint.sh activates system user (1000)\n+        run: chown -R 1000:1000 .\n+      - name: setup\n+        run: |\n+          /entrypoint.sh pkg install -y rust\n+          /entrypoint.sh pkg install -y cmake protobuf clang build-essential\n+          /entrypoint.sh pkg install -y tar gzip zip bzip2\n+      - name: build\n+        run: |\n+          # patch for android\n+          /entrypoint.sh ./crates/goose-mcp/android-patch.sh\n+          /entrypoint.sh cargo build --release\n+          # Create a directory for the package contents\n+          /entrypoint.sh mkdir -p \"target/release/goose-package\"\n+          /entrypoint.sh cp \"target/release/goose\" \"target/release/goose-package/\"\n+          /entrypoint.sh tar -cjf \"goose-termux-${{ matrix.architecture }}.tar.bz2\" -C target/release/goose-package .\n+      - name: Upload CLI artifact\n+        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # pin@v4\n+        with:\n+          name: goose-termux-${{ matrix.architecture }}\n+          path: goose-termux-${{ matrix.architecture }}.tar.bz2\n+  release:",
        "comment_created_at": "2025-08-22T01:40:37+00:00",
        "comment_author": "shawn111",
        "comment_body": "Maybe I need remove this part,  it for my github repo to create the termux release.\r\n\r\nhttps://github.com/shawn111/goose/releases/tag/termux",
        "pr_file_module": null
      },
      {
        "comment_id": "2292525058",
        "repo_full_name": "block/goose",
        "pr_number": 3890,
        "pr_file": ".github/workflows/build-termux-cli.yml",
        "discussion_id": "2292499229",
        "commented_code": "@@ -0,0 +1,99 @@\n+# https://github.com/termux/termux-docker\n+# https://github.com/termux/termux-docker/issues/62\n+# https://github.com/robertkirkman/termux-on-gha/blob/master/.github/workflows/build-and-test.yml\n+\n+on:\n+  push:\n+    branches:\n+      - \"build-termux-*\"\n+      - \"main\"\n+\n+name: \"Termux build\"\n+\n+jobs:\n+  build-cli-termux:\n+    name: Build Termux CLI\n+    strategy:\n+      matrix:\n+        include:\n+#          - runner: ubuntu-24.04\n+#            architecture: i686\n+#          - runner: ubuntu-24.04\n+#            architecture: x86_64\n+#          - runner: ubuntu-24.04-arm\n+#            architecture: arm\n+          - runner: ubuntu-24.04-arm\n+            architecture: aarch64\n+    runs-on: ${{ matrix.runner }}\n+    container:\n+      image: termux/termux-docker:${{ matrix.architecture }}\n+      volumes:\n+        - /tmp/node20:/__e/node20\n+    env:\n+      TERMUX_MAIN_PACKAGE_FORMAT: debian\n+      ANDROID_ROOT: /system\n+      ANDROID_DATA: /data\n+      PREFIX: /data/data/com.termux/files/usr\n+      HOME: /data/data/com.termux/files/home\n+      PATH: /data/data/com.termux/files/usr/bin\n+      TMPDIR: /data/data/com.termux/files/usr/tmp\n+      LANG: en_US.UTF-8\n+      TZ: UTC\n+    steps:\n+      - name: set pkg command to use the packages-cf.termux.dev mirror\n+        run: ln -sf ${PREFIX}/etc/termux/mirrors/default ${PREFIX}/etc/termux/chosen_mirrors\n+      - name: upgrade all packages to prepare for installing nodejs\n+        run: /entrypoint.sh bash -c \"yes | pkg upgrade -y\"\n+      - name: fix executable bit for all binaries in $PREFIX/bin for all users\n+        run: chmod -R o+x ${PREFIX}/bin\n+      - name: install bionic-libc nodejs to force compatibility with actions/checkout and actions/upload-artifact\n+        run: |\n+          /entrypoint.sh pkg install -y nodejs-lts\n+          ln -sf ${PREFIX}/bin /__e/node20/bin\n+      - uses: actions/checkout@v4.2.2\n+      - name: fix permissions of repository after actions/checkout, which ran as root user, while entrypoint.sh activates system user (1000)\n+        run: chown -R 1000:1000 .\n+      - name: setup\n+        run: |\n+          /entrypoint.sh pkg install -y rust\n+          /entrypoint.sh pkg install -y cmake protobuf clang build-essential\n+          /entrypoint.sh pkg install -y tar gzip zip bzip2\n+      - name: build\n+        run: |\n+          # patch for android\n+          /entrypoint.sh ./crates/goose-mcp/android-patch.sh\n+          /entrypoint.sh cargo build --release\n+          # Create a directory for the package contents\n+          /entrypoint.sh mkdir -p \"target/release/goose-package\"\n+          /entrypoint.sh cp \"target/release/goose\" \"target/release/goose-package/\"\n+          /entrypoint.sh tar -cjf \"goose-termux-${{ matrix.architecture }}.tar.bz2\" -C target/release/goose-package .\n+      - name: Upload CLI artifact\n+        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # pin@v4\n+        with:\n+          name: goose-termux-${{ matrix.architecture }}\n+          path: goose-termux-${{ matrix.architecture }}.tar.bz2\n+  release:",
        "comment_created_at": "2025-08-22T02:03:20+00:00",
        "comment_author": "shawn111",
        "comment_body": "I remove the release part, and make the trigger rule as same as canary.yml. Once the PR merge, it will trigger build but we need download from github build result.\r\n\r\nOnce it is stable, we need add ```needs: build-cli-termux:``` in canary.yml and release.yml. Otherwise, users will hard to find where to download.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2221626261",
    "pr_number": 3575,
    "pr_file": ".github/workflows/ci.yml",
    "created_at": "2025-07-22T08:12:47+00:00",
    "commented_code": "source ./bin/activate-hermit\n           export CARGO_INCREMENTAL=0\n           cargo clippy --jobs 2 -- -D warnings\n+\n+      - name: Install Node.js Dependencies for OpenAPI Check",
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2221626261",
        "repo_full_name": "block/goose",
        "pr_number": 3575,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "2221626261",
        "commented_code": "@@ -131,6 +131,15 @@ jobs:\n           source ./bin/activate-hermit\n           export CARGO_INCREMENTAL=0\n           cargo clippy --jobs 2 -- -D warnings\n+\n+      - name: Install Node.js Dependencies for OpenAPI Check",
        "comment_created_at": "2025-07-22T08:12:47+00:00",
        "comment_author": "michaelneale",
        "comment_body": "should this move to the lint check (we can rename that) for front end that runs in parallel? (not sure if it has to wait for cargo to do its thing however)",
        "pr_file_module": null
      },
      {
        "comment_id": "2221913632",
        "repo_full_name": "block/goose",
        "pr_number": 3575,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "2221626261",
        "commented_code": "@@ -131,6 +131,15 @@ jobs:\n           source ./bin/activate-hermit\n           export CARGO_INCREMENTAL=0\n           cargo clippy --jobs 2 -- -D warnings\n+\n+      - name: Install Node.js Dependencies for OpenAPI Check",
        "comment_created_at": "2025-07-22T09:39:15+00:00",
        "comment_author": "cloud-on-prem",
        "comment_body": "I originally thought about keeping it in a different job. We do need cargo to compile to check. The check is adding about ~2 seconds (on my machine)\r\nWe can move it out if it becomes a problem.",
        "pr_file_module": null
      }
    ]
  }
]