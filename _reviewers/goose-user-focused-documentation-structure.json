[
  {
    "discussion_id": "2281088972",
    "pr_number": 3389,
    "pr_file": "documentation/docs/experimental/repo-search-with-tree-sitter-indexing.md",
    "created_at": "2025-08-18T00:35:30+00:00",
    "commented_code": null,
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2281088972",
        "repo_full_name": "block/goose",
        "pr_number": 3389,
        "pr_file": "documentation/docs/experimental/repo-search-with-tree-sitter-indexing.md",
        "discussion_id": "2281088972",
        "commented_code": null,
        "comment_created_at": "2025-08-18T00:35:30+00:00",
        "comment_author": "angiejones",
        "comment_body": "Hi! Thanks for the comprehensive documentation. However, I think this needs to be restructured for our user-facing docs site. The current version reads more like internal technical documentation than a user guide.\n\n**Key issues:**\n- **Missing the \"why\"**: Users won't understand what problem this solves or when they'd use it\n- **Too implementation-focused**: Details about PageRank algorithms, data models, and Tree-sitter versions aren't relevant to users\n- **No clear use cases**: When would someone run `goose repo index`? What does it enable?\n\n**Suggested restructure:**\n1. **Start with the problem**: What does this solve? (e.g., \"Help Goose better understand your codebase structure\")\n2. **Simple use case**: \"Run this when you want Goose to have deeper knowledge of your project\"\n3. **Basic usage**: Simple example with expected output\n4. **Benefits**: What can Goose do better after indexing?\n5. **Supported languages**\n\n\n**Move to separate docs (if necessary):**\n- Implementation details\n- Technical architecture\n- Performance tuning\n- Contributing guidelines\n\nCould you revise this to focus on the user experience?",
        "pr_file_module": null
      },
      {
        "comment_id": "2283343033",
        "repo_full_name": "block/goose",
        "pr_number": 3389,
        "pr_file": "documentation/docs/experimental/repo-search-with-tree-sitter-indexing.md",
        "discussion_id": "2281088972",
        "commented_code": null,
        "comment_created_at": "2025-08-18T20:06:46+00:00",
        "comment_author": "dcieslak19973",
        "comment_body": "Thanks for this feedback. I've split this documentation into a more user-oriented one and a more technical/implementation detail one",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2204992257",
    "pr_number": 3402,
    "pr_file": "documentation/docs/experimental/subagents.md",
    "created_at": "2025-07-14T13:47:24+00:00",
    "commented_code": "+---\n+title: Subagents\n+sidebar_position: 1\n+sidebar_label: Subagents\n+---\n+\n+Subagents are independent instances that execute tasks while keeping your main conversation clean and focused. They bring process isolation and context preservation by offloading work to separate instances. Think of them as temporary assistants that handle specific jobs without cluttering your chat with tool execution details.\n+\n+:::warning\n+Subagents are an experimental feature in active development. Behavior and configuration may change in future releases.\n+:::\n+\n+You can run multiple subagents sequentially or in parallel.\n+\n+| Type | Description | Trigger Keywords | Example |\n+|------|-------------|------------------|---------|\n+| **Sequential** (Default) | Tasks execute one after another | \"first...then\", \"after\" | `\"First analyze the code, then generate documentation\"` |\n+| **Parallel** | Tasks execute simultaneously | \"parallel\", \"simultaneously\", \"at the same time\", \"concurrently\" | `\"Create three HTML templates in parallel\"` |\n+\n+\n+## Prerequisites\n+To use subagents, you need to enable alpha features first. You can do this by setting an [environment variable](/docs/guides/environment-variables#experimental-features) or adding it to your [config file](/docs/guides/config-file#experimental-features):\n+\n+**Environment Variable:**\n+```bash\n+export ALPHA_FEATURES=true\n+```\n+\n+**Config File** (`~/.config/goose/config.yaml`):\n+```yaml\n+ALPHA_FEATURES: true\n+```\n+\n+## Internal Subagents\n+\n+Internal subagents spawn Goose instances to handle tasks using your current session's context and extensions.",
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2204992257",
        "repo_full_name": "block/goose",
        "pr_number": 3402,
        "pr_file": "documentation/docs/experimental/subagents.md",
        "discussion_id": "2204992257",
        "commented_code": "@@ -0,0 +1,211 @@\n+---\n+title: Subagents\n+sidebar_position: 1\n+sidebar_label: Subagents\n+---\n+\n+Subagents are independent instances that execute tasks while keeping your main conversation clean and focused. They bring process isolation and context preservation by offloading work to separate instances. Think of them as temporary assistants that handle specific jobs without cluttering your chat with tool execution details.\n+\n+:::warning\n+Subagents are an experimental feature in active development. Behavior and configuration may change in future releases.\n+:::\n+\n+You can run multiple subagents sequentially or in parallel.\n+\n+| Type | Description | Trigger Keywords | Example |\n+|------|-------------|------------------|---------|\n+| **Sequential** (Default) | Tasks execute one after another | \"first...then\", \"after\" | `\"First analyze the code, then generate documentation\"` |\n+| **Parallel** | Tasks execute simultaneously | \"parallel\", \"simultaneously\", \"at the same time\", \"concurrently\" | `\"Create three HTML templates in parallel\"` |\n+\n+\n+## Prerequisites\n+To use subagents, you need to enable alpha features first. You can do this by setting an [environment variable](/docs/guides/environment-variables#experimental-features) or adding it to your [config file](/docs/guides/config-file#experimental-features):\n+\n+**Environment Variable:**\n+```bash\n+export ALPHA_FEATURES=true\n+```\n+\n+**Config File** (`~/.config/goose/config.yaml`):\n+```yaml\n+ALPHA_FEATURES: true\n+```\n+\n+## Internal Subagents\n+\n+Internal subagents spawn Goose instances to handle tasks using your current session's context and extensions.",
        "comment_created_at": "2025-07-14T13:47:24+00:00",
        "comment_author": "dianed-square",
        "comment_body": "Consider mentioning why Direct Instruction and Recipe Configuration are included in this section? e.g. two ways to configure/execute subagents?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2061399679",
    "pr_number": 2364,
    "pr_file": "documentation/docs/guides/Session-Sharing/session-sharing-implementation.md",
    "created_at": "2025-04-26T15:20:12+00:00",
    "commented_code": null,
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2061399679",
        "repo_full_name": "block/goose",
        "pr_number": 2364,
        "pr_file": "documentation/docs/guides/Session-Sharing/session-sharing-implementation.md",
        "discussion_id": "2061399679",
        "commented_code": null,
        "comment_created_at": "2025-04-26T15:20:12+00:00",
        "comment_author": "angiejones",
        "comment_body": "this guide is not accurate. it's not real-time collaboration. it simply allows users to share read-only Goose chat sessions with others.\r\n\r\nalso it's a beta feature so should probably be highlighted here: https://block.github.io/goose/docs/guides/experimental-features\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2178521731",
    "pr_number": 3204,
    "pr_file": "documentation/docs/guides/smart-context-management.md",
    "created_at": "2025-07-01T21:07:59+00:00",
    "commented_code": "</TabItem>\n </Tabs>\n+\n+### Cost Tracking\n+Display real-time costs of your session at the bottom of the Goose Desktop window. \n+\n+To enable live cost tracking:\n+  1. Click `\u2699\ufe0f` in the upper right corner \n+  2. Click `Advanced Settings`\n+  3. Scroll to `App Settings` and toggle `Cost Tracking` on or off.\n+\n+The session cost updates dynamically as tokens are consumed. Hover over the cost to see a detailed breakdown of token usage. If multiple models are used in the session, this includes a cost breakdown by model. Ollama and local deployments always show a cost of $0.00.\n+\n+Pricing data is regularly fetched from the OpenRouter API and cached locally. The `Advanced Settings` tab shows when the data was last updated and allows you to refresh. \n+\n+These costs are estimates only, and not connected to your actual provider bill. The cost shown is an approximation based on token counts and public pricing data.",
    "repo_full_name": "block/goose",
    "discussion_comments": [
      {
        "comment_id": "2178521731",
        "repo_full_name": "block/goose",
        "pr_number": 3204,
        "pr_file": "documentation/docs/guides/smart-context-management.md",
        "discussion_id": "2178521731",
        "commented_code": "@@ -163,3 +163,17 @@ After sending your first message, Goose Desktop and Goose CLI display token usag\n \n     </TabItem>\n </Tabs>\n+\n+### Cost Tracking\n+Display real-time costs of your session at the bottom of the Goose Desktop window. \n+\n+To enable live cost tracking:\n+  1. Click `\u2699\ufe0f` in the upper right corner \n+  2. Click `Advanced Settings`\n+  3. Scroll to `App Settings` and toggle `Cost Tracking` on or off.\n+\n+The session cost updates dynamically as tokens are consumed. Hover over the cost to see a detailed breakdown of token usage. If multiple models are used in the session, this includes a cost breakdown by model. Ollama and local deployments always show a cost of $0.00.\n+\n+Pricing data is regularly fetched from the OpenRouter API and cached locally. The `Advanced Settings` tab shows when the data was last updated and allows you to refresh. \n+\n+These costs are estimates only, and not connected to your actual provider bill. The cost shown is an approximation based on token counts and public pricing data.",
        "comment_created_at": "2025-07-01T21:07:59+00:00",
        "comment_author": "blackgirlbytes",
        "comment_body": "hmm is this feature only available in the UI and not the CLI? Right now, it looks like these are the instructions for CLI and UI..the way it's set up. We can put this within the tab and say this feature isn't currently available in CLI .",
        "pr_file_module": null
      },
      {
        "comment_id": "2178533714",
        "repo_full_name": "block/goose",
        "pr_number": 3204,
        "pr_file": "documentation/docs/guides/smart-context-management.md",
        "discussion_id": "2178521731",
        "commented_code": "@@ -163,3 +163,17 @@ After sending your first message, Goose Desktop and Goose CLI display token usag\n \n     </TabItem>\n </Tabs>\n+\n+### Cost Tracking\n+Display real-time costs of your session at the bottom of the Goose Desktop window. \n+\n+To enable live cost tracking:\n+  1. Click `\u2699\ufe0f` in the upper right corner \n+  2. Click `Advanced Settings`\n+  3. Scroll to `App Settings` and toggle `Cost Tracking` on or off.\n+\n+The session cost updates dynamically as tokens are consumed. Hover over the cost to see a detailed breakdown of token usage. If multiple models are used in the session, this includes a cost breakdown by model. Ollama and local deployments always show a cost of $0.00.\n+\n+Pricing data is regularly fetched from the OpenRouter API and cached locally. The `Advanced Settings` tab shows when the data was last updated and allows you to refresh. \n+\n+These costs are estimates only, and not connected to your actual provider bill. The cost shown is an approximation based on token counts and public pricing data.",
        "comment_created_at": "2025-07-01T21:13:08+00:00",
        "comment_author": "emma-squared",
        "comment_body": "Yes it's only available for the UI. I'll add tabs and make that clear.",
        "pr_file_module": null
      },
      {
        "comment_id": "2178545015",
        "repo_full_name": "block/goose",
        "pr_number": 3204,
        "pr_file": "documentation/docs/guides/smart-context-management.md",
        "discussion_id": "2178521731",
        "commented_code": "@@ -163,3 +163,17 @@ After sending your first message, Goose Desktop and Goose CLI display token usag\n \n     </TabItem>\n </Tabs>\n+\n+### Cost Tracking\n+Display real-time costs of your session at the bottom of the Goose Desktop window. \n+\n+To enable live cost tracking:\n+  1. Click `\u2699\ufe0f` in the upper right corner \n+  2. Click `Advanced Settings`\n+  3. Scroll to `App Settings` and toggle `Cost Tracking` on or off.\n+\n+The session cost updates dynamically as tokens are consumed. Hover over the cost to see a detailed breakdown of token usage. If multiple models are used in the session, this includes a cost breakdown by model. Ollama and local deployments always show a cost of $0.00.\n+\n+Pricing data is regularly fetched from the OpenRouter API and cached locally. The `Advanced Settings` tab shows when the data was last updated and allows you to refresh. \n+\n+These costs are estimates only, and not connected to your actual provider bill. The cost shown is an approximation based on token counts and public pricing data.",
        "comment_created_at": "2025-07-01T21:18:46+00:00",
        "comment_author": "blackgirlbytes",
        "comment_body": "okay put it in the group of tabs that are already there i think..that way we dont have the issue with the tabs not switching at the right time.",
        "pr_file_module": null
      },
      {
        "comment_id": "2178571376",
        "repo_full_name": "block/goose",
        "pr_number": 3204,
        "pr_file": "documentation/docs/guides/smart-context-management.md",
        "discussion_id": "2178521731",
        "commented_code": "@@ -163,3 +163,17 @@ After sending your first message, Goose Desktop and Goose CLI display token usag\n \n     </TabItem>\n </Tabs>\n+\n+### Cost Tracking\n+Display real-time costs of your session at the bottom of the Goose Desktop window. \n+\n+To enable live cost tracking:\n+  1. Click `\u2699\ufe0f` in the upper right corner \n+  2. Click `Advanced Settings`\n+  3. Scroll to `App Settings` and toggle `Cost Tracking` on or off.\n+\n+The session cost updates dynamically as tokens are consumed. Hover over the cost to see a detailed breakdown of token usage. If multiple models are used in the session, this includes a cost breakdown by model. Ollama and local deployments always show a cost of $0.00.\n+\n+Pricing data is regularly fetched from the OpenRouter API and cached locally. The `Advanced Settings` tab shows when the data was last updated and allows you to refresh. \n+\n+These costs are estimates only, and not connected to your actual provider bill. The cost shown is an approximation based on token counts and public pricing data.",
        "comment_created_at": "2025-07-01T21:30:45+00:00",
        "comment_author": "emma-squared",
        "comment_body": "I pulled \"token usage\" and \"cost tracking\" out into their own sections to make the TOC clearer.",
        "pr_file_module": null
      }
    ]
  }
]