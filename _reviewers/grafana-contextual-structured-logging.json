[
  {
    "discussion_id": "2166956629",
    "pr_number": 107111,
    "pr_file": "pkg/registry/apis/query/query.go",
    "created_at": "2025-06-25T15:02:05+00:00",
    "commented_code": "}), nil\n }\n \n+func logEmptyRefids(queries []v0alpha1.DataQuery, logger log.Logger) {\n+\tfor _, q := range queries {\n+\t\tif q.RefID == \"\" {\n+\t\t\tlogger.Info(\"empty refid found\", \"query_count\", len(queries))",
    "repo_full_name": "grafana/grafana",
    "discussion_comments": [
      {
        "comment_id": "2166956629",
        "repo_full_name": "grafana/grafana",
        "pr_number": 107111,
        "pr_file": "pkg/registry/apis/query/query.go",
        "discussion_id": "2166956629",
        "commented_code": "@@ -215,6 +217,15 @@ func (r *queryREST) Connect(connectCtx context.Context, name string, _ runtime.O\n \t}), nil\n }\n \n+func logEmptyRefids(queries []v0alpha1.DataQuery, logger log.Logger) {\n+\tfor _, q := range queries {\n+\t\tif q.RefID == \"\" {\n+\t\t\tlogger.Info(\"empty refid found\", \"query_count\", len(queries))",
        "comment_created_at": "2025-06-25T15:02:05+00:00",
        "comment_author": "sarahzinger",
        "comment_body": "does logging the query count mean something important in this context? It wouldn't tell you how many of the queries are empty right? just the number of queriers in a request where one of them was empty. I'm not sure I follow why that is useful? ",
        "pr_file_module": null
      },
      {
        "comment_id": "2170954770",
        "repo_full_name": "grafana/grafana",
        "pr_number": 107111,
        "pr_file": "pkg/registry/apis/query/query.go",
        "discussion_id": "2166956629",
        "commented_code": "@@ -215,6 +217,15 @@ func (r *queryREST) Connect(connectCtx context.Context, name string, _ runtime.O\n \t}), nil\n }\n \n+func logEmptyRefids(queries []v0alpha1.DataQuery, logger log.Logger) {\n+\tfor _, q := range queries {\n+\t\tif q.RefID == \"\" {\n+\t\t\tlogger.Info(\"empty refid found\", \"query_count\", len(queries))",
        "comment_created_at": "2025-06-27T07:00:20+00:00",
        "comment_author": "gabor",
        "comment_body": "you are completely correct \ud83d\udc4d .\r\n\r\noriginally i wanted to log something like \"3/5\" (3empty out of 5). but then i realized that multiple empty refids are not allowed, so that number would always start with `1`. \r\n\r\nwith that said, now, thinking back, i think i will still change it to `3/5`, it will be a lot more clear that way, thanks!",
        "pr_file_module": null
      },
      {
        "comment_id": "2170981971",
        "repo_full_name": "grafana/grafana",
        "pr_number": 107111,
        "pr_file": "pkg/registry/apis/query/query.go",
        "discussion_id": "2166956629",
        "commented_code": "@@ -215,6 +217,15 @@ func (r *queryREST) Connect(connectCtx context.Context, name string, _ runtime.O\n \t}), nil\n }\n \n+func logEmptyRefids(queries []v0alpha1.DataQuery, logger log.Logger) {\n+\tfor _, q := range queries {\n+\t\tif q.RefID == \"\" {\n+\t\t\tlogger.Info(\"empty refid found\", \"query_count\", len(queries))",
        "comment_created_at": "2025-06-27T07:16:15+00:00",
        "comment_author": "gabor",
        "comment_body": "i adjusted the code, now it reports something like this:\r\n```\r\nempty refid found empty_count=1 query_count=3\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2170982359",
        "repo_full_name": "grafana/grafana",
        "pr_number": 107111,
        "pr_file": "pkg/registry/apis/query/query.go",
        "discussion_id": "2166956629",
        "commented_code": "@@ -215,6 +217,15 @@ func (r *queryREST) Connect(connectCtx context.Context, name string, _ runtime.O\n \t}), nil\n }\n \n+func logEmptyRefids(queries []v0alpha1.DataQuery, logger log.Logger) {\n+\tfor _, q := range queries {\n+\t\tif q.RefID == \"\" {\n+\t\t\tlogger.Info(\"empty refid found\", \"query_count\", len(queries))",
        "comment_created_at": "2025-06-27T07:16:25+00:00",
        "comment_author": "gabor",
        "comment_body": "coukd i ask for a re-review please? thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1629772254",
    "pr_number": 88815,
    "pr_file": "pkg/middleware/loggermw/logger.go",
    "created_at": "2024-06-06T15:40:04+00:00",
    "commented_code": "return []any{\"error\", err.Error()}\n \t}\n \n-\treturn []any{\n-\t\t\"errorReason\", gfErr.Reason,\n-\t\t\"errorMessageID\", gfErr.MessageID,\n-\t\t\"error\", gfErr.LogMessage,\n-\t}\n+\treturn log.Attributes(\n+\t\to11ysemconv.ErrorReason.LogKV(gfErr.Reason),",
    "repo_full_name": "grafana/grafana",
    "discussion_comments": [
      {
        "comment_id": "1629772254",
        "repo_full_name": "grafana/grafana",
        "pr_number": 88815,
        "pr_file": "pkg/middleware/loggermw/logger.go",
        "discussion_id": "1629772254",
        "commented_code": "@@ -147,11 +148,11 @@ func errorLogParams(err error) []any {\n \t\treturn []any{\"error\", err.Error()}\n \t}\n \n-\treturn []any{\n-\t\t\"errorReason\", gfErr.Reason,\n-\t\t\"errorMessageID\", gfErr.MessageID,\n-\t\t\"error\", gfErr.LogMessage,\n-\t}\n+\treturn log.Attributes(\n+\t\to11ysemconv.ErrorReason.LogKV(gfErr.Reason),",
        "comment_created_at": "2024-06-06T15:40:04+00:00",
        "comment_author": "diegommm",
        "comment_body": "With the above suggestion, this could look like:\r\n```suggestion\r\n\t\tlog.ErrorReason(gfErr.Reason),\r\n```",
        "pr_file_module": null
      }
    ]
  }
]