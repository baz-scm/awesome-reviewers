[
  {
    "discussion_id": "2180406653",
    "pr_number": 107531,
    "pr_file": "pkg/registry/apps/apps.go",
    "created_at": "2025-07-02T15:49:28+00:00",
    "commented_code": "logger := log.New(\"app-registry\")\n \tvar apiGroupRunner *runner.APIGroupRunner\n \tvar err error\n-\tproviders := []app.Provider{playlistAppProvider}\n+\tproviders := []app.Provider{playlistAppProvider, shortURLAppProvider}",
    "repo_full_name": "grafana/grafana",
    "discussion_comments": [
      {
        "comment_id": "2180406653",
        "repo_full_name": "grafana/grafana",
        "pr_number": 107531,
        "pr_file": "pkg/registry/apps/apps.go",
        "discussion_id": "2180406653",
        "commented_code": "@@ -56,7 +58,7 @@ func ProvideRegistryServiceSink(\n \tlogger := log.New(\"app-registry\")\n \tvar apiGroupRunner *runner.APIGroupRunner\n \tvar err error\n-\tproviders := []app.Provider{playlistAppProvider}\n+\tproviders := []app.Provider{playlistAppProvider, shortURLAppProvider}",
        "comment_created_at": "2025-07-02T15:49:28+00:00",
        "comment_author": "evictorero",
        "comment_body": "Should this provider always be registered, or should I put it behind a feature flag?",
        "pr_file_module": null
      },
      {
        "comment_id": "2180669235",
        "repo_full_name": "grafana/grafana",
        "pr_number": 107531,
        "pr_file": "pkg/registry/apps/apps.go",
        "discussion_id": "2180406653",
        "commented_code": "@@ -56,7 +58,7 @@ func ProvideRegistryServiceSink(\n \tlogger := log.New(\"app-registry\")\n \tvar apiGroupRunner *runner.APIGroupRunner\n \tvar err error\n-\tproviders := []app.Provider{playlistAppProvider}\n+\tproviders := []app.Provider{playlistAppProvider, shortURLAppProvider}",
        "comment_created_at": "2025-07-02T18:04:54+00:00",
        "comment_author": "stephaniehingtgen",
        "comment_body": "It should be behind a feature flag until it has been rolled out everywhere, and then moved up to this line :)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2092314814",
    "pr_number": 105510,
    "pr_file": "pkg/middleware/cookies/cookies.go",
    "created_at": "2025-05-16T04:49:30+00:00",
    "commented_code": "}\n \n \toptions := getCookieOptions()\n+\tif !featuremgmt.AnyEnabled(&featuremgmt.FeatureManager{}, featuremgmt.FlagPanelExporterCookieDomain) {\n+\t\toptions.Domain = \"\"\n+\t}",
    "repo_full_name": "grafana/grafana",
    "discussion_comments": [
      {
        "comment_id": "2092314814",
        "repo_full_name": "grafana/grafana",
        "pr_number": 105510,
        "pr_file": "pkg/middleware/cookies/cookies.go",
        "discussion_id": "2092314814",
        "commented_code": "@@ -39,10 +42,14 @@ func WriteCookie(w http.ResponseWriter, name string, value string, maxAge int, g\n \t}\n \n \toptions := getCookieOptions()\n+\tif !featuremgmt.AnyEnabled(&featuremgmt.FeatureManager{}, featuremgmt.FlagPanelExporterCookieDomain) {\n+\t\toptions.Domain = \"\"\n+\t}",
        "comment_created_at": "2025-05-16T04:49:30+00:00",
        "comment_author": "torkelo",
        "comment_body": "don't think we need a feature toggle for this, as long as the new option when unset leaves domain unset and defaults to the previous behavior ",
        "pr_file_module": null
      },
      {
        "comment_id": "2096333565",
        "repo_full_name": "grafana/grafana",
        "pr_number": 105510,
        "pr_file": "pkg/middleware/cookies/cookies.go",
        "discussion_id": "2092314814",
        "commented_code": "@@ -39,10 +42,14 @@ func WriteCookie(w http.ResponseWriter, name string, value string, maxAge int, g\n \t}\n \n \toptions := getCookieOptions()\n+\tif !featuremgmt.AnyEnabled(&featuremgmt.FeatureManager{}, featuremgmt.FlagPanelExporterCookieDomain) {\n+\t\toptions.Domain = \"\"\n+\t}",
        "comment_created_at": "2025-05-19T19:09:50+00:00",
        "comment_author": "jkafader-esnet",
        "comment_body": "This would simplify the code significantly and avoid my merge-conflicted `setting.go` as well. I'll update this. Thanks for the review \ud83d\udc4d",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2177907652",
    "pr_number": 107155,
    "pr_file": "pkg/setting/settings_zanzana.go",
    "created_at": "2025-07-01T15:29:01+00:00",
    "commented_code": "SigningKeysURL string\n }\n \n+// Parameters to configure OpenFGA cache.\n+type OpenFgaCacheSettings struct {",
    "repo_full_name": "grafana/grafana",
    "discussion_comments": [
      {
        "comment_id": "2177907652",
        "repo_full_name": "grafana/grafana",
        "pr_number": 107155,
        "pr_file": "pkg/setting/settings_zanzana.go",
        "discussion_id": "2177907652",
        "commented_code": "@@ -48,6 +46,54 @@ type ZanzanaServerSettings struct {\n \tSigningKeysURL string\n }\n \n+// Parameters to configure OpenFGA cache.\n+type OpenFgaCacheSettings struct {",
        "comment_created_at": "2025-07-01T15:29:01+00:00",
        "comment_author": "forsethc",
        "comment_body": "I wonder if some of these are better left unconfigurable for now.  Once we allow configuration of these, we need to support configuration of these forever lest we break someone's workflow.\r\n\r\nWe can always add configuration points later and I agree that _some_ control over the caching makes sense, but this is a lot of granularity that we likely can just decide what the best value is until someone says different.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1648845784",
    "pr_number": 89541,
    "pr_file": "pkg/services/featuremgmt/registry.go",
    "created_at": "2024-06-21T11:34:40+00:00",
    "commented_code": "Owner:           grafanaAlertingSquad,\n \t\t\tRequiresRestart: true,\n \t\t},\n+\t\t{\n+\t\t\tName:        \"alwaysSendUsageInisghts\",\n+\t\t\tDescription: \"Forces sending usage insights data no matter what if config.analytics.enabled is enabled\",\n+\t\t\tStage:       FeatureStageExperimental,",
    "repo_full_name": "grafana/grafana",
    "discussion_comments": [
      {
        "comment_id": "1648845784",
        "repo_full_name": "grafana/grafana",
        "pr_number": 89541,
        "pr_file": "pkg/services/featuremgmt/registry.go",
        "discussion_id": "1648845784",
        "commented_code": "@@ -1362,6 +1362,12 @@ var (\n \t\t\tOwner:           grafanaAlertingSquad,\n \t\t\tRequiresRestart: true,\n \t\t},\n+\t\t{\n+\t\t\tName:        \"alwaysSendUsageInisghts\",\n+\t\t\tDescription: \"Forces sending usage insights data no matter what if config.analytics.enabled is enabled\",\n+\t\t\tStage:       FeatureStageExperimental,",
        "comment_created_at": "2024-06-21T11:34:40+00:00",
        "comment_author": "yaelleC",
        "comment_body": "```suggestion\r\n\t\t\tStage:       FeatureStageExperimental,\r\n\t\t\tFrontendOnly:      true,\r\n\t\t\tAllowSelfServe:    false,\r\n\t\t\tHideFromDocs:      true,\r\n\t\t\tHideFromAdminPage: true,\r\n```",
        "pr_file_module": null
      }
    ]
  }
]