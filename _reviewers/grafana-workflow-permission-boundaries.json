[
  {
    "discussion_id": "2100701264",
    "pr_number": 105760,
    "pr_file": ".github/workflows/grafana-nightly.yml",
    "created_at": "2025-05-21T16:19:07+00:00",
    "commented_code": "+name: Grafana Nightly\n+\n+on:\n+  # it's here for testing\n+  pull_request:\n+  schedule:\n+    - cron: \"0 2 * * *\"\n+jobs:\n+  test_backend:\n+    runs-on: ubuntu-latest-8-cores\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          persist-credentials: false\n+      - name: Setup Go\n+        uses: actions/setup-go@v5\n+        with:\n+          go-version-file: go.mod\n+          cache: true\n+      - name: Verify Gen-Cue\n+        run: CODEGEN_VERIFY=1 make gen-cue\n+      - name: Verify Gen Jsonnet\n+        run: CODEGEN_VERIFY=1 make gen-jsonnet\n+      - name: Wire install\n+        run: make gen-go\n+      - name: Test Backend\n+        run: go list -f '{{.Dir}}/...' -m | xargs go test -short -covermode=atomic -timeout=5m\n+      - name: Test Backend Integration\n+        run: |\n+          go test -count=1 -coveremode=atomic -timeout=5m -run '^TestIntegration' \\\n+          \"$(find ./pkg -type f -name '*_test.go' -exec grep -l '^func TestIntegration' '{}' '+' | \\\n+          grep -o '\\(.*\\)/' | sort -u)\"\n+  test_frontend:",
    "repo_full_name": "grafana/grafana",
    "discussion_comments": [
      {
        "comment_id": "2100701264",
        "repo_full_name": "grafana/grafana",
        "pr_number": 105760,
        "pr_file": ".github/workflows/grafana-nightly.yml",
        "discussion_id": "2100701264",
        "commented_code": "@@ -0,0 +1,48 @@\n+name: Grafana Nightly\n+\n+on:\n+  # it's here for testing\n+  pull_request:\n+  schedule:\n+    - cron: \"0 2 * * *\"\n+jobs:\n+  test_backend:\n+    runs-on: ubuntu-latest-8-cores\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          persist-credentials: false\n+      - name: Setup Go\n+        uses: actions/setup-go@v5\n+        with:\n+          go-version-file: go.mod\n+          cache: true\n+      - name: Verify Gen-Cue\n+        run: CODEGEN_VERIFY=1 make gen-cue\n+      - name: Verify Gen Jsonnet\n+        run: CODEGEN_VERIFY=1 make gen-jsonnet\n+      - name: Wire install\n+        run: make gen-go\n+      - name: Test Backend\n+        run: go list -f '{{.Dir}}/...' -m | xargs go test -short -covermode=atomic -timeout=5m\n+      - name: Test Backend Integration\n+        run: |\n+          go test -count=1 -coveremode=atomic -timeout=5m -run '^TestIntegration' \\\n+          \"$(find ./pkg -type f -name '*_test.go' -exec grep -l '^func TestIntegration' '{}' '+' | \\\n+          grep -o '\\(.*\\)/' | sort -u)\"\n+  test_frontend:",
        "comment_created_at": "2025-05-21T16:19:07+00:00",
        "comment_author": "github-advanced-security[bot]",
        "comment_body": "## Workflow does not contain permissions\n\nActions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}\n\n[Show more details](https://github.com/grafana/grafana/security/code-scanning/2893)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2100701268",
    "pr_number": 105760,
    "pr_file": ".github/workflows/grafana-nightly.yml",
    "created_at": "2025-05-21T16:19:07+00:00",
    "commented_code": "+name: Grafana Nightly\n+\n+on:\n+  # it's here for testing\n+  pull_request:\n+  schedule:\n+    - cron: \"0 2 * * *\"\n+jobs:\n+  test_backend:\n+    runs-on: ubuntu-latest-8-cores\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          persist-credentials: false\n+      - name: Setup Go\n+        uses: actions/setup-go@v5\n+        with:\n+          go-version-file: go.mod\n+          cache: true\n+      - name: Verify Gen-Cue\n+        run: CODEGEN_VERIFY=1 make gen-cue\n+      - name: Verify Gen Jsonnet\n+        run: CODEGEN_VERIFY=1 make gen-jsonnet\n+      - name: Wire install\n+        run: make gen-go\n+      - name: Test Backend\n+        run: go list -f '{{.Dir}}/...' -m | xargs go test -short -covermode=atomic -timeout=5m\n+      - name: Test Backend Integration\n+        run: |\n+          go test -count=1 -coveremode=atomic -timeout=5m -run '^TestIntegration' \\\n+          \"$(find ./pkg -type f -name '*_test.go' -exec grep -l '^func TestIntegration' '{}' '+' | \\\n+          grep -o '\\(.*\\)/' | sort -u)\"\n+  test_frontend:\n+    runs-on: ubuntu-latest-8-cores\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          persist-credentials: false\n+      - name: Yarn install\n+        run: yarn install --immutable || yarn install --immutable\n+      - name: Betterer\n+        run: yarn betterer:ci\n+      - name: Test Frontend\n+        env:\n+          TEST_MAX_WORKERS: 50%\n+        run: yarn run ci:test-frontend",
    "repo_full_name": "grafana/grafana",
    "discussion_comments": [
      {
        "comment_id": "2100701268",
        "repo_full_name": "grafana/grafana",
        "pr_number": 105760,
        "pr_file": ".github/workflows/grafana-nightly.yml",
        "discussion_id": "2100701268",
        "commented_code": "@@ -0,0 +1,48 @@\n+name: Grafana Nightly\n+\n+on:\n+  # it's here for testing\n+  pull_request:\n+  schedule:\n+    - cron: \"0 2 * * *\"\n+jobs:\n+  test_backend:\n+    runs-on: ubuntu-latest-8-cores\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          persist-credentials: false\n+      - name: Setup Go\n+        uses: actions/setup-go@v5\n+        with:\n+          go-version-file: go.mod\n+          cache: true\n+      - name: Verify Gen-Cue\n+        run: CODEGEN_VERIFY=1 make gen-cue\n+      - name: Verify Gen Jsonnet\n+        run: CODEGEN_VERIFY=1 make gen-jsonnet\n+      - name: Wire install\n+        run: make gen-go\n+      - name: Test Backend\n+        run: go list -f '{{.Dir}}/...' -m | xargs go test -short -covermode=atomic -timeout=5m\n+      - name: Test Backend Integration\n+        run: |\n+          go test -count=1 -coveremode=atomic -timeout=5m -run '^TestIntegration' \\\n+          \"$(find ./pkg -type f -name '*_test.go' -exec grep -l '^func TestIntegration' '{}' '+' | \\\n+          grep -o '\\(.*\\)/' | sort -u)\"\n+  test_frontend:\n+    runs-on: ubuntu-latest-8-cores\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          persist-credentials: false\n+      - name: Yarn install\n+        run: yarn install --immutable || yarn install --immutable\n+      - name: Betterer\n+        run: yarn betterer:ci\n+      - name: Test Frontend\n+        env:\n+          TEST_MAX_WORKERS: 50%\n+        run: yarn run ci:test-frontend",
        "comment_created_at": "2025-05-21T16:19:07+00:00",
        "comment_author": "github-advanced-security[bot]",
        "comment_body": "## Workflow does not contain permissions\n\nActions job or workflow does not limit the permissions of the GITHUB_TOKEN. Consider setting an explicit permissions block, using the following as a minimal starting point: {{contents: read}}\n\n[Show more details](https://github.com/grafana/grafana/security/code-scanning/2894)",
        "pr_file_module": null
      }
    ]
  }
]