[
  {
    "discussion_id": "1299519159",
    "pr_number": 7474,
    "pr_file": "languages.toml",
    "created_at": "2023-08-21T02:42:38+00:00",
    "commented_code": "roots = []\n indent = { tab-width = 2, unit = \"  \" }\n grammar = \"html\"\n+\n+[[language]]\n+name = \"typst\"\n+scope = \"source.typst\"\n+injection-regex = \"typst\"\n+file-types = [\"typst\", \"typ\"]\n+roots = []\n+comment-token = \"//\"\n+language-servers = [\"typst-lsp\"]\n+indent = { tab-width = 4, unit = \"    \" }",
    "repo_full_name": "helix-editor/helix",
    "discussion_comments": [
      {
        "comment_id": "1299519159",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 7474,
        "pr_file": "languages.toml",
        "discussion_id": "1299519159",
        "commented_code": "@@ -2635,3 +2636,17 @@ file-types = [\"webc\"]\n roots = []\n indent = { tab-width = 2, unit = \"  \" }\n grammar = \"html\"\n+\n+[[language]]\n+name = \"typst\"\n+scope = \"source.typst\"\n+injection-regex = \"typst\"\n+file-types = [\"typst\", \"typ\"]\n+roots = []\n+comment-token = \"//\"\n+language-servers = [\"typst-lsp\"]\n+indent = { tab-width = 4, unit = \"    \" }",
        "comment_created_at": "2023-08-21T02:42:38+00:00",
        "comment_author": "PerpetualCreativity",
        "comment_body": "FYI, the typst docs and online editor both use 2 spaces for indentation, not 4. [Here's an example.](https://typst.app/docs/tutorial/advanced-styling/#set-rules)",
        "pr_file_module": null
      },
      {
        "comment_id": "1299687107",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 7474,
        "pr_file": "languages.toml",
        "discussion_id": "1299519159",
        "commented_code": "@@ -2635,3 +2636,17 @@ file-types = [\"webc\"]\n roots = []\n indent = { tab-width = 2, unit = \"  \" }\n grammar = \"html\"\n+\n+[[language]]\n+name = \"typst\"\n+scope = \"source.typst\"\n+injection-regex = \"typst\"\n+file-types = [\"typst\", \"typ\"]\n+roots = []\n+comment-token = \"//\"\n+language-servers = [\"typst-lsp\"]\n+indent = { tab-width = 4, unit = \"    \" }",
        "comment_created_at": "2023-08-21T06:59:56+00:00",
        "comment_author": "AlexanderBrevig",
        "comment_body": "Thanks! That's true, I've fixed it \ud83d\udc4d\ud83c\udffb ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1466514937",
    "pr_number": 6652,
    "pr_file": "languages.toml",
    "created_at": "2024-01-25T15:08:49+00:00",
    "commented_code": "comment-token = \"#\"\n language-servers = [ \"pylsp\" ]\n # TODO: pyls needs utf-8 offsets\n-indent = { tab-width = 4, unit = \"    \" }\n+indent = { tab-width = 4, unit = \"    \", required = true }",
    "repo_full_name": "helix-editor/helix",
    "discussion_comments": [
      {
        "comment_id": "1466514937",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 6652,
        "pr_file": "languages.toml",
        "discussion_id": "1466514937",
        "commented_code": "@@ -695,7 +695,7 @@ roots = [\"pyproject.toml\", \"setup.py\", \"poetry.lock\", \"pyrightconfig.json\"]\n comment-token = \"#\"\n language-servers = [ \"pylsp\" ]\n # TODO: pyls needs utf-8 offsets\n-indent = { tab-width = 4, unit = \"    \" }\n+indent = { tab-width = 4, unit = \"    \", required = true }",
        "comment_created_at": "2024-01-25T15:08:49+00:00",
        "comment_author": "magistau",
        "comment_body": "\r\n```suggestion\r\nindent = { tab-width = 4, unit = \"    \" }\r\n```\r\nPython allows using hard tabs for indentation (and actually any amount of spaces works too), it only disallows ambiguous mixing (i.e. when semantics depend on a specific tab width)",
        "pr_file_module": null
      },
      {
        "comment_id": "1466697780",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 6652,
        "pr_file": "languages.toml",
        "discussion_id": "1466514937",
        "commented_code": "@@ -695,7 +695,7 @@ roots = [\"pyproject.toml\", \"setup.py\", \"poetry.lock\", \"pyrightconfig.json\"]\n comment-token = \"#\"\n language-servers = [ \"pylsp\" ]\n # TODO: pyls needs utf-8 offsets\n-indent = { tab-width = 4, unit = \"    \" }\n+indent = { tab-width = 4, unit = \"    \", required = true }",
        "comment_created_at": "2024-01-25T17:17:27+00:00",
        "comment_author": "nnym",
        "comment_body": "I didn't mark the indentation style as `required` because Python requires it; I did it in order to override the global setting for conformance with PEP 8.",
        "pr_file_module": null
      },
      {
        "comment_id": "1466810707",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 6652,
        "pr_file": "languages.toml",
        "discussion_id": "1466514937",
        "commented_code": "@@ -695,7 +695,7 @@ roots = [\"pyproject.toml\", \"setup.py\", \"poetry.lock\", \"pyrightconfig.json\"]\n comment-token = \"#\"\n language-servers = [ \"pylsp\" ]\n # TODO: pyls needs utf-8 offsets\n-indent = { tab-width = 4, unit = \"    \" }\n+indent = { tab-width = 4, unit = \"    \", required = true }",
        "comment_created_at": "2024-01-25T19:09:15+00:00",
        "comment_author": "magistau",
        "comment_body": "I think `required` should only be applied to languages that do not support using tabs (like Nim) or spaces (like Makefile); everything else is basically just your stylistic choice which shouldn't affect anyone else. I mean, that's exactly the reason for using tabs instead of spaces.",
        "pr_file_module": null
      },
      {
        "comment_id": "1466824720",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 6652,
        "pr_file": "languages.toml",
        "discussion_id": "1466514937",
        "commented_code": "@@ -695,7 +695,7 @@ roots = [\"pyproject.toml\", \"setup.py\", \"poetry.lock\", \"pyrightconfig.json\"]\n comment-token = \"#\"\n language-servers = [ \"pylsp\" ]\n # TODO: pyls needs utf-8 offsets\n-indent = { tab-width = 4, unit = \"    \" }\n+indent = { tab-width = 4, unit = \"    \", required = true }",
        "comment_created_at": "2024-01-25T19:24:13+00:00",
        "comment_author": "nnym",
        "comment_body": "I agree\u2014I use tabs in Python and everywhere else\u2014but this felt right to me at the time. In any case, I'll leave the decision to the maintainers.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1991637403",
    "pr_number": 13081,
    "pr_file": "languages.toml",
    "created_at": "2025-03-12T14:32:42+00:00",
    "commented_code": "[[grammar]]\n name = \"sourcepawn\"\n source = { git = \"https://github.com/nilshelmig/tree-sitter-sourcepawn\", rev = \"f2af8d0dc14c6790130cceb2a20027eb41a8297c\" }\n+\n+[[language]]\n+name = \"tlaplus\"\n+scope = \"scope.tlaplus\"\n+injection-regex = \"tla\"\n+file-types = [\"tla\"]\n+comment-tokens = \"\\\\*\"\n+block-comment-tokens = {start = \"(*\", end=\"*)\"}\n+indent = {tab-width = 4, unit = \" \"}\n+formatter = {command = \"tlafmt\", args = [\"--stdin\"]}\n+auto-format = true",
    "repo_full_name": "helix-editor/helix",
    "discussion_comments": [
      {
        "comment_id": "1991637403",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 13081,
        "pr_file": "languages.toml",
        "discussion_id": "1991637403",
        "commented_code": "@@ -4226,3 +4226,19 @@ language-servers = [\"sourcepawn-studio\"]\n [[grammar]]\n name = \"sourcepawn\"\n source = { git = \"https://github.com/nilshelmig/tree-sitter-sourcepawn\", rev = \"f2af8d0dc14c6790130cceb2a20027eb41a8297c\" }\n+\n+[[language]]\n+name = \"tlaplus\"\n+scope = \"scope.tlaplus\"\n+injection-regex = \"tla\"\n+file-types = [\"tla\"]\n+comment-tokens = \"\\\\*\"\n+block-comment-tokens = {start = \"(*\", end=\"*)\"}\n+indent = {tab-width = 4, unit = \" \"}\n+formatter = {command = \"tlafmt\", args = [\"--stdin\"]}\n+auto-format = true",
        "comment_created_at": "2025-03-12T14:32:42+00:00",
        "comment_author": "the-mikedavis",
        "comment_body": "Configuring a formatter is ok but we shouldn't enable `auto-format` unless formatting for TLA+ is a standard practice\r\n\r\n```suggestion\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1678462645",
    "pr_number": 11171,
    "pr_file": "runtime/themes/synthwave_84.toml",
    "created_at": "2024-07-15T22:30:03+00:00",
    "commented_code": "+# User interface\n+\"ui.background\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.background.separator\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.cursor\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.normal\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.insert\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.select\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.match\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.primary\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.primary.normal\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.primary.insert\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.primary.select\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.debug.breakpoint\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.debug.active\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.gutter\" = { fg = \"#ffffff73\" }\n+\"ui.gutter.selected\" = { fg = \"#ffffffcc\" }\n+\"ui.highlight.frameline\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.linenr\" = { fg = \"#ffffff73\" }\n+\"ui.linenr.selected\" = { fg = \"#ffffffcc\" }\n+\"ui.statusline\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.inactive\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.normal\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.insert\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.select\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.separator\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.bufferline\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.bufferline.active\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.bufferline.background\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.popup\" = { fg = \"white\", bg = \"#171520DC\" }\n+\"ui.popup.info\" = { fg = \"white\", bg = \"#171520DC\" }\n+\"ui.window\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.help\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.text\" = { fg = \"white\" }\n+\"ui.text.focus\" = { fg = \"white\" }\n+\"ui.text.inactive\" = { fg = \"white\" }\n+\"ui.text.info\" = { fg = \"white\" }\n+\"ui.virtual.ruler\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.whitespace\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.indent-guide\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.inlay-hint\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.inlay-hint.parameter\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.inlay-hint.type\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.wrap\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.jump-label\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.menu\" = { fg = \"white\", bg = \"#463465\" }\n+\"ui.menu.selected\" = { fg = \"white\", bg = \"#ffffff36\" }\n+\"ui.menu.scroll\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.selection\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.selection.primary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.highlight\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.cursorline.primary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.cursorline.secondary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.cursorcolumn.primary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.cursorcolumn.secondary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"warning\" = { fg = \"yellow\", bg = \"#262335\" }\n+\"error\" = { fg = \"red\", bg = \"#262335\" }\n+\"info\" = { fg = \"light-cyan\", bg = \"#262335\" }\n+\"hint\" = { fg = \"light-green\", bg = \"#262335\" }\n+\"diagnostic\" = { fg = \"white\", bg = \"#262335\" }\n+\"diagnostic.hint\" = { fg = \"light-green\", bg = \"#262335\" }\n+\"diagnostic.info\" = { fg = \"light-cyan\", bg = \"#262335\" }\n+\"diagnostic.warning\" = { fg = \"yellow\", bg = \"#262335\" }\n+\"diagnostic.error\" = { fg = \"red\", bg = \"#262335\" }\n+\"diagnostic.unnecessary\" = { fg = \"white\", bg = \"#262335\" }\n+\"diagnostic.deprecated\" = { fg = \"white\", bg = \"#262335\" }\n+\n+# Syntax highlighting\n+\"attribute\" = { fg = \"white\", bg = \"#262335\" }\n+\"type\" = { fg = \"yellow\" }\n+\"type.builtin\" = { fg = \"yellow\" }\n+\"type.parameter\" = { fg = \"yellow\" }\n+\"type.enum\" = { fg = \"yellow\" }\n+\"type.enum.variant\" = { fg = \"yellow\" }\n+\"constructor\" = { fg = \"white\", bg = \"#262335\" }\n+\"constant\" = { fg = \"light-red\" }\n+\"constant.builtin\" = { fg = \"light-red\" }\n+\"constant.builtin.boolean\" = { fg = \"light-red\" }\n+\"constant.character\" = { fg = \"light-red\" }\n+\"constant.character.escape\" = { fg = \"light-cyan\" }\n+\"constant.numeric\" = { fg = \"light-red\" }\n+\"constant.numeric.integer\" = { fg = \"light-red\" }\n+\"constant.numeric.float\" = { fg = \"light-red\" }\n+\"string\" = { fg = \"#ff8b39\" }\n+\"string.regexp\" = { fg = \"#ff8b39\" }\n+\"string.special\" = { fg = \"#ff8b39\" }\n+\"string.special.path\" = { fg = \"#ff8b39\" }\n+\"string.special.url\" = { fg = \"#ff8b39\" }\n+\"string.special.symbol\" = { fg = \"#ff8b39\" }\n+\"comment\" = { fg = \"gray\", modifiers = [\"italic\"] }\n+\"comment.line\" = { fg = \"gray\", modifiers = [\"italic\"] }\n+\"comment.block\" = { fg = \"gray\", modifiers = [\"italic\"] }\n+\"comment.block.documentation\" = { fg = \"gray\", modifiers = [\"italic\"] }\n+\"variable\" = { fg = \"magenta\" }\n+\"variable.builtin\" = { fg = \"red\", modifiers = [\"bold\"] }\n+\"variable.parameter\" = { modifiers = [\"italic\"] }\n+\"variable.other\" = { fg = \"magenta\" }\n+\"variable.other.member\" = { fg = \"magenta\" }\n+\"variable.other.member.private\" = { fg = \"magenta\" }\n+\"label\" = { fg = \"white\", bg = \"#262335\" }\n+\"punctuation\" = { fg = \"white\", bg = \"#262335\" }\n+\"punctuation.delimiter\" = { fg = \"white\", bg = \"#262335\" }\n+\"punctuation.bracket\" = { fg = \"white\", bg = \"#262335\" }\n+\"punctuation.special\" = { fg = \"white\", bg = \"#262335\" }\n+\"keyword\" = { fg = \"yellow\" }\n+\"keyword.control\" = { fg = \"yellow\" }\n+\"keyword.control.conditional\" = { fg = \"yellow\" }\n+\"keyword.control.repeat\" = { fg = \"yellow\" }\n+\"keyword.control.import\" = { fg = \"yellow\" }\n+\"keyword.control.return\" = { fg = \"yellow\" }\n+\"keyword.control.exception\" = { fg = \"yellow\" }\n+\"keyword.operator\" = { fg = \"yellow\" }\n+\"keyword.directive\" = { fg = \"yellow\" }\n+\"keyword.function\" = { fg = \"yellow\" }\n+\"keyword.storage\" = { fg = \"yellow\" }\n+\"keyword.storage.type\" = { fg = \"yellow\" }\n+\"keyword.storage.modifier\" = { fg = \"yellow\" }\n+\"operator\" = { fg = \"yellow\" }\n+\"function\" = { fg = \"light-cyan\" }\n+\"function.builtin\" = { fg = \"light-cyan\" }\n+\"function.method\" = { fg = \"light-cyan\" }\n+\"function.method.private\" = { fg = \"light-cyan\" }\n+\"function.macro\" = { fg = \"light-cyan\" }\n+\"function.special\" = { fg = \"light-cyan\" }\n+\"function.special.preprocessor\" = { fg = \"light-cyan\" }\n+\"tag\" = { fg = \"green\" }\n+\"tag.builtin\" = { fg = \"green\" }\n+\"namespace\" = { fg = \"white\", bg = \"#262335\" }\n+\"special\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.heading\" = { fg = \"magenta\" }\n+\"markup.heading.marker\" = { fg = \"magenta\" }\n+\"markup.heading.1\" = { fg = \"magenta\" }\n+\"markup.heading.2\" = { fg = \"magenta\" }\n+\"markup.heading.3\" = { fg = \"magenta\" }\n+\"markup.heading.4\" = { fg = \"magenta\" }\n+\"markup.heading.5\" = { fg = \"magenta\" }\n+\"markup.heading.6\" = { fg = \"magenta\" }\n+\"markup.list\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.list.unnumbered\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.list.numbered\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.list.checked\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.list.unchecked\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.bold\" = { fg = \"light-cyan\", modifiers = [\"bold\"] }\n+\"markup.italic\" = { fg = \"light-cyan\", modifiers = [\"italic\"] }\n+\"markup.strikethrough\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.link\" = { fg = \"#D50\" }\n+\"markup.link.url\" = { fg = \"#D50\" }\n+\"markup.link.label\" = { fg = \"#D50\" }\n+\"markup.link.text\" = { fg = \"#D50\" }",
    "repo_full_name": "helix-editor/helix",
    "discussion_comments": [
      {
        "comment_id": "1678462645",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 11171,
        "pr_file": "runtime/themes/synthwave_84.toml",
        "discussion_id": "1678462645",
        "commented_code": "@@ -0,0 +1,184 @@\n+# User interface\n+\"ui.background\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.background.separator\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.cursor\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.normal\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.insert\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.select\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.match\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.primary\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.primary.normal\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.primary.insert\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.cursor.primary.select\" = { fg = \"white\", bg = \"#f97e72\" }\n+\"ui.debug.breakpoint\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.debug.active\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.gutter\" = { fg = \"#ffffff73\" }\n+\"ui.gutter.selected\" = { fg = \"#ffffffcc\" }\n+\"ui.highlight.frameline\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.linenr\" = { fg = \"#ffffff73\" }\n+\"ui.linenr.selected\" = { fg = \"#ffffffcc\" }\n+\"ui.statusline\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.inactive\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.normal\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.insert\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.select\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.statusline.separator\" = { fg = \"#ffffff80\", bg = \"#241b2f\" }\n+\"ui.bufferline\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.bufferline.active\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.bufferline.background\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.popup\" = { fg = \"white\", bg = \"#171520DC\" }\n+\"ui.popup.info\" = { fg = \"white\", bg = \"#171520DC\" }\n+\"ui.window\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.help\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.text\" = { fg = \"white\" }\n+\"ui.text.focus\" = { fg = \"white\" }\n+\"ui.text.inactive\" = { fg = \"white\" }\n+\"ui.text.info\" = { fg = \"white\" }\n+\"ui.virtual.ruler\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.whitespace\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.indent-guide\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.inlay-hint\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.inlay-hint.parameter\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.inlay-hint.type\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.wrap\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.virtual.jump-label\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.menu\" = { fg = \"white\", bg = \"#463465\" }\n+\"ui.menu.selected\" = { fg = \"white\", bg = \"#ffffff36\" }\n+\"ui.menu.scroll\" = { fg = \"white\", bg = \"#262335\" }\n+\"ui.selection\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.selection.primary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.highlight\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.cursorline.primary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.cursorline.secondary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.cursorcolumn.primary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"ui.cursorcolumn.secondary\" = { fg = \"white\", bg = \"#ffffff20\" }\n+\"warning\" = { fg = \"yellow\", bg = \"#262335\" }\n+\"error\" = { fg = \"red\", bg = \"#262335\" }\n+\"info\" = { fg = \"light-cyan\", bg = \"#262335\" }\n+\"hint\" = { fg = \"light-green\", bg = \"#262335\" }\n+\"diagnostic\" = { fg = \"white\", bg = \"#262335\" }\n+\"diagnostic.hint\" = { fg = \"light-green\", bg = \"#262335\" }\n+\"diagnostic.info\" = { fg = \"light-cyan\", bg = \"#262335\" }\n+\"diagnostic.warning\" = { fg = \"yellow\", bg = \"#262335\" }\n+\"diagnostic.error\" = { fg = \"red\", bg = \"#262335\" }\n+\"diagnostic.unnecessary\" = { fg = \"white\", bg = \"#262335\" }\n+\"diagnostic.deprecated\" = { fg = \"white\", bg = \"#262335\" }\n+\n+# Syntax highlighting\n+\"attribute\" = { fg = \"white\", bg = \"#262335\" }\n+\"type\" = { fg = \"yellow\" }\n+\"type.builtin\" = { fg = \"yellow\" }\n+\"type.parameter\" = { fg = \"yellow\" }\n+\"type.enum\" = { fg = \"yellow\" }\n+\"type.enum.variant\" = { fg = \"yellow\" }\n+\"constructor\" = { fg = \"white\", bg = \"#262335\" }\n+\"constant\" = { fg = \"light-red\" }\n+\"constant.builtin\" = { fg = \"light-red\" }\n+\"constant.builtin.boolean\" = { fg = \"light-red\" }\n+\"constant.character\" = { fg = \"light-red\" }\n+\"constant.character.escape\" = { fg = \"light-cyan\" }\n+\"constant.numeric\" = { fg = \"light-red\" }\n+\"constant.numeric.integer\" = { fg = \"light-red\" }\n+\"constant.numeric.float\" = { fg = \"light-red\" }\n+\"string\" = { fg = \"#ff8b39\" }\n+\"string.regexp\" = { fg = \"#ff8b39\" }\n+\"string.special\" = { fg = \"#ff8b39\" }\n+\"string.special.path\" = { fg = \"#ff8b39\" }\n+\"string.special.url\" = { fg = \"#ff8b39\" }\n+\"string.special.symbol\" = { fg = \"#ff8b39\" }\n+\"comment\" = { fg = \"gray\", modifiers = [\"italic\"] }\n+\"comment.line\" = { fg = \"gray\", modifiers = [\"italic\"] }\n+\"comment.block\" = { fg = \"gray\", modifiers = [\"italic\"] }\n+\"comment.block.documentation\" = { fg = \"gray\", modifiers = [\"italic\"] }\n+\"variable\" = { fg = \"magenta\" }\n+\"variable.builtin\" = { fg = \"red\", modifiers = [\"bold\"] }\n+\"variable.parameter\" = { modifiers = [\"italic\"] }\n+\"variable.other\" = { fg = \"magenta\" }\n+\"variable.other.member\" = { fg = \"magenta\" }\n+\"variable.other.member.private\" = { fg = \"magenta\" }\n+\"label\" = { fg = \"white\", bg = \"#262335\" }\n+\"punctuation\" = { fg = \"white\", bg = \"#262335\" }\n+\"punctuation.delimiter\" = { fg = \"white\", bg = \"#262335\" }\n+\"punctuation.bracket\" = { fg = \"white\", bg = \"#262335\" }\n+\"punctuation.special\" = { fg = \"white\", bg = \"#262335\" }\n+\"keyword\" = { fg = \"yellow\" }\n+\"keyword.control\" = { fg = \"yellow\" }\n+\"keyword.control.conditional\" = { fg = \"yellow\" }\n+\"keyword.control.repeat\" = { fg = \"yellow\" }\n+\"keyword.control.import\" = { fg = \"yellow\" }\n+\"keyword.control.return\" = { fg = \"yellow\" }\n+\"keyword.control.exception\" = { fg = \"yellow\" }\n+\"keyword.operator\" = { fg = \"yellow\" }\n+\"keyword.directive\" = { fg = \"yellow\" }\n+\"keyword.function\" = { fg = \"yellow\" }\n+\"keyword.storage\" = { fg = \"yellow\" }\n+\"keyword.storage.type\" = { fg = \"yellow\" }\n+\"keyword.storage.modifier\" = { fg = \"yellow\" }\n+\"operator\" = { fg = \"yellow\" }\n+\"function\" = { fg = \"light-cyan\" }\n+\"function.builtin\" = { fg = \"light-cyan\" }\n+\"function.method\" = { fg = \"light-cyan\" }\n+\"function.method.private\" = { fg = \"light-cyan\" }\n+\"function.macro\" = { fg = \"light-cyan\" }\n+\"function.special\" = { fg = \"light-cyan\" }\n+\"function.special.preprocessor\" = { fg = \"light-cyan\" }\n+\"tag\" = { fg = \"green\" }\n+\"tag.builtin\" = { fg = \"green\" }\n+\"namespace\" = { fg = \"white\", bg = \"#262335\" }\n+\"special\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.heading\" = { fg = \"magenta\" }\n+\"markup.heading.marker\" = { fg = \"magenta\" }\n+\"markup.heading.1\" = { fg = \"magenta\" }\n+\"markup.heading.2\" = { fg = \"magenta\" }\n+\"markup.heading.3\" = { fg = \"magenta\" }\n+\"markup.heading.4\" = { fg = \"magenta\" }\n+\"markup.heading.5\" = { fg = \"magenta\" }\n+\"markup.heading.6\" = { fg = \"magenta\" }\n+\"markup.list\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.list.unnumbered\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.list.numbered\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.list.checked\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.list.unchecked\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.bold\" = { fg = \"light-cyan\", modifiers = [\"bold\"] }\n+\"markup.italic\" = { fg = \"light-cyan\", modifiers = [\"italic\"] }\n+\"markup.strikethrough\" = { fg = \"white\", bg = \"#262335\" }\n+\"markup.link\" = { fg = \"#D50\" }\n+\"markup.link.url\" = { fg = \"#D50\" }\n+\"markup.link.label\" = { fg = \"#D50\" }\n+\"markup.link.text\" = { fg = \"#D50\" }",
        "comment_created_at": "2024-07-15T22:30:03+00:00",
        "comment_author": "the-mikedavis",
        "comment_body": "We don't parse 3-character hex codes so this will need to be expanded to the 6 character version",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1935521794",
    "pr_number": 12096,
    "pr_file": "languages.toml",
    "created_at": "2025-01-30T12:22:16+00:00",
    "commented_code": "comment-token = \"//\"\n block-comment-tokens = { start = \"/*\", end = \"*/\" }\n language-servers = [ \"typescript-language-server\" ]\n+formatter = { command = \"prettier\" }\n+# Alternative formatters (for your own `languages.toml` file in ~/.config/helix`\n+# replace the line above with one below)\n+# formatter = { command = \"biome\", args = [\"format\"] }\n+# formatter = { command = \"deno\", args = [\"format\"] }",
    "repo_full_name": "helix-editor/helix",
    "discussion_comments": [
      {
        "comment_id": "1935521794",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 12096,
        "pr_file": "languages.toml",
        "discussion_id": "1935521794",
        "commented_code": "@@ -764,6 +764,11 @@ roots = [ \"package.json\" ]\n comment-token = \"//\"\n block-comment-tokens = { start = \"/*\", end = \"*/\" }\n language-servers = [ \"typescript-language-server\" ]\n+formatter = { command = \"prettier\" }\n+# Alternative formatters (for your own `languages.toml` file in ~/.config/helix`\n+# replace the line above with one below)\n+# formatter = { command = \"biome\", args = [\"format\"] }\n+# formatter = { command = \"deno\", args = [\"format\"] }",
        "comment_created_at": "2025-01-30T12:22:16+00:00",
        "comment_author": "aster-void",
        "comment_body": "these commands don't seem work. ig you meant something like\r\n\r\n```toml\r\nformatter = { command = \"prettier\", args = [\"--parser=typescript\"] } # prettier doesn't have parser for JS\r\nformatter = { command = \"biome\", args = [\"format\", \"--stdin-file-path=a.js\"] }\r\nformatter = { command = \"deno\", args = [\"fmt\", \"--ext\", \"js\"] }\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1935530216",
        "repo_full_name": "helix-editor/helix",
        "pr_number": 12096,
        "pr_file": "languages.toml",
        "discussion_id": "1935521794",
        "commented_code": "@@ -764,6 +764,11 @@ roots = [ \"package.json\" ]\n comment-token = \"//\"\n block-comment-tokens = { start = \"/*\", end = \"*/\" }\n language-servers = [ \"typescript-language-server\" ]\n+formatter = { command = \"prettier\" }\n+# Alternative formatters (for your own `languages.toml` file in ~/.config/helix`\n+# replace the line above with one below)\n+# formatter = { command = \"biome\", args = [\"format\"] }\n+# formatter = { command = \"deno\", args = [\"format\"] }",
        "comment_created_at": "2025-01-30T12:28:49+00:00",
        "comment_author": "David-Else",
        "comment_body": "Yes, for Prettier, these are correct:\r\n```\r\n[[language]]\r\nname = \"html\"\r\nformatter = { command = 'prettier', args = [\"--parser\", \"html\"] }\r\n\r\n[[language]]\r\nname = \"json\"\r\nformatter = { command = 'prettier', args = [\"--parser\", \"json\"] }\r\n\r\n[[language]]\r\nname = \"css\"\r\nformatter = { command = 'prettier', args = [\"--parser\", \"css\"] }\r\n\r\n[[language]]\r\nname = \"yaml\"\r\nformatter = { command = 'prettier', args = [\"--parser\", \"yaml\"] }\r\n\r\n[[language]]\r\nname = \"javascript\"\r\nformatter = { command = 'prettier', args = [\"--parser\", \"typescript\"] }\r\n\r\n[[language]]\r\nname = \"typescript\"\r\nformatter = { command = 'prettier', args = [\"--parser\", \"typescript\"] }\r\n```",
        "pr_file_module": null
      }
    ]
  }
]