[
  {
    "discussion_id": "2225730940",
    "pr_number": 11117,
    "pr_file": "src/Compositor.hpp",
    "created_at": "2025-07-23T14:06:44+00:00",
    "commented_code": "NColorManagement::SImageDescription getPreferredImageDescription();\n     bool                                shouldChangePreferredImageDescription();\n \n-    std::string                         m_explicitConfigPath;\n+    bool                                supportsDrmSyncobjTimeline() const {\n+        return m_bDrmSyncobjTimelineSupported;",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "2225730940",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 11117,
        "pr_file": "src/Compositor.hpp",
        "discussion_id": "2225730940",
        "commented_code": "@@ -152,7 +152,11 @@ class CCompositor {\n     NColorManagement::SImageDescription getPreferredImageDescription();\n     bool                                shouldChangePreferredImageDescription();\n \n-    std::string                         m_explicitConfigPath;\n+    bool                                supportsDrmSyncobjTimeline() const {\n+        return m_bDrmSyncobjTimelineSupported;",
        "comment_created_at": "2025-07-23T14:06:44+00:00",
        "comment_author": "vaxerski",
        "comment_body": "this was unnecessary, please keep function bodies outside of headers",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2010147161",
    "pr_number": 9600,
    "pr_file": "assets/shaders/CM.frag",
    "created_at": "2025-03-24T13:06:59+00:00",
    "commented_code": "+#version 300 es",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "2010147161",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9600,
        "pr_file": "assets/shaders/CM.frag",
        "discussion_id": "2010147161",
        "commented_code": "@@ -0,0 +1,55 @@\n+#version 300 es",
        "comment_created_at": "2025-03-24T13:06:59+00:00",
        "comment_author": "vaxerski",
        "comment_body": "all .frag files: I'd prefer them in `src/render/shaders/glsl`, then compiled to `src/render/shaders`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1020822562",
    "pr_number": 1000,
    "pr_file": "src/includes.hpp",
    "created_at": "2022-11-13T00:33:46+00:00",
    "commented_code": "#endif\n \n #include <X11/Xlib.h>\n+#include <fcntl.h>",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1020822562",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 1000,
        "pr_file": "src/includes.hpp",
        "discussion_id": "1020822562",
        "commented_code": "@@ -7,9 +7,11 @@\n #endif\n \n #include <X11/Xlib.h>\n+#include <fcntl.h>",
        "comment_created_at": "2022-11-13T00:33:46+00:00",
        "comment_author": "vaxerski",
        "comment_body": "no need to add additional includes here - my original mistake of doing that pays now.\r\n\r\nMove them to keybindmanager.cpp to shorten compile time.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1938588460",
    "pr_number": 9226,
    "pr_file": "src/desktop/Window.hpp",
    "created_at": "2025-02-02T21:50:33+00:00",
    "commented_code": "#include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1938588460",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T21:50:33+00:00",
        "comment_author": "zjeffer",
        "comment_body": "My plugin doesn't build because of this line, with the following error:\r\n\r\n```\r\n\u2570\u2500\u276f make all\r\nHyprland headers found.\r\nBuilding with XWayland support.\r\ng++ -shared -g -fPIC --no-gnu-unique -std=c++23 `pkg-config --cflags pixman-1 libdrm hyprland` -Iinclude -DWLR_USE_UNSTABLE src/main.cpp -o split-monitor-workspaces.so\r\nIn file included from /usr/include/hyprland/src/Compositor.hpp:8,\r\n                 from src/main.cpp:3:\r\n/usr/include/hyprland/src/desktop/Window.hpp:22:10: fatal error: protocols/types/ContentType.hpp: No such file or directory\r\n   22 | #include \"protocols/types/ContentType.hpp\"\r\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ncompilation terminated.\r\nmake: *** [Makefile:38: split-monitor-workspaces.so] Error 1\r\n```\r\nIt does build if I change the line to `#include \"../protocols/types/ContentType.hpp\"` (which is also where the actual file is). Any ideas why this happens?\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1938591694",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T22:07:36+00:00",
        "comment_author": "UjinT34",
        "comment_body": "It might be a correct path when building from the source directory. Otherwise it's strange that CI didn't catch it. Most of the imports in this PR are generated by IDE.",
        "pr_file_module": null
      },
      {
        "comment_id": "1938592883",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T22:12:05+00:00",
        "comment_author": "zjeffer",
        "comment_body": "> Most of the imports in this PR are generated by IDE.\r\n\r\nDid you work in the src/ folder in your IDE while developing this, instead of the root folder?",
        "pr_file_module": null
      },
      {
        "comment_id": "1938593451",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T22:14:23+00:00",
        "comment_author": "vaxerski",
        "comment_body": "oh yeah I missed this... we can't have imports using src paths\r\nalways relative",
        "pr_file_module": null
      },
      {
        "comment_id": "1938593840",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T22:16:06+00:00",
        "comment_author": "vaxerski",
        "comment_body": "fixed",
        "pr_file_module": null
      },
      {
        "comment_id": "1938594203",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T22:17:18+00:00",
        "comment_author": "zjeffer",
        "comment_body": "thx",
        "pr_file_module": null
      },
      {
        "comment_id": "1938594422",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T22:18:17+00:00",
        "comment_author": "zjeffer",
        "comment_body": "You missed one in `src/desktop/Window.hpp`",
        "pr_file_module": null
      },
      {
        "comment_id": "1938594812",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T22:19:36+00:00",
        "comment_author": "zjeffer",
        "comment_body": "and in `src/events/Windows.cpp`\r\nand likely some other places ;)",
        "pr_file_module": null
      },
      {
        "comment_id": "1938595029",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T22:20:34+00:00",
        "comment_author": "vaxerski",
        "comment_body": "better?\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1938595503",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9226,
        "pr_file": "src/desktop/Window.hpp",
        "discussion_id": "1938588460",
        "commented_code": "@@ -19,6 +19,7 @@\n #include \"WLSurface.hpp\"\n #include \"Workspace.hpp\"\n #include \"WindowRule.hpp\"\n+#include \"protocols/types/ContentType.hpp\"",
        "comment_created_at": "2025-02-02T22:22:49+00:00",
        "comment_author": "zjeffer",
        "comment_body": "Yes, ty",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1666802944",
    "pr_number": 6745,
    "pr_file": "src/debug/HyprCtl.hpp",
    "created_at": "2024-07-05T13:21:21+00:00",
    "commented_code": "wl_event_source*                 m_eventSource = nullptr;\n };\n \n+namespace HyprCtl {\n+    std::string getWindowData(PHLWINDOW w, eHyprCtlOutputFormat format);",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1666802944",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 6745,
        "pr_file": "src/debug/HyprCtl.hpp",
        "discussion_id": "1666802944",
        "commented_code": "@@ -29,4 +29,11 @@ class CHyprCtl {\n     wl_event_source*                 m_eventSource = nullptr;\n };\n \n+namespace HyprCtl {\n+    std::string getWindowData(PHLWINDOW w, eHyprCtlOutputFormat format);",
        "comment_created_at": "2024-07-05T13:21:21+00:00",
        "comment_author": "vaxerski",
        "comment_body": "why not put them inside CHyprCtl? It's a singleton. If you prefer, you can even make these static.",
        "pr_file_module": null
      },
      {
        "comment_id": "1667376189",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 6745,
        "pr_file": "src/debug/HyprCtl.hpp",
        "discussion_id": "1666802944",
        "commented_code": "@@ -29,4 +29,11 @@ class CHyprCtl {\n     wl_event_source*                 m_eventSource = nullptr;\n };\n \n+namespace HyprCtl {\n+    std::string getWindowData(PHLWINDOW w, eHyprCtlOutputFormat format);",
        "comment_created_at": "2024-07-06T14:38:09+00:00",
        "comment_author": "Yusuf-Duran",
        "comment_body": "Aight done chief :saluting_face: . Should I just add every method into the class and make it static in case someone else needs it in the future, or you want it not to be more cluttered than needed?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1615264505",
    "pr_number": 6211,
    "pr_file": "src/helpers/TagKeeper.hpp",
    "created_at": "2024-05-26T16:54:50+00:00",
    "commented_code": "+#pragma once\n+\n+#include <string>\n+#include <set>\n+\n+class TagKeeper {\n+  private:",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1615264505",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 6211,
        "pr_file": "src/helpers/TagKeeper.hpp",
        "discussion_id": "1615264505",
        "commented_code": "@@ -0,0 +1,18 @@\n+#pragma once\n+\n+#include <string>\n+#include <set>\n+\n+class TagKeeper {\n+  private:",
        "comment_created_at": "2024-05-26T16:54:50+00:00",
        "comment_author": "vaxerski",
        "comment_body": "private comes last",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1608194089",
    "pr_number": 6138,
    "pr_file": "src/helpers/FontUtils.hpp",
    "created_at": "2024-05-21T11:56:35+00:00",
    "commented_code": "+#pragma once\n+\n+#include <string>\n+\n+int count_missing_glyphs(const std::string& text, const std::string& fontFamily);",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1608194089",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 6138,
        "pr_file": "src/helpers/FontUtils.hpp",
        "discussion_id": "1608194089",
        "commented_code": "@@ -0,0 +1,5 @@\n+#pragma once\n+\n+#include <string>\n+\n+int count_missing_glyphs(const std::string& text, const std::string& fontFamily);",
        "comment_created_at": "2024-05-21T11:56:35+00:00",
        "comment_author": "vaxerski",
        "comment_body": "I'd avoid global funcs tbh. Why not `namespace FontUtils`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1608349498",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 6138,
        "pr_file": "src/helpers/FontUtils.hpp",
        "discussion_id": "1608194089",
        "commented_code": "@@ -0,0 +1,5 @@\n+#pragma once\n+\n+#include <string>\n+\n+int count_missing_glyphs(const std::string& text, const std::string& fontFamily);",
        "comment_created_at": "2024-05-21T13:35:51+00:00",
        "comment_author": "rtgiskard",
        "comment_body": "Let me say, should we just write an inline function, and reuse the cairo context, pango layout and font description in `drawNotifications()`, as it's called quite frequently, the `iconBackendFromFont()` and `countMissingGlyphs()` are not likely to be reused anywhere else.",
        "pr_file_module": null
      },
      {
        "comment_id": "1608387339",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 6138,
        "pr_file": "src/helpers/FontUtils.hpp",
        "discussion_id": "1608194089",
        "commented_code": "@@ -0,0 +1,5 @@\n+#pragma once\n+\n+#include <string>\n+\n+int count_missing_glyphs(const std::string& text, const std::string& fontFamily);",
        "comment_created_at": "2024-05-21T13:58:30+00:00",
        "comment_author": "rtgiskard",
        "comment_body": "Replaced with `iconBackendFromLayout()`, which should be much better",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1477109862",
    "pr_number": 4514,
    "pr_file": "src/SharedDefs.hpp",
    "created_at": "2024-02-03T18:26:36+00:00",
    "commented_code": "bool operator==(const SWindowDecorationExtents& other) const {\n         return topLeft == other.topLeft && bottomRight == other.bottomRight;\n     }\n-};\n\\ No newline at end of file\n+\n+    void addExtents(const SWindowDecorationExtents& other) {\n+        this->topLeft     = this->topLeft.getComponentMax(other.topLeft);",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1477109862",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 4514,
        "pr_file": "src/SharedDefs.hpp",
        "discussion_id": "1477109862",
        "commented_code": "@@ -52,4 +52,9 @@ struct SWindowDecorationExtents {\n     bool operator==(const SWindowDecorationExtents& other) const {\n         return topLeft == other.topLeft && bottomRight == other.bottomRight;\n     }\n-};\n\\ No newline at end of file\n+\n+    void addExtents(const SWindowDecorationExtents& other) {\n+        this->topLeft     = this->topLeft.getComponentMax(other.topLeft);",
        "comment_created_at": "2024-02-03T18:26:36+00:00",
        "comment_author": "vaxerski",
        "comment_body": "we don't use `this` where unnecessary",
        "pr_file_module": null
      },
      {
        "comment_id": "1477110762",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 4514,
        "pr_file": "src/SharedDefs.hpp",
        "discussion_id": "1477109862",
        "commented_code": "@@ -52,4 +52,9 @@ struct SWindowDecorationExtents {\n     bool operator==(const SWindowDecorationExtents& other) const {\n         return topLeft == other.topLeft && bottomRight == other.bottomRight;\n     }\n-};\n\\ No newline at end of file\n+\n+    void addExtents(const SWindowDecorationExtents& other) {\n+        this->topLeft     = this->topLeft.getComponentMax(other.topLeft);",
        "comment_created_at": "2024-02-03T18:34:44+00:00",
        "comment_author": "MightyPlaza",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  }
]