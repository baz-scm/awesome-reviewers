[
  {
    "discussion_id": "1573726060",
    "pr_number": 5667,
    "pr_file": "CMakeLists.txt",
    "created_at": "2024-04-21T11:52:27+00:00",
    "commented_code": "# tools\n add_subdirectory(hyprctl)\n add_subdirectory(hyprpm)\n+\n+# binary and symlink\n+install(TARGETS Hyprland)\n+\n+install(CODE \"execute_process( \\\n+        COMMAND ${CMAKE_COMMAND} -E create_symlink \\\n+        ${CMAKE_INSTALL_BINDIR}/Hyprland \\\n+        ${CMAKE_INSTALL_BINDIR}/hyprland\n+        )\"\n+)\n+\n+# session file\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.desktop\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/wayland-sessions)\n+\n+# wallpapers\n+file(GLOB_RECURSE WALLPAPERS CONFIGURE_DEPENDS \"assets/wall*\")\n+install(FILES ${WALLPAPERS}\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# default config\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# portal config\n+install(FILES ${CMAKE_SOURCE_DIR}/assets/hyprland-portals.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/xdg-desktop-portal)\n+\n+# man pages\n+file(GLOB_RECURSE MANPAGES CONFIGURE_DEPENDS \"docs/*.1\")\n+install(FILES ${MANPAGES}\n+        DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)\n+\n+\n+# headers\n+file(GLOB_RECURSE HEADERS_HL CONFIGURE_DEPENDS \"*.h*\")",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1573726060",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5667,
        "pr_file": "CMakeLists.txt",
        "discussion_id": "1573726060",
        "commented_code": "@@ -269,3 +270,50 @@ protocolNew(\"unstable/xdg-output/xdg-output-unstable-v1.xml\" \"xdg-output-unstabl\n # tools\n add_subdirectory(hyprctl)\n add_subdirectory(hyprpm)\n+\n+# binary and symlink\n+install(TARGETS Hyprland)\n+\n+install(CODE \"execute_process( \\\n+        COMMAND ${CMAKE_COMMAND} -E create_symlink \\\n+        ${CMAKE_INSTALL_BINDIR}/Hyprland \\\n+        ${CMAKE_INSTALL_BINDIR}/hyprland\n+        )\"\n+)\n+\n+# session file\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.desktop\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/wayland-sessions)\n+\n+# wallpapers\n+file(GLOB_RECURSE WALLPAPERS CONFIGURE_DEPENDS \"assets/wall*\")\n+install(FILES ${WALLPAPERS}\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# default config\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# portal config\n+install(FILES ${CMAKE_SOURCE_DIR}/assets/hyprland-portals.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/xdg-desktop-portal)\n+\n+# man pages\n+file(GLOB_RECURSE MANPAGES CONFIGURE_DEPENDS \"docs/*.1\")\n+install(FILES ${MANPAGES}\n+        DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)\n+\n+\n+# headers\n+file(GLOB_RECURSE HEADERS_HL CONFIGURE_DEPENDS \"*.h*\")",
        "comment_created_at": "2024-04-21T11:52:27+00:00",
        "comment_author": "vaxerski",
        "comment_body": "shouldn't this be `src/*.h*`? Otherwise it will consume all the subprojects and shit",
        "pr_file_module": null
      },
      {
        "comment_id": "1573798898",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5667,
        "pr_file": "CMakeLists.txt",
        "discussion_id": "1573726060",
        "commented_code": "@@ -269,3 +270,50 @@ protocolNew(\"unstable/xdg-output/xdg-output-unstable-v1.xml\" \"xdg-output-unstabl\n # tools\n add_subdirectory(hyprctl)\n add_subdirectory(hyprpm)\n+\n+# binary and symlink\n+install(TARGETS Hyprland)\n+\n+install(CODE \"execute_process( \\\n+        COMMAND ${CMAKE_COMMAND} -E create_symlink \\\n+        ${CMAKE_INSTALL_BINDIR}/Hyprland \\\n+        ${CMAKE_INSTALL_BINDIR}/hyprland\n+        )\"\n+)\n+\n+# session file\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.desktop\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/wayland-sessions)\n+\n+# wallpapers\n+file(GLOB_RECURSE WALLPAPERS CONFIGURE_DEPENDS \"assets/wall*\")\n+install(FILES ${WALLPAPERS}\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# default config\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# portal config\n+install(FILES ${CMAKE_SOURCE_DIR}/assets/hyprland-portals.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/xdg-desktop-portal)\n+\n+# man pages\n+file(GLOB_RECURSE MANPAGES CONFIGURE_DEPENDS \"docs/*.1\")\n+install(FILES ${MANPAGES}\n+        DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)\n+\n+\n+# headers\n+file(GLOB_RECURSE HEADERS_HL CONFIGURE_DEPENDS \"*.h*\")",
        "comment_created_at": "2024-04-21T14:56:41+00:00",
        "comment_author": "fufexan",
        "comment_body": "Yup, missed that.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1588046918",
    "pr_number": 5667,
    "pr_file": "CMakeLists.txt",
    "created_at": "2024-05-02T17:49:06+00:00",
    "commented_code": "# tools\n add_subdirectory(hyprctl)\n add_subdirectory(hyprpm)\n+\n+# binary and symlink\n+install(TARGETS Hyprland)\n+\n+install(CODE \"execute_process( \\\n+        COMMAND ${CMAKE_COMMAND} -E create_symlink \\\n+        ${CMAKE_INSTALL_BINDIR}/Hyprland \\\n+        ${CMAKE_INSTALL_BINDIR}/hyprland\n+        )\"\n+)\n+\n+# session file\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.desktop\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/wayland-sessions)\n+\n+# wallpapers\n+file(GLOB_RECURSE WALLPAPERS \"assets/wall*\")\n+install(FILES ${WALLPAPERS}\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# default config\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# portal config\n+install(FILES ${CMAKE_SOURCE_DIR}/assets/hyprland-portals.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/xdg-desktop-portal)\n+\n+# man pages\n+file(GLOB_RECURSE MANPAGES \"docs/*.1\")\n+install(FILES ${MANPAGES}\n+        DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)\n+\n+\n+# pkgconfig entry\n+install(FILES ${CMAKE_BINARY_DIR}/hyprland.pc\n+        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1588046918",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5667,
        "pr_file": "CMakeLists.txt",
        "discussion_id": "1588046918",
        "commented_code": "@@ -282,3 +283,58 @@ protocolNew(\"staging/ext-session-lock/ext-session-lock-v1.xml\" \"ext-session-lock\n # tools\n add_subdirectory(hyprctl)\n add_subdirectory(hyprpm)\n+\n+# binary and symlink\n+install(TARGETS Hyprland)\n+\n+install(CODE \"execute_process( \\\n+        COMMAND ${CMAKE_COMMAND} -E create_symlink \\\n+        ${CMAKE_INSTALL_BINDIR}/Hyprland \\\n+        ${CMAKE_INSTALL_BINDIR}/hyprland\n+        )\"\n+)\n+\n+# session file\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.desktop\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/wayland-sessions)\n+\n+# wallpapers\n+file(GLOB_RECURSE WALLPAPERS \"assets/wall*\")\n+install(FILES ${WALLPAPERS}\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# default config\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# portal config\n+install(FILES ${CMAKE_SOURCE_DIR}/assets/hyprland-portals.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/xdg-desktop-portal)\n+\n+# man pages\n+file(GLOB_RECURSE MANPAGES \"docs/*.1\")\n+install(FILES ${MANPAGES}\n+        DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)\n+\n+\n+# pkgconfig entry\n+install(FILES ${CMAKE_BINARY_DIR}/hyprland.pc\n+        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)",
        "comment_created_at": "2024-05-02T17:49:06+00:00",
        "comment_author": "jbeich",
        "comment_body": "Typo? s/lib/share/ to match Makefile (and Meson):\r\n```suggestion\r\n        DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/pkgconfig)\r\n```\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1588097614",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5667,
        "pr_file": "CMakeLists.txt",
        "discussion_id": "1588046918",
        "commented_code": "@@ -282,3 +283,58 @@ protocolNew(\"staging/ext-session-lock/ext-session-lock-v1.xml\" \"ext-session-lock\n # tools\n add_subdirectory(hyprctl)\n add_subdirectory(hyprpm)\n+\n+# binary and symlink\n+install(TARGETS Hyprland)\n+\n+install(CODE \"execute_process( \\\n+        COMMAND ${CMAKE_COMMAND} -E create_symlink \\\n+        ${CMAKE_INSTALL_BINDIR}/Hyprland \\\n+        ${CMAKE_INSTALL_BINDIR}/hyprland\n+        )\"\n+)\n+\n+# session file\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.desktop\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/wayland-sessions)\n+\n+# wallpapers\n+file(GLOB_RECURSE WALLPAPERS \"assets/wall*\")\n+install(FILES ${WALLPAPERS}\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# default config\n+install(FILES ${CMAKE_SOURCE_DIR}/example/hyprland.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/hyprland)\n+\n+# portal config\n+install(FILES ${CMAKE_SOURCE_DIR}/assets/hyprland-portals.conf\n+        DESTINATION ${CMAKE_INSTALL_DATADIR}/xdg-desktop-portal)\n+\n+# man pages\n+file(GLOB_RECURSE MANPAGES \"docs/*.1\")\n+install(FILES ${MANPAGES}\n+        DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)\n+\n+\n+# pkgconfig entry\n+install(FILES ${CMAKE_BINARY_DIR}/hyprland.pc\n+        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)",
        "comment_created_at": "2024-05-02T18:12:56+00:00",
        "comment_author": "fufexan",
        "comment_body": "Right, my bad.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1195740652",
    "pr_number": 2313,
    "pr_file": "CMakeLists.txt",
    "created_at": "2023-05-16T22:21:50+00:00",
    "commented_code": "message(STATUS \"Setting link libraries\")\n \n function(protocol protoPath protoName external)\n-    if (external)\n+    if(external)\n         execute_process(\n             COMMAND ${WaylandScanner} server-header ${protoPath} protocols/${protoName}-protocol.h\n             WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         execute_process(\n             COMMAND ${WaylandScanner} private-code ${protoPath} protocols/${protoName}-protocol.c\n-            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})  \n+            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         target_sources(Hyprland PRIVATE protocols/${protoName}-protocol.c)\n     else()\n         execute_process(\n             COMMAND ${WaylandScanner} server-header ${WAYLAND_PROTOCOLS_DIR}/${protoPath} protocols/${protoName}-protocol.h\n             WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         execute_process(\n             COMMAND ${WaylandScanner} private-code ${WAYLAND_PROTOCOLS_DIR}/${protoPath} protocols/${protoName}-protocol.c\n-            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})  \n+            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         target_sources(Hyprland PRIVATE protocols/${protoName}-protocol.c)\n     endif()\n endfunction()\n \n-target_link_libraries(Hyprland PkgConfig::deps)\n-\n target_link_libraries(Hyprland\n-        ${CMAKE_SOURCE_DIR}/subprojects/wlroots/build/libwlroots.so.12032 # wlroots is provided by us\n-        OpenGL::EGL\n-        OpenGL::GL\n-        Threads::Threads\n-        ${CMAKE_SOURCE_DIR}/subprojects/udis86/build/libudis86/liblibudis86.a\n+    rt\n+    PkgConfig::deps\n+    OpenGL::EGL\n+    OpenGL::GL\n+    Threads::Threads\n+    wlroots\n+    udis86\n )\n \n+install(TARGETS Hyprland hyprctl DESTINATION bin)\n+install(FILES ${wlroots_LIBRARY} DESTINATION lib)\n+install(DIRECTORY assets/ DESTINATION share/hyprland PATTERN \"meson.build\" EXCLUDE)\n+install(FILES example/hyprland.desktop DESTINATION share/wayland-sessions)\n+install(FILES example/hyprland.conf DESTINATION share/hyprland)\n+install(FILES docs/hyprctl.1 docs/Hyprland.1 DESTINATION share/man/man1)\n+\n+install(DIRECTORY ${wlroots_INCLUDE_DIR}/ DESTINATION include/hyprland/wlroots)\n+install(DIRECTORY protocols/ DESTINATION include/hyprland/protocols PATTERN \"meson.build\" EXCLUDE)",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1195740652",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 2313,
        "pr_file": "CMakeLists.txt",
        "discussion_id": "1195740652",
        "commented_code": "@@ -153,35 +171,48 @@ include(CPack)\n message(STATUS \"Setting link libraries\")\n \n function(protocol protoPath protoName external)\n-    if (external)\n+    if(external)\n         execute_process(\n             COMMAND ${WaylandScanner} server-header ${protoPath} protocols/${protoName}-protocol.h\n             WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         execute_process(\n             COMMAND ${WaylandScanner} private-code ${protoPath} protocols/${protoName}-protocol.c\n-            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})  \n+            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         target_sources(Hyprland PRIVATE protocols/${protoName}-protocol.c)\n     else()\n         execute_process(\n             COMMAND ${WaylandScanner} server-header ${WAYLAND_PROTOCOLS_DIR}/${protoPath} protocols/${protoName}-protocol.h\n             WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         execute_process(\n             COMMAND ${WaylandScanner} private-code ${WAYLAND_PROTOCOLS_DIR}/${protoPath} protocols/${protoName}-protocol.c\n-            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})  \n+            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         target_sources(Hyprland PRIVATE protocols/${protoName}-protocol.c)\n     endif()\n endfunction()\n \n-target_link_libraries(Hyprland PkgConfig::deps)\n-\n target_link_libraries(Hyprland\n-        ${CMAKE_SOURCE_DIR}/subprojects/wlroots/build/libwlroots.so.12032 # wlroots is provided by us\n-        OpenGL::EGL\n-        OpenGL::GL\n-        Threads::Threads\n-        ${CMAKE_SOURCE_DIR}/subprojects/udis86/build/libudis86/liblibudis86.a\n+    rt\n+    PkgConfig::deps\n+    OpenGL::EGL\n+    OpenGL::GL\n+    Threads::Threads\n+    wlroots\n+    udis86\n )\n \n+install(TARGETS Hyprland hyprctl DESTINATION bin)\n+install(FILES ${wlroots_LIBRARY} DESTINATION lib)\n+install(DIRECTORY assets/ DESTINATION share/hyprland PATTERN \"meson.build\" EXCLUDE)\n+install(FILES example/hyprland.desktop DESTINATION share/wayland-sessions)\n+install(FILES example/hyprland.conf DESTINATION share/hyprland)\n+install(FILES docs/hyprctl.1 docs/Hyprland.1 DESTINATION share/man/man1)\n+\n+install(DIRECTORY ${wlroots_INCLUDE_DIR}/ DESTINATION include/hyprland/wlroots)\n+install(DIRECTORY protocols/ DESTINATION include/hyprland/protocols PATTERN \"meson.build\" EXCLUDE)",
        "comment_created_at": "2023-05-16T22:21:50+00:00",
        "comment_author": "vaxerski",
        "comment_body": "`.xml`s and `.c`s should also be excluded. Ideally it should be pattern `.h` only",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1278270361",
    "pr_number": 2313,
    "pr_file": "CMakeLists.txt",
    "created_at": "2023-07-29T08:52:33+00:00",
    "commented_code": "message(STATUS \"Setting link libraries\")\n \n function(protocol protoPath protoName external)\n-    if (external)\n+    if(external)\n         execute_process(\n             COMMAND ${WaylandScanner} server-header ${protoPath} protocols/${protoName}-protocol.h\n             WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         execute_process(\n             COMMAND ${WaylandScanner} private-code ${protoPath} protocols/${protoName}-protocol.c\n-            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})  \n+            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         target_sources(Hyprland PRIVATE protocols/${protoName}-protocol.c)\n     else()\n         execute_process(\n             COMMAND ${WaylandScanner} server-header ${WAYLAND_PROTOCOLS_DIR}/${protoPath} protocols/${protoName}-protocol.h\n             WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         execute_process(\n             COMMAND ${WaylandScanner} private-code ${WAYLAND_PROTOCOLS_DIR}/${protoPath} protocols/${protoName}-protocol.c\n-            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})  \n+            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         target_sources(Hyprland PRIVATE protocols/${protoName}-protocol.c)\n     endif()\n endfunction()\n \n-target_link_libraries(Hyprland PkgConfig::deps)\n-\n target_link_libraries(Hyprland\n-        ${CMAKE_SOURCE_DIR}/subprojects/wlroots/build/libwlroots.so.12032 # wlroots is provided by us\n-        OpenGL::EGL\n-        OpenGL::GL\n-        Threads::Threads\n-        ${CMAKE_SOURCE_DIR}/subprojects/udis86/build/libudis86/liblibudis86.a\n+    rt\n+    PkgConfig::deps\n+    OpenGL::EGL\n+    OpenGL::GL\n+    Threads::Threads\n+    wlroots\n+    udis86\n )\n \n+install(TARGETS Hyprland hyprctl DESTINATION bin)",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1278270361",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 2313,
        "pr_file": "CMakeLists.txt",
        "discussion_id": "1278270361",
        "commented_code": "@@ -153,35 +172,53 @@ include(CPack)\n message(STATUS \"Setting link libraries\")\n \n function(protocol protoPath protoName external)\n-    if (external)\n+    if(external)\n         execute_process(\n             COMMAND ${WaylandScanner} server-header ${protoPath} protocols/${protoName}-protocol.h\n             WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         execute_process(\n             COMMAND ${WaylandScanner} private-code ${protoPath} protocols/${protoName}-protocol.c\n-            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})  \n+            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         target_sources(Hyprland PRIVATE protocols/${protoName}-protocol.c)\n     else()\n         execute_process(\n             COMMAND ${WaylandScanner} server-header ${WAYLAND_PROTOCOLS_DIR}/${protoPath} protocols/${protoName}-protocol.h\n             WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         execute_process(\n             COMMAND ${WaylandScanner} private-code ${WAYLAND_PROTOCOLS_DIR}/${protoPath} protocols/${protoName}-protocol.c\n-            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})  \n+            WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})\n         target_sources(Hyprland PRIVATE protocols/${protoName}-protocol.c)\n     endif()\n endfunction()\n \n-target_link_libraries(Hyprland PkgConfig::deps)\n-\n target_link_libraries(Hyprland\n-        ${CMAKE_SOURCE_DIR}/subprojects/wlroots/build/libwlroots.so.12032 # wlroots is provided by us\n-        OpenGL::EGL\n-        OpenGL::GL\n-        Threads::Threads\n-        ${CMAKE_SOURCE_DIR}/subprojects/udis86/build/libudis86/liblibudis86.a\n+    rt\n+    PkgConfig::deps\n+    OpenGL::EGL\n+    OpenGL::GL\n+    Threads::Threads\n+    wlroots\n+    udis86\n )\n \n+install(TARGETS Hyprland hyprctl DESTINATION bin)",
        "comment_created_at": "2023-07-29T08:52:33+00:00",
        "comment_author": "stephan-cr",
        "comment_body": "I wonder if it would make sense to include [`GNUInstallDirs`](https://cmake.org/cmake/help/latest/module/GNUInstallDirs.html) and doing\r\n\r\n```cmake\r\ninstall(TARGETS Hyprland hyprctl DESTINATION ${CMAKE_INSTALL_BINDIR})\r\n```\r\n\r\ninstead?",
        "pr_file_module": null
      }
    ]
  }
]