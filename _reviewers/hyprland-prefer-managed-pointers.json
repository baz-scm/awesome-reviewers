[
  {
    "discussion_id": "2167654048",
    "pr_number": 10818,
    "pr_file": "src/protocols/ExtWorkspace.hpp",
    "created_at": "2025-06-25T21:18:22+00:00",
    "commented_code": "+#pragma once\n+\n+#include \"WaylandProtocol.hpp\"\n+#include \"../desktop/DesktopTypes.hpp\"\n+#include \"ext-workspace-v1.hpp\"\n+#include <cstdint>\n+#include <vector>\n+#include \"../helpers/signal/Signal.hpp\"\n+#include \"../helpers/Monitor.hpp\"\n+\n+class CExtWorkspaceManagerResource;\n+\n+class CExtWorkspaceGroupResource {\n+  public:\n+    CExtWorkspaceGroupResource(WP<CExtWorkspaceManagerResource> manager, SP<CExtWorkspaceGroupHandleV1> resource, PHLMONITORREF monitor);\n+\n+    void                                  init(WP<CExtWorkspaceGroupResource> self);\n+    static WP<CExtWorkspaceGroupResource> fromResource(wl_resource*);\n+\n+    void                                  workspaceEnter(CExtWorkspaceHandleV1*);\n+    void                                  workspaceLeave(CExtWorkspaceHandleV1*);",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "2167654048",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 10818,
        "pr_file": "src/protocols/ExtWorkspace.hpp",
        "discussion_id": "2167654048",
        "commented_code": "@@ -0,0 +1,109 @@\n+#pragma once\n+\n+#include \"WaylandProtocol.hpp\"\n+#include \"../desktop/DesktopTypes.hpp\"\n+#include \"ext-workspace-v1.hpp\"\n+#include <cstdint>\n+#include <vector>\n+#include \"../helpers/signal/Signal.hpp\"\n+#include \"../helpers/Monitor.hpp\"\n+\n+class CExtWorkspaceManagerResource;\n+\n+class CExtWorkspaceGroupResource {\n+  public:\n+    CExtWorkspaceGroupResource(WP<CExtWorkspaceManagerResource> manager, SP<CExtWorkspaceGroupHandleV1> resource, PHLMONITORREF monitor);\n+\n+    void                                  init(WP<CExtWorkspaceGroupResource> self);\n+    static WP<CExtWorkspaceGroupResource> fromResource(wl_resource*);\n+\n+    void                                  workspaceEnter(CExtWorkspaceHandleV1*);\n+    void                                  workspaceLeave(CExtWorkspaceHandleV1*);",
        "comment_created_at": "2025-06-25T21:18:22+00:00",
        "comment_author": "vaxerski",
        "comment_body": "raw ptrs are banned in new hl code unless necessary, pass a SP",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2167660233",
    "pr_number": 10818,
    "pr_file": "src/protocols/ExtWorkspace.hpp",
    "created_at": "2025-06-25T21:22:45+00:00",
    "commented_code": "+#pragma once\n+\n+#include \"WaylandProtocol.hpp\"\n+#include \"../desktop/DesktopTypes.hpp\"\n+#include \"ext-workspace-v1.hpp\"\n+#include <cstdint>\n+#include <vector>\n+#include \"../helpers/signal/Signal.hpp\"\n+#include \"../helpers/Monitor.hpp\"\n+\n+class CExtWorkspaceManagerResource;\n+\n+class CExtWorkspaceGroupResource {\n+  public:\n+    CExtWorkspaceGroupResource(WP<CExtWorkspaceManagerResource> manager, SP<CExtWorkspaceGroupHandleV1> resource, PHLMONITORREF monitor);\n+\n+    void                                  init(WP<CExtWorkspaceGroupResource> self);\n+    static WP<CExtWorkspaceGroupResource> fromResource(wl_resource*);\n+\n+    void                                  workspaceEnter(CExtWorkspaceHandleV1*);\n+    void                                  workspaceLeave(CExtWorkspaceHandleV1*);\n+\n+    PHLMONITORREF                         m_monitor;\n+\n+  private:\n+    WP<CExtWorkspaceGroupResource>   m_self;\n+    WP<CExtWorkspaceManagerResource> m_manager;\n+    SP<CExtWorkspaceGroupHandleV1>   m_resource;",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "2167660233",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 10818,
        "pr_file": "src/protocols/ExtWorkspace.hpp",
        "discussion_id": "2167660233",
        "commented_code": "@@ -0,0 +1,109 @@\n+#pragma once\n+\n+#include \"WaylandProtocol.hpp\"\n+#include \"../desktop/DesktopTypes.hpp\"\n+#include \"ext-workspace-v1.hpp\"\n+#include <cstdint>\n+#include <vector>\n+#include \"../helpers/signal/Signal.hpp\"\n+#include \"../helpers/Monitor.hpp\"\n+\n+class CExtWorkspaceManagerResource;\n+\n+class CExtWorkspaceGroupResource {\n+  public:\n+    CExtWorkspaceGroupResource(WP<CExtWorkspaceManagerResource> manager, SP<CExtWorkspaceGroupHandleV1> resource, PHLMONITORREF monitor);\n+\n+    void                                  init(WP<CExtWorkspaceGroupResource> self);\n+    static WP<CExtWorkspaceGroupResource> fromResource(wl_resource*);\n+\n+    void                                  workspaceEnter(CExtWorkspaceHandleV1*);\n+    void                                  workspaceLeave(CExtWorkspaceHandleV1*);\n+\n+    PHLMONITORREF                         m_monitor;\n+\n+  private:\n+    WP<CExtWorkspaceGroupResource>   m_self;\n+    WP<CExtWorkspaceManagerResource> m_manager;\n+    SP<CExtWorkspaceGroupHandleV1>   m_resource;",
        "comment_created_at": "2025-06-25T21:22:45+00:00",
        "comment_author": "vaxerski",
        "comment_body": "generally, in new protocol impls, prefer a UP<> for m_resource. You can still take a WP<> to it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1925260037",
    "pr_number": 9129,
    "pr_file": "src/managers/input/InputManager.hpp",
    "created_at": "2025-01-22T12:44:19+00:00",
    "commented_code": "};\n \n struct STouchData {\n+    SSessionLockSurface* touchFocusLockSurface;",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1925260037",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9129,
        "pr_file": "src/managers/input/InputManager.hpp",
        "discussion_id": "1925260037",
        "commented_code": "@@ -52,6 +53,7 @@ enum eBorderIconDirection : uint8_t {\n };\n \n struct STouchData {\n+    SSessionLockSurface* touchFocusLockSurface;",
        "comment_created_at": "2025-01-22T12:44:19+00:00",
        "comment_author": "vaxerski",
        "comment_body": "raw ptrs are banned in new code",
        "pr_file_module": null
      },
      {
        "comment_id": "1926291547",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9129,
        "pr_file": "src/managers/input/InputManager.hpp",
        "discussion_id": "1925260037",
        "commented_code": "@@ -52,6 +53,7 @@ enum eBorderIconDirection : uint8_t {\n };\n \n struct STouchData {\n+    SSessionLockSurface* touchFocusLockSurface;",
        "comment_created_at": "2025-01-23T02:55:56+00:00",
        "comment_author": "MikeWalrus",
        "comment_body": "Now I remember why I didn't try to get this merged last year. :( Is a weak pointer suitable here?\r\n\r\nAccordingly, Should this be changed to store shared pointers\r\n\r\nhttps://github.com/hyprwm/Hyprland/blob/fda5626594c3f31bbab08e877a797a623c98c450/src/managers/SessionLockManager.hpp#L34\r\n\r\nand this to return a shared pointer?\r\n\r\nhttps://github.com/hyprwm/Hyprland/blob/fda5626594c3f31bbab08e877a797a623c98c450/src/managers/SessionLockManager.hpp#L52",
        "pr_file_module": null
      },
      {
        "comment_id": "1926800267",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9129,
        "pr_file": "src/managers/input/InputManager.hpp",
        "discussion_id": "1925260037",
        "commented_code": "@@ -52,6 +53,7 @@ enum eBorderIconDirection : uint8_t {\n };\n \n struct STouchData {\n+    SSessionLockSurface* touchFocusLockSurface;",
        "comment_created_at": "2025-01-23T11:09:34+00:00",
        "comment_author": "vaxerski",
        "comment_body": "hm. I don't think they should be shared for no reason. I'll write a unique_ptr in hyprutils later today that allows weak pointers, if I don't by tomorrow remind me.\r\nI've wanted one anyways.",
        "pr_file_module": null
      },
      {
        "comment_id": "1926834289",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9129,
        "pr_file": "src/managers/input/InputManager.hpp",
        "discussion_id": "1925260037",
        "commented_code": "@@ -52,6 +53,7 @@ enum eBorderIconDirection : uint8_t {\n };\n \n struct STouchData {\n+    SSessionLockSurface* touchFocusLockSurface;",
        "comment_created_at": "2025-01-23T11:35:17+00:00",
        "comment_author": "vaxerski",
        "comment_body": "class is boring, here you go https://github.com/hyprwm/hyprutils/commit/423c69d697f56af4f8f2de7e2279eead17901228",
        "pr_file_module": null
      },
      {
        "comment_id": "1926884298",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9129,
        "pr_file": "src/managers/input/InputManager.hpp",
        "discussion_id": "1925260037",
        "commented_code": "@@ -52,6 +53,7 @@ enum eBorderIconDirection : uint8_t {\n };\n \n struct STouchData {\n+    SSessionLockSurface* touchFocusLockSurface;",
        "comment_created_at": "2025-01-23T12:15:32+00:00",
        "comment_author": "vaxerski",
        "comment_body": "https://github.com/hyprwm/Hyprland/pull/9143",
        "pr_file_module": null
      },
      {
        "comment_id": "1927675335",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9129,
        "pr_file": "src/managers/input/InputManager.hpp",
        "discussion_id": "1925260037",
        "commented_code": "@@ -52,6 +53,7 @@ enum eBorderIconDirection : uint8_t {\n };\n \n struct STouchData {\n+    SSessionLockSurface* touchFocusLockSurface;",
        "comment_created_at": "2025-01-23T21:02:43+00:00",
        "comment_author": "MikeWalrus",
        "comment_body": "What about this one here https://github.com/hyprwm/Hyprland/blob/ae403e6a05452336abd97e61be2706f6a930d827/src/managers/input/InputManager.cpp#L232\r\n\r\nShould foundSurface be changed to a weak ptr?",
        "pr_file_module": null
      },
      {
        "comment_id": "1927693808",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9129,
        "pr_file": "src/managers/input/InputManager.hpp",
        "discussion_id": "1925260037",
        "commented_code": "@@ -52,6 +53,7 @@ enum eBorderIconDirection : uint8_t {\n };\n \n struct STouchData {\n+    SSessionLockSurface* touchFocusLockSurface;",
        "comment_created_at": "2025-01-23T21:20:52+00:00",
        "comment_author": "vaxerski",
        "comment_body": "sls container should now store a UP if you rebase on main and you can make this func return a WP",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1904357473",
    "pr_number": 8715,
    "pr_file": "src/desktop/WLSurface.hpp",
    "created_at": "2025-01-06T16:20:58+00:00",
    "commented_code": "private:\n     CWLSurface() = default;\n \n-    bool                   m_bInert = true;\n+    bool                         m_bInert = true;\n \n-    WP<CWLSurfaceResource> m_pResource;\n+    WP<CWLSurfaceResource>       m_pResource;\n \n-    PHLWINDOWREF           m_pWindowOwner;\n-    PHLLSREF               m_pLayerOwner;\n-    CPopup*                m_pPopupOwner      = nullptr;\n-    CSubsurface*           m_pSubsurfaceOwner = nullptr;\n+    PHLWINDOWREF                 m_pWindowOwner;\n+    PHLLSREF                     m_pLayerOwner;\n+    CPopup*                      m_pPopupOwner      = nullptr;\n+    CSubsurface*                 m_pSubsurfaceOwner = nullptr;\n+    CXxColorManagementSurfaceV4* m_pCMSurface       = nullptr;",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1904357473",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8715,
        "pr_file": "src/desktop/WLSurface.hpp",
        "discussion_id": "1904357473",
        "commented_code": "@@ -98,14 +99,15 @@ class CWLSurface {\n   private:\n     CWLSurface() = default;\n \n-    bool                   m_bInert = true;\n+    bool                         m_bInert = true;\n \n-    WP<CWLSurfaceResource> m_pResource;\n+    WP<CWLSurfaceResource>       m_pResource;\n \n-    PHLWINDOWREF           m_pWindowOwner;\n-    PHLLSREF               m_pLayerOwner;\n-    CPopup*                m_pPopupOwner      = nullptr;\n-    CSubsurface*           m_pSubsurfaceOwner = nullptr;\n+    PHLWINDOWREF                 m_pWindowOwner;\n+    PHLLSREF                     m_pLayerOwner;\n+    CPopup*                      m_pPopupOwner      = nullptr;\n+    CSubsurface*                 m_pSubsurfaceOwner = nullptr;\n+    CXxColorManagementSurfaceV4* m_pCMSurface       = nullptr;",
        "comment_created_at": "2025-01-06T16:20:58+00:00",
        "comment_author": "vaxerski",
        "comment_body": "the reason popup and subsurface are C pointers is that they haven't yet been rewritten. Please use managed pointers (a WP here)",
        "pr_file_module": null
      }
    ]
  }
]