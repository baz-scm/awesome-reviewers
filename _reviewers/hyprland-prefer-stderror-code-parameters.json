[
  {
    "discussion_id": "2049265794",
    "pr_number": 10095,
    "pr_file": "src/helpers/MiscFunctions.cpp",
    "created_at": "2025-04-17T16:08:37+00:00",
    "commented_code": "else\n         return std::stof(VALUE);\n }\n+\n+// Checks if Nvidia driver major version is at least given version.\n+// Useful for explicit_sync_kms and ctm_animation as they only work\n+// past certain driver versions.\n+bool isNvidiaDriverVersionAtLeast(int threshold) {\n+    static int  driverMajor = 0;\n+    static bool once        = true;\n+\n+    if (once) {\n+        once = false;\n+\n+        if (std::filesystem::exists(\"/sys/module/nvidia_drm/version\")) {",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "2049265794",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 10095,
        "pr_file": "src/helpers/MiscFunctions.cpp",
        "discussion_id": "2049265794",
        "commented_code": "@@ -817,3 +817,38 @@ float stringToPercentage(const std::string& VALUE, const float REL) {\n     else\n         return std::stof(VALUE);\n }\n+\n+// Checks if Nvidia driver major version is at least given version.\n+// Useful for explicit_sync_kms and ctm_animation as they only work\n+// past certain driver versions.\n+bool isNvidiaDriverVersionAtLeast(int threshold) {\n+    static int  driverMajor = 0;\n+    static bool once        = true;\n+\n+    if (once) {\n+        once = false;\n+\n+        if (std::filesystem::exists(\"/sys/module/nvidia_drm/version\")) {",
        "comment_created_at": "2025-04-17T16:08:37+00:00",
        "comment_author": "vaxerski",
        "comment_body": "while we are redoing this, this can throw.\r\n\r\n```\r\nstd::error_code ec;\r\nif (std::filesystem::exists(..., ec) && !ec)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1935538558",
    "pr_number": 9219,
    "pr_file": "src/config/ConfigWatcher.cpp",
    "created_at": "2025-01-30T12:35:08+00:00",
    "commented_code": "// add new paths\n     for (const auto& path : paths) {\n         m_watches.emplace_back(SInotifyWatch{\n-            .wd   = inotify_add_watch(m_inotifyFd, path.c_str(), IN_MODIFY),\n+            .wd   = inotify_add_watch(m_inotifyFd, path.c_str(), IN_MODIFY | IN_DONT_FOLLOW),\n+            .file = path,\n+        });\n+        m_watches.emplace_back(SInotifyWatch{\n+            .wd   = inotify_add_watch(m_inotifyFd, (std::filesystem::canonical(path)).c_str(), IN_MODIFY),",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1935538558",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9219,
        "pr_file": "src/config/ConfigWatcher.cpp",
        "discussion_id": "1935538558",
        "commented_code": "@@ -46,7 +47,11 @@ void CConfigWatcher::setWatchList(const std::vector<std::string>& paths) {\n     // add new paths\n     for (const auto& path : paths) {\n         m_watches.emplace_back(SInotifyWatch{\n-            .wd   = inotify_add_watch(m_inotifyFd, path.c_str(), IN_MODIFY),\n+            .wd   = inotify_add_watch(m_inotifyFd, path.c_str(), IN_MODIFY | IN_DONT_FOLLOW),\n+            .file = path,\n+        });\n+        m_watches.emplace_back(SInotifyWatch{\n+            .wd   = inotify_add_watch(m_inotifyFd, (std::filesystem::canonical(path)).c_str(), IN_MODIFY),",
        "comment_created_at": "2025-01-30T12:35:08+00:00",
        "comment_author": "vaxerski",
        "comment_body": "canonical can throw. Needs an `std::error_code` and handling",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1835805417",
    "pr_number": 8413,
    "pr_file": "src/debug/HyprCtl.cpp",
    "created_at": "2024-11-10T22:48:07+00:00",
    "commented_code": "#if defined(__DragonFly__) || defined(__FreeBSD__)\n     const std::string GPUINFO = execAndGet(\"pciconf -lv | fgrep -A4 vga\");\n #elif defined(__arm__) || defined(__aarch64__)\n-    const std::string GPUINFO = execAndGet(\"cat /proc/device-tree/soc*/gpu*/compatible\");\n+    std::string                 GPUINFO;\n+    const std::filesystem::path dev_tree = \"/proc/device-tree\";\n+    if (std::filesystem::exists(dev_tree) && std::filesystem::is_directory(dev_tree)) {",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1835805417",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8413,
        "pr_file": "src/debug/HyprCtl.cpp",
        "discussion_id": "1835805417",
        "commented_code": "@@ -945,7 +947,22 @@ std::string systemInfoRequest(eHyprCtlOutputFormat format, std::string request)\n #if defined(__DragonFly__) || defined(__FreeBSD__)\n     const std::string GPUINFO = execAndGet(\"pciconf -lv | fgrep -A4 vga\");\n #elif defined(__arm__) || defined(__aarch64__)\n-    const std::string GPUINFO = execAndGet(\"cat /proc/device-tree/soc*/gpu*/compatible\");\n+    std::string                 GPUINFO;\n+    const std::filesystem::path dev_tree = \"/proc/device-tree\";\n+    if (std::filesystem::exists(dev_tree) && std::filesystem::is_directory(dev_tree)) {",
        "comment_created_at": "2024-11-10T22:48:07+00:00",
        "comment_author": "vaxerski",
        "comment_body": "all of this might throw so probably should be in a try catch",
        "pr_file_module": null
      },
      {
        "comment_id": "1835815660",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8413,
        "pr_file": "src/debug/HyprCtl.cpp",
        "discussion_id": "1835805417",
        "commented_code": "@@ -945,7 +947,22 @@ std::string systemInfoRequest(eHyprCtlOutputFormat format, std::string request)\n #if defined(__DragonFly__) || defined(__FreeBSD__)\n     const std::string GPUINFO = execAndGet(\"pciconf -lv | fgrep -A4 vga\");\n #elif defined(__arm__) || defined(__aarch64__)\n-    const std::string GPUINFO = execAndGet(\"cat /proc/device-tree/soc*/gpu*/compatible\");\n+    std::string                 GPUINFO;\n+    const std::filesystem::path dev_tree = \"/proc/device-tree\";\n+    if (std::filesystem::exists(dev_tree) && std::filesystem::is_directory(dev_tree)) {",
        "comment_created_at": "2024-11-10T23:38:46+00:00",
        "comment_author": "WavyEbuilder",
        "comment_body": "The entire `if` block? Just catch `...` (and I guess like `execAndGet` set `GPUINFO` to `\"error\"`) okay? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1835817401",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8413,
        "pr_file": "src/debug/HyprCtl.cpp",
        "discussion_id": "1835805417",
        "commented_code": "@@ -945,7 +947,22 @@ std::string systemInfoRequest(eHyprCtlOutputFormat format, std::string request)\n #if defined(__DragonFly__) || defined(__FreeBSD__)\n     const std::string GPUINFO = execAndGet(\"pciconf -lv | fgrep -A4 vga\");\n #elif defined(__arm__) || defined(__aarch64__)\n-    const std::string GPUINFO = execAndGet(\"cat /proc/device-tree/soc*/gpu*/compatible\");\n+    std::string                 GPUINFO;\n+    const std::filesystem::path dev_tree = \"/proc/device-tree\";\n+    if (std::filesystem::exists(dev_tree) && std::filesystem::is_directory(dev_tree)) {",
        "comment_created_at": "2024-11-10T23:47:13+00:00",
        "comment_author": "vaxerski",
        "comment_body": "every std::filesystem call can throw unless supplied with a std::error_code as the second arg, so the entire thing",
        "pr_file_module": null
      },
      {
        "comment_id": "1835817601",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8413,
        "pr_file": "src/debug/HyprCtl.cpp",
        "discussion_id": "1835805417",
        "commented_code": "@@ -945,7 +947,22 @@ std::string systemInfoRequest(eHyprCtlOutputFormat format, std::string request)\n #if defined(__DragonFly__) || defined(__FreeBSD__)\n     const std::string GPUINFO = execAndGet(\"pciconf -lv | fgrep -A4 vga\");\n #elif defined(__arm__) || defined(__aarch64__)\n-    const std::string GPUINFO = execAndGet(\"cat /proc/device-tree/soc*/gpu*/compatible\");\n+    std::string                 GPUINFO;\n+    const std::filesystem::path dev_tree = \"/proc/device-tree\";\n+    if (std::filesystem::exists(dev_tree) && std::filesystem::is_directory(dev_tree)) {",
        "comment_created_at": "2024-11-10T23:48:13+00:00",
        "comment_author": "WavyEbuilder",
        "comment_body": "Alright, will do",
        "pr_file_module": null
      },
      {
        "comment_id": "1835820197",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8413,
        "pr_file": "src/debug/HyprCtl.cpp",
        "discussion_id": "1835805417",
        "commented_code": "@@ -945,7 +947,22 @@ std::string systemInfoRequest(eHyprCtlOutputFormat format, std::string request)\n #if defined(__DragonFly__) || defined(__FreeBSD__)\n     const std::string GPUINFO = execAndGet(\"pciconf -lv | fgrep -A4 vga\");\n #elif defined(__arm__) || defined(__aarch64__)\n-    const std::string GPUINFO = execAndGet(\"cat /proc/device-tree/soc*/gpu*/compatible\");\n+    std::string                 GPUINFO;\n+    const std::filesystem::path dev_tree = \"/proc/device-tree\";\n+    if (std::filesystem::exists(dev_tree) && std::filesystem::is_directory(dev_tree)) {",
        "comment_created_at": "2024-11-11T00:00:53+00:00",
        "comment_author": "WavyEbuilder",
        "comment_body": "Done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1716480313",
    "pr_number": 7326,
    "pr_file": "src/managers/XCursorManager.cpp",
    "created_at": "2024-08-14T08:03:05+00:00",
    "commented_code": "if (std::filesystem::exists(path) && std::filesystem::is_directory(path)) {\n         for (const auto& entry : std::filesystem::directory_iterator(path)) {\n-            if (!entry.is_regular_file() && !entry.is_symlink())\n+            try {",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1716480313",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7326,
        "pr_file": "src/managers/XCursorManager.cpp",
        "discussion_id": "1716480313",
        "commented_code": "@@ -511,8 +511,13 @@ std::vector<SP<SXCursors>> CXCursorManager::loadAllFromDir(std::string const& pa\n \n     if (std::filesystem::exists(path) && std::filesystem::is_directory(path)) {\n         for (const auto& entry : std::filesystem::directory_iterator(path)) {\n-            if (!entry.is_regular_file() && !entry.is_symlink())\n+            try {",
        "comment_created_at": "2024-08-14T08:03:05+00:00",
        "comment_author": "vaxerski",
        "comment_body": "instead of try catch which kinda sucks can't you just `std::error_code e1, e2;` and pass them to the `is_*` fns?\r\n\r\nthen just `if (e1 || e2) continue`",
        "pr_file_module": null
      }
    ]
  }
]