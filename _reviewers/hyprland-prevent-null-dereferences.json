[
  {
    "discussion_id": "2119527831",
    "pr_number": 10588,
    "pr_file": "src/config/ConfigManager.cpp",
    "created_at": "2025-06-01T20:00:29+00:00",
    "commented_code": "// since some rules will be applied later, we need to store some flags\n     bool hasFloating   = pWindow->m_isFloating;\n     bool hasFullscreen = pWindow->isFullscreen();\n+    bool isGrouped     = pWindow->m_groupData.pNextWindow.lock() != nullptr;",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "2119527831",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 10588,
        "pr_file": "src/config/ConfigManager.cpp",
        "discussion_id": "2119527831",
        "commented_code": "@@ -1354,6 +1354,7 @@ std::vector<SP<CWindowRule>> CConfigManager::getMatchingRules(PHLWINDOW pWindow,\n     // since some rules will be applied later, we need to store some flags\n     bool hasFloating   = pWindow->m_isFloating;\n     bool hasFullscreen = pWindow->isFullscreen();\n+    bool isGrouped     = pWindow->m_groupData.pNextWindow.lock() != nullptr;",
        "comment_created_at": "2025-06-01T20:00:29+00:00",
        "comment_author": "vaxerski",
        "comment_body": ".lock() != nullptr redundant, Hyprutils::Memory::CWeakPointer has an operator bool",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1968410577",
    "pr_number": 9468,
    "pr_file": "src/desktop/LayerSurface.cpp",
    "created_at": "2025-02-24T20:59:32+00:00",
    "commented_code": "MONITORID CLayerSurface::monitorID() {\n     return monitor ? monitor->ID : MONITOR_INVALID;\n }\n+\n+pid_t CLayerSurface::getPID() {\n+    pid_t PID = -1;\n+\n+    wl_client_get_credentials(layerSurface->surface->getResource()->resource()->client, &PID, nullptr, nullptr);",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1968410577",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 9468,
        "pr_file": "src/desktop/LayerSurface.cpp",
        "discussion_id": "1968410577",
        "commented_code": "@@ -584,3 +584,11 @@ int CLayerSurface::popupsCount() {\n MONITORID CLayerSurface::monitorID() {\n     return monitor ? monitor->ID : MONITOR_INVALID;\n }\n+\n+pid_t CLayerSurface::getPID() {\n+    pid_t PID = -1;\n+\n+    wl_client_get_credentials(layerSurface->surface->getResource()->resource()->client, &PID, nullptr, nullptr);",
        "comment_created_at": "2025-02-24T20:59:32+00:00",
        "comment_author": "vaxerski",
        "comment_body": "needs a check for nulls here. This could crash if you call `hyprctl layers` when a layer is fading out, I believe.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1885966987",
    "pr_number": 8714,
    "pr_file": "src/managers/KeybindManager.cpp",
    "created_at": "2024-12-15T23:50:43+00:00",
    "commented_code": "g_pCompositor->getWindowInDirection(PLASTWINDOW, arg);\n \n     // Prioritize focus change within groups if the window is a part of it.\n-    if (*PGROUPCYCLE) {\n-        if (!PLASTWINDOW->m_sGroupData.pNextWindow.expired()) {\n-            if (arg == 'l' && PLASTWINDOW != PLASTWINDOW->getGroupHead()) {\n-                PLASTWINDOW->setGroupCurrent(PLASTWINDOW->getGroupPrevious());\n-                return {};\n-            }\n+    if (*PGROUPCYCLE && (!PLASTWINDOW->m_sGroupData.pNextWindow.expired())) {\n+        auto isTheOnlyGroupOnWs = (PWINDOWTOCHANGETO == nullptr) && (g_pCompositor->m_vMonitors.size() == 1);",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1885966987",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8714,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1885966987",
        "commented_code": "@@ -1395,17 +1395,16 @@ SDispatchResult CKeybindManager::moveFocusTo(std::string args) {\n         g_pCompositor->getWindowInDirection(PLASTWINDOW, arg);\n \n     // Prioritize focus change within groups if the window is a part of it.\n-    if (*PGROUPCYCLE) {\n-        if (!PLASTWINDOW->m_sGroupData.pNextWindow.expired()) {\n-            if (arg == 'l' && PLASTWINDOW != PLASTWINDOW->getGroupHead()) {\n-                PLASTWINDOW->setGroupCurrent(PLASTWINDOW->getGroupPrevious());\n-                return {};\n-            }\n+    if (*PGROUPCYCLE && (!PLASTWINDOW->m_sGroupData.pNextWindow.expired())) {\n+        auto isTheOnlyGroupOnWs = (PWINDOWTOCHANGETO == nullptr) && (g_pCompositor->m_vMonitors.size() == 1);",
        "comment_created_at": "2024-12-15T23:50:43+00:00",
        "comment_author": "vaxerski",
        "comment_body": "whats with all those parentheses. Also, `== nullptr` is the same as `!var`",
        "pr_file_module": null
      },
      {
        "comment_id": "1885967409",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8714,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1885966987",
        "commented_code": "@@ -1395,17 +1395,16 @@ SDispatchResult CKeybindManager::moveFocusTo(std::string args) {\n         g_pCompositor->getWindowInDirection(PLASTWINDOW, arg);\n \n     // Prioritize focus change within groups if the window is a part of it.\n-    if (*PGROUPCYCLE) {\n-        if (!PLASTWINDOW->m_sGroupData.pNextWindow.expired()) {\n-            if (arg == 'l' && PLASTWINDOW != PLASTWINDOW->getGroupHead()) {\n-                PLASTWINDOW->setGroupCurrent(PLASTWINDOW->getGroupPrevious());\n-                return {};\n-            }\n+    if (*PGROUPCYCLE && (!PLASTWINDOW->m_sGroupData.pNextWindow.expired())) {\n+        auto isTheOnlyGroupOnWs = (PWINDOWTOCHANGETO == nullptr) && (g_pCompositor->m_vMonitors.size() == 1);",
        "comment_created_at": "2024-12-15T23:52:33+00:00",
        "comment_author": "normaltaro",
        "comment_body": "sorry, i didn't see it. i'll fix it.",
        "pr_file_module": null
      },
      {
        "comment_id": "1885969459",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8714,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1885966987",
        "commented_code": "@@ -1395,17 +1395,16 @@ SDispatchResult CKeybindManager::moveFocusTo(std::string args) {\n         g_pCompositor->getWindowInDirection(PLASTWINDOW, arg);\n \n     // Prioritize focus change within groups if the window is a part of it.\n-    if (*PGROUPCYCLE) {\n-        if (!PLASTWINDOW->m_sGroupData.pNextWindow.expired()) {\n-            if (arg == 'l' && PLASTWINDOW != PLASTWINDOW->getGroupHead()) {\n-                PLASTWINDOW->setGroupCurrent(PLASTWINDOW->getGroupPrevious());\n-                return {};\n-            }\n+    if (*PGROUPCYCLE && (!PLASTWINDOW->m_sGroupData.pNextWindow.expired())) {\n+        auto isTheOnlyGroupOnWs = (PWINDOWTOCHANGETO == nullptr) && (g_pCompositor->m_vMonitors.size() == 1);",
        "comment_created_at": "2024-12-15T23:59:20+00:00",
        "comment_author": "normaltaro",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1766511575",
    "pr_number": 7851,
    "pr_file": "src/config/ConfigManager.cpp",
    "created_at": "2024-09-19T09:37:38+00:00",
    "commented_code": "if (!g_pCompositor->explicitConfigPath.empty())\n         return g_pCompositor->explicitConfigPath;\n \n+    if (const char *cfg = getenv(\"HYPRLAND_CONFIG\"); cfg != NULL) {\n+        return cfg;\n+    }",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1766511575",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7851,
        "pr_file": "src/config/ConfigManager.cpp",
        "discussion_id": "1766511575",
        "commented_code": "@@ -683,6 +683,12 @@ std::string CConfigManager::getMainConfigPath() {\n     if (!g_pCompositor->explicitConfigPath.empty())\n         return g_pCompositor->explicitConfigPath;\n \n+    if (const char *cfg = getenv(\"HYPRLAND_CONFIG\"); cfg != NULL) {\n+        return cfg;\n+    }",
        "comment_created_at": "2024-09-19T09:37:38+00:00",
        "comment_author": "fufexan",
        "comment_body": "```suggestion\r\n    std::string config_env = getenv(\"HYPRLAND_CONFIG\");\r\n    if (!config_env.empty())\r\n        return config_env;\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1766548038",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7851,
        "pr_file": "src/config/ConfigManager.cpp",
        "discussion_id": "1766511575",
        "commented_code": "@@ -683,6 +683,12 @@ std::string CConfigManager::getMainConfigPath() {\n     if (!g_pCompositor->explicitConfigPath.empty())\n         return g_pCompositor->explicitConfigPath;\n \n+    if (const char *cfg = getenv(\"HYPRLAND_CONFIG\"); cfg != NULL) {\n+        return cfg;\n+    }",
        "comment_created_at": "2024-09-19T10:02:15+00:00",
        "comment_author": "vaxerski",
        "comment_body": "this will crash idiot",
        "pr_file_module": null
      },
      {
        "comment_id": "1766570118",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7851,
        "pr_file": "src/config/ConfigManager.cpp",
        "discussion_id": "1766511575",
        "commented_code": "@@ -683,6 +683,12 @@ std::string CConfigManager::getMainConfigPath() {\n     if (!g_pCompositor->explicitConfigPath.empty())\n         return g_pCompositor->explicitConfigPath;\n \n+    if (const char *cfg = getenv(\"HYPRLAND_CONFIG\"); cfg != NULL) {\n+        return cfg;\n+    }",
        "comment_created_at": "2024-09-19T10:17:55+00:00",
        "comment_author": "fufexan",
        "comment_body": "We do a little trolling",
        "pr_file_module": null
      },
      {
        "comment_id": "1767222698",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7851,
        "pr_file": "src/config/ConfigManager.cpp",
        "discussion_id": "1766511575",
        "commented_code": "@@ -683,6 +683,12 @@ std::string CConfigManager::getMainConfigPath() {\n     if (!g_pCompositor->explicitConfigPath.empty())\n         return g_pCompositor->explicitConfigPath;\n \n+    if (const char *cfg = getenv(\"HYPRLAND_CONFIG\"); cfg != NULL) {\n+        return cfg;\n+    }",
        "comment_created_at": "2024-09-19T16:52:21+00:00",
        "comment_author": "amadalusia",
        "comment_body": "Yeah, the string could NULL when there isn't anything there so std::string has a breakdown and crashes and burns and hoo boy a ton of smoke all over the place.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1690112466",
    "pr_number": 7015,
    "pr_file": "src/managers/KeybindManager.cpp",
    "created_at": "2024-07-24T16:27:03+00:00",
    "commented_code": "return false;\n     }\n \n-    const auto PWORKSPACE        = g_pCompositor->m_pLastMonitor->activeWorkspace;\n-    const auto PNEWMAINWORKSPACE = monitor->activeWorkspace;\n+    static auto PFOLLOWMOUSE = CConfigValue<Hyprlang::INT>(\"input:follow_mouse\");\n+    static auto PNOWARPS     = CConfigValue<Hyprlang::INT>(\"cursor:no_warps\");\n+\n+    const auto  PWORKSPACE        = g_pCompositor->m_pLastMonitor->activeWorkspace;",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1690112466",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7015,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1690112466",
        "commented_code": "@@ -287,8 +287,11 @@ bool CKeybindManager::tryMoveFocusToMonitor(CMonitor* monitor) {\n         return false;\n     }\n \n-    const auto PWORKSPACE        = g_pCompositor->m_pLastMonitor->activeWorkspace;\n-    const auto PNEWMAINWORKSPACE = monitor->activeWorkspace;\n+    static auto PFOLLOWMOUSE = CConfigValue<Hyprlang::INT>(\"input:follow_mouse\");\n+    static auto PNOWARPS     = CConfigValue<Hyprlang::INT>(\"cursor:no_warps\");\n+\n+    const auto  PWORKSPACE        = g_pCompositor->m_pLastMonitor->activeWorkspace;",
        "comment_created_at": "2024-07-24T16:27:03+00:00",
        "comment_author": "vaxerski",
        "comment_body": "wait, lastmonitor can be null",
        "pr_file_module": null
      },
      {
        "comment_id": "1690116117",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7015,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1690112466",
        "commented_code": "@@ -287,8 +287,11 @@ bool CKeybindManager::tryMoveFocusToMonitor(CMonitor* monitor) {\n         return false;\n     }\n \n-    const auto PWORKSPACE        = g_pCompositor->m_pLastMonitor->activeWorkspace;\n-    const auto PNEWMAINWORKSPACE = monitor->activeWorkspace;\n+    static auto PFOLLOWMOUSE = CConfigValue<Hyprlang::INT>(\"input:follow_mouse\");\n+    static auto PNOWARPS     = CConfigValue<Hyprlang::INT>(\"cursor:no_warps\");\n+\n+    const auto  PWORKSPACE        = g_pCompositor->m_pLastMonitor->activeWorkspace;",
        "comment_created_at": "2024-07-24T16:29:58+00:00",
        "comment_author": "antonok-edm",
        "comment_body": "oh, that part only got edited due to the formatting - do you want me to add an early return if it's null?",
        "pr_file_module": null
      },
      {
        "comment_id": "1690160815",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7015,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1690112466",
        "commented_code": "@@ -287,8 +287,11 @@ bool CKeybindManager::tryMoveFocusToMonitor(CMonitor* monitor) {\n         return false;\n     }\n \n-    const auto PWORKSPACE        = g_pCompositor->m_pLastMonitor->activeWorkspace;\n-    const auto PNEWMAINWORKSPACE = monitor->activeWorkspace;\n+    static auto PFOLLOWMOUSE = CConfigValue<Hyprlang::INT>(\"input:follow_mouse\");\n+    static auto PNOWARPS     = CConfigValue<Hyprlang::INT>(\"cursor:no_warps\");\n+\n+    const auto  PWORKSPACE        = g_pCompositor->m_pLastMonitor->activeWorkspace;",
        "comment_created_at": "2024-07-24T17:07:53+00:00",
        "comment_author": "antonok-edm",
        "comment_body": "I added it",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1526377263",
    "pr_number": 5117,
    "pr_file": "src/managers/SessionLockManager.cpp",
    "created_at": "2024-03-15T14:29:56+00:00",
    "commented_code": "void CSessionLockManager::removeSessionLockSurface(SSessionLockSurface* pSLS) {\n     std::erase_if(m_sSessionLock.vSessionLockSurfaces, [&](const auto& other) { return pSLS == other.get(); });\n+\n+    if (g_pCompositor->m_pLastFocus != nullptr)",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1526377263",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5117,
        "pr_file": "src/managers/SessionLockManager.cpp",
        "discussion_id": "1526377263",
        "commented_code": "@@ -156,6 +156,16 @@ bool CSessionLockManager::isSurfaceSessionLock(wlr_surface* pSurface) {\n \n void CSessionLockManager::removeSessionLockSurface(SSessionLockSurface* pSLS) {\n     std::erase_if(m_sSessionLock.vSessionLockSurfaces, [&](const auto& other) { return pSLS == other.get(); });\n+\n+    if (g_pCompositor->m_pLastFocus != nullptr)",
        "comment_created_at": "2024-03-15T14:29:56+00:00",
        "comment_author": "vaxerski",
        "comment_body": "redundant != nullptr",
        "pr_file_module": null
      },
      {
        "comment_id": "1526578839",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5117,
        "pr_file": "src/managers/SessionLockManager.cpp",
        "discussion_id": "1526377263",
        "commented_code": "@@ -156,6 +156,16 @@ bool CSessionLockManager::isSurfaceSessionLock(wlr_surface* pSurface) {\n \n void CSessionLockManager::removeSessionLockSurface(SSessionLockSurface* pSLS) {\n     std::erase_if(m_sSessionLock.vSessionLockSurfaces, [&](const auto& other) { return pSLS == other.get(); });\n+\n+    if (g_pCompositor->m_pLastFocus != nullptr)",
        "comment_created_at": "2024-03-15T16:57:05+00:00",
        "comment_author": "drendog",
        "comment_body": "it will be setted to nullptr [here](https://github.com/hyprwm/Hyprland/blob/c62a50e9746009d15bc0ede0ae2b57917e789aeb/src/managers/SessionLockManager.cpp#L41) when the surface to be destroyed is focused. If i remove this condition, the focus will be changed when the surface to be destroyed is also not focused",
        "pr_file_module": null
      },
      {
        "comment_id": "1526587476",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5117,
        "pr_file": "src/managers/SessionLockManager.cpp",
        "discussion_id": "1526377263",
        "commented_code": "@@ -156,6 +156,16 @@ bool CSessionLockManager::isSurfaceSessionLock(wlr_surface* pSurface) {\n \n void CSessionLockManager::removeSessionLockSurface(SSessionLockSurface* pSLS) {\n     std::erase_if(m_sSessionLock.vSessionLockSurfaces, [&](const auto& other) { return pSLS == other.get(); });\n+\n+    if (g_pCompositor->m_pLastFocus != nullptr)",
        "comment_created_at": "2024-03-15T17:04:32+00:00",
        "comment_author": "vaxerski",
        "comment_body": "I meant only the `!= nullptr` part\r\n\r\n`if (g_pCompositor->m_pLastFocus)`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1447621923",
    "pr_number": 4402,
    "pr_file": "src/managers/KeybindManager.cpp",
    "created_at": "2024-01-10T16:24:21+00:00",
    "commented_code": "changeworkspace(PWORKSPACE->getConfigName());\n     }\n \n+    const auto WASFULLSCREEN = g_pCompositor->m_pLastWindow->m_bIsFullscreen;",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1447621923",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 4402,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1447621923",
        "commented_code": "@@ -1670,8 +1670,17 @@ void CKeybindManager::focusWindow(std::string regexp) {\n         changeworkspace(PWORKSPACE->getConfigName());\n     }\n \n+    const auto WASFULLSCREEN = g_pCompositor->m_pLastWindow->m_bIsFullscreen;",
        "comment_created_at": "2024-01-10T16:24:21+00:00",
        "comment_author": "vaxerski",
        "comment_body": "m_pLastWindow still can be null. This would be a nullptr dereference aka segfault.\r\n\r\n```cpp\r\ng_pCompositor->m_pLastWindow ? g_pCompositor->m_pLastWindow->m_bIsFullscreen : false;\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1447682091",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 4402,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1447621923",
        "commented_code": "@@ -1670,8 +1670,17 @@ void CKeybindManager::focusWindow(std::string regexp) {\n         changeworkspace(PWORKSPACE->getConfigName());\n     }\n \n+    const auto WASFULLSCREEN = g_pCompositor->m_pLastWindow->m_bIsFullscreen;",
        "comment_created_at": "2024-01-10T17:11:42+00:00",
        "comment_author": "killown",
        "comment_body": "what about WASFULLSCREEN == true or in case you don't like it, could you suggest a better way? I was just trying to avoid == true",
        "pr_file_module": null
      },
      {
        "comment_id": "1447778275",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 4402,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1447621923",
        "commented_code": "@@ -1670,8 +1670,17 @@ void CKeybindManager::focusWindow(std::string regexp) {\n         changeworkspace(PWORKSPACE->getConfigName());\n     }\n \n+    const auto WASFULLSCREEN = g_pCompositor->m_pLastWindow->m_bIsFullscreen;",
        "comment_created_at": "2024-01-10T18:34:26+00:00",
        "comment_author": "vaxerski",
        "comment_body": "what?",
        "pr_file_module": null
      },
      {
        "comment_id": "1447794969",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 4402,
        "pr_file": "src/managers/KeybindManager.cpp",
        "discussion_id": "1447621923",
        "commented_code": "@@ -1670,8 +1670,17 @@ void CKeybindManager::focusWindow(std::string regexp) {\n         changeworkspace(PWORKSPACE->getConfigName());\n     }\n \n+    const auto WASFULLSCREEN = g_pCompositor->m_pLastWindow->m_bIsFullscreen;",
        "comment_created_at": "2024-01-10T18:51:02+00:00",
        "comment_author": "killown",
        "comment_body": "nevermind, changed the code, can you check",
        "pr_file_module": null
      }
    ]
  }
]