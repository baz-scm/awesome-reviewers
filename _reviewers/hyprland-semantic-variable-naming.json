[
  {
    "discussion_id": "1712710262",
    "pr_number": 7278,
    "pr_file": "src/debug/HyprDebugOverlay.cpp",
    "created_at": "2024-08-10T20:19:17+00:00",
    "commented_code": "m_pTexture = makeShared<CTexture>();\n }\n \n-void CHyprMonitorDebugOverlay::renderData(CMonitor* pMonitor, float \u00b5s) {\n-    m_dLastRenderTimes.push_back(\u00b5s / 1000.f);\n+void CHyprMonitorDebugOverlay::renderData(CMonitor* pMonitor, float duration) {",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1712710262",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7278,
        "pr_file": "src/debug/HyprDebugOverlay.cpp",
        "discussion_id": "1712710262",
        "commented_code": "@@ -7,8 +7,8 @@ CHyprDebugOverlay::CHyprDebugOverlay() {\n     m_pTexture = makeShared<CTexture>();\n }\n \n-void CHyprMonitorDebugOverlay::renderData(CMonitor* pMonitor, float \u00b5s) {\n-    m_dLastRenderTimes.push_back(\u00b5s / 1000.f);\n+void CHyprMonitorDebugOverlay::renderData(CMonitor* pMonitor, float duration) {",
        "comment_created_at": "2024-08-10T20:19:17+00:00",
        "comment_author": "vaxerski",
        "comment_body": "this is a bannable offense in software development. \"duration\" without a unit specifier, that is. `durationUs` is ok if you really want to avoid \u00b5",
        "pr_file_module": null
      },
      {
        "comment_id": "1712910068",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 7278,
        "pr_file": "src/debug/HyprDebugOverlay.cpp",
        "discussion_id": "1712710262",
        "commented_code": "@@ -7,8 +7,8 @@ CHyprDebugOverlay::CHyprDebugOverlay() {\n     m_pTexture = makeShared<CTexture>();\n }\n \n-void CHyprMonitorDebugOverlay::renderData(CMonitor* pMonitor, float \u00b5s) {\n-    m_dLastRenderTimes.push_back(\u00b5s / 1000.f);\n+void CHyprMonitorDebugOverlay::renderData(CMonitor* pMonitor, float duration) {",
        "comment_created_at": "2024-08-11T05:19:52+00:00",
        "comment_author": "gulafaran",
        "comment_body": "heh sorry :), shall remember that. changed it to durationUs.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1851166300",
    "pr_number": 8526,
    "pr_file": "src/config/ConfigManager.cpp",
    "created_at": "2024-11-21T00:46:05+00:00",
    "commented_code": "m_pConfig->addConfigValue(\"binds:movefocus_cycles_fullscreen\", Hyprlang::INT{1});\n     m_pConfig->addConfigValue(\"binds:disable_keybind_grabbing\", Hyprlang::INT{0});\n     m_pConfig->addConfigValue(\"binds:window_direction_monitor_fallback\", Hyprlang::INT{1});\n+    m_pConfig->addConfigValue(\"binds:pin_fullscreen\", Hyprlang::INT{0});",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1851166300",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8526,
        "pr_file": "src/config/ConfigManager.cpp",
        "discussion_id": "1851166300",
        "commented_code": "@@ -534,6 +534,7 @@ CConfigManager::CConfigManager() {\n     m_pConfig->addConfigValue(\"binds:movefocus_cycles_fullscreen\", Hyprlang::INT{1});\n     m_pConfig->addConfigValue(\"binds:disable_keybind_grabbing\", Hyprlang::INT{0});\n     m_pConfig->addConfigValue(\"binds:window_direction_monitor_fallback\", Hyprlang::INT{1});\n+    m_pConfig->addConfigValue(\"binds:pin_fullscreen\", Hyprlang::INT{0});",
        "comment_created_at": "2024-11-21T00:46:05+00:00",
        "comment_author": "vaxerski",
        "comment_body": "a name more like `allow_pin_fullscreen` makes more sense intuitively\r\n\r\n+ missing documentation in configDescriptions.hpp",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1677585642",
    "pr_number": 6880,
    "pr_file": "src/events/Windows.cpp",
    "created_at": "2024-07-15T10:00:04+00:00",
    "commented_code": "Debug::log(LOG, \"{:c} unmapped\", PWINDOW);\n \n+    static auto PEXITRETAINSFS = CConfigValue<Hyprlang::INT>(\"misc:exit_window_retains_fullscreen\");\n+\n+    const auto  pwindowCurrentFullscreenState = PWINDOW->m_bIsFullscreen;\n+    const auto  pwindowCurrentFullscreenMode  = PWINDOW->m_pWorkspace->m_efFullscreenMode;",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1677585642",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 6880,
        "pr_file": "src/events/Windows.cpp",
        "discussion_id": "1677585642",
        "commented_code": "@@ -580,6 +580,11 @@ void Events::listener_unmapWindow(void* owner, void* data) {\n \n     Debug::log(LOG, \"{:c} unmapped\", PWINDOW);\n \n+    static auto PEXITRETAINSFS = CConfigValue<Hyprlang::INT>(\"misc:exit_window_retains_fullscreen\");\n+\n+    const auto  pwindowCurrentFullscreenState = PWINDOW->m_bIsFullscreen;\n+    const auto  pwindowCurrentFullscreenMode  = PWINDOW->m_pWorkspace->m_efFullscreenMode;",
        "comment_created_at": "2024-07-15T10:00:04+00:00",
        "comment_author": "vaxerski",
        "comment_body": "style:\r\n these arent pointers, no `p` prefix\r\n consts are `CAPS`\r\n \r\n`CURRENTWINDOWFSMODE` for example",
        "pr_file_module": null
      },
      {
        "comment_id": "1677596122",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 6880,
        "pr_file": "src/events/Windows.cpp",
        "discussion_id": "1677585642",
        "commented_code": "@@ -580,6 +580,11 @@ void Events::listener_unmapWindow(void* owner, void* data) {\n \n     Debug::log(LOG, \"{:c} unmapped\", PWINDOW);\n \n+    static auto PEXITRETAINSFS = CConfigValue<Hyprlang::INT>(\"misc:exit_window_retains_fullscreen\");\n+\n+    const auto  pwindowCurrentFullscreenState = PWINDOW->m_bIsFullscreen;\n+    const auto  pwindowCurrentFullscreenMode  = PWINDOW->m_pWorkspace->m_efFullscreenMode;",
        "comment_created_at": "2024-07-15T10:09:30+00:00",
        "comment_author": "nktnet1",
        "comment_body": "Ah, now I recall what the `p` is for. Haven't programmed in low-level languages in a few years oops.\r\n\r\nI've fixed this up - thanks @vaxerski.\r\n\r\nHappy to start drafting a PR for wiki if everything's good?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1480010644",
    "pr_number": 4489,
    "pr_file": "src/managers/input/Touch.cpp",
    "created_at": "2024-02-06T15:16:07+00:00",
    "commented_code": "return;\n     }\n \n+    if (*PSWIPETOUCH && (!m_pFoundLSToFocus || m_pFoundLSToFocus->layer == ZWLR_LAYER_SHELL_V1_LAYER_BACKGROUND)) {\n+        const auto PWORKSPACE = g_pCompositor->getWorkspaceByID(PMONITOR->activeWorkspace);\n+        const bool VERTANIMS  = PWORKSPACE->m_vRenderOffset.getConfig()->pValues->internalStyle == \"slidevert\" ||\n+            PWORKSPACE->m_vRenderOffset.getConfig()->pValues->internalStyle.starts_with(\"slidefadevert\");\n+        // TODO: support no_gaps_when_only?\n+        const auto target_portion = (*PGAPSOUT + *PBORDERSIZE) / (VERTANIMS ? PMONITOR->vecSize.y : PMONITOR->vecSize.x);",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1480010644",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 4489,
        "pr_file": "src/managers/input/Touch.cpp",
        "discussion_id": "1480010644",
        "commented_code": "@@ -24,6 +28,25 @@ void CInputManager::onTouchDown(wlr_touch_down_event* e) {\n         return;\n     }\n \n+    if (*PSWIPETOUCH && (!m_pFoundLSToFocus || m_pFoundLSToFocus->layer == ZWLR_LAYER_SHELL_V1_LAYER_BACKGROUND)) {\n+        const auto PWORKSPACE = g_pCompositor->getWorkspaceByID(PMONITOR->activeWorkspace);\n+        const bool VERTANIMS  = PWORKSPACE->m_vRenderOffset.getConfig()->pValues->internalStyle == \"slidevert\" ||\n+            PWORKSPACE->m_vRenderOffset.getConfig()->pValues->internalStyle.starts_with(\"slidefadevert\");\n+        // TODO: support no_gaps_when_only?\n+        const auto target_portion = (*PGAPSOUT + *PBORDERSIZE) / (VERTANIMS ? PMONITOR->vecSize.y : PMONITOR->vecSize.x);",
        "comment_created_at": "2024-02-06T15:16:07+00:00",
        "comment_author": "vaxerski",
        "comment_body": "no snake_case, we use camelCase\r\n\r\nadditionally, const values we SHOUT\r\n\r\nso `TARGETPORTION` and `POSITION`",
        "pr_file_module": null
      }
    ]
  }
]