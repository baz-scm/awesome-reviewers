[
  {
    "discussion_id": "1792616903",
    "pr_number": 8034,
    "pr_file": "scripts/generateVersion.sh",
    "created_at": "2024-10-08T23:31:36+00:00",
    "commented_code": "#!/bin/sh\n cp -fr ./src/version.h.in ./src/version.h\n \n+HYPRLAND_VERSION=${HYPRLAND_VERSION-$(cat VERSION)}",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1792616903",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 8034,
        "pr_file": "scripts/generateVersion.sh",
        "discussion_id": "1792616903",
        "commented_code": "@@ -1,6 +1,7 @@\n #!/bin/sh\n cp -fr ./src/version.h.in ./src/version.h\n \n+HYPRLAND_VERSION=${HYPRLAND_VERSION-$(cat VERSION)}",
        "comment_created_at": "2024-10-08T23:31:36+00:00",
        "comment_author": "vaxerski",
        "comment_body": "instead of this, just pass a `add_compile_definitions` in the cmake",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1594403259",
    "pr_number": 5952,
    "pr_file": "scripts/generateVersion.sh",
    "created_at": "2024-05-08T17:41:21+00:00",
    "commented_code": "#!/bin/sh\n cp -fr ./src/version.h.in ./src/version.h\n \n-HASH=$(git rev-parse HEAD)\n-BRANCH=$(git branch --show-current)\n-MESSAGE=$(git show ${GIT_COMMIT_HASH} | head -n 5 | tail -n 1 | sed -e 's/#//g' -e 's/\\\"//g')",
    "repo_full_name": "hyprwm/Hyprland",
    "discussion_comments": [
      {
        "comment_id": "1594403259",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5952,
        "pr_file": "scripts/generateVersion.sh",
        "discussion_id": "1594403259",
        "commented_code": "@@ -1,13 +1,13 @@\n #!/bin/sh\n cp -fr ./src/version.h.in ./src/version.h\n \n-HASH=$(git rev-parse HEAD)\n-BRANCH=$(git branch --show-current)\n-MESSAGE=$(git show ${GIT_COMMIT_HASH} | head -n 5 | tail -n 1 | sed -e 's/#//g' -e 's/\\\"//g')",
        "comment_created_at": "2024-05-08T17:41:21+00:00",
        "comment_author": "andresilva",
        "comment_body": "GIT_COMMIT_HASH was always unpopulated, it worked because it assumes HEAD when given no arguments.",
        "pr_file_module": null
      },
      {
        "comment_id": "1594538342",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5952,
        "pr_file": "scripts/generateVersion.sh",
        "discussion_id": "1594403259",
        "commented_code": "@@ -1,13 +1,13 @@\n #!/bin/sh\n cp -fr ./src/version.h.in ./src/version.h\n \n-HASH=$(git rev-parse HEAD)\n-BRANCH=$(git branch --show-current)\n-MESSAGE=$(git show ${GIT_COMMIT_HASH} | head -n 5 | tail -n 1 | sed -e 's/#//g' -e 's/\\\"//g')",
        "comment_created_at": "2024-05-08T19:36:10+00:00",
        "comment_author": "vaxerski",
        "comment_body": "I'd **highly** recommend to get nix to set  _at least_ GIT_COMMIT_HASH, otherwise hyprpm will not work.",
        "pr_file_module": null
      },
      {
        "comment_id": "1594615475",
        "repo_full_name": "hyprwm/Hyprland",
        "pr_number": 5952,
        "pr_file": "scripts/generateVersion.sh",
        "discussion_id": "1594403259",
        "commented_code": "@@ -1,13 +1,13 @@\n #!/bin/sh\n cp -fr ./src/version.h.in ./src/version.h\n \n-HASH=$(git rev-parse HEAD)\n-BRANCH=$(git branch --show-current)\n-MESSAGE=$(git show ${GIT_COMMIT_HASH} | head -n 5 | tail -n 1 | sed -e 's/#//g' -e 's/\\\"//g')",
        "comment_created_at": "2024-05-08T20:46:14+00:00",
        "comment_author": "andresilva",
        "comment_body": "the nix build is setting the git hash, but the variable name is actually HASH whereas the script was using GIT_COMMIT_HASH here (which is undefined in the nix or regular build). I could have fixed this by replacing `${GIT_COMMIT_HASH}` with `$HASH`, but there's no point in doing that since we just want to use HEAD anyway (which is the default for git show if no argument is passed).",
        "pr_file_module": null
      }
    ]
  }
]