[
  {
    "discussion_id": "2183909069",
    "pr_number": 519,
    "pr_file": "apps/web/app/api/scheduled-actions/execute/route.ts",
    "created_at": "2025-07-03T23:12:53+00:00",
    "commented_code": "+import { verifySignatureAppRouter } from \"@upstash/qstash/nextjs\";\n+import type { NextRequest } from \"next/server\";\n+import { z } from \"zod\";\n+import { withError } from \"@/utils/middleware\";\n+import { createScopedLogger } from \"@/utils/logger\";\n+import { markQStashActionAsExecuting } from \"@/utils/scheduled-actions/scheduler\";\n+import { executeScheduledAction } from \"@/utils/scheduled-actions/executor\";\n+import prisma from \"@/utils/prisma\";\n+import { ScheduledActionStatus } from \"@prisma/client\";\n+\n+const logger = createScopedLogger(\"qstash-scheduled-actions-executor\");\n+\n+export const maxDuration = 300; // 5 minutes\n+\n+const ScheduledActionPayloadSchema = z.object({",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2183909069",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 519,
        "pr_file": "apps/web/app/api/scheduled-actions/execute/route.ts",
        "discussion_id": "2183909069",
        "commented_code": "@@ -0,0 +1,121 @@\n+import { verifySignatureAppRouter } from \"@upstash/qstash/nextjs\";\n+import type { NextRequest } from \"next/server\";\n+import { z } from \"zod\";\n+import { withError } from \"@/utils/middleware\";\n+import { createScopedLogger } from \"@/utils/logger\";\n+import { markQStashActionAsExecuting } from \"@/utils/scheduled-actions/scheduler\";\n+import { executeScheduledAction } from \"@/utils/scheduled-actions/executor\";\n+import prisma from \"@/utils/prisma\";\n+import { ScheduledActionStatus } from \"@prisma/client\";\n+\n+const logger = createScopedLogger(\"qstash-scheduled-actions-executor\");\n+\n+export const maxDuration = 300; // 5 minutes\n+\n+const ScheduledActionPayloadSchema = z.object({",
        "comment_created_at": "2025-07-03T23:12:53+00:00",
        "comment_author": "elie222",
        "comment_body": "=> `scheduledActionPayloadSchema`\r\nto be consistent with the project\r\n\r\nor even more:\r\n=> `scheduledActionBody` is the format we use in most other places. but up to you.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2183925668",
    "pr_number": 519,
    "pr_file": "apps/web/utils/actions/rule.validation.ts",
    "created_at": "2025-07-03T23:24:43+00:00",
    "commented_code": "export const enableDraftRepliesBody = z.object({ enable: z.boolean() });\n export type EnableDraftRepliesBody = z.infer<typeof enableDraftRepliesBody>;\n \n-const categoryAction = z.enum([\"label\", \"label_archive\", \"none\"]);\n+const categoryAction = z.enum([\n+  \"label\",\n+  \"label_archive\",\n+  \"label_archive_1_week\",",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2183925668",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 519,
        "pr_file": "apps/web/utils/actions/rule.validation.ts",
        "discussion_id": "2183925668",
        "commented_code": "@@ -163,7 +169,12 @@ export type UpdateRuleSettingsBody = z.infer<typeof updateRuleSettingsBody>;\n export const enableDraftRepliesBody = z.object({ enable: z.boolean() });\n export type EnableDraftRepliesBody = z.infer<typeof enableDraftRepliesBody>;\n \n-const categoryAction = z.enum([\"label\", \"label_archive\", \"none\"]);\n+const categoryAction = z.enum([\n+  \"label\",\n+  \"label_archive\",\n+  \"label_archive_1_week\",",
        "comment_created_at": "2025-07-03T23:24:43+00:00",
        "comment_author": "elie222",
        "comment_body": "wonder if we call this `label_delay_archive`/ `label_delayed_archive` / `label_archive_delayed` or similar. rather than mentioning 1 week which could change if we adjust the code",
        "pr_file_module": null
      },
      {
        "comment_id": "2185524696",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 519,
        "pr_file": "apps/web/utils/actions/rule.validation.ts",
        "discussion_id": "2183925668",
        "commented_code": "@@ -163,7 +169,12 @@ export type UpdateRuleSettingsBody = z.infer<typeof updateRuleSettingsBody>;\n export const enableDraftRepliesBody = z.object({ enable: z.boolean() });\n export type EnableDraftRepliesBody = z.infer<typeof enableDraftRepliesBody>;\n \n-const categoryAction = z.enum([\"label\", \"label_archive\", \"none\"]);\n+const categoryAction = z.enum([\n+  \"label\",\n+  \"label_archive\",\n+  \"label_archive_1_week\",",
        "comment_created_at": "2025-07-04T14:35:45+00:00",
        "comment_author": "edulelis",
        "comment_body": "I added the 1_week option because the code explicitly delays the archive by one week, as there is no user input. However, I also agree that it makes sense to have `label_archive_delayed` and later allow the user to input the desired delay if needed.",
        "pr_file_module": null
      }
    ]
  }
]