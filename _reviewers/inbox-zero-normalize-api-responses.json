[
  {
    "discussion_id": "2033286458",
    "pr_number": 396,
    "pr_file": "apps/web/components/email-list/EmailListItem.tsx",
    "created_at": "2025-04-08T14:07:55+00:00",
    "commented_code": "ref: ForwardedRef<HTMLLIElement>,\n   ) => {\n     const { thread, splitView, onSelected } = props;\n+    const { userLabels } = useLabels();\n \n     const lastMessage = thread.messages?.[thread.messages.length - 1];\n \n     const isUnread = useMemo(() => {\n       return lastMessage?.labelIds?.includes(\"UNREAD\");\n     }, [lastMessage?.labelIds]);\n \n+    const labelsToDisplay = useMemo(() => {\n+      const labelIds = lastMessage?.labelIds;\n+      return labelIds\n+        ?.map((id) => {\n+          const label = userLabels[Number(id)];\n+          if (!label) return null;\n+          return { id, name: label.name };\n+        })\n+        .filter(isDefined);\n+    }, [lastMessage?.labelIds, userLabels]);",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2105955820",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 396,
        "pr_file": "apps/web/components/email-list/EmailListItem.tsx",
        "discussion_id": "2033286458",
        "commented_code": "@@ -45,13 +48,25 @@ export const EmailListItem = forwardRef(\n     ref: ForwardedRef<HTMLLIElement>,\n   ) => {\n     const { thread, splitView, onSelected } = props;\n+    const { userLabels } = useLabels();\n \n     const lastMessage = thread.messages?.[thread.messages.length - 1];\n \n     const isUnread = useMemo(() => {\n       return lastMessage?.labelIds?.includes(\"UNREAD\");\n     }, [lastMessage?.labelIds]);\n \n+    const labelsToDisplay = useMemo(() => {\n+      const labelIds = lastMessage?.labelIds;\n+      return labelIds\n+        ?.map((id) => {\n+          const label = userLabels[Number(id)];\n+          if (!label) return null;\n+          return { id, name: label.name };\n+        })\n+        .filter(isDefined);\n+    }, [lastMessage?.labelIds, userLabels]);",
        "comment_created_at": "2025-05-24T21:43:26+00:00",
        "comment_author": "elie222",
        "comment_body": "see this",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2164387034",
    "pr_number": 523,
    "pr_file": "apps/web/components/GroupedTable.tsx",
    "created_at": "2025-06-24T15:56:51+00:00",
    "commented_code": "return (\n     <>\n-      {data.threads.map((thread) => (\n-        <TableRow key={thread.id} className=\"bg-muted/50\">\n-          <TableCell className=\"py-3\">\n-            <ViewEmailButton threadId={thread.id} messageId={thread.id} />\n-          </TableCell>\n-          <TableCell className=\"py-3\">\n-            <Link\n-              href={getGmailUrl(thread.id, userEmail)}\n-              target=\"_blank\"\n-              className=\"hover:underline\"\n-            >\n-              {thread.messages[0].headers.subject}\n-            </Link>\n-          </TableCell>\n-          <TableCell className=\"py-3\">\n-            {decodeSnippet(thread.messages[0].snippet)}\n-          </TableCell>\n-          <TableCell className=\"text-nowrap py-3\">\n-            {formatShortDate(new Date(thread.messages[0].headers.date))}\n-          </TableCell>\n-        </TableRow>\n-      ))}\n+      {data.threads.map((thread) => {\n+        const firstMessage = thread.messages[0];\n+        // Handle both Google (with headers) and Microsoft (direct properties) message structures\n+        const subject =\n+          \"headers\" in firstMessage\n+            ? firstMessage.headers.subject\n+            : firstMessage.subject;\n+        const date =\n+          \"headers\" in firstMessage\n+            ? firstMessage.headers.date\n+            : firstMessage.receivedAt;",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2164387034",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 523,
        "pr_file": "apps/web/components/GroupedTable.tsx",
        "discussion_id": "2164387034",
        "commented_code": "@@ -555,28 +557,41 @@ function ExpandedRows({\n \n   return (\n     <>\n-      {data.threads.map((thread) => (\n-        <TableRow key={thread.id} className=\"bg-muted/50\">\n-          <TableCell className=\"py-3\">\n-            <ViewEmailButton threadId={thread.id} messageId={thread.id} />\n-          </TableCell>\n-          <TableCell className=\"py-3\">\n-            <Link\n-              href={getGmailUrl(thread.id, userEmail)}\n-              target=\"_blank\"\n-              className=\"hover:underline\"\n-            >\n-              {thread.messages[0].headers.subject}\n-            </Link>\n-          </TableCell>\n-          <TableCell className=\"py-3\">\n-            {decodeSnippet(thread.messages[0].snippet)}\n-          </TableCell>\n-          <TableCell className=\"text-nowrap py-3\">\n-            {formatShortDate(new Date(thread.messages[0].headers.date))}\n-          </TableCell>\n-        </TableRow>\n-      ))}\n+      {data.threads.map((thread) => {\n+        const firstMessage = thread.messages[0];\n+        // Handle both Google (with headers) and Microsoft (direct properties) message structures\n+        const subject =\n+          \"headers\" in firstMessage\n+            ? firstMessage.headers.subject\n+            : firstMessage.subject;\n+        const date =\n+          \"headers\" in firstMessage\n+            ? firstMessage.headers.date\n+            : firstMessage.receivedAt;",
        "comment_created_at": "2025-06-24T15:56:51+00:00",
        "comment_author": "elie222",
        "comment_body": "i think we should be returning a unified format on the server rather than lots of one off checks like this.\r\n\r\neg. set message.date, and message.subject, so that you don't need any special logic in this part of the code",
        "pr_file_module": null
      }
    ]
  }
]