[
  {
    "discussion_id": "2087152488",
    "pr_number": 434,
    "pr_file": ".github/workflows/build_and_publish_docker.yml",
    "created_at": "2025-05-13T15:50:22+00:00",
    "commented_code": "with:\n           github_token: ${{ secrets.GITHUB_TOKEN }}\n           branch: ${{ github.ref }}\n-          force_with_lease: true\n+          force: true\n           tags: true\n+\n+  build-docker:\n+    if: github.repository == 'elie222/inbox-zero'\n+    name: \"Build Docker Image\"\n+    runs-on: ubuntu-latest\n+    needs:\n+      - fetch-version\n+      - update_version_txt\n+\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          fetch-depth: 0\n+",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2087152488",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 434,
        "pr_file": ".github/workflows/build_and_publish_docker.yml",
        "discussion_id": "2087152488",
        "commented_code": "@@ -115,5 +83,43 @@ jobs:\n         with:\n           github_token: ${{ secrets.GITHUB_TOKEN }}\n           branch: ${{ github.ref }}\n-          force_with_lease: true\n+          force: true\n           tags: true\n+\n+  build-docker:\n+    if: github.repository == 'elie222/inbox-zero'\n+    name: \"Build Docker Image\"\n+    runs-on: ubuntu-latest\n+    needs:\n+      - fetch-version\n+      - update_version_txt\n+\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          fetch-depth: 0\n+",
        "comment_created_at": "2025-05-13T15:50:22+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\ud83d\udee0\ufe0f Refactor suggestion_\n\n**Checkout the updated commit for Docker build**  \nCurrently, the `build-docker` job checks out the commit that triggered the workflow, not the one created by the version bump. To ensure the image reflects the bumped version file, explicitly checkout `main` with full history:  \n```diff\n-      - name: Checkout code\n-        uses: actions/checkout@v4\n-        with:\n-          fetch-depth: 0\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          ref: main\n+          fetch-depth: 0\n```  \nThis guarantees the build sees the newly committed `version.txt`.  \n\n\n\n<!-- suggestion_start -->\n\n<details>\n<summary>\ud83d\udcdd Committable suggestion</summary>\n\n> \u203c\ufe0f **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\n      - name: Checkout code\n        uses: actions/checkout@v4\n        with:\n          ref: main\n          fetch-depth: 0\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2083898964",
    "pr_number": 432,
    "pr_file": ".github/workflows/build_and_publish_docker.yml",
    "created_at": "2025-05-12T06:19:47+00:00",
    "commented_code": "+name: \"Build Inbox Zero Docker Image\"\n+run-name: \"Build Inbox Zero Docker Image\"\n+\n+on:\n+  push:\n+    branches: [ \"main\" ]\n+\n+env:\n+  DOCKER_IMAGE_REGISTRY: \"ghcr.io\"\n+  DOCKER_USERNAME: \"elie222\"\n+\n+jobs:\n+  set-version:\n+    if: github.repository == 'elie222/inbox-zero'\n+    runs-on: ubuntu-latest\n+\n+    outputs:\n+      version: ${{ steps.set_version.outputs.version }}\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v4.1.1\n+\n+      - name: Set version\n+        id: set_version\n+        run: |\n+          version=$(cat version.txt)\n+          echo \"version=$version\" >> $GITHUB_OUTPUT\n+\n+  build-docker:\n+    if: github.repository == 'elie222/inbox-zero'\n+    name: \"Build Docker Image\"\n+    runs-on: ubuntu-latest\n+    needs:\n+      - set-version\n+\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          fetch-depth: 0\n+\n+      - name: Login to GHCR\n+        uses: docker/login-action@v3\n+        with:\n+          registry: ${{ env.DOCKER_IMAGE_REGISTRY }}\n+          username: ${{ env.DOCKER_USERNAME }}\n+          password: ${{ secrets.GITHUB_TOKEN }}\n+\n+      - name: Set up Docker Buildx\n+        uses: docker/setup-buildx-action@v2\n+\n+      - name: Build and Push Docker Image\n+        uses: docker/build-push-action@v4\n+        with:\n+          context: .\n+          file: docker/Dockerfile.prod\n+          platforms: linux/arm64, linux/amd64\n+          push: true\n+          cache-from: type=gha\n+          cache-to: type=gha, mode=max\n+          tags: |\n+            ghcr.io/${{ env.DOCKER_USERNAME }}/inbox-zero:latest\n+            ghcr.io/${{ env.DOCKER_USERNAME }}/inbox-zero:${{ needs.set-version.outputs.version }}\n+\n+  update_version_txt:\n+    if: github.repository == 'elie222/inbox-zero'\n+    needs:\n+      - set-version\n+      - build-docker\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v4.1.1\n+        with:\n+          ref: main\n+          fetch-depth: 0\n+\n+      - name: Bump version on main branch\n+        id: update_version\n+        shell: bash\n+        run: |\n+          set -x\n+          BASE_VERSION=${{ needs.set-version.outputs.version }}\n+          IFS='.' read -r -a version_parts <<< \"$BASE_VERSION\"\n+          for i in {0..2}; do\n+            version_parts[$i]=${version_parts[$i]:-0}\n+          done\n+          version_parts[2]=$((version_parts[2] + 1))\n+          new_version=\"${version_parts[0]}.${version_parts[1]}.${version_parts[2]}\"\n+          echo \"$new_version\" > version.txt\n+          echo \"new_version=${new_version}\" >> $GITHUB_OUTPUT\n+\n+      - name: Commit updated version file\n+        shell: bash\n+        run: |\n+          git config --local user.email \"github-actions@inboxzero.com\"\n+          git config --local user.name \"github-actions\"\n+          git tag -a \"${{ needs.set-version.outputs.version }}\" -m \"Release version ${{ needs.set-version.outputs.version }}\"\n+          git commit -a -m \"Update base version to ${{needs.set-version.outputs.version}}\"\n+          echo \"Version updated to ${{needs.set-version.outputs.version}} on trails\" >> $GITHUB_STEP_SUMMARY",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2083898964",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 432,
        "pr_file": ".github/workflows/build_and_publish_docker.yml",
        "discussion_id": "2083898964",
        "commented_code": "@@ -0,0 +1,110 @@\n+name: \"Build Inbox Zero Docker Image\"\n+run-name: \"Build Inbox Zero Docker Image\"\n+\n+on:\n+  push:\n+    branches: [ \"main\" ]\n+\n+env:\n+  DOCKER_IMAGE_REGISTRY: \"ghcr.io\"\n+  DOCKER_USERNAME: \"elie222\"\n+\n+jobs:\n+  set-version:\n+    if: github.repository == 'elie222/inbox-zero'\n+    runs-on: ubuntu-latest\n+\n+    outputs:\n+      version: ${{ steps.set_version.outputs.version }}\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v4.1.1\n+\n+      - name: Set version\n+        id: set_version\n+        run: |\n+          version=$(cat version.txt)\n+          echo \"version=$version\" >> $GITHUB_OUTPUT\n+\n+  build-docker:\n+    if: github.repository == 'elie222/inbox-zero'\n+    name: \"Build Docker Image\"\n+    runs-on: ubuntu-latest\n+    needs:\n+      - set-version\n+\n+    steps:\n+      - name: Checkout code\n+        uses: actions/checkout@v4\n+        with:\n+          fetch-depth: 0\n+\n+      - name: Login to GHCR\n+        uses: docker/login-action@v3\n+        with:\n+          registry: ${{ env.DOCKER_IMAGE_REGISTRY }}\n+          username: ${{ env.DOCKER_USERNAME }}\n+          password: ${{ secrets.GITHUB_TOKEN }}\n+\n+      - name: Set up Docker Buildx\n+        uses: docker/setup-buildx-action@v2\n+\n+      - name: Build and Push Docker Image\n+        uses: docker/build-push-action@v4\n+        with:\n+          context: .\n+          file: docker/Dockerfile.prod\n+          platforms: linux/arm64, linux/amd64\n+          push: true\n+          cache-from: type=gha\n+          cache-to: type=gha, mode=max\n+          tags: |\n+            ghcr.io/${{ env.DOCKER_USERNAME }}/inbox-zero:latest\n+            ghcr.io/${{ env.DOCKER_USERNAME }}/inbox-zero:${{ needs.set-version.outputs.version }}\n+\n+  update_version_txt:\n+    if: github.repository == 'elie222/inbox-zero'\n+    needs:\n+      - set-version\n+      - build-docker\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v4.1.1\n+        with:\n+          ref: main\n+          fetch-depth: 0\n+\n+      - name: Bump version on main branch\n+        id: update_version\n+        shell: bash\n+        run: |\n+          set -x\n+          BASE_VERSION=${{ needs.set-version.outputs.version }}\n+          IFS='.' read -r -a version_parts <<< \"$BASE_VERSION\"\n+          for i in {0..2}; do\n+            version_parts[$i]=${version_parts[$i]:-0}\n+          done\n+          version_parts[2]=$((version_parts[2] + 1))\n+          new_version=\"${version_parts[0]}.${version_parts[1]}.${version_parts[2]}\"\n+          echo \"$new_version\" > version.txt\n+          echo \"new_version=${new_version}\" >> $GITHUB_OUTPUT\n+\n+      - name: Commit updated version file\n+        shell: bash\n+        run: |\n+          git config --local user.email \"github-actions@inboxzero.com\"\n+          git config --local user.name \"github-actions\"\n+          git tag -a \"${{ needs.set-version.outputs.version }}\" -m \"Release version ${{ needs.set-version.outputs.version }}\"\n+          git commit -a -m \"Update base version to ${{needs.set-version.outputs.version}}\"\n+          echo \"Version updated to ${{needs.set-version.outputs.version}} on trails\" >> $GITHUB_STEP_SUMMARY",
        "comment_created_at": "2025-05-12T06:19:47+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\u26a0\ufe0f Potential issue_\n\n**Fix version bump commit and push branch**  \nThe `update_version_txt` job\u2019s commit message uses the old version and the push action targets `${{ github.ref }}` instead of `main`, which may not map correctly. Update the commit to reference the new bumped version and push explicitly to `main`.  \n  \n```diff\n-          git tag -a \"${{ needs.set-version.outputs.version }}\" -m \"Release version ${{ needs.set-version.outputs.version }}\"\n-          git commit -a -m \"Update base version to ${{needs.set-version.outputs.version}}\"\n+          git tag -a \"${{ needs.set-version.outputs.version }}\" -m \"Release version ${{ needs.set-version.outputs.version }}\"\n+          git commit -a -m \"Update base version to ${{ steps.update_version.outputs.new_version }}\"\n@@\n-          branch: ${{ github.ref }}\n+          branch: main\n```\n\n\nAlso applies to: 108-109\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2085590927",
    "pr_number": 432,
    "pr_file": ".github/workflows/build_and_publish_docker.yml",
    "created_at": "2025-05-12T21:51:26+00:00",
    "commented_code": "+name: \"Build Inbox Zero Docker Image\"\n+run-name: \"Build Inbox Zero Docker Image\"\n+\n+on:\n+  push:\n+    branches: [\"main\"]\n+",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2085590927",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 432,
        "pr_file": ".github/workflows/build_and_publish_docker.yml",
        "discussion_id": "2085590927",
        "commented_code": "@@ -0,0 +1,114 @@\n+name: \"Build Inbox Zero Docker Image\"\n+run-name: \"Build Inbox Zero Docker Image\"\n+\n+on:\n+  push:\n+    branches: [\"main\"]\n+",
        "comment_created_at": "2025-05-12T21:51:26+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\ud83d\udee0\ufe0f Refactor suggestion_\n\n**Prevent infinite loops by ignoring version.txt changes**\n\nEvery time the version bump job commits to `version.txt`, it retriggers itself. Add a `paths-ignore` filter so pushes that only change `version.txt` don\u2019t re-run the workflow:\n\n```diff\n on:\n   push:\n     branches: [\"main\"]\n+    paths-ignore:\n+      - version.txt\n```\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2061199167",
    "pr_number": 417,
    "pr_file": ".github/workflows/build_apps.yml",
    "created_at": "2025-04-26T06:47:42+00:00",
    "commented_code": "+name: \"Build Inbox Zero Docker Image\"\n+run-name: \"Build Inbox Zero Docker Image\"\n+\n+on:\n+  push:\n+    branches: [ \"main\" ]\n+  pull_request:\n+    branches: [ \"main\" ]\n+",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2061199167",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 417,
        "pr_file": ".github/workflows/build_apps.yml",
        "discussion_id": "2061199167",
        "commented_code": "@@ -0,0 +1,96 @@\n+name: \"Build Inbox Zero Docker Image\"\n+run-name: \"Build Inbox Zero Docker Image\"\n+\n+on:\n+  push:\n+    branches: [ \"main\" ]\n+  pull_request:\n+    branches: [ \"main\" ]\n+",
        "comment_created_at": "2025-04-26T06:47:42+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\u26a0\ufe0f Potential issue_\n\n**Restrict tagging/publishing to push events**  \nCurrently the workflow triggers on both `push` and `pull_request`, which can lead to premature tag creation or image pushes during PRs. To align with the intent of \u201cpublishing on main pushes,\u201d scope the triggers to `push` only (or add an event-name guard at the job level). For example:\n\n```diff\n-on:\n-  push:\n-    branches: [ \"main\" ]\n-  pull_request:\n-    branches: [ \"main\" ]\n+on:\n+  push:\n+    branches: [ \"main\" ]\n#  pull_request:\n#    branches: [ \"main\" ]\n```\n\n\n\n<!-- suggestion_start -->\n\n<details>\n<summary>\ud83d\udcdd Committable suggestion</summary>\n\n> \u203c\ufe0f **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n`````suggestion\non:\n  push:\n    branches: [ \"main\" ]\n#  pull_request:\n#    branches: [ \"main\" ]\n`````\n\n</details>\n\n<!-- suggestion_end -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
        "pr_file_module": null
      }
    ]
  }
]