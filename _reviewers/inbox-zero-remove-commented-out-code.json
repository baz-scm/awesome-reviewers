[
  {
    "discussion_id": "2094202677",
    "pr_number": 431,
    "pr_file": "apps/web/app/api/chat/route.ts",
    "created_at": "2025-05-17T20:23:12+00:00",
    "commented_code": "+import { streamText, tool } from \"ai\";\n+import { z } from \"zod\";\n+import { createScopedLogger } from \"@/utils/logger\";\n+import {\n+  createRuleSchema,\n+  // type CreateRuleSchemaWithCategories,\n+} from \"@/utils/ai/rule/create-rule-schema\";\n+// import { getUserCategoriesForNames } from \"@/utils/category.server\";\n+import prisma from \"@/utils/prisma\";\n+import { createRule, partialUpdateRule } from \"@/utils/rule/rule\";\n+import { ActionType, ColdEmailSetting, LogicalOperator } from \"@prisma/client\";\n+import { withEmailAccount } from \"@/utils/middleware\";\n+import { saveAiUsage } from \"@/utils/usage\";\n+import { getEmailAccountWithAi } from \"@/utils/user/get\";\n+import { NextResponse } from \"next/server\";\n+import { getModel } from \"@/utils/llms/model\";\n+\n+const logger = createScopedLogger(\"api/chat\");\n+\n+export const maxDuration = 120;\n+",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2094202677",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 431,
        "pr_file": "apps/web/app/api/chat/route.ts",
        "discussion_id": "2094202677",
        "commented_code": "@@ -0,0 +1,545 @@\n+import { streamText, tool } from \"ai\";\n+import { z } from \"zod\";\n+import { createScopedLogger } from \"@/utils/logger\";\n+import {\n+  createRuleSchema,\n+  // type CreateRuleSchemaWithCategories,\n+} from \"@/utils/ai/rule/create-rule-schema\";\n+// import { getUserCategoriesForNames } from \"@/utils/category.server\";\n+import prisma from \"@/utils/prisma\";\n+import { createRule, partialUpdateRule } from \"@/utils/rule/rule\";\n+import { ActionType, ColdEmailSetting, LogicalOperator } from \"@prisma/client\";\n+import { withEmailAccount } from \"@/utils/middleware\";\n+import { saveAiUsage } from \"@/utils/usage\";\n+import { getEmailAccountWithAi } from \"@/utils/user/get\";\n+import { NextResponse } from \"next/server\";\n+import { getModel } from \"@/utils/llms/model\";\n+\n+const logger = createScopedLogger(\"api/chat\");\n+\n+export const maxDuration = 120;\n+",
        "comment_created_at": "2025-05-17T20:23:12+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\ud83d\udee0\ufe0f Refactor suggestion_\n\n**Clean up commented-out imports and code**\n\nThere are several commented-out imports and code segments that should be removed if they're not needed anymore. This improves code readability and maintenance.\n\n```diff\nimport { streamText, tool } from \"ai\";\nimport { z } from \"zod\";\nimport { createScopedLogger } from \"@/utils/logger\";\nimport {\n  createRuleSchema,\n-  // type CreateRuleSchemaWithCategories,\n} from \"@/utils/ai/rule/create-rule-schema\";\n-// import { getUserCategoriesForNames } from \"@/utils/category.server\";\nimport prisma from \"@/utils/prisma\";\n```\n\n\n\n<!-- suggestion_start -->\n\n<details>\n<summary>\ud83d\udcdd Committable suggestion</summary>\n\n> \u203c\ufe0f **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n```suggestion\nimport { streamText, tool } from \"ai\";\nimport { z } from \"zod\";\nimport { createScopedLogger } from \"@/utils/logger\";\nimport {\n  createRuleSchema,\n} from \"@/utils/ai/rule/create-rule-schema\";\nimport prisma from \"@/utils/prisma\";\nimport { createRule, partialUpdateRule } from \"@/utils/rule/rule\";\nimport { ActionType, ColdEmailSetting, LogicalOperator } from \"@prisma/client\";\nimport { withEmailAccount } from \"@/utils/middleware\";\nimport { saveAiUsage } from \"@/utils/usage\";\nimport { getEmailAccountWithAi } from \"@/utils/user/get\";\nimport { NextResponse } from \"next/server\";\nimport { getModel } from \"@/utils/llms/model\";\n\nconst logger = createScopedLogger(\"api/chat\");\n\nexport const maxDuration = 120;\n```\n\n</details>\n\n<!-- suggestion_end -->\n\n<details>\n<summary>\ud83e\udd16 Prompt for AI Agents</summary>\n\n```\nIn apps/web/app/api/chat/route.ts lines 1 to 21, remove all commented-out\nimports and any commented code that is no longer needed, such as the commented\nimport of getUserCategoriesForNames and the commented type import. This cleanup\nwill improve code readability and maintainability.\n```\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit -->\n\n\u2705 Addressed in commit 416a1b1",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2057831326",
    "pr_number": 412,
    "pr_file": "apps/web/utils/error.ts",
    "created_at": "2025-04-24T08:21:01+00:00",
    "commented_code": "E extends object = Record<string, unknown>,\n > = ActionError<E> | T;\n \n-export function isActionError(error: any): error is ActionError {\n-  return error && typeof error === \"object\" && \"error\" in error && error.error;\n-}\n+// export function isActionError(error: any): error is ActionError {\n+//   return error && typeof error === \"object\" && \"error\" in error && error.error;\n+// }",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2057831326",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 412,
        "pr_file": "apps/web/utils/error.ts",
        "discussion_id": "2057831326",
        "commented_code": "@@ -79,9 +79,9 @@ export type ServerActionResponse<\n   E extends object = Record<string, unknown>,\n > = ActionError<E> | T;\n \n-export function isActionError(error: any): error is ActionError {\n-  return error && typeof error === \"object\" && \"error\" in error && error.error;\n-}\n+// export function isActionError(error: any): error is ActionError {\n+//   return error && typeof error === \"object\" && \"error\" in error && error.error;\n+// }",
        "comment_created_at": "2025-04-24T08:21:01+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\ud83d\udee0\ufe0f Refactor suggestion_\n\n**Commented code should be removed rather than retained.**\n\nThe `isActionError` function has been commented out rather than deleted. This is likely because the codebase has moved to checking for `serverError` properties directly. Commented-out code can lead to confusion and technical debt.\n\n```diff\n-// export function isActionError(error: any): error is ActionError {\n-//   return error && typeof error === \"object\" && \"error\" in error && error.error;\n-// }\n```\n\n\n<!-- suggestion_start -->\n\n<details>\n<summary>\ud83d\udcdd Committable suggestion</summary>\n\n> \u203c\ufe0f **IMPORTANT**\n> Carefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation. Thoroughly test & benchmark the code to ensure it meets the requirements.\n\n`````suggestion\n\n`````\n\n</details>\n\n<!-- suggestion_end -->\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1932894451",
    "pr_number": 316,
    "pr_file": "apps/web/utils/ai/rule/create-prompt-from-rule.ts",
    "created_at": "2025-01-28T21:41:36+00:00",
    "commented_code": "conditions.push(`with subject containing \"${rule.subject}\"`);\n   if (rule.body) conditions.push(`with body containing \"${rule.body}\"`);\n \n-  // Add group if present\n-  if (rule.group?.name) {\n-    conditions.push(`in group \"${rule.group.name}\"`);\n-  }\n+  // // Add group if present\n+  // if (rule.group?.name) {\n+  //   conditions.push(`in group \"${rule.group.name}\"`);\n+  // }",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "1932894451",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 316,
        "pr_file": "apps/web/utils/ai/rule/create-prompt-from-rule.ts",
        "discussion_id": "1932894451",
        "commented_code": "@@ -33,10 +33,10 @@ export function createPromptFromRule(rule: RuleWithRelations): string {\n     conditions.push(`with subject containing \"${rule.subject}\"`);\n   if (rule.body) conditions.push(`with body containing \"${rule.body}\"`);\n \n-  // Add group if present\n-  if (rule.group?.name) {\n-    conditions.push(`in group \"${rule.group.name}\"`);\n-  }\n+  // // Add group if present\n+  // if (rule.group?.name) {\n+  //   conditions.push(`in group \"${rule.group.name}\"`);\n+  // }",
        "comment_created_at": "2025-01-28T21:41:36+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_:hammer_and_wrench: Refactor suggestion_\n\n**Remove commented-out code instead of keeping it.**\n\nSince this PR is removing group management functionality, the code should be deleted rather than commented out. Commented-out code can lead to confusion and maintenance issues.\n\nApply this diff to clean up the code:\n\n```diff\n-  // // Add group if present\n-  // if (rule.group?.name) {\n-  //   conditions.push(`in group \"${rule.group.name}\"`);\n-  // }\n```\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
        "pr_file_module": null
      }
    ]
  }
]