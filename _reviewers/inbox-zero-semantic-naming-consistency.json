[
  {
    "discussion_id": "2127325954",
    "pr_number": 478,
    "pr_file": "apps/web/prisma/schema.prisma",
    "created_at": "2025-06-04T19:49:30+00:00",
    "commented_code": "emailTokens    EmailToken[]\n   knowledge      Knowledge[]\n   chats          Chat[]\n+  digests        Digest[]\n \n }\n \n+model Digest {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  messageId      String\n+  threadId       String\n+  summary        String   @db.Text\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+  actionId       String?\n+  action         ExecutedAction? @relation(fields: [actionId], references: [id])\n+\n+  @@index([emailAccountId])\n+  @@index([messageId])\n+  @@index([threadId])\n+  @@index([actionId])\n+\n+  @@unique([emailAccountId, messageId, threadId])\n+}\n+\n+model UserFrequency {\n+  id        String   @id @default(cuid())\n+  createdAt DateTime @default(now())\n+  updatedAt DateTime @updatedAt\n+\n+  intervalDays Int? // Total interval in days\n+  occurrences  Int? // Number of times within the interval\n+\n+  // Bit mask for days of week (0b0000000 to 0b1111111)\n+  // Each bit represents a day (Sunday to Saturday)\n+  // e.g., 0b1000001 means Sunday and Saturday\n+  daysOfWeek Int? // 0-127 (2^7 - 1)\n+\n+  // Time of day stored as DateTime\n+  // Only the time portion will be used when checking if it's time to send\n+  timeOfDay DateTime?\n+\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+\n+  lastOcurrenceAt DateTime?\n+  nextOcurrenceAt DateTime?\n+\n+  @@unique([emailAccountId])\n+}",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2127325954",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 478,
        "pr_file": "apps/web/prisma/schema.prisma",
        "discussion_id": "2127325954",
        "commented_code": "@@ -122,10 +127,57 @@ model EmailAccount {\n   emailTokens    EmailToken[]\n   knowledge      Knowledge[]\n   chats          Chat[]\n+  digests        Digest[]\n \n   @@index([lastSummaryEmailAt])\n }\n \n+model Digest {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  messageId      String\n+  threadId       String\n+  summary        String   @db.Text\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+  actionId       String?\n+  action         ExecutedAction? @relation(fields: [actionId], references: [id])\n+\n+  @@index([emailAccountId])\n+  @@index([messageId])\n+  @@index([threadId])\n+  @@index([actionId])\n+\n+  @@unique([emailAccountId, messageId, threadId])\n+}\n+\n+model UserFrequency {\n+  id        String   @id @default(cuid())\n+  createdAt DateTime @default(now())\n+  updatedAt DateTime @updatedAt\n+\n+  intervalDays Int? // Total interval in days\n+  occurrences  Int? // Number of times within the interval\n+\n+  // Bit mask for days of week (0b0000000 to 0b1111111)\n+  // Each bit represents a day (Sunday to Saturday)\n+  // e.g., 0b1000001 means Sunday and Saturday\n+  daysOfWeek Int? // 0-127 (2^7 - 1)\n+\n+  // Time of day stored as DateTime\n+  // Only the time portion will be used when checking if it's time to send\n+  timeOfDay DateTime?\n+\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+\n+  lastOcurrenceAt DateTime?\n+  nextOcurrenceAt DateTime?\n+\n+  @@unique([emailAccountId])\n+}",
        "comment_created_at": "2025-06-04T19:49:30+00:00",
        "comment_author": "coderabbitai[bot]",
        "comment_body": "_\u26a0\ufe0f Potential issue_\n\n**Fix typo and verify timeOfDay data type consistency.**\n\nThere's a typo in the field name and potential inconsistency with the documentation.\n\n\n```diff\n   emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n\n-  lastOcurrenceAt DateTime?\n+  lastOccurrenceAt DateTime?\n   nextOcurrenceAt DateTime?\n```\n\nAdditionally, the `timeOfDay` field is stored as `DateTime` but the documentation in `CUSTOM_FREQUENCIES.md` suggests it should be a string in \"HH:mm\" format. Consider using a consistent approach:\n\n```diff\n-  // Time of day stored as DateTime\n-  // Only the time portion will be used when checking if it's time to send\n-  timeOfDay DateTime?\n+  // Time of day in \"HH:mm\" format\n+  timeOfDay String?\n```\n\n<details>\n<summary>\ud83e\udd16 Prompt for AI Agents</summary>\n\n```\nIn apps/web/prisma/schema.prisma between lines 155 and 179, correct the typo in\nthe field name from \"lastOcurrenceAt\" to \"lastOccurrenceAt\" to fix the spelling\nerror. Also, change the data type of the \"timeOfDay\" field from DateTime to\nString to align with the documentation in CUSTOM_FREQUENCIES.md, which specifies\nthe time should be stored in \"HH:mm\" string format. Ensure the field and its\nusage are consistent with this string format throughout the codebase.\n```\n\n</details>\n\n<!-- This is an auto-generated comment by CodeRabbit -->",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2147610940",
    "pr_number": 478,
    "pr_file": "apps/web/prisma/schema.prisma",
    "created_at": "2025-06-15T11:28:28+00:00",
    "commented_code": "emailTokens    EmailToken[]\n   knowledge      Knowledge[]\n   chats          Chat[]\n+  digests        Digest[]\n \n }\n \n+enum DigestStatus {\n+  PENDING\n+  PROCESSING\n+  SENT\n+}\n+\n+model Digest {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+  items          DigestItem[]\n+  sentAt         DateTime?\n+  status         DigestStatus @default(PENDING)\n+\n+  @@index([emailAccountId])\n+}\n+\n+model DigestItem {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  messageId      String\n+  threadId       String\n+  content        String   @db.Text\n+  digestId       String\n+  digest         Digest   @relation(fields: [digestId], references: [id], onDelete: Cascade)\n+  actionId       String?\n+  action         ExecutedAction? @relation(fields: [actionId], references: [id])\n+  coldEmailId    String?\n+  coldEmail      ColdEmail? @relation(fields: [coldEmailId], references: [id])\n+\n+  @@unique([digestId, threadId, messageId])\n+}\n+\n+model UserFrequency {",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2147610940",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 478,
        "pr_file": "apps/web/prisma/schema.prisma",
        "discussion_id": "2147610940",
        "commented_code": "@@ -136,10 +141,73 @@ model EmailAccount {\n   emailTokens    EmailToken[]\n   knowledge      Knowledge[]\n   chats          Chat[]\n+  digests        Digest[]\n \n   @@index([lastSummaryEmailAt])\n }\n \n+enum DigestStatus {\n+  PENDING\n+  PROCESSING\n+  SENT\n+}\n+\n+model Digest {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+  items          DigestItem[]\n+  sentAt         DateTime?\n+  status         DigestStatus @default(PENDING)\n+\n+  @@index([emailAccountId])\n+}\n+\n+model DigestItem {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  messageId      String\n+  threadId       String\n+  content        String   @db.Text\n+  digestId       String\n+  digest         Digest   @relation(fields: [digestId], references: [id], onDelete: Cascade)\n+  actionId       String?\n+  action         ExecutedAction? @relation(fields: [actionId], references: [id])\n+  coldEmailId    String?\n+  coldEmail      ColdEmail? @relation(fields: [coldEmailId], references: [id])\n+\n+  @@unique([digestId, threadId, messageId])\n+}\n+\n+model UserFrequency {",
        "comment_created_at": "2025-06-15T11:28:28+00:00",
        "comment_author": "elie222",
        "comment_body": "Wonder if we just rename this to `Schedule` as it doesn't have anything to do with the `User`",
        "pr_file_module": null
      },
      {
        "comment_id": "2150047347",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 478,
        "pr_file": "apps/web/prisma/schema.prisma",
        "discussion_id": "2147610940",
        "commented_code": "@@ -136,10 +141,73 @@ model EmailAccount {\n   emailTokens    EmailToken[]\n   knowledge      Knowledge[]\n   chats          Chat[]\n+  digests        Digest[]\n \n   @@index([lastSummaryEmailAt])\n }\n \n+enum DigestStatus {\n+  PENDING\n+  PROCESSING\n+  SENT\n+}\n+\n+model Digest {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+  items          DigestItem[]\n+  sentAt         DateTime?\n+  status         DigestStatus @default(PENDING)\n+\n+  @@index([emailAccountId])\n+}\n+\n+model DigestItem {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  messageId      String\n+  threadId       String\n+  content        String   @db.Text\n+  digestId       String\n+  digest         Digest   @relation(fields: [digestId], references: [id], onDelete: Cascade)\n+  actionId       String?\n+  action         ExecutedAction? @relation(fields: [actionId], references: [id])\n+  coldEmailId    String?\n+  coldEmail      ColdEmail? @relation(fields: [coldEmailId], references: [id])\n+\n+  @@unique([digestId, threadId, messageId])\n+}\n+\n+model UserFrequency {",
        "comment_created_at": "2025-06-16T13:42:53+00:00",
        "comment_author": "edulelis",
        "comment_body": "Refactored the model, and everything else related to using schedule wording instead.",
        "pr_file_module": null
      }
    ]
  }
]