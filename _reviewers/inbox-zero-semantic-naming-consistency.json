[
  {
    "discussion_id": "2147610940",
    "pr_number": 478,
    "pr_file": "apps/web/prisma/schema.prisma",
    "created_at": "2025-06-15T11:28:28+00:00",
    "commented_code": "emailTokens    EmailToken[]\n   knowledge      Knowledge[]\n   chats          Chat[]\n+  digests        Digest[]\n \n }\n \n+enum DigestStatus {\n+  PENDING\n+  PROCESSING\n+  SENT\n+}\n+\n+model Digest {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+  items          DigestItem[]\n+  sentAt         DateTime?\n+  status         DigestStatus @default(PENDING)\n+\n+  @@index([emailAccountId])\n+}\n+\n+model DigestItem {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  messageId      String\n+  threadId       String\n+  content        String   @db.Text\n+  digestId       String\n+  digest         Digest   @relation(fields: [digestId], references: [id], onDelete: Cascade)\n+  actionId       String?\n+  action         ExecutedAction? @relation(fields: [actionId], references: [id])\n+  coldEmailId    String?\n+  coldEmail      ColdEmail? @relation(fields: [coldEmailId], references: [id])\n+\n+  @@unique([digestId, threadId, messageId])\n+}\n+\n+model UserFrequency {",
    "repo_full_name": "elie222/inbox-zero",
    "discussion_comments": [
      {
        "comment_id": "2147610940",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 478,
        "pr_file": "apps/web/prisma/schema.prisma",
        "discussion_id": "2147610940",
        "commented_code": "@@ -136,10 +141,73 @@ model EmailAccount {\n   emailTokens    EmailToken[]\n   knowledge      Knowledge[]\n   chats          Chat[]\n+  digests        Digest[]\n \n   @@index([lastSummaryEmailAt])\n }\n \n+enum DigestStatus {\n+  PENDING\n+  PROCESSING\n+  SENT\n+}\n+\n+model Digest {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+  items          DigestItem[]\n+  sentAt         DateTime?\n+  status         DigestStatus @default(PENDING)\n+\n+  @@index([emailAccountId])\n+}\n+\n+model DigestItem {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  messageId      String\n+  threadId       String\n+  content        String   @db.Text\n+  digestId       String\n+  digest         Digest   @relation(fields: [digestId], references: [id], onDelete: Cascade)\n+  actionId       String?\n+  action         ExecutedAction? @relation(fields: [actionId], references: [id])\n+  coldEmailId    String?\n+  coldEmail      ColdEmail? @relation(fields: [coldEmailId], references: [id])\n+\n+  @@unique([digestId, threadId, messageId])\n+}\n+\n+model UserFrequency {",
        "comment_created_at": "2025-06-15T11:28:28+00:00",
        "comment_author": "elie222",
        "comment_body": "Wonder if we just rename this to `Schedule` as it doesn't have anything to do with the `User`",
        "pr_file_module": null
      },
      {
        "comment_id": "2150047347",
        "repo_full_name": "elie222/inbox-zero",
        "pr_number": 478,
        "pr_file": "apps/web/prisma/schema.prisma",
        "discussion_id": "2147610940",
        "commented_code": "@@ -136,10 +141,73 @@ model EmailAccount {\n   emailTokens    EmailToken[]\n   knowledge      Knowledge[]\n   chats          Chat[]\n+  digests        Digest[]\n \n   @@index([lastSummaryEmailAt])\n }\n \n+enum DigestStatus {\n+  PENDING\n+  PROCESSING\n+  SENT\n+}\n+\n+model Digest {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  emailAccountId String\n+  emailAccount   EmailAccount @relation(fields: [emailAccountId], references: [id], onDelete: Cascade)\n+  items          DigestItem[]\n+  sentAt         DateTime?\n+  status         DigestStatus @default(PENDING)\n+\n+  @@index([emailAccountId])\n+}\n+\n+model DigestItem {\n+  id             String   @id @default(cuid())\n+  createdAt      DateTime @default(now())\n+  updatedAt      DateTime @updatedAt\n+  messageId      String\n+  threadId       String\n+  content        String   @db.Text\n+  digestId       String\n+  digest         Digest   @relation(fields: [digestId], references: [id], onDelete: Cascade)\n+  actionId       String?\n+  action         ExecutedAction? @relation(fields: [actionId], references: [id])\n+  coldEmailId    String?\n+  coldEmail      ColdEmail? @relation(fields: [coldEmailId], references: [id])\n+\n+  @@unique([digestId, threadId, messageId])\n+}\n+\n+model UserFrequency {",
        "comment_created_at": "2025-06-16T13:42:53+00:00",
        "comment_author": "edulelis",
        "comment_body": "Refactored the model, and everything else related to using schedule wording instead.",
        "pr_file_module": null
      }
    ]
  }
]