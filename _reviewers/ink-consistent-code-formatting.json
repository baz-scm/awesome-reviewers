[
  {
    "discussion_id": "724385822",
    "pr_number": 479,
    "pr_file": "src/styles.ts",
    "created_at": "2021-10-07T17:23:23+00:00",
    "commented_code": ");\n \t}\n \n+\tif ('flexWrap' in style) {\n+\t\tif (style.flexWrap === 'nowrap') {\n+\t\t\tnode.setFlexWrap(Yoga.WRAP_NO_WRAP);\n+\t\t} else if (style.flexWrap === 'wrap') {",
    "repo_full_name": "vadimdemedes/ink",
    "discussion_comments": [
      {
        "comment_id": "724385822",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 479,
        "pr_file": "src/styles.ts",
        "discussion_id": "724385822",
        "commented_code": "@@ -200,6 +206,16 @@ const applyFlexStyles = (node: YogaNode, style: Styles): void => {\n \t\t);\n \t}\n \n+\tif ('flexWrap' in style) {\n+\t\tif (style.flexWrap === 'nowrap') {\n+\t\t\tnode.setFlexWrap(Yoga.WRAP_NO_WRAP);\n+\t\t} else if (style.flexWrap === 'wrap') {",
        "comment_created_at": "2021-10-07T17:23:23+00:00",
        "comment_author": "vadimdemedes",
        "comment_body": "Since all of these `if`s are exclusive, there's no need for an `else if` here. Could you remove those in favor of having 3 separate `if` conditions? See `flexDirection` conditions below for an example.",
        "pr_file_module": null
      },
      {
        "comment_id": "724412444",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 479,
        "pr_file": "src/styles.ts",
        "discussion_id": "724385822",
        "commented_code": "@@ -200,6 +206,16 @@ const applyFlexStyles = (node: YogaNode, style: Styles): void => {\n \t\t);\n \t}\n \n+\tif ('flexWrap' in style) {\n+\t\tif (style.flexWrap === 'nowrap') {\n+\t\t\tnode.setFlexWrap(Yoga.WRAP_NO_WRAP);\n+\t\t} else if (style.flexWrap === 'wrap') {",
        "comment_created_at": "2021-10-07T18:00:27+00:00",
        "comment_author": "SimenB",
        "comment_body": "Haha, sorry \ud83d\ude48 \r\n\r\n\r\nhttps://github.com/vadimdemedes/ink/pull/479#discussion_r721175129",
        "pr_file_module": null
      },
      {
        "comment_id": "724433719",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 479,
        "pr_file": "src/styles.ts",
        "discussion_id": "724385822",
        "commented_code": "@@ -200,6 +206,16 @@ const applyFlexStyles = (node: YogaNode, style: Styles): void => {\n \t\t);\n \t}\n \n+\tif ('flexWrap' in style) {\n+\t\tif (style.flexWrap === 'nowrap') {\n+\t\t\tnode.setFlexWrap(Yoga.WRAP_NO_WRAP);\n+\t\t} else if (style.flexWrap === 'wrap') {",
        "comment_created_at": "2021-10-07T18:31:54+00:00",
        "comment_author": "vadimdemedes",
        "comment_body": "Haha, no worries! Sorry @jodevsa for back and forth!",
        "pr_file_module": null
      },
      {
        "comment_id": "725679760",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 479,
        "pr_file": "src/styles.ts",
        "discussion_id": "724385822",
        "commented_code": "@@ -200,6 +206,16 @@ const applyFlexStyles = (node: YogaNode, style: Styles): void => {\n \t\t);\n \t}\n \n+\tif ('flexWrap' in style) {\n+\t\tif (style.flexWrap === 'nowrap') {\n+\t\t\tnode.setFlexWrap(Yoga.WRAP_NO_WRAP);\n+\t\t} else if (style.flexWrap === 'wrap') {",
        "comment_created_at": "2021-10-10T18:35:29+00:00",
        "comment_author": "jodevsa",
        "comment_body": "it's fine :D ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "721173526",
    "pr_number": 393,
    "pr_file": "src/styles.ts",
    "created_at": "2021-10-04T09:03:54+00:00",
    "commented_code": "* Accepts the same values as `color` in <Text> component.\n \t */\n \treadonly borderColor?: LiteralUnion<typeof ForegroundColor, string>;\n+\n+\t/**\n+\t * Set this property to `hidden` to hide content overflowing the box.",
    "repo_full_name": "vadimdemedes/ink",
    "discussion_comments": [
      {
        "comment_id": "721173526",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 393,
        "pr_file": "src/styles.ts",
        "discussion_id": "721173526",
        "commented_code": "@@ -141,6 +141,11 @@ export interface Styles {\n \t * Accepts the same values as `color` in <Text> component.\n \t */\n \treadonly borderColor?: LiteralUnion<typeof ForegroundColor, string>;\n+\n+\t/**\n+\t * Set this property to `hidden` to hide content overflowing the box.",
        "comment_created_at": "2021-10-04T09:03:54+00:00",
        "comment_author": "sindresorhus",
        "comment_body": "```suggestion\r\n\t * Set this property to `hidden` to hide content overflowing the box.\r\n\t *\r\n\t * @default 'visible'\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "395964888",
    "pr_number": 264,
    "pr_file": "src/styles.ts",
    "created_at": "2020-03-21T05:50:49+00:00",
    "commented_code": "+export interface WrapTextStyles {\n+\ttextWrap?:\n+\t| 'wrap'\n+\t| 'end'\n+\t| 'middle'\n+\t| 'truncate-end'\n+\t| 'truncate'\n+\t| 'truncate-middle'\n+\t| 'truncate-start';\n+}\n+\n+export interface PositionStyles {\n+\tposition?: 'absolute' | 'relative';\n+}\n+\n+export interface MarginStyles {\n+\tmargin?: number;\n+\tmarginX?: number;\n+\tmarginY?: number;\n+\tmarginTop?: number;\n+\tmarginBottom?: number;\n+\tmarginLeft?: number;\n+\tmarginRight?: number;\n+}\n+\n+export interface PaddingStyles {\n+\tpadding?: number;\n+\tpaddingX?: number;\n+\tpaddingY?: number;\n+\tpaddingTop?: number;\n+\tpaddingBottom?: number;\n+\tpaddingLeft?: number;\n+\tpaddingRight?: number;\n+}\n+\n+export interface FlexStyles {\n+\tflexGrow?: number;\n+\tflexShrink?: number;\n+\tflexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n+\tflexBasis?: number | string;\n+\talignItems?: 'flex-start' | 'center' | 'flex-end' | 'stretch';\n+\tjustifyContent?:\n+\t| 'flex-start'\n+\t| 'flex-end'\n+\t| 'space-between'\n+\t| 'space-around'\n+\t| 'center';\n+}\n+\n+export interface DimensionStyles {\n+\twidth?: number | string;\n+\theight?: number | string;\n+\tminWidth?: number | string;\n+\tminHeight?: number | string;\n+}\n+\n+export type Styles = PaddingStyles &\n+MarginStyles &\n+FlexStyles &\n+DimensionStyles &\n+PositionStyles &\n+WrapTextStyles;",
    "repo_full_name": "vadimdemedes/ink",
    "discussion_comments": [
      {
        "comment_id": "395964888",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 264,
        "pr_file": "src/styles.ts",
        "discussion_id": "395964888",
        "commented_code": "@@ -0,0 +1,62 @@\n+export interface WrapTextStyles {\n+\ttextWrap?:\n+\t| 'wrap'\n+\t| 'end'\n+\t| 'middle'\n+\t| 'truncate-end'\n+\t| 'truncate'\n+\t| 'truncate-middle'\n+\t| 'truncate-start';\n+}\n+\n+export interface PositionStyles {\n+\tposition?: 'absolute' | 'relative';\n+}\n+\n+export interface MarginStyles {\n+\tmargin?: number;\n+\tmarginX?: number;\n+\tmarginY?: number;\n+\tmarginTop?: number;\n+\tmarginBottom?: number;\n+\tmarginLeft?: number;\n+\tmarginRight?: number;\n+}\n+\n+export interface PaddingStyles {\n+\tpadding?: number;\n+\tpaddingX?: number;\n+\tpaddingY?: number;\n+\tpaddingTop?: number;\n+\tpaddingBottom?: number;\n+\tpaddingLeft?: number;\n+\tpaddingRight?: number;\n+}\n+\n+export interface FlexStyles {\n+\tflexGrow?: number;\n+\tflexShrink?: number;\n+\tflexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n+\tflexBasis?: number | string;\n+\talignItems?: 'flex-start' | 'center' | 'flex-end' | 'stretch';\n+\tjustifyContent?:\n+\t| 'flex-start'\n+\t| 'flex-end'\n+\t| 'space-between'\n+\t| 'space-around'\n+\t| 'center';\n+}\n+\n+export interface DimensionStyles {\n+\twidth?: number | string;\n+\theight?: number | string;\n+\tminWidth?: number | string;\n+\tminHeight?: number | string;\n+}\n+\n+export type Styles = PaddingStyles &\n+MarginStyles &\n+FlexStyles &\n+DimensionStyles &\n+PositionStyles &\n+WrapTextStyles;",
        "comment_created_at": "2020-03-21T05:50:49+00:00",
        "comment_author": "sindresorhus",
        "comment_body": "```suggestion\r\nexport type Styles = PaddingStyles &\r\n\tMarginStyles &\r\n\tFlexStyles &\r\n\tDimensionStyles &\r\n\tPositionStyles &\r\n\tWrapTextStyles;\r\n```",
        "pr_file_module": null
      }
    ]
  }
]