[
  {
    "discussion_id": "546228951",
    "pr_number": 406,
    "pr_file": "examples/subprocess-output/subprocess-output.js",
    "created_at": "2020-12-19T11:44:56+00:00",
    "commented_code": "+'use strict';\n+const React = require('react');\n+const {render, Text, Box} = require('../../build');\n+const childProcess = require('child_process');\n+\n+const SubprocessOutput = () => {\n+\tconst [output, setOutput] = React.useState('');\n+\n+\tReact.useEffect(() => {\n+\t\tconst subProcess = childProcess.spawn('ping', ['8.8.8.8']).stdout;\n+\n+\t\tsubProcess.on('data', newOutput => {\n+\t\t\tsetOutput(newOutput.toString('ascii'));\n+\t\t});",
    "repo_full_name": "vadimdemedes/ink",
    "discussion_comments": [
      {
        "comment_id": "546228951",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 406,
        "pr_file": "examples/subprocess-output/subprocess-output.js",
        "discussion_id": "546228951",
        "commented_code": "@@ -0,0 +1,25 @@\n+'use strict';\n+const React = require('react');\n+const {render, Text, Box} = require('../../build');\n+const childProcess = require('child_process');\n+\n+const SubprocessOutput = () => {\n+\tconst [output, setOutput] = React.useState('');\n+\n+\tReact.useEffect(() => {\n+\t\tconst subProcess = childProcess.spawn('ping', ['8.8.8.8']).stdout;\n+\n+\t\tsubProcess.on('data', newOutput => {\n+\t\t\tsetOutput(newOutput.toString('ascii'));\n+\t\t});",
        "comment_created_at": "2020-12-19T11:44:56+00:00",
        "comment_author": "vadimdemedes",
        "comment_body": "To keep it explicit, because `stdout` is not an instance of the process, so `subProcess` wouldn't be a right name for it.\r\n\r\n```suggestion\r\n\t\tconst subProcess = childProcess.spawn('ping', ['8.8.8.8']);\r\n\r\n\t\tsubProcess.stdout.on('data', newOutput => {\r\n\t\t\tsetOutput(newOutput.toString('ascii'));\r\n\t\t});\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "399673151",
    "pr_number": 264,
    "pr_file": "examples/counter/counter.js",
    "created_at": "2020-03-28T15:14:38+00:00",
    "commented_code": "React.useEffect(() => {\n \t\tconst timer = setInterval(() => {\n-\t\t\tsetCounter(prevCounter => prevCounter + 1);\n+\t\t\tsetCounter(prevCounter => prevCounter + 1); // eslint-disable-line unicorn/prevent-abbreviations",
    "repo_full_name": "vadimdemedes/ink",
    "discussion_comments": [
      {
        "comment_id": "399673151",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 264,
        "pr_file": "examples/counter/counter.js",
        "discussion_id": "399673151",
        "commented_code": "@@ -7,7 +7,7 @@ const Counter = () => {\n \n \tReact.useEffect(() => {\n \t\tconst timer = setInterval(() => {\n-\t\t\tsetCounter(prevCounter => prevCounter + 1);\n+\t\t\tsetCounter(prevCounter => prevCounter + 1); // eslint-disable-line unicorn/prevent-abbreviations",
        "comment_created_at": "2020-03-28T15:14:38+00:00",
        "comment_author": "vadimdemedes",
        "comment_body": "Perhaps it's better to either rename `prevCounter` to `previousCounter` to satisfy that linter rule or disable that rule for `examples` folder.",
        "pr_file_module": null
      },
      {
        "comment_id": "399673291",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 264,
        "pr_file": "examples/counter/counter.js",
        "discussion_id": "399673151",
        "commented_code": "@@ -7,7 +7,7 @@ const Counter = () => {\n \n \tReact.useEffect(() => {\n \t\tconst timer = setInterval(() => {\n-\t\t\tsetCounter(prevCounter => prevCounter + 1);\n+\t\t\tsetCounter(prevCounter => prevCounter + 1); // eslint-disable-line unicorn/prevent-abbreviations",
        "comment_created_at": "2020-03-28T15:16:13+00:00",
        "comment_author": "sindresorhus",
        "comment_body": "> previousCounter\r\n\r\n\ud83d\udc4d ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "126292253",
    "pr_number": 3,
    "pr_file": "index.js",
    "created_at": "2017-07-08T23:13:00+00:00",
    "commented_code": "exports.Indent = Indent;\n exports.Group = Group;\n exports.Text = Text;\n+exports.Bar = Bar;",
    "repo_full_name": "vadimdemedes/ink",
    "discussion_comments": [
      {
        "comment_id": "126292253",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 3,
        "pr_file": "index.js",
        "discussion_id": "126292253",
        "commented_code": "@@ -19,6 +20,7 @@ exports.Newline = Newline;\n exports.Indent = Indent;\n exports.Group = Group;\n exports.Text = Text;\n+exports.Bar = Bar;",
        "comment_created_at": "2017-07-08T23:13:00+00:00",
        "comment_author": "sindresorhus",
        "comment_body": "Just `Bar` is too ambiguous. `ProgressBar` would be better.",
        "pr_file_module": null
      },
      {
        "comment_id": "126292533",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 3,
        "pr_file": "index.js",
        "discussion_id": "126292253",
        "commented_code": "@@ -19,6 +20,7 @@ exports.Newline = Newline;\n exports.Indent = Indent;\n exports.Group = Group;\n exports.Text = Text;\n+exports.Bar = Bar;",
        "comment_created_at": "2017-07-08T23:29:17+00:00",
        "comment_author": "brigand",
        "comment_body": "Fixed",
        "pr_file_module": null
      }
    ]
  }
]