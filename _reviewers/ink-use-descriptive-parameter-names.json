[
  {
    "discussion_id": "1134686005",
    "pr_number": 556,
    "pr_file": "src/styles.ts",
    "created_at": "2023-03-13T22:37:07+00:00",
    "commented_code": "}\n };\n \n-const applyDisplayStyles = (node: YogaNode, style: Styles): void => {\n+const applyDisplayStyles = (\n+\tdomNode: DOMNode & {yogaNode: YogaNode},\n+\tstyle: Styles\n+): void => {\n+\tconst node = domNode.yogaNode;\n+\n \tif ('display' in style) {\n \t\tnode.setDisplay(\n \t\t\tstyle.display === 'flex' ? Yoga.DISPLAY_FLEX : Yoga.DISPLAY_NONE\n \t\t);\n \t}\n };\n \n-const applyBorderStyles = (node: YogaNode, style: Styles): void => {\n+const applyBorderStyles = (\n+\tdomNode: DOMNode & {yogaNode: YogaNode},\n+\tstyle: Styles\n+): void => {\n+\tconst node = domNode.yogaNode;\n+\n \tif ('borderStyle' in style) {\n-\t\tconst borderWidth = typeof style.borderStyle === 'string' ? 1 : 0;\n+\t\tconst borderWidth =\n+\t\t\tdomNode.nodeName === 'ink-line'",
    "repo_full_name": "vadimdemedes/ink",
    "discussion_comments": [
      {
        "comment_id": "1134686005",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 556,
        "pr_file": "src/styles.ts",
        "discussion_id": "1134686005",
        "commented_code": "@@ -336,17 +362,32 @@ const applyDimensionStyles = (node: YogaNode, style: Styles): void => {\n \t}\n };\n \n-const applyDisplayStyles = (node: YogaNode, style: Styles): void => {\n+const applyDisplayStyles = (\n+\tdomNode: DOMNode & {yogaNode: YogaNode},\n+\tstyle: Styles\n+): void => {\n+\tconst node = domNode.yogaNode;\n+\n \tif ('display' in style) {\n \t\tnode.setDisplay(\n \t\t\tstyle.display === 'flex' ? Yoga.DISPLAY_FLEX : Yoga.DISPLAY_NONE\n \t\t);\n \t}\n };\n \n-const applyBorderStyles = (node: YogaNode, style: Styles): void => {\n+const applyBorderStyles = (\n+\tdomNode: DOMNode & {yogaNode: YogaNode},\n+\tstyle: Styles\n+): void => {\n+\tconst node = domNode.yogaNode;\n+\n \tif ('borderStyle' in style) {\n-\t\tconst borderWidth = typeof style.borderStyle === 'string' ? 1 : 0;\n+\t\tconst borderWidth =\n+\t\t\tdomNode.nodeName === 'ink-line'",
        "comment_created_at": "2023-03-13T22:37:07+00:00",
        "comment_author": "AlCalzone",
        "comment_body": "I needed access to `nodeName` here, so I figured I'd update all the applyXYZ method to take the DOM node instead.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "324497819",
    "pr_number": 227,
    "pr_file": "index.d.ts",
    "created_at": "2019-09-16T02:38:26+00:00",
    "commented_code": "export type Unmount = () => void;\n \n+/**\n+ * Hook that calls inputHandler callback with input that program received.\n+ * Additionally contains helpful metadata for detecting when arrow keys were pressed.\n+ */\n+export function useInput(\n+\tinputHandler: (input: string, meta: Meta) => void",
    "repo_full_name": "vadimdemedes/ink",
    "discussion_comments": [
      {
        "comment_id": "324497819",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 227,
        "pr_file": "index.d.ts",
        "discussion_id": "324497819",
        "commented_code": "@@ -44,6 +44,21 @@ export type Instance = {\n \n export type Unmount = () => void;\n \n+/**\n+ * Hook that calls inputHandler callback with input that program received.\n+ * Additionally contains helpful metadata for detecting when arrow keys were pressed.\n+ */\n+export function useInput(\n+\tinputHandler: (input: string, meta: Meta) => void",
        "comment_created_at": "2019-09-16T02:38:26+00:00",
        "comment_author": "sindresorhus",
        "comment_body": "```suggestion\r\n\tinputHandler: (input: string, metadata: InputMetadata) => void\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "324511507",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 227,
        "pr_file": "index.d.ts",
        "discussion_id": "324497819",
        "commented_code": "@@ -44,6 +44,21 @@ export type Instance = {\n \n export type Unmount = () => void;\n \n+/**\n+ * Hook that calls inputHandler callback with input that program received.\n+ * Additionally contains helpful metadata for detecting when arrow keys were pressed.\n+ */\n+export function useInput(\n+\tinputHandler: (input: string, meta: Meta) => void",
        "comment_created_at": "2019-09-16T05:11:10+00:00",
        "comment_author": "sindresorhus",
        "comment_body": "`meta` can be confused as `meta` keys, which is something different.",
        "pr_file_module": null
      },
      {
        "comment_id": "324511947",
        "repo_full_name": "vadimdemedes/ink",
        "pr_number": 227,
        "pr_file": "index.d.ts",
        "discussion_id": "324497819",
        "commented_code": "@@ -44,6 +44,21 @@ export type Instance = {\n \n export type Unmount = () => void;\n \n+/**\n+ * Hook that calls inputHandler callback with input that program received.\n+ * Additionally contains helpful metadata for detecting when arrow keys were pressed.\n+ */\n+export function useInput(\n+\tinputHandler: (input: string, meta: Meta) => void",
        "comment_created_at": "2019-09-16T05:15:30+00:00",
        "comment_author": "sindresorhus",
        "comment_body": "Or maybe just call it `key` as that's what it really is. Not worth optimizing for a potential future where you add other things there.",
        "pr_file_module": null
      }
    ]
  }
]