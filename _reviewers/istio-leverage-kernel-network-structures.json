[
  {
    "discussion_id": "1101758640",
    "pr_number": 42372,
    "pr_file": "cni/pkg/ebpf/app/ambient_redirect.bpf.c",
    "created_at": "2023-02-09T16:51:34+00:00",
    "commented_code": "+// Copyright Istio Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"vmlinux.h\"\n+#include <bpf/bpf_helpers.h>\n+#include <bpf/bpf_endian.h>\n+\n+#include \"ambient_redirect.h\"\n+\n+#define dbg(fmt, ...)                               \\\n+    ({                                              \\\n+        bpf_printk(\"[Debug]: \" fmt, ##__VA_ARGS__); \\\n+    })\n+\n+\n+/* This is an one line Array to store current ztunnel info\n+|--------------------------------------------------------------|\n+|  0          | Val(ztunnel info: ifindex, mac address)        |\n+|--------------------------------------------------------------|\n+|  0          |     6, 00:11:22:33:44:55                       |\n+|--------------------------------------------------------------|\n+*/\n+\n+struct {\n+        __uint(type, BPF_MAP_TYPE_ARRAY);\n+        __uint(max_entries, 1);\n+        __type(key, __u32);\n+        __type(value, struct ztunnel_info);\n+        __uint(pinning, LIBBPF_PIN_BY_NAME);\n+} ztunnel_info SEC(\".maps\");\n+\n+/* This is a hash map to store current application info\n+|--------------------------------------------------------------------------|\n+|  key(pod IP)         |        Val(app info: ifindex, mac address)        |\n+|--------------------------------------------------------------------------|\n+|  10.101.1.2          |        2, 00:11:22:33:44:aa                       |\n+|--------------------------------------------------------------------------|\n+|  10.101.2.2          |        3, 00:11:22:33:44:bb                       |\n+|--------------------------------------------------------------------------|\n+*/",
    "repo_full_name": "istio/istio",
    "discussion_comments": [
      {
        "comment_id": "1101758640",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/app/ambient_redirect.bpf.c",
        "discussion_id": "1101758640",
        "commented_code": "@@ -0,0 +1,277 @@\n+// Copyright Istio Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"vmlinux.h\"\n+#include <bpf/bpf_helpers.h>\n+#include <bpf/bpf_endian.h>\n+\n+#include \"ambient_redirect.h\"\n+\n+#define dbg(fmt, ...)                               \\\n+    ({                                              \\\n+        bpf_printk(\"[Debug]: \" fmt, ##__VA_ARGS__); \\\n+    })\n+\n+\n+/* This is an one line Array to store current ztunnel info\n+|--------------------------------------------------------------|\n+|  0          | Val(ztunnel info: ifindex, mac address)        |\n+|--------------------------------------------------------------|\n+|  0          |     6, 00:11:22:33:44:55                       |\n+|--------------------------------------------------------------|\n+*/\n+\n+struct {\n+        __uint(type, BPF_MAP_TYPE_ARRAY);\n+        __uint(max_entries, 1);\n+        __type(key, __u32);\n+        __type(value, struct ztunnel_info);\n+        __uint(pinning, LIBBPF_PIN_BY_NAME);\n+} ztunnel_info SEC(\".maps\");\n+\n+/* This is a hash map to store current application info\n+|--------------------------------------------------------------------------|\n+|  key(pod IP)         |        Val(app info: ifindex, mac address)        |\n+|--------------------------------------------------------------------------|\n+|  10.101.1.2          |        2, 00:11:22:33:44:aa                       |\n+|--------------------------------------------------------------------------|\n+|  10.101.2.2          |        3, 00:11:22:33:44:bb                       |\n+|--------------------------------------------------------------------------|\n+*/",
        "comment_created_at": "2023-02-09T16:51:34+00:00",
        "comment_author": "bleggett",
        "comment_body": "I don't really understand why there's an eBPF map for every single pod here - it should be possible to obtain ifindex and mac of the intended dest of a packet via dynamic lookup and route it, eliminating the need to maintain an eBPF map (with dual keys for IPv4 and 6, constant map writes from userspace, etc) with every single pod.\r\n\r\n\r\nIs it an attempt at optimization? I don't see the need for it otherwise, it adds complexity to the CNI layer and creates the potential for us maintaining a kernel data structure of undeterminable size, which I don't like (see also MAX_APPS, needing to have ipv6+4 keys  for lookup, other hmms, etc).\r\n\r\nGenerally it skeeves me out a bit, it creates several other slightly awkward problems to work around, and it shouldn't be strictly necessary.",
        "pr_file_module": null
      },
      {
        "comment_id": "1101816410",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/app/ambient_redirect.bpf.c",
        "discussion_id": "1101758640",
        "commented_code": "@@ -0,0 +1,277 @@\n+// Copyright Istio Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"vmlinux.h\"\n+#include <bpf/bpf_helpers.h>\n+#include <bpf/bpf_endian.h>\n+\n+#include \"ambient_redirect.h\"\n+\n+#define dbg(fmt, ...)                               \\\n+    ({                                              \\\n+        bpf_printk(\"[Debug]: \" fmt, ##__VA_ARGS__); \\\n+    })\n+\n+\n+/* This is an one line Array to store current ztunnel info\n+|--------------------------------------------------------------|\n+|  0          | Val(ztunnel info: ifindex, mac address)        |\n+|--------------------------------------------------------------|\n+|  0          |     6, 00:11:22:33:44:55                       |\n+|--------------------------------------------------------------|\n+*/\n+\n+struct {\n+        __uint(type, BPF_MAP_TYPE_ARRAY);\n+        __uint(max_entries, 1);\n+        __type(key, __u32);\n+        __type(value, struct ztunnel_info);\n+        __uint(pinning, LIBBPF_PIN_BY_NAME);\n+} ztunnel_info SEC(\".maps\");\n+\n+/* This is a hash map to store current application info\n+|--------------------------------------------------------------------------|\n+|  key(pod IP)         |        Val(app info: ifindex, mac address)        |\n+|--------------------------------------------------------------------------|\n+|  10.101.1.2          |        2, 00:11:22:33:44:aa                       |\n+|--------------------------------------------------------------------------|\n+|  10.101.2.2          |        3, 00:11:22:33:44:bb                       |\n+|--------------------------------------------------------------------------|\n+*/",
        "comment_created_at": "2023-02-09T17:40:27+00:00",
        "comment_author": "irisdingbj",
        "comment_body": "you mean do the lookup when packet comes in ebpf program itself?  do not think this will perform well",
        "pr_file_module": null
      },
      {
        "comment_id": "1101835365",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/app/ambient_redirect.bpf.c",
        "discussion_id": "1101758640",
        "commented_code": "@@ -0,0 +1,277 @@\n+// Copyright Istio Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"vmlinux.h\"\n+#include <bpf/bpf_helpers.h>\n+#include <bpf/bpf_endian.h>\n+\n+#include \"ambient_redirect.h\"\n+\n+#define dbg(fmt, ...)                               \\\n+    ({                                              \\\n+        bpf_printk(\"[Debug]: \" fmt, ##__VA_ARGS__); \\\n+    })\n+\n+\n+/* This is an one line Array to store current ztunnel info\n+|--------------------------------------------------------------|\n+|  0          | Val(ztunnel info: ifindex, mac address)        |\n+|--------------------------------------------------------------|\n+|  0          |     6, 00:11:22:33:44:55                       |\n+|--------------------------------------------------------------|\n+*/\n+\n+struct {\n+        __uint(type, BPF_MAP_TYPE_ARRAY);\n+        __uint(max_entries, 1);\n+        __type(key, __u32);\n+        __type(value, struct ztunnel_info);\n+        __uint(pinning, LIBBPF_PIN_BY_NAME);\n+} ztunnel_info SEC(\".maps\");\n+\n+/* This is a hash map to store current application info\n+|--------------------------------------------------------------------------|\n+|  key(pod IP)         |        Val(app info: ifindex, mac address)        |\n+|--------------------------------------------------------------------------|\n+|  10.101.1.2          |        2, 00:11:22:33:44:aa                       |\n+|--------------------------------------------------------------------------|\n+|  10.101.2.2          |        3, 00:11:22:33:44:bb                       |\n+|--------------------------------------------------------------------------|\n+*/",
        "comment_created_at": "2023-02-09T17:55:06+00:00",
        "comment_author": "bleggett",
        "comment_body": "Yes. Info is already in the sk_buf, we just have to read it.\r\n\r\n\r\nIt's not clear to me if the performance of getting what's already in the sk_buf is slower than repeatedly updating our own map from userspace with a mirror of the same data and doing a lookup ebpf-side - but the former is much simpler for a variety of reasons and avoids us introducing a parallel eBPF map structure with an unknowable upper size bound.\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1101883276",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/app/ambient_redirect.bpf.c",
        "discussion_id": "1101758640",
        "commented_code": "@@ -0,0 +1,277 @@\n+// Copyright Istio Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"vmlinux.h\"\n+#include <bpf/bpf_helpers.h>\n+#include <bpf/bpf_endian.h>\n+\n+#include \"ambient_redirect.h\"\n+\n+#define dbg(fmt, ...)                               \\\n+    ({                                              \\\n+        bpf_printk(\"[Debug]: \" fmt, ##__VA_ARGS__); \\\n+    })\n+\n+\n+/* This is an one line Array to store current ztunnel info\n+|--------------------------------------------------------------|\n+|  0          | Val(ztunnel info: ifindex, mac address)        |\n+|--------------------------------------------------------------|\n+|  0          |     6, 00:11:22:33:44:55                       |\n+|--------------------------------------------------------------|\n+*/\n+\n+struct {\n+        __uint(type, BPF_MAP_TYPE_ARRAY);\n+        __uint(max_entries, 1);\n+        __type(key, __u32);\n+        __type(value, struct ztunnel_info);\n+        __uint(pinning, LIBBPF_PIN_BY_NAME);\n+} ztunnel_info SEC(\".maps\");\n+\n+/* This is a hash map to store current application info\n+|--------------------------------------------------------------------------|\n+|  key(pod IP)         |        Val(app info: ifindex, mac address)        |\n+|--------------------------------------------------------------------------|\n+|  10.101.1.2          |        2, 00:11:22:33:44:aa                       |\n+|--------------------------------------------------------------------------|\n+|  10.101.2.2          |        3, 00:11:22:33:44:bb                       |\n+|--------------------------------------------------------------------------|\n+*/",
        "comment_created_at": "2023-02-09T18:39:07+00:00",
        "comment_author": "irisdingbj",
        "comment_body": "the info is not in sk_buf actually.. eg, ztunnel need to find info for app, not himself.",
        "pr_file_module": null
      },
      {
        "comment_id": "1101908541",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/app/ambient_redirect.bpf.c",
        "discussion_id": "1101758640",
        "commented_code": "@@ -0,0 +1,277 @@\n+// Copyright Istio Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"vmlinux.h\"\n+#include <bpf/bpf_helpers.h>\n+#include <bpf/bpf_endian.h>\n+\n+#include \"ambient_redirect.h\"\n+\n+#define dbg(fmt, ...)                               \\\n+    ({                                              \\\n+        bpf_printk(\"[Debug]: \" fmt, ##__VA_ARGS__); \\\n+    })\n+\n+\n+/* This is an one line Array to store current ztunnel info\n+|--------------------------------------------------------------|\n+|  0          | Val(ztunnel info: ifindex, mac address)        |\n+|--------------------------------------------------------------|\n+|  0          |     6, 00:11:22:33:44:55                       |\n+|--------------------------------------------------------------|\n+*/\n+\n+struct {\n+        __uint(type, BPF_MAP_TYPE_ARRAY);\n+        __uint(max_entries, 1);\n+        __type(key, __u32);\n+        __type(value, struct ztunnel_info);\n+        __uint(pinning, LIBBPF_PIN_BY_NAME);\n+} ztunnel_info SEC(\".maps\");\n+\n+/* This is a hash map to store current application info\n+|--------------------------------------------------------------------------|\n+|  key(pod IP)         |        Val(app info: ifindex, mac address)        |\n+|--------------------------------------------------------------------------|\n+|  10.101.1.2          |        2, 00:11:22:33:44:aa                       |\n+|--------------------------------------------------------------------------|\n+|  10.101.2.2          |        3, 00:11:22:33:44:bb                       |\n+|--------------------------------------------------------------------------|\n+*/",
        "comment_created_at": "2023-02-09T19:06:36+00:00",
        "comment_author": "bleggett",
        "comment_body": "using `__sk_buf` and `bpf_fib_lookup`, you can find the device/mac of the dest IPs of the packet - if you can derive that from the dest IP you don't need the pod map anymore. The pod map here is largely a duplicate of information already stored in the kernel/exposed via bpf helpers anyway (IP->MAC mappings, etc).\r\n\r\n\r\n`bpf_fib_lookup` probably has a nonzero cost, but again, don't know for sure, would be shocked if reading a kernel struct that already tracks that data and is exposed to eBPF would be slower than reading our own DIY eBPF map.\r\n\r\nNot maintaining our own parallel pod routing table eBPF map (containing info redundant with what the kernel already tracks) would be good/preferable, as it obviates several other potential issues called out in other review comments and AFAICT is not actually necessary.",
        "pr_file_module": null
      },
      {
        "comment_id": "1110047121",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/app/ambient_redirect.bpf.c",
        "discussion_id": "1101758640",
        "commented_code": "@@ -0,0 +1,277 @@\n+// Copyright Istio Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"vmlinux.h\"\n+#include <bpf/bpf_helpers.h>\n+#include <bpf/bpf_endian.h>\n+\n+#include \"ambient_redirect.h\"\n+\n+#define dbg(fmt, ...)                               \\\n+    ({                                              \\\n+        bpf_printk(\"[Debug]: \" fmt, ##__VA_ARGS__); \\\n+    })\n+\n+\n+/* This is an one line Array to store current ztunnel info\n+|--------------------------------------------------------------|\n+|  0          | Val(ztunnel info: ifindex, mac address)        |\n+|--------------------------------------------------------------|\n+|  0          |     6, 00:11:22:33:44:55                       |\n+|--------------------------------------------------------------|\n+*/\n+\n+struct {\n+        __uint(type, BPF_MAP_TYPE_ARRAY);\n+        __uint(max_entries, 1);\n+        __type(key, __u32);\n+        __type(value, struct ztunnel_info);\n+        __uint(pinning, LIBBPF_PIN_BY_NAME);\n+} ztunnel_info SEC(\".maps\");\n+\n+/* This is a hash map to store current application info\n+|--------------------------------------------------------------------------|\n+|  key(pod IP)         |        Val(app info: ifindex, mac address)        |\n+|--------------------------------------------------------------------------|\n+|  10.101.1.2          |        2, 00:11:22:33:44:aa                       |\n+|--------------------------------------------------------------------------|\n+|  10.101.2.2          |        3, 00:11:22:33:44:bb                       |\n+|--------------------------------------------------------------------------|\n+*/",
        "comment_created_at": "2023-02-17T16:31:15+00:00",
        "comment_author": "bleggett",
        "comment_body": "The routing table map used here is not necessary and creates extra work/statetracking in CNI userspace, but we can rework that later - and I think in the medium/long term we need to think more carefully about our kernelspace/userspace interface anyway, as a followup.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1043820159",
    "pr_number": 42372,
    "pr_file": "cni/pkg/ebpf/ambient_redirect_kern.c",
    "created_at": "2022-12-08T20:58:30+00:00",
    "commented_code": "+// clang  -O2  -Wall -target bpf -c ambient_redirect_kern.c -o ambient_redirect.o\n+// POD_VETH=vethaab06c36\n+// tc qdisc del dev ${POD_VETH} clsact\n+// tc qdisc add dev ${POD_VETH} clsact\n+// tc filter add dev ${POD_VETH} ingress bpf da obj ambient_redirect.o sec outbound\n+// tc filter show dev ${POD_VETH} ingress\n+// tc filter add dev ${POD_VETH} egress bpf da obj ambient_redirect.o sec inbound\n+// tc filter show dev ${POD_VETH} egress\n+// ZTU_VETH=veth526b5785\n+// tc qdisc del dev ${ZTU_VETH} clsact\n+// tc qdisc add dev ${ZTU_VETH} clsact\n+// tc filter add dev ${ZTU_VETH}  ingress bpf da obj ambient_redirect.o sec  ztunnelhostingress\n+// tc filter show dev ${ZTU_VETH}  ingress\n+// NS=cni-4d297635-9c2d-78f0-3f3e-88b94f04cf5c",
    "repo_full_name": "istio/istio",
    "discussion_comments": [
      {
        "comment_id": "1043820159",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/ambient_redirect_kern.c",
        "discussion_id": "1043820159",
        "commented_code": "@@ -0,0 +1,319 @@\n+// clang  -O2  -Wall -target bpf -c ambient_redirect_kern.c -o ambient_redirect.o\n+// POD_VETH=vethaab06c36\n+// tc qdisc del dev ${POD_VETH} clsact\n+// tc qdisc add dev ${POD_VETH} clsact\n+// tc filter add dev ${POD_VETH} ingress bpf da obj ambient_redirect.o sec outbound\n+// tc filter show dev ${POD_VETH} ingress\n+// tc filter add dev ${POD_VETH} egress bpf da obj ambient_redirect.o sec inbound\n+// tc filter show dev ${POD_VETH} egress\n+// ZTU_VETH=veth526b5785\n+// tc qdisc del dev ${ZTU_VETH} clsact\n+// tc qdisc add dev ${ZTU_VETH} clsact\n+// tc filter add dev ${ZTU_VETH}  ingress bpf da obj ambient_redirect.o sec  ztunnelhostingress\n+// tc filter show dev ${ZTU_VETH}  ingress\n+// NS=cni-4d297635-9c2d-78f0-3f3e-88b94f04cf5c",
        "comment_created_at": "2022-12-08T20:58:30+00:00",
        "comment_author": "howardjohn",
        "comment_body": "hopefully we have a reasonable way to fetch the NS and VETH of all pods on the node in the CNI...?",
        "pr_file_module": null
      },
      {
        "comment_id": "1044066174",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/ambient_redirect_kern.c",
        "discussion_id": "1043820159",
        "commented_code": "@@ -0,0 +1,319 @@\n+// clang  -O2  -Wall -target bpf -c ambient_redirect_kern.c -o ambient_redirect.o\n+// POD_VETH=vethaab06c36\n+// tc qdisc del dev ${POD_VETH} clsact\n+// tc qdisc add dev ${POD_VETH} clsact\n+// tc filter add dev ${POD_VETH} ingress bpf da obj ambient_redirect.o sec outbound\n+// tc filter show dev ${POD_VETH} ingress\n+// tc filter add dev ${POD_VETH} egress bpf da obj ambient_redirect.o sec inbound\n+// tc filter show dev ${POD_VETH} egress\n+// ZTU_VETH=veth526b5785\n+// tc qdisc del dev ${ZTU_VETH} clsact\n+// tc qdisc add dev ${ZTU_VETH} clsact\n+// tc filter add dev ${ZTU_VETH}  ingress bpf da obj ambient_redirect.o sec  ztunnelhostingress\n+// tc filter show dev ${ZTU_VETH}  ingress\n+// NS=cni-4d297635-9c2d-78f0-3f3e-88b94f04cf5c",
        "comment_created_at": "2022-12-09T03:48:54+00:00",
        "comment_author": "PlatformLC",
        "comment_body": "Yes. For ctrl plane, we should work like current iptables implementation, istio-cni play a role to watch pod/label from API-server and get interface info to execute the configuration.\r\n\r\nCurrently, we just manually configurate it in order to verify the datapath, and a shell script attached separately to ease the configuration stuff. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1044071710",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/ambient_redirect_kern.c",
        "discussion_id": "1043820159",
        "commented_code": "@@ -0,0 +1,319 @@\n+// clang  -O2  -Wall -target bpf -c ambient_redirect_kern.c -o ambient_redirect.o\n+// POD_VETH=vethaab06c36\n+// tc qdisc del dev ${POD_VETH} clsact\n+// tc qdisc add dev ${POD_VETH} clsact\n+// tc filter add dev ${POD_VETH} ingress bpf da obj ambient_redirect.o sec outbound\n+// tc filter show dev ${POD_VETH} ingress\n+// tc filter add dev ${POD_VETH} egress bpf da obj ambient_redirect.o sec inbound\n+// tc filter show dev ${POD_VETH} egress\n+// ZTU_VETH=veth526b5785\n+// tc qdisc del dev ${ZTU_VETH} clsact\n+// tc qdisc add dev ${ZTU_VETH} clsact\n+// tc filter add dev ${ZTU_VETH}  ingress bpf da obj ambient_redirect.o sec  ztunnelhostingress\n+// tc filter show dev ${ZTU_VETH}  ingress\n+// NS=cni-4d297635-9c2d-78f0-3f3e-88b94f04cf5c",
        "comment_created_at": "2022-12-09T04:04:49+00:00",
        "comment_author": "irisdingbj",
        "comment_body": "Yep, this PR focus on datapath only, we will address control plane part in following PRs.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1087295114",
    "pr_number": 42372,
    "pr_file": "cni/pkg/ebpf/app/ambient_redirect.bpf.c",
    "created_at": "2023-01-25T23:48:57+00:00",
    "commented_code": "+// Copyright Istio Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"vmlinux.h\"\n+#include <bpf/bpf_helpers.h>\n+#include <bpf/bpf_endian.h>\n+\n+#include \"ambient_redirect.h\"\n+\n+#define dbg(fmt, ...)                               \\\n+    ({                                              \\\n+        bpf_printk(\"[Debug]: \" fmt, ##__VA_ARGS__); \\\n+    })\n+\n+\n+/* This is an one line Array to store current ztunnel info\n+|--------------------------------------------------------------|\n+|  0          | Val(ztunnel info: ifindex, mac address)        |\n+|--------------------------------------------------------------|\n+|  0          |     6, 00:11:22:33:44:55                       |\n+|--------------------------------------------------------------|\n+*/\n+\n+struct {\n+        __uint(type, BPF_MAP_TYPE_ARRAY);\n+        __uint(max_entries, 1);",
    "repo_full_name": "istio/istio",
    "discussion_comments": [
      {
        "comment_id": "1087295114",
        "repo_full_name": "istio/istio",
        "pr_number": 42372,
        "pr_file": "cni/pkg/ebpf/app/ambient_redirect.bpf.c",
        "discussion_id": "1087295114",
        "commented_code": "@@ -0,0 +1,262 @@\n+// Copyright Istio Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+#include \"vmlinux.h\"\n+#include <bpf/bpf_helpers.h>\n+#include <bpf/bpf_endian.h>\n+\n+#include \"ambient_redirect.h\"\n+\n+#define dbg(fmt, ...)                               \\\n+    ({                                              \\\n+        bpf_printk(\"[Debug]: \" fmt, ##__VA_ARGS__); \\\n+    })\n+\n+\n+/* This is an one line Array to store current ztunnel info\n+|--------------------------------------------------------------|\n+|  0          | Val(ztunnel info: ifindex, mac address)        |\n+|--------------------------------------------------------------|\n+|  0          |     6, 00:11:22:33:44:55                       |\n+|--------------------------------------------------------------|\n+*/\n+\n+struct {\n+        __uint(type, BPF_MAP_TYPE_ARRAY);\n+        __uint(max_entries, 1);",
        "comment_created_at": "2023-01-25T23:48:57+00:00",
        "comment_author": "howardjohn",
        "comment_body": "I think having one entry here is fun, but an FYI we need to support ztunnel rolling restart. How we do it today is we pick the \"newest\" ztunnel and redirect to that. So I think this is compatible with this approach, as we will always only have 1 ztunnel \"active\"",
        "pr_file_module": null
      }
    ]
  }
]