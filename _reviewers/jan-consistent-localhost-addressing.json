[
  {
    "discussion_id": "2162855629",
    "pr_number": 5458,
    "pr_file": "web-app/src/services/providers.ts",
    "created_at": "2025-06-24T02:45:35+00:00",
    "commented_code": "return runtimeProviders.concat(builtinProviders as ModelProvider[])\n }\n \n+/**\n+ * Checks if a URL is a local provider (localhost or 127.0.0.1) or uses specific ports (Ollama/LM Studio)\n+ * @param url The URL to check\n+ * @returns boolean indicating if it's a local provider or uses known local AI ports\n+ */\n+const shouldBypassPreflightCheck = (url: string): boolean => {\n+  try {\n+    const urlObj = new URL(url)\n+    const isLocalHost = urlObj.hostname === 'localhost' ||\n+                       urlObj.hostname === '127.0.0.1' ||\n+                       urlObj.hostname === '0.0.0.0'\n+    \n+    // Check for specific ports used by local AI providers\n+    const port = parseInt(urlObj.port)\n+    const isOllamaPort = port === 11434\n+    const isLMStudioPort = port === 1234",
    "repo_full_name": "menloresearch/jan",
    "discussion_comments": [
      {
        "comment_id": "2162855629",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 5458,
        "pr_file": "web-app/src/services/providers.ts",
        "discussion_id": "2162855629",
        "commented_code": "@@ -163,32 +167,80 @@ export const getProviders = async (): Promise<ModelProvider[]> => {\n   return runtimeProviders.concat(builtinProviders as ModelProvider[])\n }\n \n+/**\n+ * Checks if a URL is a local provider (localhost or 127.0.0.1) or uses specific ports (Ollama/LM Studio)\n+ * @param url The URL to check\n+ * @returns boolean indicating if it's a local provider or uses known local AI ports\n+ */\n+const shouldBypassPreflightCheck = (url: string): boolean => {\n+  try {\n+    const urlObj = new URL(url)\n+    const isLocalHost = urlObj.hostname === 'localhost' ||\n+                       urlObj.hostname === '127.0.0.1' ||\n+                       urlObj.hostname === '0.0.0.0'\n+    \n+    // Check for specific ports used by local AI providers\n+    const port = parseInt(urlObj.port)\n+    const isOllamaPort = port === 11434\n+    const isLMStudioPort = port === 1234",
        "comment_created_at": "2025-06-24T02:45:35+00:00",
        "comment_author": "louis-menlo",
        "comment_body": "There are many more providers, not just these ports.",
        "pr_file_module": null
      },
      {
        "comment_id": "2162857198",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 5458,
        "pr_file": "web-app/src/services/providers.ts",
        "discussion_id": "2162855629",
        "commented_code": "@@ -163,32 +167,80 @@ export const getProviders = async (): Promise<ModelProvider[]> => {\n   return runtimeProviders.concat(builtinProviders as ModelProvider[])\n }\n \n+/**\n+ * Checks if a URL is a local provider (localhost or 127.0.0.1) or uses specific ports (Ollama/LM Studio)\n+ * @param url The URL to check\n+ * @returns boolean indicating if it's a local provider or uses known local AI ports\n+ */\n+const shouldBypassPreflightCheck = (url: string): boolean => {\n+  try {\n+    const urlObj = new URL(url)\n+    const isLocalHost = urlObj.hostname === 'localhost' ||\n+                       urlObj.hostname === '127.0.0.1' ||\n+                       urlObj.hostname === '0.0.0.0'\n+    \n+    // Check for specific ports used by local AI providers\n+    const port = parseInt(urlObj.port)\n+    const isOllamaPort = port === 11434\n+    const isLMStudioPort = port === 1234",
        "comment_created_at": "2025-06-24T02:47:54+00:00",
        "comment_author": "samhvw8",
        "comment_body": "@louis-menlo so should we just make our Jan skip preflight cors for all localhost provider ?",
        "pr_file_module": null
      },
      {
        "comment_id": "2162857769",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 5458,
        "pr_file": "web-app/src/services/providers.ts",
        "discussion_id": "2162855629",
        "commented_code": "@@ -163,32 +167,80 @@ export const getProviders = async (): Promise<ModelProvider[]> => {\n   return runtimeProviders.concat(builtinProviders as ModelProvider[])\n }\n \n+/**\n+ * Checks if a URL is a local provider (localhost or 127.0.0.1) or uses specific ports (Ollama/LM Studio)\n+ * @param url The URL to check\n+ * @returns boolean indicating if it's a local provider or uses known local AI ports\n+ */\n+const shouldBypassPreflightCheck = (url: string): boolean => {\n+  try {\n+    const urlObj = new URL(url)\n+    const isLocalHost = urlObj.hostname === 'localhost' ||\n+                       urlObj.hostname === '127.0.0.1' ||\n+                       urlObj.hostname === '0.0.0.0'\n+    \n+    // Check for specific ports used by local AI providers\n+    const port = parseInt(urlObj.port)\n+    const isOllamaPort = port === 11434\n+    const isLMStudioPort = port === 1234",
        "comment_created_at": "2025-06-24T02:48:45+00:00",
        "comment_author": "louis-menlo",
        "comment_body": "Yes for /models and /chat/completions.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1704054029",
    "pr_number": 3252,
    "pr_file": "electron/main.ts",
    "created_at": "2024-08-05T12:41:31+00:00",
    "commented_code": "async function stopApiServer() {\n   // this function is not meant to be success. It will throw an error.\n   try {\n-    await fetch('http://localhost:1337/v1/system', {\n+    await fetch(`http://localhost:${cortexJsPort}/v1/system`, {",
    "repo_full_name": "menloresearch/jan",
    "discussion_comments": [
      {
        "comment_id": "1704054029",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 3252,
        "pr_file": "electron/main.ts",
        "discussion_id": "1704054029",
        "commented_code": "@@ -154,7 +173,7 @@ async function stopCortexService() {\n async function stopApiServer() {\n   // this function is not meant to be success. It will throw an error.\n   try {\n-    await fetch('http://localhost:1337/v1/system', {\n+    await fetch(`http://localhost:${cortexJsPort}/v1/system`, {",
        "comment_created_at": "2024-08-05T12:41:31+00:00",
        "comment_author": "louis-menlo",
        "comment_body": "```suggestion\r\n    await fetch(`http://127.0.0.1:${cortexJsPort}/v1/system`, {\r\n```",
        "pr_file_module": null
      }
    ]
  }
]