[
  {
    "discussion_id": "2246697682",
    "pr_number": 6020,
    "pr_file": "web-app/src/routes/settings/mcp-servers.tsx",
    "created_at": "2025-08-04T15:47:05+00:00",
    "commented_code": "const handleSaveServer = async (name: string, config: MCPServerConfig) => {\n     try {\n-      await toggleServer(name, false)\n+      toggleServer(name, false)",
    "repo_full_name": "menloresearch/jan",
    "discussion_comments": [
      {
        "comment_id": "2251879877",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 6020,
        "pr_file": "web-app/src/routes/settings/mcp-servers.tsx",
        "discussion_id": "2246697682",
        "commented_code": "@@ -84,7 +84,7 @@ function MCPServers() {\n \n   const handleSaveServer = async (name: string, config: MCPServerConfig) => {\n     try {\n-      await toggleServer(name, false)\n+      toggleServer(name, false)",
        "comment_created_at": "2025-08-04T15:47:05+00:00",
        "comment_author": "louis-menlo",
        "comment_body": "@cmppoon Can remove try catch block here",
        "pr_file_module": null
      },
      {
        "comment_id": "2252790632",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 6020,
        "pr_file": "web-app/src/routes/settings/mcp-servers.tsx",
        "discussion_id": "2246697682",
        "commented_code": "@@ -84,7 +84,7 @@ function MCPServers() {\n \n   const handleSaveServer = async (name: string, config: MCPServerConfig) => {\n     try {\n-      await toggleServer(name, false)\n+      toggleServer(name, false)",
        "comment_created_at": "2025-08-04T23:32:29+00:00",
        "comment_author": "cmppoon",
        "comment_body": "removed.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1598092839",
    "pr_number": 2893,
    "pr_file": "web/containers/Providers/DeepLinkListener.tsx",
    "created_at": "2024-05-13T08:41:05+00:00",
    "commented_code": "importHuggingFaceModelStageAtom\n   )\n \n-  const debounced = useDebouncedCallback(async (searchText) => {\n-    if (searchText.indexOf('/') === -1) {\n-      toaster({\n-        title: 'Failed to get Hugging Face models',\n-        description: 'Invalid Hugging Face model URL',\n-        type: 'error',\n-      })\n-      return\n-    }\n-\n-    try {\n-      setLoadingInfo({\n-        title: 'Getting Hugging Face models',\n-        message: 'Please wait..',\n-      })\n-      const data = await getHfRepoData(searchText)\n-      setImportingHuggingFaceRepoData(data)\n-      setImportHuggingFaceModelStage('REPO_DETAIL')\n-      setLoadingInfo(undefined)\n-    } catch (err) {\n-      setLoadingInfo(undefined)\n-      let errMessage = 'Unexpected Error'\n-      if (err instanceof Error) {\n-        errMessage = err.message\n+  const handleDeepLinkAction = useDebouncedCallback(\n+    async (deepLinkAction: DeepLinkAction) => {\n+      if (\n+        deepLinkAction.action !== 'models' ||\n+        deepLinkAction.provider !== 'huggingface'\n+      ) {\n+        console.error(\n+          `Invalid deeplink action (${deepLinkAction.action}) or provider (${deepLinkAction.provider})`\n+        )\n+        return\n       }\n-      toaster({\n-        title: 'Failed to get Hugging Face models',\n-        description: errMessage,\n-        type: 'error',\n-      })\n-      console.error(err)\n-    }\n-  }, 300)\n+\n+      try {\n+        setLoadingInfo({\n+          title: 'Getting Hugging Face models',\n+          message: 'Please wait..',\n+        })\n+        const data = await getHfRepoData(deepLinkAction.resource)\n+        setImportingHuggingFaceRepoData(data)\n+        setImportHuggingFaceModelStage('REPO_DETAIL')\n+        setLoadingInfo(undefined)\n+      } catch (err) {\n+        setLoadingInfo(undefined)\n+        let errMessage = 'Unexpected Error'\n+        if (err instanceof Error) {\n+          errMessage = err.message\n+        }\n+        toaster({\n+          title: 'Failed to get Hugging Face models',\n+          description: errMessage,\n+          type: 'error',\n+        })",
    "repo_full_name": "menloresearch/jan",
    "discussion_comments": [
      {
        "comment_id": "1598092839",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 2893,
        "pr_file": "web/containers/Providers/DeepLinkListener.tsx",
        "discussion_id": "1598092839",
        "commented_code": "@@ -27,46 +27,79 @@ const DeepLinkListener: React.FC<Props> = ({ children }) => {\n     importHuggingFaceModelStageAtom\n   )\n \n-  const debounced = useDebouncedCallback(async (searchText) => {\n-    if (searchText.indexOf('/') === -1) {\n-      toaster({\n-        title: 'Failed to get Hugging Face models',\n-        description: 'Invalid Hugging Face model URL',\n-        type: 'error',\n-      })\n-      return\n-    }\n-\n-    try {\n-      setLoadingInfo({\n-        title: 'Getting Hugging Face models',\n-        message: 'Please wait..',\n-      })\n-      const data = await getHfRepoData(searchText)\n-      setImportingHuggingFaceRepoData(data)\n-      setImportHuggingFaceModelStage('REPO_DETAIL')\n-      setLoadingInfo(undefined)\n-    } catch (err) {\n-      setLoadingInfo(undefined)\n-      let errMessage = 'Unexpected Error'\n-      if (err instanceof Error) {\n-        errMessage = err.message\n+  const handleDeepLinkAction = useDebouncedCallback(\n+    async (deepLinkAction: DeepLinkAction) => {\n+      if (\n+        deepLinkAction.action !== 'models' ||\n+        deepLinkAction.provider !== 'huggingface'\n+      ) {\n+        console.error(\n+          `Invalid deeplink action (${deepLinkAction.action}) or provider (${deepLinkAction.provider})`\n+        )\n+        return\n       }\n-      toaster({\n-        title: 'Failed to get Hugging Face models',\n-        description: errMessage,\n-        type: 'error',\n-      })\n-      console.error(err)\n-    }\n-  }, 300)\n+\n+      try {\n+        setLoadingInfo({\n+          title: 'Getting Hugging Face models',\n+          message: 'Please wait..',\n+        })\n+        const data = await getHfRepoData(deepLinkAction.resource)\n+        setImportingHuggingFaceRepoData(data)\n+        setImportHuggingFaceModelStage('REPO_DETAIL')\n+        setLoadingInfo(undefined)\n+      } catch (err) {\n+        setLoadingInfo(undefined)\n+        let errMessage = 'Unexpected Error'\n+        if (err instanceof Error) {\n+          errMessage = err.message\n+        }\n+        toaster({\n+          title: 'Failed to get Hugging Face models',\n+          description: errMessage,\n+          type: 'error',\n+        })",
        "comment_created_at": "2024-05-13T08:41:05+00:00",
        "comment_author": "louis-menlo",
        "comment_body": "```suggestion\r\n        toaster({\r\n            title: 'Failed to get Hugging Face models',\r\n            description: err instanceof Error ? err.message : 'Unexpected Error',\r\n            type: 'error',\r\n        })\r\n```",
        "pr_file_module": null
      }
    ]
  }
]