[
  {
    "discussion_id": "1706778687",
    "pr_number": 3291,
    "pr_file": "web/containers/ModelDropdown/ModelSection.tsx",
    "created_at": "2024-08-07T10:36:43+00:00",
    "commented_code": "return (\n     <div className=\"w-full pt-2\">\n-      <h6 className=\"mb-1 px-3 font-medium text-[hsla(var(--text-secondary))]\">\n-        {engineName}\n-      </h6>\n+      <div className=\"flex justify-between pr-2\">\n+        <div className=\"flex gap-2 pl-3\">\n+          {engineLogo && (\n+            <Image\n+              className=\"h-5 w-5 flex-shrink-0 rounded-full object-cover\"\n+              width={40}\n+              height={40}\n+              src={engineLogo}\n+              alt=\"logo\"\n+            />\n+          )}\n+          <h6 className=\"mb-1 pr-3 font-medium text-[hsla(var(--text-secondary))]\">\n+            {engineName}\n+          </h6>\n+        </div>\n+        <Button theme=\"icon\" onClick={onSettingClick}>\n+          <SettingsIcon\n+            size={14}\n+            className=\"text-[hsla(var(--text-secondary))]\"\n+          />\n+        </Button>\n+      </div>\n       <ul className=\"pb-2\">\n-        {models.map((model) => (\n-          <li\n-            key={model.model}\n-            className=\"flex cursor-pointer items-center gap-2 px-3 py-2 hover:bg-[hsla(var(--dropdown-menu-hover-bg))]\"\n-            onClick={() => onModelSelected(model)}\n-          >\n-            {model.metadata?.logo ? (\n-              <Image\n-                className=\"rounded-full object-cover\"\n-                width={20}\n-                height={20}\n-                src={model.metadata?.logo}\n-                alt=\"logo\"\n-              />\n-            ) : (\n-              !model.engine?.includes('cortex.') && (\n-                <div className=\"flex h-5 w-5 items-center justify-center rounded-full border border-[hsla(var(--app-border))] bg-gradient-to-r from-cyan-500 to-blue-500\" />\n-              )\n-            )}\n-            <div className=\"flex w-full items-center justify-between\">\n-              <p className=\"line-clamp-1\">{model.name ?? model.model}</p>\n-              {!model.engine?.includes('cortex.') && (\n-                <Button theme=\"icon\" onClick={onSettingClick}>\n-                  <SettingsIcon\n-                    size={14}\n-                    className=\"text-[hsla(var(--text-secondary))]\"\n-                  />\n-                </Button>\n+        {models.map((model) => {\n+          const isEngineReady =\n+            engineData?.find((e) => e.name === model.engine)?.status === 'ready'",
    "repo_full_name": "menloresearch/jan",
    "discussion_comments": [
      {
        "comment_id": "1706778687",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 3291,
        "pr_file": "web/containers/ModelDropdown/ModelSection.tsx",
        "discussion_id": "1706778687",
        "commented_code": "@@ -56,43 +60,55 @@ const ModelSection: React.FC<Props> = ({\n \n   return (\n     <div className=\"w-full pt-2\">\n-      <h6 className=\"mb-1 px-3 font-medium text-[hsla(var(--text-secondary))]\">\n-        {engineName}\n-      </h6>\n+      <div className=\"flex justify-between pr-2\">\n+        <div className=\"flex gap-2 pl-3\">\n+          {engineLogo && (\n+            <Image\n+              className=\"h-5 w-5 flex-shrink-0 rounded-full object-cover\"\n+              width={40}\n+              height={40}\n+              src={engineLogo}\n+              alt=\"logo\"\n+            />\n+          )}\n+          <h6 className=\"mb-1 pr-3 font-medium text-[hsla(var(--text-secondary))]\">\n+            {engineName}\n+          </h6>\n+        </div>\n+        <Button theme=\"icon\" onClick={onSettingClick}>\n+          <SettingsIcon\n+            size={14}\n+            className=\"text-[hsla(var(--text-secondary))]\"\n+          />\n+        </Button>\n+      </div>\n       <ul className=\"pb-2\">\n-        {models.map((model) => (\n-          <li\n-            key={model.model}\n-            className=\"flex cursor-pointer items-center gap-2 px-3 py-2 hover:bg-[hsla(var(--dropdown-menu-hover-bg))]\"\n-            onClick={() => onModelSelected(model)}\n-          >\n-            {model.metadata?.logo ? (\n-              <Image\n-                className=\"rounded-full object-cover\"\n-                width={20}\n-                height={20}\n-                src={model.metadata?.logo}\n-                alt=\"logo\"\n-              />\n-            ) : (\n-              !model.engine?.includes('cortex.') && (\n-                <div className=\"flex h-5 w-5 items-center justify-center rounded-full border border-[hsla(var(--app-border))] bg-gradient-to-r from-cyan-500 to-blue-500\" />\n-              )\n-            )}\n-            <div className=\"flex w-full items-center justify-between\">\n-              <p className=\"line-clamp-1\">{model.name ?? model.model}</p>\n-              {!model.engine?.includes('cortex.') && (\n-                <Button theme=\"icon\" onClick={onSettingClick}>\n-                  <SettingsIcon\n-                    size={14}\n-                    className=\"text-[hsla(var(--text-secondary))]\"\n-                  />\n-                </Button>\n+        {models.map((model) => {\n+          const isEngineReady =\n+            engineData?.find((e) => e.name === model.engine)?.status === 'ready'",
        "comment_created_at": "2024-08-07T10:36:43+00:00",
        "comment_author": "louis-menlo",
        "comment_body": "status === EngineStatus.ready",
        "pr_file_module": null
      },
      {
        "comment_id": "1706779033",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 3291,
        "pr_file": "web/containers/ModelDropdown/ModelSection.tsx",
        "discussion_id": "1706778687",
        "commented_code": "@@ -56,43 +60,55 @@ const ModelSection: React.FC<Props> = ({\n \n   return (\n     <div className=\"w-full pt-2\">\n-      <h6 className=\"mb-1 px-3 font-medium text-[hsla(var(--text-secondary))]\">\n-        {engineName}\n-      </h6>\n+      <div className=\"flex justify-between pr-2\">\n+        <div className=\"flex gap-2 pl-3\">\n+          {engineLogo && (\n+            <Image\n+              className=\"h-5 w-5 flex-shrink-0 rounded-full object-cover\"\n+              width={40}\n+              height={40}\n+              src={engineLogo}\n+              alt=\"logo\"\n+            />\n+          )}\n+          <h6 className=\"mb-1 pr-3 font-medium text-[hsla(var(--text-secondary))]\">\n+            {engineName}\n+          </h6>\n+        </div>\n+        <Button theme=\"icon\" onClick={onSettingClick}>\n+          <SettingsIcon\n+            size={14}\n+            className=\"text-[hsla(var(--text-secondary))]\"\n+          />\n+        </Button>\n+      </div>\n       <ul className=\"pb-2\">\n-        {models.map((model) => (\n-          <li\n-            key={model.model}\n-            className=\"flex cursor-pointer items-center gap-2 px-3 py-2 hover:bg-[hsla(var(--dropdown-menu-hover-bg))]\"\n-            onClick={() => onModelSelected(model)}\n-          >\n-            {model.metadata?.logo ? (\n-              <Image\n-                className=\"rounded-full object-cover\"\n-                width={20}\n-                height={20}\n-                src={model.metadata?.logo}\n-                alt=\"logo\"\n-              />\n-            ) : (\n-              !model.engine?.includes('cortex.') && (\n-                <div className=\"flex h-5 w-5 items-center justify-center rounded-full border border-[hsla(var(--app-border))] bg-gradient-to-r from-cyan-500 to-blue-500\" />\n-              )\n-            )}\n-            <div className=\"flex w-full items-center justify-between\">\n-              <p className=\"line-clamp-1\">{model.name ?? model.model}</p>\n-              {!model.engine?.includes('cortex.') && (\n-                <Button theme=\"icon\" onClick={onSettingClick}>\n-                  <SettingsIcon\n-                    size={14}\n-                    className=\"text-[hsla(var(--text-secondary))]\"\n-                  />\n-                </Button>\n+        {models.map((model) => {\n+          const isEngineReady =\n+            engineData?.find((e) => e.name === model.engine)?.status === 'ready'",
        "comment_created_at": "2024-08-07T10:36:59+00:00",
        "comment_author": "louis-menlo",
        "comment_body": "Please rebase + rebuild core to use this enum",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1500145073",
    "pr_number": 2104,
    "pr_file": "web/screens/Settings/SettingMenu/index.tsx",
    "created_at": "2024-02-23T01:56:29+00:00",
    "commented_code": "+import { useEffect, useState } from 'react'\n+\n+import { ScrollArea } from '@janhq/uikit'\n+import { motion as m } from 'framer-motion'\n+import { twMerge } from 'tailwind-merge'\n+\n+type Props = {\n+  activeMenu: string\n+  onMenuClick: (menu: string) => void\n+}\n+\n+const SettingMenu: React.FC<Props> = ({ activeMenu, onMenuClick }) => {\n+  const [menus, setMenus] = useState<string[]>([])\n+\n+  useEffect(() => {\n+    const menu = ['My Models', 'My Settings', 'Advanced Settings']\n+\n+    if (typeof window !== 'undefined' && window.electronAPI) {\n+      menu.push('Extensions')\n+    }\n+    setMenus(menu)",
    "repo_full_name": "menloresearch/jan",
    "discussion_comments": [
      {
        "comment_id": "1500145073",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 2104,
        "pr_file": "web/screens/Settings/SettingMenu/index.tsx",
        "discussion_id": "1500145073",
        "commented_code": "@@ -0,0 +1,55 @@\n+import { useEffect, useState } from 'react'\n+\n+import { ScrollArea } from '@janhq/uikit'\n+import { motion as m } from 'framer-motion'\n+import { twMerge } from 'tailwind-merge'\n+\n+type Props = {\n+  activeMenu: string\n+  onMenuClick: (menu: string) => void\n+}\n+\n+const SettingMenu: React.FC<Props> = ({ activeMenu, onMenuClick }) => {\n+  const [menus, setMenus] = useState<string[]>([])\n+\n+  useEffect(() => {\n+    const menu = ['My Models', 'My Settings', 'Advanced Settings']\n+\n+    if (typeof window !== 'undefined' && window.electronAPI) {\n+      menu.push('Extensions')\n+    }\n+    setMenus(menu)",
        "comment_created_at": "2024-02-23T01:56:29+00:00",
        "comment_author": "louis-menlo",
        "comment_body": "```suggestion\r\n   setMenus([\r\n     'My Models', \r\n     'My Settings',\r\n     'Advanced Settings',\r\n     ...(window.electronAPI ? ['Extensions'] : [])\r\n    ])\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1456947038",
    "pr_number": 1562,
    "pr_file": "web/context/FeatureToggle.tsx",
    "created_at": "2024-01-18T05:56:39+00:00",
    "commented_code": "}: {\n   children: ReactNode\n }) {\n-  const EXPERIMENTAL_FEATURE_ENABLED = 'expermientalFeatureEnabled'\n-  const [experimentalEnabed, setExperimentalEnabled] = useState<boolean>(false)\n+  const EXPERIMENTAL_FEATURE = 'experimentalFeature'\n+  const IGNORE_SSL = 'ignoreSSLFeature'\n+  const HTTPS_PROXY_FEATURE = 'httpsProxyFeature'\n+  const [experimentalFeature, directSetExperimentalFeature] = useState<boolean>(false)\n+  const [ignoreSSL, directSetIgnoreSSL] = useState<boolean>(false)\n+  const [proxy, directSetProxy] = useState<string>('')\n \n   useEffect(() => {\n-    setExperimentalEnabled(\n-      localStorage.getItem(EXPERIMENTAL_FEATURE_ENABLED) === 'true'\n+    directSetExperimentalFeature(\n+      localStorage.getItem(EXPERIMENTAL_FEATURE) === 'true'\n+    )\n+    directSetIgnoreSSL(\n+      localStorage.getItem(IGNORE_SSL) === 'true'\n+    )\n+    directSetProxy(\n+      localStorage.getItem(HTTPS_PROXY_FEATURE)",
    "repo_full_name": "menloresearch/jan",
    "discussion_comments": [
      {
        "comment_id": "1456947038",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 1562,
        "pr_file": "web/context/FeatureToggle.tsx",
        "discussion_id": "1456947038",
        "commented_code": "@@ -18,25 +26,49 @@ export default function FeatureToggleWrapper({\n }: {\n   children: ReactNode\n }) {\n-  const EXPERIMENTAL_FEATURE_ENABLED = 'expermientalFeatureEnabled'\n-  const [experimentalEnabed, setExperimentalEnabled] = useState<boolean>(false)\n+  const EXPERIMENTAL_FEATURE = 'experimentalFeature'\n+  const IGNORE_SSL = 'ignoreSSLFeature'\n+  const HTTPS_PROXY_FEATURE = 'httpsProxyFeature'\n+  const [experimentalFeature, directSetExperimentalFeature] = useState<boolean>(false)\n+  const [ignoreSSL, directSetIgnoreSSL] = useState<boolean>(false)\n+  const [proxy, directSetProxy] = useState<string>('')\n \n   useEffect(() => {\n-    setExperimentalEnabled(\n-      localStorage.getItem(EXPERIMENTAL_FEATURE_ENABLED) === 'true'\n+    directSetExperimentalFeature(\n+      localStorage.getItem(EXPERIMENTAL_FEATURE) === 'true'\n+    )\n+    directSetIgnoreSSL(\n+      localStorage.getItem(IGNORE_SSL) === 'true'\n+    )\n+    directSetProxy(\n+      localStorage.getItem(HTTPS_PROXY_FEATURE)",
        "comment_created_at": "2024-01-18T05:56:39+00:00",
        "comment_author": "louis-menlo",
        "comment_body": "@markmehere, that's a really great PR. I'd like to apply this change to fix the compilation error, and then we'll be good to go.\r\n```suggestion\r\n      localStorage.getItem(HTTPS_PROXY_FEATURE) ?? \"\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1461345856",
    "pr_number": 1694,
    "pr_file": "web/containers/OpenAiKeyInput/index.tsx",
    "created_at": "2024-01-22T04:43:41+00:00",
    "commented_code": "type Props = {\n   selectedModel?: Model\n+  serverEnabled?: boolean",
    "repo_full_name": "menloresearch/jan",
    "discussion_comments": [
      {
        "comment_id": "1461345856",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 1694,
        "pr_file": "web/containers/OpenAiKeyInput/index.tsx",
        "discussion_id": "1461345856",
        "commented_code": "@@ -7,9 +7,10 @@ import { useEngineSettings } from '@/hooks/useEngineSettings'\n \n type Props = {\n   selectedModel?: Model\n+  serverEnabled?: boolean",
        "comment_created_at": "2024-01-22T04:43:41+00:00",
        "comment_author": "namchuai",
        "comment_body": "I think `serverEnabled` can never be null, so we should not using optional param here.\r\n\r\nAnd I think the state of API server (start / stop) should be stored on Jotai atom because we can reuse it in other part. But it's up to you.",
        "pr_file_module": null
      },
      {
        "comment_id": "1461348227",
        "repo_full_name": "menloresearch/jan",
        "pr_number": 1694,
        "pr_file": "web/containers/OpenAiKeyInput/index.tsx",
        "discussion_id": "1461345856",
        "commented_code": "@@ -7,9 +7,10 @@ import { useEngineSettings } from '@/hooks/useEngineSettings'\n \n type Props = {\n   selectedModel?: Model\n+  serverEnabled?: boolean",
        "comment_created_at": "2024-01-22T04:49:08+00:00",
        "comment_author": "urmauur",
        "comment_body": "@namchuai removed optional, yeah actually we stored on Jotai already as serverEnabled, since OpenAIKeyInput is a children from DropdownList component, and we get state `serverEnabled` from parent component, so i just pass it as params to OpenAIKeyInput",
        "pr_file_module": null
      }
    ]
  }
]