[
  {
    "discussion_id": "2373540928",
    "pr_number": 7572,
    "pr_file": ".config/nextest.toml",
    "created_at": "2025-09-23T21:53:55+00:00",
    "commented_code": null,
    "repo_full_name": "jj-vcs/jj",
    "discussion_comments": [
      {
        "comment_id": "2373540928",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7572,
        "pr_file": ".config/nextest.toml",
        "discussion_id": "2373540928",
        "commented_code": null,
        "comment_created_at": "2025-09-23T21:53:55+00:00",
        "comment_author": "martinvonz",
        "comment_body": "> nextest: mark tests that last >10s as \"SLOW\"\r\n\r\nIt took me a while to figure out what this patch does. At first I though this patch was about terminating tests that takes longer than 10s, so I worried that we would see tests terminate too early (I think it's not uncommon that tests run for longer than 10s on my machine). Is this patch actually about increasing the limit for what nextest considers slow? I think a sentence like \"Nextest currently marks tests as SLOW if they take more than 5 seconds.\" would help.",
        "pr_file_module": null
      },
      {
        "comment_id": "2374090399",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7572,
        "pr_file": ".config/nextest.toml",
        "discussion_id": "2373540928",
        "commented_code": null,
        "comment_created_at": "2025-09-24T04:02:19+00:00",
        "comment_author": "ilyagr",
        "comment_body": "Thanks! I clarified the commit messages.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2309094473",
    "pr_number": 7371,
    "pr_file": ".config/mise.toml",
    "created_at": "2025-08-29T04:22:33+00:00",
    "commented_code": "+#:schema https://mise.jdx.dev/schema/mise.json\n+\n+[vars]\n+bacon_version = \"3.16.0\"\n+cargo_insta_version = \"1.43.1\"\n+cargo_nextest_version = \"0.9.103\"\n+rust_version = \"1.85\"\n+uv_version = \"0.8.13\"\n+\n+[tools]\n+# We need cargo-binstall so that Mise would download \"cargo:\" tools instead of building them.\n+\"cargo-binstall\" = \"latest\"\n+\n+[tasks.\"build:cli-reference\"]\n+description = \"Build the command line reference (cli/tests/cli-reference@.md.snap)\"\n+tools.rust = \"{{vars.rust_version}}\"\n+tools.\"cargo:cargo-insta\" = \"{{vars.cargo_insta_version}}\"\n+run = \"cargo insta test --accept --workspace -- test_generate_md_cli_help\"\n+\n+[tasks.\"build:debug\"]\n+alias = \"Build jj in debug mode\"\n+description = \"Build jj\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo build\"\n+\n+[tasks.\"build:docs\"]\n+description = \"Build documentation into rendered-docs/ for offline use\"\n+tools.uv = \"{{vars.uv_version}}\"\n+run = \"uv run mkdocs build\"\n+\n+[tasks.\"build:release\"]\n+description = \"Build jj in release mode\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo build --release\"\n+\n+\n+[tasks.\"check:clippy\"]\n+description = \"Lint the code with Clippy\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo clippy --workspace --all-targets\"\n+\n+[tasks.\"check:format\"]\n+description = \"Check the code format\"\n+tools.rust = \"nightly\"\n+run = \"cargo fmt --check\"\n+\n+[tasks.\"check:test\"]\n+alias = \"test\"\n+description = \"Run the tests\"\n+tools.rust = \"{{vars.rust_version}}\"\n+tools.\"cargo:cargo-insta\" = \"{{vars.cargo_insta_version}}\"\n+tools.\"cargo:cargo-nextest\" = \"{{vars.cargo_nextest_version}}\"\n+env.NEXTEST_STATUS_LEVEL=\"fail\"",
    "repo_full_name": "jj-vcs/jj",
    "discussion_comments": [
      {
        "comment_id": "2309094473",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7371,
        "pr_file": ".config/mise.toml",
        "discussion_id": "2309094473",
        "commented_code": "@@ -0,0 +1,95 @@\n+#:schema https://mise.jdx.dev/schema/mise.json\n+\n+[vars]\n+bacon_version = \"3.16.0\"\n+cargo_insta_version = \"1.43.1\"\n+cargo_nextest_version = \"0.9.103\"\n+rust_version = \"1.85\"\n+uv_version = \"0.8.13\"\n+\n+[tools]\n+# We need cargo-binstall so that Mise would download \"cargo:\" tools instead of building them.\n+\"cargo-binstall\" = \"latest\"\n+\n+[tasks.\"build:cli-reference\"]\n+description = \"Build the command line reference (cli/tests/cli-reference@.md.snap)\"\n+tools.rust = \"{{vars.rust_version}}\"\n+tools.\"cargo:cargo-insta\" = \"{{vars.cargo_insta_version}}\"\n+run = \"cargo insta test --accept --workspace -- test_generate_md_cli_help\"\n+\n+[tasks.\"build:debug\"]\n+alias = \"Build jj in debug mode\"\n+description = \"Build jj\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo build\"\n+\n+[tasks.\"build:docs\"]\n+description = \"Build documentation into rendered-docs/ for offline use\"\n+tools.uv = \"{{vars.uv_version}}\"\n+run = \"uv run mkdocs build\"\n+\n+[tasks.\"build:release\"]\n+description = \"Build jj in release mode\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo build --release\"\n+\n+\n+[tasks.\"check:clippy\"]\n+description = \"Lint the code with Clippy\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo clippy --workspace --all-targets\"\n+\n+[tasks.\"check:format\"]\n+description = \"Check the code format\"\n+tools.rust = \"nightly\"\n+run = \"cargo fmt --check\"\n+\n+[tasks.\"check:test\"]\n+alias = \"test\"\n+description = \"Run the tests\"\n+tools.rust = \"{{vars.rust_version}}\"\n+tools.\"cargo:cargo-insta\" = \"{{vars.cargo_insta_version}}\"\n+tools.\"cargo:cargo-nextest\" = \"{{vars.cargo_nextest_version}}\"\n+env.NEXTEST_STATUS_LEVEL=\"fail\"",
        "comment_created_at": "2025-08-29T04:22:33+00:00",
        "comment_author": "ilyagr",
        "comment_body": "Looking at [the docs](https://nexte.st/docs/reporting/#status-levels), I think it might be better to use \"slow\" here instead of \"fail\". I think it is better to show slow and retried tests by default (though both are rare in the `jj` repo).\r\n\r\n>  It might not be to everyone's taste, though. Any opinion?\r\n\r\nI haven't tested it myself yet, but trying this out sounds very reasonable to me. I wasn't aware of this option myself, but I probably want it. I'm curious whether we can find an option people will be happy with and, if not, whether people would find it simple enough to override it via `mise.local.toml`.\r\n\r\n(Very optional) I'd also consider adding `RUST_BACKTRACE=1` to this, especially for tests that invoke `jj` CLI.\r\n\r\n(Aside) I have a script for running tests, it previously set `RUST_BACKTRACE=1 NEXTEST_FAILURE_OUTPUT=final` and now also sets `NEXTEST_STATUS_LEVEL=slow`. I forget how useful `NEXTEST_FAILURE_OUTPUT=final` is.\r\n\r\n**Update:** I don't love nextest's `NEXTEST_STATUS_LEVEL=slow` interface. I wish it showed which tests are running, without keeping them on screen when they stop running (admittedly, that takes work and likely an additional dependency to implement, I might look if there's an FR). So, with my \"person\" hat and not my \"maintainer\" hat, I'd vote for not doing it. But I'm not sure what most people would prefer here, since it's still certainly true that 2000 lines of output can overwhelm people and make it hard to use the scrollback. Ultimately, up to you; perhaps we'll hear more opinions.\r\n\r\nIn any case, I'm very glad to know the option exists. Now I also know how to see which tests `nextest` skipped (`NEXTEST_STATUS_LEVEL=skip`) ",
        "pr_file_module": null
      },
      {
        "comment_id": "2310829545",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7371,
        "pr_file": ".config/mise.toml",
        "discussion_id": "2309094473",
        "commented_code": "@@ -0,0 +1,95 @@\n+#:schema https://mise.jdx.dev/schema/mise.json\n+\n+[vars]\n+bacon_version = \"3.16.0\"\n+cargo_insta_version = \"1.43.1\"\n+cargo_nextest_version = \"0.9.103\"\n+rust_version = \"1.85\"\n+uv_version = \"0.8.13\"\n+\n+[tools]\n+# We need cargo-binstall so that Mise would download \"cargo:\" tools instead of building them.\n+\"cargo-binstall\" = \"latest\"\n+\n+[tasks.\"build:cli-reference\"]\n+description = \"Build the command line reference (cli/tests/cli-reference@.md.snap)\"\n+tools.rust = \"{{vars.rust_version}}\"\n+tools.\"cargo:cargo-insta\" = \"{{vars.cargo_insta_version}}\"\n+run = \"cargo insta test --accept --workspace -- test_generate_md_cli_help\"\n+\n+[tasks.\"build:debug\"]\n+alias = \"Build jj in debug mode\"\n+description = \"Build jj\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo build\"\n+\n+[tasks.\"build:docs\"]\n+description = \"Build documentation into rendered-docs/ for offline use\"\n+tools.uv = \"{{vars.uv_version}}\"\n+run = \"uv run mkdocs build\"\n+\n+[tasks.\"build:release\"]\n+description = \"Build jj in release mode\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo build --release\"\n+\n+\n+[tasks.\"check:clippy\"]\n+description = \"Lint the code with Clippy\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo clippy --workspace --all-targets\"\n+\n+[tasks.\"check:format\"]\n+description = \"Check the code format\"\n+tools.rust = \"nightly\"\n+run = \"cargo fmt --check\"\n+\n+[tasks.\"check:test\"]\n+alias = \"test\"\n+description = \"Run the tests\"\n+tools.rust = \"{{vars.rust_version}}\"\n+tools.\"cargo:cargo-insta\" = \"{{vars.cargo_insta_version}}\"\n+tools.\"cargo:cargo-nextest\" = \"{{vars.cargo_nextest_version}}\"\n+env.NEXTEST_STATUS_LEVEL=\"fail\"",
        "comment_created_at": "2025-08-29T18:31:19+00:00",
        "comment_author": "glehmann",
        "comment_body": "I removed it. This is a bit unfortunate that `mise` doesn't allow to add an environment variable definition to a task in `mise.local.toml` without requiring to redefine the whole task.\r\nBut I'll probably define it in my shell config, so I also use it in other projects.\r\n\r\nI've worked for years on C++ projects built with CMake and ninja. The ninja output was very nice, with a very similar behavior to what you describe. I wish nextest could do that.",
        "pr_file_module": null
      },
      {
        "comment_id": "2314634661",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7371,
        "pr_file": ".config/mise.toml",
        "discussion_id": "2309094473",
        "commented_code": "@@ -0,0 +1,95 @@\n+#:schema https://mise.jdx.dev/schema/mise.json\n+\n+[vars]\n+bacon_version = \"3.16.0\"\n+cargo_insta_version = \"1.43.1\"\n+cargo_nextest_version = \"0.9.103\"\n+rust_version = \"1.85\"\n+uv_version = \"0.8.13\"\n+\n+[tools]\n+# We need cargo-binstall so that Mise would download \"cargo:\" tools instead of building them.\n+\"cargo-binstall\" = \"latest\"\n+\n+[tasks.\"build:cli-reference\"]\n+description = \"Build the command line reference (cli/tests/cli-reference@.md.snap)\"\n+tools.rust = \"{{vars.rust_version}}\"\n+tools.\"cargo:cargo-insta\" = \"{{vars.cargo_insta_version}}\"\n+run = \"cargo insta test --accept --workspace -- test_generate_md_cli_help\"\n+\n+[tasks.\"build:debug\"]\n+alias = \"Build jj in debug mode\"\n+description = \"Build jj\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo build\"\n+\n+[tasks.\"build:docs\"]\n+description = \"Build documentation into rendered-docs/ for offline use\"\n+tools.uv = \"{{vars.uv_version}}\"\n+run = \"uv run mkdocs build\"\n+\n+[tasks.\"build:release\"]\n+description = \"Build jj in release mode\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo build --release\"\n+\n+\n+[tasks.\"check:clippy\"]\n+description = \"Lint the code with Clippy\"\n+tools.rust = \"{{vars.rust_version}}\"\n+run = \"cargo clippy --workspace --all-targets\"\n+\n+[tasks.\"check:format\"]\n+description = \"Check the code format\"\n+tools.rust = \"nightly\"\n+run = \"cargo fmt --check\"\n+\n+[tasks.\"check:test\"]\n+alias = \"test\"\n+description = \"Run the tests\"\n+tools.rust = \"{{vars.rust_version}}\"\n+tools.\"cargo:cargo-insta\" = \"{{vars.cargo_insta_version}}\"\n+tools.\"cargo:cargo-nextest\" = \"{{vars.cargo_nextest_version}}\"\n+env.NEXTEST_STATUS_LEVEL=\"fail\"",
        "comment_created_at": "2025-09-01T23:00:56+00:00",
        "comment_author": "ilyagr",
        "comment_body": "You could file an FR for nextest! I meant to, but I couldn't immediately decide what UI would be better exactly.",
        "pr_file_module": null
      }
    ]
  }
]