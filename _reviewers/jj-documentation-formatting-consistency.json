[
  {
    "discussion_id": "2306213459",
    "pr_number": 7373,
    "pr_file": "CHANGELOG.md",
    "created_at": "2025-08-28T05:23:49+00:00",
    "commented_code": null,
    "repo_full_name": "jj-vcs/jj",
    "discussion_comments": [
      {
        "comment_id": "2306213459",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7373,
        "pr_file": "CHANGELOG.md",
        "discussion_id": "2306213459",
        "commented_code": null,
        "comment_created_at": "2025-08-28T05:23:49+00:00",
        "comment_author": "ilyagr",
        "comment_body": "Re the commit message: I'd change\r\n\r\n```\r\njj upload\r\n```\r\n\r\nto\r\n\r\n```\r\n$ jj upload   # \"upload\" is an alias using \"jj util exec\"\r\n```\r\n\r\nThe way your commit message is currently written, I'd also put the example at the end, since (in my mind, at least) it has more to do with explaining why printing a message sometimes looks weird.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2318224560",
    "pr_number": 7396,
    "pr_file": "docs/gerrit.md",
    "created_at": "2025-09-03T08:38:13+00:00",
    "commented_code": "+# Using Jujutsu with Gerrit Code Review\n+\n+JJ and Gerrit share the same mental model, which makes Gerrit feel like a\n+natural collaboration tool for JJ. JJ tracks a \"change identity\" across\n+rewrites, and Gerrit\u2019s `Change-Id` tracks the same logical change across patch\n+sets. JJ and Gerrit's `Change-Id`s aren\u2019t natively compatible yet, but they\u2019re\n+philosophically aligned. `jj gerrit upload` bridges the gap today by adding a\n+Gerrit-style `Change-Id` while JJ keeps its own notion of change identity on the\n+client. In practice, that means small, clean commits that evolve over\n+time\u2014exactly how Gerrit wants you to work.",
    "repo_full_name": "jj-vcs/jj",
    "discussion_comments": [
      {
        "comment_id": "2318224560",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7396,
        "pr_file": "docs/gerrit.md",
        "discussion_id": "2318224560",
        "commented_code": "@@ -0,0 +1,115 @@\n+# Using Jujutsu with Gerrit Code Review\n+\n+JJ and Gerrit share the same mental model, which makes Gerrit feel like a\n+natural collaboration tool for JJ. JJ tracks a \"change identity\" across\n+rewrites, and Gerrit\u2019s `Change-Id` tracks the same logical change across patch\n+sets. JJ and Gerrit's `Change-Id`s aren\u2019t natively compatible yet, but they\u2019re\n+philosophically aligned. `jj gerrit upload` bridges the gap today by adding a\n+Gerrit-style `Change-Id` while JJ keeps its own notion of change identity on the\n+client. In practice, that means small, clean commits that evolve over\n+time\u2014exactly how Gerrit wants you to work.",
        "comment_created_at": "2025-09-03T08:38:13+00:00",
        "comment_author": "lucamilanesio",
        "comment_body": "```suggestion\r\nclient. In practice, that means small, clean commits that evolve over time,\r\nexactly how Gerrit wants you to work.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2286334760",
    "pr_number": 7307,
    "pr_file": "docs/contributing.md",
    "created_at": "2025-08-19T21:06:14+00:00",
    "commented_code": "}\n ```\n \n+#### Helix\n+\n+```toml\n+# .helix/languages.toml\n+[language-server.rust-analyzer.config.rust-analyzer.rustfmt]\n+overrideCommand = [\"rustfmt\", \"+nightly\"]",
    "repo_full_name": "jj-vcs/jj",
    "discussion_comments": [
      {
        "comment_id": "2286334760",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7307,
        "pr_file": "docs/contributing.md",
        "discussion_id": "2286334760",
        "commented_code": "@@ -291,6 +291,14 @@ We recommend at least these settings:\n }\n ```\n \n+#### Helix\n+\n+```toml\n+# .helix/languages.toml\n+[language-server.rust-analyzer.config.rust-analyzer.rustfmt]\n+overrideCommand = [\"rustfmt\", \"+nightly\"]",
        "comment_created_at": "2025-08-19T21:06:14+00:00",
        "comment_author": "senekor",
        "comment_body": "```suggestion\r\n[language-server.rust-analyzer.config.rust-analyzer.rustfmt]\r\nextraArgs = [\"+nightly\"]\r\n```\r\nThis works too and is more consistent with the above suggested Zed config.",
        "pr_file_module": null
      }
    ]
  }
]