[
  {
    "discussion_id": "1931617615",
    "pr_number": 5501,
    "pr_file": "docs/favicon.png",
    "created_at": "2025-01-28T06:48:53+00:00",
    "commented_code": null,
    "repo_full_name": "jj-vcs/jj",
    "discussion_comments": [
      {
        "comment_id": "1931617615",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 5501,
        "pr_file": "docs/favicon.png",
        "discussion_id": "1931617615",
        "commented_code": null,
        "comment_created_at": "2025-01-28T06:48:53+00:00",
        "comment_author": "ilyagr",
        "comment_body": "I would put it in `docs/images/favicon.png`.\r\n\r\nIt's fine for now, but I think 271KB is a bit large for a favicon. We probably will want to update it after we get an uncompressed version.",
        "pr_file_module": null
      },
      {
        "comment_id": "1931622276",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 5501,
        "pr_file": "docs/favicon.png",
        "discussion_id": "1931617615",
        "commented_code": null,
        "comment_created_at": "2025-01-28T06:54:33+00:00",
        "comment_author": "ilyagr",
        "comment_body": "For now, let's just use the original 40KB JPEG as is. I think it's the best version we have, and it'll blow up the size of the repo by only 40KB.\r\n\r\nA PNG might be better once we compress it from the uncompressed version.",
        "pr_file_module": null
      },
      {
        "comment_id": "1931623132",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 5501,
        "pr_file": "docs/favicon.png",
        "discussion_id": "1931617615",
        "commented_code": null,
        "comment_created_at": "2025-01-28T06:55:32+00:00",
        "comment_author": "ilyagr",
        "comment_body": "We can also call it something like `two-jays.jpg` or `logo.jpg` or `jj-logo.jpg`, since I think we'll want to reference it from  the README and a few more places.",
        "pr_file_module": null
      },
      {
        "comment_id": "1931625970",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 5501,
        "pr_file": "docs/favicon.png",
        "discussion_id": "1931617615",
        "commented_code": null,
        "comment_created_at": "2025-01-28T06:59:08+00:00",
        "comment_author": "martinvonz",
        "comment_body": "I shrunk it to 192x192. I also added the license to the LICENSE file in the repo root.",
        "pr_file_module": null
      },
      {
        "comment_id": "1931627620",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 5501,
        "pr_file": "docs/favicon.png",
        "discussion_id": "1931617615",
        "commented_code": null,
        "comment_created_at": "2025-01-28T07:01:06+00:00",
        "comment_author": "ilyagr",
        "comment_body": "Is there any reason *not* to use the JPG? I assume you got the PNG from the JPG, ultimately.",
        "pr_file_module": null
      },
      {
        "comment_id": "1931629429",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 5501,
        "pr_file": "docs/favicon.png",
        "discussion_id": "1931617615",
        "commented_code": null,
        "comment_created_at": "2025-01-28T07:03:05+00:00",
        "comment_author": "ilyagr",
        "comment_body": "Also, if we wait a bit, we might get the original.",
        "pr_file_module": null
      },
      {
        "comment_id": "1931629635",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 5501,
        "pr_file": "docs/favicon.png",
        "discussion_id": "1931617615",
        "commented_code": null,
        "comment_created_at": "2025-01-28T07:03:17+00:00",
        "comment_author": "martinvonz",
        "comment_body": "I got the png from the webp file. I don't know if it's been through a conversion to jpg somewhere on the way (e.g on Discord's servers).",
        "pr_file_module": null
      },
      {
        "comment_id": "1931643760",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 5501,
        "pr_file": "docs/favicon.png",
        "discussion_id": "1931617615",
        "commented_code": null,
        "comment_created_at": "2025-01-28T07:19:45+00:00",
        "comment_author": "ilyagr",
        "comment_body": "I'm guessing the webp file was obtained *from* the JPG file, making it strictly worse. But I might be wrong. In any case, it's not really important anymore.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2365947423",
    "pr_number": 7559,
    "pr_file": "lib/src/protos/simple_op_store.proto",
    "created_at": "2025-09-21T05:06:09+00:00",
    "commented_code": "RefTarget target = 3;\n }\n \n+message RemoteRef {\n+  string name = 1;\n+  repeated RefTargetTerm target_terms = 2;",
    "repo_full_name": "jj-vcs/jj",
    "discussion_comments": [
      {
        "comment_id": "2365947423",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7559,
        "pr_file": "lib/src/protos/simple_op_store.proto",
        "discussion_id": "2365947423",
        "commented_code": "@@ -70,6 +74,12 @@ message GitRef {\n   RefTarget target = 3;\n }\n \n+message RemoteRef {\n+  string name = 1;\n+  repeated RefTargetTerm target_terms = 2;",
        "comment_created_at": "2025-09-21T05:06:09+00:00",
        "comment_author": "martinvonz",
        "comment_body": "I think we should either use `RefConflict` instead of introducing the new `RefTargetTerm`, or we should deprecate `RefConflict`. I don't feel strongly either way, but I don't like introducing a type that's so similar if we don't deprecate the old type. What do you think?",
        "pr_file_module": null
      },
      {
        "comment_id": "2366165319",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7559,
        "pr_file": "lib/src/protos/simple_op_store.proto",
        "discussion_id": "2365947423",
        "commented_code": "@@ -70,6 +74,12 @@ message GitRef {\n   RefTarget target = 3;\n }\n \n+message RemoteRef {\n+  string name = 1;\n+  repeated RefTargetTerm target_terms = 2;",
        "comment_created_at": "2025-09-21T10:27:46+00:00",
        "comment_author": "yuja",
        "comment_body": "I originally used RefTarget, but I thought it would be silly that we reorder the merge terms. I don't feel strongly, though.",
        "pr_file_module": null
      },
      {
        "comment_id": "2366312344",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7559,
        "pr_file": "lib/src/protos/simple_op_store.proto",
        "discussion_id": "2365947423",
        "commented_code": "@@ -70,6 +74,12 @@ message GitRef {\n   RefTarget target = 3;\n }\n \n+message RemoteRef {\n+  string name = 1;\n+  repeated RefTargetTerm target_terms = 2;",
        "comment_created_at": "2025-09-21T17:09:22+00:00",
        "comment_author": "martinvonz",
        "comment_body": "Yes, I'm fine with either, but I'm not really fine with both :) I agree that `RefTargetTerm` is better. Should we deprecate `RefConflict` then?",
        "pr_file_module": null
      },
      {
        "comment_id": "2366572174",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7559,
        "pr_file": "lib/src/protos/simple_op_store.proto",
        "discussion_id": "2365947423",
        "commented_code": "@@ -70,6 +74,12 @@ message GitRef {\n   RefTarget target = 3;\n }\n \n+message RemoteRef {\n+  string name = 1;\n+  repeated RefTargetTerm target_terms = 2;",
        "comment_created_at": "2025-09-22T02:26:07+00:00",
        "comment_author": "yuja",
        "comment_body": "That means we'll need to write local bookmarks and tags in both legacy `RefConflict` and new `RefTargetTerm`s formats to retain forward compatibility. I'm okay with either way, but it might be unnecessary churn.",
        "pr_file_module": null
      },
      {
        "comment_id": "2366755815",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7559,
        "pr_file": "lib/src/protos/simple_op_store.proto",
        "discussion_id": "2365947423",
        "commented_code": "@@ -70,6 +74,12 @@ message GitRef {\n   RefTarget target = 3;\n }\n \n+message RemoteRef {\n+  string name = 1;\n+  repeated RefTargetTerm target_terms = 2;",
        "comment_created_at": "2025-09-22T05:26:15+00:00",
        "comment_author": "martinvonz",
        "comment_body": "Yeah, I'm also torn. How about we just add a comment to `RefConflict` for now? Something like this (but feel free to rephrase):\r\n\r\n```\r\n// This is redundant with `RefTargetTerm`. It exists for historical reasons.\r\n// TODO: Consider deprecating this.\r\n```\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2370842514",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7559,
        "pr_file": "lib/src/protos/simple_op_store.proto",
        "discussion_id": "2365947423",
        "commented_code": "@@ -70,6 +74,12 @@ message GitRef {\n   RefTarget target = 3;\n }\n \n+message RemoteRef {\n+  string name = 1;\n+  repeated RefTargetTerm target_terms = 2;",
        "comment_created_at": "2025-09-23T02:30:22+00:00",
        "comment_author": "yuja",
        "comment_body": "Added comment, thanks.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2278039365",
    "pr_number": 7184,
    "pr_file": "cli/tests/cli-reference@.md.snap",
    "created_at": "2025-08-15T01:15:10+00:00",
    "commented_code": "+## `jj touch`",
    "repo_full_name": "jj-vcs/jj",
    "discussion_comments": [
      {
        "comment_id": "2278039365",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7184,
        "pr_file": "cli/tests/cli-reference@.md.snap",
        "discussion_id": "2278039365",
        "commented_code": "@@ -2644,6 +2646,37 @@ List tags\n \n \n \n+## `jj touch`",
        "comment_created_at": "2025-08-15T01:15:10+00:00",
        "comment_author": "dblsaiko",
        "comment_body": "I think this command name is really unintuitive, it tells you nothing about what it does. (And I think this is the first command where that is the case.)\n\nIdeally you should be able to vaguely figure out whether a command might be the correct one for the action you want to take without having read the documentation.\n\nMy immediate suggestion would be \"edit-meta\", or \"metaedit\" if we're going with the diffedit pattern. No idea if it's any good.",
        "pr_file_module": null
      },
      {
        "comment_id": "2278050388",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7184,
        "pr_file": "cli/tests/cli-reference@.md.snap",
        "discussion_id": "2278039365",
        "commented_code": "@@ -2644,6 +2646,37 @@ List tags\n \n \n \n+## `jj touch`",
        "comment_created_at": "2025-08-15T01:29:42+00:00",
        "comment_author": "scott2000",
        "comment_body": "I don't have strong feelings about the name, but I just wanted to propose that `jj update` or `jj modify` or something like that could work maybe? I think `jj update --change-id` reads pretty well.",
        "pr_file_module": null
      },
      {
        "comment_id": "2278820849",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7184,
        "pr_file": "cli/tests/cli-reference@.md.snap",
        "discussion_id": "2278039365",
        "commented_code": "@@ -2644,6 +2646,37 @@ List tags\n \n \n \n+## `jj touch`",
        "comment_created_at": "2025-08-15T11:20:09+00:00",
        "comment_author": "glehmann",
        "comment_body": "It's a reference to unix `touch`, which seemed quite appropriate to me.\r\nNaming is difficult!",
        "pr_file_module": null
      },
      {
        "comment_id": "2279089909",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7184,
        "pr_file": "cli/tests/cli-reference@.md.snap",
        "discussion_id": "2278039365",
        "commented_code": "@@ -2644,6 +2646,37 @@ List tags\n \n \n \n+## `jj touch`",
        "comment_created_at": "2025-08-15T14:25:26+00:00",
        "comment_author": "dblsaiko",
        "comment_body": "I assumed as much, but I would argue that has the same naming problem :\\^)\r\n\r\n(Plus, I think most people know unix touch mainly as the \u201ccreate file\u201d or maybe \u201cset mtime to now\u201d command)\r\n\r\nI do agree naming is difficult!",
        "pr_file_module": null
      },
      {
        "comment_id": "2279125317",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7184,
        "pr_file": "cli/tests/cli-reference@.md.snap",
        "discussion_id": "2278039365",
        "commented_code": "@@ -2644,6 +2646,37 @@ List tags\n \n \n \n+## `jj touch`",
        "comment_created_at": "2025-08-15T14:46:07+00:00",
        "comment_author": "martinvonz",
        "comment_body": "I think Meta has an internal extension for Mercurial with a command called `metaedit` (it's named that because it edits metadata, not because it's developed by Meta). We could make that the canonical name and have `touch` as an alias, perhaps?",
        "pr_file_module": null
      },
      {
        "comment_id": "2279161795",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7184,
        "pr_file": "cli/tests/cli-reference@.md.snap",
        "discussion_id": "2278039365",
        "commented_code": "@@ -2644,6 +2646,37 @@ List tags\n \n \n \n+## `jj touch`",
        "comment_created_at": "2025-08-15T15:06:36+00:00",
        "comment_author": "PhilipMetzger",
        "comment_body": "I think @arxanas has made the point very clear that unixy names like `touch` are unintuitive to new users, so my vote is to rename it to either `modify` or `metaedit`. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2279322275",
        "repo_full_name": "jj-vcs/jj",
        "pr_number": 7184,
        "pr_file": "cli/tests/cli-reference@.md.snap",
        "discussion_id": "2278039365",
        "commented_code": "@@ -2644,6 +2646,37 @@ List tags\n \n \n \n+## `jj touch`",
        "comment_created_at": "2025-08-15T15:42:08+00:00",
        "comment_author": "joyously",
        "comment_body": "slang: deets\r\n_(not a actual proposal)_",
        "pr_file_module": null
      }
    ]
  }
]