[
  {
    "discussion_id": "2198274135",
    "pr_number": 20144,
    "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
    "created_at": "2025-07-10T17:12:52+00:00",
    "commented_code": "ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n+            } catch (IOException | NoClassDefFoundError e) {\n                 log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);",
    "repo_full_name": "apache/kafka",
    "discussion_comments": [
      {
        "comment_id": "2198274135",
        "repo_full_name": "apache/kafka",
        "pr_number": 20144,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198274135",
        "commented_code": "@@ -717,7 +718,7 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n+            } catch (IOException | NoClassDefFoundError e) {\n                 log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);",
        "comment_created_at": "2025-07-10T17:12:52+00:00",
        "comment_author": "chia7712",
        "comment_body": "Perhaps the log could include the exception?",
        "pr_file_module": null
      },
      {
        "comment_id": "2198617405",
        "repo_full_name": "apache/kafka",
        "pr_number": 20144,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198274135",
        "commented_code": "@@ -717,7 +718,7 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n+            } catch (IOException | NoClassDefFoundError e) {\n                 log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);",
        "comment_created_at": "2025-07-10T20:05:53+00:00",
        "comment_author": "apoorvmittal10",
        "comment_body": "What about the compressionType in the next call i.e. once `NoClassDefFoundError` error is encountered then it will happen for every push hence do we want to try other compression types as supported by broker or move to compression type `none` for next push?",
        "pr_file_module": null
      },
      {
        "comment_id": "2200520116",
        "repo_full_name": "apache/kafka",
        "pr_number": 20144,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198274135",
        "commented_code": "@@ -717,7 +718,7 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n+            } catch (IOException | NoClassDefFoundError e) {\n                 log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);",
        "comment_created_at": "2025-07-11T11:51:35+00:00",
        "comment_author": "k-raina",
        "comment_body": "@chia7712 Addressed in comment https://github.com/apache/kafka/pull/20144/commits/7f258c870fbbd62ceb98ec33f85579d1e6a27919 \r\n\r\n@apoorvmittal10 \r\nThat makes sense! Can this functionality be added in seperate PR? ",
        "pr_file_module": null
      },
      {
        "comment_id": "2200612707",
        "repo_full_name": "apache/kafka",
        "pr_number": 20144,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198274135",
        "commented_code": "@@ -717,7 +718,7 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n+            } catch (IOException | NoClassDefFoundError e) {\n                 log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);",
        "comment_created_at": "2025-07-11T12:31:57+00:00",
        "comment_author": "apoorvmittal10",
        "comment_body": "I don't think there is any value in having a separete PR and we can't achieve the right way in this PR itself, we should create a jira and fix it. Else if there is something else for which you need this PR to go early then it's different, and I guess there is nothing as this new behaviour will anyways go in 4.2.",
        "pr_file_module": null
      },
      {
        "comment_id": "2200665834",
        "repo_full_name": "apache/kafka",
        "pr_number": 20144,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198274135",
        "commented_code": "@@ -717,7 +718,7 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n+            } catch (IOException | NoClassDefFoundError e) {\n                 log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);",
        "comment_created_at": "2025-07-11T12:57:33+00:00",
        "comment_author": "k-raina",
        "comment_body": "@apoorvmittal10 \r\nWe need to merge this PR first, to fix this workaround for users which are facing this problem in older versions of connect and schema registry jars . ",
        "pr_file_module": null
      },
      {
        "comment_id": "2202770861",
        "repo_full_name": "apache/kafka",
        "pr_number": 20144,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198274135",
        "commented_code": "@@ -717,7 +718,7 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n+            } catch (IOException | NoClassDefFoundError e) {\n                 log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);",
        "comment_created_at": "2025-07-12T15:42:56+00:00",
        "comment_author": "chia7712",
        "comment_body": "@k-raina catching the `Throwable` is not a major issue, so there is no hurry to include it in the 4.1.0 release. Perhaps you could address @apoorvmittal10 comment in this PR, and then we could backport it to 4.1.1  ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2205875694",
    "pr_number": 20144,
    "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
    "created_at": "2025-07-14T21:40:31+00:00",
    "commented_code": "ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n-                log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);\n+            } catch (IOException | NoClassDefFoundError e) {\n+                log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType, e);\n                 compressedPayload = ByteBuffer.wrap(payload.toByteArray());\n                 compressionType = CompressionType.NONE;",
    "repo_full_name": "apache/kafka",
    "discussion_comments": [
      {
        "comment_id": "2205875694",
        "repo_full_name": "apache/kafka",
        "pr_number": 20144,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2205875694",
        "commented_code": "@@ -717,8 +718,8 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n-                log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);\n+            } catch (IOException | NoClassDefFoundError e) {\n+                log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType, e);\n                 compressedPayload = ByteBuffer.wrap(payload.toByteArray());\n                 compressionType = CompressionType.NONE;",
        "comment_created_at": "2025-07-14T21:40:31+00:00",
        "comment_author": "chia7712",
        "comment_body": "Perhaps we could have an `unsupportedTypes` collection to filter out types according to `NoClassDefFoundError`? for example:\r\n```java\r\n\r\n                if (e instanceof NoClassDefFoundError) unsupportedTypes.add(compressionType);\r\n```\r\n`ClientTelemetryUtils.preferredCompressionType` could leverage the collection `compressionType` to avoid using  unsupported compression. for example:\r\n```java\r\n    public static CompressionType preferredCompressionType(List<CompressionType> acceptedCompressionTypes, Set<CompressionType> unsupportedTypes) {\r\n        if (acceptedCompressionTypes == null) return CompressionType.NONE;\r\n        // Broker is providing the compression types in order of preference. Grab the\r\n        // first one.\r\n        return acceptedCompressionTypes.stream()\r\n                .filter(t -> !unsupportedTypes.contains(t))\r\n                .findFirst()\r\n                .orElse(CompressionType.NONE);\r\n    }\r\n````",
        "pr_file_module": null
      },
      {
        "comment_id": "2212609171",
        "repo_full_name": "apache/kafka",
        "pr_number": 20144,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2205875694",
        "commented_code": "@@ -717,8 +718,8 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (Throwable e) {\n-                log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);\n+            } catch (IOException | NoClassDefFoundError e) {\n+                log.debug(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType, e);\n                 compressedPayload = ByteBuffer.wrap(payload.toByteArray());\n                 compressionType = CompressionType.NONE;",
        "comment_created_at": "2025-07-17T08:02:54+00:00",
        "comment_author": "k-raina",
        "comment_body": "Thanks @chia7712 for suggestion. I have pushed changes in commit https://github.com/apache/kafka/pull/20144/commits/c655b0eb65f416b612fbf0c3a10d29e5dc80a3a5",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2226098048",
    "pr_number": 20218,
    "pr_file": "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManager.java",
    "created_at": "2025-07-23T16:24:32+00:00",
    "commented_code": "segmentIdsBeingCopied.add(segmentId);\n                             try {\n                                 copyLogSegment(log, candidateLogSegment.logSegment, segmentId, candidateLogSegment.nextSegmentOffset);\n+                            } catch (RemoteStorageException e) {",
    "repo_full_name": "apache/kafka",
    "discussion_comments": [
      {
        "comment_id": "2226098048",
        "repo_full_name": "apache/kafka",
        "pr_number": 20218,
        "pr_file": "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManager.java",
        "discussion_id": "2226098048",
        "commented_code": "@@ -973,6 +973,9 @@ public void copyLogSegmentsToRemote(UnifiedLog log) throws InterruptedException\n                             segmentIdsBeingCopied.add(segmentId);\n                             try {\n                                 copyLogSegment(log, candidateLogSegment.logSegment, segmentId, candidateLogSegment.nextSegmentOffset);\n+                            } catch (RemoteStorageException e) {",
        "comment_created_at": "2025-07-23T16:24:32+00:00",
        "comment_author": "kamalcph",
        "comment_body": "can we catch all exception in the `catch` block and then throw it?\r\n\r\nRemoteStorageException -> Exception\r\n\r\nsince `copyLogSegment` throws InterruptedException, ExecutionException, RemoteStorageException, IOException, and CustomMetadataSizeLimitExceededException:\r\n\r\n```\r\ncatch (Exception e) {\r\n  recordLagStats(log);\r\n  throw e;\r\n}  \r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2198051840",
    "pr_number": 19881,
    "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
    "created_at": "2025-07-10T15:23:00+00:00",
    "commented_code": "ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (IOException e) {\n-                log.info(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);\n+            } catch (Throwable e) {",
    "repo_full_name": "apache/kafka",
    "discussion_comments": [
      {
        "comment_id": "2198051840",
        "repo_full_name": "apache/kafka",
        "pr_number": 19881,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198051840",
        "commented_code": "@@ -718,8 +717,8 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (IOException e) {\n-                log.info(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);\n+            } catch (Throwable e) {",
        "comment_created_at": "2025-07-10T15:23:00+00:00",
        "comment_author": "ijuma",
        "comment_body": "Catching `Throwable` like this isn't safe. Can we be more specific about the exception?",
        "pr_file_module": null
      },
      {
        "comment_id": "2198189309",
        "repo_full_name": "apache/kafka",
        "pr_number": 19881,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198051840",
        "commented_code": "@@ -718,8 +717,8 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (IOException e) {\n-                log.info(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);\n+            } catch (Throwable e) {",
        "comment_created_at": "2025-07-10T16:25:01+00:00",
        "comment_author": "chia7712",
        "comment_body": "Did you mean specify the accurate exception, like `IOException | NoClassDefFoundError`,  instead of `Exception`? \r\n\r\n> Catching Throwable like this isn't safe.\r\n\r\nCould you share the details of your concern with me?",
        "pr_file_module": null
      },
      {
        "comment_id": "2198254154",
        "repo_full_name": "apache/kafka",
        "pr_number": 19881,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198051840",
        "commented_code": "@@ -718,8 +717,8 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (IOException e) {\n-                log.info(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);\n+            } catch (Throwable e) {",
        "comment_created_at": "2025-07-10T17:00:48+00:00",
        "comment_author": "k-raina",
        "comment_body": "@ijuma Raised PR https://github.com/apache/kafka/pull/20144",
        "pr_file_module": null
      },
      {
        "comment_id": "2198266270",
        "repo_full_name": "apache/kafka",
        "pr_number": 19881,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198051840",
        "commented_code": "@@ -718,8 +717,8 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (IOException e) {\n-                log.info(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);\n+            } catch (Throwable e) {",
        "comment_created_at": "2025-07-10T17:07:57+00:00",
        "comment_author": "k-raina",
        "comment_body": "> Could you share the details of your concern with me?\r\n\r\nI see [java docs](https://docs.oracle.com/javase/7/docs/api/java/lang/Error.html) guideline \"An Error is a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch\" ",
        "pr_file_module": null
      },
      {
        "comment_id": "2198543449",
        "repo_full_name": "apache/kafka",
        "pr_number": 19881,
        "pr_file": "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetryReporter.java",
        "discussion_id": "2198051840",
        "commented_code": "@@ -718,8 +717,8 @@ private Optional<Builder<?>> createPushRequest(ClientTelemetrySubscription local\n             ByteBuffer compressedPayload;\n             try {\n                 compressedPayload = ClientTelemetryUtils.compress(payload, compressionType);\n-            } catch (IOException e) {\n-                log.info(\"Failed to compress telemetry payload for compression: {}, sending uncompressed data\", compressionType);\n+            } catch (Throwable e) {",
        "comment_created_at": "2025-07-10T19:32:35+00:00",
        "comment_author": "ijuma",
        "comment_body": "Catching `Throwable` would catch things like `OutOfMemoryException` and various other exceptions that indicate the JVM should exit.",
        "pr_file_module": null
      }
    ]
  }
]