[
  {
    "discussion_id": "2199668697",
    "pr_number": 20068,
    "pr_file": "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
    "created_at": "2025-07-11T05:46:07+00:00",
    "commented_code": "}\n   }\n \n+  def sleepMillisToPropagateMetadata(durationMs: Long, partition: TopicPartition): Unit = {",
    "repo_full_name": "apache/kafka",
    "discussion_comments": [
      {
        "comment_id": "2199668697",
        "repo_full_name": "apache/kafka",
        "pr_number": 20068,
        "pr_file": "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "discussion_id": "2199668697",
        "commented_code": "@@ -2850,6 +2851,21 @@ class PlaintextAdminIntegrationTest extends BaseAdminIntegrationTest {\n     }\n   }\n \n+  def sleepMillisToPropagateMetadata(durationMs: Long, partition: TopicPartition): Unit = {",
        "comment_created_at": "2025-07-11T05:46:07+00:00",
        "comment_author": "TaiJuWu",
        "comment_body": "From my understanding, this function ensures that the leader update has propagated to all brokers\u2019 metadata caches.\r\nIs there a reason why this check isn't integrated directly into changePreferredLeader?\r\nPlease correct me if I'm wrong or miss something .",
        "pr_file_module": null
      },
      {
        "comment_id": "2200177131",
        "repo_full_name": "apache/kafka",
        "pr_number": 20068,
        "pr_file": "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "discussion_id": "2199668697",
        "commented_code": "@@ -2850,6 +2851,21 @@ class PlaintextAdminIntegrationTest extends BaseAdminIntegrationTest {\n     }\n   }\n \n+  def sleepMillisToPropagateMetadata(durationMs: Long, partition: TopicPartition): Unit = {",
        "comment_created_at": "2025-07-11T09:17:05+00:00",
        "comment_author": "jim0987795064",
        "comment_body": "Hello @TaiJuWu ,I extracted this logic into a separate method so that it's easier to reuse in other places if needed. Keeping it outside makes the code more modular and improves readability.\r\nPlease let me know if you have any other questions.",
        "pr_file_module": null
      },
      {
        "comment_id": "2200218526",
        "repo_full_name": "apache/kafka",
        "pr_number": 20068,
        "pr_file": "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "discussion_id": "2199668697",
        "commented_code": "@@ -2850,6 +2851,21 @@ class PlaintextAdminIntegrationTest extends BaseAdminIntegrationTest {\n     }\n   }\n \n+  def sleepMillisToPropagateMetadata(durationMs: Long, partition: TopicPartition): Unit = {",
        "comment_created_at": "2025-07-11T09:31:12+00:00",
        "comment_author": "TaiJuWu",
        "comment_body": "Because there is no any real conditions to wait metadata propagation (you just wait a constant time), I think we can get real condition to wait.\r\n\r\nFor example, we can wait all brokers' partition leader is same.\r\nWe can do that by merging this function into `changePreferredLeader `.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2202705619",
    "pr_number": 20068,
    "pr_file": "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
    "created_at": "2025-07-12T14:41:26+00:00",
    "commented_code": "TestUtils.assertLeader(client, partition2, 2)\n \n     // Now change the preferred leader to 1\n+    sleepMillisToPropagateMetadata(10000, partition2)",
    "repo_full_name": "apache/kafka",
    "discussion_comments": [
      {
        "comment_id": "2202705619",
        "repo_full_name": "apache/kafka",
        "pr_number": 20068,
        "pr_file": "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "discussion_id": "2202705619",
        "commented_code": "@@ -2963,9 +2981,11 @@ class PlaintextAdminIntegrationTest extends BaseAdminIntegrationTest {\n     TestUtils.assertLeader(client, partition2, 2)\n \n     // Now change the preferred leader to 1\n+    sleepMillisToPropagateMetadata(10000, partition2)",
        "comment_created_at": "2025-07-12T14:41:26+00:00",
        "comment_author": "chia7712",
        "comment_body": "Perhaps it could be replaced by `TestUtils.waitForPartitionMetadata(brokers, partition2.topic(), partition2.partition())`?",
        "pr_file_module": null
      },
      {
        "comment_id": "2203264595",
        "repo_full_name": "apache/kafka",
        "pr_number": 20068,
        "pr_file": "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "discussion_id": "2202705619",
        "commented_code": "@@ -2963,9 +2981,11 @@ class PlaintextAdminIntegrationTest extends BaseAdminIntegrationTest {\n     TestUtils.assertLeader(client, partition2, 2)\n \n     // Now change the preferred leader to 1\n+    sleepMillisToPropagateMetadata(10000, partition2)",
        "comment_created_at": "2025-07-13T09:33:47+00:00",
        "comment_author": "jim0987795064",
        "comment_body": "Hello @chia7712 , after reviewing the waitForPartitionMetadata code, it seems that this API is used to check whether the partition leader broker is valid \u2014 that is, not -1 or unknown. It doesn't guarantee that all leader brokers are the same. When I run the code, the test still fails.",
        "pr_file_module": null
      }
    ]
  }
]