[
  {
    "discussion_id": "2279664448",
    "pr_number": 1974,
    "pr_file": "src/extension.ts",
    "created_at": "2025-08-15T18:42:48+00:00",
    "commented_code": "const mdmService = await MdmService.createInstance(cloudLogger)\n \n \t// Initialize i18n for internationalization support\n-\tinitializeI18n(context.globalState.get(\"language\") ?? \"en-US\") // kilocode_change\n+\tinitializeI18n(context.globalState.get(\"language\") ?? formatLanguage(vscode.env.language)) // kilocode_change",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2279664448",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1974,
        "pr_file": "src/extension.ts",
        "discussion_id": "2279664448",
        "commented_code": "@@ -108,7 +109,7 @@ export async function activate(context: vscode.ExtensionContext) {\n \tconst mdmService = await MdmService.createInstance(cloudLogger)\n \n \t// Initialize i18n for internationalization support\n-\tinitializeI18n(context.globalState.get(\"language\") ?? \"en-US\") // kilocode_change\n+\tinitializeI18n(context.globalState.get(\"language\") ?? formatLanguage(vscode.env.language)) // kilocode_change",
        "comment_created_at": "2025-08-15T18:42:48+00:00",
        "comment_author": "chrarnoldus",
        "comment_body": "```suggestion\r\n\tinitializeI18n(context.globalState.get(\"language\") ?? formatLanguage(vscode.env.language))\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2253938911",
    "pr_number": 1764,
    "pr_file": "webview-ui/vite.config.ts",
    "created_at": "2025-08-05T10:37:31+00:00",
    "commented_code": "export default defineConfig(({ mode }) => {\n \tlet outDir = \"../src/webview-ui/build\"\n \n-\tconst pkg = JSON.parse(fs.readFileSync(path.join(__dirname, \"..\", \"src\", \"package.json\"), \"utf8\"))\n+\t// kilocode_change start - read package.json fresh every time to avoid caching issues",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2253938911",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1764,
        "pr_file": "webview-ui/vite.config.ts",
        "discussion_id": "2253938911",
        "commented_code": "@@ -54,7 +54,18 @@ const persistPortPlugin = (): Plugin => ({\n export default defineConfig(({ mode }) => {\n \tlet outDir = \"../src/webview-ui/build\"\n \n-\tconst pkg = JSON.parse(fs.readFileSync(path.join(__dirname, \"..\", \"src\", \"package.json\"), \"utf8\"))\n+\t// kilocode_change start - read package.json fresh every time to avoid caching issues",
        "comment_created_at": "2025-08-05T10:37:31+00:00",
        "comment_author": "chrarnoldus",
        "comment_body": "That's not what the change is, is it? It just adds a catch.",
        "pr_file_module": null
      },
      {
        "comment_id": "2253966738",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1764,
        "pr_file": "webview-ui/vite.config.ts",
        "discussion_id": "2253938911",
        "commented_code": "@@ -54,7 +54,18 @@ const persistPortPlugin = (): Plugin => ({\n export default defineConfig(({ mode }) => {\n \tlet outDir = \"../src/webview-ui/build\"\n \n-\tconst pkg = JSON.parse(fs.readFileSync(path.join(__dirname, \"..\", \"src\", \"package.json\"), \"utf8\"))\n+\t// kilocode_change start - read package.json fresh every time to avoid caching issues",
        "comment_created_at": "2025-08-05T10:48:20+00:00",
        "comment_author": "catrielmuller",
        "comment_body": "This is to prevent the cache of the package.json from the vite hot reload (Only affect to the local dev env)",
        "pr_file_module": null
      },
      {
        "comment_id": "2253976520",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1764,
        "pr_file": "webview-ui/vite.config.ts",
        "discussion_id": "2253938911",
        "commented_code": "@@ -54,7 +54,18 @@ const persistPortPlugin = (): Plugin => ({\n export default defineConfig(({ mode }) => {\n \tlet outDir = \"../src/webview-ui/build\"\n \n-\tconst pkg = JSON.parse(fs.readFileSync(path.join(__dirname, \"..\", \"src\", \"package.json\"), \"utf8\"))\n+\t// kilocode_change start - read package.json fresh every time to avoid caching issues",
        "comment_created_at": "2025-08-05T10:53:06+00:00",
        "comment_author": "chrarnoldus",
        "comment_body": "the change looks scary -- we can accidentally push a version 0.0.0 now?",
        "pr_file_module": null
      },
      {
        "comment_id": "2254174753",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1764,
        "pr_file": "webview-ui/vite.config.ts",
        "discussion_id": "2253938911",
        "commented_code": "@@ -54,7 +54,18 @@ const persistPortPlugin = (): Plugin => ({\n export default defineConfig(({ mode }) => {\n \tlet outDir = \"../src/webview-ui/build\"\n \n-\tconst pkg = JSON.parse(fs.readFileSync(path.join(__dirname, \"..\", \"src\", \"package.json\"), \"utf8\"))\n+\t// kilocode_change start - read package.json fresh every time to avoid caching issues",
        "comment_created_at": "2025-08-05T12:18:52+00:00",
        "comment_author": "catrielmuller",
        "comment_body": "Not really, if we don't have that file we cannot publish the package. \r\nI can throw an error if make more sense, lmk",
        "pr_file_module": null
      },
      {
        "comment_id": "2254189805",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1764,
        "pr_file": "webview-ui/vite.config.ts",
        "discussion_id": "2253938911",
        "commented_code": "@@ -54,7 +54,18 @@ const persistPortPlugin = (): Plugin => ({\n export default defineConfig(({ mode }) => {\n \tlet outDir = \"../src/webview-ui/build\"\n \n-\tconst pkg = JSON.parse(fs.readFileSync(path.join(__dirname, \"..\", \"src\", \"package.json\"), \"utf8\"))\n+\t// kilocode_change start - read package.json fresh every time to avoid caching issues",
        "comment_created_at": "2025-08-05T12:25:16+00:00",
        "comment_author": "chrarnoldus",
        "comment_body": "I think throwing an error makes more sense",
        "pr_file_module": null
      },
      {
        "comment_id": "2254215547",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1764,
        "pr_file": "webview-ui/vite.config.ts",
        "discussion_id": "2253938911",
        "commented_code": "@@ -54,7 +54,18 @@ const persistPortPlugin = (): Plugin => ({\n export default defineConfig(({ mode }) => {\n \tlet outDir = \"../src/webview-ui/build\"\n \n-\tconst pkg = JSON.parse(fs.readFileSync(path.join(__dirname, \"..\", \"src\", \"package.json\"), \"utf8\"))\n+\t// kilocode_change start - read package.json fresh every time to avoid caching issues",
        "comment_created_at": "2025-08-05T12:36:25+00:00",
        "comment_author": "catrielmuller",
        "comment_body": "Done!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2244891843",
    "pr_number": 1628,
    "pr_file": "src/core/prompts/tools/edit-file.ts",
    "created_at": "2025-07-31T09:46:11+00:00",
    "commented_code": "+// kilocode_change: Morph fast apply - file added\n+\n+import { Experiments } from \"@roo-code/types\"\n+\n+export function getMorphInstructions(experiments?: Experiments): string {\n+\treturn experiments?.morphFastApply === true\n+\t\t? \"Morph FastApply is enabled. When making any file edits, you MUST ALWAYS use the \\`edit_file\\` tool instead of other editing tools like \\`write_to_file\\`, \\`search_and_replace\\`, or \\`apply_diff\\`. The \\`edit_file\\` tool uses a less intelligent specialized model to apply code edits to files.**\n\n\"\n+\t\t: \"\"\n+}",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2244891843",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1628,
        "pr_file": "src/core/prompts/tools/edit-file.ts",
        "discussion_id": "2244891843",
        "commented_code": "@@ -0,0 +1,47 @@\n+// kilocode_change: Morph fast apply - file added\n+\n+import { Experiments } from \"@roo-code/types\"\n+\n+export function getMorphInstructions(experiments?: Experiments): string {\n+\treturn experiments?.morphFastApply === true\n+\t\t? \"Morph FastApply is enabled. When making any file edits, you MUST ALWAYS use the \\`edit_file\\` tool instead of other editing tools like \\`write_to_file\\`, \\`search_and_replace\\`, or \\`apply_diff\\`. The \\`edit_file\\` tool uses a less intelligent specialized model to apply code edits to files.**\\n\\n\"\n+\t\t: \"\"\n+}",
        "comment_created_at": "2025-07-31T09:46:11+00:00",
        "comment_author": "hassoncs",
        "comment_body": "I feel like there _should_ be a better way to do this... like we just don't include those other tools in the prompt instead of \"telling\" it not to use them here?",
        "pr_file_module": null
      },
      {
        "comment_id": "2244940931",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1628,
        "pr_file": "src/core/prompts/tools/edit-file.ts",
        "discussion_id": "2244891843",
        "commented_code": "@@ -0,0 +1,47 @@\n+// kilocode_change: Morph fast apply - file added\n+\n+import { Experiments } from \"@roo-code/types\"\n+\n+export function getMorphInstructions(experiments?: Experiments): string {\n+\treturn experiments?.morphFastApply === true\n+\t\t? \"Morph FastApply is enabled. When making any file edits, you MUST ALWAYS use the \\`edit_file\\` tool instead of other editing tools like \\`write_to_file\\`, \\`search_and_replace\\`, or \\`apply_diff\\`. The \\`edit_file\\` tool uses a less intelligent specialized model to apply code edits to files.**\\n\\n\"\n+\t\t: \"\"\n+}",
        "comment_created_at": "2025-07-31T10:07:18+00:00",
        "comment_author": "chrarnoldus",
        "comment_body": "Again I feel the same way, although there's a use case to have both: if the first tool fails it may seamlessly fall back.",
        "pr_file_module": null
      },
      {
        "comment_id": "2246045597",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1628,
        "pr_file": "src/core/prompts/tools/edit-file.ts",
        "discussion_id": "2244891843",
        "commented_code": "@@ -0,0 +1,47 @@\n+// kilocode_change: Morph fast apply - file added\n+\n+import { Experiments } from \"@roo-code/types\"\n+\n+export function getMorphInstructions(experiments?: Experiments): string {\n+\treturn experiments?.morphFastApply === true\n+\t\t? \"Morph FastApply is enabled. When making any file edits, you MUST ALWAYS use the \\`edit_file\\` tool instead of other editing tools like \\`write_to_file\\`, \\`search_and_replace\\`, or \\`apply_diff\\`. The \\`edit_file\\` tool uses a less intelligent specialized model to apply code edits to files.**\\n\\n\"\n+\t\t: \"\"\n+}",
        "comment_created_at": "2025-07-31T18:00:15+00:00",
        "comment_author": "bhaktatejas922",
        "comment_body": "yeah I think when enabled, it should just not have the other edit tools",
        "pr_file_module": null
      },
      {
        "comment_id": "2246299956",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1628,
        "pr_file": "src/core/prompts/tools/edit-file.ts",
        "discussion_id": "2244891843",
        "commented_code": "@@ -0,0 +1,47 @@\n+// kilocode_change: Morph fast apply - file added\n+\n+import { Experiments } from \"@roo-code/types\"\n+\n+export function getMorphInstructions(experiments?: Experiments): string {\n+\treturn experiments?.morphFastApply === true\n+\t\t? \"Morph FastApply is enabled. When making any file edits, you MUST ALWAYS use the \\`edit_file\\` tool instead of other editing tools like \\`write_to_file\\`, \\`search_and_replace\\`, or \\`apply_diff\\`. The \\`edit_file\\` tool uses a less intelligent specialized model to apply code edits to files.**\\n\\n\"\n+\t\t: \"\"\n+}",
        "comment_created_at": "2025-07-31T20:19:29+00:00",
        "comment_author": "chrarnoldus",
        "comment_body": "can be done in a follow-up PR",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2244899098",
    "pr_number": 1628,
    "pr_file": "src/core/prompts/tools/index.ts",
    "created_at": "2025-07-31T09:49:01+00:00",
    "commented_code": "tools.delete(\"codebase_search\")\n \t}\n \n+\t// kilocode_change: Morph fast apply\n+\tif (experiments?.morphFastApply !== true) {\n+\t\ttools.delete(\"edit_file\")\n+\t}",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2244899098",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1628,
        "pr_file": "src/core/prompts/tools/index.ts",
        "discussion_id": "2244899098",
        "commented_code": "@@ -109,6 +111,11 @@ export function getToolDescriptionsForMode(\n \t\ttools.delete(\"codebase_search\")\n \t}\n \n+\t// kilocode_change: Morph fast apply\n+\tif (experiments?.morphFastApply !== true) {\n+\t\ttools.delete(\"edit_file\")\n+\t}",
        "comment_created_at": "2025-07-31T09:49:01+00:00",
        "comment_author": "hassoncs",
        "comment_body": "Here, in the else branch we could just delete those other tools?\n```\nyou` MUST ALWAYS use the \\`edit_file\\` tool instead of other editing tools like \\`write_to_file\\`, \\`search_and_replace\\`, or \\`apply_diff\\`. \n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2244941773",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1628,
        "pr_file": "src/core/prompts/tools/index.ts",
        "discussion_id": "2244899098",
        "commented_code": "@@ -109,6 +111,11 @@ export function getToolDescriptionsForMode(\n \t\ttools.delete(\"codebase_search\")\n \t}\n \n+\t// kilocode_change: Morph fast apply\n+\tif (experiments?.morphFastApply !== true) {\n+\t\ttools.delete(\"edit_file\")\n+\t}",
        "comment_created_at": "2025-07-31T10:07:42+00:00",
        "comment_author": "chrarnoldus",
        "comment_body": "see prev comment",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2136118703",
    "pr_number": 616,
    "pr_file": "src/integrations/misc/process-files.ts",
    "created_at": "2025-06-09T17:14:59+00:00",
    "commented_code": "+import * as vscode from \"vscode\"\n+import fs from \"fs/promises\"\n+import * as path from \"path\"\n+import sizeOf from \"image-size\"\n+\n+/**\n+ * Gets the MIME type for a file based on its extension\n+ */\n+function getMimeType(filePath: string): string {\n+\tconst ext = path.extname(filePath).toLowerCase()\n+\tswitch (ext) {\n+\t\tcase \".png\":\n+\t\t\treturn \"image/png\"\n+\t\tcase \".jpg\":\n+\t\tcase \".jpeg\":\n+\t\t\treturn \"image/jpeg\"\n+\t\tcase \".webp\":\n+\t\t\treturn \"image/webp\"\n+\t\tdefault:\n+\t\t\treturn \"application/octet-stream\"\n+\t}\n+}\n+\n+/**\n+ * Supports processing of images and other file types\n+ */\n+export async function selectFiles(): Promise<{ images: string[]; files: string[] }> {\n+\tconst IMAGE_EXTENSIONS = [\"png\", \"jpg\", \"jpeg\", \"webp\"] // supported by anthropic and openrouter\n+\tconst OTHER_FILE_EXTENSIONS = [\"xml\", \"json\", \"txt\", \"log\", \"md\", \"docx\", \"ipynb\", \"pdf\"]\n+\n+\tconst options: vscode.OpenDialogOptions = {\n+\t\tcanSelectMany: true,\n+\t\topenLabel: \"Import Images & Files\",\n+\t\tfilters: {\n+\t\t\t\"All Files\": [...IMAGE_EXTENSIONS, ...OTHER_FILE_EXTENSIONS],",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2136118703",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 616,
        "pr_file": "src/integrations/misc/process-files.ts",
        "discussion_id": "2136118703",
        "commented_code": "@@ -0,0 +1,93 @@\n+import * as vscode from \"vscode\"\n+import fs from \"fs/promises\"\n+import * as path from \"path\"\n+import sizeOf from \"image-size\"\n+\n+/**\n+ * Gets the MIME type for a file based on its extension\n+ */\n+function getMimeType(filePath: string): string {\n+\tconst ext = path.extname(filePath).toLowerCase()\n+\tswitch (ext) {\n+\t\tcase \".png\":\n+\t\t\treturn \"image/png\"\n+\t\tcase \".jpg\":\n+\t\tcase \".jpeg\":\n+\t\t\treturn \"image/jpeg\"\n+\t\tcase \".webp\":\n+\t\t\treturn \"image/webp\"\n+\t\tdefault:\n+\t\t\treturn \"application/octet-stream\"\n+\t}\n+}\n+\n+/**\n+ * Supports processing of images and other file types\n+ */\n+export async function selectFiles(): Promise<{ images: string[]; files: string[] }> {\n+\tconst IMAGE_EXTENSIONS = [\"png\", \"jpg\", \"jpeg\", \"webp\"] // supported by anthropic and openrouter\n+\tconst OTHER_FILE_EXTENSIONS = [\"xml\", \"json\", \"txt\", \"log\", \"md\", \"docx\", \"ipynb\", \"pdf\"]\n+\n+\tconst options: vscode.OpenDialogOptions = {\n+\t\tcanSelectMany: true,\n+\t\topenLabel: \"Import Images & Files\",\n+\t\tfilters: {\n+\t\t\t\"All Files\": [...IMAGE_EXTENSIONS, ...OTHER_FILE_EXTENSIONS],",
        "comment_created_at": "2025-06-09T17:14:59+00:00",
        "comment_author": "hassoncs",
        "comment_body": "I noticed that the [Cline version](https://github.com/cline/cline/pull/3824/files#diff-f86ffdf33b60a6aff70ccf85ec7a05b9916a6fe6a9ad7854bb321d905fe06809R10) checks if images are allowed before adding in the `IMAGE_EXTENSIONS`. Think it'd be worth it to add that?\r\n\r\n```\r\nFiles: imagesAllowed ? [...IMAGE_EXTENSIONS, ...OTHER_FILE_EXTENSIONS] : OTHER_FILE_EXTENSIONS,\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2192779325",
    "pr_number": 1171,
    "pr_file": "src/extension.ts",
    "created_at": "2025-07-08T15:06:18+00:00",
    "commented_code": ")\n \n \tregisterAutocomplete(context) // kilocode_change\n+\tregisterGhost(context) // kilocode_change",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2192779325",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1171,
        "pr_file": "src/extension.ts",
        "discussion_id": "2192779325",
        "commented_code": "@@ -195,6 +196,7 @@ export async function activate(context: vscode.ExtensionContext) {\n \t)\n \n \tregisterAutocomplete(context) // kilocode_change\n+\tregisterGhost(context) // kilocode_change",
        "comment_created_at": "2025-07-08T15:06:18+00:00",
        "comment_author": "hassoncs",
        "comment_body": "Should we hide this behind a dev flag for a week or so while we iterate on it? Maybe something more hidden than an experimental flag?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2162303905",
    "pr_number": 823,
    "pr_file": "src/core/tools/kilocode/truncateIfNeeded.ts",
    "created_at": "2025-06-23T18:37:44+00:00",
    "commented_code": "+const SIZE_LIMIT_AS_CONTEXT_WINDOW_FRACTION = 0.2",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2162303905",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 823,
        "pr_file": "src/core/tools/kilocode/truncateIfNeeded.ts",
        "discussion_id": "2162303905",
        "commented_code": "@@ -0,0 +1,36 @@\n+const SIZE_LIMIT_AS_CONTEXT_WINDOW_FRACTION = 0.2",
        "comment_created_at": "2025-06-23T18:37:44+00:00",
        "comment_author": "chrarnoldus",
        "comment_body": "Maybe this should be configurable?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2042228591",
    "pr_number": 196,
    "pr_file": "src/core/prompts/sections/custom-instructions.ts",
    "created_at": "2025-04-14T14:12:02+00:00",
    "commented_code": "}\n \n \t// Fall back to existing behavior\n-\tconst ruleFiles = [\".roorules\", \".clinerules\"]\n+\tconst ruleFiles = [\".kilocoderules\"]",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2042228591",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 196,
        "pr_file": "src/core/prompts/sections/custom-instructions.ts",
        "discussion_id": "2042228591",
        "commented_code": "@@ -117,7 +117,7 @@ export async function loadRuleFiles(cwd: string): Promise<string> {\n \t}\n \n \t// Fall back to existing behavior\n-\tconst ruleFiles = [\".roorules\", \".clinerules\"]\n+\tconst ruleFiles = [\".kilocoderules\"]",
        "comment_created_at": "2025-04-14T14:12:02+00:00",
        "comment_author": "Juice10",
        "comment_body": "Shouldn't we support roo and cline rules as well?",
        "pr_file_module": null
      },
      {
        "comment_id": "2042350099",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 196,
        "pr_file": "src/core/prompts/sections/custom-instructions.ts",
        "discussion_id": "2042228591",
        "commented_code": "@@ -117,7 +117,7 @@ export async function loadRuleFiles(cwd: string): Promise<string> {\n \t}\n \n \t// Fall back to existing behavior\n-\tconst ruleFiles = [\".roorules\", \".clinerules\"]\n+\tconst ruleFiles = [\".kilocoderules\"]",
        "comment_created_at": "2025-04-14T15:05:59+00:00",
        "comment_author": "kevinvandijk",
        "comment_body": "Oops, yes that was supposed to be an addition, not a replacement. Will change!",
        "pr_file_module": null
      }
    ]
  }
]