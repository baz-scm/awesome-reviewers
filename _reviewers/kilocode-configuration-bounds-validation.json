[
  {
    "discussion_id": "2262860370",
    "pr_number": 1822,
    "pr_file": "webview-ui/src/components/settings/ThinkingBudget.tsx",
    "created_at": "2025-08-08T12:36:07+00:00",
    "commented_code": "}\n \t}, [isReasoningBudgetSupported, customMaxThinkingTokens, modelMaxThinkingTokens, setApiConfigurationField])\n \n+\t// If the custom max output tokens are going to exceed it's limit due\n+\t// to the model info max tokens then we need to shrink it appropriately.\n+\tuseEffect(() => {\n+\t\tif (isReasoningBudgetSupported && modelInfo?.maxTokens && customMaxOutputTokens > modelInfo.maxTokens) {\n+\t\t\tsetApiConfigurationField(\"modelMaxTokens\", modelInfo.maxTokens || DEFAULT_HYBRID_REASONING_MODEL_MAX_TOKENS)\n+\t\t}\n+\t}, [isReasoningBudgetSupported, customMaxOutputTokens, modelInfo?.maxTokens, setApiConfigurationField])",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2262860370",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1822,
        "pr_file": "webview-ui/src/components/settings/ThinkingBudget.tsx",
        "discussion_id": "2262860370",
        "commented_code": "@@ -41,6 +41,14 @@ export const ThinkingBudget = ({ apiConfiguration, setApiConfigurationField, mod\n \t\t}\n \t}, [isReasoningBudgetSupported, customMaxThinkingTokens, modelMaxThinkingTokens, setApiConfigurationField])\n \n+\t// If the custom max output tokens are going to exceed it's limit due\n+\t// to the model info max tokens then we need to shrink it appropriately.\n+\tuseEffect(() => {\n+\t\tif (isReasoningBudgetSupported && modelInfo?.maxTokens && customMaxOutputTokens > modelInfo.maxTokens) {\n+\t\t\tsetApiConfigurationField(\"modelMaxTokens\", modelInfo.maxTokens || DEFAULT_HYBRID_REASONING_MODEL_MAX_TOKENS)\n+\t\t}\n+\t}, [isReasoningBudgetSupported, customMaxOutputTokens, modelInfo?.maxTokens, setApiConfigurationField])",
        "comment_created_at": "2025-08-08T12:36:07+00:00",
        "comment_author": "chrarnoldus",
        "comment_body": "```suggestion\r\n\t// kilocode_change start\r\n\t// If the custom max output tokens are going to exceed it's limit due\r\n\t// to the model info max tokens then we need to shrink it appropriately.\r\n\tuseEffect(() => {\r\n\t\tif (isReasoningBudgetSupported && modelInfo?.maxTokens && customMaxOutputTokens > modelInfo.maxTokens) {\r\n\t\t\tsetApiConfigurationField(\"modelMaxTokens\", modelInfo.maxTokens || DEFAULT_HYBRID_REASONING_MODEL_MAX_TOKENS)\r\n\t\t}\r\n\t}, [isReasoningBudgetSupported, customMaxOutputTokens, modelInfo?.maxTokens, setApiConfigurationField])\r\n\t// kilocode_change end\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2222886485",
    "pr_number": 1451,
    "pr_file": "webview-ui/src/components/kilocode/settings/GhostServiceSettings.tsx",
    "created_at": "2025-07-22T15:16:03+00:00",
    "commented_code": "</SectionHeader>\n \n \t\t\t<Section>\n+\t\t\t\t{/* Enable Service */}\n+\t\t\t\t<div className=\"flex flex-col gap-3\">\n+\t\t\t\t\t<div className=\"flex flex-col gap-1\">\n+\t\t\t\t\t\t<div className=\"flex items-center gap-2 font-bold\">\n+\t\t\t\t\t\t\t<Keyboard className=\"w-4\" />\n+\t\t\t\t\t\t\t<div>{t(\"kilocode:ghost.settings.keybindings\")}</div>\n+\t\t\t\t\t\t</div>\n+\t\t\t\t\t</div>\n+\t\t\t\t\t<div className=\"flex flex-col gap-3\">\n+\t\t\t\t\t\t<span className=\"font-medium\"></span>\n+\t\t\t\t\t\t<VSCodeCheckbox\n+\t\t\t\t\t\t\tchecked={enableQuickInlineTaskKeybinding || false}\n+\t\t\t\t\t\t\tonChange={onEnableQuickInlineTaskKeybindingChange}>\n+\t\t\t\t\t\t\t<span className=\"font-medium\">\n+\t\t\t\t\t\t\t\t[Cmd/Ctrl+I] {t(\"kilocode:ghost.settings.enableQuickInlineTaskKeybinding.label\")}\n+\t\t\t\t\t\t\t</span>\n+\t\t\t\t\t\t</VSCodeCheckbox>\n+\t\t\t\t\t\t<div className=\"text-vscode-descriptionForeground text-sm mt-1\">\n+\t\t\t\t\t\t\t{t(\"kilocode:ghost.settings.enableQuickInlineTaskKeybinding.description\")}\n+\t\t\t\t\t\t</div>\n+\t\t\t\t\t</div>\n+\t\t\t\t\t<div className=\"flex flex-col gap-3\">\n+\t\t\t\t\t\t<VSCodeCheckbox\n+\t\t\t\t\t\t\tchecked={enableAutoInlineTaskKeybinding || false}\n+\t\t\t\t\t\t\tonChange={onEnableAutoInlineTaskKeybindingChange}>\n+\t\t\t\t\t\t\t<span className=\"font-medium\">\n+\t\t\t\t\t\t\t\t[Cmd/Ctrl+L] {t(\"kilocode:ghost.settings.enableAutoInlineTaskKeybinding.label\")}\n+\t\t\t\t\t\t\t</span>",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2222886485",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 1451,
        "pr_file": "webview-ui/src/components/kilocode/settings/GhostServiceSettings.tsx",
        "discussion_id": "2222886485",
        "commented_code": "@@ -42,12 +57,47 @@ export const GhostServiceSettingsView = ({\n \t\t\t</SectionHeader>\n \n \t\t\t<Section>\n+\t\t\t\t{/* Enable Service */}\n+\t\t\t\t<div className=\"flex flex-col gap-3\">\n+\t\t\t\t\t<div className=\"flex flex-col gap-1\">\n+\t\t\t\t\t\t<div className=\"flex items-center gap-2 font-bold\">\n+\t\t\t\t\t\t\t<Keyboard className=\"w-4\" />\n+\t\t\t\t\t\t\t<div>{t(\"kilocode:ghost.settings.keybindings\")}</div>\n+\t\t\t\t\t\t</div>\n+\t\t\t\t\t</div>\n+\t\t\t\t\t<div className=\"flex flex-col gap-3\">\n+\t\t\t\t\t\t<span className=\"font-medium\"></span>\n+\t\t\t\t\t\t<VSCodeCheckbox\n+\t\t\t\t\t\t\tchecked={enableQuickInlineTaskKeybinding || false}\n+\t\t\t\t\t\t\tonChange={onEnableQuickInlineTaskKeybindingChange}>\n+\t\t\t\t\t\t\t<span className=\"font-medium\">\n+\t\t\t\t\t\t\t\t[Cmd/Ctrl+I] {t(\"kilocode:ghost.settings.enableQuickInlineTaskKeybinding.label\")}\n+\t\t\t\t\t\t\t</span>\n+\t\t\t\t\t\t</VSCodeCheckbox>\n+\t\t\t\t\t\t<div className=\"text-vscode-descriptionForeground text-sm mt-1\">\n+\t\t\t\t\t\t\t{t(\"kilocode:ghost.settings.enableQuickInlineTaskKeybinding.description\")}\n+\t\t\t\t\t\t</div>\n+\t\t\t\t\t</div>\n+\t\t\t\t\t<div className=\"flex flex-col gap-3\">\n+\t\t\t\t\t\t<VSCodeCheckbox\n+\t\t\t\t\t\t\tchecked={enableAutoInlineTaskKeybinding || false}\n+\t\t\t\t\t\t\tonChange={onEnableAutoInlineTaskKeybindingChange}>\n+\t\t\t\t\t\t\t<span className=\"font-medium\">\n+\t\t\t\t\t\t\t\t[Cmd/Ctrl+L] {t(\"kilocode:ghost.settings.enableAutoInlineTaskKeybinding.label\")}\n+\t\t\t\t\t\t\t</span>",
        "comment_created_at": "2025-07-22T15:16:03+00:00",
        "comment_author": "hassoncs",
        "comment_body": "Two thoughts:\n1) Since users can change these shortcuts, I wonder if we should show the keys combinations here at all... Maybe we could say \"Ctrl+I [default]\". I don't think we can show the actual combo here if the user remaps them, can we?\n2) if we are going to show keyboard shortcut keys here, we should probably make them platform aware. We have this code in `ChatView`; `const isMac = navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0` that we could pull into a util fn `${isMac ? \"\u2318\" : \"Ctrl\"}`\n",
        "pr_file_module": null
      }
    ]
  }
]