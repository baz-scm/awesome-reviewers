[
  {
    "discussion_id": "2111514606",
    "pr_number": 446,
    "pr_file": "repo-mcp-server/README.md",
    "created_at": "2025-05-28T10:30:41+00:00",
    "commented_code": "+# Translation MCP Server\n+\n+A Model Context Protocol (MCP) server for managing internationalization (i18n) translation tasks.\n+\n+## Overview\n+\n+This server provides tools for translating strings in JSON translation files used by the Kilo Code extension. It follows the MCP protocol to interact with the extension via stdio (standard input/output).\n+\n+## Structure\n+\n+The codebase is organized as follows:\n+\n+```\n+repo-mcp-server/\n+\u251c\u2500\u2500 src/\n+\u2502   \u251c\u2500\u2500 index.ts              # Main entry point, starts the MCP server\n+\u2502   \u251c\u2500\u2500 tools/                # MCP tools directory\n+\u2502   \u2502   \u251c\u2500\u2500 types.ts          # Type definitions for tools\n+\u2502   \u2502   \u251c\u2500\u2500 index.ts          # Tool registration\n+\u2502   \u2502   \u2514\u2500\u2500 i18n/             # i18n specific tools\n+\u2502   \u2502       \u251c\u2500\u2500 index.ts      # i18n tool exports\n+\u2502   \u2502       \u251c\u2500\u2500 listLocales.ts # Tool for listing available locales\n+\u2502   \u2502       \u251c\u2500\u2500 moveKey.ts    # Tool for moving keys between files\n+\u2502   \u2502       \u251c\u2500\u2500 translateKey.ts # Tool for translating keys\n+\u2502   \u2502       \u2514\u2500\u2500 translation.ts # Translation utilities\n+\u2502   \u2514\u2500\u2500 utils/                # Utility functions\n+\u2502       \u251c\u2500\u2500 json-utils.ts     # JSON handling utilities\n+\u2502       \u251c\u2500\u2500 locale-utils.ts   # Locale detection and management\n+\u2502       \u2514\u2500\u2500 order-utils.ts    # JSON ordering utilities\n+\u251c\u2500\u2500 tsconfig.json             # TypeScript configuration\n+\u2514\u2500\u2500 package.json              # Dependencies and scripts\n+```\n+\n+## Tools\n+\n+This server provides the following MCP tools:\n+\n+1. `translate_i18n_key` - Translate a specific key or keys from English to other languages\n+2. `move_i18n_key` - Move a key from one JSON file to another across all locales\n+3. `list_locales` - List all available locales\n+\n+## Development\n+\n+### Prerequisites\n+\n+- Node.js 18+\n+- npm or yarn\n+- tsx (installed as a dev dependency)\n+\n+### Setup\n+\n+1. Install dependencies:\n+\n+    ```\n+    npm install\n+    ```\n+\n+### Workflow\n+\n+This server is a simple script that's executed directly via TSX. It doesn't need to be built or started separately. The Kilo Code extension communicates with it via stdio, launching it as a child process when needed for translation tasks.\n+\n+For local testing, you can run:\n+\n+```\n+npx tsx src/index.ts\n+```\n+\n+## Configuration\n+\n+The server looks for an `.env.local` file in the parent directory for configuration variables:\n+\n+- `OPENROUTER_API_KEY` - API key for OpenRouter translation service\n+- `DEFAULT_MODEL` - Default model to use for translation (defaults to \"anthropic/claude-3.7-sonnet\")",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2111514606",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 446,
        "pr_file": "repo-mcp-server/README.md",
        "discussion_id": "2111514606",
        "commented_code": "@@ -0,0 +1,73 @@\n+# Translation MCP Server\n+\n+A Model Context Protocol (MCP) server for managing internationalization (i18n) translation tasks.\n+\n+## Overview\n+\n+This server provides tools for translating strings in JSON translation files used by the Kilo Code extension. It follows the MCP protocol to interact with the extension via stdio (standard input/output).\n+\n+## Structure\n+\n+The codebase is organized as follows:\n+\n+```\n+repo-mcp-server/\n+\u251c\u2500\u2500 src/\n+\u2502   \u251c\u2500\u2500 index.ts              # Main entry point, starts the MCP server\n+\u2502   \u251c\u2500\u2500 tools/                # MCP tools directory\n+\u2502   \u2502   \u251c\u2500\u2500 types.ts          # Type definitions for tools\n+\u2502   \u2502   \u251c\u2500\u2500 index.ts          # Tool registration\n+\u2502   \u2502   \u2514\u2500\u2500 i18n/             # i18n specific tools\n+\u2502   \u2502       \u251c\u2500\u2500 index.ts      # i18n tool exports\n+\u2502   \u2502       \u251c\u2500\u2500 listLocales.ts # Tool for listing available locales\n+\u2502   \u2502       \u251c\u2500\u2500 moveKey.ts    # Tool for moving keys between files\n+\u2502   \u2502       \u251c\u2500\u2500 translateKey.ts # Tool for translating keys\n+\u2502   \u2502       \u2514\u2500\u2500 translation.ts # Translation utilities\n+\u2502   \u2514\u2500\u2500 utils/                # Utility functions\n+\u2502       \u251c\u2500\u2500 json-utils.ts     # JSON handling utilities\n+\u2502       \u251c\u2500\u2500 locale-utils.ts   # Locale detection and management\n+\u2502       \u2514\u2500\u2500 order-utils.ts    # JSON ordering utilities\n+\u251c\u2500\u2500 tsconfig.json             # TypeScript configuration\n+\u2514\u2500\u2500 package.json              # Dependencies and scripts\n+```\n+\n+## Tools\n+\n+This server provides the following MCP tools:\n+\n+1. `translate_i18n_key` - Translate a specific key or keys from English to other languages\n+2. `move_i18n_key` - Move a key from one JSON file to another across all locales\n+3. `list_locales` - List all available locales\n+\n+## Development\n+\n+### Prerequisites\n+\n+- Node.js 18+\n+- npm or yarn\n+- tsx (installed as a dev dependency)\n+\n+### Setup\n+\n+1. Install dependencies:\n+\n+    ```\n+    npm install\n+    ```\n+\n+### Workflow\n+\n+This server is a simple script that's executed directly via TSX. It doesn't need to be built or started separately. The Kilo Code extension communicates with it via stdio, launching it as a child process when needed for translation tasks.\n+\n+For local testing, you can run:\n+\n+```\n+npx tsx src/index.ts\n+```\n+\n+## Configuration\n+\n+The server looks for an `.env.local` file in the parent directory for configuration variables:\n+\n+- `OPENROUTER_API_KEY` - API key for OpenRouter translation service\n+- `DEFAULT_MODEL` - Default model to use for translation (defaults to \"anthropic/claude-3.7-sonnet\")",
        "comment_created_at": "2025-05-28T10:30:41+00:00",
        "comment_author": "EamonNerbonne",
        "comment_body": "As discussed yesterday, edit readme so it's clear this is just a dev-tool, not something we ship, and also that it's purely a performance optimization; we can just delete it when maintenance burden outweighs the time spent waiting for the LLM.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2111681046",
    "pr_number": 446,
    "pr_file": "repo-mcp-server/README.md",
    "created_at": "2025-05-28T12:04:33+00:00",
    "commented_code": "+# Translation MCP Server\n+\n+**Dev tool only:** This is a performance optimization to reduce LLM waiting time during translation tasks. Can be deleted when maintenance burden outweighs time saved.",
    "repo_full_name": "Kilo-Org/kilocode",
    "discussion_comments": [
      {
        "comment_id": "2111681046",
        "repo_full_name": "Kilo-Org/kilocode",
        "pr_number": 446,
        "pr_file": "repo-mcp-server/README.md",
        "discussion_id": "2111681046",
        "commented_code": "@@ -0,0 +1,18 @@\n+# Translation MCP Server\n+\n+**Dev tool only:** This is a performance optimization to reduce LLM waiting time during translation tasks. Can be deleted when maintenance burden outweighs time saved.",
        "comment_created_at": "2025-05-28T12:04:33+00:00",
        "comment_author": "EamonNerbonne",
        "comment_body": "```suggestion\r\n**Kilocode internal dev tool only:** This is a performance optimization to reduce LLM waiting time during translation tasks. Can be deleted when maintenance burden outweighs time saved.\r\n```",
        "pr_file_module": null
      }
    ]
  }
]