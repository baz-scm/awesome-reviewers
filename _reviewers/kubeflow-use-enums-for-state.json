[
  {
    "discussion_id": "1090467817",
    "pr_number": 6895,
    "pr_file": "components/centraldashboard-angular/frontend/src/app/shared/utils.ts",
    "created_at": "2023-01-30T10:57:01+00:00",
    "commented_code": "/**\n * We treat URLs with or without a trailing slash as the same\n * URL. Thus, in order to compare URLs, we need to use\n * appendBackslash for both URLS to avoid false statements\n * in cases where they only differ in the trailing slash.\n */\nexport function equalUrlPaths(firstUrl: string, secondUrl: string | undefined) {\n  if (!firstUrl && !secondUrl) {\n    console.warn(`Got undefined URLs ${firstUrl} and ${secondUrl}`);\n    return true;\n  }",
    "repo_full_name": "kubeflow/kubeflow",
    "discussion_comments": [
      {
        "comment_id": "1090467817",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 6895,
        "pr_file": "components/centraldashboard-angular/frontend/src/app/shared/utils.ts",
        "discussion_id": "1090467817",
        "commented_code": "@@ -0,0 +1,37 @@\n+/**\n+ * We treat URLs with or without a trailing slash as the same\n+ * URL. Thus, in order to compare URLs, we need to use\n+ * appendBackslash for both URLS to avoid false statements\n+ * in cases where they only differ in the trailing slash.\n+ */\n+export function equalUrlPaths(firstUrl: string, secondUrl: string | undefined) {\n+  if (!firstUrl && !secondUrl) {\n+    console.warn(`Got undefined URLs ${firstUrl} and ${secondUrl}`);\n+    return true;\n+  }",
        "comment_created_at": "2023-01-30T10:57:01+00:00",
        "comment_author": "tasos-ale",
        "comment_body": "This is not this PR, but maybe we want to think if we want to consider `undefined` URLs as equals.",
        "pr_file_module": null
      },
      {
        "comment_id": "1091898423",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 6895,
        "pr_file": "components/centraldashboard-angular/frontend/src/app/shared/utils.ts",
        "discussion_id": "1090467817",
        "commented_code": "@@ -0,0 +1,37 @@\n+/**\n+ * We treat URLs with or without a trailing slash as the same\n+ * URL. Thus, in order to compare URLs, we need to use\n+ * appendBackslash for both URLS to avoid false statements\n+ * in cases where they only differ in the trailing slash.\n+ */\n+export function equalUrlPaths(firstUrl: string, secondUrl: string | undefined) {\n+  if (!firstUrl && !secondUrl) {\n+    console.warn(`Got undefined URLs ${firstUrl} and ${secondUrl}`);\n+    return true;\n+  }",
        "comment_created_at": "2023-01-31T13:06:10+00:00",
        "comment_author": "orfeas-k",
        "comment_body": "Normally, we don't stumble upon 2 undefined URLs (we did with a previous implementation of URLs syncing). Thus, I think we can go ahead and remove this `if` completely @tasos-ale ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "596628238",
    "pr_number": 5710,
    "pr_file": "components/crud-web-apps/common/frontend/kubeflow-common-lib/projects/kubeflow/src/lib/services/namespace.service.ts",
    "created_at": "2021-03-18T08:04:47+00:00",
    "commented_code": "// Observable string sources\n  private selectedNamespaceSource = new ReplaySubject<string>(1);\n  private dashboardConnectedSource = new BehaviorSubject<boolean>(true);",
    "repo_full_name": "kubeflow/kubeflow",
    "discussion_comments": [
      {
        "comment_id": "596628238",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5710,
        "pr_file": "components/crud-web-apps/common/frontend/kubeflow-common-lib/projects/kubeflow/src/lib/services/namespace.service.ts",
        "discussion_id": "596628238",
        "commented_code": "@@ -15,9 +15,11 @@ export class NamespaceService {\n \n   // Observable string sources\n   private selectedNamespaceSource = new ReplaySubject<string>(1);\n+  private dashboardConnectedSource = new BehaviorSubject<boolean>(true);",
        "comment_created_at": "2021-03-18T08:04:47+00:00",
        "comment_author": "tasos-ale",
        "comment_body": "Hello @kimwnasptd. I think this Observable should not start with `true` as a default value. If someone uses the `dashboardConnected$` property and the `centraldashboard` is not ready, it will wrongly inform the user that it is ready. Maybe you can use `null` as the unknown state or even better use an enum. Something like this:\r\n```\r\nenum DashboardState {\r\n  Unknown = 0, // or Connecting\r\n  Connected,\r\n  Disconnected,\r\n}\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "597086580",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5710,
        "pr_file": "components/crud-web-apps/common/frontend/kubeflow-common-lib/projects/kubeflow/src/lib/services/namespace.service.ts",
        "discussion_id": "596628238",
        "commented_code": "@@ -15,9 +15,11 @@ export class NamespaceService {\n \n   // Observable string sources\n   private selectedNamespaceSource = new ReplaySubject<string>(1);\n+  private dashboardConnectedSource = new BehaviorSubject<boolean>(true);",
        "comment_created_at": "2021-03-18T17:18:56+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "Thank you for the feedback @tasos-ale! \r\n\r\nThe reason I used `true` as a default value here is because if it starts as `null` then the app will think that the dashboard is not present and try to make a request to fetch the namespaces. \r\n\r\nSo in this case I take for granted the opposite, which is expect the dashboard to be present and if after the check it's missing then the apps will make the request to fetch the namespaces",
        "pr_file_module": null
      },
      {
        "comment_id": "597087081",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5710,
        "pr_file": "components/crud-web-apps/common/frontend/kubeflow-common-lib/projects/kubeflow/src/lib/services/namespace.service.ts",
        "discussion_id": "596628238",
        "commented_code": "@@ -15,9 +15,11 @@ export class NamespaceService {\n \n   // Observable string sources\n   private selectedNamespaceSource = new ReplaySubject<string>(1);\n+  private dashboardConnectedSource = new BehaviorSubject<boolean>(true);",
        "comment_created_at": "2021-03-18T17:19:36+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "but indeed the enumeration is a better way to express this. I'll use this enum instead of a boolean value and the apps will fetch the namespaces only if the state is `Disconnected`",
        "pr_file_module": null
      },
      {
        "comment_id": "597155578",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5710,
        "pr_file": "components/crud-web-apps/common/frontend/kubeflow-common-lib/projects/kubeflow/src/lib/services/namespace.service.ts",
        "discussion_id": "596628238",
        "commented_code": "@@ -15,9 +15,11 @@ export class NamespaceService {\n \n   // Observable string sources\n   private selectedNamespaceSource = new ReplaySubject<string>(1);\n+  private dashboardConnectedSource = new BehaviorSubject<boolean>(true);",
        "comment_created_at": "2021-03-18T18:54:56+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "pushed a commit for the described changes",
        "pr_file_module": null
      }
    ]
  }
]