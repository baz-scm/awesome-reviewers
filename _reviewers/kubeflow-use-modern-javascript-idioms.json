[
  {
    "discussion_id": "640449762",
    "pr_number": 5871,
    "pr_file": "components/centraldashboard/public/components/main-page.js",
    "created_at": "2021-05-27T09:22:44+00:00",
    "commented_code": "// A temporary workaround is  to use \"this.queryParams\" as an input\n        // instead of \"queryParamsChange.base\".\n        // const queryParams = queryParamsChange.base;\n        const queryParams = this.queryParams;\n        if (queryParams) {\n            if (queryParams[\"ns\"]) {\n                if (queryParams[\"ns\"] !== null){\n                    return this.buildHref(",
    "repo_full_name": "kubeflow/kubeflow",
    "discussion_comments": [
      {
        "comment_id": "640449762",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5871,
        "pr_file": "components/centraldashboard/public/components/main-page.js",
        "discussion_id": "640449762",
        "commented_code": "@@ -291,6 +291,18 @@ export class MainPage extends utilitiesMixin(PolymerElement) {\n         // A temporary workaround is  to use \"this.queryParams\" as an input\n         // instead of \"queryParamsChange.base\".\n         // const queryParams = queryParamsChange.base;\n+        const queryParams = this.queryParams;\n+        if (queryParams) {\n+            if (queryParams[\"ns\"]) {\n+                if (queryParams[\"ns\"] !== null){\n+                    return this.buildHref(",
        "comment_created_at": "2021-05-27T09:22:44+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "Could you restructure the if statements in order to reduce the nesting levels?\r\n\r\nSomething like:\r\n```javascript\r\nif (!queryParams || !queryParams[\"ns\"]) {\r\n  return this.buildHref(href, this.queryParams);\r\n}\r\n\r\nreturn this.buildHref(href.replace('{ns}', queryParams[\"ns\"]), queryParams);\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "640607721",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5871,
        "pr_file": "components/centraldashboard/public/components/main-page.js",
        "discussion_id": "640449762",
        "commented_code": "@@ -291,6 +291,18 @@ export class MainPage extends utilitiesMixin(PolymerElement) {\n         // A temporary workaround is  to use \"this.queryParams\" as an input\n         // instead of \"queryParamsChange.base\".\n         // const queryParams = queryParamsChange.base;\n+        const queryParams = this.queryParams;\n+        if (queryParams) {\n+            if (queryParams[\"ns\"]) {\n+                if (queryParams[\"ns\"] !== null){\n+                    return this.buildHref(",
        "comment_created_at": "2021-05-27T13:09:59+00:00",
        "comment_author": "toshi-k",
        "comment_body": "@kimwnasptd Good idea ! I corrected this part, please look at my latest PR.\r\nI inserted a line break not to exceed 80 chars.",
        "pr_file_module": null
      },
      {
        "comment_id": "642539612",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5871,
        "pr_file": "components/centraldashboard/public/components/main-page.js",
        "discussion_id": "640449762",
        "commented_code": "@@ -291,6 +291,18 @@ export class MainPage extends utilitiesMixin(PolymerElement) {\n         // A temporary workaround is  to use \"this.queryParams\" as an input\n         // instead of \"queryParamsChange.base\".\n         // const queryParams = queryParamsChange.base;\n+        const queryParams = this.queryParams;\n+        if (queryParams) {\n+            if (queryParams[\"ns\"]) {\n+                if (queryParams[\"ns\"] !== null){\n+                    return this.buildHref(",
        "comment_created_at": "2021-05-31T14:46:31+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "LGTM!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "255709670",
    "pr_number": 2357,
    "pr_file": "components/jupyter-web-app/jupyter/static/js/notebooks.js",
    "created_at": "2019-02-11T21:55:07+00:00",
    "commented_code": "$(document).ready(function(){\n  // Get Notebooks for the ServiceAccount's Namespace\n  var ns = new URL(window.location.href).searchParams.get(\"namespace\")\n  if (ns) {\n    // Load the selected ns\n    $(\"#ns-select\").val(ns)\n  }\n  $(\"#ns-select\").trigger(\"change\");\n});\n\nfunction deleteNotebook(ns, nb) {\n  $.getJSON(prefix + \"/delete-notebook\", { namespace:ns, notebook:nb}, function(data, status) {\n    var innerHTML = $(\"#error-msgs\").html()\n    if(data.success == true) {\n      updateNotebooksInNamespace(ns)\n      innerHTML  = '';\n    }\n    else {\n      innerHTML  = '<div class=\"alert alert-warning\">';\n      innerHTML += '<span class=\"close\" '\n      innerHTML += 'onclick=\"this.parentElement.style.display=\\'none\\';\">&times;</span>';\n      innerHTML += '<strong>Warning! </strong>' + data.log + ' </div>';\n    }\n    $(\"#error-msgs\").html(innerHTML);\n  });\n};\n\nfunction connectNotebook(ns, nb) {\n  window.open(\"/\" + ns + \"/\" + nb, \"_blank\");",
    "repo_full_name": "kubeflow/kubeflow",
    "discussion_comments": [
      {
        "comment_id": "255709670",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 2357,
        "pr_file": "components/jupyter-web-app/jupyter/static/js/notebooks.js",
        "discussion_id": "255709670",
        "commented_code": "@@ -0,0 +1,149 @@\n+$(document).ready(function(){\n+  // Get Notebooks for the ServiceAccount's Namespace\n+  var ns = new URL(window.location.href).searchParams.get(\"namespace\")\n+  if (ns) {\n+    // Load the selected ns\n+    $(\"#ns-select\").val(ns)\n+  }\n+  $(\"#ns-select\").trigger(\"change\");\n+});\n+\n+function deleteNotebook(ns, nb) {\n+  $.getJSON(prefix + \"/delete-notebook\", { namespace:ns, notebook:nb}, function(data, status) {\n+    var innerHTML = $(\"#error-msgs\").html()\n+    if(data.success == true) {\n+      updateNotebooksInNamespace(ns)\n+      innerHTML  = '';\n+    }\n+    else {\n+      innerHTML  = '<div class=\"alert alert-warning\">';\n+      innerHTML += '<span class=\"close\" '\n+      innerHTML += 'onclick=\"this.parentElement.style.display=\\'none\\';\">&times;</span>';\n+      innerHTML += '<strong>Warning! </strong>' + data.log + ' </div>';\n+    }\n+    $(\"#error-msgs\").html(innerHTML);\n+  });\n+};\n+\n+function connectNotebook(ns, nb) {\n+  window.open(\"/\" + ns + \"/\" + nb, \"_blank\");",
        "comment_created_at": "2019-02-11T21:55:07+00:00",
        "comment_author": "avdaredevil",
        "comment_body": "_**[nitpick]** This could be written as:_\r\n\r\n```js\r\nwindow.open(`/${ns}/${nb}`, \"_blank\");\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "463524341",
    "pr_number": 5174,
    "pr_file": "components/centraldashboard/public/components/main-page.js",
    "created_at": "2020-07-31T10:08:24+00:00",
    "commented_code": "import template from './main-page.pug';\nimport logo from '../assets/logo.svg';\nimport '../assets/anon-user.png';",
    "repo_full_name": "kubeflow/kubeflow",
    "discussion_comments": [
      {
        "comment_id": "463524341",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5174,
        "pr_file": "components/centraldashboard/public/components/main-page.js",
        "discussion_id": "463524341",
        "commented_code": "@@ -30,6 +30,7 @@ import css from './main-page.css';\n import template from './main-page.pug';\n import logo from '../assets/logo.svg';\n import '../assets/anon-user.png';",
        "comment_created_at": "2020-07-31T10:08:24+00:00",
        "comment_author": "SachinVarghese",
        "comment_body": "Remove the import of `anon-user.png` if not being used.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "370910626",
    "pr_number": 4684,
    "pr_file": "components/centraldashboard/public/components/iframe-container.js",
    "created_at": "2020-01-25T03:19:53+00:00",
    "commented_code": "// the captured iframe and set the page property which notifies\n        const iframe = this.$.iframe;\n        iframe.addEventListener('load', () => {\n            iframe.contentDocument.addEventListener('click', () => {\n            const syncIframePage = () => {\n                const iframeLocation = iframe.contentWindow.location;\n                const newIframePage = iframeLocation.href.slice(\n                    iframeLocation.origin.length);\n                if (this.page !== newIframePage) {\n                    this.page = newIframePage;\n                }\n            });\n            };\n            iframe.contentDocument.addEventListener('click', syncIframePage);",
    "repo_full_name": "kubeflow/kubeflow",
    "discussion_comments": [
      {
        "comment_id": "370910626",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 4684,
        "pr_file": "components/centraldashboard/public/components/iframe-container.js",
        "discussion_id": "370910626",
        "commented_code": "@@ -51,14 +51,19 @@ export class IframeContainer extends PolymerElement {\n         // the captured iframe and set the page property which notifies\n         const iframe = this.$.iframe;\n         iframe.addEventListener('load', () => {\n-            iframe.contentDocument.addEventListener('click', () => {\n+            const syncIframePage = () => {\n                 const iframeLocation = iframe.contentWindow.location;\n                 const newIframePage = iframeLocation.href.slice(\n                     iframeLocation.origin.length);\n                 if (this.page !== newIframePage) {\n                     this.page = newIframePage;\n                 }\n-            });\n+            };\n+            iframe.contentDocument.addEventListener('click', syncIframePage);",
        "comment_created_at": "2020-01-25T03:19:53+00:00",
        "comment_author": "avdaredevil",
        "comment_body": "***nit:** small nit for succinctness*\r\n\r\n```suggestion\r\n            const {contentDocument} = iframe\r\n            contentDocument.addEventListener('click', syncIframePage);\r\n            contentDocument.addEventListener('hashchange', syncIframePage);\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "367935667",
    "pr_number": 4659,
    "pr_file": "components/centraldashboard/public/components/namespace-selector.js",
    "created_at": "2020-01-17T13:31:41+00:00",
    "commented_code": "return selected;\n    }\n\n    /**\n     * Check if role is owner\n     */\n    validate() {\n        const {namespaces} = this;\n        if (!namespaces) return;\n        const nsSet = new Set(namespaces.map((i) => i.namespace));\n        if (nsSet.has(this.selected)) return;\n\n        const owned = namespaces.find((n) => n.role == 'owner');\n        // eslint-disable-next-line\n        console.log({own: (owned||[]).namespace, namespaces, ns: this.selected, yeah: namespaces.includes('kubeflow')});",
    "repo_full_name": "kubeflow/kubeflow",
    "discussion_comments": [
      {
        "comment_id": "367935667",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 4659,
        "pr_file": "components/centraldashboard/public/components/namespace-selector.js",
        "discussion_id": "367935667",
        "commented_code": "@@ -153,6 +154,24 @@ export class NamespaceSelector extends PolymerElement {\n         return selected;\n     }\n \n+    /**\n+     * Check if role is owner\n+     */\n+    validate() {\n+        const {namespaces} = this;\n+        if (!namespaces) return;\n+        const nsSet = new Set(namespaces.map((i) => i.namespace));\n+        if (nsSet.has(this.selected)) return;\n+\n+        const owned = namespaces.find((n) => n.role == 'owner');\n+        // eslint-disable-next-line\n+        console.log({own: (owned||[]).namespace, namespaces, ns: this.selected, yeah: namespaces.includes('kubeflow')});",
        "comment_created_at": "2020-01-17T13:31:41+00:00",
        "comment_author": "prodonjs",
        "comment_body": "I don't think there are any other `console.log` statements for non-error conditions so I'd suggest removing this line.",
        "pr_file_module": null
      },
      {
        "comment_id": "368110888",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 4659,
        "pr_file": "components/centraldashboard/public/components/namespace-selector.js",
        "discussion_id": "367935667",
        "commented_code": "@@ -153,6 +154,24 @@ export class NamespaceSelector extends PolymerElement {\n         return selected;\n     }\n \n+    /**\n+     * Check if role is owner\n+     */\n+    validate() {\n+        const {namespaces} = this;\n+        if (!namespaces) return;\n+        const nsSet = new Set(namespaces.map((i) => i.namespace));\n+        if (nsSet.has(this.selected)) return;\n+\n+        const owned = namespaces.find((n) => n.role == 'owner');\n+        // eslint-disable-next-line\n+        console.log({own: (owned||[]).namespace, namespaces, ns: this.selected, yeah: namespaces.includes('kubeflow')});",
        "comment_created_at": "2020-01-17T19:56:20+00:00",
        "comment_author": "avdaredevil",
        "comment_body": "Good catch, I forgot to remove this line. Thanks!",
        "pr_file_module": null
      },
      {
        "comment_id": "368111190",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 4659,
        "pr_file": "components/centraldashboard/public/components/namespace-selector.js",
        "discussion_id": "367935667",
        "commented_code": "@@ -153,6 +154,24 @@ export class NamespaceSelector extends PolymerElement {\n         return selected;\n     }\n \n+    /**\n+     * Check if role is owner\n+     */\n+    validate() {\n+        const {namespaces} = this;\n+        if (!namespaces) return;\n+        const nsSet = new Set(namespaces.map((i) => i.namespace));\n+        if (nsSet.has(this.selected)) return;\n+\n+        const owned = namespaces.find((n) => n.role == 'owner');\n+        // eslint-disable-next-line\n+        console.log({own: (owned||[]).namespace, namespaces, ns: this.selected, yeah: namespaces.includes('kubeflow')});",
        "comment_created_at": "2020-01-17T19:57:03+00:00",
        "comment_author": "avdaredevil",
        "comment_body": "Good catch, I forgot to remove this before submitting the PR. Thanks!",
        "pr_file_module": null
      }
    ]
  }
]