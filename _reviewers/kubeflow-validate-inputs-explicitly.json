[
  {
    "discussion_id": "688421843",
    "pr_number": 6092,
    "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
    "created_at": "2021-08-13T10:47:42+00:00",
    "commented_code": "container = notebook[\"spec\"][\"template\"][\"spec\"][\"containers\"][0]\n\n    cpu = get_form_value(body, defaults, \"cpu\")\n\n    cpu_limit = get_form_value(body, defaults, \"cpuLimit\")\n    if cpu_limit == \"NaN\":",
    "repo_full_name": "kubeflow/kubeflow",
    "discussion_comments": [
      {
        "comment_id": "688421843",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 6092,
        "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
        "discussion_id": "688421843",
        "commented_code": "@@ -163,7 +163,10 @@ def set_notebook_cpu(notebook, body, defaults):\n     container = notebook[\"spec\"][\"template\"][\"spec\"][\"containers\"][0]\n \n     cpu = get_form_value(body, defaults, \"cpu\")\n+\n     cpu_limit = get_form_value(body, defaults, \"cpuLimit\")\n+    if cpu_limit == \"NaN\":",
        "comment_created_at": "2021-08-13T10:47:42+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "let's instead make a check if `NaN` is included in the value of either `cpu` or `cpu_limit`.\r\n\r\nAnd if that's the case then the backend should raise a `BadRequest` werkzeug exception (400)",
        "pr_file_module": null
      },
      {
        "comment_id": "688445484",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 6092,
        "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
        "discussion_id": "688421843",
        "commented_code": "@@ -163,7 +163,10 @@ def set_notebook_cpu(notebook, body, defaults):\n     container = notebook[\"spec\"][\"template\"][\"spec\"][\"containers\"][0]\n \n     cpu = get_form_value(body, defaults, \"cpu\")\n+\n     cpu_limit = get_form_value(body, defaults, \"cpuLimit\")\n+    if cpu_limit == \"NaN\":",
        "comment_created_at": "2021-08-13T11:34:06+00:00",
        "comment_author": "munagekar",
        "comment_body": "@kimwnasptd Thank you for the quick review. I will merge in changes from https://github.com/kubeflow/kubeflow/pull/6058 and verify the behavior the locally and make changes as per your suggestions.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "596310181",
    "pr_number": 5646,
    "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
    "created_at": "2021-03-17T19:11:08+00:00",
    "commented_code": ")\n\n\ndef set_notebook_http_rewrite_uri(notebook, body, defaults):\n    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n    http_rewrite_uri = get_form_value(body, defaults, \"httpRewriteURI\")\n    if http_rewrite_uri:\n        notebook_annotations[\"notebooks.kubeflow.org/http-rewrite-uri\"] = http_rewrite_uri\n\n\ndef set_http_headers_request_set(notebook, body, defaults):\n    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n    http_headers_request_set = get_form_value(body, defaults, \"httpHeadersRequestSet\")\n    if http_headers_request_set:\n        notebook_annotations[\"notebooks.kubeflow.org/http-headers-request-set\"] = http_headers_request_set\n\n\ndef set_server_type(notebook, body, defaults):\n    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n    notebook_annotations[\"notebooks.kubeflow.org/server-type\"] = get_form_value(body, defaults, \"serverType\")",
    "repo_full_name": "kubeflow/kubeflow",
    "discussion_comments": [
      {
        "comment_id": "596310181",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5646,
        "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
        "discussion_id": "596310181",
        "commented_code": "@@ -135,6 +135,25 @@ def set_notebook_image_pull_policy(notebook, body, defaults):\n     )\n \n \n+def set_notebook_http_rewrite_uri(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_rewrite_uri = get_form_value(body, defaults, \"httpRewriteURI\")\n+    if http_rewrite_uri:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-rewrite-uri\"] = http_rewrite_uri\n+\n+\n+def set_http_headers_request_set(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_headers_request_set = get_form_value(body, defaults, \"httpHeadersRequestSet\")\n+    if http_headers_request_set:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-headers-request-set\"] = http_headers_request_set\n+\n+\n+def set_server_type(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    notebook_annotations[\"notebooks.kubeflow.org/server-type\"] = get_form_value(body, defaults, \"serverType\")",
        "comment_created_at": "2021-03-17T19:11:08+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "Lets also add some logic here that would handle incorrect values.\r\n\r\nThe expected values here, from the request, would be:\r\n* `None`, which means `\"jupyter\"`\r\n* `\"jupyter\"`\r\n* `\"rstudio\"`\r\n* `\"vscode\"`\r\n\r\nIf this field is present in the request but has a different value from the expected ones then the backend should raise a `400` error",
        "pr_file_module": null
      },
      {
        "comment_id": "596695235",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5646,
        "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
        "discussion_id": "596310181",
        "commented_code": "@@ -135,6 +135,25 @@ def set_notebook_image_pull_policy(notebook, body, defaults):\n     )\n \n \n+def set_notebook_http_rewrite_uri(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_rewrite_uri = get_form_value(body, defaults, \"httpRewriteURI\")\n+    if http_rewrite_uri:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-rewrite-uri\"] = http_rewrite_uri\n+\n+\n+def set_http_headers_request_set(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_headers_request_set = get_form_value(body, defaults, \"httpHeadersRequestSet\")\n+    if http_headers_request_set:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-headers-request-set\"] = http_headers_request_set\n+\n+\n+def set_server_type(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    notebook_annotations[\"notebooks.kubeflow.org/server-type\"] = get_form_value(body, defaults, \"serverType\")",
        "comment_created_at": "2021-03-18T09:41:22+00:00",
        "comment_author": "davidspek",
        "comment_body": "Does adding error logic make sense here? The frontend doesn't rely on user input so unless there is a MITM change to the request a wrong input cannot happen. Also `none` cannot happen, as one of the toggles is always selected. It's not as if the JWA backend is decoupled from the frontend (they exist in the same container and are built together). \r\nRelated to this, how would I go about causing a 400 error specifically in the backend code?",
        "pr_file_module": null
      },
      {
        "comment_id": "596762071",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5646,
        "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
        "discussion_id": "596310181",
        "commented_code": "@@ -135,6 +135,25 @@ def set_notebook_image_pull_policy(notebook, body, defaults):\n     )\n \n \n+def set_notebook_http_rewrite_uri(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_rewrite_uri = get_form_value(body, defaults, \"httpRewriteURI\")\n+    if http_rewrite_uri:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-rewrite-uri\"] = http_rewrite_uri\n+\n+\n+def set_http_headers_request_set(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_headers_request_set = get_form_value(body, defaults, \"httpHeadersRequestSet\")\n+    if http_headers_request_set:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-headers-request-set\"] = http_headers_request_set\n+\n+\n+def set_server_type(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    notebook_annotations[\"notebooks.kubeflow.org/server-type\"] = get_form_value(body, defaults, \"serverType\")",
        "comment_created_at": "2021-03-18T11:16:43+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "Indeed, the frontend sends only specific values but it's a good practice for the backend to make it explicit to the user/frontend that the data it received was not formatted as expected.",
        "pr_file_module": null
      },
      {
        "comment_id": "596769984",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5646,
        "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
        "discussion_id": "596310181",
        "commented_code": "@@ -135,6 +135,25 @@ def set_notebook_image_pull_policy(notebook, body, defaults):\n     )\n \n \n+def set_notebook_http_rewrite_uri(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_rewrite_uri = get_form_value(body, defaults, \"httpRewriteURI\")\n+    if http_rewrite_uri:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-rewrite-uri\"] = http_rewrite_uri\n+\n+\n+def set_http_headers_request_set(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_headers_request_set = get_form_value(body, defaults, \"httpHeadersRequestSet\")\n+    if http_headers_request_set:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-headers-request-set\"] = http_headers_request_set\n+\n+\n+def set_server_type(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    notebook_annotations[\"notebooks.kubeflow.org/server-type\"] = get_form_value(body, defaults, \"serverType\")",
        "comment_created_at": "2021-03-18T11:27:25+00:00",
        "comment_author": "davidspek",
        "comment_body": "Should I handle the error with `log.error`?",
        "pr_file_module": null
      },
      {
        "comment_id": "596775389",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5646,
        "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
        "discussion_id": "596310181",
        "commented_code": "@@ -135,6 +135,25 @@ def set_notebook_image_pull_policy(notebook, body, defaults):\n     )\n \n \n+def set_notebook_http_rewrite_uri(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_rewrite_uri = get_form_value(body, defaults, \"httpRewriteURI\")\n+    if http_rewrite_uri:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-rewrite-uri\"] = http_rewrite_uri\n+\n+\n+def set_http_headers_request_set(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_headers_request_set = get_form_value(body, defaults, \"httpHeadersRequestSet\")\n+    if http_headers_request_set:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-headers-request-set\"] = http_headers_request_set\n+\n+\n+def set_server_type(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    notebook_annotations[\"notebooks.kubeflow.org/server-type\"] = get_form_value(body, defaults, \"serverType\")",
        "comment_created_at": "2021-03-18T11:32:58+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "And also you could look at this snippet for how to raise this error\r\n\r\nhttps://github.com/kubeflow/kubeflow/blob/master/components/crud-web-apps/jupyter/backend/apps/common/form.py#L31-L34\r\n\r\nEDIT: was typing it before I saw your comment above ",
        "pr_file_module": null
      },
      {
        "comment_id": "596930230",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5646,
        "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
        "discussion_id": "596310181",
        "commented_code": "@@ -135,6 +135,25 @@ def set_notebook_image_pull_policy(notebook, body, defaults):\n     )\n \n \n+def set_notebook_http_rewrite_uri(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_rewrite_uri = get_form_value(body, defaults, \"httpRewriteURI\")\n+    if http_rewrite_uri:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-rewrite-uri\"] = http_rewrite_uri\n+\n+\n+def set_http_headers_request_set(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_headers_request_set = get_form_value(body, defaults, \"httpHeadersRequestSet\")\n+    if http_headers_request_set:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-headers-request-set\"] = http_headers_request_set\n+\n+\n+def set_server_type(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    notebook_annotations[\"notebooks.kubeflow.org/server-type\"] = get_form_value(body, defaults, \"serverType\")",
        "comment_created_at": "2021-03-18T14:35:03+00:00",
        "comment_author": "davidspek",
        "comment_body": "Thanks for the link. Sorry for wasting your time on this, I should have looked at the code a bit better and I would have found it. ",
        "pr_file_module": null
      },
      {
        "comment_id": "596951137",
        "repo_full_name": "kubeflow/kubeflow",
        "pr_number": 5646,
        "pr_file": "components/crud-web-apps/jupyter/backend/apps/common/form.py",
        "discussion_id": "596310181",
        "commented_code": "@@ -135,6 +135,25 @@ def set_notebook_image_pull_policy(notebook, body, defaults):\n     )\n \n \n+def set_notebook_http_rewrite_uri(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_rewrite_uri = get_form_value(body, defaults, \"httpRewriteURI\")\n+    if http_rewrite_uri:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-rewrite-uri\"] = http_rewrite_uri\n+\n+\n+def set_http_headers_request_set(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    http_headers_request_set = get_form_value(body, defaults, \"httpHeadersRequestSet\")\n+    if http_headers_request_set:\n+        notebook_annotations[\"notebooks.kubeflow.org/http-headers-request-set\"] = http_headers_request_set\n+\n+\n+def set_server_type(notebook, body, defaults):\n+    notebook_annotations = notebook[\"metadata\"][\"annotations\"]\n+    notebook_annotations[\"notebooks.kubeflow.org/server-type\"] = get_form_value(body, defaults, \"serverType\")",
        "comment_created_at": "2021-03-18T14:57:45+00:00",
        "comment_author": "kimwnasptd",
        "comment_body": "You are not wasting anyone's time. Your efforts are as important as mine and no releases were delayed because of a question :) ",
        "pr_file_module": null
      }
    ]
  }
]