[
  {
    "discussion_id": "2164020517",
    "pr_number": 8181,
    "pr_file": "docs/docs/Configuration/environment-variables.md",
    "created_at": "2025-06-24T13:31:32+00:00",
    "commented_code": "</TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2164020517",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8181,
        "pr_file": "docs/docs/Configuration/environment-variables.md",
        "discussion_id": "2164020517",
        "commented_code": "@@ -387,3 +387,97 @@ To run Langflow using the above VSCode `tasks.json` file, in the VSCode command\n \n </TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.",
        "comment_created_at": "2025-06-24T13:31:32+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nLangflow Desktop for macOS cannot automatically use variables set in your terminal, such as those in`.zshrc` or `.bash_profile`, when launched from the macOS GUI.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2164021720",
    "pr_number": 8181,
    "pr_file": "docs/docs/Configuration/environment-variables.md",
    "created_at": "2025-06-24T13:31:57+00:00",
    "commented_code": "</TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2164021720",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8181,
        "pr_file": "docs/docs/Configuration/environment-variables.md",
        "discussion_id": "2164021720",
        "commented_code": "@@ -387,3 +387,97 @@ To run Langflow using the above VSCode `tasks.json` file, in the VSCode command\n \n </TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.",
        "comment_created_at": "2025-06-24T13:31:57+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nTo make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file:\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2164042899",
    "pr_number": 8181,
    "pr_file": "docs/docs/Configuration/environment-variables.md",
    "created_at": "2025-06-24T13:41:38+00:00",
    "commented_code": "</TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2164042899",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8181,
        "pr_file": "docs/docs/Configuration/environment-variables.md",
        "discussion_id": "2164042899",
        "commented_code": "@@ -387,3 +387,97 @@ To run Langflow using the above VSCode `tasks.json` file, in the VSCode command\n \n </TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.",
        "comment_created_at": "2025-06-24T13:41:38+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nThis example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from the macOS GUI.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2164045090",
    "pr_number": 8181,
    "pr_file": "docs/docs/Configuration/environment-variables.md",
    "created_at": "2025-06-24T13:42:30+00:00",
    "commented_code": "</TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2164045090",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8181,
        "pr_file": "docs/docs/Configuration/environment-variables.md",
        "discussion_id": "2164045090",
        "commented_code": "@@ -387,3 +387,97 @@ To run Langflow using the above VSCode `tasks.json` file, in the VSCode command\n \n </TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.",
        "comment_created_at": "2025-06-24T13:42:30+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n4. Load the file with `launchctl`:\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2164056544",
    "pr_number": 8181,
    "pr_file": "docs/docs/Configuration/environment-variables.md",
    "created_at": "2025-06-24T13:46:59+00:00",
    "commented_code": "</TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.\n+```bash\n+launchctl load ~/Library/LaunchAgents/dev.langflow.env.plist\n+```\n+\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+On Windows, environment variables set in a terminal session, such as using `set` in `cmd` or `$env:VAR=...` in PowerShell, are **not available to GUI applications** launched from the Start Menu, desktop shortcuts, or Windows Explorer.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2164056544",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8181,
        "pr_file": "docs/docs/Configuration/environment-variables.md",
        "discussion_id": "2164056544",
        "commented_code": "@@ -387,3 +387,97 @@ To run Langflow using the above VSCode `tasks.json` file, in the VSCode command\n \n </TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.\n+```bash\n+launchctl load ~/Library/LaunchAgents/dev.langflow.env.plist\n+```\n+\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+On Windows, environment variables set in a terminal session, such as using `set` in `cmd` or `$env:VAR=...` in PowerShell, are **not available to GUI applications** launched from the Start Menu, desktop shortcuts, or Windows Explorer.",
        "comment_created_at": "2025-06-24T13:46:59+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nLangflow Desktop for Windows cannot automatically use variables set in your terminal, such as those defined with `set` in `cmd` or `$env:VAR=...` in PowerShell, when launched from the Windows GUI.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2164065808",
    "pr_number": 8181,
    "pr_file": "docs/docs/Configuration/environment-variables.md",
    "created_at": "2025-06-24T13:49:48+00:00",
    "commented_code": "</TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.\n+```bash\n+launchctl load ~/Library/LaunchAgents/dev.langflow.env.plist\n+```\n+\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+On Windows, environment variables set in a terminal session, such as using `set` in `cmd` or `$env:VAR=...` in PowerShell, are **not available to GUI applications** launched from the Start Menu, desktop shortcuts, or Windows Explorer.\n+\n+To make environment variables available to the Langflow Desktop app, you must set them at the **user or system level** using the System Properties interface or through the command line.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2164065808",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8181,
        "pr_file": "docs/docs/Configuration/environment-variables.md",
        "discussion_id": "2164065808",
        "commented_code": "@@ -387,3 +387,97 @@ To run Langflow using the above VSCode `tasks.json` file, in the VSCode command\n \n </TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.\n+```bash\n+launchctl load ~/Library/LaunchAgents/dev.langflow.env.plist\n+```\n+\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+On Windows, environment variables set in a terminal session, such as using `set` in `cmd` or `$env:VAR=...` in PowerShell, are **not available to GUI applications** launched from the Start Menu, desktop shortcuts, or Windows Explorer.\n+\n+To make environment variables available to the Langflow Desktop app, you must set them at the **user or system level** using the System Properties interface or through the command line.",
        "comment_created_at": "2025-06-24T13:49:48+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nTo make environment variables available to the Langflow Desktop app, you must set them at the user or system level using the **System Properties** interface or the Terminal.\r\n```\r\n\r\nWindows Terminal app can do both cmd.exe and PowerShell.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2164093367",
    "pr_number": 8181,
    "pr_file": "docs/docs/Configuration/environment-variables.md",
    "created_at": "2025-06-24T13:58:06+00:00",
    "commented_code": "</TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.\n+```bash\n+launchctl load ~/Library/LaunchAgents/dev.langflow.env.plist\n+```\n+\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+On Windows, environment variables set in a terminal session, such as using `set` in `cmd` or `$env:VAR=...` in PowerShell, are **not available to GUI applications** launched from the Start Menu, desktop shortcuts, or Windows Explorer.\n+\n+To make environment variables available to the Langflow Desktop app, you must set them at the **user or system level** using the System Properties interface or through the command line.\n+\n+To set environment variables using the System Properties interface, do the following:\n+\n+1. Press <kbd>Win + R</kbd>, enter `SystemPropertiesAdvanced`, and then press <kbd>Enter</kbd>.\n+2. Click **Environment Variables**.\n+3. Under **User variables**, click **New**.\n+:::tip\n+To apply the setting to all users, select **System variables**.\n+:::\n+4. Enter the variable name, such as `LANGFLOW_CONFIG_DIR`, and its value, such as`C:\\Users\\your_user\\.langflow_config`.\n+5. Click **OK** to save.\n+\n+The next time you launch Langflow Desktop, it will have access to these variables.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2164093367",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8181,
        "pr_file": "docs/docs/Configuration/environment-variables.md",
        "discussion_id": "2164093367",
        "commented_code": "@@ -387,3 +387,97 @@ To run Langflow using the above VSCode `tasks.json` file, in the VSCode command\n \n </TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.\n+```bash\n+launchctl load ~/Library/LaunchAgents/dev.langflow.env.plist\n+```\n+\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+On Windows, environment variables set in a terminal session, such as using `set` in `cmd` or `$env:VAR=...` in PowerShell, are **not available to GUI applications** launched from the Start Menu, desktop shortcuts, or Windows Explorer.\n+\n+To make environment variables available to the Langflow Desktop app, you must set them at the **user or system level** using the System Properties interface or through the command line.\n+\n+To set environment variables using the System Properties interface, do the following:\n+\n+1. Press <kbd>Win + R</kbd>, enter `SystemPropertiesAdvanced`, and then press <kbd>Enter</kbd>.\n+2. Click **Environment Variables**.\n+3. Under **User variables**, click **New**.\n+:::tip\n+To apply the setting to all users, select **System variables**.\n+:::\n+4. Enter the variable name, such as `LANGFLOW_CONFIG_DIR`, and its value, such as`C:\\Users\\your_user\\.langflow_config`.\n+5. Click **OK** to save.\n+\n+The next time you launch Langflow Desktop, it will have access to these variables.",
        "comment_created_at": "2025-06-24T13:58:06+00:00",
        "comment_author": "aimurphy",
        "comment_body": "This should be a step?\r\n\r\n```\r\n7. Launch or restart Langflow Desktop to apply the environment variables.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2164103555",
    "pr_number": 8181,
    "pr_file": "docs/docs/Configuration/environment-variables.md",
    "created_at": "2025-06-24T14:01:18+00:00",
    "commented_code": "</TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.\n+```bash\n+launchctl load ~/Library/LaunchAgents/dev.langflow.env.plist\n+```\n+\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+On Windows, environment variables set in a terminal session, such as using `set` in `cmd` or `$env:VAR=...` in PowerShell, are **not available to GUI applications** launched from the Start Menu, desktop shortcuts, or Windows Explorer.\n+\n+To make environment variables available to the Langflow Desktop app, you must set them at the **user or system level** using the System Properties interface or through the command line.\n+\n+To set environment variables using the System Properties interface, do the following:\n+\n+1. Press <kbd>Win + R</kbd>, enter `SystemPropertiesAdvanced`, and then press <kbd>Enter</kbd>.\n+2. Click **Environment Variables**.\n+3. Under **User variables**, click **New**.\n+:::tip\n+To apply the setting to all users, select **System variables**.\n+:::\n+4. Enter the variable name, such as `LANGFLOW_CONFIG_DIR`, and its value, such as`C:\\Users\\your_user\\.langflow_config`.\n+5. Click **OK** to save.\n+\n+The next time you launch Langflow Desktop, it will have access to these variables.\n+\n+  </TabItem>\n+    <TabItem value=\"Powershell\" label=\"Powershell\">\n+\n+Define environment variables for Windows using PowerShell.\n+After setting the variables, you need to restart the Langflow Desktop application for the new values to take effect.\n+\n+```powershell\n+# For current user\n+[System.Environment]::SetEnvironmentVariable(\"LANGFLOW_CONFIG_DIR\", \"C:\\Users\\your_user\\.langflow_config\", \"User\")\n+\n+# For all users (requires Administrator privileges)\n+[System.Environment]::SetEnvironmentVariable(\"LANGFLOW_CONFIG_DIR\", \"C:\\Langflow\\Config\", \"Machine\")\n+```\n+\n+  </TabItem>\n+</Tabs>\n+\n+\n+\n+\n+\n+\n+\n+",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2164103555",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8181,
        "pr_file": "docs/docs/Configuration/environment-variables.md",
        "discussion_id": "2164103555",
        "commented_code": "@@ -387,3 +387,97 @@ To run Langflow using the above VSCode `tasks.json` file, in the VSCode command\n \n </TabItem>\n </Tabs>\n+\n+## Set environment variables for Langflow Desktop\n+\n+Environment variables set in your terminal are not automatically available to GUI-based applications like Langflow Desktop when launched through the Finder or the Start Menu.\n+\n+The configuration of environment variables differs between macOS and Windows installations.\n+\n+<Tabs groupId=\"\">\n+  <TabItem value=\"macOS\" label=\"macOS\" default>\n+\n+If you're using macOS and want to configure environment variables for the Langflow Desktop version, variables set in your terminal, such as`.zshrc` or `.bash_profile`, are **not automatically available to GUI applications** like Langflow Desktop when launched through Finder or the Dock.\n+\n+To make environment variables available to GUI apps on macOS, you need to use `launchctl` with a `plist` file.\n+\n+1. Create the `LaunchAgents` directory if it doesn't exist.\n+\n+```bash\n+mkdir -p ~/Library/LaunchAgents\n+```\n+\n+2. Within the `LaunchAgents` directory, create a file called `dev.langflow.env.plist` with the following content.\n+Adjust the variable names and values as needed.\n+This example sets the `LANGFLOW_CONFIG_DIR` environment variable for all GUI apps launched from Finder or Spotlight.\n+\n+```xml\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\"\n+\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+  <dict>\n+    <key>Label</key>\n+    <string>dev.langflow.env</string>\n+    <key>ProgramArguments</key>\n+    <array>\n+      <string>launchctl</string>\n+      <string>setenv</string>\n+      <string>LANGFLOW_CONFIG_DIR</string>\n+      <string>/Users/your_user/custom/config</string>\n+    </array>\n+    <key>RunAtLoad</key>\n+    <true/>\n+  </dict>\n+</plist>\n+```\n+\n+3. Load the file with `launchctl`.\n+```bash\n+launchctl load ~/Library/LaunchAgents/dev.langflow.env.plist\n+```\n+\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+On Windows, environment variables set in a terminal session, such as using `set` in `cmd` or `$env:VAR=...` in PowerShell, are **not available to GUI applications** launched from the Start Menu, desktop shortcuts, or Windows Explorer.\n+\n+To make environment variables available to the Langflow Desktop app, you must set them at the **user or system level** using the System Properties interface or through the command line.\n+\n+To set environment variables using the System Properties interface, do the following:\n+\n+1. Press <kbd>Win + R</kbd>, enter `SystemPropertiesAdvanced`, and then press <kbd>Enter</kbd>.\n+2. Click **Environment Variables**.\n+3. Under **User variables**, click **New**.\n+:::tip\n+To apply the setting to all users, select **System variables**.\n+:::\n+4. Enter the variable name, such as `LANGFLOW_CONFIG_DIR`, and its value, such as`C:\\Users\\your_user\\.langflow_config`.\n+5. Click **OK** to save.\n+\n+The next time you launch Langflow Desktop, it will have access to these variables.\n+\n+  </TabItem>\n+    <TabItem value=\"Powershell\" label=\"Powershell\">\n+\n+Define environment variables for Windows using PowerShell.\n+After setting the variables, you need to restart the Langflow Desktop application for the new values to take effect.\n+\n+```powershell\n+# For current user\n+[System.Environment]::SetEnvironmentVariable(\"LANGFLOW_CONFIG_DIR\", \"C:\\Users\\your_user\\.langflow_config\", \"User\")\n+\n+# For all users (requires Administrator privileges)\n+[System.Environment]::SetEnvironmentVariable(\"LANGFLOW_CONFIG_DIR\", \"C:\\Langflow\\Config\", \"Machine\")\n+```\n+\n+  </TabItem>\n+</Tabs>\n+\n+\n+\n+\n+\n+\n+\n+",
        "comment_created_at": "2025-06-24T14:01:18+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2180025142",
    "pr_number": 8813,
    "pr_file": "docs/docs/Tutorials/chat-with-files.md",
    "created_at": "2025-07-02T13:08:34+00:00",
    "commented_code": "+---\n+title: Create a chatbot with your own files\n+slug: /chat-with-files\n+---\n+\n+import Icon from \"@site/src/components/icon\";\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+\n+Create a chatbot application that chats with files loaded from your local machine.\n+\n+## Prerequisites\n+\n+- [A running Langflow instance](/get-started-installation)\n+- [An OpenAI API key](https://platform.openai.com/api-keys)\n+\n+## Create a file loader chat flow\n+\n+1. In Langflow, click **New Flow**, and then select the **Basic prompting** template.\n+2. Add your **OpenAI** API key to the **Language Model** component.\n+3. To confirm that the chatbot responds as expected, open the <Icon name=\"Play\" aria-hidden=\"true\" /> **Playground** and then ask a question.\n+The LLM should respond as the **Prompt** component specifies.\n+With the basic flow responding correctly, modify the **Prompt** component to accept additional inputs.\n+4. In the **Prompt** component, open the **Template** field, and replace the current prompt with the following text:\n+    ```text\n+    ChatInput:\n+    {chat-input}\n+    File:\n+    {file}\n+    ```\n+    The **Prompt** component adds ports to accept new inputs for each value with curly braces, in this case, a chat input and a file.\n+\n+    :::tip\n+    The port names are for illustrative purposes. You don't have to name them after the component they're connected to.\n+    :::\n+\n+5. Add a [File component](/components-data#file) to the flow, and connect the **Raw Content** output to the Prompt component's `file` input.\n+\n+    Your flow should look like this:\n+\n+    ![File loader chat flow](/img/tutorial-chat-file-loader.png)\n+\n+    The flow is complete.\n+    If you'd like, add files to the File component and chat with it within the Langflow IDE.\n+    In the next section, you will load files and chat with your flow from a Python application.\n+\n+## Send requests to your flow from a Python application\n+\n+With your flow running locally, send a request to `POST /run` to load a file to your flow, send a chat message, and get a result back.\n+\n+:::tip\n+To easily construct file upload requests in Python, JavaScript, and curl templates, check out the [Langflow File Upload Utility](https://langflow-file-upload-examples.onrender.com).\n+:::\n+\n+1. To construct the request, gather the following values from Langflow.\n+\n+    * `LANGFLOW_SERVER_ADDRESS`: The default value is `127.0.0.1:7860`.\n+    * `FLOW_ID`: The UUID of your flow, or the endpoint name you've chosen.\n+    * File Component name: To find the ID of your file component, in the File component, click **Controls**. For this example, the component name is `File-KZP68`.\n+    * Input value: This is the message you want to send to the Chat Input of your flow, such as `Evaluate this resume for a job opening in my Marketing department.`\n+    * File path: The path to the local file you want to load with your request. This example is loading `fake-resume.txt` from the same file location as the script.\n+    * Session ID: Optional. For more information, see [session ID](/session-id).\n+    * Langflow API key: Required. To create an API key, see [API keys](/configuration-api-keys).",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2180025142",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8813,
        "pr_file": "docs/docs/Tutorials/chat-with-files.md",
        "discussion_id": "2180025142",
        "commented_code": "@@ -0,0 +1,173 @@\n+---\n+title: Create a chatbot with your own files\n+slug: /chat-with-files\n+---\n+\n+import Icon from \"@site/src/components/icon\";\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+\n+Create a chatbot application that chats with files loaded from your local machine.\n+\n+## Prerequisites\n+\n+- [A running Langflow instance](/get-started-installation)\n+- [An OpenAI API key](https://platform.openai.com/api-keys)\n+\n+## Create a file loader chat flow\n+\n+1. In Langflow, click **New Flow**, and then select the **Basic prompting** template.\n+2. Add your **OpenAI** API key to the **Language Model** component.\n+3. To confirm that the chatbot responds as expected, open the <Icon name=\"Play\" aria-hidden=\"true\" /> **Playground** and then ask a question.\n+The LLM should respond as the **Prompt** component specifies.\n+With the basic flow responding correctly, modify the **Prompt** component to accept additional inputs.\n+4. In the **Prompt** component, open the **Template** field, and replace the current prompt with the following text:\n+    ```text\n+    ChatInput:\n+    {chat-input}\n+    File:\n+    {file}\n+    ```\n+    The **Prompt** component adds ports to accept new inputs for each value with curly braces, in this case, a chat input and a file.\n+\n+    :::tip\n+    The port names are for illustrative purposes. You don't have to name them after the component they're connected to.\n+    :::\n+\n+5. Add a [File component](/components-data#file) to the flow, and connect the **Raw Content** output to the Prompt component's `file` input.\n+\n+    Your flow should look like this:\n+\n+    ![File loader chat flow](/img/tutorial-chat-file-loader.png)\n+\n+    The flow is complete.\n+    If you'd like, add files to the File component and chat with it within the Langflow IDE.\n+    In the next section, you will load files and chat with your flow from a Python application.\n+\n+## Send requests to your flow from a Python application\n+\n+With your flow running locally, send a request to `POST /run` to load a file to your flow, send a chat message, and get a result back.\n+\n+:::tip\n+To easily construct file upload requests in Python, JavaScript, and curl templates, check out the [Langflow File Upload Utility](https://langflow-file-upload-examples.onrender.com).\n+:::\n+\n+1. To construct the request, gather the following values from Langflow.\n+\n+    * `LANGFLOW_SERVER_ADDRESS`: The default value is `127.0.0.1:7860`.\n+    * `FLOW_ID`: The UUID of your flow, or the endpoint name you've chosen.\n+    * File Component name: To find the ID of your file component, in the File component, click **Controls**. For this example, the component name is `File-KZP68`.\n+    * Input value: This is the message you want to send to the Chat Input of your flow, such as `Evaluate this resume for a job opening in my Marketing department.`\n+    * File path: The path to the local file you want to load with your request. This example is loading `fake-resume.txt` from the same file location as the script.\n+    * Session ID: Optional. For more information, see [session ID](/session-id).\n+    * Langflow API key: Required. To create an API key, see [API keys](/configuration-api-keys).",
        "comment_created_at": "2025-07-02T13:08:34+00:00",
        "comment_author": "aimurphy",
        "comment_body": "This is the only one you have marked required but most of the others aren't marked as either required or optional.",
        "pr_file_module": null
      },
      {
        "comment_id": "2180026155",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8813,
        "pr_file": "docs/docs/Tutorials/chat-with-files.md",
        "discussion_id": "2180025142",
        "commented_code": "@@ -0,0 +1,173 @@\n+---\n+title: Create a chatbot with your own files\n+slug: /chat-with-files\n+---\n+\n+import Icon from \"@site/src/components/icon\";\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+\n+Create a chatbot application that chats with files loaded from your local machine.\n+\n+## Prerequisites\n+\n+- [A running Langflow instance](/get-started-installation)\n+- [An OpenAI API key](https://platform.openai.com/api-keys)\n+\n+## Create a file loader chat flow\n+\n+1. In Langflow, click **New Flow**, and then select the **Basic prompting** template.\n+2. Add your **OpenAI** API key to the **Language Model** component.\n+3. To confirm that the chatbot responds as expected, open the <Icon name=\"Play\" aria-hidden=\"true\" /> **Playground** and then ask a question.\n+The LLM should respond as the **Prompt** component specifies.\n+With the basic flow responding correctly, modify the **Prompt** component to accept additional inputs.\n+4. In the **Prompt** component, open the **Template** field, and replace the current prompt with the following text:\n+    ```text\n+    ChatInput:\n+    {chat-input}\n+    File:\n+    {file}\n+    ```\n+    The **Prompt** component adds ports to accept new inputs for each value with curly braces, in this case, a chat input and a file.\n+\n+    :::tip\n+    The port names are for illustrative purposes. You don't have to name them after the component they're connected to.\n+    :::\n+\n+5. Add a [File component](/components-data#file) to the flow, and connect the **Raw Content** output to the Prompt component's `file` input.\n+\n+    Your flow should look like this:\n+\n+    ![File loader chat flow](/img/tutorial-chat-file-loader.png)\n+\n+    The flow is complete.\n+    If you'd like, add files to the File component and chat with it within the Langflow IDE.\n+    In the next section, you will load files and chat with your flow from a Python application.\n+\n+## Send requests to your flow from a Python application\n+\n+With your flow running locally, send a request to `POST /run` to load a file to your flow, send a chat message, and get a result back.\n+\n+:::tip\n+To easily construct file upload requests in Python, JavaScript, and curl templates, check out the [Langflow File Upload Utility](https://langflow-file-upload-examples.onrender.com).\n+:::\n+\n+1. To construct the request, gather the following values from Langflow.\n+\n+    * `LANGFLOW_SERVER_ADDRESS`: The default value is `127.0.0.1:7860`.\n+    * `FLOW_ID`: The UUID of your flow, or the endpoint name you've chosen.\n+    * File Component name: To find the ID of your file component, in the File component, click **Controls**. For this example, the component name is `File-KZP68`.\n+    * Input value: This is the message you want to send to the Chat Input of your flow, such as `Evaluate this resume for a job opening in my Marketing department.`\n+    * File path: The path to the local file you want to load with your request. This example is loading `fake-resume.txt` from the same file location as the script.\n+    * Session ID: Optional. For more information, see [session ID](/session-id).\n+    * Langflow API key: Required. To create an API key, see [API keys](/configuration-api-keys).",
        "comment_created_at": "2025-07-02T13:09:00+00:00",
        "comment_author": "aimurphy",
        "comment_body": "Langflow API key should probably be a prerequisite tbh.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2183965373",
    "pr_number": 8813,
    "pr_file": "docs/docs/Tutorials/chat-with-files.md",
    "created_at": "2025-07-04T00:14:38+00:00",
    "commented_code": "+---\n+title: Create a chatbot that can ingest files\n+slug: /chat-with-files\n+---\n+\n+import Icon from \"@site/src/components/icon\";\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+\n+This tutorial shows you how to build a chatbot that can read and answer questions about files you upload, such as meeting notes or job applications.\n+\n+For example, you could upload a contract and ask, \u201cWhat are the termination clauses in this agreement?\u201d Or upload a resume and ask, \u201cDoes this candidate have experience with marketing analytics?\u201d\n+\n+The main focus of this tutorial is to show you how to provide files as input to a Langflow flow, so your chatbot can use the content of those files in its responses.\n+\n+## Prerequisites\n+\n+- [A running Langflow instance](/get-started-installation)\n+- [A Langflow API key](/configuration-api-keys)\n+- [An OpenAI API key](https://platform.openai.com/api-keys)\n+\n+    This tutorial uses an OpenAI LLM. If you want to use a different provider, you need a valid credential for that provider.\n+\n+## Create a flow that accepts file input\n+\n+To ingest files, your flow must have a **File** component attached to a component that receives input, such as a **Prompt** or **Agent** component.\n+\n+The following steps modify the [**Basic prompting**](/basic-prompting) template to accept file input.\n+1. In Langflow, click **New Flow**, and then select the **Basic prompting** template.\n+2. In the **Language Model** component, enter your OpenAI API key.\n+\n+    If you want to use a different provider or model, edit the **Model Provider**, **Model Name**, and **API Key** fields accordingly.\n+3. To verify that your API key is valid, click <Icon name=\"Play\" aria-hidden=\"true\" /> **Playground**, and then ask the LLM a question.\n+The LLM should respond as the **Prompt** component's **Template** field specifies.\n+4. Modify the **Prompt** component to accept file input in addition to chat input.\n+To do this, edit the **Template** field, and then replace the default prompt with the following text:\n+    ```text\n+    ChatInput:\n+    {chat-input}\n+    File:\n+    {file}\n+    ```\n+    The **Prompt** component gets a new input port for each value in curly braces. At this point, your **Prompt** component should have **chat-input** and **file** input ports.\n+\n+    :::tip\n+    Within the curly braces, you can use any port name you like. For this tutorial, the ports are named after the components that connect to them.\n+    :::\n+\n+5. Add a [File component](/components-data#file) to the flow, and then connect the **Raw Content** output to the Prompt component's **file** input.\n+\n+    You can add files directly to the file component to pre-load input before running the flow, or you can load files at runtime. The next section of this tutorial covers runtime file uploads.\n+\n+    At this point your flow has five components. The Chat Input and File components are connected to the Prompt component's input ports. Then, the Prompt component's output port is connected to the Language Model component's input port. Finally, the Language Model component's output port is connected to the Chat Output component, which returns the final response to the user.\n+\n+    ![File loader chat flow](/img/tutorial-chat-file-loader.png)\n+\n+\n+## Send requests to your flow from a Python application\n+\n+This section of the tutorial demonstrates how you can send file input to a flow from an application.\n+\n+Send a `POST /run` request to your Langflow server with the file you want to upload and a text prompt.\n+The result includes the outcome of the flow run and the LLM's response.\n+\n+This example uses a local Langflow instance, and it asks the LLM to evaluate a sample resume.\n+If you don't have a resume on hand, use [fake-resume.txt](/files/fake-resume.txt).\n+\n+:::tip\n+For help with constructing file upload requests for Python, JavaScript, and curl, see the [Langflow File Upload Utility](https://langflow-file-upload-examples.onrender.com).\n+:::\n+\n+1. To construct the request, gather the following values from Langflow.\n+You can find the values for `LANGFLOW_SERVER_ADDRESS` and `FLOW_ID` in the auto-generated code snippets provided in the [API pane](/concepts-publish#api-pane).\n+\n+    * `LANGFLOW_SERVER_ADDRESS`: The default value is `127.0.0.1:7860`.\n+    * `FLOW_ID`: The UUID of your flow, or the endpoint name you've chosen in the **Input schema** pane.\n+    * File Component name: To find the ID of your file component, in the File component, click **Controls**. For this example, the component name is `File-KZP68`.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2183965373",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8813,
        "pr_file": "docs/docs/Tutorials/chat-with-files.md",
        "discussion_id": "2183965373",
        "commented_code": "@@ -0,0 +1,208 @@\n+---\n+title: Create a chatbot that can ingest files\n+slug: /chat-with-files\n+---\n+\n+import Icon from \"@site/src/components/icon\";\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+\n+This tutorial shows you how to build a chatbot that can read and answer questions about files you upload, such as meeting notes or job applications.\n+\n+For example, you could upload a contract and ask, \u201cWhat are the termination clauses in this agreement?\u201d Or upload a resume and ask, \u201cDoes this candidate have experience with marketing analytics?\u201d\n+\n+The main focus of this tutorial is to show you how to provide files as input to a Langflow flow, so your chatbot can use the content of those files in its responses.\n+\n+## Prerequisites\n+\n+- [A running Langflow instance](/get-started-installation)\n+- [A Langflow API key](/configuration-api-keys)\n+- [An OpenAI API key](https://platform.openai.com/api-keys)\n+\n+    This tutorial uses an OpenAI LLM. If you want to use a different provider, you need a valid credential for that provider.\n+\n+## Create a flow that accepts file input\n+\n+To ingest files, your flow must have a **File** component attached to a component that receives input, such as a **Prompt** or **Agent** component.\n+\n+The following steps modify the [**Basic prompting**](/basic-prompting) template to accept file input.\n+1. In Langflow, click **New Flow**, and then select the **Basic prompting** template.\n+2. In the **Language Model** component, enter your OpenAI API key.\n+\n+    If you want to use a different provider or model, edit the **Model Provider**, **Model Name**, and **API Key** fields accordingly.\n+3. To verify that your API key is valid, click <Icon name=\"Play\" aria-hidden=\"true\" /> **Playground**, and then ask the LLM a question.\n+The LLM should respond as the **Prompt** component's **Template** field specifies.\n+4. Modify the **Prompt** component to accept file input in addition to chat input.\n+To do this, edit the **Template** field, and then replace the default prompt with the following text:\n+    ```text\n+    ChatInput:\n+    {chat-input}\n+    File:\n+    {file}\n+    ```\n+    The **Prompt** component gets a new input port for each value in curly braces. At this point, your **Prompt** component should have **chat-input** and **file** input ports.\n+\n+    :::tip\n+    Within the curly braces, you can use any port name you like. For this tutorial, the ports are named after the components that connect to them.\n+    :::\n+\n+5. Add a [File component](/components-data#file) to the flow, and then connect the **Raw Content** output to the Prompt component's **file** input.\n+\n+    You can add files directly to the file component to pre-load input before running the flow, or you can load files at runtime. The next section of this tutorial covers runtime file uploads.\n+\n+    At this point your flow has five components. The Chat Input and File components are connected to the Prompt component's input ports. Then, the Prompt component's output port is connected to the Language Model component's input port. Finally, the Language Model component's output port is connected to the Chat Output component, which returns the final response to the user.\n+\n+    ![File loader chat flow](/img/tutorial-chat-file-loader.png)\n+\n+\n+## Send requests to your flow from a Python application\n+\n+This section of the tutorial demonstrates how you can send file input to a flow from an application.\n+\n+Send a `POST /run` request to your Langflow server with the file you want to upload and a text prompt.\n+The result includes the outcome of the flow run and the LLM's response.\n+\n+This example uses a local Langflow instance, and it asks the LLM to evaluate a sample resume.\n+If you don't have a resume on hand, use [fake-resume.txt](/files/fake-resume.txt).\n+\n+:::tip\n+For help with constructing file upload requests for Python, JavaScript, and curl, see the [Langflow File Upload Utility](https://langflow-file-upload-examples.onrender.com).\n+:::\n+\n+1. To construct the request, gather the following values from Langflow.\n+You can find the values for `LANGFLOW_SERVER_ADDRESS` and `FLOW_ID` in the auto-generated code snippets provided in the [API pane](/concepts-publish#api-pane).\n+\n+    * `LANGFLOW_SERVER_ADDRESS`: The default value is `127.0.0.1:7860`.\n+    * `FLOW_ID`: The UUID of your flow, or the endpoint name you've chosen in the **Input schema** pane.\n+    * File Component name: To find the ID of your file component, in the File component, click **Controls**. For this example, the component name is `File-KZP68`.",
        "comment_created_at": "2025-07-04T00:14:38+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n    * `FILE_COMPONENT_ID`: The UUID of the File component in your flow, such as `File-KZP68`. To find the component ID, open your flow in Langflow, click the File component, and then click **Controls**.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2193469961",
    "pr_number": 8939,
    "pr_file": "docs/docs/Integrations/Docling/integrations-docling.md",
    "created_at": "2025-07-08T21:25:30+00:00",
    "commented_code": "+---\n+title: Integrate Docling with Langflow\n+slug: /integrations-docling\n+---\n+\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+import Icon from \"@site/src/components/icon\";\n+\n+Langflow integrates with [Docling](https://docling-project.github.io/docling/) through a suite of components for parsing documents.\n+\n+## Prerequisites\n+\n+* Install the Docling extra in Langflow OSS with `uv pip install langflow[docling]` or `uv pip install docling`.\n+\n+    To add a dependency to Langflow Desktop, add an entry to Docling to the application's `requirements.txt` file.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2193469961",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8939,
        "pr_file": "docs/docs/Integrations/Docling/integrations-docling.md",
        "discussion_id": "2193469961",
        "commented_code": "@@ -0,0 +1,148 @@\n+---\n+title: Integrate Docling with Langflow\n+slug: /integrations-docling\n+---\n+\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+import Icon from \"@site/src/components/icon\";\n+\n+Langflow integrates with [Docling](https://docling-project.github.io/docling/) through a suite of components for parsing documents.\n+\n+## Prerequisites\n+\n+* Install the Docling extra in Langflow OSS with `uv pip install langflow[docling]` or `uv pip install docling`.\n+\n+    To add a dependency to Langflow Desktop, add an entry to Docling to the application's `requirements.txt` file.",
        "comment_created_at": "2025-07-08T21:25:30+00:00",
        "comment_author": "mendonk",
        "comment_body": "```suggestion\r\n    To add a dependency to Langflow Desktop, add an entry for Docling to the application's `requirements.txt` file.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2193651714",
    "pr_number": 8942,
    "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
    "created_at": "2025-07-09T00:09:02+00:00",
    "commented_code": "uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2193651714",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8942,
        "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
        "discussion_id": "2193651714",
        "commented_code": "@@ -23,7 +23,22 @@ To install multiple extras, use commas to separate each dependency group:\n uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.",
        "comment_created_at": "2025-07-09T00:09:02+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nTo add dependencies to Langflow Desktop, add an entry for the package to the application's `requirements.txt` file:\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2193653214",
    "pr_number": 8942,
    "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
    "created_at": "2025-07-09T00:10:29+00:00",
    "commented_code": "uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.\n+\n+    * On macOS, the file is located at `/Users/USER/.langflow/data/requirements.txt`.\n+    * On Windows, the file is located at `C:\\Users\\USER\\AppData\\Roaming\\com.Langflow\\data\\requirements.txt`.\n+\n+Add the dependency and version to `requirements.txt` in the following format:\n+\n+    ```\n+    docling==2.40.0\n+    ```",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2193653214",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8942,
        "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
        "discussion_id": "2193653214",
        "commented_code": "@@ -23,7 +23,22 @@ To install multiple extras, use commas to separate each dependency group:\n uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.\n+\n+    * On macOS, the file is located at `/Users/USER/.langflow/data/requirements.txt`.\n+    * On Windows, the file is located at `C:\\Users\\USER\\AppData\\Roaming\\com.Langflow\\data\\requirements.txt`.\n+\n+Add the dependency and version to `requirements.txt` in the following format:\n+\n+    ```\n+    docling==2.40.0\n+    ```",
        "comment_created_at": "2025-07-09T00:10:29+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nAdd the dependency and version to `requirements.txt` on separate lines in the format `PACKAGE==VERSION`, such as `docling==2.40.0`.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2193654524",
    "pr_number": 8942,
    "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
    "created_at": "2025-07-09T00:12:07+00:00",
    "commented_code": "uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.\n+\n+    * On macOS, the file is located at `/Users/USER/.langflow/data/requirements.txt`.\n+    * On Windows, the file is located at `C:\\Users\\USER\\AppData\\Roaming\\com.Langflow\\data\\requirements.txt`.\n+\n+Add the dependency and version to `requirements.txt` in the following format:\n+\n+    ```\n+    docling==2.40.0\n+    ```\n+\n+Restart Langflow desktop to install the dependency.\n+",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2193654524",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8942,
        "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
        "discussion_id": "2193654524",
        "commented_code": "@@ -23,7 +23,22 @@ To install multiple extras, use commas to separate each dependency group:\n uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.\n+\n+    * On macOS, the file is located at `/Users/USER/.langflow/data/requirements.txt`.\n+    * On Windows, the file is located at `C:\\Users\\USER\\AppData\\Roaming\\com.Langflow\\data\\requirements.txt`.\n+\n+Add the dependency and version to `requirements.txt` in the following format:\n+\n+    ```\n+    docling==2.40.0\n+    ```\n+\n+Restart Langflow desktop to install the dependency.\n+",
        "comment_created_at": "2025-07-09T00:12:07+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n\r\nIf you need to change or uninstall custom dependencies. edit the `requirements.txt` file, and then restart Langflow Desktop.\r\n\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2193657119",
    "pr_number": 8942,
    "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
    "created_at": "2025-07-09T00:15:32+00:00",
    "commented_code": "uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.\n+\n+    * On macOS, the file is located at `/Users/USER/.langflow/data/requirements.txt`.\n+    * On Windows, the file is located at `C:\\Users\\USER\\AppData\\Roaming\\com.Langflow\\data\\requirements.txt`.\n+\n+Add the dependency and version to `requirements.txt` in the following format:\n+\n+    ```\n+    docling==2.40.0\n+    ```\n+\n+Restart Langflow desktop to install the dependency.\n+\n+## Install custom dependencies in Langflow OSS",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2193657119",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8942,
        "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
        "discussion_id": "2193657119",
        "commented_code": "@@ -23,7 +23,22 @@ To install multiple extras, use commas to separate each dependency group:\n uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.\n+\n+    * On macOS, the file is located at `/Users/USER/.langflow/data/requirements.txt`.\n+    * On Windows, the file is located at `C:\\Users\\USER\\AppData\\Roaming\\com.Langflow\\data\\requirements.txt`.\n+\n+Add the dependency and version to `requirements.txt` in the following format:\n+\n+    ```\n+    docling==2.40.0\n+    ```\n+\n+Restart Langflow desktop to install the dependency.\n+\n+## Install custom dependencies in Langflow OSS",
        "comment_created_at": "2025-07-09T00:15:32+00:00",
        "comment_author": "aimurphy",
        "comment_body": "You might want to compare this section with `## Install optional dependency groups` on line 8. The two sections seem to be related or redundant. At minimum, they both use Langflow OSS.",
        "pr_file_module": null
      },
      {
        "comment_id": "2194760414",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8942,
        "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
        "discussion_id": "2193657119",
        "commented_code": "@@ -23,7 +23,22 @@ To install multiple extras, use commas to separate each dependency group:\n uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.\n+\n+    * On macOS, the file is located at `/Users/USER/.langflow/data/requirements.txt`.\n+    * On Windows, the file is located at `C:\\Users\\USER\\AppData\\Roaming\\com.Langflow\\data\\requirements.txt`.\n+\n+Add the dependency and version to `requirements.txt` in the following format:\n+\n+    ```\n+    docling==2.40.0\n+    ```\n+\n+Restart Langflow desktop to install the dependency.\n+\n+## Install custom dependencies in Langflow OSS",
        "comment_created_at": "2025-07-09T11:20:52+00:00",
        "comment_author": "mendonk",
        "comment_body": "Yes - that section is for dependency extras that we include with Langflow, but it could be packaged in with this one.",
        "pr_file_module": null
      },
      {
        "comment_id": "2194795688",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8942,
        "pr_file": "docs/docs/Develop/install-custom-dependencies.md",
        "discussion_id": "2193657119",
        "commented_code": "@@ -23,7 +23,22 @@ To install multiple extras, use commas to separate each dependency group:\n uv pip install \"langflow[deploy,local,postgresql]\"\n ```\n \n-## Install custom dependencies\n+## Install custom dependencies in Langflow Desktop {#langflow-desktop}\n+\n+To add dependencies to **Langflow Desktop**, add an entry for the package to the application's `requirements.txt` file.\n+\n+    * On macOS, the file is located at `/Users/USER/.langflow/data/requirements.txt`.\n+    * On Windows, the file is located at `C:\\Users\\USER\\AppData\\Roaming\\com.Langflow\\data\\requirements.txt`.\n+\n+Add the dependency and version to `requirements.txt` in the following format:\n+\n+    ```\n+    docling==2.40.0\n+    ```\n+\n+Restart Langflow desktop to install the dependency.\n+\n+## Install custom dependencies in Langflow OSS",
        "comment_created_at": "2025-07-09T11:39:25+00:00",
        "comment_author": "mendonk",
        "comment_body": "Combined the OSS parts into one section, and Desktop into another",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2190377249",
    "pr_number": 8903,
    "pr_file": "docs/docs/Support/troubleshooting.md",
    "created_at": "2025-07-07T15:14:50+00:00",
    "commented_code": "- **WSL2 on Windows**: `home/<username>/.cache/langflow/`\n - **macOS**: `/Users/<username>/Library/Caches/langflow/`\n \n+## Langflow uninstall issues\n+\n+The following issues can occur when uninstalling Langflow.\n+\n+### Uninstalling Langflow Desktop on macOS\n+\n+On macOS, uninstalling Langflow Desktop deletes the `.app` file but does **not** delete files generated during usage, which remain stored in the `/Users/USERNAME/.langflow` directory. These files include data and settings from the previous installation, so when Langflow Desktop is reinstalled, it will start with the existing data.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2190377249",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8903,
        "pr_file": "docs/docs/Support/troubleshooting.md",
        "discussion_id": "2190377249",
        "commented_code": "@@ -135,6 +135,20 @@ The cache folder location depends on your OS:\n - **WSL2 on Windows**: `home/<username>/.cache/langflow/`\n - **macOS**: `/Users/<username>/Library/Caches/langflow/`\n \n+## Langflow uninstall issues\n+\n+The following issues can occur when uninstalling Langflow.\n+\n+### Uninstalling Langflow Desktop on macOS\n+\n+On macOS, uninstalling Langflow Desktop deletes the `.app` file but does **not** delete files generated during usage, which remain stored in the `/Users/USERNAME/.langflow` directory. These files include data and settings from the previous installation, so when Langflow Desktop is reinstalled, it will start with the existing data.",
        "comment_created_at": "2025-07-07T15:14:50+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nOn macOS, uninstalling Langflow Desktop deletes the `.app` file but doesn't delete files in `~/.langflow`, which includes files generated during usage like cache and settings.\r\n\r\nIf you reinstall Langflow Desktop, it starts with the existing data from the previous installation.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2190379362",
    "pr_number": 8903,
    "pr_file": "docs/docs/Support/troubleshooting.md",
    "created_at": "2025-07-07T15:15:52+00:00",
    "commented_code": "- **WSL2 on Windows**: `home/<username>/.cache/langflow/`\n - **macOS**: `/Users/<username>/Library/Caches/langflow/`\n \n+## Langflow uninstall issues\n+\n+The following issues can occur when uninstalling Langflow.\n+\n+### Uninstalling Langflow Desktop on macOS\n+\n+On macOS, uninstalling Langflow Desktop deletes the `.app` file but does **not** delete files generated during usage, which remain stored in the `/Users/USERNAME/.langflow` directory. These files include data and settings from the previous installation, so when Langflow Desktop is reinstalled, it will start with the existing data.\n+\n+To fully remove Langflow and start fresh with a future installation, delete the `/Users/USERNAME/.langflow` folder with the following command:",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2190379362",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8903,
        "pr_file": "docs/docs/Support/troubleshooting.md",
        "discussion_id": "2190379362",
        "commented_code": "@@ -135,6 +135,20 @@ The cache folder location depends on your OS:\n - **WSL2 on Windows**: `home/<username>/.cache/langflow/`\n - **macOS**: `/Users/<username>/Library/Caches/langflow/`\n \n+## Langflow uninstall issues\n+\n+The following issues can occur when uninstalling Langflow.\n+\n+### Uninstalling Langflow Desktop on macOS\n+\n+On macOS, uninstalling Langflow Desktop deletes the `.app` file but does **not** delete files generated during usage, which remain stored in the `/Users/USERNAME/.langflow` directory. These files include data and settings from the previous installation, so when Langflow Desktop is reinstalled, it will start with the existing data.\n+\n+To fully remove Langflow and start fresh with a future installation, delete the `/Users/USERNAME/.langflow` folder with the following command:",
        "comment_created_at": "2025-07-07T15:15:52+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nTo fully remove a Langflow Desktop macOS installation, you must also delete `~/.langflow`:\r\n```",
        "pr_file_module": null
      }
    ]
  }
]