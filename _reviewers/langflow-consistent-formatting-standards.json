[
  {
    "discussion_id": "2190359751",
    "pr_number": 8903,
    "pr_file": "docs/docs/Contributing/contributing-how-to-contribute.md",
    "created_at": "2025-07-07T15:06:40+00:00",
    "commented_code": "### Run Langflow from source\n \n-If you're not developing, but want to run Langflow from source after cloning the repo, run:\n+If you're not developing, but want to run Langflow from source after cloning the repo, run the following commands.\n \n-```bash\n-make run_cli\n-```\n+<Tabs groupId=\"os\">\n+  <TabItem value=\"macOS/Linux\" label=\"macOS/Linux\" default>\n \n-This command:\n-- Installs frontend and backend dependencies\n-- Builds the frontend static files\n-- Starts the application with default settings\n+1. To run Langflow from source, run the following command:\n+    ```bash\n+    make run_cli\n+    ```\n \n-The `make run_cli` command allows you to configure the application such as logging level, host, port, and environment variables.\n+    This command:\n+    - Installs frontend and backend dependencies\n+    - Builds the frontend static files\n+    - Starts the application with default settings\n \n-For example, this command starts Langflow with custom settings for the logging level, host binding, and port number, and specifies a custom `.env` file.\n+    The Langflow frontend is available at `http://localhost:7860/`.\n \n-```bash\n-make run_cli log_level=info host=localhost port=8000 env=.env.custom\n-```\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+To run Langflow from source on Windows, you can use the Langflow project's included scripts, or run the commands in the terminal.\n+\n+1. To run Langflow with the included scripts, navigate to the `scripts/windows` directory.\n+Two scripts are available to install and start Langflow.\n \n-The `make run_cli` command accepts the following parameters:\n+2. Run Langflow with one of the scripts.\n \n-| Parameter | Default | Description |\n-|-----------|---------|-------------|\n-| `log_level` | `debug` | Set the logging level. Options: `debug`, `info`, `warning`, `error`, `critical` |\n-| `host` | `0.0.0.0` | The host address to bind the server to. Use `localhost` or `127.0.0.1` for local-only access. |\n-| `port` | `7860` | The port number to run the server on. |\n-| `env` | `.env` | Path to the environment file containing configuration variables. |\n-| `open_browser` | `true` | Whether to automatically open the browser when starting. Set to `false` to disable. |\n+    * To install and start Langflow with a Windows Batch file, double-click `build_and_run.bat`.\n+    * To install and start Langflow with the Powershell script, run:\n+\n+        ```ps\n+        .\\build_and_run.ps1\n+        ```\n+\n+**Alternatively**, to run Langflow from source with the Windows Command Line or Powershell, do the following.\n+\n+1. Run the following commands to build the Langflow frontend.\n+    ```\n+    cd src/frontend\n+    npm install\n+    npm run build\n+    npm run start\n+    ```\n+\n+2. Copy the contents of the built `src/frontend/build` directory to `src/backend/base/langflow/frontend`.\n+\n+3. To start Langflow, run the following command.\n+    ```\n+    uv run langflow run\n+    ```\n+\n+    The frontend is served at http://localhost:7860.\n+\n+  </TabItem>\n+</Tabs>\n \n ### Set up your Langflow development environment\n \n-1. To set up the Langflow development environment, run the following command:\n+<Tabs groupId=\"os\">\n+  <TabItem value=\"macOS/Linux\" label=\"macOS/Linux\" default>\n \n-```bash\n-make init\n-```\n+1. To set up the Langflow development environment, run the following command:\n+    ```bash\n+    make init\n+    ```\n \n-This command sets up the development environment by:\n-- Checking for uv and npm.\n-- Installing backend and frontend dependencies.\n-- Installing pre-commit hooks.\n+    This command sets up the development environment by:\n+    - Checking for uv and npm.\n+    - Installing backend and frontend dependencies.\n+    - Installing pre-commit hooks.\n \n 2. Run the backend and frontend in separate terminals for development:\n \n-```bash\n-# Run backend in development mode (includes hot reload)\n-make backend\n+    ```bash\n+    # Run backend in development mode (includes hot reload)\n+    make backend\n \n-# In another terminal, run frontend in development mode (includes hot reload)\n-make frontend\n-```\n+    # In another terminal, run frontend in development mode (includes hot reload)\n+    make frontend\n+    ```\n+\n+    The frontend is served at `http://localhost:7860`.\n \n-The `make backend` and `make frontend` commands automatically install dependencies, so you don't need to run install commands separately.\n+    The `make backend` and `make frontend` commands automatically install dependencies, so you don't need to run install commands separately.\n \n 3. (Optional) Install pre-commit hooks to help keep your changes clean and well-formatted. `make init` installs pre-commit hooks automatically.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2190359751",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8903,
        "pr_file": "docs/docs/Contributing/contributing-how-to-contribute.md",
        "discussion_id": "2190359751",
        "commented_code": "@@ -32,74 +40,131 @@ Replace the following:\n \n ### Run Langflow from source\n \n-If you're not developing, but want to run Langflow from source after cloning the repo, run:\n+If you're not developing, but want to run Langflow from source after cloning the repo, run the following commands.\n \n-```bash\n-make run_cli\n-```\n+<Tabs groupId=\"os\">\n+  <TabItem value=\"macOS/Linux\" label=\"macOS/Linux\" default>\n \n-This command:\n-- Installs frontend and backend dependencies\n-- Builds the frontend static files\n-- Starts the application with default settings\n+1. To run Langflow from source, run the following command:\n+    ```bash\n+    make run_cli\n+    ```\n \n-The `make run_cli` command allows you to configure the application such as logging level, host, port, and environment variables.\n+    This command:\n+    - Installs frontend and backend dependencies\n+    - Builds the frontend static files\n+    - Starts the application with default settings\n \n-For example, this command starts Langflow with custom settings for the logging level, host binding, and port number, and specifies a custom `.env` file.\n+    The Langflow frontend is available at `http://localhost:7860/`.\n \n-```bash\n-make run_cli log_level=info host=localhost port=8000 env=.env.custom\n-```\n+  </TabItem>\n+  <TabItem value=\"Windows\" label=\"Windows\">\n+\n+To run Langflow from source on Windows, you can use the Langflow project's included scripts, or run the commands in the terminal.\n+\n+1. To run Langflow with the included scripts, navigate to the `scripts/windows` directory.\n+Two scripts are available to install and start Langflow.\n \n-The `make run_cli` command accepts the following parameters:\n+2. Run Langflow with one of the scripts.\n \n-| Parameter | Default | Description |\n-|-----------|---------|-------------|\n-| `log_level` | `debug` | Set the logging level. Options: `debug`, `info`, `warning`, `error`, `critical` |\n-| `host` | `0.0.0.0` | The host address to bind the server to. Use `localhost` or `127.0.0.1` for local-only access. |\n-| `port` | `7860` | The port number to run the server on. |\n-| `env` | `.env` | Path to the environment file containing configuration variables. |\n-| `open_browser` | `true` | Whether to automatically open the browser when starting. Set to `false` to disable. |\n+    * To install and start Langflow with a Windows Batch file, double-click `build_and_run.bat`.\n+    * To install and start Langflow with the Powershell script, run:\n+\n+        ```ps\n+        .\\build_and_run.ps1\n+        ```\n+\n+**Alternatively**, to run Langflow from source with the Windows Command Line or Powershell, do the following.\n+\n+1. Run the following commands to build the Langflow frontend.\n+    ```\n+    cd src/frontend\n+    npm install\n+    npm run build\n+    npm run start\n+    ```\n+\n+2. Copy the contents of the built `src/frontend/build` directory to `src/backend/base/langflow/frontend`.\n+\n+3. To start Langflow, run the following command.\n+    ```\n+    uv run langflow run\n+    ```\n+\n+    The frontend is served at http://localhost:7860.\n+\n+  </TabItem>\n+</Tabs>\n \n ### Set up your Langflow development environment\n \n-1. To set up the Langflow development environment, run the following command:\n+<Tabs groupId=\"os\">\n+  <TabItem value=\"macOS/Linux\" label=\"macOS/Linux\" default>\n \n-```bash\n-make init\n-```\n+1. To set up the Langflow development environment, run the following command:\n+    ```bash\n+    make init\n+    ```\n \n-This command sets up the development environment by:\n-- Checking for uv and npm.\n-- Installing backend and frontend dependencies.\n-- Installing pre-commit hooks.\n+    This command sets up the development environment by:\n+    - Checking for uv and npm.\n+    - Installing backend and frontend dependencies.\n+    - Installing pre-commit hooks.\n \n 2. Run the backend and frontend in separate terminals for development:\n \n-```bash\n-# Run backend in development mode (includes hot reload)\n-make backend\n+    ```bash\n+    # Run backend in development mode (includes hot reload)\n+    make backend\n \n-# In another terminal, run frontend in development mode (includes hot reload)\n-make frontend\n-```\n+    # In another terminal, run frontend in development mode (includes hot reload)\n+    make frontend\n+    ```\n+\n+    The frontend is served at `http://localhost:7860`.\n \n-The `make backend` and `make frontend` commands automatically install dependencies, so you don't need to run install commands separately.\n+    The `make backend` and `make frontend` commands automatically install dependencies, so you don't need to run install commands separately.\n \n 3. (Optional) Install pre-commit hooks to help keep your changes clean and well-formatted. `make init` installs pre-commit hooks automatically.",
        "comment_created_at": "2025-07-07T15:06:40+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n3. Optional: Install pre-commit hooks to help keep your changes clean and well-formatted. `make init` installs pre-commit hooks automatically.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2175414603",
    "pr_number": 8721,
    "pr_file": "docs/docs/Components/components-data.md",
    "created_at": "2025-06-30T15:55:21+00:00",
    "commented_code": "```bash\n curl -X POST \\\n   \"http://localhost:7860/api/v1/webhook/**YOUR_FLOW_ID**\" \\\n-  -H 'Content-Type: application/json'\\\n+  -H 'Content-Type: application/json' \\\n+  -H 'x-api-key: LANGFLOW_API_KEY' \\",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2175414603",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8721,
        "pr_file": "docs/docs/Components/components-data.md",
        "discussion_id": "2175414603",
        "commented_code": "@@ -269,7 +269,8 @@ When a **Webhook** component is added to the workspace, a new **Webhook cURL** t\n ```bash\n curl -X POST \\\n   \"http://localhost:7860/api/v1/webhook/**YOUR_FLOW_ID**\" \\\n-  -H 'Content-Type: application/json'\\\n+  -H 'Content-Type: application/json' \\\n+  -H 'x-api-key: LANGFLOW_API_KEY' \\",
        "comment_created_at": "2025-06-30T15:55:21+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n  -H \"Content-Type: application/json\" \\\r\n  -H \"x-api-key: $LANGFLOW_API_KEY\" \\\r\n```\r\n\r\nWe need to standardize on \" or ' for the headers for all examples",
        "pr_file_module": null
      },
      {
        "comment_id": "2177644477",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8721,
        "pr_file": "docs/docs/Components/components-data.md",
        "discussion_id": "2175414603",
        "commented_code": "@@ -269,7 +269,8 @@ When a **Webhook** component is added to the workspace, a new **Webhook cURL** t\n ```bash\n curl -X POST \\\n   \"http://localhost:7860/api/v1/webhook/**YOUR_FLOW_ID**\" \\\n-  -H 'Content-Type: application/json'\\\n+  -H 'Content-Type: application/json' \\\n+  -H 'x-api-key: LANGFLOW_API_KEY' \\",
        "comment_created_at": "2025-07-01T13:43:10+00:00",
        "comment_author": "mendonk",
        "comment_body": "Single quotes around `$LANGFLOW_API_KEY` won't expand into a variable when the command is run, it will just print $LANGFLOW_API_KEY, so in this case we want to use \"\"",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2175347728",
    "pr_number": 8369,
    "pr_file": "CONTRIBUTING.md",
    "created_at": "2025-06-30T15:24:07+00:00",
    "commented_code": "# Contributing to Langflow\n \n-This guide is intended to help you get started contributing to Langflow.\n-As an open-source project in a rapidly developing field, we are extremely open\n-to contributions, whether it be in the form of a new feature, improved infra, or better documentation.\n+This guide is intended to help you start contributing to Langflow.\n+As an open-source project in a rapidly developing field, Langflow welcomes contributions, whether it be in the form of a new feature, improved infrastructure, or better documentation.\n \n-To contribute to this project, please follow the [fork and pull request](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) workflow.\n+To contribute code or documentation to this project, follow the [fork and pull request](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) workflow.\n \n-## Reporting bugs or suggesting improvements\n+## Install Langflow from source\n \n-Our [GitHub issues](https://github.com/langflow-ai/langflow/issues) page is kept up to date\n-with bugs, improvements, and feature requests. There is a taxonomy of labels to help\n-with sorting and discovery of issues of interest. [See this page](https://github.com/langflow-ai/langflow/labels) for an overview of\n-the system we use to tag our issues and pull requests.\n+Install Langflow from source by forking the repository, and then set up your development environment using Make.\n \n-If you're looking for help with your code, consider posting a question on the\n-[GitHub Discussions board](https://github.com/langflow-ai/langflow/discussions). Please\n-understand that we won't be able to provide individual support via email. We\n-also believe that help is much more valuable if it's **shared publicly**,\n-so that more people can benefit from it.\n+### Prerequisites\n \n-- **Describing your issue:** Try to provide as many details as possible. What\n-  exactly goes wrong? _How_ is it failing? Is there an error?\n-  \"XY doesn't work\" usually isn't that helpful for tracking down problems. Always\n-  remember to include the code you ran and if possible, extract only the relevant\n-  parts and don't just dump your entire script. This will make it easier for us to\n-  reproduce the error.\n+* [uv(>=0.4)](https://docs.astral.sh/uv/getting-started/installation/)\n+* [Node.js](https://nodejs.org/en/download/package-manager)\n+* [Make](https://www.gnu.org/software/make/#documentation)\n \n-- **Sharing long blocks of code or logs:** If you need to include long code,\n-  logs or tracebacks, you can wrap them in `<details>` and `</details>`. This\n-  [collapses the content](https://developer.mozilla.org/en/docs/Web/HTML/Element/details)\n-  so it only becomes visible on click, making the issue easier to read and follow.\n+### Clone the Langflow repository\n \n-## Contributing code and documentation\n+1. Navigate to the [Langflow GitHub repository](https://github.com/langflow-ai/langflow), and then click **Fork**.\n \n-You can develop Langflow locally and contribute to the Project!\n+2. Add the new remote to your local repository on your local machine:\n+Replace `YOUR_FORK_NAME` with a name for your fork.\n+Replace `YOUR_GIT_USERNAME` with your Git username.\n+```bash\n+git remote add YOUR_FORK_NAME https://github.com/YOUR_GIT_USERNAME/langflow.git\n+```\n \n-See [DEVELOPMENT.md](DEVELOPMENT.md) for instructions on setting up and using a development environment.\n+### Set up your Langflow development environment\n \n-## Opening a pull request\n+1. Change your directory to the root of the local Langflow repository:\n+```bash\n+cd langflow\n+```\n \n-Once you wrote and manually tested your change, you can start sending the patch to the main repository.\n+2. To set up the Langflow development environment, run the following command:\n+```bash\n+make init\n+```\n \n-- Open a new GitHub pull request with the patch against the `main` branch.\n-- Ensure the PR title follows semantic commits conventions.\n-  - For example, `feat: add new feature`, `fix: correct issue with X`.\n-- Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n+This command sets up the development environment by:\n+- Checking for uv and npm.\n+- Installing backend and frontend dependencies.\n+- Installing pre-commit hooks.\n+\n+There are two different workflows depending on whether you're a developer or just running Langflow from source.\n+\n+Developers typically run the backend and frontend separately for development:\n+\n+```bash\n+# Run backend in development mode (includes hot reload)\n+make backend\n+\n+# In another terminal, run frontend in development mode (includes hot reload)\n+make frontend\n+```\n+\n+The `make backend` and `make frontend` commands automatically install dependencies, so you don't need to run install commands separately.\n+\n+If you're not developing, but want to run Langflow from source, run:\n+\n+```bash\n+make run_cli\n+```\n+\n+This command:\n+- Installs frontend and backend dependencies\n+- Builds the frontend static files\n+- Starts the application with default settings\n+\n+After running `make init` once to set up your environment, you can use `make run_cli` for subsequent runs. The `make run_cli` command allows you to configure the application such as logging level, host, port, and environment variables.\n+\n+For example, this command starts Langflow with custom settings for the logging level, host binding, and port number, and specifies a custom `.env` file.\n+\n+```bash\n+make run_cli log_level=info host=localhost port=8000 env=.env.custom\n+```\n+\n+The `make run_cli` command accepts the following parameters:\n+\n+| Parameter | Default | Description |\n+|-----------|---------|-------------|\n+| `log_level` | `debug` | Set the logging level. Options: `debug`, `info`, `warning`, `error`, `critical` |\n+| `host` | `0.0.0.0` | The host address to bind the server to. Use `localhost` or `127.0.0.1` for local-only access. |\n+| `port` | `7860` | The port number to run the server on. |\n+| `env` | `.env` | Path to the environment file containing configuration variables. |\n+| `open_browser` | `true` | Whether to automatically open the browser when starting. Set to `false` to disable. |\n+\n+4. (Optional) Install pre-commit hooks to help keep your changes clean and well-formatted. `make init` runs this automatically.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2175347728",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8369,
        "pr_file": "CONTRIBUTING.md",
        "discussion_id": "2175347728",
        "commented_code": "@@ -1,47 +1,160 @@\n # Contributing to Langflow\n \n-This guide is intended to help you get started contributing to Langflow.\n-As an open-source project in a rapidly developing field, we are extremely open\n-to contributions, whether it be in the form of a new feature, improved infra, or better documentation.\n+This guide is intended to help you start contributing to Langflow.\n+As an open-source project in a rapidly developing field, Langflow welcomes contributions, whether it be in the form of a new feature, improved infrastructure, or better documentation.\n \n-To contribute to this project, please follow the [fork and pull request](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) workflow.\n+To contribute code or documentation to this project, follow the [fork and pull request](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) workflow.\n \n-## Reporting bugs or suggesting improvements\n+## Install Langflow from source\n \n-Our [GitHub issues](https://github.com/langflow-ai/langflow/issues) page is kept up to date\n-with bugs, improvements, and feature requests. There is a taxonomy of labels to help\n-with sorting and discovery of issues of interest. [See this page](https://github.com/langflow-ai/langflow/labels) for an overview of\n-the system we use to tag our issues and pull requests.\n+Install Langflow from source by forking the repository, and then set up your development environment using Make.\n \n-If you're looking for help with your code, consider posting a question on the\n-[GitHub Discussions board](https://github.com/langflow-ai/langflow/discussions). Please\n-understand that we won't be able to provide individual support via email. We\n-also believe that help is much more valuable if it's **shared publicly**,\n-so that more people can benefit from it.\n+### Prerequisites\n \n-- **Describing your issue:** Try to provide as many details as possible. What\n-  exactly goes wrong? _How_ is it failing? Is there an error?\n-  \"XY doesn't work\" usually isn't that helpful for tracking down problems. Always\n-  remember to include the code you ran and if possible, extract only the relevant\n-  parts and don't just dump your entire script. This will make it easier for us to\n-  reproduce the error.\n+* [uv(>=0.4)](https://docs.astral.sh/uv/getting-started/installation/)\n+* [Node.js](https://nodejs.org/en/download/package-manager)\n+* [Make](https://www.gnu.org/software/make/#documentation)\n \n-- **Sharing long blocks of code or logs:** If you need to include long code,\n-  logs or tracebacks, you can wrap them in `<details>` and `</details>`. This\n-  [collapses the content](https://developer.mozilla.org/en/docs/Web/HTML/Element/details)\n-  so it only becomes visible on click, making the issue easier to read and follow.\n+### Clone the Langflow repository\n \n-## Contributing code and documentation\n+1. Navigate to the [Langflow GitHub repository](https://github.com/langflow-ai/langflow), and then click **Fork**.\n \n-You can develop Langflow locally and contribute to the Project!\n+2. Add the new remote to your local repository on your local machine:\n+Replace `YOUR_FORK_NAME` with a name for your fork.\n+Replace `YOUR_GIT_USERNAME` with your Git username.\n+```bash\n+git remote add YOUR_FORK_NAME https://github.com/YOUR_GIT_USERNAME/langflow.git\n+```\n \n-See [DEVELOPMENT.md](DEVELOPMENT.md) for instructions on setting up and using a development environment.\n+### Set up your Langflow development environment\n \n-## Opening a pull request\n+1. Change your directory to the root of the local Langflow repository:\n+```bash\n+cd langflow\n+```\n \n-Once you wrote and manually tested your change, you can start sending the patch to the main repository.\n+2. To set up the Langflow development environment, run the following command:\n+```bash\n+make init\n+```\n \n-- Open a new GitHub pull request with the patch against the `main` branch.\n-- Ensure the PR title follows semantic commits conventions.\n-  - For example, `feat: add new feature`, `fix: correct issue with X`.\n-- Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n+This command sets up the development environment by:\n+- Checking for uv and npm.\n+- Installing backend and frontend dependencies.\n+- Installing pre-commit hooks.\n+\n+There are two different workflows depending on whether you're a developer or just running Langflow from source.\n+\n+Developers typically run the backend and frontend separately for development:\n+\n+```bash\n+# Run backend in development mode (includes hot reload)\n+make backend\n+\n+# In another terminal, run frontend in development mode (includes hot reload)\n+make frontend\n+```\n+\n+The `make backend` and `make frontend` commands automatically install dependencies, so you don't need to run install commands separately.\n+\n+If you're not developing, but want to run Langflow from source, run:\n+\n+```bash\n+make run_cli\n+```\n+\n+This command:\n+- Installs frontend and backend dependencies\n+- Builds the frontend static files\n+- Starts the application with default settings\n+\n+After running `make init` once to set up your environment, you can use `make run_cli` for subsequent runs. The `make run_cli` command allows you to configure the application such as logging level, host, port, and environment variables.\n+\n+For example, this command starts Langflow with custom settings for the logging level, host binding, and port number, and specifies a custom `.env` file.\n+\n+```bash\n+make run_cli log_level=info host=localhost port=8000 env=.env.custom\n+```\n+\n+The `make run_cli` command accepts the following parameters:\n+\n+| Parameter | Default | Description |\n+|-----------|---------|-------------|\n+| `log_level` | `debug` | Set the logging level. Options: `debug`, `info`, `warning`, `error`, `critical` |\n+| `host` | `0.0.0.0` | The host address to bind the server to. Use `localhost` or `127.0.0.1` for local-only access. |\n+| `port` | `7860` | The port number to run the server on. |\n+| `env` | `.env` | Path to the environment file containing configuration variables. |\n+| `open_browser` | `true` | Whether to automatically open the browser when starting. Set to `false` to disable. |\n+\n+4. (Optional) Install pre-commit hooks to help keep your changes clean and well-formatted. `make init` runs this automatically.",
        "comment_created_at": "2025-06-30T15:24:07+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n4. Optional: Install pre-commit hooks to help keep your changes clean and well-formatted. `make init` runs this automatically.\r\n```\r\n\r\nhttps://developers.google.com/style/procedures#optional-steps",
        "pr_file_module": null
      }
    ]
  }
]