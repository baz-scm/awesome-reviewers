[
  {
    "discussion_id": "2305387616",
    "pr_number": 9529,
    "pr_file": "docs/docs/Contributing/contributing-how-to-contribute.mdx",
    "created_at": "2025-08-27T22:04:28+00:00",
    "commented_code": "<Tabs>\n <TabItem value=\"linux-macos\" label=\"Linux or macOS\" default>\n \n+:::important Difference between commands\n+`make init` sets up the development environment but doesn't start the application.\n+`make run_cli` installs dependencies, builds the frontend, and starts the application in one step.\n+For development with hot-reload, use `make init`, followed by `make backend` and `make frontend` commands in separate terminals.\n+:::",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2305387616",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9529,
        "pr_file": "docs/docs/Contributing/contributing-how-to-contribute.mdx",
        "discussion_id": "2305387616",
        "commented_code": "@@ -118,6 +118,12 @@ The Langflow frontend is served at `http://localhost:7860`.\n <Tabs>\n <TabItem value=\"linux-macos\" label=\"Linux or macOS\" default>\n \n+:::important Difference between commands\n+`make init` sets up the development environment but doesn't start the application.\n+`make run_cli` installs dependencies, builds the frontend, and starts the application in one step.\n+For development with hot-reload, use `make init`, followed by `make backend` and `make frontend` commands in separate terminals.\n+:::",
        "comment_created_at": "2025-08-27T22:04:28+00:00",
        "comment_author": "aimurphy",
        "comment_body": "This is confusing because make run_cli isn't in this section. Make run_cli is introduced on line 43.\r\n\r\nIts not clear whether \"Run langflow from source\" and \"set up langflow development environment\" are mutually exclusive or sequential.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2298527621",
    "pr_number": 9381,
    "pr_file": "docs/docs/Components/components-data.mdx",
    "created_at": "2025-08-25T16:11:59+00:00",
    "commented_code": "- **Multiple files**: Produces a **Files** [`DataFrame`](/data-types#dataframe) containing the content and metadata of all selected files.\n \n+## Create Knowledge\n+\n+The **Create Knowledge** component creates or appends to a [Langflow Knowledge Base](/knowledge) from a DataFrame.\n+\n+To create a knowledge base in a flow, see the **Create Knowledge** template.\n+\n+For more information, see the [Knowledge Base documentation](/knowledge).",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2298527621",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9381,
        "pr_file": "docs/docs/Components/components-data.mdx",
        "discussion_id": "2298527621",
        "commented_code": "@@ -187,6 +187,64 @@ The output of the **File** component depends on the number and type of files loa\n \n - **Multiple files**: Produces a **Files** [`DataFrame`](/data-types#dataframe) containing the content and metadata of all selected files.\n \n+## Create Knowledge\n+\n+The **Create Knowledge** component creates or appends to a [Langflow Knowledge Base](/knowledge) from a DataFrame.\n+\n+To create a knowledge base in a flow, see the **Create Knowledge** template.\n+\n+For more information, see the [Knowledge Base documentation](/knowledge).",
        "comment_created_at": "2025-08-25T16:11:59+00:00",
        "comment_author": "aimurphy",
        "comment_body": "TBH, I would do what I did for the [Agent and MCP components](https://d5rxiv0do0q3v.cloudfront.net/langflow-drafts/docs-knowledge-base-feature/components-agents): Put everything on the /knowledge page, and then just point to that page from here. Then the user doesn't have to pop between two pages to read how to use it in a flow and learn about the parameters.\r\n\r\n```suggestion\r\nFor more information, see [Manage knowledge bases](/knowledge).\r\n```\r\n\r\nMove line 198 to 219 to the /knowledge page.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2298535433",
    "pr_number": 9381,
    "pr_file": "docs/docs/Components/components-data.mdx",
    "created_at": "2025-08-25T16:15:27+00:00",
    "commented_code": "- **Multiple files**: Produces a **Files** [`DataFrame`](/data-types#dataframe) containing the content and metadata of all selected files.\n \n+## Create Knowledge\n+\n+The **Create Knowledge** component creates or appends to a [Langflow Knowledge Base](/knowledge) from a DataFrame.\n+\n+To create a knowledge base in a flow, see the **Create Knowledge** template.\n+\n+For more information, see the [Knowledge Base documentation](/knowledge).\n+\n+### Create Knowledge parameters\n+\n+Most **Create Knowledge** component input parameters are hidden by default in the visual editor.\n+You can toggle parameters through the <Icon name=\"SlidersHorizontal\" aria-hidden=\"true\"/> **Controls** in the [component's header menu](/concepts-components#component-menus).\n+\n+| Name             | Display Name                  | Info                                                                                  |\n+|------------------|------------------------------|---------------------------------------------------------------------------------------|\n+| knowledge_base   | Knowledge                     | Select or create a knowledge base to ingest data into.                                |\n+| input_df         | Data                          | The DataFrame containing your data that is already chunked or processed.                       |\n+| column_config    | Column Configuration          | Configure which columns are vectorized and which are used as unique identifiers. Default: `text`.     |\n+| chunk_size       | Chunk Size                    | Batch size for processing embeddings. Default: `1000`.                                   |\n+| api_key          | Embedding Provider API Key    | API key for the embedding provider. Supports OpenAI, HuggingFace, or Cohere.                     |\n+| allow_duplicates | Allow Duplicates              | Allow duplicate rows in the knowledge base. Default: `false`.                            |\n+\n+### Create Knowledge output\n+\n+Returns a [`Data`](/data-types#data) object containing metadata about the ingestion, including:\n+\n+* Knowledge base name and path\n+* Number of rows ingested\n+* Column configuration summary\n+* Timestamp\n+\n+## Retrieve Knowledge\n+\n+The **Retrieve Knowledge** component retrieves data and performs searches on a [Langflow Knowledge Base](/knowledge). Use this component to query your ingested knowledge bases, perform semantic search, and return relevant results as a DataFrame.\n+\n+To use a knowledge base in a flow, see the **Retrieve Knowledge** template.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2298535433",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9381,
        "pr_file": "docs/docs/Components/components-data.mdx",
        "discussion_id": "2298535433",
        "commented_code": "@@ -187,6 +187,64 @@ The output of the **File** component depends on the number and type of files loa\n \n - **Multiple files**: Produces a **Files** [`DataFrame`](/data-types#dataframe) containing the content and metadata of all selected files.\n \n+## Create Knowledge\n+\n+The **Create Knowledge** component creates or appends to a [Langflow Knowledge Base](/knowledge) from a DataFrame.\n+\n+To create a knowledge base in a flow, see the **Create Knowledge** template.\n+\n+For more information, see the [Knowledge Base documentation](/knowledge).\n+\n+### Create Knowledge parameters\n+\n+Most **Create Knowledge** component input parameters are hidden by default in the visual editor.\n+You can toggle parameters through the <Icon name=\"SlidersHorizontal\" aria-hidden=\"true\"/> **Controls** in the [component's header menu](/concepts-components#component-menus).\n+\n+| Name             | Display Name                  | Info                                                                                  |\n+|------------------|------------------------------|---------------------------------------------------------------------------------------|\n+| knowledge_base   | Knowledge                     | Select or create a knowledge base to ingest data into.                                |\n+| input_df         | Data                          | The DataFrame containing your data that is already chunked or processed.                       |\n+| column_config    | Column Configuration          | Configure which columns are vectorized and which are used as unique identifiers. Default: `text`.     |\n+| chunk_size       | Chunk Size                    | Batch size for processing embeddings. Default: `1000`.                                   |\n+| api_key          | Embedding Provider API Key    | API key for the embedding provider. Supports OpenAI, HuggingFace, or Cohere.                     |\n+| allow_duplicates | Allow Duplicates              | Allow duplicate rows in the knowledge base. Default: `false`.                            |\n+\n+### Create Knowledge output\n+\n+Returns a [`Data`](/data-types#data) object containing metadata about the ingestion, including:\n+\n+* Knowledge base name and path\n+* Number of rows ingested\n+* Column configuration summary\n+* Timestamp\n+\n+## Retrieve Knowledge\n+\n+The **Retrieve Knowledge** component retrieves data and performs searches on a [Langflow Knowledge Base](/knowledge). Use this component to query your ingested knowledge bases, perform semantic search, and return relevant results as a DataFrame.\n+\n+To use a knowledge base in a flow, see the **Retrieve Knowledge** template.",
        "comment_created_at": "2025-08-25T16:15:27+00:00",
        "comment_author": "aimurphy",
        "comment_body": "Same comment as the previous component: I would move most of the info to the /knowledge page, and then point to that page from here.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2305891151",
    "pr_number": 9381,
    "pr_file": "docs/docs/Concepts/knowledge.mdx",
    "created_at": "2025-08-28T01:45:02+00:00",
    "commented_code": "+---",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2305891151",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9381,
        "pr_file": "docs/docs/Concepts/knowledge.mdx",
        "discussion_id": "2305891151",
        "commented_code": "@@ -0,0 +1,221 @@\n+---",
        "comment_created_at": "2025-08-28T01:45:02+00:00",
        "comment_author": "aimurphy",
        "comment_body": "This page is hard to follow. You have a demo in the first two sections, and then sections for all the configuration options and output.\r\n\r\nInstead, I would recommend this structure:\r\n\r\n```\r\n## Use knowledge bases in flows\r\n\r\n<!-- One contiguous tutorial using both components -->\r\n\r\n## Knowledge Ingestion component\r\n\r\n### Knowledge Ingestion parameters\r\n\r\n## Knowledge Retrieval component\r\n\r\n### Knowledge Retrieval parameters\r\n\r\n## Knowledge base storage location\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2305935718",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9381,
        "pr_file": "docs/docs/Concepts/knowledge.mdx",
        "discussion_id": "2305891151",
        "commented_code": "@@ -0,0 +1,221 @@\n+---",
        "comment_created_at": "2025-08-28T02:03:56+00:00",
        "comment_author": "aimurphy",
        "comment_body": "I started to make suggestions, but it might be faster for me to edit directly.\r\n\r\nWhat are the component names?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2305908460",
    "pr_number": 9381,
    "pr_file": "docs/docs/Concepts/knowledge.mdx",
    "created_at": "2025-08-28T01:52:23+00:00",
    "commented_code": "+---\n+title: Manage knowledge bases\n+slug: /knowledge\n+---\n+\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+import Icon from \"@site/src/components/icon\";\n+\n+A knowledge base is a local repository of vector embeddings created from your data that agents can reference to answer domain-specific questions.\n+\n+Knowledge bases are distinct from [**Vector Store** components](/components-vector-stores). **Vector Store** components provide a connection to a vector database, while knowledge bases store vector data locally, allowing each knowledge base to be re-used in new flows without requiring re-ingestion of the data in every flow.\n+\n+Knowledge bases are created with the [**Knowledge Ingestion** component](/components-data#create-knowledge), and knowledge is retrieved using the [**Knowledge Retrieval** component](/components-data#retrieve-knowledge).",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2305908460",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9381,
        "pr_file": "docs/docs/Concepts/knowledge.mdx",
        "discussion_id": "2305908460",
        "commented_code": "@@ -0,0 +1,221 @@\n+---\n+title: Manage knowledge bases\n+slug: /knowledge\n+---\n+\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+import Icon from \"@site/src/components/icon\";\n+\n+A knowledge base is a local repository of vector embeddings created from your data that agents can reference to answer domain-specific questions.\n+\n+Knowledge bases are distinct from [**Vector Store** components](/components-vector-stores). **Vector Store** components provide a connection to a vector database, while knowledge bases store vector data locally, allowing each knowledge base to be re-used in new flows without requiring re-ingestion of the data in every flow.\n+\n+Knowledge bases are created with the [**Knowledge Ingestion** component](/components-data#create-knowledge), and knowledge is retrieved using the [**Knowledge Retrieval** component](/components-data#retrieve-knowledge).",
        "comment_created_at": "2025-08-28T01:52:23+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n## Use knowledge bases in flows\r\n\r\nTo use knowledge bases in flows, you use the **Knowledge Ingestion** component to create and write to knowledge bases, and then you use the **Knowledge Retrieval** component to read from your knowledge bases.\r\n```\r\n\r\nSince components-data.mdx just points back to here, there's no value linking to it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2279035543",
    "pr_number": 9406,
    "pr_file": "docs/docs/Components/components-embedding-models.mdx",
    "created_at": "2025-08-15T13:53:44+00:00",
    "commented_code": "![A semantic search flow that uses Embedding Model, File, Split Text, Chroma DB, Chat Input, and Chat Output components](/img/component-embedding-models-add-chat.png)\n \n-:::tip\n-This example uses the **Embedding Model** core component.\n-\n-To use another model, you can replace the **Embedding Model** core component with any [additional **Embedding Model** component](#additional-embedding-model-components) in these steps.\n-However, your component might have different parameters than the **Embedding Model** core component.\n-:::\n-\n 1. Create a flow, add a **File** component, and then select a file containing text data, such as a PDF, that you can use to test the flow.\n \n 2. Add an **Embedding Model** component, and then provide a valid OpenAI API key.\n+You can enter component API keys directly or use Langflow global variables to reference your API keys.\n \n-    By default, the **Embedding Model** component uses an OpenAI model.\n-    If you want to use a different model, edit the **Model Name**, and **API Key** fields accordingly.\n-    Or, see [Additional Embedding Model components](#additional-embedding-model-components) for other components that you can use in place of the **Embedding Model** core component.\n+    :::tip\n+    If your preferred embedding model provider or model isn't supported by the **Embedding Model** core component, you can use [additional embedding models](#additional-embedding-model-components) in place of the core component.\n \n-    You can enter component API keys directly or use Langflow global variables to reference your API keys.\n+    If your preferred provider or model isn't supported by the **Embedding Model** core component, you can replace this component with any other embedding model component in Langflow.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2279035543",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9406,
        "pr_file": "docs/docs/Components/components-embedding-models.mdx",
        "discussion_id": "2279035543",
        "commented_code": "@@ -21,22 +19,17 @@ This flow loads a text file, splits the text into chunks, generates embeddings f\n \n ![A semantic search flow that uses Embedding Model, File, Split Text, Chroma DB, Chat Input, and Chat Output components](/img/component-embedding-models-add-chat.png)\n \n-:::tip\n-This example uses the **Embedding Model** core component.\n-\n-To use another model, you can replace the **Embedding Model** core component with any [additional **Embedding Model** component](#additional-embedding-model-components) in these steps.\n-However, your component might have different parameters than the **Embedding Model** core component.\n-:::\n-\n 1. Create a flow, add a **File** component, and then select a file containing text data, such as a PDF, that you can use to test the flow.\n \n 2. Add an **Embedding Model** component, and then provide a valid OpenAI API key.\n+You can enter component API keys directly or use Langflow global variables to reference your API keys.\n \n-    By default, the **Embedding Model** component uses an OpenAI model.\n-    If you want to use a different model, edit the **Model Name**, and **API Key** fields accordingly.\n-    Or, see [Additional Embedding Model components](#additional-embedding-model-components) for other components that you can use in place of the **Embedding Model** core component.\n+    :::tip\n+    If your preferred embedding model provider or model isn't supported by the **Embedding Model** core component, you can use [additional embedding models](#additional-embedding-model-components) in place of the core component.\n \n-    You can enter component API keys directly or use Langflow global variables to reference your API keys.\n+    If your preferred provider or model isn't supported by the **Embedding Model** core component, you can replace this component with any other embedding model component in Langflow.",
        "comment_created_at": "2025-08-15T13:53:44+00:00",
        "comment_author": "mendonk",
        "comment_body": "```suggestion\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2246185004",
    "pr_number": 9226,
    "pr_file": "docs/docs/Deployment/deployment-prod-best-practices.mdx",
    "created_at": "2025-07-31T19:11:00+00:00",
    "commented_code": "* **The Langflow development environment** must include the Integrated Development Environment (IDE) for the full experience of Langflow, optimized for prototyping and testing new flows.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2246185004",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9226,
        "pr_file": "docs/docs/Deployment/deployment-prod-best-practices.mdx",
        "discussion_id": "2246185004",
        "commented_code": "@@ -46,14 +46,239 @@ It is recommended to deploy and run two separate environments for Langflow, with\n * **The Langflow development environment** must include the Integrated Development Environment (IDE) for the full experience of Langflow, optimized for prototyping and testing new flows.",
        "comment_created_at": "2025-07-31T19:11:00+00:00",
        "comment_author": "aimurphy",
        "comment_body": "This page is very long. I would consider breaking it apart:\r\n\r\n* Deployment architecture (Intro, Langflow deployment, Environment isolation)\r\n* Resource requirements (Scaling resources)\r\n* Best practices for Langflow K8s deployments (Rest of the page - However, I wonder if these are generic enough that they could just be \"Langflow deployment best practices\" at the top level of the Deploy section? The \"Monitoring recommendations\" sounds like it could be in the observability section too.)",
        "pr_file_module": null
      },
      {
        "comment_id": "2248095573",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9226,
        "pr_file": "docs/docs/Deployment/deployment-prod-best-practices.mdx",
        "discussion_id": "2246185004",
        "commented_code": "@@ -46,14 +46,239 @@ It is recommended to deploy and run two separate environments for Langflow, with\n * **The Langflow development environment** must include the Integrated Development Environment (IDE) for the full experience of Langflow, optimized for prototyping and testing new flows.",
        "comment_created_at": "2025-08-01T14:13:27+00:00",
        "comment_author": "mendonk",
        "comment_body": "Good call. I just broke it into 2, \"Deployment architecture\" and \"Deployment best practices\" pages.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2241065523",
    "pr_number": 9223,
    "pr_file": "docs/docs/Configuration/configuration-cli.mdx",
    "created_at": "2025-07-29T21:35:02+00:00",
    "commented_code": "* If `AUTO_LOGIN` is `FALSE`, you must be logged in as a superuser.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2241065523",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9223,
        "pr_file": "docs/docs/Configuration/configuration-cli.mdx",
        "discussion_id": "2241065523",
        "commented_code": "@@ -38,6 +38,10 @@ To create API keys with the Langflow CLI, `AUTO_LOGIN` must be set to `TRUE`, or\n * If `AUTO_LOGIN` is `FALSE`, you must be logged in as a superuser.",
        "comment_created_at": "2025-07-29T21:35:02+00:00",
        "comment_author": "aimurphy",
        "comment_body": "Instead of repeating, I think it would be better to just have the CLI API key instructions on one page.\r\n\r\nChoose either this page or the API key page as the source of truth for these instructions. Then, on the other page, replace the instructions with a link to the source of truth.",
        "pr_file_module": null
      },
      {
        "comment_id": "2242716018",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9223,
        "pr_file": "docs/docs/Configuration/configuration-cli.mdx",
        "discussion_id": "2241065523",
        "commented_code": "@@ -38,6 +38,10 @@ To create API keys with the Langflow CLI, `AUTO_LOGIN` must be set to `TRUE`, or\n * If `AUTO_LOGIN` is `FALSE`, you must be logged in as a superuser.",
        "comment_created_at": "2025-07-30T13:35:12+00:00",
        "comment_author": "mendonk",
        "comment_body": "On the API and auth page now.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2229176934",
    "pr_number": 9172,
    "pr_file": "docs/docs/Develop/memory.mdx",
    "created_at": "2025-07-24T17:51:41+00:00",
    "commented_code": "The following tables are stored in `langflow.db`:\n \n-\u2022 **User**: Stores user account information including credentials, permissions, and profiles. For more information, see [Authentication](/configuration-authentication).\n+\u2022 **User**: Stores user account information including credentials, permissions, and profiles. For more information, see [API keys and authentication](/api-keys-and-authentication#authentication-configuration-values).\n \n \u2022 **Flow**: Contains flow configurations. For more information, see [Build flows](/concepts-flows).\n \n \u2022 **Message**: Stores chat messages and interactions that occur between components. For more information, see [Message objects](/data-types#message) and [Store chat memory](#store-chat-memory).\n \n \u2022 **Transaction**: Records execution history and results of flow runs. This information is used for [logging](/logging).\n \n-\u2022 **ApiKey**: Manages API authentication keys for users. For more information, see [API keys](/configuration-api-keys).\n+\u2022 **ApiKey**: Manages API authentication keys for users. For more information, see [API keys](/api-keys-and-authentication).",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2229176934",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9172,
        "pr_file": "docs/docs/Develop/memory.mdx",
        "discussion_id": "2229176934",
        "commented_code": "@@ -26,15 +26,15 @@ For more information, see [Configure external memory](#configure-external-memory\n \n The following tables are stored in `langflow.db`:\n \n-\u2022 **User**: Stores user account information including credentials, permissions, and profiles. For more information, see [Authentication](/configuration-authentication).\n+\u2022 **User**: Stores user account information including credentials, permissions, and profiles. For more information, see [API keys and authentication](/api-keys-and-authentication#authentication-configuration-values).\n \n \u2022 **Flow**: Contains flow configurations. For more information, see [Build flows](/concepts-flows).\n \n \u2022 **Message**: Stores chat messages and interactions that occur between components. For more information, see [Message objects](/data-types#message) and [Store chat memory](#store-chat-memory).\n \n \u2022 **Transaction**: Records execution history and results of flow runs. This information is used for [logging](/logging).\n \n-\u2022 **ApiKey**: Manages API authentication keys for users. For more information, see [API keys](/configuration-api-keys).\n+\u2022 **ApiKey**: Manages API authentication keys for users. For more information, see [API keys](/api-keys-and-authentication).",
        "comment_created_at": "2025-07-24T17:51:41+00:00",
        "comment_author": "aimurphy",
        "comment_body": "This page has 2 links to the same page. I would probably just use the same link for both:\r\n\r\n```\r\n[API keys and authentication](/api-keys-and-authentication)\r\n```\r\n\r\nAnd on line 37, I would specify which API keys it stores (langflow or any \"credential\" global variable??).",
        "pr_file_module": null
      }
    ]
  }
]