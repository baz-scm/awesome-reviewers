[
  {
    "discussion_id": "2206001912",
    "pr_number": 9022,
    "pr_file": "docs/docs/Tutorials/mcp-tutorial.md",
    "created_at": "2025-07-14T23:47:58+00:00",
    "commented_code": "+---\n+title: Connect to MCP servers from your application\n+slug: /mcp-tutorial\n+---\n+\n+import Icon from \"@site/src/components/icon\";\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+\n+This tutorial shows you how to connect MCP tools to your applications using Langflow's [**MCP Tools**](/mcp-client) component.\n+\n+The [Model Context Protocol](https://modelcontextprotocol.io/), or MCP, helps agents integrate with LLMs.\n+Langflow can be run as an [MCP client](/mcp-client) and [MCP server](/mcp-server).\n+In this tutorial, you will use Langflow as a client to connect to MCP servers, and then connect a Python application to Langflow.\n+\n+## Prerequisites\n+\n+* [A running Langflow instance](/get-started-installation)\n+* [A Langflow API key](/configuration-api-keys)\n+* [An OpenAI API key](https://platform.openai.com/api-keys)\n+\n+This tutorial uses an OpenAI LLM. If you want to use a different provider, you need a valid credential for that provider.\n+\n+## Create an agentic flow\n+\n+1. In Langflow, click **New Flow**, and then select the [**Simple agent**](/simple-agent) template.\n+2. In the **Agent** component, enter your OpenAI API key.\n+    If you want to use a different provider or model, edit the **Model Provider**, **Model Name**, and **API Key** fields accordingly.\n+3. To test the flow, click <Icon name=\"Play\" aria-hidden=\"true\" /> **Playground**, and then ask the LLM `Is it safe to go hiking in the Adirondacks today?`\n+\n+    The LLM response is vague, though the Agent does know the current date by using its internal `get_current_date` function.\n+\n+    ```\n+    Today is July 11, 2025.\n+    To determine if it's safe to go hiking in the Adirondacks today, you should check the current weather conditions, trail advisories, and any local alerts (such as bear activity or flooding).\n+    Would you like a detailed weather forecast or information on trail conditions for the Adirondacks today?\n+    ```\n+\n+    For improved, up-to-date context for your Agent, replace the connected tools with a connection to a weather MCP server.\n+\n+## Add an MCP Tools component\n+\n+    :::tip Manage MCP Servers\n+    You can manage your MCP servers' configurations in the **Settings** menu, but you still need an **MCP Tools** component in your flow for each individual server.\n+    :::\n+\n+1. Remove the **URL** and **Calculator** tools, and then drag the [**MCP Tools**](/mcp-client) component into your workspace.\n+2. In the **MCP Tools** component, click <Icon name=\"Plus\" aria-hidden=\"true\"/> **Add MCP Server**.\n+\n+3. There are multiple ways to install MCP servers, which are covered in the [**MCP Tools**](/mcp-client) component page.\n+\n+    This example installs an [MCP weather server](https://github.com/isdaniel/mcp_weather_server) to your local machine with uv and Python.\n+\n+    Make sure you install the server in the same Python environment where Langflow is running.\n+    * If you are running Langflow in a virtual environment, activate that environment before installing the server.\n+    * If you are using Docker, install the package inside the Docker container.\n+    * If you are running Langflow system-wide, install the package globally or in the same user environment.\n+\n+    To install the server, run the following command:\n+    ```shell\n+    uv pip install mcp_weather_server\n+    ```\n+\n+4. Configure the MCP server.\n+\n+    In the **Add MCP Server** pane, select either **JSON** or **STDIO** to enter the configuration for starting your server.\n+    Both options configure an MCP server in Langflow with a command and arguments, which Langflow executes to launch the server process when needed.\n+    Both are included here to demonstrate how the STDIO commands can be filled in from the JSON configuration values.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2206001912",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9022,
        "pr_file": "docs/docs/Tutorials/mcp-tutorial.md",
        "discussion_id": "2206001912",
        "commented_code": "@@ -0,0 +1,238 @@\n+---\n+title: Connect to MCP servers from your application\n+slug: /mcp-tutorial\n+---\n+\n+import Icon from \"@site/src/components/icon\";\n+import Tabs from '@theme/Tabs';\n+import TabItem from '@theme/TabItem';\n+\n+This tutorial shows you how to connect MCP tools to your applications using Langflow's [**MCP Tools**](/mcp-client) component.\n+\n+The [Model Context Protocol](https://modelcontextprotocol.io/), or MCP, helps agents integrate with LLMs.\n+Langflow can be run as an [MCP client](/mcp-client) and [MCP server](/mcp-server).\n+In this tutorial, you will use Langflow as a client to connect to MCP servers, and then connect a Python application to Langflow.\n+\n+## Prerequisites\n+\n+* [A running Langflow instance](/get-started-installation)\n+* [A Langflow API key](/configuration-api-keys)\n+* [An OpenAI API key](https://platform.openai.com/api-keys)\n+\n+This tutorial uses an OpenAI LLM. If you want to use a different provider, you need a valid credential for that provider.\n+\n+## Create an agentic flow\n+\n+1. In Langflow, click **New Flow**, and then select the [**Simple agent**](/simple-agent) template.\n+2. In the **Agent** component, enter your OpenAI API key.\n+    If you want to use a different provider or model, edit the **Model Provider**, **Model Name**, and **API Key** fields accordingly.\n+3. To test the flow, click <Icon name=\"Play\" aria-hidden=\"true\" /> **Playground**, and then ask the LLM `Is it safe to go hiking in the Adirondacks today?`\n+\n+    The LLM response is vague, though the Agent does know the current date by using its internal `get_current_date` function.\n+\n+    ```\n+    Today is July 11, 2025.\n+    To determine if it's safe to go hiking in the Adirondacks today, you should check the current weather conditions, trail advisories, and any local alerts (such as bear activity or flooding).\n+    Would you like a detailed weather forecast or information on trail conditions for the Adirondacks today?\n+    ```\n+\n+    For improved, up-to-date context for your Agent, replace the connected tools with a connection to a weather MCP server.\n+\n+## Add an MCP Tools component\n+\n+    :::tip Manage MCP Servers\n+    You can manage your MCP servers' configurations in the **Settings** menu, but you still need an **MCP Tools** component in your flow for each individual server.\n+    :::\n+\n+1. Remove the **URL** and **Calculator** tools, and then drag the [**MCP Tools**](/mcp-client) component into your workspace.\n+2. In the **MCP Tools** component, click <Icon name=\"Plus\" aria-hidden=\"true\"/> **Add MCP Server**.\n+\n+3. There are multiple ways to install MCP servers, which are covered in the [**MCP Tools**](/mcp-client) component page.\n+\n+    This example installs an [MCP weather server](https://github.com/isdaniel/mcp_weather_server) to your local machine with uv and Python.\n+\n+    Make sure you install the server in the same Python environment where Langflow is running.\n+    * If you are running Langflow in a virtual environment, activate that environment before installing the server.\n+    * If you are using Docker, install the package inside the Docker container.\n+    * If you are running Langflow system-wide, install the package globally or in the same user environment.\n+\n+    To install the server, run the following command:\n+    ```shell\n+    uv pip install mcp_weather_server\n+    ```\n+\n+4. Configure the MCP server.\n+\n+    In the **Add MCP Server** pane, select either **JSON** or **STDIO** to enter the configuration for starting your server.\n+    Both options configure an MCP server in Langflow with a command and arguments, which Langflow executes to launch the server process when needed.\n+    Both are included here to demonstrate how the STDIO commands can be filled in from the JSON configuration values.",
        "comment_created_at": "2025-07-14T23:47:58+00:00",
        "comment_author": "aimurphy",
        "comment_body": "I might be confused, but step 3 seems like it's missing some instructions in the current format.\r\n\r\nI think you are installing the server itself in your environment, and then connecting your Langflow deployment to the MCP server? If so:\r\n\r\n* Make \"install the server locally\" the first step in this part of the tutorial. Focus only on installing the server itself.\r\n* Follow with the steps to add the MCP Tools component and connect to the server.\r\n\r\n\r\nSeparately, this sentence is confusing: `There are multiple ways to install MCP servers, which are covered in the [MCP Tools](/mcp-client) component page.` I am confused by the difference between connecting to an MCP server that is running somewhere vs installing/hosting an MCP server on your machine (or a remote machine) before connecting to it. \r\n\r\nDo you always have to install the server somewhere first? For example, in the [Astra MCP Server instructions](https://docs.datastax.com/en/astra-db-serverless/integrations/model-context-protocol.html#add-an-astra-db-mcp-server-to-your-mcp-client), the client basically runs the server as a dependency (I think). (Edit: Oh this is explained on line 149 about npx.)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2204980782",
    "pr_number": 9016,
    "pr_file": "docs/docs/Support/release-notes.md",
    "created_at": "2025-07-14T13:42:15+00:00",
    "commented_code": "slug: /release-notes\n ---\n \n+:::important\n+Due to strict SemVer requirements, Langflow Desktop can have different patch versions than the core Langflow OSS Python package, but the major and minor versions are aligned.\n+:::\n+\n This page summarizes significant changes to Langflow in each release.\n \n For all changes, see the [Changelog](https://github.com/langflow-ai/langflow/releases/latest).",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2204980782",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9016,
        "pr_file": "docs/docs/Support/release-notes.md",
        "discussion_id": "2204980782",
        "commented_code": "@@ -3,6 +3,10 @@ title: Langflow release notes\n slug: /release-notes\n ---\n \n+:::important\n+Due to strict SemVer requirements, Langflow Desktop can have different patch versions than the core Langflow OSS Python package, but the major and minor versions are aligned.\n+:::\n+\n This page summarizes significant changes to Langflow in each release.\n \n For all changes, see the [Changelog](https://github.com/langflow-ai/langflow/releases/latest).",
        "comment_created_at": "2025-07-14T13:42:15+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n\r\nThis page summarizes significant changes to Langflow in each release.\r\nFor all changes, see the [Changelog](https://github.com/langflow-ai/langflow/releases/latest).\r\n\r\nDue to strict SemVer requirements, Langflow Desktop can have different patch versions than the core Langflow OSS Python package, but the major and minor versions are aligned.\r\n```\r\n\r\nI know coderabbit suggested this, but this doesn't need to be a note. It's just helpful information about the patch version.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2190345514",
    "pr_number": 8903,
    "pr_file": "docs/docs/Contributing/contributing-how-to-contribute.md",
    "created_at": "2025-07-07T15:00:01+00:00",
    "commented_code": "* [Node.js](https://nodejs.org/en/download/package-manager)\n * [Make](https://www.gnu.org/software/make/#documentation)\n \n+:::important\n+Make is not required for Windows installations. Installing and running Windows from source uses node and uv.\n+Scripts are also provided in the `/scripts/windows` directory of the Langflow project.\n+:::\n+",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2190345514",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8903,
        "pr_file": "docs/docs/Contributing/contributing-how-to-contribute.md",
        "discussion_id": "2190345514",
        "commented_code": "@@ -18,6 +21,11 @@ Install Langflow from source by forking the repository, and then set up your dev\n * [Node.js](https://nodejs.org/en/download/package-manager)\n * [Make](https://www.gnu.org/software/make/#documentation)\n \n+:::important\n+Make is not required for Windows installations. Installing and running Windows from source uses node and uv.\n+Scripts are also provided in the `/scripts/windows` directory of the Langflow project.\n+:::\n+",
        "comment_created_at": "2025-07-07T15:00:01+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\n* [Make](https://www.gnu.org/software/make/#documentation)\r\n\r\n:::tip Windows\r\nFor Windows installations, you don't need need Make, and you can find [Windows scripts](https://github.com/langflow-ai/langflow/tree/main/scripts/windows) in the Langflow repository.\r\n:::\r\n```\r\n\r\nImportant is a little strong here.\r\nAnother alternative would be to use tabs (One tab for Linux and macOS, one tab for Windows) with the prereqs/info for each OS on each tab.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2175433296",
    "pr_number": 8721,
    "pr_file": "docs/docs/Configuration/configuration-api-keys.md",
    "created_at": "2025-06-30T16:04:45+00:00",
    "commented_code": "import TabItem from '@theme/TabItem';\n import Icon from \"@site/src/components/icon\";\n \n-Langflow provides an API key functionality that allows users to access their individual components and flows without traditional login authentication.\n+Langflow provides an API key functionality that allows users to access their individual components and flows.\n+\n+## Auto-login and API key authentication\n+\n+Prior to Langflow v1.5, when `AUTO_LOGIN` was enabled with `AUTO_LOGIN=true`, Langflow automatically logged users in as a superuser without requiring authentication, and API requests could be made without a Langflow API key.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2175433296",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8721,
        "pr_file": "docs/docs/Configuration/configuration-api-keys.md",
        "discussion_id": "2175433296",
        "commented_code": "@@ -7,7 +7,14 @@ import Tabs from '@theme/Tabs';\n import TabItem from '@theme/TabItem';\n import Icon from \"@site/src/components/icon\";\n \n-Langflow provides an API key functionality that allows users to access their individual components and flows without traditional login authentication.\n+Langflow provides an API key functionality that allows users to access their individual components and flows.\n+\n+## Auto-login and API key authentication\n+\n+Prior to Langflow v1.5, when `AUTO_LOGIN` was enabled with `AUTO_LOGIN=true`, Langflow automatically logged users in as a superuser without requiring authentication, and API requests could be made without a Langflow API key.",
        "comment_created_at": "2025-06-30T16:04:45+00:00",
        "comment_author": "aimurphy",
        "comment_body": "I think it would be clearer to separate the version-specific info on tabs, or put the \"pre-1.5\" info in a `<details>`.\r\n\r\nFor example, how I show the Java driver dependency examples for different versions:\r\nhttps://docs.datastax.com/en/datastax-drivers/compatibility/java-drivers.html#java-driver-ownership ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2180434636",
    "pr_number": 8721,
    "pr_file": "docs/docs/Configuration/configuration-api-keys.md",
    "created_at": "2025-07-02T15:58:55+00:00",
    "commented_code": "import TabItem from '@theme/TabItem';\n import Icon from \"@site/src/components/icon\";\n \n-Langflow provides an API key functionality that allows users to access their individual components and flows without traditional login authentication.\n+You can use Langflow API keys to interact with Langflow programmatically.\n+\n+The API key has the same permissions and access as you do when logged in through the web interface. This means your API key can only access your own flows, components, and data, and cannot access other users' resources.\n+The API key represents the user who created them. If you create your key as a superuser, you will have superuser privileges and can manage other users, but will do so with your API key.\n+\n+<details open>\n+<summary>Auto-login and API key authentication</summary>\n+\n+Prior to Langflow v1.5, when `AUTO_LOGIN` was enabled with `AUTO_LOGIN=true`, Langflow automatically logged users in as a superuser without requiring authentication, and API requests could be made without a Langflow API key.\n+\n+As of Langflow v1.5, all API requests require a Langflow API key, even when `AUTO_LOGIN` is enabled.\n+\n+The only exceptions are the MCP endpoints at `/v1/mcp`, `/v1/mcp-projects`, and `/v2/mcp`.\n+The MCP-related endpoints will continue to require no authentication when `AUTO_LOGIN=true`.\n+\n+</details>\n \n ## Generate a Langflow API key\n \n-Generate a user-specific token to use with Langflow.\n+You can generate a Langflow API key with the UI, or the CLI.\n+\n+The UI-generated key is appropriate for most cases. The CLI key is needed when your Langflow server is running in `--backend-only` mode.\n \n-### Generate an API key with the Langflow UI\n+<Tabs>\n+  <TabItem value=\"Langflow UI\" label=\"Langflow UI\" default>\n \n 1. Click your user icon, and then select **Settings**.\n-2. Click **Langflow API**, and then click **Add New**.\n-3. Name your key, and then click **Create Secret Key**.\n+2. Click **Langflow API Keys**, and then click **Add New**.\n+3. Name your key, and then click **Create API Key**.\n 4. Copy the API key and store it in a secure location.\n \n-### Generate an API key with the Langflow CLI\n+  </TabItem>\n \n-```shell\n-langflow api-key\n-# or\n-python -m langflow api-key\n-\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n-\u2502 API Key Created Successfully:                                       \u2502\n-\u2502                                                                     \u2502\n-\u2502 sk-O0elzoWID1izAH8RUKrnnvyyMwIzHi2Wk-uXWoNJ2Ro                      \u2502\n-\u2502                                                                     \u2502\n-\u2502 This is the only time the API key will be displayed.                \u2502\n-\u2502 Make sure to store it in a secure location.                         \u2502\n-\u2502                                                                     \u2502\n-\u2502 The API key has been copied to your clipboard. Cmd + V to paste it. \u2502\n-\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+  <TabItem value=\"Langflow CLI\" label=\"Langflow CLI\">\n \n-```\n+    If you're serving your flow with `--backend-only=true`, you don't have a way to create an API key within the UI.\n+\n+To create API keys with the Langflow CLI, `AUTO_LOGIN` must be set to `FALSE` and you must be logged in as a superuser.\n+\n+To create an API key for a user from the CLI, do the following:\n+\n+1. In your `.env` file, set `AUTO_LOGIN=FALSE`, and set superuser credentials for your server.\n+\n+    ```text\n+    LANGFLOW_AUTO_LOGIN=False\n+    LANGFLOW_SUPERUSER=administrator\n+    LANGFLOW_SUPERUSER_PASSWORD=securepassword\n+    ```\n+\n+2. To confirm your superuser status, check that `is_superuser` is `true` in the response from the [users/whoami](/api-users#get-current-user) endpoint.\n+\n+    ```bash\n+    curl -X GET \\\n+      \"$LANGFLOW_URL/api/v1/users/whoami\" \\\n+      -H \"accept: application/json\" \\\n+      -H \"x-api-key: $LANGFLOW_API_KEY\"\n+    ```\n+\n+    Result:\n+    ```json\n+    {\n+      \"id\": \"07e5b864-e367-4f52-b647-a48035ae7e5e\",\n+      \"username\": \"langflow\",\n+      \"profile_image\": null,\n+      \"store_api_key\": null,\n+      \"is_active\": true,\n+      \"is_superuser\": true,\n+      \"create_at\": \"2025-05-08T17:59:07.855965\",\n+      \"updated_at\": \"2025-05-29T15:06:56.157860\",\n+      \"last_login_at\": \"2025-05-29T15:06:56.157016\",\n+    }\n+    ```",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2180434636",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8721,
        "pr_file": "docs/docs/Configuration/configuration-api-keys.md",
        "discussion_id": "2180434636",
        "commented_code": "@@ -7,66 +7,121 @@ import Tabs from '@theme/Tabs';\n import TabItem from '@theme/TabItem';\n import Icon from \"@site/src/components/icon\";\n \n-Langflow provides an API key functionality that allows users to access their individual components and flows without traditional login authentication.\n+You can use Langflow API keys to interact with Langflow programmatically.\n+\n+The API key has the same permissions and access as you do when logged in through the web interface. This means your API key can only access your own flows, components, and data, and cannot access other users' resources.\n+The API key represents the user who created them. If you create your key as a superuser, you will have superuser privileges and can manage other users, but will do so with your API key.\n+\n+<details open>\n+<summary>Auto-login and API key authentication</summary>\n+\n+Prior to Langflow v1.5, when `AUTO_LOGIN` was enabled with `AUTO_LOGIN=true`, Langflow automatically logged users in as a superuser without requiring authentication, and API requests could be made without a Langflow API key.\n+\n+As of Langflow v1.5, all API requests require a Langflow API key, even when `AUTO_LOGIN` is enabled.\n+\n+The only exceptions are the MCP endpoints at `/v1/mcp`, `/v1/mcp-projects`, and `/v2/mcp`.\n+The MCP-related endpoints will continue to require no authentication when `AUTO_LOGIN=true`.\n+\n+</details>\n \n ## Generate a Langflow API key\n \n-Generate a user-specific token to use with Langflow.\n+You can generate a Langflow API key with the UI, or the CLI.\n+\n+The UI-generated key is appropriate for most cases. The CLI key is needed when your Langflow server is running in `--backend-only` mode.\n \n-### Generate an API key with the Langflow UI\n+<Tabs>\n+  <TabItem value=\"Langflow UI\" label=\"Langflow UI\" default>\n \n 1. Click your user icon, and then select **Settings**.\n-2. Click **Langflow API**, and then click **Add New**.\n-3. Name your key, and then click **Create Secret Key**.\n+2. Click **Langflow API Keys**, and then click **Add New**.\n+3. Name your key, and then click **Create API Key**.\n 4. Copy the API key and store it in a secure location.\n \n-### Generate an API key with the Langflow CLI\n+  </TabItem>\n \n-```shell\n-langflow api-key\n-# or\n-python -m langflow api-key\n-\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n-\u2502 API Key Created Successfully:                                       \u2502\n-\u2502                                                                     \u2502\n-\u2502 sk-O0elzoWID1izAH8RUKrnnvyyMwIzHi2Wk-uXWoNJ2Ro                      \u2502\n-\u2502                                                                     \u2502\n-\u2502 This is the only time the API key will be displayed.                \u2502\n-\u2502 Make sure to store it in a secure location.                         \u2502\n-\u2502                                                                     \u2502\n-\u2502 The API key has been copied to your clipboard. Cmd + V to paste it. \u2502\n-\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n+  <TabItem value=\"Langflow CLI\" label=\"Langflow CLI\">\n \n-```\n+    If you're serving your flow with `--backend-only=true`, you don't have a way to create an API key within the UI.\n+\n+To create API keys with the Langflow CLI, `AUTO_LOGIN` must be set to `FALSE` and you must be logged in as a superuser.\n+\n+To create an API key for a user from the CLI, do the following:\n+\n+1. In your `.env` file, set `AUTO_LOGIN=FALSE`, and set superuser credentials for your server.\n+\n+    ```text\n+    LANGFLOW_AUTO_LOGIN=False\n+    LANGFLOW_SUPERUSER=administrator\n+    LANGFLOW_SUPERUSER_PASSWORD=securepassword\n+    ```\n+\n+2. To confirm your superuser status, check that `is_superuser` is `true` in the response from the [users/whoami](/api-users#get-current-user) endpoint.\n+\n+    ```bash\n+    curl -X GET \\\n+      \"$LANGFLOW_URL/api/v1/users/whoami\" \\\n+      -H \"accept: application/json\" \\\n+      -H \"x-api-key: $LANGFLOW_API_KEY\"\n+    ```\n+\n+    Result:\n+    ```json\n+    {\n+      \"id\": \"07e5b864-e367-4f52-b647-a48035ae7e5e\",\n+      \"username\": \"langflow\",\n+      \"profile_image\": null,\n+      \"store_api_key\": null,\n+      \"is_active\": true,\n+      \"is_superuser\": true,\n+      \"create_at\": \"2025-05-08T17:59:07.855965\",\n+      \"updated_at\": \"2025-05-29T15:06:56.157860\",\n+      \"last_login_at\": \"2025-05-29T15:06:56.157016\",\n+    }\n+    ```",
        "comment_created_at": "2025-07-02T15:58:55+00:00",
        "comment_author": "aimurphy",
        "comment_body": "Pls wrap this result in details. Only one key is relevant, so this is kinda eating real estate.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2134800789",
    "pr_number": 8387,
    "pr_file": "docs/docs/Components/components-data.md",
    "created_at": "2025-06-08T19:06:19+00:00",
    "commented_code": "- `.bz2` - Bzip2 compressed files\n - `.gz` - Gzip compressed files\n \n-## SQL Query\n \n-This component executes SQL queries on a specified database.\n+## MCP connection {#mcp-connection}\n+\n+The **MCP connection** component connects to a [Model Context Protocol (MCP)](https://modelcontextprotocol.io/introduction) server and exposes the MCP server's tools as tools for Langflow agents.\n+\n+In addition to being an MCP client that can leverage MCP servers, the **MCP connection** component's [SSE mode](#mcp-sse-mode) allows you to connect your flow to the Langflow MCP server at the `/api/v1/mcp/sse` API endpoint, exposing all flows within your [project](/concepts-overview#projects) as tools within a flow.\n+\n+To use the **MCP connection** component with an agent component, follow these steps:\n+\n+1. Add the **MCP connection** component to your workflow.\n+\n+2. In the **MCP connection** component, in the **MCP Command** field, enter the command to start your MCP server. For example, to start a [Fetch](https://github.com/modelcontextprotocol/servers/tree/main/src/fetch) server, the command is:\n+\n+    ```bash\n+    uvx mcp-server-fetch\n+    ```\n+\n+    `uvx` is included with `uv` in the Langflow package.\n+    To use `npx` server commands, you must first install an LTS release of [Node.js](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm).\n+    For an example of starting `npx` MCP servers, see [Connect an Astra DB MCP server to Langflow](/mcp-component-astra).\n+\n+    To include environment variables with your server command, add them to the **Env** field like this:\n+\n+    ```bash\n+    ASTRA_DB_APPLICATION_TOKEN=AstraCS:...\n+    ```\n+\n+    :::important\n+    Langflow passes environment variables from the `.env` file to MCP, but not global variables declared in the UI.\n+    To add a value for an environment variable as a global variable, add it to Langflow's `.env` file at startup.\n+    For more information, see [global variables](/configuration-global-variables).\n+    :::",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2134800789",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-data.md",
        "discussion_id": "2134800789",
        "commented_code": "@@ -168,9 +178,268 @@ Archive formats (for bundling multiple files):\n - `.bz2` - Bzip2 compressed files\n - `.gz` - Gzip compressed files\n \n-## SQL Query\n \n-This component executes SQL queries on a specified database.\n+## MCP connection {#mcp-connection}\n+\n+The **MCP connection** component connects to a [Model Context Protocol (MCP)](https://modelcontextprotocol.io/introduction) server and exposes the MCP server's tools as tools for Langflow agents.\n+\n+In addition to being an MCP client that can leverage MCP servers, the **MCP connection** component's [SSE mode](#mcp-sse-mode) allows you to connect your flow to the Langflow MCP server at the `/api/v1/mcp/sse` API endpoint, exposing all flows within your [project](/concepts-overview#projects) as tools within a flow.\n+\n+To use the **MCP connection** component with an agent component, follow these steps:\n+\n+1. Add the **MCP connection** component to your workflow.\n+\n+2. In the **MCP connection** component, in the **MCP Command** field, enter the command to start your MCP server. For example, to start a [Fetch](https://github.com/modelcontextprotocol/servers/tree/main/src/fetch) server, the command is:\n+\n+    ```bash\n+    uvx mcp-server-fetch\n+    ```\n+\n+    `uvx` is included with `uv` in the Langflow package.\n+    To use `npx` server commands, you must first install an LTS release of [Node.js](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm).\n+    For an example of starting `npx` MCP servers, see [Connect an Astra DB MCP server to Langflow](/mcp-component-astra).\n+\n+    To include environment variables with your server command, add them to the **Env** field like this:\n+\n+    ```bash\n+    ASTRA_DB_APPLICATION_TOKEN=AstraCS:...\n+    ```\n+\n+    :::important\n+    Langflow passes environment variables from the `.env` file to MCP, but not global variables declared in the UI.\n+    To add a value for an environment variable as a global variable, add it to Langflow's `.env` file at startup.\n+    For more information, see [global variables](/configuration-global-variables).\n+    :::",
        "comment_created_at": "2025-06-08T19:06:19+00:00",
        "comment_author": "KimberlyFields",
        "comment_body": "I think you've tried to cram too much info and too many choices into this step. Please think about a more streamlined way to present this info. Consider using tabs.",
        "pr_file_module": null
      },
      {
        "comment_id": "2163958112",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-data.md",
        "discussion_id": "2134800789",
        "commented_code": "@@ -168,9 +178,268 @@ Archive formats (for bundling multiple files):\n - `.bz2` - Bzip2 compressed files\n - `.gz` - Gzip compressed files\n \n-## SQL Query\n \n-This component executes SQL queries on a specified database.\n+## MCP connection {#mcp-connection}\n+\n+The **MCP connection** component connects to a [Model Context Protocol (MCP)](https://modelcontextprotocol.io/introduction) server and exposes the MCP server's tools as tools for Langflow agents.\n+\n+In addition to being an MCP client that can leverage MCP servers, the **MCP connection** component's [SSE mode](#mcp-sse-mode) allows you to connect your flow to the Langflow MCP server at the `/api/v1/mcp/sse` API endpoint, exposing all flows within your [project](/concepts-overview#projects) as tools within a flow.\n+\n+To use the **MCP connection** component with an agent component, follow these steps:\n+\n+1. Add the **MCP connection** component to your workflow.\n+\n+2. In the **MCP connection** component, in the **MCP Command** field, enter the command to start your MCP server. For example, to start a [Fetch](https://github.com/modelcontextprotocol/servers/tree/main/src/fetch) server, the command is:\n+\n+    ```bash\n+    uvx mcp-server-fetch\n+    ```\n+\n+    `uvx` is included with `uv` in the Langflow package.\n+    To use `npx` server commands, you must first install an LTS release of [Node.js](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm).\n+    For an example of starting `npx` MCP servers, see [Connect an Astra DB MCP server to Langflow](/mcp-component-astra).\n+\n+    To include environment variables with your server command, add them to the **Env** field like this:\n+\n+    ```bash\n+    ASTRA_DB_APPLICATION_TOKEN=AstraCS:...\n+    ```\n+\n+    :::important\n+    Langflow passes environment variables from the `.env` file to MCP, but not global variables declared in the UI.\n+    To add a value for an environment variable as a global variable, add it to Langflow's `.env` file at startup.\n+    For more information, see [global variables](/configuration-global-variables).\n+    :::",
        "comment_created_at": "2025-06-24T13:06:39+00:00",
        "comment_author": "mendonk",
        "comment_body": "This has been moved to /mcp-client",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2136105370",
    "pr_number": 8387,
    "pr_file": "docs/docs/Support/release-notes.md",
    "created_at": "2025-06-09T17:11:22+00:00",
    "commented_code": "+---\n+title: Langflow release notes\n+slug: /release notes\n+---\n+\n+This page summarizes significant changes and updates to Langflow.\n+\n+## 1.5\n+\n+### New Language Model and Embedding Model components",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2136105370",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Support/release-notes.md",
        "discussion_id": "2136105370",
        "commented_code": "@@ -0,0 +1,72 @@\n+---\n+title: Langflow release notes\n+slug: /release notes\n+---\n+\n+This page summarizes significant changes and updates to Langflow.\n+\n+## 1.5\n+\n+### New Language Model and Embedding Model components",
        "comment_created_at": "2025-06-09T17:11:22+00:00",
        "comment_author": "KimberlyFields",
        "comment_body": "Avoid \"empty\" headings. In other words, don't have empty space between headings. \r\n\r\nAlso, categorize by type of change, such as new feature or deprecation, like you did for the previous versions. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2153090120",
    "pr_number": 8387,
    "pr_file": "docs/docs/Components/components-bundles.md",
    "created_at": "2025-06-17T20:14:57+00:00",
    "commented_code": "slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.\n \n+## Agent components\n+\n+**Agents** use LLMs as a brain to analyze problems and select external tools.\n+\n+For more information, see [Agents](/agents-overview).\n+\n+### CrewAI Agent\n+\n+This component represents an Agent of CrewAI allowing for the creation of specialized AI agents with defined roles goals and capabilities within a crew.\n+\n+For more information, see the [CrewAI documentation](https://docs.crewai.com/core-concepts/Agents/).",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2153090120",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-bundles.md",
        "discussion_id": "2153090120",
        "commented_code": "@@ -3,8 +3,1535 @@ title: Bundles\n slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.\n \n+## Agent components\n+\n+**Agents** use LLMs as a brain to analyze problems and select external tools.\n+\n+For more information, see [Agents](/agents-overview).\n+\n+### CrewAI Agent\n+\n+This component represents an Agent of CrewAI allowing for the creation of specialized AI agents with defined roles goals and capabilities within a crew.\n+\n+For more information, see the [CrewAI documentation](https://docs.crewai.com/core-concepts/Agents/).",
        "comment_created_at": "2025-06-17T20:14:57+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nFor more information, see the [CrewAI Agents documentation](https://docs.crewai.com/core-concepts/Agents/).\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2153123106",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-bundles.md",
        "discussion_id": "2153090120",
        "commented_code": "@@ -3,8 +3,1535 @@ title: Bundles\n slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.\n \n+## Agent components\n+\n+**Agents** use LLMs as a brain to analyze problems and select external tools.\n+\n+For more information, see [Agents](/agents-overview).\n+\n+### CrewAI Agent\n+\n+This component represents an Agent of CrewAI allowing for the creation of specialized AI agents with defined roles goals and capabilities within a crew.\n+\n+For more information, see the [CrewAI documentation](https://docs.crewai.com/core-concepts/Agents/).",
        "comment_created_at": "2025-06-17T20:35:24+00:00",
        "comment_author": "aimurphy",
        "comment_body": "Pls differentiate the CrewAI links throughout the page. Screen readers can announce all links on the page by link text alone, so the user cannot distinguish any difference in the CrewAI links if they are all announced as \"CrewAI documentation\". \r\n\r\nBoth screen reader and non-screen reader users will assume the links go to the same place because they all have the same text.",
        "pr_file_module": null
      },
      {
        "comment_id": "2153130738",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-bundles.md",
        "discussion_id": "2153090120",
        "commented_code": "@@ -3,8 +3,1535 @@ title: Bundles\n slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.\n \n+## Agent components\n+\n+**Agents** use LLMs as a brain to analyze problems and select external tools.\n+\n+For more information, see [Agents](/agents-overview).\n+\n+### CrewAI Agent\n+\n+This component represents an Agent of CrewAI allowing for the creation of specialized AI agents with defined roles goals and capabilities within a crew.\n+\n+For more information, see the [CrewAI documentation](https://docs.crewai.com/core-concepts/Agents/).",
        "comment_created_at": "2025-06-17T20:40:30+00:00",
        "comment_author": "aimurphy",
        "comment_body": "Optional: Group all CrewAI components together:\r\n\r\n```\r\n### CrewAI bundles\r\n\r\nThe following bundles support integrations between Langflow and CrewAI.\r\n\r\n#### CrewAI Agent\r\n\r\n#### Hierarchical crew\r\n\r\n#### Sequential crew\r\n\r\n...\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2153098783",
    "pr_number": 8387,
    "pr_file": "docs/docs/Components/components-agents.md",
    "created_at": "2025-06-17T20:19:20+00:00",
    "commented_code": "|------|------|-------------|\n | agent | AgentExecutor | The Vector Store Router Agent instance. |\n \n-</details>\n-\n-## Moved components\n-\n-The following components are available under **Bundles**.\n-",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2153098783",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-agents.md",
        "discussion_id": "2153098783",
        "commented_code": "@@ -124,296 +124,4 @@ This component creates a Vector Store Router Agent using LangChain.\n |------|------|-------------|\n | agent | AgentExecutor | The Vector Store Router Agent instance. |\n \n-</details>\n-\n-## Moved components\n-\n-The following components are available under **Bundles**.\n-",
        "comment_created_at": "2025-06-17T20:19:20+00:00",
        "comment_author": "aimurphy",
        "comment_body": "I would suggest leaving some connection to the Bundles page. Maybe as related link or just a small section. That way the user knows they are still agent components, just specialized ones (I think I am understanding that right?).\r\n\r\n```\r\n## Agent bundles\r\n\r\nSpecialized variations of the **Agent** component are available as provider-specific **Bundles**. For more information, see (Bundles)[/components-bundle-components].\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2153110694",
    "pr_number": 8387,
    "pr_file": "docs/docs/Components/components-bundles.md",
    "created_at": "2025-06-17T20:27:01+00:00",
    "commented_code": "slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2153110694",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-bundles.md",
        "discussion_id": "2153110694",
        "commented_code": "@@ -3,8 +3,1535 @@ title: Bundles\n slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.",
        "comment_created_at": "2025-06-17T20:27:01+00:00",
        "comment_author": "aimurphy",
        "comment_body": "```suggestion\r\nBundled components are based on standard Langflow functionality, so you add them to your flows and configure them in much the same way as the standard components.\r\nHowever, bundled components inherently use provider-specific functionality, commands, and configurations that aren't described in this documentation.\r\nFor details about the provider-specific aspects of a bundled component, see the component provider's documentation.\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2153146211",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-bundles.md",
        "discussion_id": "2153110694",
        "commented_code": "@@ -3,8 +3,1535 @@ title: Bundles\n slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.",
        "comment_created_at": "2025-06-17T20:50:18+00:00",
        "comment_author": "aimurphy",
        "comment_body": "Alternative suggestion:\r\n\r\nThe CSV, XML, SQL, and the OpenAI agent bundles are missing doc links. If there are no applicable docs links for these (or any other bundles), here is a different suggestion for this intro segment:\r\n\r\n```suggestion\r\nBundled components are based on standard Langflow functionality, so you add them to your flows and configure them in much the same way as the standard components.\r\nThis documentation summarizes each bundled component and its parameters.\r\nFor details about provider-specific aspects of bundled components, this documentation provides links to relevant component provider documentation.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2153116146",
    "pr_number": 8387,
    "pr_file": "docs/docs/Components/components-bundles.md",
    "created_at": "2025-06-17T20:30:41+00:00",
    "commented_code": "slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.\n \n+## Agent components",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2153116146",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-bundles.md",
        "discussion_id": "2153116146",
        "commented_code": "@@ -3,8 +3,1535 @@ title: Bundles\n slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.\n \n+## Agent components",
        "comment_created_at": "2025-06-17T20:30:41+00:00",
        "comment_author": "aimurphy",
        "comment_body": "The other two categories are \"____ bundles\" so just aligning them:\r\n\r\n```suggestion\r\n## Agent bundles\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2175399337",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8387,
        "pr_file": "docs/docs/Components/components-bundles.md",
        "discussion_id": "2153116146",
        "commented_code": "@@ -3,8 +3,1535 @@ title: Bundles\n slug: /components-bundle-components\n ---\n \n+import Icon from \"@site/src/components/icon\";\n+\n **Bundles** are third-party components grouped by provider.\n \n For more information on bundled components, see the component provider's documentation.\n \n+## Agent components",
        "comment_created_at": "2025-06-30T15:47:55+00:00",
        "comment_author": "aimurphy",
        "comment_body": "Some of my earlier comments are unresolved, so not sure whether you were still considering them or not.",
        "pr_file_module": null
      }
    ]
  }
]