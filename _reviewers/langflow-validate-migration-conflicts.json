[
  {
    "discussion_id": "2210778519",
    "pr_number": 9014,
    "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
    "created_at": "2025-07-16T15:29:45+00:00",
    "commented_code": "+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2210778519",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-16T15:29:45+00:00",
        "comment_author": "ogabrielluiz",
        "comment_body": "This will cause a conflict because this an existing fk.",
        "pr_file_module": null
      },
      {
        "comment_id": "2210786033",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-16T15:32:30+00:00",
        "comment_author": "erichare",
        "comment_body": "@ogabrielluiz this is only used when dropping the existing table and re-creating it, i believe (which happens for sqlite). For postgres, we don't re-create any foreign key constraints, just modify the existing ones. So i think it would be okay right? It should only re-apply the constraint when re-creating the table, unless i'm misunderstanding",
        "pr_file_module": null
      },
      {
        "comment_id": "2210841075",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-16T15:56:49+00:00",
        "comment_author": "ogabrielluiz",
        "comment_body": "I did this on another migration script and it broke `main` at the time.",
        "pr_file_module": null
      },
      {
        "comment_id": "2210858105",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-16T16:04:42+00:00",
        "comment_author": "ogabrielluiz",
        "comment_body": "For some reason it worked on my tests but didn't work for others.",
        "pr_file_module": null
      },
      {
        "comment_id": "2210862843",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-16T16:06:59+00:00",
        "comment_author": "ogabrielluiz",
        "comment_body": "`1b8b740a6fa3` this is the migration I'm referring to.",
        "pr_file_module": null
      },
      {
        "comment_id": "2210915695",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-16T16:28:41+00:00",
        "comment_author": "erichare",
        "comment_body": "Yikes, okay thanks @ogabrielluiz ... i'll take a look at that one",
        "pr_file_module": null
      },
      {
        "comment_id": "2211039251",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-16T17:17:22+00:00",
        "comment_author": "erichare",
        "comment_body": "@ogabrielluiz would a potential approach be:\r\n\r\n1. Create the table without the constraint\r\n2. Insert the previous data into the table\r\n3. Attempt to apply the constraint, fail if there's an issue (or even automatically remove files not tied to a user_id?)",
        "pr_file_module": null
      },
      {
        "comment_id": "2222268354",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-22T11:44:59+00:00",
        "comment_author": "deathjoin",
        "comment_body": "I'm really sorry for the ping, but our team is in big need for other users to be able to use MCP Servers \ud83d\ude22 \r\nCan you please have a look? \ud83d\ude4f  @ogabrielluiz ",
        "pr_file_module": null
      },
      {
        "comment_id": "2226248587",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-23T17:40:09+00:00",
        "comment_author": "ogabrielluiz",
        "comment_body": "@erichare \r\nWe may need to validate the data, then we need to make sure the constraint's name does not conflict with existing constraints. \r\n\r\nIf there is a duplicate already, we can update the name and then we insert it the data into the new table. \r\n\r\nSo:\r\n1. Select all, validate all names per user and update db\r\n2. Create new table with the constraint that does not conflict with an existing constraint\r\n3. Insert into it\r\n4. delete old table.",
        "pr_file_module": null
      },
      {
        "comment_id": "2228956999",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 9014,
        "pr_file": "src/backend/base/langflow/alembic/versions/1cb603706752_modify_uniqueness_constraint_on_file_.py",
        "discussion_id": "2210778519",
        "commented_code": "@@ -0,0 +1,144 @@\n+\"\"\"Modify uniqueness constraint on file names\n+\n+Revision ID: 1cb603706752\n+Revises: d9a6ea21edcd\n+Create Date: 2025-07-11 07:02:14.896583\n+\"\"\"\n+\n+from typing import Sequence, Union\n+from alembic import op\n+import sqlalchemy as sa\n+import sqlmodel\n+from sqlalchemy import inspect\n+\n+# revision identifiers, used by Alembic.\n+revision: str = '1cb603706752'\n+down_revision: Union[str, None] = 'd9a6ea21edcd'\n+branch_labels: Union[str, Sequence[str], None] = None\n+depends_on: Union[str, Sequence[str], None] = None\n+\n+# -- Shared schema definition to avoid drift\n+file_table_columns = [\n+    sa.Column(\"id\", sqlmodel.sql.sqltypes.types.Uuid(), primary_key=True, nullable=False),\n+    sa.Column(\"user_id\", sqlmodel.sql.sqltypes.types.Uuid(), nullable=False),\n+    sa.Column(\"name\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"path\", sqlmodel.sql.sqltypes.AutoString(), nullable=False),\n+    sa.Column(\"size\", sa.Integer(), nullable=False),\n+    sa.Column(\"provider\", sqlmodel.sql.sqltypes.AutoString(), nullable=True),\n+    sa.Column(\"created_at\", sa.DateTime(), nullable=False),\n+    sa.Column(\"updated_at\", sa.DateTime(), nullable=False),\n+    sa.ForeignKeyConstraint([\"user_id\"], [\"user.id\"], name=\"fk_file_user_id_user\"),",
        "comment_created_at": "2025-07-24T16:10:32+00:00",
        "comment_author": "erichare",
        "comment_body": "@ogabrielluiz thank you for breaking it down :) \r\n\r\nIs there any scenario where there could be a duplicate already? Since the constraint has existed since the beginning of this? Nonetheless - i can add in logic and also make sure there is no conflict with existing constraints!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2178460227",
    "pr_number": 8793,
    "pr_file": "src/backend/base/langflow/services/database/models/folder/constants.py",
    "created_at": "2025-07-01T20:28:06+00:00",
    "commented_code": "DEFAULT_FOLDER_DESCRIPTION = \"Manage your own flows. Download and upload projects.\"\n-DEFAULT_FOLDER_NAME = \"My Projects\"\n-NEW_FOLDER_NAME = \"Starter Project\"\n+DEFAULT_FOLDER_NAME = \"Starter Project\"",
    "repo_full_name": "langflow-ai/langflow",
    "discussion_comments": [
      {
        "comment_id": "2178460227",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8793,
        "pr_file": "src/backend/base/langflow/services/database/models/folder/constants.py",
        "discussion_id": "2178460227",
        "commented_code": "@@ -1,3 +1,2 @@\n DEFAULT_FOLDER_DESCRIPTION = \"Manage your own flows. Download and upload projects.\"\n-DEFAULT_FOLDER_NAME = \"My Projects\"\n-NEW_FOLDER_NAME = \"Starter Project\"\n+DEFAULT_FOLDER_NAME = \"Starter Project\"",
        "comment_created_at": "2025-07-01T20:28:06+00:00",
        "comment_author": "ogabrielluiz",
        "comment_body": "This will break `get_or_create_default_folder`.",
        "pr_file_module": null
      },
      {
        "comment_id": "2179207491",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8793,
        "pr_file": "src/backend/base/langflow/services/database/models/folder/constants.py",
        "discussion_id": "2178460227",
        "commented_code": "@@ -1,3 +1,2 @@\n DEFAULT_FOLDER_DESCRIPTION = \"Manage your own flows. Download and upload projects.\"\n-DEFAULT_FOLDER_NAME = \"My Projects\"\n-NEW_FOLDER_NAME = \"Starter Project\"\n+DEFAULT_FOLDER_NAME = \"Starter Project\"",
        "comment_created_at": "2025-07-02T06:16:39+00:00",
        "comment_author": "jordanrfrazier",
        "comment_body": "Good catch. If we really want to update this, we can look for the previous folder name first (and even dupe it over if we _really_ want to update this). ",
        "pr_file_module": null
      },
      {
        "comment_id": "2180085758",
        "repo_full_name": "langflow-ai/langflow",
        "pr_number": 8793,
        "pr_file": "src/backend/base/langflow/services/database/models/folder/constants.py",
        "discussion_id": "2178460227",
        "commented_code": "@@ -1,3 +1,2 @@\n DEFAULT_FOLDER_DESCRIPTION = \"Manage your own flows. Download and upload projects.\"\n-DEFAULT_FOLDER_NAME = \"My Projects\"\n-NEW_FOLDER_NAME = \"Starter Project\"\n+DEFAULT_FOLDER_NAME = \"Starter Project\"",
        "comment_created_at": "2025-07-02T13:34:46+00:00",
        "comment_author": "lucaseduoli",
        "comment_body": "Created a migration.",
        "pr_file_module": null
      }
    ]
  }
]