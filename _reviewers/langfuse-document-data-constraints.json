[
  {
    "discussion_id": "2126833733",
    "pr_number": 7140,
    "pr_file": "fern/apis/server/definition/metrics.yml",
    "created_at": "2025-06-04T15:02:15+00:00",
    "commented_code": "docs: |\n           The metrics data. Each item in the list contains the metric values and dimensions requested in the query.\n           Format varies based on the query parameters.\n+          Histograms will return an array with [lower, upper, height] tuples.",
    "repo_full_name": "langfuse/langfuse",
    "discussion_comments": [
      {
        "comment_id": "2126833733",
        "repo_full_name": "langfuse/langfuse",
        "pr_number": 7140,
        "pr_file": "fern/apis/server/definition/metrics.yml",
        "discussion_id": "2126833733",
        "commented_code": "@@ -62,3 +66,4 @@ types:\n         docs: |\n           The metrics data. Each item in the list contains the metric values and dimensions requested in the query.\n           Format varies based on the query parameters.\n+          Histograms will return an array with [lower, upper, height] tuples.",
        "comment_created_at": "2025-06-04T15:02:15+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Consider clarifying the histogram tuple format. Specify if the lower bound is inclusive and the upper bound exclusive, and confirm the bins are sorted.\n```suggestion\n          Histograms will return an array with [lower, upper, height] tuples, where lower is inclusive, upper is exclusive, and bins are sorted by lower bound.\n```\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2042500437",
    "pr_number": 6438,
    "pr_file": "fern/apis/server/definition/projects.yml",
    "created_at": "2025-04-14T16:30:36+00:00",
    "commented_code": "method: GET\n       path: /projects\n       response: Projects\n+    \n+    create:\n+      docs: Create a new project (requires organization-scoped API key)\n+      method: POST\n+      path: /projects\n+      request:\n+        name: CreateProjectRequest\n+        body:\n+          properties:\n+            name: string",
    "repo_full_name": "langfuse/langfuse",
    "discussion_comments": [
      {
        "comment_id": "2042500437",
        "repo_full_name": "langfuse/langfuse",
        "pr_number": 6438,
        "pr_file": "fern/apis/server/definition/projects.yml",
        "discussion_id": "2042500437",
        "commented_code": "@@ -11,6 +11,27 @@ service:\n       method: GET\n       path: /projects\n       response: Projects\n+    \n+    create:\n+      docs: Create a new project (requires organization-scoped API key)\n+      method: POST\n+      path: /projects\n+      request:\n+        name: CreateProjectRequest\n+        body:\n+          properties:\n+            name: string",
        "comment_created_at": "2025-04-14T16:30:36+00:00",
        "comment_author": "marliessophie",
        "comment_body": "_Suggestion_: I would include some details on the schema we expect here as a description (more than 3, less than 30 characters) ",
        "pr_file_module": null
      },
      {
        "comment_id": "2042821293",
        "repo_full_name": "langfuse/langfuse",
        "pr_number": 6438,
        "pr_file": "fern/apis/server/definition/projects.yml",
        "discussion_id": "2042500437",
        "commented_code": "@@ -11,6 +11,27 @@ service:\n       method: GET\n       path: /projects\n       response: Projects\n+    \n+    create:\n+      docs: Create a new project (requires organization-scoped API key)\n+      method: POST\n+      path: /projects\n+      request:\n+        name: CreateProjectRequest\n+        body:\n+          properties:\n+            name: string",
        "comment_created_at": "2025-04-14T19:38:08+00:00",
        "comment_author": "Steffen911",
        "comment_body": "I have a separate ticket to increase the restriction from 30 to 60 characters. I'll add those details with the PR that changes this. Good catch though!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2042802291",
    "pr_number": 6437,
    "pr_file": "fern/apis/organizations/definition/organizations.yml",
    "created_at": "2025-04-14T19:24:22+00:00",
    "commented_code": "- commons.UnauthorizedError\n         - commons.MethodNotAllowedError\n \n+    # API Key endpoints\n+    getApiKeys:\n+      docs: Get all API keys for an organization\n+      method: GET\n+      path: /organizations/{organizationId}/apiKeys\n+      path-parameters:\n+        organizationId: string\n+      response: ApiKeyList\n+      errors:\n+        - commons.Error\n+        - commons.UnauthorizedError\n+        - commons.MethodNotAllowedError\n+\n+    createApiKey:\n+      docs: Create a new API key for an organization\n+      method: POST\n+      path: /organizations/{organizationId}/apiKeys\n+      path-parameters:\n+        organizationId: string\n+      request:\n+        name: CreateApiKeyRequest\n+        body:\n+          properties:\n+            note:\n+              type: optional<string>\n+              docs: Optional note for the API key\n+      response: ApiKeyResponse\n+      errors:\n+        - commons.Error\n+        - commons.UnauthorizedError\n+        - commons.MethodNotAllowedError\n+\n+    deleteApiKey:\n+      docs: Delete an API key for an organization\n+      method: DELETE\n+      path: /organizations/{organizationId}/apiKeys/{apiKeyId}\n+      path-parameters:\n+        organizationId: string\n+        apiKeyId: string\n+      response: DeleteOrganizationResponse",
    "repo_full_name": "langfuse/langfuse",
    "discussion_comments": [
      {
        "comment_id": "2042802291",
        "repo_full_name": "langfuse/langfuse",
        "pr_number": 6437,
        "pr_file": "fern/apis/organizations/definition/organizations.yml",
        "discussion_id": "2042802291",
        "commented_code": "@@ -71,6 +71,51 @@ service:\n         - commons.UnauthorizedError\n         - commons.MethodNotAllowedError\n \n+    # API Key endpoints\n+    getApiKeys:\n+      docs: Get all API keys for an organization\n+      method: GET\n+      path: /organizations/{organizationId}/apiKeys\n+      path-parameters:\n+        organizationId: string\n+      response: ApiKeyList\n+      errors:\n+        - commons.Error\n+        - commons.UnauthorizedError\n+        - commons.MethodNotAllowedError\n+\n+    createApiKey:\n+      docs: Create a new API key for an organization\n+      method: POST\n+      path: /organizations/{organizationId}/apiKeys\n+      path-parameters:\n+        organizationId: string\n+      request:\n+        name: CreateApiKeyRequest\n+        body:\n+          properties:\n+            note:\n+              type: optional<string>\n+              docs: Optional note for the API key\n+      response: ApiKeyResponse\n+      errors:\n+        - commons.Error\n+        - commons.UnauthorizedError\n+        - commons.MethodNotAllowedError\n+\n+    deleteApiKey:\n+      docs: Delete an API key for an organization\n+      method: DELETE\n+      path: /organizations/{organizationId}/apiKeys/{apiKeyId}\n+      path-parameters:\n+        organizationId: string\n+        apiKeyId: string\n+      response: DeleteOrganizationResponse",
        "comment_created_at": "2025-04-14T19:24:22+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Consider using a dedicated response schema for the `deleteApiKey` endpoint instead of reusing `DeleteOrganizationResponse`. This will make the API responses more semantically clear.",
        "pr_file_module": null
      }
    ]
  }
]