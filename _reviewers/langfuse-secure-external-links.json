[
  {
    "discussion_id": "2151870869",
    "pr_number": 7358,
    "pr_file": "web/src/features/prompts/components/NewPromptForm/index.tsx",
    "created_at": "2025-06-17T10:04:55+00:00",
    "commented_code": "<div>\n                   <FormItem>\n                     <FormLabel>Name</FormLabel>\n+                    <FormDescription>\n+                      Use slashes &apos;/&apos; in prompt names to organize them into <a target=\"_blank\" href=\"https://langfuse.com/docs/prompts/get-started#prompt-folders-for-organization\"><i>folders</i></a>.",
    "repo_full_name": "langfuse/langfuse",
    "discussion_comments": [
      {
        "comment_id": "2151870869",
        "repo_full_name": "langfuse/langfuse",
        "pr_number": 7358,
        "pr_file": "web/src/features/prompts/components/NewPromptForm/index.tsx",
        "discussion_id": "2151870869",
        "commented_code": "@@ -214,6 +214,9 @@ export const NewPromptForm: React.FC<NewPromptFormProps> = (props) => {\n                 <div>\n                   <FormItem>\n                     <FormLabel>Name</FormLabel>\n+                    <FormDescription>\n+                      Use slashes &apos;/&apos; in prompt names to organize them into <a target=\"_blank\" href=\"https://langfuse.com/docs/prompts/get-started#prompt-folders-for-organization\"><i>folders</i></a>.",
        "comment_created_at": "2025-06-17T10:04:55+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Add a `rel` attribute (e.g., `rel=\"noopener noreferrer\"`) to the `<a>` tag when using `target=\"_blank\"` for improved security.\n```suggestion\n                      Use slashes &apos;/&apos; in prompt names to organize them into <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://langfuse.com/docs/prompts/get-started#prompt-folders-for-organization\"><i>folders</i></a>.\n```\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2009910930",
    "pr_number": 6143,
    "pr_file": "web/src/pages/project/[projectId]/settings/index.tsx",
    "created_at": "2025-03-24T10:37:32+00:00",
    "commented_code": "return (\n     <div>\n       <Header title=\"Integrations\" />\n-      <Card className=\"p-3\">\n-        {/* eslint-disable-next-line @next/next/no-img-element */}\n-        <PostHogLogo className=\"mb-4 w-40 text-foreground\" />\n-        <p className=\"mb-4 text-sm text-primary\">\n-          We have teamed up with PostHog (OSS product analytics) to make\n-          Langfuse Events/Metrics available in your Posthog Dashboards.\n-        </p>\n-        <div className=\"flex items-center gap-2\">\n-          <ActionButton\n-            variant=\"secondary\"\n-            hasAccess={hasAccess}\n-            hasEntitlement={hasEntitlement}\n-            href={`/project/${props.projectId}/settings/integrations/posthog`}\n-          >\n-            Configure\n-          </ActionButton>\n-          <Button asChild variant=\"ghost\">\n-            <Link href=\"https://langfuse.com/docs/analytics/posthog\">\n-              Integration Docs \u2197\n-            </Link>\n-          </Button>\n-        </div>\n-      </Card>\n+      <div className=\"space-y-6\">\n+        <Card className=\"p-3\">\n+          {/* eslint-disable-next-line @next/next/no-img-element */}\n+          <PostHogLogo className=\"mb-4 w-40 text-foreground\" />\n+          <p className=\"mb-4 text-sm text-primary\">\n+            We have teamed up with PostHog (OSS product analytics) to make\n+            Langfuse Events/Metrics available in your Posthog Dashboards.\n+          </p>\n+          <div className=\"flex items-center gap-2\">\n+            <ActionButton\n+              variant=\"secondary\"\n+              hasAccess={hasAccess}\n+              hasEntitlement={hasPosthogEntitlement}\n+              href={`/project/${props.projectId}/settings/integrations/posthog`}\n+            >\n+              Configure\n+            </ActionButton>\n+            <Button asChild variant=\"ghost\">\n+              <Link\n+                href=\"https://langfuse.com/docs/analytics/posthog\"\n+                target=\"_blank\"\n+              >\n+                Integration Docs \u2197\n+              </Link>\n+            </Button>\n+          </div>\n+        </Card>\n+\n+        <Card className=\"p-3\">\n+          <span className=\"font-semibold\">Blob Storage</span>\n+          <p className=\"mb-4 text-sm text-primary\">\n+            Configure scheduled exports of your trace data to S3 compatible\n+            storages or Azure Blob Storage. Set up a scheduled export to your\n+            own storage for data analysis or backup purposes.\n+          </p>\n+          <div className=\"flex items-center gap-2\">\n+            <ActionButton\n+              variant=\"secondary\"\n+              hasAccess={hasAccess}\n+              hasEntitlement={hasBlobStorageEntitlement}\n+              href={`/project/${props.projectId}/settings/integrations/blobstorage`}\n+            >\n+              Configure\n+            </ActionButton>\n+            <Button asChild variant=\"ghost\">\n+              <Link\n+                href=\"https://langfuse.com/docs/integrations/blob-storage // TODO: Update the link to the correct documentation\"",
    "repo_full_name": "langfuse/langfuse",
    "discussion_comments": [
      {
        "comment_id": "2009910930",
        "repo_full_name": "langfuse/langfuse",
        "pr_number": 6143,
        "pr_file": "web/src/pages/project/[projectId]/settings/index.tsx",
        "discussion_id": "2009910930",
        "commented_code": "@@ -237,29 +240,61 @@ const Integrations = (props: { projectId: string }) => {\n   return (\n     <div>\n       <Header title=\"Integrations\" />\n-      <Card className=\"p-3\">\n-        {/* eslint-disable-next-line @next/next/no-img-element */}\n-        <PostHogLogo className=\"mb-4 w-40 text-foreground\" />\n-        <p className=\"mb-4 text-sm text-primary\">\n-          We have teamed up with PostHog (OSS product analytics) to make\n-          Langfuse Events/Metrics available in your Posthog Dashboards.\n-        </p>\n-        <div className=\"flex items-center gap-2\">\n-          <ActionButton\n-            variant=\"secondary\"\n-            hasAccess={hasAccess}\n-            hasEntitlement={hasEntitlement}\n-            href={`/project/${props.projectId}/settings/integrations/posthog`}\n-          >\n-            Configure\n-          </ActionButton>\n-          <Button asChild variant=\"ghost\">\n-            <Link href=\"https://langfuse.com/docs/analytics/posthog\">\n-              Integration Docs \u2197\n-            </Link>\n-          </Button>\n-        </div>\n-      </Card>\n+      <div className=\"space-y-6\">\n+        <Card className=\"p-3\">\n+          {/* eslint-disable-next-line @next/next/no-img-element */}\n+          <PostHogLogo className=\"mb-4 w-40 text-foreground\" />\n+          <p className=\"mb-4 text-sm text-primary\">\n+            We have teamed up with PostHog (OSS product analytics) to make\n+            Langfuse Events/Metrics available in your Posthog Dashboards.\n+          </p>\n+          <div className=\"flex items-center gap-2\">\n+            <ActionButton\n+              variant=\"secondary\"\n+              hasAccess={hasAccess}\n+              hasEntitlement={hasPosthogEntitlement}\n+              href={`/project/${props.projectId}/settings/integrations/posthog`}\n+            >\n+              Configure\n+            </ActionButton>\n+            <Button asChild variant=\"ghost\">\n+              <Link\n+                href=\"https://langfuse.com/docs/analytics/posthog\"\n+                target=\"_blank\"\n+              >\n+                Integration Docs \u2197\n+              </Link>\n+            </Button>\n+          </div>\n+        </Card>\n+\n+        <Card className=\"p-3\">\n+          <span className=\"font-semibold\">Blob Storage</span>\n+          <p className=\"mb-4 text-sm text-primary\">\n+            Configure scheduled exports of your trace data to S3 compatible\n+            storages or Azure Blob Storage. Set up a scheduled export to your\n+            own storage for data analysis or backup purposes.\n+          </p>\n+          <div className=\"flex items-center gap-2\">\n+            <ActionButton\n+              variant=\"secondary\"\n+              hasAccess={hasAccess}\n+              hasEntitlement={hasBlobStorageEntitlement}\n+              href={`/project/${props.projectId}/settings/integrations/blobstorage`}\n+            >\n+              Configure\n+            </ActionButton>\n+            <Button asChild variant=\"ghost\">\n+              <Link\n+                href=\"https://langfuse.com/docs/integrations/blob-storage // TODO: Update the link to the correct documentation\"",
        "comment_created_at": "2025-03-24T10:37:32+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "External documentation link contains an inline TODO and lacks security attributes. Remove the inline TODO and add `rel='noopener noreferrer'` for external links.\n```suggestion\n                href=\"https://langfuse.com/docs/integrations/blob-storage\" rel=\"noopener noreferrer\"\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2011959957",
    "pr_number": 6143,
    "pr_file": "web/src/pages/project/[projectId]/settings/integrations/blobstorage.tsx",
    "created_at": "2025-03-25T12:11:07+00:00",
    "commented_code": "+import Header from \"@/src/components/layouts/header\";\n+import ContainerPage from \"@/src/components/layouts/container-page\";\n+import { StatusBadge } from \"@/src/components/layouts/status-badge\";\n+import { Button } from \"@/src/components/ui/button\";\n+import {\n+  Form,\n+  FormControl,\n+  FormDescription,\n+  FormField,\n+  FormItem,\n+  FormLabel,\n+  FormMessage,\n+} from \"@/src/components/ui/form\";\n+import { Input } from \"@/src/components/ui/input\";\n+import { PasswordInput } from \"@/src/components/ui/password-input\";\n+import { Switch } from \"@/src/components/ui/switch\";\n+import {\n+  Select,\n+  SelectContent,\n+  SelectItem,\n+  SelectTrigger,\n+  SelectValue,\n+} from \"@/src/components/ui/select\";\n+import { useHasEntitlement } from \"@/src/features/entitlements/hooks\";\n+import { usePostHogClientCapture } from \"@/src/features/posthog-analytics/usePostHogClientCapture\";\n+import {\n+  blobStorageIntegrationFormSchema,\n+  type BlobStorageIntegrationFormSchema,\n+} from \"@/src/features/blobstorage-integration/types\";\n+import { useHasProjectAccess } from \"@/src/features/rbac/utils/checkProjectAccess\";\n+import { api } from \"@/src/utils/api\";\n+import { zodResolver } from \"@hookform/resolvers/zod\";\n+import { Card } from \"@tremor/react\";\n+import Link from \"next/link\";\n+import { useRouter } from \"next/router\";\n+import { useEffect, useState } from \"react\";\n+import { useForm } from \"react-hook-form\";\n+import {\n+  BlobStorageIntegrationType,\n+  type BlobStorageIntegration,\n+} from \"@langfuse/shared\";\n+\n+export default function BlobStorageIntegrationSettings() {\n+  const router = useRouter();\n+  const projectId = router.query.projectId as string;\n+  const entitled = useHasEntitlement(\"integration-blobstorage\");\n+  const hasAccess = useHasProjectAccess({\n+    projectId,\n+    scope: \"integrations:CRUD\",\n+  });\n+  const state = api.blobStorageIntegration.get.useQuery(\n+    { projectId },\n+    {\n+      enabled: hasAccess && entitled,\n+    },\n+  );\n+  if (!entitled) return null;\n+\n+  const status =\n+    state.isInitialLoading || !hasAccess\n+      ? undefined\n+      : state.data?.enabled\n+        ? \"active\"\n+        : \"inactive\";\n+\n+  return (\n+    <ContainerPage\n+      headerProps={{\n+        title: \"Blob Storage Integration (Beta)\",\n+        breadcrumb: [\n+          { name: \"Settings\", href: `/project/${projectId}/settings` },\n+        ],\n+        actionButtonsLeft: <>{status && <StatusBadge type={status} />}</>,\n+        actionButtonsRight: (\n+          <Button asChild variant=\"secondary\">\n+            <Link\n+              href=\"https://langfuse.com/docs/query-traces#blob-storage\"\n+              target=\"_blank\"",
    "repo_full_name": "langfuse/langfuse",
    "discussion_comments": [
      {
        "comment_id": "2011959957",
        "repo_full_name": "langfuse/langfuse",
        "pr_number": 6143,
        "pr_file": "web/src/pages/project/[projectId]/settings/integrations/blobstorage.tsx",
        "discussion_id": "2011959957",
        "commented_code": "@@ -0,0 +1,485 @@\n+import Header from \"@/src/components/layouts/header\";\n+import ContainerPage from \"@/src/components/layouts/container-page\";\n+import { StatusBadge } from \"@/src/components/layouts/status-badge\";\n+import { Button } from \"@/src/components/ui/button\";\n+import {\n+  Form,\n+  FormControl,\n+  FormDescription,\n+  FormField,\n+  FormItem,\n+  FormLabel,\n+  FormMessage,\n+} from \"@/src/components/ui/form\";\n+import { Input } from \"@/src/components/ui/input\";\n+import { PasswordInput } from \"@/src/components/ui/password-input\";\n+import { Switch } from \"@/src/components/ui/switch\";\n+import {\n+  Select,\n+  SelectContent,\n+  SelectItem,\n+  SelectTrigger,\n+  SelectValue,\n+} from \"@/src/components/ui/select\";\n+import { useHasEntitlement } from \"@/src/features/entitlements/hooks\";\n+import { usePostHogClientCapture } from \"@/src/features/posthog-analytics/usePostHogClientCapture\";\n+import {\n+  blobStorageIntegrationFormSchema,\n+  type BlobStorageIntegrationFormSchema,\n+} from \"@/src/features/blobstorage-integration/types\";\n+import { useHasProjectAccess } from \"@/src/features/rbac/utils/checkProjectAccess\";\n+import { api } from \"@/src/utils/api\";\n+import { zodResolver } from \"@hookform/resolvers/zod\";\n+import { Card } from \"@tremor/react\";\n+import Link from \"next/link\";\n+import { useRouter } from \"next/router\";\n+import { useEffect, useState } from \"react\";\n+import { useForm } from \"react-hook-form\";\n+import {\n+  BlobStorageIntegrationType,\n+  type BlobStorageIntegration,\n+} from \"@langfuse/shared\";\n+\n+export default function BlobStorageIntegrationSettings() {\n+  const router = useRouter();\n+  const projectId = router.query.projectId as string;\n+  const entitled = useHasEntitlement(\"integration-blobstorage\");\n+  const hasAccess = useHasProjectAccess({\n+    projectId,\n+    scope: \"integrations:CRUD\",\n+  });\n+  const state = api.blobStorageIntegration.get.useQuery(\n+    { projectId },\n+    {\n+      enabled: hasAccess && entitled,\n+    },\n+  );\n+  if (!entitled) return null;\n+\n+  const status =\n+    state.isInitialLoading || !hasAccess\n+      ? undefined\n+      : state.data?.enabled\n+        ? \"active\"\n+        : \"inactive\";\n+\n+  return (\n+    <ContainerPage\n+      headerProps={{\n+        title: \"Blob Storage Integration (Beta)\",\n+        breadcrumb: [\n+          { name: \"Settings\", href: `/project/${projectId}/settings` },\n+        ],\n+        actionButtonsLeft: <>{status && <StatusBadge type={status} />}</>,\n+        actionButtonsRight: (\n+          <Button asChild variant=\"secondary\">\n+            <Link\n+              href=\"https://langfuse.com/docs/query-traces#blob-storage\"\n+              target=\"_blank\"",
        "comment_created_at": "2025-03-25T12:11:07+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Add `rel='noopener noreferrer'` to external links when using `target='_blank'` for better security.\n```suggestion\n              target=\"_blank\" rel=\"noopener noreferrer\"\n```",
        "pr_file_module": null
      }
    ]
  }
]