[
  {
    "discussion_id": "2195142440",
    "pr_number": 14596,
    "pr_file": "ggml/src/ggml-metal/ggml-metal.m",
    "created_at": "2025-07-09T14:10:58+00:00",
    "commented_code": "}\n }\n \n-static bool ggml_metal_encode_node(\n+static bool nodes_are_same(",
    "repo_full_name": "ggml-org/llama.cpp",
    "discussion_comments": [
      {
        "comment_id": "2195142440",
        "repo_full_name": "ggml-org/llama.cpp",
        "pr_number": 14596,
        "pr_file": "ggml/src/ggml-metal/ggml-metal.m",
        "discussion_id": "2195142440",
        "commented_code": "@@ -1875,7 +1891,22 @@ static bool ggml_metal_supports_op(const struct ggml_backend_metal_device_contex\n     }\n }\n \n-static bool ggml_metal_encode_node(\n+static bool nodes_are_same(",
        "comment_created_at": "2025-07-09T14:10:58+00:00",
        "comment_author": "slaren",
        "comment_body": "This is the same as `ggml_are_same_layout` which already are duplicated in `ggml-alloc.c` and `ggml-backend.cpp`. Maybe it could be moved as an inline function in `ggml.h`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2169555695",
    "pr_number": 14274,
    "pr_file": "ggml/src/ggml-metal/ggml-metal.m",
    "created_at": "2025-06-26T17:32:01+00:00",
    "commented_code": "if (!use_bfloat) {\n         for (size_t i = 0, n = 3; i < n; ++i) {\n-            if (op->src[i] != NULL && op->src[i]->type == GGML_TYPE_BF16) {\n+            if (op->src[i] != NULL && (op->src[i]->type == GGML_TYPE_BF16 || op->type == GGML_TYPE_BF16)) {",
    "repo_full_name": "ggml-org/llama.cpp",
    "discussion_comments": [
      {
        "comment_id": "2169555695",
        "repo_full_name": "ggml-org/llama.cpp",
        "pr_number": 14274,
        "pr_file": "ggml/src/ggml-metal/ggml-metal.m",
        "discussion_id": "2169555695",
        "commented_code": "@@ -1630,7 +1648,7 @@ static bool ggml_metal_supports_op(const struct ggml_backend_metal_device_contex\n \n     if (!use_bfloat) {\n         for (size_t i = 0, n = 3; i < n; ++i) {\n-            if (op->src[i] != NULL && op->src[i]->type == GGML_TYPE_BF16) {\n+            if (op->src[i] != NULL && (op->src[i]->type == GGML_TYPE_BF16 || op->type == GGML_TYPE_BF16)) {",
        "comment_created_at": "2025-06-26T17:32:01+00:00",
        "comment_author": "slaren",
        "comment_body": "I don't understand why the check for `op->type` is here, it could be extracted out of the loop.",
        "pr_file_module": null
      }
    ]
  }
]