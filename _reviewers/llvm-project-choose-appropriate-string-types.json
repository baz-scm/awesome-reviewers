[
  {
    "discussion_id": "2231575226",
    "pr_number": 149232,
    "pr_file": "llvm/include/llvm/Frontend/HLSL/RootSignatureMetadata.h",
    "created_at": "2025-07-25T16:35:39+00:00",
    "commented_code": "namespace hlsl {\n namespace rootsig {\n \n+template <typename T>\n+class RootSignatureValidationError\n+    : public ErrorInfo<RootSignatureValidationError<T>> {\n+public:\n+  static char ID;\n+  std::string ParamName;\n+  T Value;\n+\n+  RootSignatureValidationError(StringRef ParamName, T Value)\n+      : ParamName(ParamName.str()), Value(Value) {}\n+\n+  void log(raw_ostream &OS) const override {\n+    OS << \"Invalid value for \" << ParamName << \": \" << Value;\n+  }\n+\n+  std::error_code convertToErrorCode() const override {\n+    return llvm::inconvertibleErrorCode();\n+  }\n+};\n+\n+class GenericRSMetadataError : public ErrorInfo<GenericRSMetadataError> {\n+public:\n+  static char ID;\n+  std::string Message;\n+\n+  GenericRSMetadataError(Twine Message) : Message(Message.str()) {}\n+\n+  void log(raw_ostream &OS) const override { OS << Message; }\n+\n+  std::error_code convertToErrorCode() const override {\n+    return llvm::inconvertibleErrorCode();\n+  }\n+};\n+\n+class InvalidRSMetadataFormat : public ErrorInfo<InvalidRSMetadataFormat> {\n+public:\n+  static char ID;\n+  std::string ElementName;",
    "repo_full_name": "llvm/llvm-project",
    "discussion_comments": [
      {
        "comment_id": "2231575226",
        "repo_full_name": "llvm/llvm-project",
        "pr_number": 149232,
        "pr_file": "llvm/include/llvm/Frontend/HLSL/RootSignatureMetadata.h",
        "discussion_id": "2231575226",
        "commented_code": "@@ -26,6 +28,73 @@ class Metadata;\n namespace hlsl {\n namespace rootsig {\n \n+template <typename T>\n+class RootSignatureValidationError\n+    : public ErrorInfo<RootSignatureValidationError<T>> {\n+public:\n+  static char ID;\n+  std::string ParamName;\n+  T Value;\n+\n+  RootSignatureValidationError(StringRef ParamName, T Value)\n+      : ParamName(ParamName.str()), Value(Value) {}\n+\n+  void log(raw_ostream &OS) const override {\n+    OS << \"Invalid value for \" << ParamName << \": \" << Value;\n+  }\n+\n+  std::error_code convertToErrorCode() const override {\n+    return llvm::inconvertibleErrorCode();\n+  }\n+};\n+\n+class GenericRSMetadataError : public ErrorInfo<GenericRSMetadataError> {\n+public:\n+  static char ID;\n+  std::string Message;\n+\n+  GenericRSMetadataError(Twine Message) : Message(Message.str()) {}\n+\n+  void log(raw_ostream &OS) const override { OS << Message; }\n+\n+  std::error_code convertToErrorCode() const override {\n+    return llvm::inconvertibleErrorCode();\n+  }\n+};\n+\n+class InvalidRSMetadataFormat : public ErrorInfo<InvalidRSMetadataFormat> {\n+public:\n+  static char ID;\n+  std::string ElementName;",
        "comment_created_at": "2025-07-25T16:35:39+00:00",
        "comment_author": "llvm-beanz",
        "comment_body": "Does this need to be a `std::string`? Looks like it is always called with a constant string, so this could just be a `StringRef`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2237532109",
    "pr_number": 149232,
    "pr_file": "llvm/include/llvm/Frontend/HLSL/RootSignatureMetadata.h",
    "created_at": "2025-07-28T18:33:36+00:00",
    "commented_code": "namespace hlsl {\n namespace rootsig {\n \n+template <typename T>\n+class RootSignatureValidationError\n+    : public ErrorInfo<RootSignatureValidationError<T>> {\n+public:\n+  static char ID;\n+  std::string ParamName;\n+  T Value;\n+\n+  RootSignatureValidationError(StringRef ParamName, T Value)\n+      : ParamName(ParamName.str()), Value(Value) {}\n+\n+  void log(raw_ostream &OS) const override {\n+    OS << \"Invalid value for \" << ParamName << \": \" << Value;\n+  }\n+\n+  std::error_code convertToErrorCode() const override {\n+    return llvm::inconvertibleErrorCode();\n+  }\n+};\n+\n+class GenericRSMetadataError : public ErrorInfo<GenericRSMetadataError> {\n+public:\n+  static char ID;\n+  Twine Message;",
    "repo_full_name": "llvm/llvm-project",
    "discussion_comments": [
      {
        "comment_id": "2237532109",
        "repo_full_name": "llvm/llvm-project",
        "pr_number": 149232,
        "pr_file": "llvm/include/llvm/Frontend/HLSL/RootSignatureMetadata.h",
        "discussion_id": "2237532109",
        "commented_code": "@@ -26,6 +28,80 @@ class Metadata;\n namespace hlsl {\n namespace rootsig {\n \n+template <typename T>\n+class RootSignatureValidationError\n+    : public ErrorInfo<RootSignatureValidationError<T>> {\n+public:\n+  static char ID;\n+  std::string ParamName;\n+  T Value;\n+\n+  RootSignatureValidationError(StringRef ParamName, T Value)\n+      : ParamName(ParamName.str()), Value(Value) {}\n+\n+  void log(raw_ostream &OS) const override {\n+    OS << \"Invalid value for \" << ParamName << \": \" << Value;\n+  }\n+\n+  std::error_code convertToErrorCode() const override {\n+    return llvm::inconvertibleErrorCode();\n+  }\n+};\n+\n+class GenericRSMetadataError : public ErrorInfo<GenericRSMetadataError> {\n+public:\n+  static char ID;\n+  Twine Message;",
        "comment_created_at": "2025-07-28T18:33:36+00:00",
        "comment_author": "llvm-beanz",
        "comment_body": "Storing twines is bad. Twines don't actually own the underlying components of the construction, so if anything goes out of scope it will be a memory violation.\r\n\r\nThe only places where you're doing any string construction is where you are storing strings derived from the MDNode, which is why I suggested instead just taking the MDNode and printing it.",
        "pr_file_module": null
      }
    ]
  }
]