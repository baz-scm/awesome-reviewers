[
  {
    "discussion_id": "2157493876",
    "pr_number": 144926,
    "pr_file": "mlir/test/Conversion/ComplexToROCDL/complex-to-rocdl.mlir",
    "created_at": "2025-06-19T18:25:14+00:00",
    "commented_code": "+// RUN: mlir-opt %s -convert-complex-to-rocdl -canonicalize | FileCheck %s",
    "repo_full_name": "llvm/llvm-project",
    "discussion_comments": [
      {
        "comment_id": "2157493876",
        "repo_full_name": "llvm/llvm-project",
        "pr_number": 144926,
        "pr_file": "mlir/test/Conversion/ComplexToROCDL/complex-to-rocdl.mlir",
        "discussion_id": "2157493876",
        "commented_code": "@@ -0,0 +1,13 @@\n+// RUN: mlir-opt %s -convert-complex-to-rocdl -canonicalize | FileCheck %s",
        "comment_created_at": "2025-06-19T18:25:14+00:00",
        "comment_author": "ftynse",
        "comment_body": "Please make tests minimal by not running passes that are not being tested, such as the canonicalizer.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2232344187",
    "pr_number": 147427,
    "pr_file": "llvm/test/Verifier/reloc_none.ll",
    "created_at": "2025-07-26T01:39:49+00:00",
    "commented_code": "+; RUN: not opt -S -passes=verify 2>&1 < %s | FileCheck %s",
    "repo_full_name": "llvm/llvm-project",
    "discussion_comments": [
      {
        "comment_id": "2232344187",
        "repo_full_name": "llvm/llvm-project",
        "pr_number": 147427,
        "pr_file": "llvm/test/Verifier/reloc_none.ll",
        "discussion_id": "2232344187",
        "commented_code": "@@ -0,0 +1,13 @@\n+; RUN: not opt -S -passes=verify 2>&1 < %s | FileCheck %s",
        "comment_created_at": "2025-07-26T01:39:49+00:00",
        "comment_author": "arsenm",
        "comment_body": "```suggestion\r\n; RUN: not llvm-as -disable-output 2>&1 %s | FileCheck %s\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2235764318",
    "pr_number": 150696,
    "pr_file": "mlir/test/Target/LLVMIR/xevm.mlir",
    "created_at": "2025-07-28T10:26:54+00:00",
    "commented_code": "+// RUN: mlir-translate --split-input-file -mlir-to-llvmir %s | FileCheck %s\n+\n+module {\n+  llvm.func spir_funccc @_Z41intel_sub_group_2d_block_read_16b_8r16x1cPU3AS1viiiDv2_iPt(!llvm.ptr<1> {llvm.nonnull, llvm.readonly}, i32, i32, i32, vector<2xi32>, !llvm.ptr {llvm.nonnull, llvm.writeonly}) attributes {no_unwind, will_return}\n+  llvm.func @blockload2d_cache_control(%arg0: !llvm.ptr<1>, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32) -> vector<8xi16> {",
    "repo_full_name": "llvm/llvm-project",
    "discussion_comments": [
      {
        "comment_id": "2235764318",
        "repo_full_name": "llvm/llvm-project",
        "pr_number": 150696,
        "pr_file": "mlir/test/Target/LLVMIR/xevm.mlir",
        "discussion_id": "2235764318",
        "commented_code": "@@ -0,0 +1,101 @@\n+// RUN: mlir-translate --split-input-file -mlir-to-llvmir %s | FileCheck %s\n+\n+module {\n+  llvm.func spir_funccc @_Z41intel_sub_group_2d_block_read_16b_8r16x1cPU3AS1viiiDv2_iPt(!llvm.ptr<1> {llvm.nonnull, llvm.readonly}, i32, i32, i32, vector<2xi32>, !llvm.ptr {llvm.nonnull, llvm.writeonly}) attributes {no_unwind, will_return}\n+  llvm.func @blockload2d_cache_control(%arg0: !llvm.ptr<1>, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32) -> vector<8xi16> {",
        "comment_created_at": "2025-07-28T10:26:54+00:00",
        "comment_author": "adam-smnk",
        "comment_body": "Does the metadata translation itself depend on the operation it's attached to?\r\n\r\nIf not, could you rename these cases to highlight what's exactly being tested? Maybe only a single or two cases would be sufficient?\r\nJust thinking in terms of test noise reduction here.",
        "pr_file_module": null
      },
      {
        "comment_id": "2237314697",
        "repo_full_name": "llvm/llvm-project",
        "pr_number": 150696,
        "pr_file": "mlir/test/Target/LLVMIR/xevm.mlir",
        "discussion_id": "2235764318",
        "commented_code": "@@ -0,0 +1,101 @@\n+// RUN: mlir-translate --split-input-file -mlir-to-llvmir %s | FileCheck %s\n+\n+module {\n+  llvm.func spir_funccc @_Z41intel_sub_group_2d_block_read_16b_8r16x1cPU3AS1viiiDv2_iPt(!llvm.ptr<1> {llvm.nonnull, llvm.readonly}, i32, i32, i32, vector<2xi32>, !llvm.ptr {llvm.nonnull, llvm.writeonly}) attributes {no_unwind, will_return}\n+  llvm.func @blockload2d_cache_control(%arg0: !llvm.ptr<1>, %arg1: i32, %arg2: i32, %arg3: i32, %arg4: i32, %arg5: i32) -> vector<8xi16> {",
        "comment_created_at": "2025-07-28T17:10:22+00:00",
        "comment_author": "silee2",
        "comment_body": "The translation only depends on the xevm attribute.\r\nSimplified to a single test case.",
        "pr_file_module": null
      }
    ]
  }
]