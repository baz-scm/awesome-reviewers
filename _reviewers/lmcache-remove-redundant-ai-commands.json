[
  {
    "discussion_id": "2081838827",
    "pr_number": 613,
    "pr_file": ".buildkite/end-to-end-test.sh",
    "created_at": "2025-05-09T14:43:46+00:00",
    "commented_code": "#!/bin/bash\n \n-pip install -e .\n+VENV_DIR=\".venv\"\n+PYTHON_BIN=\"/usr/bin/python3.10\"\n+if [[ -d \"$VENV_DIR\" ]]; then\n+  echo \"\u27f3 Using existing venv: $(pwd)/$VENV_DIR\"\n+else\n+  echo \"\u2699\ufe0f  Creating venv with Python\u00a03.10 at: $(pwd)/$VENV_DIR\"\n+  # use uv for fast venv creation\n+  uv venv --python \"$PYTHON_BIN\" \"$VENV_DIR\"\n+fi\n \n-set -x\n+uv pip install -e .\n+uv pip install matplotlib\n+uv pip install pandas\n+uv pip install vllm\n+uv pip install --upgrade vllm",
    "repo_full_name": "LMCache/LMCache",
    "discussion_comments": [
      {
        "comment_id": "2081838827",
        "repo_full_name": "LMCache/LMCache",
        "pr_number": 613,
        "pr_file": ".buildkite/end-to-end-test.sh",
        "discussion_id": "2081838827",
        "commented_code": "@@ -1,16 +1,30 @@\n #!/bin/bash\n \n-pip install -e .\n+VENV_DIR=\".venv\"\n+PYTHON_BIN=\"/usr/bin/python3.10\"\n+if [[ -d \"$VENV_DIR\" ]]; then\n+  echo \"\u27f3 Using existing venv: $(pwd)/$VENV_DIR\"\n+else\n+  echo \"\u2699\ufe0f  Creating venv with Python\u00a03.10 at: $(pwd)/$VENV_DIR\"\n+  # use uv for fast venv creation\n+  uv venv --python \"$PYTHON_BIN\" \"$VENV_DIR\"\n+fi\n \n-set -x\n+uv pip install -e .\n+uv pip install matplotlib\n+uv pip install pandas\n+uv pip install vllm\n+uv pip install --upgrade vllm",
        "comment_created_at": "2025-05-09T14:43:46+00:00",
        "comment_author": "Siddhant-Ray",
        "comment_body": "Why do we need both ``uv pip install vllm`` and ``uv pip install --upgrade vllm``? Isn't it enough to just have the second one?",
        "pr_file_module": null
      },
      {
        "comment_id": "2081983122",
        "repo_full_name": "LMCache/LMCache",
        "pr_number": 613,
        "pr_file": ".buildkite/end-to-end-test.sh",
        "discussion_id": "2081838827",
        "commented_code": "@@ -1,16 +1,30 @@\n #!/bin/bash\n \n-pip install -e .\n+VENV_DIR=\".venv\"\n+PYTHON_BIN=\"/usr/bin/python3.10\"\n+if [[ -d \"$VENV_DIR\" ]]; then\n+  echo \"\u27f3 Using existing venv: $(pwd)/$VENV_DIR\"\n+else\n+  echo \"\u2699\ufe0f  Creating venv with Python\u00a03.10 at: $(pwd)/$VENV_DIR\"\n+  # use uv for fast venv creation\n+  uv venv --python \"$PYTHON_BIN\" \"$VENV_DIR\"\n+fi\n \n-set -x\n+uv pip install -e .\n+uv pip install matplotlib\n+uv pip install pandas\n+uv pip install vllm\n+uv pip install --upgrade vllm",
        "comment_created_at": "2025-05-09T15:58:18+00:00",
        "comment_author": "Shaoting-Feng",
        "comment_body": "Removed the first one.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2094668070",
    "pr_number": 665,
    "pr_file": "docker/example_run.sh",
    "created_at": "2025-05-19T00:13:55+00:00",
    "commented_code": "--network host \\\n     --entrypoint \"/usr/local/bin/vllm\" \\\n     $IMAGE \\\n-    serve mistralai/Mistral-7B-Instruct-v0.2 --kv-transfer-config \\\n-    '{\"kv_connector\":\"LMCacheConnector\",\"kv_role\":\"kv_both\"}' \\\n-    --enable-chunked-prefill false\n+    serve $HF_MODEL_NAME --kv-transfer-config \\",
    "repo_full_name": "LMCache/LMCache",
    "discussion_comments": [
      {
        "comment_id": "2094668070",
        "repo_full_name": "LMCache/LMCache",
        "pr_number": 665,
        "pr_file": "docker/example_run.sh",
        "discussion_id": "2094668070",
        "commented_code": "@@ -9,6 +19,5 @@ docker run --runtime nvidia --gpus all \\\n     --network host \\\n     --entrypoint \"/usr/local/bin/vllm\" \\\n     $IMAGE \\\n-    serve mistralai/Mistral-7B-Instruct-v0.2 --kv-transfer-config \\\n-    '{\"kv_connector\":\"LMCacheConnector\",\"kv_role\":\"kv_both\"}' \\\n-    --enable-chunked-prefill false\n+    serve $HF_MODEL_NAME --kv-transfer-config \\",
        "comment_created_at": "2025-05-19T00:13:55+00:00",
        "comment_author": "sammshen",
        "comment_body": "Great catch on the deprecated --enable-chunked-prefill flag and new connector for vllm v1! Am I mistaken that the \"serve\" here will cause a redundancy since the ENTRYPOINT is already [\"vllm\", \"serve\"]?",
        "pr_file_module": null
      },
      {
        "comment_id": "2095833304",
        "repo_full_name": "LMCache/LMCache",
        "pr_number": 665,
        "pr_file": "docker/example_run.sh",
        "discussion_id": "2094668070",
        "commented_code": "@@ -9,6 +19,5 @@ docker run --runtime nvidia --gpus all \\\n     --network host \\\n     --entrypoint \"/usr/local/bin/vllm\" \\\n     $IMAGE \\\n-    serve mistralai/Mistral-7B-Instruct-v0.2 --kv-transfer-config \\\n-    '{\"kv_connector\":\"LMCacheConnector\",\"kv_role\":\"kv_both\"}' \\\n-    --enable-chunked-prefill false\n+    serve $HF_MODEL_NAME --kv-transfer-config \\",
        "comment_created_at": "2025-05-19T14:22:24+00:00",
        "comment_author": "hickeyma",
        "comment_body": "Good catch, yes, its redundant. Updated `docker run` command to just pass the args to the `vllm serve` `entrypoint` in the image, i.e. `$HF_MODEL_NAME --kv-transfer-config`",
        "pr_file_module": null
      }
    ]
  }
]