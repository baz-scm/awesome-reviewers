[
  {
    "discussion_id": "2227213760",
    "pr_number": 8489,
    "pr_file": "src/libs/model-runtime/google/index.test.ts",
    "created_at": "2025-07-24T02:59:54+00:00",
    "commented_code": null,
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2227213760",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 8489,
        "pr_file": "src/libs/model-runtime/google/index.test.ts",
        "discussion_id": "2227213760",
        "commented_code": null,
        "comment_created_at": "2025-07-24T02:59:54+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u9519\u8bef\u89e3\u6790\u65b9\u6cd5\u662f\u5426\u5e94\u5355\u72ec\u63d0\u4e00\u4e2a util \u51fa\u6765\u7136\u540e\u5355\u72ec\u5199\u5355\u6d4b\uff1f",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2106249194",
    "pr_number": 7916,
    "pr_file": "src/libs/model-runtime/utils/modelParse.ts",
    "created_at": "2025-05-25T16:35:36+00:00",
    "commented_code": "+import type { ChatModelCard } from '@/types/llm';\n+\n+export interface ModelProcessorConfig {\n+  excludeKeywords?: readonly string[];\n+  functionCallKeywords: readonly string[];\n+  reasoningKeywords: readonly string[];\n+  visionKeywords: readonly string[];\n+}\n+\n+// \u6a21\u578b\u6807\u7b7e\u5173\u952e\u8bcd\u914d\u7f6e\n+export const MODEL_CONFIGS = {\n+  anthropic: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['claude'],\n+    reasoningKeywords: ['-3-7-', '-4-'],\n+    visionKeywords: ['claude'],\n+  },\n+  deepseek: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['v3'],\n+    reasoningKeywords: ['r1'],\n+    visionKeywords: [],\n+  },\n+  google: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['gemini'],\n+    reasoningKeywords: ['thinking', '-2.5-'],\n+    visionKeywords: ['gemini', 'learnlm'],\n+  },\n+  openai: {\n+    excludeKeywords: ['audio'],\n+    functionCallKeywords: ['4o', '4.1', 'o3', 'o4'],\n+    reasoningKeywords: ['o1', 'o3', 'o4'],\n+    visionKeywords: ['4o', '4.1', 'o4'],\n+  },\n+  volcengine: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['doubao-1.5'],\n+    reasoningKeywords: ['thinking', '-r1'],\n+    visionKeywords: ['vision', '-m'],\n+  },\n+  zeroone: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['fc'],\n+    reasoningKeywords: [],\n+    visionKeywords: ['vision'],\n+  },\n+  zhipu: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['glm-4'],\n+    reasoningKeywords: ['glm-zero', 'glm-z1'],\n+    visionKeywords: ['glm-4v'],\n+  },\n+} as const;\n+\n+// \u6a21\u578b\u63d0\u4f9b\u5546\u5173\u952e\u8bcd\u914d\u7f6e\n+export const PROVIDER_DETECTION_CONFIG = {\n+  anthropic: ['claude'],\n+  deepseek: ['deepseek'],\n+  google: ['gemini'],\n+  openai: ['o1', 'o3', 'o4', 'gpt-'],\n+  volcengine: ['doubao'],\n+  zeroone: ['yi-'],\n+  zhipu: ['glm'],\n+} as const;\n+\n+/**\n+ * \u68c0\u6d4b\u5355\u4e2a\u6a21\u578b\u7684\u63d0\u4f9b\u5546\u7c7b\u578b\n+ * @param modelId \u6a21\u578bID\n+ * @returns \u68c0\u6d4b\u5230\u7684\u63d0\u4f9b\u5546\u914d\u7f6e\u952e\u540d\uff0c\u9ed8\u8ba4\u4e3a 'openai'\n+ */\n+export const detectModelProvider = (modelId: string): keyof typeof MODEL_CONFIGS => {\n+  const lowerModelId = modelId.toLowerCase();\n+  \n+  for (const [provider, keywords] of Object.entries(PROVIDER_DETECTION_CONFIG)) {\n+    const hasKeyword = keywords.some(keyword => lowerModelId.includes(keyword));\n+    \n+    if (hasKeyword && provider in MODEL_CONFIGS) {\n+      return provider as keyof typeof MODEL_CONFIGS;\n+    }\n+  }\n+  \n+  return 'openai';\n+};\n+\n+/**\n+ * \u5904\u7406\u6a21\u578b\u5361\u7247\u7684\u901a\u7528\u903b\u8f91\n+ */\n+const processModelCard = (",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2106249194",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 7916,
        "pr_file": "src/libs/model-runtime/utils/modelParse.ts",
        "discussion_id": "2106249194",
        "commented_code": "@@ -0,0 +1,167 @@\n+import type { ChatModelCard } from '@/types/llm';\n+\n+export interface ModelProcessorConfig {\n+  excludeKeywords?: readonly string[];\n+  functionCallKeywords: readonly string[];\n+  reasoningKeywords: readonly string[];\n+  visionKeywords: readonly string[];\n+}\n+\n+// \u6a21\u578b\u6807\u7b7e\u5173\u952e\u8bcd\u914d\u7f6e\n+export const MODEL_CONFIGS = {\n+  anthropic: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['claude'],\n+    reasoningKeywords: ['-3-7-', '-4-'],\n+    visionKeywords: ['claude'],\n+  },\n+  deepseek: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['v3'],\n+    reasoningKeywords: ['r1'],\n+    visionKeywords: [],\n+  },\n+  google: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['gemini'],\n+    reasoningKeywords: ['thinking', '-2.5-'],\n+    visionKeywords: ['gemini', 'learnlm'],\n+  },\n+  openai: {\n+    excludeKeywords: ['audio'],\n+    functionCallKeywords: ['4o', '4.1', 'o3', 'o4'],\n+    reasoningKeywords: ['o1', 'o3', 'o4'],\n+    visionKeywords: ['4o', '4.1', 'o4'],\n+  },\n+  volcengine: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['doubao-1.5'],\n+    reasoningKeywords: ['thinking', '-r1'],\n+    visionKeywords: ['vision', '-m'],\n+  },\n+  zeroone: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['fc'],\n+    reasoningKeywords: [],\n+    visionKeywords: ['vision'],\n+  },\n+  zhipu: {\n+    excludeKeywords: [],\n+    functionCallKeywords: ['glm-4'],\n+    reasoningKeywords: ['glm-zero', 'glm-z1'],\n+    visionKeywords: ['glm-4v'],\n+  },\n+} as const;\n+\n+// \u6a21\u578b\u63d0\u4f9b\u5546\u5173\u952e\u8bcd\u914d\u7f6e\n+export const PROVIDER_DETECTION_CONFIG = {\n+  anthropic: ['claude'],\n+  deepseek: ['deepseek'],\n+  google: ['gemini'],\n+  openai: ['o1', 'o3', 'o4', 'gpt-'],\n+  volcengine: ['doubao'],\n+  zeroone: ['yi-'],\n+  zhipu: ['glm'],\n+} as const;\n+\n+/**\n+ * \u68c0\u6d4b\u5355\u4e2a\u6a21\u578b\u7684\u63d0\u4f9b\u5546\u7c7b\u578b\n+ * @param modelId \u6a21\u578bID\n+ * @returns \u68c0\u6d4b\u5230\u7684\u63d0\u4f9b\u5546\u914d\u7f6e\u952e\u540d\uff0c\u9ed8\u8ba4\u4e3a 'openai'\n+ */\n+export const detectModelProvider = (modelId: string): keyof typeof MODEL_CONFIGS => {\n+  const lowerModelId = modelId.toLowerCase();\n+  \n+  for (const [provider, keywords] of Object.entries(PROVIDER_DETECTION_CONFIG)) {\n+    const hasKeyword = keywords.some(keyword => lowerModelId.includes(keyword));\n+    \n+    if (hasKeyword && provider in MODEL_CONFIGS) {\n+      return provider as keyof typeof MODEL_CONFIGS;\n+    }\n+  }\n+  \n+  return 'openai';\n+};\n+\n+/**\n+ * \u5904\u7406\u6a21\u578b\u5361\u7247\u7684\u901a\u7528\u903b\u8f91\n+ */\n+const processModelCard = (",
        "comment_created_at": "2025-05-25T16:35:36+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u8fd9\u51e0\u4e2a\u5904\u7406\u65b9\u6cd5\u9700\u8981\u8865\u4e00\u4e0b\u5355\u6d4b",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1678761192",
    "pr_number": 2935,
    "pr_file": "src/libs/next-auth/adapter/index.ts",
    "created_at": "2024-07-16T05:03:12+00:00",
    "commented_code": null,
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1678761192",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 2935,
        "pr_file": "src/libs/next-auth/adapter/index.ts",
        "discussion_id": "1678761192",
        "commented_code": null,
        "comment_created_at": "2024-07-16T05:03:12+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u8fd9\u4e2a\u6587\u4ef6\u770b\u4e0a\u53bb\u662f next-auth db \u7684\u6838\u5fc3\u903b\u8f91\u6a21\u5757\uff0c\u9700\u8981\u8865\u5145\u5355\u6d4b",
        "pr_file_module": null
      },
      {
        "comment_id": "1682367549",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 2935,
        "pr_file": "src/libs/next-auth/adapter/index.ts",
        "discussion_id": "1678761192",
        "commented_code": null,
        "comment_created_at": "2024-07-18T07:45:40+00:00",
        "comment_author": "cy948",
        "comment_body": "\u8865\u5728\u4e86 `src/database/server/models/__tests__/nextauth.test.ts`\uff0c\u53ef\u4ee5\u968f `pnpm test-server` \u8fd0\u884c",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1750679969",
    "pr_number": 3810,
    "pr_file": "src/libs/agent-runtime/utils/streams/bedrock/mistral.ts",
    "created_at": "2024-09-09T17:52:31+00:00",
    "commented_code": null,
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1750679969",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 3810,
        "pr_file": "src/libs/agent-runtime/utils/streams/bedrock/mistral.ts",
        "discussion_id": "1750679969",
        "commented_code": null,
        "comment_created_at": "2024-09-09T17:52:31+00:00",
        "comment_author": "arvinxx",
        "comment_body": "stream \u7684\u90e8\u5206\u9700\u8981\u8865\u5355\u6d4b\uff0c\u4e0d\u52a0\u7684\u8bdd\u57fa\u672c\u4e0a\u8fc7\u6bb5\u65f6\u95f4\u5c31\u770b\u4e0d\u61c2\u4e86\u3002\r\n\r\n\u53c2\u8003 https://github.com/hezhijie0327/lobe-chat/blob/bedrock_mistral/src/libs/agent-runtime/utils/streams/openai.test.ts \uff0c\u52a0\u4e00\u4e2a\u57fa\u7840\u7684 text \u548c\u4e00\u4e2a tools \u7684",
        "pr_file_module": null
      },
      {
        "comment_id": "1751143353",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 3810,
        "pr_file": "src/libs/agent-runtime/utils/streams/bedrock/mistral.ts",
        "discussion_id": "1750679969",
        "commented_code": null,
        "comment_created_at": "2024-09-10T02:00:20+00:00",
        "comment_author": "hezhijie0327",
        "comment_body": "\u52a0\u4e0a\u4e86",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1667596202",
    "pr_number": 3098,
    "pr_file": "src/libs/agent-runtime/utils/openaiCompatibleFactory/index.ts",
    "created_at": "2024-07-07T02:57:47+00:00",
    "commented_code": "} as OpenAI.ChatCompletionCreateParamsStreaming);\n \n         const response = await this.client.chat.completions.create(\n-          { ...postPayload, user: options?.user },\n+          {\n+            ...postPayload,\n+            ...(chatCompletion?.noUserId ? {} : { user: options?.user })",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1667596202",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 3098,
        "pr_file": "src/libs/agent-runtime/utils/openaiCompatibleFactory/index.ts",
        "discussion_id": "1667596202",
        "commented_code": "@@ -85,7 +86,10 @@ export const LobeOpenAICompatibleFactory = ({\n             } as OpenAI.ChatCompletionCreateParamsStreaming);\n \n         const response = await this.client.chat.completions.create(\n-          { ...postPayload, user: options?.user },\n+          {\n+            ...postPayload,\n+            ...(chatCompletion?.noUserId ? {} : { user: options?.user }) ",
        "comment_created_at": "2024-07-07T02:57:47+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u8fd9\u4e00\u884c\u5f97\u8865\u4e00\u4e2a\u5355\u6d4b",
        "pr_file_module": null
      },
      {
        "comment_id": "1667664373",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 3098,
        "pr_file": "src/libs/agent-runtime/utils/openaiCompatibleFactory/index.ts",
        "discussion_id": "1667596202",
        "commented_code": "@@ -85,7 +86,10 @@ export const LobeOpenAICompatibleFactory = ({\n             } as OpenAI.ChatCompletionCreateParamsStreaming);\n \n         const response = await this.client.chat.completions.create(\n-          { ...postPayload, user: options?.user },\n+          {\n+            ...postPayload,\n+            ...(chatCompletion?.noUserId ? {} : { user: options?.user }) ",
        "comment_created_at": "2024-07-07T10:36:08+00:00",
        "comment_author": "hezhijie0327",
        "comment_body": "\u52a0\u4e0a\u4e86\uff0c\u6d4b\u8bd5\u9879\u76ee\u5982\u4e0b\uff1a\r\n```\r\n1. noUserId: true -> not contain \"testUser\"\r\n2. noUserId: false -> contain \"testUser\"\r\n3. \u4e0d\u6307\u5b9a noUserId -> contain \"testUser\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1571122326",
    "pr_number": 2041,
    "pr_file": "src/app/api/chat/[provider]/route.test.ts",
    "created_at": "2024-04-18T17:21:47+00:00",
    "commented_code": "const response = await POST(request as unknown as Request, { params: mockParams });\n \n       expect(response).toEqual(mockChatResponse);\n-      expect(AgentRuntime.prototype.chat).toHaveBeenCalledWith(mockChatPayload, {\n-        provider: 'test-provider',",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1571122326",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 2041,
        "pr_file": "src/app/api/chat/[provider]/route.test.ts",
        "discussion_id": "1571122326",
        "commented_code": "@@ -110,9 +111,7 @@ describe('POST handler', () => {\n       const response = await POST(request as unknown as Request, { params: mockParams });\n \n       expect(response).toEqual(mockChatResponse);\n-      expect(AgentRuntime.prototype.chat).toHaveBeenCalledWith(mockChatPayload, {\n-        provider: 'test-provider',",
        "comment_created_at": "2024-04-18T17:21:47+00:00",
        "comment_author": "cy948",
        "comment_body": "\u539f `agentRuntime.chat(param1,param2)` \u8c03\u7528\u4e24\u4e2a\u53c2\u6570\uff0c\u73b0\u5728\u82e5\u4e0d\u542f\u7528 trace \uff08\u5982\u672c\u6d4b\u8bd5 case \uff09\uff0c\u5219\u53ea\u8c03\u7528\u4e00\u4e2a `agentRuntime.chat(param)`\uff0c\u6545\u5220\u6389\u5bf9\u7b2c\u4e8c\u4e2a\u8c03\u7528\u53c2\u6570\u7684 expect",
        "pr_file_module": null
      },
      {
        "comment_id": "1571662061",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 2041,
        "pr_file": "src/app/api/chat/[provider]/route.test.ts",
        "discussion_id": "1571122326",
        "commented_code": "@@ -110,9 +111,7 @@ describe('POST handler', () => {\n       const response = await POST(request as unknown as Request, { params: mockParams });\n \n       expect(response).toEqual(mockChatResponse);\n-      expect(AgentRuntime.prototype.chat).toHaveBeenCalledWith(mockChatPayload, {\n-        provider: 'test-provider',",
        "comment_created_at": "2024-04-19T02:25:17+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u90a3\u8fd8\u9700\u8981\u591a\u4e00\u4e2a\u542f\u7528 trace \u7684\u5355\u6d4b\u4e86",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1593778057",
    "pr_number": 2429,
    "pr_file": "src/libs/agent-runtime/azureOpenai/index.ts",
    "created_at": "2024-05-08T10:05:29+00:00",
    "commented_code": "// ============  1. preprocess messages   ============ //\n     const { messages, model, ...params } = payload;\n \n+    // fix the issue: \"The sample encountered an error: TypeError: Cannot read properties of undefined (reading 'url')\"\n+    messages.forEach(message => {",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1593778057",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 2429,
        "pr_file": "src/libs/agent-runtime/azureOpenai/index.ts",
        "discussion_id": "1593778057",
        "commented_code": "@@ -30,6 +30,18 @@ export class LobeAzureOpenAI implements LobeRuntimeAI {\n     // ============  1. preprocess messages   ============ //\n     const { messages, model, ...params } = payload;\n \n+    // fix the issue: \"The sample encountered an error: TypeError: Cannot read properties of undefined (reading 'url')\"\n+    messages.forEach(message => {",
        "comment_created_at": "2024-05-08T10:05:29+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u8bf7\u53c2\u8003 https://github.com/lobehub/lobe-chat/blob/main/src/libs/agent-runtime/google/index.ts#L135-L172 \u8fd9\u91cc\uff0c\u521b\u5efa\u4e00\u4e2a\u79c1\u6709\u65b9\u6cd5\u6765\u505a\u6570\u636e\u7ed3\u6784\u7684\u8f6c\u6362\uff0c\u8fd9\u6837\u4f1a\u5e72\u51c0\u4e00\u4e9b\u3002\u7136\u540e\u9700\u8981\u8865\u5145\u4e00\u4e0b\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\u8f6c\u6362\u7684\u5355\u5143\u6d4b\u8bd5",
        "pr_file_module": null
      },
      {
        "comment_id": "1594872901",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 2429,
        "pr_file": "src/libs/agent-runtime/azureOpenai/index.ts",
        "discussion_id": "1593778057",
        "commented_code": "@@ -30,6 +30,18 @@ export class LobeAzureOpenAI implements LobeRuntimeAI {\n     // ============  1. preprocess messages   ============ //\n     const { messages, model, ...params } = payload;\n \n+    // fix the issue: \"The sample encountered an error: TypeError: Cannot read properties of undefined (reading 'url')\"\n+    messages.forEach(message => {",
        "comment_created_at": "2024-05-09T01:53:35+00:00",
        "comment_author": "AnoyiX",
        "comment_body": "\u55ef\u55ef",
        "pr_file_module": null
      }
    ]
  }
]