[
  {
    "discussion_id": "2070298541",
    "pr_number": 7660,
    "pr_file": "src/libs/agent-runtime/utils/streams/qwen.ts",
    "created_at": "2025-05-01T13:56:28+00:00",
    "commented_code": "export const QwenAIStream = (\n   stream: Stream<OpenAI.ChatCompletionChunk> | ReadableStream,\n   callbacks?: ChatStreamCallbacks,\n+  inputStartAt?: number,",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2070298541",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 7660,
        "pr_file": "src/libs/agent-runtime/utils/streams/qwen.ts",
        "discussion_id": "2070298541",
        "commented_code": "@@ -93,11 +113,16 @@ export const transformQwenStream = (chunk: OpenAI.ChatCompletionChunk): StreamPr\n export const QwenAIStream = (\n   stream: Stream<OpenAI.ChatCompletionChunk> | ReadableStream,\n   callbacks?: ChatStreamCallbacks,\n+  inputStartAt?: number,",
        "comment_created_at": "2025-05-01T13:56:28+00:00",
        "comment_author": "cy948",
        "comment_body": "`inputStartAt` \u4f20\u5165\u50cf\u8fd9\u4e2a\u53d8\u66f4\u90a3\u6837\uff0c\u548c callbacks \u5408\u5e76\u6210\u4e00\u4e2a\u5bf9\u8c61\uff1f\r\n\r\n![image](https://github.com/user-attachments/assets/75797df9-1826-4a2b-8dc3-315301fdf354)\r\n\r\nhttps://github.com/lobehub/lobe-chat/pull/7501/files#diff-e11cd54414ed72e00282aa32cd9ae868a0e918431cde68c2e9005e478a14afce\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019750382",
    "pr_number": 7152,
    "pr_file": "src/server/routers/lambda/user.ts",
    "created_at": "2025-03-29T08:13:19+00:00",
    "commented_code": "}\n   }),\n \n+  // \u670d\u52a1\u7aef\u4e0a\u4f20\u5934\u50cf\n+  updateAvatar: userProcedure.input(z.string()).mutation(async ({ ctx, input }) => {\n+    // \u5982\u679c\u662f Base64 \u6570\u636e\uff0c\u9700\u8981\u4e0a\u4f20\u5230 S3\n+    if (input.startsWith('data:image')) {\n+      try {\n+        // \u63d0\u53d6 mimeType\uff0c\u4f8b\u5982 \"image/png\"\n+        const prefix = 'data:';\n+        const semicolonIndex = input.indexOf(';');\n+        const mimeType =\n+          semicolonIndex !== -1 ? input.slice(prefix.length, semicolonIndex) : 'image/png';\n+        const fileType = mimeType.split('/')[1];\n+\n+        // \u5206\u5272\u5b57\u7b26\u4e32\uff0c\u83b7\u53d6 Base64 \u90e8\u5206\n+        const commaIndex = input.indexOf(',');\n+        if (commaIndex === -1) {\n+          throw new Error('Invalid Base64 data');\n+        }\n+        const base64Data = input.slice(commaIndex + 1);\n+\n+        // \u521b\u5efa S3 \u5ba2\u6237\u7aef\n+        const s3 = new S3();\n+\n+        // \u4f7f\u7528\u56fa\u5b9a\u6587\u4ef6\u540d\uff0c\u786e\u4fdd\u6bcf\u4e2a\u7528\u6237\u53ea\u6709\u4e00\u4e2a\u5934\u50cf\uff08\u76f4\u63a5\u8986\u76d6\uff09\n+        const fileName = `avatar.${fileType}`;\n+        const filePath = `users/avatars/${ctx.userId}/${fileName}`;\n+\n+        // \u5c06 Base64 \u6570\u636e\u8f6c\u6362\u4e3a Buffer \u518d\u4e0a\u4f20\u5230 S3\n+        const buffer = Buffer.from(base64Data, 'base64');\n+\n+        await s3.uploadBuffer(filePath, buffer, mimeType);\n+\n+        // \u83b7\u53d6\u516c\u5171\u8bbf\u95ee URL\n+        let avatarUrl = '';\n+\n+        if (fileEnv.S3_PUBLIC_DOMAIN) {",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2019750382",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 7152,
        "pr_file": "src/server/routers/lambda/user.ts",
        "discussion_id": "2019750382",
        "commented_code": "@@ -123,6 +126,60 @@ export const userRouter = router({\n     }\n   }),\n \n+  // \u670d\u52a1\u7aef\u4e0a\u4f20\u5934\u50cf\n+  updateAvatar: userProcedure.input(z.string()).mutation(async ({ ctx, input }) => {\n+    // \u5982\u679c\u662f Base64 \u6570\u636e\uff0c\u9700\u8981\u4e0a\u4f20\u5230 S3\n+    if (input.startsWith('data:image')) {\n+      try {\n+        // \u63d0\u53d6 mimeType\uff0c\u4f8b\u5982 \"image/png\"\n+        const prefix = 'data:';\n+        const semicolonIndex = input.indexOf(';');\n+        const mimeType =\n+          semicolonIndex !== -1 ? input.slice(prefix.length, semicolonIndex) : 'image/png';\n+        const fileType = mimeType.split('/')[1];\n+\n+        // \u5206\u5272\u5b57\u7b26\u4e32\uff0c\u83b7\u53d6 Base64 \u90e8\u5206\n+        const commaIndex = input.indexOf(',');\n+        if (commaIndex === -1) {\n+          throw new Error('Invalid Base64 data');\n+        }\n+        const base64Data = input.slice(commaIndex + 1);\n+\n+        // \u521b\u5efa S3 \u5ba2\u6237\u7aef\n+        const s3 = new S3();\n+\n+        // \u4f7f\u7528\u56fa\u5b9a\u6587\u4ef6\u540d\uff0c\u786e\u4fdd\u6bcf\u4e2a\u7528\u6237\u53ea\u6709\u4e00\u4e2a\u5934\u50cf\uff08\u76f4\u63a5\u8986\u76d6\uff09\n+        const fileName = `avatar.${fileType}`;\n+        const filePath = `users/avatars/${ctx.userId}/${fileName}`;\n+\n+        // \u5c06 Base64 \u6570\u636e\u8f6c\u6362\u4e3a Buffer \u518d\u4e0a\u4f20\u5230 S3\n+        const buffer = Buffer.from(base64Data, 'base64');\n+\n+        await s3.uploadBuffer(filePath, buffer, mimeType);\n+\n+        // \u83b7\u53d6\u516c\u5171\u8bbf\u95ee URL\n+        let avatarUrl = '';\n+\n+        if (fileEnv.S3_PUBLIC_DOMAIN) {",
        "comment_created_at": "2025-03-29T08:13:19+00:00",
        "comment_author": "arvinxx",
        "comment_body": "there is a util to get s3 url `getFullFileUrl`. please replace with this method",
        "pr_file_module": null
      },
      {
        "comment_id": "2019775331",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 7152,
        "pr_file": "src/server/routers/lambda/user.ts",
        "discussion_id": "2019750382",
        "commented_code": "@@ -123,6 +126,60 @@ export const userRouter = router({\n     }\n   }),\n \n+  // \u670d\u52a1\u7aef\u4e0a\u4f20\u5934\u50cf\n+  updateAvatar: userProcedure.input(z.string()).mutation(async ({ ctx, input }) => {\n+    // \u5982\u679c\u662f Base64 \u6570\u636e\uff0c\u9700\u8981\u4e0a\u4f20\u5230 S3\n+    if (input.startsWith('data:image')) {\n+      try {\n+        // \u63d0\u53d6 mimeType\uff0c\u4f8b\u5982 \"image/png\"\n+        const prefix = 'data:';\n+        const semicolonIndex = input.indexOf(';');\n+        const mimeType =\n+          semicolonIndex !== -1 ? input.slice(prefix.length, semicolonIndex) : 'image/png';\n+        const fileType = mimeType.split('/')[1];\n+\n+        // \u5206\u5272\u5b57\u7b26\u4e32\uff0c\u83b7\u53d6 Base64 \u90e8\u5206\n+        const commaIndex = input.indexOf(',');\n+        if (commaIndex === -1) {\n+          throw new Error('Invalid Base64 data');\n+        }\n+        const base64Data = input.slice(commaIndex + 1);\n+\n+        // \u521b\u5efa S3 \u5ba2\u6237\u7aef\n+        const s3 = new S3();\n+\n+        // \u4f7f\u7528\u56fa\u5b9a\u6587\u4ef6\u540d\uff0c\u786e\u4fdd\u6bcf\u4e2a\u7528\u6237\u53ea\u6709\u4e00\u4e2a\u5934\u50cf\uff08\u76f4\u63a5\u8986\u76d6\uff09\n+        const fileName = `avatar.${fileType}`;\n+        const filePath = `users/avatars/${ctx.userId}/${fileName}`;\n+\n+        // \u5c06 Base64 \u6570\u636e\u8f6c\u6362\u4e3a Buffer \u518d\u4e0a\u4f20\u5230 S3\n+        const buffer = Buffer.from(base64Data, 'base64');\n+\n+        await s3.uploadBuffer(filePath, buffer, mimeType);\n+\n+        // \u83b7\u53d6\u516c\u5171\u8bbf\u95ee URL\n+        let avatarUrl = '';\n+\n+        if (fileEnv.S3_PUBLIC_DOMAIN) {",
        "comment_created_at": "2025-03-29T11:04:48+00:00",
        "comment_author": "RICHQAQ",
        "comment_body": "I use the `getFullFileUrl` now",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2039757763",
    "pr_number": 6959,
    "pr_file": "src/libs/agent-runtime/anthropic/index.ts",
    "created_at": "2025-04-11T15:22:35+00:00",
    "commented_code": "debugStream(debug.toReadableStream()).catch(console.error);\n       }\n \n-      return StreamingResponse(AnthropicStream(prod, options?.callback), {\n-        headers: options?.headers,\n-      });\n+      return StreamingResponse(\n+        AnthropicStream(prod, { callbacks: options?.callback }, { inputStartAt }),",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2039757763",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 6959,
        "pr_file": "src/libs/agent-runtime/anthropic/index.ts",
        "discussion_id": "2039757763",
        "commented_code": "@@ -79,9 +80,12 @@ export class LobeAnthropicAI implements LobeRuntimeAI {\n         debugStream(debug.toReadableStream()).catch(console.error);\n       }\n \n-      return StreamingResponse(AnthropicStream(prod, options?.callback), {\n-        headers: options?.headers,\n-      });\n+      return StreamingResponse(\n+        AnthropicStream(prod, { callbacks: options?.callback }, { inputStartAt }),",
        "comment_created_at": "2025-04-11T15:22:35+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u8fd9\u4e2a inputStartAt \u653e\u5728\u548c callbacks \u540c\u7ea7\u53d8\u91cf\u91cc\uff0c\u7b2c\u4e8c\u4e2a\u5165\u53c2\u505a\u6210obj\u5c31\u662f\u4e3a\u4e86\u540e\u7eed\u80fd\u591f\u6269\u5c55\u7684",
        "pr_file_module": null
      },
      {
        "comment_id": "2040598654",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 6959,
        "pr_file": "src/libs/agent-runtime/anthropic/index.ts",
        "discussion_id": "2039757763",
        "commented_code": "@@ -79,9 +80,12 @@ export class LobeAnthropicAI implements LobeRuntimeAI {\n         debugStream(debug.toReadableStream()).catch(console.error);\n       }\n \n-      return StreamingResponse(AnthropicStream(prod, options?.callback), {\n-        headers: options?.headers,\n-      });\n+      return StreamingResponse(\n+        AnthropicStream(prod, { callbacks: options?.callback }, { inputStartAt }),",
        "comment_created_at": "2025-04-12T07:40:17+00:00",
        "comment_author": "cy948",
        "comment_body": "anthropic \u548c openai \u7684\u90fd\u653e\u5230 callbacks \u540c\u7ea7\u53d8\u91cf\u91cc\u4e86",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2004655908",
    "pr_number": 6813,
    "pr_file": "src/server/routers/tools/search.ts",
    "created_at": "2025-03-20T01:56:30+00:00",
    "commented_code": null,
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2004655908",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 6813,
        "pr_file": "src/server/routers/tools/search.ts",
        "discussion_id": "2004655908",
        "commented_code": null,
        "comment_created_at": "2025-03-20T01:56:30+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u90fd3\u4e2a\u53c2\u6570\u4e86\uff0c\u611f\u89c9\u53ef\u4ee5\u628a search \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6539\u6210 params ?\u8fd9\u6837\u672a\u6765\u6709\u5176\u4ed6\u53c2\u6570\u5c31\u4e0d\u7528\u518d\u989d\u5916\u52a0\u4e86",
        "pr_file_module": null
      },
      {
        "comment_id": "2005478097",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 6813,
        "pr_file": "src/server/routers/tools/search.ts",
        "discussion_id": "2004655908",
        "commented_code": null,
        "comment_created_at": "2025-03-20T12:03:46+00:00",
        "comment_author": "hezhijie0327",
        "comment_body": "\u5df2\u5c06\u975e\u5fc5\u8981\u53c2\u6570\u79fb\u52a8\u81f3 `optionalParams`\r\n\r\n```\r\n{\r\n  \"query\": \"\u4e0a\u6d77\u4eca\u65e5\u65b0\u95fb\",\r\n  \"optionalParams\": {\r\n    \"searchEngines\": [\r\n      \"google\",\r\n      \"duckduckgo\"\r\n    ],\r\n    \"searchTimeRange\": \"anytime\"\r\n  }\r\n}\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1893877671",
    "pr_number": 5099,
    "pr_file": "src/libs/agent-runtime/huggingface/index.ts",
    "created_at": "2024-12-20T12:24:37+00:00",
    "commented_code": "createChatCompletionStream: (client: HfInference, payload, instance) => {\n       const { max_tokens = 4096} = payload;\n       const hfRes = client.chatCompletionStream({\n-        endpointUrl: instance.baseURL,\n+        endpointUrl: instance.baseURL\n+          ? instance.baseURL + '/' + payload.model",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1893877671",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 5099,
        "pr_file": "src/libs/agent-runtime/huggingface/index.ts",
        "discussion_id": "1893877671",
        "commented_code": "@@ -23,7 +23,9 @@ export const LobeHuggingFaceAI = LobeOpenAICompatibleFactory({\n     createChatCompletionStream: (client: HfInference, payload, instance) => {\n       const { max_tokens = 4096} = payload;\n       const hfRes = client.chatCompletionStream({\n-        endpointUrl: instance.baseURL,\n+        endpointUrl: instance.baseURL\n+          ? instance.baseURL + '/' + payload.model",
        "comment_created_at": "2024-12-20T12:24:37+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u4f7f\u7528 urlJoin \u65b9\u6cd5\uff0c\u4e0d\u8981\u624b\u52a8\u62fc\u63a5\u3002 urlJoin \u4f1a\u81ea\u52a8\u5904\u7406\u6389 baseURL \u4ee5 `/` \u7ed3\u5c3e\u7684\u60c5\u51b5\uff0c\u66f4\u52a0\u5065\u58ee",
        "pr_file_module": null
      },
      {
        "comment_id": "1893909914",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 5099,
        "pr_file": "src/libs/agent-runtime/huggingface/index.ts",
        "discussion_id": "1893877671",
        "commented_code": "@@ -23,7 +23,9 @@ export const LobeHuggingFaceAI = LobeOpenAICompatibleFactory({\n     createChatCompletionStream: (client: HfInference, payload, instance) => {\n       const { max_tokens = 4096} = payload;\n       const hfRes = client.chatCompletionStream({\n-        endpointUrl: instance.baseURL,\n+        endpointUrl: instance.baseURL\n+          ? instance.baseURL + '/' + payload.model",
        "comment_created_at": "2024-12-20T12:56:28+00:00",
        "comment_author": "chai-mi",
        "comment_body": "\u5df2\u66f4\u6539",
        "pr_file_module": null
      }
    ]
  }
]