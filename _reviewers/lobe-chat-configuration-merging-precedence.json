[
  {
    "discussion_id": "2019750216",
    "pr_number": 7152,
    "pr_file": "src/layout/AuthProvider/NextAuth/UserUpdater.tsx",
    "created_at": "2025-03-29T08:11:53+00:00",
    "commented_code": "const nextUser = session?.user;\n   const useStoreUpdater = createStoreUpdater(useUserStore);\n \n-  const lobeUser = {\n-    avatar: nextUser?.image,\n-    email: nextUser?.email,\n-    fullName: nextUser?.name,\n-    id: nextUser?.id,\n-  } as LobeUser;\n-\n   useStoreUpdater('isLoaded', isLoaded);\n-  useStoreUpdater('user', lobeUser);\n   useStoreUpdater('isSignedIn', isSignedIn);\n-\n   useStoreUpdater('nextSession', session);\n-  useStoreUpdater('nextUser', nextUser);\n \n+  // \u4f7f\u7528 useEffect \u5904\u7406\u9700\u8981\u4fdd\u6301\u540c\u6b65\u7684\u7528\u6237\u6570\u636e\n+  useEffect(() => {\n+    if (nextUser) {\n+      const userAvatar = useUserStore.getState().user?.avatar;\n+\n+      const lobeUser = {\n+        // \u5934\u50cf\u4f7f\u7528\u8bbe\u7f6e\u7684\uff0c\u800c\u4e0d\u662f\u4ece next-auth \u4e2d\u83b7\u53d6\n+        avatar: userAvatar || '',",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2019750216",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 7152,
        "pr_file": "src/layout/AuthProvider/NextAuth/UserUpdater.tsx",
        "discussion_id": "2019750216",
        "commented_code": "@@ -17,20 +17,30 @@ const UserUpdater = memo(() => {\n   const nextUser = session?.user;\n   const useStoreUpdater = createStoreUpdater(useUserStore);\n \n-  const lobeUser = {\n-    avatar: nextUser?.image,\n-    email: nextUser?.email,\n-    fullName: nextUser?.name,\n-    id: nextUser?.id,\n-  } as LobeUser;\n-\n   useStoreUpdater('isLoaded', isLoaded);\n-  useStoreUpdater('user', lobeUser);\n   useStoreUpdater('isSignedIn', isSignedIn);\n-\n   useStoreUpdater('nextSession', session);\n-  useStoreUpdater('nextUser', nextUser);\n \n+  // \u4f7f\u7528 useEffect \u5904\u7406\u9700\u8981\u4fdd\u6301\u540c\u6b65\u7684\u7528\u6237\u6570\u636e\n+  useEffect(() => {\n+    if (nextUser) {\n+      const userAvatar = useUserStore.getState().user?.avatar;\n+\n+      const lobeUser = {\n+        // \u5934\u50cf\u4f7f\u7528\u8bbe\u7f6e\u7684\uff0c\u800c\u4e0d\u662f\u4ece next-auth \u4e2d\u83b7\u53d6\n+        avatar: userAvatar || '',",
        "comment_created_at": "2025-03-29T08:11:53+00:00",
        "comment_author": "arvinxx",
        "comment_body": "should use userAvatar first and then fallback to next-auth",
        "pr_file_module": null
      },
      {
        "comment_id": "2019761198",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 7152,
        "pr_file": "src/layout/AuthProvider/NextAuth/UserUpdater.tsx",
        "discussion_id": "2019750216",
        "commented_code": "@@ -17,20 +17,30 @@ const UserUpdater = memo(() => {\n   const nextUser = session?.user;\n   const useStoreUpdater = createStoreUpdater(useUserStore);\n \n-  const lobeUser = {\n-    avatar: nextUser?.image,\n-    email: nextUser?.email,\n-    fullName: nextUser?.name,\n-    id: nextUser?.id,\n-  } as LobeUser;\n-\n   useStoreUpdater('isLoaded', isLoaded);\n-  useStoreUpdater('user', lobeUser);\n   useStoreUpdater('isSignedIn', isSignedIn);\n-\n   useStoreUpdater('nextSession', session);\n-  useStoreUpdater('nextUser', nextUser);\n \n+  // \u4f7f\u7528 useEffect \u5904\u7406\u9700\u8981\u4fdd\u6301\u540c\u6b65\u7684\u7528\u6237\u6570\u636e\n+  useEffect(() => {\n+    if (nextUser) {\n+      const userAvatar = useUserStore.getState().user?.avatar;\n+\n+      const lobeUser = {\n+        // \u5934\u50cf\u4f7f\u7528\u8bbe\u7f6e\u7684\uff0c\u800c\u4e0d\u662f\u4ece next-auth \u4e2d\u83b7\u53d6\n+        avatar: userAvatar || '',",
        "comment_created_at": "2025-03-29T09:29:32+00:00",
        "comment_author": "RICHQAQ",
        "comment_body": "I previously used: `avatar: userAvatar || nextUser.image || ''`.\r\n\r\nHowever, I noticed a user experience issue: when refreshing the page after updating the avatar, since nextUser.image still maintains the old value, there would be a momentary flash - showing the old avatar briefly before switching to the updated one.\r\n\r\nI considered two solutions:\r\n1. Use userAvatar directly while skipping nextUser.image, since during initial page load, `useInitUserState` reads the latest avatar from the database and saves it to the Store, which basically ensures userAvatar's availability. I've tested this and found no bugs.\r\n2. Synchronously update nextUser.image when the avatar is updated.\r\n\r\nI chose the first, as nextUser.image should preserve the original data from the identity provider, while custom uploaded avatars are provided through userAvatar.\r\n\r\nIf the reviewer thinks another implementation approach would be better, or has a better solution, I'm happy to make the corresponding adjustments.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1664560784",
    "pr_number": 3126,
    "pr_file": "src/layout/AuthProvider/Clerk/index.tsx",
    "created_at": "2024-07-03T17:54:31+00:00",
    "commented_code": "const localization = useMemo(() => getResourceBundle(language, 'clerk'), [language]);\n \n   return (\n-    <ClerkProvider appearance={appearance} localization={localization}>\n+    <ClerkProvider\n+      appearance={{\n+        ...appearance,\n+        elements: {\n+          ...appearance.elements,\n+          footerAction: !enableClerkSignUp ? { display: 'none' } : {}, // Conditionally hide sign-up link",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1664560784",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 3126,
        "pr_file": "src/layout/AuthProvider/Clerk/index.tsx",
        "discussion_id": "1664560784",
        "commented_code": "@@ -16,7 +21,17 @@ const Clerk = memo(({ children }: PropsWithChildren) => {\n   const localization = useMemo(() => getResourceBundle(language, 'clerk'), [language]);\n \n   return (\n-    <ClerkProvider appearance={appearance} localization={localization}>\n+    <ClerkProvider\n+      appearance={{\n+        ...appearance,\n+        elements: {\n+          ...appearance.elements,\n+          footerAction: !enableClerkSignUp ? { display: 'none' } : {}, // Conditionally hide sign-up link",
        "comment_created_at": "2024-07-03T17:54:31+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff0c\u5982\u679c appearance.elements \u91cc\u6709 footerAction \uff0c\u90a3\u4e48\u4f1a\u88ab\u540e\u9762\u90a3\u4e2a `{}` \u8986\u76d6\u3002",
        "pr_file_module": null
      },
      {
        "comment_id": "1664901653",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 3126,
        "pr_file": "src/layout/AuthProvider/Clerk/index.tsx",
        "discussion_id": "1664560784",
        "commented_code": "@@ -16,7 +21,17 @@ const Clerk = memo(({ children }: PropsWithChildren) => {\n   const localization = useMemo(() => getResourceBundle(language, 'clerk'), [language]);\n \n   return (\n-    <ClerkProvider appearance={appearance} localization={localization}>\n+    <ClerkProvider\n+      appearance={{\n+        ...appearance,\n+        elements: {\n+          ...appearance.elements,\n+          footerAction: !enableClerkSignUp ? { display: 'none' } : {}, // Conditionally hide sign-up link",
        "comment_created_at": "2024-07-03T23:18:24+00:00",
        "comment_author": "vegetablesB",
        "comment_body": "Updated",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1573323239",
    "pr_number": 1991,
    "pr_file": "src/features/PluginSettings/index.tsx",
    "created_at": "2024-04-20T15:48:04+00:00",
    "commented_code": "maximum={item.maximum}\n             minimum={item.minimum}\n             onChange={(value) => {\n-              updatePluginSettings(id, { [item.name]: value });\n+              updatePluginSettings(id, { ...pluginSetting, [item.name]: value });",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1573323239",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 1991,
        "pr_file": "src/features/PluginSettings/index.tsx",
        "discussion_id": "1573323239",
        "commented_code": "@@ -74,7 +74,7 @@ const PluginSettingsConfig = memo<PluginSettingsConfigProps>(({ schema, id }) =>\n             maximum={item.maximum}\n             minimum={item.minimum}\n             onChange={(value) => {\n-              updatePluginSettings(id, { [item.name]: value });\n+              updatePluginSettings(id, { ...pluginSetting, [item.name]: value });",
        "comment_created_at": "2024-04-20T15:48:04+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u5408\u5e76\u5e94\u8be5\u505a\u5728\u8fd9\u91cc\uff0c\u8fd8\u662f\u5e94\u8be5\u505a\u5230\u66f4\u52a0\u5e95\u5c42\u7684\u4f4d\u7f6e\uff1f",
        "pr_file_module": null
      },
      {
        "comment_id": "1581843892",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 1991,
        "pr_file": "src/features/PluginSettings/index.tsx",
        "discussion_id": "1573323239",
        "commented_code": "@@ -74,7 +74,7 @@ const PluginSettingsConfig = memo<PluginSettingsConfigProps>(({ schema, id }) =>\n             maximum={item.maximum}\n             minimum={item.minimum}\n             onChange={(value) => {\n-              updatePluginSettings(id, { [item.name]: value });\n+              updatePluginSettings(id, { ...pluginSetting, [item.name]: value });",
        "comment_created_at": "2024-04-27T15:02:44+00:00",
        "comment_author": "yanghanlin",
        "comment_body": "\u91cd\u65b0\u770b\u4e86\u4e0b\u786e\u5b9e\u5408\u5e76\u505a\u5230\u66f4\u5e95\u5c42\u4e00\u70b9\u7684 Zustand action \u5c42\u6bd4\u8f83\u5408\u9002\uff0c\u5982 `PreferenceAction#updatePreference`:\r\n\r\nhttps://github.com/lobehub/lobe-chat/blob/904a3dfa6483a94ffd5c5b4ec793622905856080/src/store/global/slices/preference/action.ts#L69-L75\r\n\r\n\u5df2\u66f4\u6539\u3002",
        "pr_file_module": null
      },
      {
        "comment_id": "1581844417",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 1991,
        "pr_file": "src/features/PluginSettings/index.tsx",
        "discussion_id": "1573323239",
        "commented_code": "@@ -74,7 +74,7 @@ const PluginSettingsConfig = memo<PluginSettingsConfigProps>(({ schema, id }) =>\n             maximum={item.maximum}\n             minimum={item.minimum}\n             onChange={(value) => {\n-              updatePluginSettings(id, { [item.name]: value });\n+              updatePluginSettings(id, { ...pluginSetting, [item.name]: value });",
        "comment_created_at": "2024-04-27T15:07:38+00:00",
        "comment_author": "yanghanlin",
        "comment_body": "\u53e6\u5916\u5982\u6b64\u6539\u52a8\u6709\u4e00\u4e2a\u526f\u4f5c\u7528\uff1aLobeChat Plugin SDK \u63d0\u4f9b\u7684\u63d2\u4ef6\u4fa7[\u4fee\u6539\u8bbe\u7f6e\u76f8\u5173 API](https://chat-plugin-sdk.lobehub.com/zh-CN/api/use-plugin-settings) \u4e5f\u4f9d\u8d56\u4e8e\u8fd9\u91cc\u7684\u903b\u8f91\uff0c\u56e0\u6b64\u8be5 API \u7684\u884c\u4e3a\u4e5f\u4f1a\u4ece\u5168\u91cf\u66f4\u65b0\u63d2\u4ef6\u8bbe\u7f6e\u6539\u4e3a\u589e\u91cf\u66f4\u65b0\uff1b\u4f46\u76ee\u524d\u63d2\u4ef6\u5e02\u573a\u4e2d\u4f3c\u4e4e\u8fd8\u6ca1\u6709\u9700\u8981\u591a\u4e2a\u8bbe\u7f6e\u9879\u7684\u63d2\u4ef6\uff0c\u56e0\u6b64\u5f71\u54cd\u53ef\u63a7\u3002",
        "pr_file_module": null
      }
    ]
  }
]