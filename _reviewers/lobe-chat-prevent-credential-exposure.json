[
  {
    "discussion_id": "2286960106",
    "pr_number": 8853,
    "pr_file": "src/app/[variants]/(main)/settings/provider/(detail)/comfyui/page.tsx",
    "created_at": "2025-08-20T05:03:53+00:00",
    "commented_code": "+'use client';\n+\n+import { Select } from '@lobehub/ui';\n+import { Form } from 'antd';\n+import { useTranslation } from 'react-i18next';\n+\n+import { FormInput, FormPassword } from '@/components/FormInput';\n+import KeyValueEditor from '@/components/KeyValueEditor';\n+import { ComfyUIProviderCard } from '@/config/modelProviders';\n+import { aiProviderSelectors, useAiInfraStore } from '@/store/aiInfra';\n+import { GlobalLLMProviderKey } from '@/types/user/settings';\n+\n+import { KeyVaultsConfigKey } from '../../const';\n+import { SkeletonInput } from '../../features/ProviderConfig';\n+import { ProviderItem } from '../../type';\n+import ProviderDetail from '../[id]';\n+\n+const providerKey: GlobalLLMProviderKey = 'comfyui';\n+\n+const useComfyUICard = (): ProviderItem => {\n+  const { t } = useTranslation('modelProvider');\n+  const form = Form.useFormInstance();\n+\n+  const isLoading = useAiInfraStore(aiProviderSelectors.isAiProviderConfigLoading(providerKey));\n+\n+  // Watch for auth type changes to enable conditional rendering\n+  const authType = Form.useWatch([KeyVaultsConfigKey, 'authType'], form) || 'none';\n+\n+  const authTypeOptions = [\n+    { label: t('comfyui.authType.options.none' as any), value: 'none' },\n+    { label: t('comfyui.authType.options.basic' as any), value: 'basic' },\n+    { label: t('comfyui.authType.options.bearer' as any), value: 'bearer' },\n+    { label: t('comfyui.authType.options.custom' as any), value: 'custom' },\n+  ];\n+\n+  const apiKeyItems = [\n+    // Base URL - Always shown\n+    {\n+      children: isLoading ? (\n+        <SkeletonInput />\n+      ) : (\n+        <FormInput placeholder={t('comfyui.baseURL.placeholder' as any)} />\n+      ),\n+      desc: t('comfyui.baseURL.desc' as any),\n+      label: t('comfyui.baseURL.title' as any),\n+      name: [KeyVaultsConfigKey, 'baseURL'],\n+    },\n+\n+    // Authentication Type Selector - Always shown\n+    {\n+      children: isLoading ? (\n+        <SkeletonInput />\n+      ) : (\n+        <Select\n+          allowClear={false}\n+          defaultValue=\"none\"\n+          options={authTypeOptions}\n+          placeholder={t('comfyui.authType.placeholder' as any)}\n+        />\n+      ),\n+      desc: t('comfyui.authType.desc' as any),\n+      label: t('comfyui.authType.title' as any),\n+      name: [KeyVaultsConfigKey, 'authType'],\n+    },\n+  ];\n+\n+  // Conditionally add fields based on auth type\n+  if (authType === 'basic') {\n+    apiKeyItems.push(\n+      {\n+        children: isLoading ? (\n+          <SkeletonInput />\n+        ) : (\n+          <FormInput\n+            autoComplete=\"username\"\n+            placeholder={t('comfyui.username.placeholder' as any)}\n+          />\n+        ),\n+        desc: t('comfyui.username.desc' as any),\n+        label: t('comfyui.username.title' as any),\n+        name: [KeyVaultsConfigKey, 'username'],\n+      },\n+      {\n+        children: isLoading ? (\n+          <SkeletonInput />\n+        ) : (\n+          <FormPassword\n+            autoComplete=\"new-password\"\n+            placeholder={t('comfyui.password.placeholder' as any)}\n+          />\n+        ),\n+        desc: t('comfyui.password.desc' as any),\n+        label: t('comfyui.password.title' as any),\n+        name: [KeyVaultsConfigKey, 'password'],\n+      },\n+    );\n+  }\n+\n+  if (authType === 'bearer') {\n+    apiKeyItems.push({\n+      children: isLoading ? (\n+        <SkeletonInput />\n+      ) : (\n+        <FormPassword\n+          autoComplete=\"new-password\"\n+          placeholder={t('comfyui.apiKey.placeholder' as any)}\n+        />\n+      ),\n+      desc: t('comfyui.apiKey.desc' as any),\n+      label: t('comfyui.apiKey.title' as any),\n+      name: [KeyVaultsConfigKey, 'apiKey'],\n+    });",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2286989548",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 8853,
        "pr_file": "src/app/[variants]/(main)/settings/provider/(detail)/comfyui/page.tsx",
        "discussion_id": "2286960106",
        "commented_code": "@@ -0,0 +1,146 @@\n+'use client';\n+\n+import { Select } from '@lobehub/ui';\n+import { Form } from 'antd';\n+import { useTranslation } from 'react-i18next';\n+\n+import { FormInput, FormPassword } from '@/components/FormInput';\n+import KeyValueEditor from '@/components/KeyValueEditor';\n+import { ComfyUIProviderCard } from '@/config/modelProviders';\n+import { aiProviderSelectors, useAiInfraStore } from '@/store/aiInfra';\n+import { GlobalLLMProviderKey } from '@/types/user/settings';\n+\n+import { KeyVaultsConfigKey } from '../../const';\n+import { SkeletonInput } from '../../features/ProviderConfig';\n+import { ProviderItem } from '../../type';\n+import ProviderDetail from '../[id]';\n+\n+const providerKey: GlobalLLMProviderKey = 'comfyui';\n+\n+const useComfyUICard = (): ProviderItem => {\n+  const { t } = useTranslation('modelProvider');\n+  const form = Form.useFormInstance();\n+\n+  const isLoading = useAiInfraStore(aiProviderSelectors.isAiProviderConfigLoading(providerKey));\n+\n+  // Watch for auth type changes to enable conditional rendering\n+  const authType = Form.useWatch([KeyVaultsConfigKey, 'authType'], form) || 'none';\n+\n+  const authTypeOptions = [\n+    { label: t('comfyui.authType.options.none' as any), value: 'none' },\n+    { label: t('comfyui.authType.options.basic' as any), value: 'basic' },\n+    { label: t('comfyui.authType.options.bearer' as any), value: 'bearer' },\n+    { label: t('comfyui.authType.options.custom' as any), value: 'custom' },\n+  ];\n+\n+  const apiKeyItems = [\n+    // Base URL - Always shown\n+    {\n+      children: isLoading ? (\n+        <SkeletonInput />\n+      ) : (\n+        <FormInput placeholder={t('comfyui.baseURL.placeholder' as any)} />\n+      ),\n+      desc: t('comfyui.baseURL.desc' as any),\n+      label: t('comfyui.baseURL.title' as any),\n+      name: [KeyVaultsConfigKey, 'baseURL'],\n+    },\n+\n+    // Authentication Type Selector - Always shown\n+    {\n+      children: isLoading ? (\n+        <SkeletonInput />\n+      ) : (\n+        <Select\n+          allowClear={false}\n+          defaultValue=\"none\"\n+          options={authTypeOptions}\n+          placeholder={t('comfyui.authType.placeholder' as any)}\n+        />\n+      ),\n+      desc: t('comfyui.authType.desc' as any),\n+      label: t('comfyui.authType.title' as any),\n+      name: [KeyVaultsConfigKey, 'authType'],\n+    },\n+  ];\n+\n+  // Conditionally add fields based on auth type\n+  if (authType === 'basic') {\n+    apiKeyItems.push(\n+      {\n+        children: isLoading ? (\n+          <SkeletonInput />\n+        ) : (\n+          <FormInput\n+            autoComplete=\"username\"\n+            placeholder={t('comfyui.username.placeholder' as any)}\n+          />\n+        ),\n+        desc: t('comfyui.username.desc' as any),\n+        label: t('comfyui.username.title' as any),\n+        name: [KeyVaultsConfigKey, 'username'],\n+      },\n+      {\n+        children: isLoading ? (\n+          <SkeletonInput />\n+        ) : (\n+          <FormPassword\n+            autoComplete=\"new-password\"\n+            placeholder={t('comfyui.password.placeholder' as any)}\n+          />\n+        ),\n+        desc: t('comfyui.password.desc' as any),\n+        label: t('comfyui.password.title' as any),\n+        name: [KeyVaultsConfigKey, 'password'],\n+      },\n+    );\n+  }\n+\n+  if (authType === 'bearer') {\n+    apiKeyItems.push({\n+      children: isLoading ? (\n+        <SkeletonInput />\n+      ) : (\n+        <FormPassword\n+          autoComplete=\"new-password\"\n+          placeholder={t('comfyui.apiKey.placeholder' as any)}\n+        />\n+      ),\n+      desc: t('comfyui.apiKey.desc' as any),\n+      label: t('comfyui.apiKey.title' as any),\n+      name: [KeyVaultsConfigKey, 'apiKey'],\n+    });",
        "comment_created_at": "2025-08-20T05:03:53+00:00",
        "comment_author": "MapleEve",
        "comment_body": "  \u5df2\u5904\u7406\u7684\u95ee\u9898\uff1a\r\n  - \u2705 \u5b89\u5168\u95ee\u9898\uff1a\u4fee\u590d\u4e86\u6587\u6863\u4e2d\u7684 token \u66b4\u9732\u95ee\u9898\r\n\r\n  \u5408\u7406\u62d2\u7edd\u7684\u5efa\u8bae\uff1a\r\n  - \u274c \u91cd\u6784 LobeComfyUI \u7c7b\uff1a\u5f53\u524d\u8bbe\u8ba1\u5408\u7406\uff0c\u7b26\u5408\u63a5\u53e3\u8981\u6c42\r\n  - \u274c \u6dfb\u52a0 /object_info \u7f13\u5b58\uff1a\u8fc7\u65e9\u4f18\u5316\uff0c\u6536\u76ca\u6709\u9650\r\n  - \u274c \u62bd\u8c61\u5de5\u4f5c\u6d41\u6784\u5efa\u5668\uff1a\u4f1a\u964d\u4f4e\u53ef\u8bfb\u6027\r\n  - \u274c \u5927\u89c4\u6a21\u7c7b\u578b\u6539\u8fdb\uff1a\u4f1a\u5f71\u54cd\u4e0e SDK \u7684\u517c\u5bb9\u6027",
        "pr_file_module": null
      }
    ]
  }
]