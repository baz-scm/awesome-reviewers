[
  {
    "discussion_id": "2296509003",
    "pr_number": 8453,
    "pr_file": "packages/database/src/schemas/usage.ts",
    "created_at": "2025-08-24T04:53:43+00:00",
    "commented_code": "+import { text, integer, uniqueIndex, pgTable, doublePrecision, jsonb, timestamp, real } from 'drizzle-orm/pg-core'\n+\n+import { idGenerator } from '../utils/idGenerator'\n+\n+import { timestamps } from './_helpers'\n+import { users } from './user'\n+import { MessageMetadata } from '@/types/message';\n+\n+export const usageRecords = pgTable(\n+    'usage_records',\n+    {\n+        id: text('id')\n+            .$defaultFn(() => idGenerator('usageRecords', 16))\n+            .primaryKey(),\n+        // Model \u4fe1\u606f\n+        model: text('model').notNull(),\n+        provider: text('provider').notNull(),\n+        // Pricing \u4fe1\u606f\n+        spend: doublePrecision('spend').notNull().default(0.0),\n+        // \u8c03\u7528\u4fe1\u606f\uff0c\u8c01\u7528\u54ea\u4e2aAPI\u8c03\u7528\u4e86\n+            // API \u8c03\u7528\u4fe1\u606f\n+        callType: text('call_type', { enum: ['chat', 'history_summary'] }).notNull(),\n+        ipAddress: text('ip_address'),",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2296509003",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 8453,
        "pr_file": "packages/database/src/schemas/usage.ts",
        "discussion_id": "2296509003",
        "commented_code": "@@ -0,0 +1,48 @@\n+import { text, integer, uniqueIndex, pgTable, doublePrecision, jsonb, timestamp, real } from 'drizzle-orm/pg-core'\n+\n+import { idGenerator } from '../utils/idGenerator'\n+\n+import { timestamps } from './_helpers'\n+import { users } from './user'\n+import { MessageMetadata } from '@/types/message';\n+\n+export const usageRecords = pgTable(\n+    'usage_records',\n+    {\n+        id: text('id')\n+            .$defaultFn(() => idGenerator('usageRecords', 16))\n+            .primaryKey(),\n+        // Model \u4fe1\u606f\n+        model: text('model').notNull(),\n+        provider: text('provider').notNull(),\n+        // Pricing \u4fe1\u606f\n+        spend: doublePrecision('spend').notNull().default(0.0),\n+        // \u8c03\u7528\u4fe1\u606f\uff0c\u8c01\u7528\u54ea\u4e2aAPI\u8c03\u7528\u4e86\n+            // API \u8c03\u7528\u4fe1\u606f\n+        callType: text('call_type', { enum: ['chat', 'history_summary'] }).notNull(),\n+        ipAddress: text('ip_address'),",
        "comment_created_at": "2025-08-24T04:53:43+00:00",
        "comment_author": "arvinxx",
        "comment_body": "ip \u662f\u654f\u611f\u4fe1\u606f\u5b57\u6bb5\uff0c\u5148\u4e0d\u5b58\u5427",
        "pr_file_module": null
      },
      {
        "comment_id": "2296573127",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 8453,
        "pr_file": "packages/database/src/schemas/usage.ts",
        "discussion_id": "2296509003",
        "commented_code": "@@ -0,0 +1,48 @@\n+import { text, integer, uniqueIndex, pgTable, doublePrecision, jsonb, timestamp, real } from 'drizzle-orm/pg-core'\n+\n+import { idGenerator } from '../utils/idGenerator'\n+\n+import { timestamps } from './_helpers'\n+import { users } from './user'\n+import { MessageMetadata } from '@/types/message';\n+\n+export const usageRecords = pgTable(\n+    'usage_records',\n+    {\n+        id: text('id')\n+            .$defaultFn(() => idGenerator('usageRecords', 16))\n+            .primaryKey(),\n+        // Model \u4fe1\u606f\n+        model: text('model').notNull(),\n+        provider: text('provider').notNull(),\n+        // Pricing \u4fe1\u606f\n+        spend: doublePrecision('spend').notNull().default(0.0),\n+        // \u8c03\u7528\u4fe1\u606f\uff0c\u8c01\u7528\u54ea\u4e2aAPI\u8c03\u7528\u4e86\n+            // API \u8c03\u7528\u4fe1\u606f\n+        callType: text('call_type', { enum: ['chat', 'history_summary'] }).notNull(),\n+        ipAddress: text('ip_address'),",
        "comment_created_at": "2025-08-24T08:48:10+00:00",
        "comment_author": "cy948",
        "comment_body": "\u5df2\u53bb\u6389",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1980563655",
    "pr_number": 6697,
    "pr_file": "src/app/(backend)/api/webhooks/casdoor/validateRequest.ts",
    "created_at": "2025-03-05T02:12:24+00:00",
    "commented_code": "const casdoorSecret = headerPayload.get('casdoor-secret')!;\n   try {\n     if (casdoorSecret === secret) {\n-      return JSON.parse(payloadString, (k, v) =>\n-        k === 'object' && typeof v === 'string' ? JSON.parse(v) : v,\n-      ) as CasdoorWebhookPayload;\n+      const parsed = JSON.parse(payloadString, (key, value) => {\n+        if (key === 'object' && typeof value === 'string') {\n+          return JSON.parse(value);\n+        }\n+        return value;\n+      }) as Partial<CasdoorWebhookPayload> & CasdoorUserEntity;",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1980563655",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 6697,
        "pr_file": "src/app/(backend)/api/webhooks/casdoor/validateRequest.ts",
        "discussion_id": "1980563655",
        "commented_code": "@@ -22,9 +22,28 @@ export const validateRequest = async (request: Request, secret?: string) => {\n   const casdoorSecret = headerPayload.get('casdoor-secret')!;\n   try {\n     if (casdoorSecret === secret) {\n-      return JSON.parse(payloadString, (k, v) =>\n-        k === 'object' && typeof v === 'string' ? JSON.parse(v) : v,\n-      ) as CasdoorWebhookPayload;\n+      const parsed = JSON.parse(payloadString, (key, value) => {\n+        if (key === 'object' && typeof value === 'string') {\n+          return JSON.parse(value);\n+        }\n+        return value;\n+      }) as Partial<CasdoorWebhookPayload> & CasdoorUserEntity; ",
        "comment_created_at": "2025-03-05T02:12:24+00:00",
        "comment_author": "cy948",
        "comment_body": "\u6211\u5c1d\u8bd5\u4e86\u5f53\u524d\u4ee3\u7801\u5728 Casdoor 1.855.0 \u4e0b `object` \u5b57\u6bb5\u7684\u539f\u6587\uff08\u6ca1\u6709\u4efb\u4f55Mask\uff09\uff0c\u5e76\u6ca1\u6709\u770b\u5230\u5a01\u80c1\u5b89\u5168\u6027\u7684\u5b57\u6bb5\u66b4\u9732\uff0c \u4f60\u53ef\u4ee5\u8bf4\u4e00\u4e0b\u54ea\u4e9b\u5b57\u6bb5\u4f1a\u5a01\u80c1\u5b89\u5168\u6027\u5417\uff1f\r\n```js\r\n{\r\n  owner: 'organization_909sis',\r\n  name: 'user_cctax5',\r\n  createdTime: '2025-03-05T10:02:36+08:00',\r\n  updatedTime: '2025-03-05T02:02:55Z',\r\n  deletedTime: '',\r\n  id: '42ed393e-2441-4aa2-9abf-c432d0f6e70c',\r\n  externalId: '',\r\n  type: 'normal-user',\r\n  password: '***',\r\n  passwordSalt: '',\r\n  passwordType: 'plain',\r\n  displayName: 'New User - cctax5',\r\n  firstName: '',\r\n  lastName: '',\r\n  avatar: 'https://cdn.casbin.org/img/casbin.svg',\r\n  avatarType: '',\r\n  permanentAvatar: '',\r\n  email: 'ccta65@example.com',\r\n  emailVerified: false,\r\n  phone: '10123068366',\r\n  countryCode: 'US',\r\n  region: '',\r\n  location: '',\r\n  address: [],\r\n  affiliation: 'Example Inc.',\r\n  title: '',\r\n  idCardType: '',\r\n  idCard: '',\r\n  homepage: '',\r\n  bio: '',\r\n  tag: 'staff',\r\n  language: '',\r\n  gender: '',\r\n  birthday: '',\r\n  education: '',\r\n  score: 2000,\r\n  karma: 0,\r\n  ranking: 0,\r\n  balance: 0,\r\n  currency: '',\r\n  isDefaultAvatar: false,\r\n  isOnline: false,\r\n  isAdmin: true,\r\n  isForbidden: false,\r\n  isDeleted: false,\r\n  signupApplication: '',\r\n  hash: '',\r\n  preHash: '',\r\n  accessKey: '',\r\n  accessSecret: '',\r\n  accessToken: '',\r\n  createdIp: '',\r\n  lastSigninTime: '',\r\n  lastSigninIp: '',\r\n  github: '',\r\n  google: '',\r\n  qq: '',\r\n  wechat: '',\r\n  facebook: '',\r\n  dingtalk: '',\r\n  weibo: '',\r\n  gitee: '',\r\n  linkedin: '',\r\n  wecom: '',\r\n  lark: '',\r\n  gitlab: '',\r\n  adfs: '',\r\n  baidu: '',\r\n  alipay: '',\r\n  casdoor: '',\r\n  infoflow: '',\r\n  apple: '',\r\n  azuread: '',\r\n  azureadb2c: '',\r\n  slack: '',\r\n  steam: '',\r\n  bilibili: '',\r\n  okta: '',\r\n  douyin: '',\r\n  kwai: '',\r\n  line: '',\r\n  amazon: '',\r\n  auth0: '',\r\n  battlenet: '',\r\n  bitbucket: '',\r\n  box: '',\r\n  cloudfoundry: '',\r\n  dailymotion: '',\r\n  deezer: '',\r\n  digitalocean: '',\r\n  discord: '',\r\n  dropbox: '',\r\n  eveonline: '',\r\n  fitbit: '',\r\n  gitea: '',\r\n  heroku: '',\r\n  influxcloud: '',\r\n  instagram: '',\r\n  intercom: '',\r\n  kakao: '',\r\n  lastfm: '',\r\n  mailru: '',\r\n  meetup: '',\r\n  microsoftonline: '',\r\n  naver: '',\r\n  nextcloud: '',\r\n  onedrive: '',\r\n  oura: '',\r\n  patreon: '',\r\n  paypal: '',\r\n  salesforce: '',\r\n  shopify: '',\r\n  soundcloud: '',\r\n  spotify: '',\r\n  strava: '',\r\n  stripe: '',\r\n  tiktok: '',\r\n  tumblr: '',\r\n  twitch: '',\r\n  twitter: '',\r\n  typetalk: '',\r\n  uber: '',\r\n  vk: '',\r\n  wepay: '',\r\n  xero: '',\r\n  yahoo: '',\r\n  yammer: '',\r\n  yandex: '',\r\n  zoom: '',\r\n  metamask: '',\r\n  web3onboard: '',\r\n  custom: '',\r\n  webauthnCredentials: null,\r\n  preferredMfaType: '',\r\n  recoveryCodes: null,\r\n  totpSecret: '',\r\n  mfaPhoneEnabled: false,\r\n  mfaEmailEnabled: false,\r\n  multiFactorAuths: [\r\n    { enabled: false, isPreferred: false, mfaType: 'sms' },\r\n    { enabled: false, isPreferred: false, mfaType: 'email' },\r\n    { enabled: false, isPreferred: false, mfaType: 'app' }\r\n  ],\r\n  invitation: '',\r\n  invitationCode: '',\r\n  faceIds: null,\r\n  ldap: '',\r\n  properties: {},\r\n  roles: [],\r\n  permissions: [],\r\n  groups: [],\r\n  lastChangePasswordTime: '',\r\n  lastSigninWrongTime: '',\r\n  signinWrongTimes: 0,\r\n  managedAccounts: null,\r\n  mfaAccounts: null,\r\n  needUpdatePassword: false,\r\n  ipWhitelist: ''\r\n}\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1980655511",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 6697,
        "pr_file": "src/app/(backend)/api/webhooks/casdoor/validateRequest.ts",
        "discussion_id": "1980563655",
        "commented_code": "@@ -22,9 +22,28 @@ export const validateRequest = async (request: Request, secret?: string) => {\n   const casdoorSecret = headerPayload.get('casdoor-secret')!;\n   try {\n     if (casdoorSecret === secret) {\n-      return JSON.parse(payloadString, (k, v) =>\n-        k === 'object' && typeof v === 'string' ? JSON.parse(v) : v,\n-      ) as CasdoorWebhookPayload;\n+      const parsed = JSON.parse(payloadString, (key, value) => {\n+        if (key === 'object' && typeof value === 'string') {\n+          return JSON.parse(value);\n+        }\n+        return value;\n+      }) as Partial<CasdoorWebhookPayload> & CasdoorUserEntity; ",
        "comment_created_at": "2025-03-05T04:07:15+00:00",
        "comment_author": "chung1912",
        "comment_body": "`accessKey`,`accessSecret`\r\n\u8fd9\u4e2a\u6743\u9650\u6bd4\u8f83\u9ad8\uff0c\u662f\u660e\u6587\u4f20\u8f93\u7684\uff0c\u53ef\u4ee5\u4ee3\u66ff\u7528\u6237\u540d\u5bc6\u7801\u505a\u5f88\u591a\u4e8b\u60c5\r\n\u53e6\u5916 \u50cf`idCardType`\u548c`idCard`\uff0c\u8fd9\u4e2a\u5176\u5b9e\u5c31\u662f\u8eab\u4efd\u8bc1\u548c\u8eab\u4efd\u8bc1\u53f7\uff0c\u5c5e\u4e8e\u7528\u6237\u9ad8\u5ea6\u9690\u79c1\u7684\u5185\u5bb9",
        "pr_file_module": null
      },
      {
        "comment_id": "1980657129",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 6697,
        "pr_file": "src/app/(backend)/api/webhooks/casdoor/validateRequest.ts",
        "discussion_id": "1980563655",
        "commented_code": "@@ -22,9 +22,28 @@ export const validateRequest = async (request: Request, secret?: string) => {\n   const casdoorSecret = headerPayload.get('casdoor-secret')!;\n   try {\n     if (casdoorSecret === secret) {\n-      return JSON.parse(payloadString, (k, v) =>\n-        k === 'object' && typeof v === 'string' ? JSON.parse(v) : v,\n-      ) as CasdoorWebhookPayload;\n+      const parsed = JSON.parse(payloadString, (key, value) => {\n+        if (key === 'object' && typeof value === 'string') {\n+          return JSON.parse(value);\n+        }\n+        return value;\n+      }) as Partial<CasdoorWebhookPayload> & CasdoorUserEntity; ",
        "comment_created_at": "2025-03-05T04:09:35+00:00",
        "comment_author": "cy948",
        "comment_body": "\u4f46\u8fd9\u4e24\u4e2akey\u90fd\u6ca1\u6709\u503c\u4f20\u8fc7\u6765\uff0ccasdoor\u5df2\u7ecfomit\u6389\u4e86? idcard type \u8fd9\u4e2a\u503c\u5728\u6211\u4eec\u7684\u573a\u666f\u4e0b\uff0c\u6ca1\u6709\u4eba\u4f1a\u586b\u7684\u5427 \ud83e\udd23",
        "pr_file_module": null
      },
      {
        "comment_id": "1980697757",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 6697,
        "pr_file": "src/app/(backend)/api/webhooks/casdoor/validateRequest.ts",
        "discussion_id": "1980563655",
        "commented_code": "@@ -22,9 +22,28 @@ export const validateRequest = async (request: Request, secret?: string) => {\n   const casdoorSecret = headerPayload.get('casdoor-secret')!;\n   try {\n     if (casdoorSecret === secret) {\n-      return JSON.parse(payloadString, (k, v) =>\n-        k === 'object' && typeof v === 'string' ? JSON.parse(v) : v,\n-      ) as CasdoorWebhookPayload;\n+      const parsed = JSON.parse(payloadString, (key, value) => {\n+        if (key === 'object' && typeof value === 'string') {\n+          return JSON.parse(value);\n+        }\n+        return value;\n+      }) as Partial<CasdoorWebhookPayload> & CasdoorUserEntity; ",
        "comment_created_at": "2025-03-05T05:00:53+00:00",
        "comment_author": "chung1912",
        "comment_body": "\u8fd9\u4e24\u4e2a\u503c\u9ed8\u8ba4\u4e0d\u751f\u6210\uff0c\u7528\u6237\u5982\u679c\u9700\u8981\u7528\uff0c\u8fdb\u53bb\u81ea\u5df1\u70b9\u51fb\u751f\u6210\u5c31\u4f1a\u6709\uff0c\u6211\u5c31\u5728\u7528\u8fd9\u4e24\u4e2akey\u6765\u505a\u4e00\u4e9b\u9274\u6743\u7684\u4e8b",
        "pr_file_module": null
      },
      {
        "comment_id": "1980702429",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 6697,
        "pr_file": "src/app/(backend)/api/webhooks/casdoor/validateRequest.ts",
        "discussion_id": "1980563655",
        "commented_code": "@@ -22,9 +22,28 @@ export const validateRequest = async (request: Request, secret?: string) => {\n   const casdoorSecret = headerPayload.get('casdoor-secret')!;\n   try {\n     if (casdoorSecret === secret) {\n-      return JSON.parse(payloadString, (k, v) =>\n-        k === 'object' && typeof v === 'string' ? JSON.parse(v) : v,\n-      ) as CasdoorWebhookPayload;\n+      const parsed = JSON.parse(payloadString, (key, value) => {\n+        if (key === 'object' && typeof value === 'string') {\n+          return JSON.parse(value);\n+        }\n+        return value;\n+      }) as Partial<CasdoorWebhookPayload> & CasdoorUserEntity; ",
        "comment_created_at": "2025-03-05T05:07:45+00:00",
        "comment_author": "cy948",
        "comment_body": "\u73b0\u5728\u63a8\u8350\u7684Casdoor\u7684\u521d\u59cb\u5316\u6a21\u677f\u91cc\u5df2\u7ecf\u914d\u7f6e\u7ba1\u7406\u5458\u548c\u767b\u5f55\u7528\u6237\u5206\u79bb\u4e86\u3002\u7ba1\u7406\u5458\u65e0\u6cd5\u767b\u5f55 LobeChat \u5e94\u7528\uff0c\u666e\u901a\u7528\u6237\u56e0\u4e3a\u65e0\u6cd5\u8fdb\u5165\u7ba1\u7406\u5458\u9762\u677f\uff0c\u7406\u8bba\u4e0a\u7528\u6237\u662f\u4e0d\u4f1a\u521b\u5efa\u8fd9\u4e24\u4e2a key \u7684\u3002\u4f60\u53ef\u4ee5\u8bd5\u4e00\u4e0b\u73b0\u5728\u7684\u5efa\u8bae\u914d\u7f6e https://github.com/lobehub/lobe-chat/blob/main/docker-compose/local/init_data.json",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1631847105",
    "pr_number": 2804,
    "pr_file": "src/types/user/settings/keyVaults.ts",
    "created_at": "2024-06-08T03:10:25+00:00",
    "commented_code": null,
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1631847105",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 2804,
        "pr_file": "src/types/user/settings/keyVaults.ts",
        "discussion_id": "1631847105",
        "commented_code": null,
        "comment_created_at": "2024-06-08T03:10:25+00:00",
        "comment_author": "arvinxx",
        "comment_body": "`keyVaults` stores the user's own provider apikey information. In the server-side DB implementation, we will encrypt and store keyVaults\r\n\r\n\r\n`keyVaults` \u4e2d\u5b58\u50a8\u4e86\u7528\u6237\u586b\u5199\u7684\u81ea\u5df1\u7684 provider apikey \u4fe1\u606f\uff0c\u5728\u670d\u52a1\u7aef DB \u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u4f1a\u5c06 keyVaults \u52a0\u5bc6\u5b58\u50a8\u3002",
        "pr_file_module": null
      }
    ]
  }
]