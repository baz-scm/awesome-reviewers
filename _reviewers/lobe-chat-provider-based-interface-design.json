[
  {
    "discussion_id": "2316268019",
    "pr_number": 9043,
    "pr_file": "src/app/[variants]/(main)/image/features/GenerationFeed/BatchItem.tsx",
    "created_at": "2025-09-02T14:27:00+00:00",
    "commented_code": ");\n \n   if (isInvalidApiKey) {\n+    // Use custom ComfyUIAuth component for ComfyUI provider\n+    if (batch.provider === 'comfyui') {",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2316268019",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 9043,
        "pr_file": "src/app/[variants]/(main)/image/features/GenerationFeed/BatchItem.tsx",
        "discussion_id": "2316268019",
        "commented_code": "@@ -115,6 +116,21 @@ export const GenerationBatchItem = memo<GenerationBatchItemProps>(({ batch }) =>\n   );\n \n   if (isInvalidApiKey) {\n+    // Use custom ComfyUIAuth component for ComfyUI provider\n+    if (batch.provider === 'comfyui') {",
        "comment_created_at": "2025-09-02T14:27:00+00:00",
        "comment_author": "tjx666",
        "comment_body": "\u8fd9\u4e2a\u9488\u5bf9\u7279\u5b9a provider \u7684\u5c55\u793a\u53ef\u80fd\u5e94\u8be5\u52a0\u5230 src/components/InvalidAPIKey/APIKeyForm/index.tsx",
        "pr_file_module": null
      },
      {
        "comment_id": "2318713999",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 9043,
        "pr_file": "src/app/[variants]/(main)/image/features/GenerationFeed/BatchItem.tsx",
        "discussion_id": "2316268019",
        "commented_code": "@@ -115,6 +116,21 @@ export const GenerationBatchItem = memo<GenerationBatchItemProps>(({ batch }) =>\n   );\n \n   if (isInvalidApiKey) {\n+    // Use custom ComfyUIAuth component for ComfyUI provider\n+    if (batch.provider === 'comfyui') {",
        "comment_created_at": "2025-09-03T11:48:03+00:00",
        "comment_author": "MapleEve",
        "comment_body": "[dbc5ef0](https://github.com/lobehub/lobe-chat/pull/9043/commits/dbc5ef02ce4d1da10484d7bf682347e35995f715)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2253103940",
    "pr_number": 8672,
    "pr_file": "src/components/Analytics/LobeAnalyticsProvider.tsx",
    "created_at": "2025-08-05T04:54:47+00:00",
    "commented_code": "let analyticsInstance: ReturnType<typeof createSingletonAnalytics> | null = null;\n \n export const LobeAnalyticsProvider = memo(\n-  ({ children, posthogHost, posthogToken, posthogEnabled, debugPosthog }: Props) => {\n+  ({",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2253103940",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 8672,
        "pr_file": "src/components/Analytics/LobeAnalyticsProvider.tsx",
        "discussion_id": "2253103940",
        "commented_code": "@@ -19,7 +21,15 @@ type Props = {\n let analyticsInstance: ReturnType<typeof createSingletonAnalytics> | null = null;\n \n export const LobeAnalyticsProvider = memo(\n-  ({ children, posthogHost, posthogToken, posthogEnabled, debugPosthog }: Props) => {\n+  ({",
        "comment_created_at": "2025-08-05T04:54:47+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u662f\u4e0d\u662f\u53ef\u4ee5\u8003\u8651\u4e0b\u4f18\u5316\u8fd9\u4e2aprops \u4e86\uff1f\u6309\u7167 provider \u6765\u6784\u5efa\u5bf9\u8c61\uff1f\r\n\r\n`ga4: false | {  measurementId:string }`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1779718527",
    "pr_number": 4154,
    "pr_file": "src/components/ModelTag/index.tsx",
    "created_at": "2024-09-28T17:09:03+00:00",
    "commented_code": "+import { ModelTag as DefaultModelTag, ModelIcon, ModelTagProps } from '@lobehub/icons';\n+import { Tag } from '@lobehub/ui';\n+import { memo } from 'react';\n+\n+import { featureFlagsSelectors, useServerConfigStore } from '@/store/serverConfig';\n+import { useUserStore } from '@/store/user';\n+import { modelProviderSelectors } from '@/store/user/selectors';\n+\n+const CustomModelTag = memo<ModelTagProps>(({ type = 'mono', model, ...rest }) => {\n+  const enabledList = useUserStore(modelProviderSelectors.modelProviderListForModelSelect);\n+\n+  let modelCard;\n+\n+  for (const provider of enabledList) {",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1779718527",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 4154,
        "pr_file": "src/components/ModelTag/index.tsx",
        "discussion_id": "1779718527",
        "commented_code": "@@ -0,0 +1,35 @@\n+import { ModelTag as DefaultModelTag, ModelIcon, ModelTagProps } from '@lobehub/icons';\n+import { Tag } from '@lobehub/ui';\n+import { memo } from 'react';\n+\n+import { featureFlagsSelectors, useServerConfigStore } from '@/store/serverConfig';\n+import { useUserStore } from '@/store/user';\n+import { modelProviderSelectors } from '@/store/user/selectors';\n+\n+const CustomModelTag = memo<ModelTagProps>(({ type = 'mono', model, ...rest }) => {\n+  const enabledList = useUserStore(modelProviderSelectors.modelProviderListForModelSelect);\n+\n+  let modelCard;\n+\n+  for (const provider of enabledList) {",
        "comment_created_at": "2024-09-28T17:09:03+00:00",
        "comment_author": "arvinxx",
        "comment_body": "If you want to display the model name, it's better to have a `provider` props to know the enabled provider. This lookup way will have confilct as the order.\r\n\r\nMaybe a optional props with provider,if have this value to just get the model card, or use this lookup way. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1503599937",
    "pr_number": 1397,
    "pr_file": "src/app/settings/llm/components/Checker.tsx",
    "created_at": "2024-02-27T03:53:04+00:00",
    "commented_code": "const [error, setError] = useState<ChatMessageError | undefined>();\n \n   const checkConnection = async () => {\n-    const data = await chatService.fetchPresetTaskResult({\n-      onError: (_, rawError) => {\n-        setError(rawError);\n-        setPass(false);\n-      },\n-      onLoadingChange: (loading) => {\n-        setLoading(loading);\n-      },\n-      params: {\n-        messages: [\n-          {\n-            content: '\u4f60\u597d',\n-            role: 'user',\n-          },\n-        ],\n-        model,\n-        provider,\n-      },\n-    });\n+    let data = null;\n+    // ollama is instanceof local llm provider\n+    if (provider === 'ollama') {",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1503599937",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 1397,
        "pr_file": "src/app/settings/llm/components/Checker.tsx",
        "discussion_id": "1503599937",
        "commented_code": "@@ -25,25 +28,42 @@ const Checker = memo<ConnectionCheckerProps>(({ model, provider }) => {\n   const [error, setError] = useState<ChatMessageError | undefined>();\n \n   const checkConnection = async () => {\n-    const data = await chatService.fetchPresetTaskResult({\n-      onError: (_, rawError) => {\n-        setError(rawError);\n-        setPass(false);\n-      },\n-      onLoadingChange: (loading) => {\n-        setLoading(loading);\n-      },\n-      params: {\n-        messages: [\n-          {\n-            content: '\u4f60\u597d',\n-            role: 'user',\n-          },\n-        ],\n-        model,\n-        provider,\n-      },\n-    });\n+    let data = null;\n+    // ollama is instanceof local llm provider\n+    if (provider === 'ollama') {",
        "comment_created_at": "2024-02-27T03:53:04+00:00",
        "comment_author": "arvinxx",
        "comment_body": "ollama \u7684\u5b9e\u73b0\u5efa\u8bae\u5355\u72ec\u505a\u4e00\u4e2a Ollama Checker \uff0c\u4e0d\u8981\u63c9\u8fdb\u901a\u7528 Checker \u91cc\uff0c \u6216\u8005\u628a check \u65b9\u6cd5\u505a\u6210\u4e00\u4e2aprops\u4e5f\u884c",
        "pr_file_module": null
      },
      {
        "comment_id": "1504074735",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 1397,
        "pr_file": "src/app/settings/llm/components/Checker.tsx",
        "discussion_id": "1503599937",
        "commented_code": "@@ -25,25 +28,42 @@ const Checker = memo<ConnectionCheckerProps>(({ model, provider }) => {\n   const [error, setError] = useState<ChatMessageError | undefined>();\n \n   const checkConnection = async () => {\n-    const data = await chatService.fetchPresetTaskResult({\n-      onError: (_, rawError) => {\n-        setError(rawError);\n-        setPass(false);\n-      },\n-      onLoadingChange: (loading) => {\n-        setLoading(loading);\n-      },\n-      params: {\n-        messages: [\n-          {\n-            content: '\u4f60\u597d',\n-            role: 'user',\n-          },\n-        ],\n-        model,\n-        provider,\n-      },\n-    });\n+    let data = null;\n+    // ollama is instanceof local llm provider\n+    if (provider === 'ollama') {",
        "comment_created_at": "2024-02-27T11:25:58+00:00",
        "comment_author": "sjy",
        "comment_body": "\u6211\u5728\u60f3\uff0c\u4e0b\u9762\u7684\u5217\u8868\u7ec4\u4ef6\u4f1a\u53d1\u8bf7\u6c42\uff0c\u8fd9\u4e2achecker \u8fd8\u662f\u5426\u6709\u5fc5\u8981\u5b58\u5728",
        "pr_file_module": null
      },
      {
        "comment_id": "1504507494",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 1397,
        "pr_file": "src/app/settings/llm/components/Checker.tsx",
        "discussion_id": "1503599937",
        "commented_code": "@@ -25,25 +28,42 @@ const Checker = memo<ConnectionCheckerProps>(({ model, provider }) => {\n   const [error, setError] = useState<ChatMessageError | undefined>();\n \n   const checkConnection = async () => {\n-    const data = await chatService.fetchPresetTaskResult({\n-      onError: (_, rawError) => {\n-        setError(rawError);\n-        setPass(false);\n-      },\n-      onLoadingChange: (loading) => {\n-        setLoading(loading);\n-      },\n-      params: {\n-        messages: [\n-          {\n-            content: '\u4f60\u597d',\n-            role: 'user',\n-          },\n-        ],\n-        model,\n-        provider,\n-      },\n-    });\n+    let data = null;\n+    // ollama is instanceof local llm provider\n+    if (provider === 'ollama') {",
        "comment_created_at": "2024-02-27T15:57:24+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u6709\u5fc5\u8981\u7684\u3002\u7b2c\u4e00\u6b21\u8fdb\u53bb\u51fa\u9519\uff0c\u7136\u540e\u672c\u5730\u8d77\u6765\uff0c\u7136\u540e\u7528\u6237\u7684\u76f4\u89c9\u4e0a\u662f\u518d\u53bb\u70b9\u4e0b check \u3002 \u867d\u7136\u529f\u80fd\u80fd\u6ee1\u8db3\uff0c\u4f46\u662f\u7528\u6237\u884c\u4e3a\u4e60\u60ef\u662f\u4e0d\u4e00\u6837\u7684\u3002\u5c31\u50cfChrome \u7684\u6536\u85cf\u5939\u4e00\u6837\uff1a\r\n\r\n<img width=\"487\" alt=\"image\" src=\"https://github.com/lobehub/lobe-chat/assets/28616219/bbd6f1e0-5b22-4573-b6f8-908f481387ac\">\r\n\r\n\u5f53\u4f60\u70b9\u51fb\u7684\u65f6\u5019\u5176\u5b9e\u5df2\u7ecf\u5b8c\u6210\u6536\u85cf\u4e86\uff0c\u4f46\u5927\u90e8\u5206\u4eba\u7684\u4e60\u60ef\u8fd8\u662f\u4f1a\u53bb\u70b9\u4e0b\u300c\u5b8c\u6210\u300d\u6765\u786e\u8ba4\u6536\u85cf\u3002\u662f\u4e2a\u5b89\u6170\u5242\u7684\u6309\u94ae\r\n",
        "pr_file_module": null
      }
    ]
  }
]