[
  {
    "discussion_id": "2177728182",
    "pr_number": 8311,
    "pr_file": "src/app/[variants]/(main)/chat/@session/features/SessionListContent/Inbox/index.tsx",
    "created_at": "2025-07-01T14:17:01+00:00",
    "commented_code": "const activeId = useSessionStore((s) => s.activeId);\n   const switchSession = useSwitchSession();\n \n+  const activeTopicId = useChatStore((s) => s.activeTopicId);\n+  const inboxMessages = useChatStore(\n+    (s) => s.messagesMap[messageMapKey(INBOX_SESSION_ID, activeTopicId)] || [],\n+  );\n+  const openNewTopicOrSaveTopic = useChatStore((s) => s.openNewTopicOrSaveTopic);\n+\n   return (\n     <Link\n       aria-label={t('inbox.title')}\n       href={SESSION_CHAT_URL(INBOX_SESSION_ID, mobile)}\n-      onClick={(e) => {\n+      onClick={async (e) => {\n         e.preventDefault();\n-        switchSession(INBOX_SESSION_ID);\n+        if (activeId === INBOX_SESSION_ID && inboxMessages.length > 0) {",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "2177728182",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 8311,
        "pr_file": "src/app/[variants]/(main)/chat/@session/features/SessionListContent/Inbox/index.tsx",
        "discussion_id": "2177728182",
        "commented_code": "@@ -17,13 +19,24 @@ const Inbox = memo(() => {\n   const activeId = useSessionStore((s) => s.activeId);\n   const switchSession = useSwitchSession();\n \n+  const activeTopicId = useChatStore((s) => s.activeTopicId);\n+  const inboxMessages = useChatStore(\n+    (s) => s.messagesMap[messageMapKey(INBOX_SESSION_ID, activeTopicId)] || [],\n+  );\n+  const openNewTopicOrSaveTopic = useChatStore((s) => s.openNewTopicOrSaveTopic);\n+\n   return (\n     <Link\n       aria-label={t('inbox.title')}\n       href={SESSION_CHAT_URL(INBOX_SESSION_ID, mobile)}\n-      onClick={(e) => {\n+      onClick={async (e) => {\n         e.preventDefault();\n-        switchSession(INBOX_SESSION_ID);\n+        if (activeId === INBOX_SESSION_ID && inboxMessages.length > 0) {",
        "comment_created_at": "2025-07-01T14:17:01+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u5e94\u8be5\u5728\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u8fd9\u4e48\u5199\uff1a\r\n\r\n```ts\r\nconst inboxMessages = useChatStore.getState().messagesMap[messageMapKey(INBOX_SESSION_ID, activeTopicId)] || []\r\n```\r\n\r\n\u800c\u8fd9\u4e48\u5199\u7684\u8bdd\u53c8\u592a\u957f\u4e86\uff0c\u6211\u5efa\u8bae\u6536\u4e00\u4e2a selector \u5c31\u53eb inboxActiveTopicMessages \u7528\u4e8e\u83b7\u53d6\u8fd9\u4e2a\u6570\u636e\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u6536\u655b\u6210\uff1a\r\n\r\n```ts\r\nconst inboxMessages = chatSelectors.inboxActiveTopicMessages(getChatStoreState())\r\n```\r\n\r\n\u8fd9\u6837\u5728 Inbox \u7ec4\u4ef6\u4e5f\u4e0d\u4f1a\u53d7\u5230 inboxMessages \u53d8\u66f4\u5e26\u6765\u7684\u91cd\u6e32\u67d3\u5f71\u54cd\r\n\r\n\u540c\u65f6 inboxActiveTopicMessages \u8fd9\u4e2a\u53d6\u6570\u903b\u8f91\u5728\u5176\u4ed6\u5730\u65b9\u4e5f\u80fd\u590d\u7528",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1685902818",
    "pr_number": 3094,
    "pr_file": "src/features/ChatInput/ActionBar/Token/TokenTag.tsx",
    "created_at": "2024-07-22T02:54:59+00:00",
    "commented_code": "const { t } = useTranslation(['chat', 'components']);\n   const theme = useTheme();\n \n+  const config = agentSelectors.currentAgentChatConfig(useAgentStore.getState());",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1685902818",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 3094,
        "pr_file": "src/features/ChatInput/ActionBar/Token/TokenTag.tsx",
        "discussion_id": "1685902818",
        "commented_code": "@@ -22,9 +22,10 @@ const Token = memo(() => {\n   const { t } = useTranslation(['chat', 'components']);\n   const theme = useTheme();\n \n+  const config = agentSelectors.currentAgentChatConfig(useAgentStore.getState());",
        "comment_created_at": "2024-07-22T02:54:59+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u53e6\u5916\u8fd9\u4e2a\u5199\u6cd5\u4e5f\u662f\u6709\u95ee\u9898\u7684\u3002\r\n\r\n`useAgentStore.getState()`  \u8fd9\u4e2a\u4e0d\u662f\u4e00\u4e2a\u54cd\u5e94\u5f0f\u7684\u5199\u6cd5\uff0c\u53d6\u51fa\u6765\u7684\u503c\u662ffixed\u7684\uff0c\u8981\u54cd\u5e94\u5f0f\uff0c\u5f97\u6539\u6210\r\n\r\n```\r\nconst config = useAgentStore(agentSelectors.currentAgentChatConfig)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1660375911",
    "pr_number": 3095,
    "pr_file": "src/app/(main)/settings/system-agent/features/Topic.tsx",
    "created_at": "2024-07-01T02:09:26+00:00",
    "commented_code": "type SettingItemGroup = ItemGroup;\n \n+const systemAgentKey = 'topic'\n const Topic = memo(() => {\n   const { t } = useTranslation('setting');\n-  const [form] = AntForm.useForm();\n \n   const settings = useUserStore(settingsSelectors.currentSystemAgent, isEqual);\n   const [updateSystemAgent] = useUserStore((s) => [s.updateSystemAgent]);\n \n+  const [form] = AntForm.useForm();\n+  useEffect(() => {\n+    form.setFieldsValue(settings);\n+  }, [settings]);\n+\n   const systemAgentSettings: SettingItemGroup = {\n     children: [\n       {\n         children: (\n           <ModelSelect\n             onChange={(props) => {\n-              updateSystemAgent('topic', props);\n+              updateSystemAgent(systemAgentKey, props);\n             }}\n             showAbility={false}\n           />\n         ),\n-        desc: t('systemAgent.topic.modelDesc'),\n-        label: t('systemAgent.topic.label'),\n-        name: ['topic', 'model'],\n+        desc: t(`systemAgent.${systemAgentKey}.modelDesc`),\n+        label: t(`systemAgent.${systemAgentKey}.label`),\n+        name: [systemAgentKey, 'model'],\n       },\n     ],\n-    title: t('systemAgent.topic.title'),\n+    title: t(`systemAgent.${systemAgentKey}.title`),\n   };\n \n   useSyncSystemAgent(form);",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1660375911",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 3095,
        "pr_file": "src/app/(main)/settings/system-agent/features/Topic.tsx",
        "discussion_id": "1660375911",
        "commented_code": "@@ -15,30 +15,35 @@ import { useSyncSystemAgent } from './useSync';\n \n type SettingItemGroup = ItemGroup;\n \n+const systemAgentKey = 'topic'\n const Topic = memo(() => {\n   const { t } = useTranslation('setting');\n-  const [form] = AntForm.useForm();\n \n   const settings = useUserStore(settingsSelectors.currentSystemAgent, isEqual);\n   const [updateSystemAgent] = useUserStore((s) => [s.updateSystemAgent]);\n \n+  const [form] = AntForm.useForm();\n+  useEffect(() => {\n+    form.setFieldsValue(settings);\n+  }, [settings]);\n+\n   const systemAgentSettings: SettingItemGroup = {\n     children: [\n       {\n         children: (\n           <ModelSelect\n             onChange={(props) => {\n-              updateSystemAgent('topic', props);\n+              updateSystemAgent(systemAgentKey, props);\n             }}\n             showAbility={false}\n           />\n         ),\n-        desc: t('systemAgent.topic.modelDesc'),\n-        label: t('systemAgent.topic.label'),\n-        name: ['topic', 'model'],\n+        desc: t(`systemAgent.${systemAgentKey}.modelDesc`),\n+        label: t(`systemAgent.${systemAgentKey}.label`),\n+        name: [systemAgentKey, 'model'],\n       },\n     ],\n-    title: t('systemAgent.topic.title'),\n+    title: t(`systemAgent.${systemAgentKey}.title`),\n   };\n \n   useSyncSystemAgent(form);",
        "comment_created_at": "2024-07-01T02:09:26+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u7406\u8bba\u4e0a\u6709\u8fd9\u4e00\u884c\u5c31\u591f\u4e86\uff0c\u5b83\u7684\u4f5c\u7528\u5c31\u7b49\u4e8e  \r\n\r\nuseEffect(() => {\r\n    form.setFieldsValue(settings);\r\n  }, [settings]);\r\n\r\n\u5efa\u8bae\u68c0\u67e5\u4e0b\u8fd9\u90e8\u5206\u7684\u5b9e\u73b0\u4e3a\u4f55\u4e0d\u751f\u6548\uff1f",
        "pr_file_module": null
      },
      {
        "comment_id": "1661063212",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 3095,
        "pr_file": "src/app/(main)/settings/system-agent/features/Topic.tsx",
        "discussion_id": "1660375911",
        "commented_code": "@@ -15,30 +15,35 @@ import { useSyncSystemAgent } from './useSync';\n \n type SettingItemGroup = ItemGroup;\n \n+const systemAgentKey = 'topic'\n const Topic = memo(() => {\n   const { t } = useTranslation('setting');\n-  const [form] = AntForm.useForm();\n \n   const settings = useUserStore(settingsSelectors.currentSystemAgent, isEqual);\n   const [updateSystemAgent] = useUserStore((s) => [s.updateSystemAgent]);\n \n+  const [form] = AntForm.useForm();\n+  useEffect(() => {\n+    form.setFieldsValue(settings);\n+  }, [settings]);\n+\n   const systemAgentSettings: SettingItemGroup = {\n     children: [\n       {\n         children: (\n           <ModelSelect\n             onChange={(props) => {\n-              updateSystemAgent('topic', props);\n+              updateSystemAgent(systemAgentKey, props);\n             }}\n             showAbility={false}\n           />\n         ),\n-        desc: t('systemAgent.topic.modelDesc'),\n-        label: t('systemAgent.topic.label'),\n-        name: ['topic', 'model'],\n+        desc: t(`systemAgent.${systemAgentKey}.modelDesc`),\n+        label: t(`systemAgent.${systemAgentKey}.label`),\n+        name: [systemAgentKey, 'model'],\n       },\n     ],\n-    title: t('systemAgent.topic.title'),\n+    title: t(`systemAgent.${systemAgentKey}.title`),\n   };\n \n   useSyncSystemAgent(form);",
        "comment_created_at": "2024-07-01T13:31:40+00:00",
        "comment_author": "hezhijie0327",
        "comment_body": "\u6539\u4e86\u4e0b`useSyncSystemAgent`\uff0c\u80fd\u5b9e\u73b0\u540c\u7b49\u6548\u679c",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1503672665",
    "pr_number": 1397,
    "pr_file": "src/app/settings/llm/components/ModelSelector.tsx",
    "created_at": "2024-02-27T05:51:13+00:00",
    "commented_code": "+import { Alert, Highlighter } from '@lobehub/ui';\n+import { Select } from 'antd';\n+import { DefaultOptionType } from 'antd/es/select';\n+import { ListResponse } from 'ollama';\n+import { memo, useEffect, useState } from 'react';\n+import { useTranslation } from 'react-i18next';\n+import { Flexbox } from 'react-layout-kit';\n+\n+import { useIsMobile } from '@/hooks/useIsMobile';\n+import { ollamaService } from '@/services/ollama';\n+import { useGlobalStore } from '@/store/global';\n+import { modelProviderSelectors } from '@/store/global/selectors';\n+import { ChatModelCard } from '@/types/llm';\n+import { ChatMessageError } from '@/types/message';\n+\n+interface ModelSelectorProps {\n+  onChange?: (nextModels: string[]) => void;\n+  value?: string[];\n+}\n+\n+const processModels = (response: string): ChatModelCard[] => {\n+  return (JSON.parse(response) as ListResponse).models.map((m) => ({\n+    functionCall: false,\n+    hidden: false,\n+    id: m.name.replace(':latest', ''),\n+    vision: false,\n+  }));\n+};\n+\n+const ModelSelector = memo<ModelSelectorProps>(({ value, onChange }) => {\n+  const { t } = useTranslation('setting');\n+\n+  const [loading, setLoading] = useState(false);\n+  const [options, setOptions] = useState<DefaultOptionType[]>([]);\n+  const [error, setError] = useState<ChatMessageError | undefined>();\n+  const endpoint = modelProviderSelectors.ollamaProxyUrl(useGlobalStore.getState());\n+\n+  const listModels = async () => {\n+    let data = await ollamaService.listModels({\n+      onError: (_, rawError) => {\n+        setError(rawError);\n+      },\n+      onLoadingChange: (loading) => {\n+        setLoading(loading);\n+      },\n+      params: {\n+        endpoint,\n+      },\n+    });\n+\n+    if (data) {\n+      setError(undefined);\n+      setOptions(\n+        processModels(data).map((card) => ({\n+          label: card.id,\n+          value: card.id,\n+        })),\n+      );\n+    }\n+  };\n+\n+  const isMobile = useIsMobile();\n+\n+  useEffect(() => {",
    "repo_full_name": "lobehub/lobe-chat",
    "discussion_comments": [
      {
        "comment_id": "1503672665",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 1397,
        "pr_file": "src/app/settings/llm/components/ModelSelector.tsx",
        "discussion_id": "1503672665",
        "commented_code": "@@ -0,0 +1,99 @@\n+import { Alert, Highlighter } from '@lobehub/ui';\n+import { Select } from 'antd';\n+import { DefaultOptionType } from 'antd/es/select';\n+import { ListResponse } from 'ollama';\n+import { memo, useEffect, useState } from 'react';\n+import { useTranslation } from 'react-i18next';\n+import { Flexbox } from 'react-layout-kit';\n+\n+import { useIsMobile } from '@/hooks/useIsMobile';\n+import { ollamaService } from '@/services/ollama';\n+import { useGlobalStore } from '@/store/global';\n+import { modelProviderSelectors } from '@/store/global/selectors';\n+import { ChatModelCard } from '@/types/llm';\n+import { ChatMessageError } from '@/types/message';\n+\n+interface ModelSelectorProps {\n+  onChange?: (nextModels: string[]) => void;\n+  value?: string[];\n+}\n+\n+const processModels = (response: string): ChatModelCard[] => {\n+  return (JSON.parse(response) as ListResponse).models.map((m) => ({\n+    functionCall: false,\n+    hidden: false,\n+    id: m.name.replace(':latest', ''),\n+    vision: false,\n+  }));\n+};\n+\n+const ModelSelector = memo<ModelSelectorProps>(({ value, onChange }) => {\n+  const { t } = useTranslation('setting');\n+\n+  const [loading, setLoading] = useState(false);\n+  const [options, setOptions] = useState<DefaultOptionType[]>([]);\n+  const [error, setError] = useState<ChatMessageError | undefined>();\n+  const endpoint = modelProviderSelectors.ollamaProxyUrl(useGlobalStore.getState());\n+\n+  const listModels = async () => {\n+    let data = await ollamaService.listModels({\n+      onError: (_, rawError) => {\n+        setError(rawError);\n+      },\n+      onLoadingChange: (loading) => {\n+        setLoading(loading);\n+      },\n+      params: {\n+        endpoint,\n+      },\n+    });\n+\n+    if (data) {\n+      setError(undefined);\n+      setOptions(\n+        processModels(data).map((card) => ({\n+          label: card.id,\n+          value: card.id,\n+        })),\n+      );\n+    }\n+  };\n+\n+  const isMobile = useIsMobile();\n+\n+  useEffect(() => {",
        "comment_created_at": "2024-02-27T05:51:13+00:00",
        "comment_author": "arvinxx",
        "comment_body": "\u4e0d\u8981\u4f7f\u7528 useEffect\uff0c\u6539\u6210\u7528 useSWR \u6765\u83b7\u53d6\u6570\u636e ",
        "pr_file_module": null
      },
      {
        "comment_id": "1507028613",
        "repo_full_name": "lobehub/lobe-chat",
        "pr_number": 1397,
        "pr_file": "src/app/settings/llm/components/ModelSelector.tsx",
        "discussion_id": "1503672665",
        "commented_code": "@@ -0,0 +1,99 @@\n+import { Alert, Highlighter } from '@lobehub/ui';\n+import { Select } from 'antd';\n+import { DefaultOptionType } from 'antd/es/select';\n+import { ListResponse } from 'ollama';\n+import { memo, useEffect, useState } from 'react';\n+import { useTranslation } from 'react-i18next';\n+import { Flexbox } from 'react-layout-kit';\n+\n+import { useIsMobile } from '@/hooks/useIsMobile';\n+import { ollamaService } from '@/services/ollama';\n+import { useGlobalStore } from '@/store/global';\n+import { modelProviderSelectors } from '@/store/global/selectors';\n+import { ChatModelCard } from '@/types/llm';\n+import { ChatMessageError } from '@/types/message';\n+\n+interface ModelSelectorProps {\n+  onChange?: (nextModels: string[]) => void;\n+  value?: string[];\n+}\n+\n+const processModels = (response: string): ChatModelCard[] => {\n+  return (JSON.parse(response) as ListResponse).models.map((m) => ({\n+    functionCall: false,\n+    hidden: false,\n+    id: m.name.replace(':latest', ''),\n+    vision: false,\n+  }));\n+};\n+\n+const ModelSelector = memo<ModelSelectorProps>(({ value, onChange }) => {\n+  const { t } = useTranslation('setting');\n+\n+  const [loading, setLoading] = useState(false);\n+  const [options, setOptions] = useState<DefaultOptionType[]>([]);\n+  const [error, setError] = useState<ChatMessageError | undefined>();\n+  const endpoint = modelProviderSelectors.ollamaProxyUrl(useGlobalStore.getState());\n+\n+  const listModels = async () => {\n+    let data = await ollamaService.listModels({\n+      onError: (_, rawError) => {\n+        setError(rawError);\n+      },\n+      onLoadingChange: (loading) => {\n+        setLoading(loading);\n+      },\n+      params: {\n+        endpoint,\n+      },\n+    });\n+\n+    if (data) {\n+      setError(undefined);\n+      setOptions(\n+        processModels(data).map((card) => ({\n+          label: card.id,\n+          value: card.id,\n+        })),\n+      );\n+    }\n+  };\n+\n+  const isMobile = useIsMobile();\n+\n+  useEffect(() => {",
        "comment_created_at": "2024-02-29T05:27:00+00:00",
        "comment_author": "sjy",
        "comment_body": "\u8fd9\u4e2a\u6539\u4e86\uff0c\u4e0d\u8fc7\u9700\u8981\u8ba8\u8bba\u662f\r\n- \u8fd9\u91cc\u7684\u5217\u8868\u9009\u9879\u548c\u521d\u59cb\u503c\u8bbe\u5b9a\u903b\u8f91\uff0c\u5728\u53e6\u4e00\u4e2a\u8bdd\u9898\u4e0b\u56de\u590d\u4e86\uff1b\r\n- \u9009\u9879\u6e32\u67d3UI\u8981\u4e0d\u8981\u548c ModelSelect\u90a3\u8fb9\u5bf9\u9f50\uff0c\u83b7\u5f97\u4e00\u81f4\u7684\u64cd\u4f5c\u4f53\u9a8c",
        "pr_file_module": null
      }
    ]
  }
]