[
  {
    "discussion_id": "1216836117",
    "pr_number": 9574,
    "pr_file": "src/main/frontend/handler/block.cljs",
    "created_at": "2023-06-04T15:51:31+00:00",
    "commented_code": "result))))]\n       (distinct (mapcat get-parents filtered-ref-blocks)))))\n \n-(defn get-idx-of-order-list-block\n+(defn convert-index\n+  [idx delta]\n+  (cond\n+    (zero? delta) idx\n+\n+    (= delta 1)\n+    (some-> (util/convert-to-letters idx) util/safe-lower-case)\n+\n+    :else\n+    (util/convert-to-roman idx)))\n+\n+(defn get-raw-idx-and-delta-of-order-list-block",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "1216836117",
        "repo_full_name": "logseq/logseq",
        "pr_number": 9574,
        "pr_file": "src/main/frontend/handler/block.cljs",
        "discussion_id": "1216836117",
        "commented_code": "@@ -286,7 +286,18 @@\n                               result))))]\n       (distinct (mapcat get-parents filtered-ref-blocks)))))\n \n-(defn get-idx-of-order-list-block\n+(defn convert-index\n+  [idx delta]\n+  (cond\n+    (zero? delta) idx\n+\n+    (= delta 1)\n+    (some-> (util/convert-to-letters idx) util/safe-lower-case)\n+\n+    :else\n+    (util/convert-to-roman idx)))\n+\n+(defn get-raw-idx-and-delta-of-order-list-block",
        "comment_created_at": "2023-06-04T15:51:31+00:00",
        "comment_author": "cnrpman",
        "comment_body": "Better use function [doc-string](https://clojuredocs.org/clojure.core/defn) here, instead of using a very long func name\r\n\r\nSample format:\r\nhttps://github.com/logseq/logseq/blob/42ec1b0026632a694910f7814444ed3dbda1f7bc/src/main/frontend/handler/page.cljs#L125-L130",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1162067307",
    "pr_number": 9037,
    "pr_file": "src/main/frontend/components/whiteboard.cljs",
    "created_at": "2023-04-10T20:36:48+00:00",
    "commented_code": ":-webkit-font-smoothing \"subpixel-antialiased\"}}\n \n      [:div.whiteboard-page-title-root\n+      {:data-html2canvas-ignore true}",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "1162067307",
        "repo_full_name": "logseq/logseq",
        "pr_number": 9037,
        "pr_file": "src/main/frontend/components/whiteboard.cljs",
        "discussion_id": "1162067307",
        "commented_code": "@@ -264,6 +264,7 @@\n               :-webkit-font-smoothing \"subpixel-antialiased\"}}\n \n      [:div.whiteboard-page-title-root\n+      {:data-html2canvas-ignore true}",
        "comment_created_at": "2023-04-10T20:36:48+00:00",
        "comment_author": "logseq-cldwalker",
        "comment_body": "Could be useful to document or comment somewhere when to use this option and why. I saw it in the PR but having dev docs in PRs aren't easy to find",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1060591190",
    "pr_number": 8200,
    "pr_file": "src/electron/electron/handler.cljs",
    "created_at": "2023-01-03T13:35:57+00:00",
    "commented_code": "result (get (js->clj result) \"filePaths\")]\n     (p/resolved (first result))))\n \n-(defmethod handle :openDir [^js _window _messages]\n+(defn- pretty-print-js-error [e]",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "1060591190",
        "repo_full_name": "logseq/logseq",
        "pr_number": 8200,
        "pr_file": "src/electron/electron/handler.cljs",
        "discussion_id": "1060591190",
        "commented_code": "@@ -174,12 +174,28 @@\n           result (get (js->clj result) \"filePaths\")]\n     (p/resolved (first result))))\n \n-(defmethod handle :openDir [^js _window _messages]\n+(defn- pretty-print-js-error [e]",
        "comment_created_at": "2023-01-03T13:35:57+00:00",
        "comment_author": "cnrpman",
        "comment_body": "Add some doc strings for the sample input?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1060584114",
    "pr_number": 8198,
    "pr_file": "src/main/frontend/components/block.cljs",
    "created_at": "2023-01-03T13:27:28+00:00",
    "commented_code": "(->>\n                                           (for [page (string/split page-original-name #\"/\")]\n                                             (when (and (string? page) page)\n-                                              (page-reference false page {} nil)))\n+                                              (page-reference false page {:preview? true} nil)))",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "1060584114",
        "repo_full_name": "logseq/logseq",
        "pr_number": 8198,
        "pr_file": "src/main/frontend/components/block.cljs",
        "discussion_id": "1060584114",
        "commented_code": "@@ -648,7 +648,7 @@\n                                          (->>\n                                           (for [page (string/split page-original-name #\"/\")]\n                                             (when (and (string? page) page)\n-                                              (page-reference false page {} nil)))\n+                                              (page-reference false page {:preview? true} nil)))",
        "comment_created_at": "2023-01-03T13:27:28+00:00",
        "comment_author": "cnrpman",
        "comment_body": "Better to add a comment about the hack:\r\n```suggestion\r\n                                              ;; hovering on page ref in page-preview does not show another page-preview if {:preview? true} was passed to page-blocks-cp\r\n                                              (page-reference false page {:preview? true} nil)))\r\n```\r\n\r\nWould be great to add some doc strings to `page-cp`",
        "pr_file_module": null
      },
      {
        "comment_id": "1061132625",
        "repo_full_name": "logseq/logseq",
        "pr_number": 8198,
        "pr_file": "src/main/frontend/components/block.cljs",
        "discussion_id": "1060584114",
        "commented_code": "@@ -648,7 +648,7 @@\n                                          (->>\n                                           (for [page (string/split page-original-name #\"/\")]\n                                             (when (and (string? page) page)\n-                                              (page-reference false page {} nil)))\n+                                              (page-reference false page {:preview? true} nil)))",
        "comment_created_at": "2023-01-04T04:47:02+00:00",
        "comment_author": "situ2001",
        "comment_body": "I have added some doc strings to `page-cp` and `page-reference`. I think it is better than adding a comment to the line where invokes `page-reference` with argument `{:preview? true}`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "995837711",
    "pr_number": 6974,
    "pr_file": "src/main/frontend/handler/editor.cljs",
    "created_at": "2022-10-14T14:40:20+00:00",
    "commented_code": "(state/selection?)\n         (select-up-down direction)\n \n-        :else\n+        (not (state/get-edit-input-id))",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "995837711",
        "repo_full_name": "logseq/logseq",
        "pr_number": 6974,
        "pr_file": "src/main/frontend/handler/editor.cljs",
        "discussion_id": "995837711",
        "commented_code": "@@ -3097,7 +3097,7 @@\n         (state/selection?)\n         (select-up-down direction)\n \n-        :else\n+        (not (state/get-edit-input-id))",
        "comment_created_at": "2022-10-14T14:40:20+00:00",
        "comment_author": "logseq-cldwalker",
        "comment_body": "Perhaps a brief comment summarizing why there's a condition here would be helpful as I wouldn't know if I hadn't reviewed",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "978201523",
    "pr_number": 6814,
    "pr_file": "bb.edn",
    "created_at": "2022-09-23T01:26:25+00:00",
    "commented_code": ";; TODO: Address vars tagged with cleanup-todo. These\n    ;; are left mostly because they are not high priority\n    ;; or not well understood\n-   :metadata-exceptions #{:large-vars/cleanup-todo}}}}\n+   :metadata-exceptions #{:large-vars/cleanup-todo}}\n+\n+  :ns-docstrings\n+  {:paths [\"src/main\"]",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "978201523",
        "repo_full_name": "logseq/logseq",
        "pr_number": 6814,
        "pr_file": "bb.edn",
        "discussion_id": "978201523",
        "commented_code": "@@ -98,4 +101,10 @@\n    ;; TODO: Address vars tagged with cleanup-todo. These\n    ;; are left mostly because they are not high priority\n    ;; or not well understood\n-   :metadata-exceptions #{:large-vars/cleanup-todo}}}}\n+   :metadata-exceptions #{:large-vars/cleanup-todo}}\n+\n+  :ns-docstrings\n+  {:paths [\"src/main\"]",
        "comment_created_at": "2022-09-23T01:26:25+00:00",
        "comment_author": "logseq-cldwalker",
        "comment_body": "@cnrpman @andelf Would one of you be interested in adding ns docstrings for `src/electron` in a followup PR? If so, add the path here to enable linting for it",
        "pr_file_module": null
      }
    ]
  }
]