[
  {
    "discussion_id": "1124701705",
    "pr_number": 8753,
    "pr_file": "tldraw/apps/tldraw-logseq/src/hooks/usePaste.ts",
    "created_at": "2023-03-03T16:29:30+00:00",
    "commented_code": "const isValidURL = (url: string) => {\n   try {\n-    new URL(url)\n-    return true\n+    const parsedUrl = new URL(url)\n+    return parsedUrl.host && ['http:', 'https:'].includes(parsedUrl.protocol)",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "1124701705",
        "repo_full_name": "logseq/logseq",
        "pr_number": 8753,
        "pr_file": "tldraw/apps/tldraw-logseq/src/hooks/usePaste.ts",
        "discussion_id": "1124701705",
        "commented_code": "@@ -29,8 +29,8 @@ import { LogseqContext, LogseqContextValue } from '../lib/logseq-context'\n \n const isValidURL = (url: string) => {\n   try {\n-    new URL(url)\n-    return true\n+    const parsedUrl = new URL(url)\n+    return parsedUrl.host && ['http:', 'https:'].includes(parsedUrl.protocol)",
        "comment_created_at": "2023-03-03T16:29:30+00:00",
        "comment_author": "sprocketc",
        "comment_body": "new URL(url) was successful for unsupported  protocols, but also for non url strings that contained `:`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1036543666",
    "pr_number": 7538,
    "pr_file": "e2e-tests/page-search.spec.ts",
    "created_at": "2022-11-30T23:18:03+00:00",
    "commented_code": "})\n \n async function alias_test( block: Block, page: Page, page_name: string, search_kws: string[] ) {\n+  await createRandomPage(page)\n+\n   const rand = randomString(10)\n   let target_name = page_name + ' target ' + rand\n   let alias_name = page_name + ' alias ' + rand\n   let alias_test_content_1 = randomString(20)\n   let alias_test_content_2 = randomString(20)\n   let alias_test_content_3 = randomString(20)\n \n-  // shortcut opening test\n-  let parent_title = await createRandomPage(page)\n-\n-  await page.fill('textarea >> nth=0', '[[' + target_name + ']]')\n+  await page.type('textarea >> nth=0', '[[' + target_name)",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "1036543666",
        "repo_full_name": "logseq/logseq",
        "pr_number": 7538,
        "pr_file": "e2e-tests/page-search.spec.ts",
        "discussion_id": "1036543666",
        "commented_code": "@@ -83,17 +83,16 @@ test('Search CJK', async ({ page, block }) => {\n })\n \n async function alias_test( block: Block, page: Page, page_name: string, search_kws: string[] ) {\n+  await createRandomPage(page)\n+\n   const rand = randomString(10)\n   let target_name = page_name + ' target ' + rand\n   let alias_name = page_name + ' alias ' + rand\n   let alias_test_content_1 = randomString(20)\n   let alias_test_content_2 = randomString(20)\n   let alias_test_content_3 = randomString(20)\n \n-  // shortcut opening test\n-  let parent_title = await createRandomPage(page)\n-\n-  await page.fill('textarea >> nth=0', '[[' + target_name + ']]')\n+  await page.type('textarea >> nth=0', '[[' + target_name)",
        "comment_created_at": "2022-11-30T23:18:03+00:00",
        "comment_author": "logseq-cldwalker",
        "comment_body": "I see a couple `fill`s were changed to `type`. Is the latter more useful for stability or something else ? Asking so I know when to use which api call",
        "pr_file_module": null
      },
      {
        "comment_id": "1036753307",
        "repo_full_name": "logseq/logseq",
        "pr_number": 7538,
        "pr_file": "e2e-tests/page-search.spec.ts",
        "discussion_id": "1036543666",
        "commented_code": "@@ -83,17 +83,16 @@ test('Search CJK', async ({ page, block }) => {\n })\n \n async function alias_test( block: Block, page: Page, page_name: string, search_kws: string[] ) {\n+  await createRandomPage(page)\n+\n   const rand = randomString(10)\n   let target_name = page_name + ' target ' + rand\n   let alias_name = page_name + ' alias ' + rand\n   let alias_test_content_1 = randomString(20)\n   let alias_test_content_2 = randomString(20)\n   let alias_test_content_3 = randomString(20)\n \n-  // shortcut opening test\n-  let parent_title = await createRandomPage(page)\n-\n-  await page.fill('textarea >> nth=0', '[[' + target_name + ']]')\n+  await page.type('textarea >> nth=0', '[[' + target_name)",
        "comment_created_at": "2022-12-01T07:04:02+00:00",
        "comment_author": "cnrpman",
        "comment_body": "Empirically, yes \ud83d\ude48 It triggers the keyboard events better",
        "pr_file_module": null
      },
      {
        "comment_id": "1036765791",
        "repo_full_name": "logseq/logseq",
        "pr_number": 7538,
        "pr_file": "e2e-tests/page-search.spec.ts",
        "discussion_id": "1036543666",
        "commented_code": "@@ -83,17 +83,16 @@ test('Search CJK', async ({ page, block }) => {\n })\n \n async function alias_test( block: Block, page: Page, page_name: string, search_kws: string[] ) {\n+  await createRandomPage(page)\n+\n   const rand = randomString(10)\n   let target_name = page_name + ' target ' + rand\n   let alias_name = page_name + ' alias ' + rand\n   let alias_test_content_1 = randomString(20)\n   let alias_test_content_2 = randomString(20)\n   let alias_test_content_3 = randomString(20)\n \n-  // shortcut opening test\n-  let parent_title = await createRandomPage(page)\n-\n-  await page.fill('textarea >> nth=0', '[[' + target_name + ']]')\n+  await page.type('textarea >> nth=0', '[[' + target_name)",
        "comment_created_at": "2022-12-01T07:21:20+00:00",
        "comment_author": "cnrpman",
        "comment_body": "> @cnrpman Thanks for fixing tests! \ud83d\udc4d \ud83d\udea2 Unrelated to this PR, [editor.spec.ts](https://github.com/logseq/logseq/actions/runs/3586656908/jobs/6036181989) started intermittently failing on this branch (and on master). Probably worth disabling if we don't have time to fix it\r\n\r\nI noticed the test case. Just added a delay to it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "984386842",
    "pr_number": 6850,
    "pr_file": "tldraw/packages/react/src/hooks/useGestureEvents.ts",
    "created_at": "2022-09-30T09:12:25+00:00",
    "commented_code": "max: TLViewport.maxZoom,\n         min: TLViewport.minZoom,\n       }),\n+      modifierKey: isDarwin() ? 'metaKey' : 'ctrlKey',",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "984386842",
        "repo_full_name": "logseq/logseq",
        "pr_number": 6850,
        "pr_file": "tldraw/packages/react/src/hooks/useGestureEvents.ts",
        "discussion_id": "984386842",
        "commented_code": "@@ -99,6 +99,7 @@ export function useGestureEvents(ref: React.RefObject<HTMLDivElement>) {\n         max: TLViewport.maxZoom,\n         min: TLViewport.minZoom,\n       }),\n+      modifierKey: isDarwin() ? 'metaKey' : 'ctrlKey',",
        "comment_created_at": "2022-09-30T09:12:25+00:00",
        "comment_author": "sprocketc",
        "comment_body": "The `modifierKey` of the pinch event is handled by the [use-gesture library config](https://github.com/pmndrs/use-gesture/blob/main/packages/core/src/types/config.ts#L101), and only accepts a [single mod key](https://github.com/pmndrs/use-gesture/blob/main/packages/core/src/types/config.ts#L99). I tried to manually transition to `select.pinching` when the `metaKey` is pressed, but I couldn't make it work properly.",
        "pr_file_module": null
      },
      {
        "comment_id": "984411002",
        "repo_full_name": "logseq/logseq",
        "pr_number": 6850,
        "pr_file": "tldraw/packages/react/src/hooks/useGestureEvents.ts",
        "discussion_id": "984386842",
        "commented_code": "@@ -99,6 +99,7 @@ export function useGestureEvents(ref: React.RefObject<HTMLDivElement>) {\n         max: TLViewport.maxZoom,\n         min: TLViewport.minZoom,\n       }),\n+      modifierKey: isDarwin() ? 'metaKey' : 'ctrlKey',",
        "comment_created_at": "2022-09-30T09:39:49+00:00",
        "comment_author": "pengx17",
        "comment_body": "When this option is turned on, I am no longer able to pinch the canvas without `metaKey` modifier - is this intended?",
        "pr_file_module": null
      },
      {
        "comment_id": "984422042",
        "repo_full_name": "logseq/logseq",
        "pr_number": 6850,
        "pr_file": "tldraw/packages/react/src/hooks/useGestureEvents.ts",
        "discussion_id": "984386842",
        "commented_code": "@@ -99,6 +99,7 @@ export function useGestureEvents(ref: React.RefObject<HTMLDivElement>) {\n         max: TLViewport.maxZoom,\n         min: TLViewport.minZoom,\n       }),\n+      modifierKey: isDarwin() ? 'metaKey' : 'ctrlKey',",
        "comment_created_at": "2022-09-30T09:52:23+00:00",
        "comment_author": "sprocketc",
        "comment_body": "It shouldn't be, The default mod key is `ctrl` [according to their docs](https://github.com/pmndrs/use-gesture/blob/main/packages/core/src/types/config.ts#L121). I'll revert this for now, and look for a better solution.",
        "pr_file_module": null
      },
      {
        "comment_id": "984425133",
        "repo_full_name": "logseq/logseq",
        "pr_number": 6850,
        "pr_file": "tldraw/packages/react/src/hooks/useGestureEvents.ts",
        "discussion_id": "984386842",
        "commented_code": "@@ -99,6 +99,7 @@ export function useGestureEvents(ref: React.RefObject<HTMLDivElement>) {\n         max: TLViewport.maxZoom,\n         min: TLViewport.minZoom,\n       }),\n+      modifierKey: isDarwin() ? 'metaKey' : 'ctrlKey',",
        "comment_created_at": "2022-09-30T09:55:47+00:00",
        "comment_author": "sprocketc",
        "comment_body": "Reverted.",
        "pr_file_module": null
      }
    ]
  }
]