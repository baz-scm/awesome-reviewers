[
  {
    "discussion_id": "978521893",
    "pr_number": 6821,
    "pr_file": "tailwind.config.js",
    "created_at": "2022-09-23T11:11:38+00:00",
    "commented_code": "const colors = require('tailwindcss/colors')\n \n+function exposeColorsToCssVars({ addBase, theme }) {\n+  function extractColorVars(colorObj, colorGroup = '') {\n+    return Object.keys(colorObj).reduce((vars, colorKey) => {\n+      const value = colorObj[colorKey];\n+\n+      const newVars =\n+        typeof value === 'string'\n+          ? { [`--color${colorGroup}-${colorKey}`]: value }\n+          : extractColorVars(value, `-${colorKey}`);\n+\n+      return { ...vars, ...newVars };\n+    }, {});\n+  }\n+\n+  addBase({\n+    ':root': extractColorVars(theme('colors')),\n+  });\n+}\n+",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "978521893",
        "repo_full_name": "logseq/logseq",
        "pr_number": 6821,
        "pr_file": "tailwind.config.js",
        "discussion_id": "978521893",
        "commented_code": "@@ -1,13 +1,34 @@\n const colors = require('tailwindcss/colors')\n \n+function exposeColorsToCssVars({ addBase, theme }) {\n+  function extractColorVars(colorObj, colorGroup = '') {\n+    return Object.keys(colorObj).reduce((vars, colorKey) => {\n+      const value = colorObj[colorKey];\n+\n+      const newVars =\n+        typeof value === 'string'\n+          ? { [`--color${colorGroup}-${colorKey}`]: value }\n+          : extractColorVars(value, `-${colorKey}`);\n+\n+      return { ...vars, ...newVars };\n+    }, {});\n+  }\n+\n+  addBase({\n+    ':root': extractColorVars(theme('colors')),\n+  });\n+}\n+",
        "comment_created_at": "2022-09-23T11:11:38+00:00",
        "comment_author": "sprocketc",
        "comment_body": "[This snippet](https://gist.github.com/Merott/d2a19b32db07565e94f10d13d11a8574) exposes tailwind colors as css vars on the :root element (eg `--color-red-900`).",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "978539637",
    "pr_number": 6821,
    "pr_file": "tailwind.config.js",
    "created_at": "2022-09-23T11:31:39+00:00",
    "commented_code": "const colors = require('tailwindcss/colors')\n \n+function exposeColorsToCssVars({ addBase, theme }) {\n+  function extractColorVars(colorObj, colorGroup = '') {\n+    return Object.keys(colorObj).reduce((vars, colorKey) => {\n+      const value = colorObj[colorKey];\n+\n+      const newVars =\n+        typeof value === 'string'\n+          ? { [`--color${colorGroup}-${colorKey}`]: value }\n+          : extractColorVars(value, `-${colorKey}`);\n+\n+      return { ...vars, ...newVars };\n+    }, {});\n+  }\n+\n+  addBase({\n+    ':root': extractColorVars(theme('colors')),\n+  });\n+}\n+\n module.exports = {\n   mode: 'jit',\n   purge: [\n     './src/**/*.js',\n     './src/**/*.cljs',\n     './resources/**/*.html',\n   ],\n-  plugins: [require('@tailwindcss/ui')],\n+  plugins: [\n+    require('@tailwindcss/ui'),\n+    exposeColorsToCssVars],\n   darkMode: 'class',\n   theme: {\n     extend: {\n+      fontSize: {\n+        '2xs': ['0.625rem', '0.875rem']\n+      },",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "978539637",
        "repo_full_name": "logseq/logseq",
        "pr_number": 6821,
        "pr_file": "tailwind.config.js",
        "discussion_id": "978539637",
        "commented_code": "@@ -1,16 +1,40 @@\n const colors = require('tailwindcss/colors')\n \n+function exposeColorsToCssVars({ addBase, theme }) {\n+  function extractColorVars(colorObj, colorGroup = '') {\n+    return Object.keys(colorObj).reduce((vars, colorKey) => {\n+      const value = colorObj[colorKey];\n+\n+      const newVars =\n+        typeof value === 'string'\n+          ? { [`--color${colorGroup}-${colorKey}`]: value }\n+          : extractColorVars(value, `-${colorKey}`);\n+\n+      return { ...vars, ...newVars };\n+    }, {});\n+  }\n+\n+  addBase({\n+    ':root': extractColorVars(theme('colors')),\n+  });\n+}\n+\n module.exports = {\n   mode: 'jit',\n   purge: [\n     './src/**/*.js',\n     './src/**/*.cljs',\n     './resources/**/*.html',\n   ],\n-  plugins: [require('@tailwindcss/ui')],\n+  plugins: [\n+    require('@tailwindcss/ui'),\n+    exposeColorsToCssVars],\n   darkMode: 'class',\n   theme: {\n     extend: {\n+      fontSize: {\n+        '2xs': ['0.625rem', '0.875rem']\n+      },",
        "comment_created_at": "2022-09-23T11:31:39+00:00",
        "comment_author": "sprocketc",
        "comment_body": "I believe this is the [suggested way](https://tailwindcss.com/docs/font-size#using-custom-values) of extending tailwind's font sizes. This would also allow us to use `text-2xs` with the `@apply` directive.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "979752319",
    "pr_number": 6821,
    "pr_file": "tailwind.config.js",
    "created_at": "2022-09-26T09:04:35+00:00",
    "commented_code": "const colors = require('tailwindcss/colors')\n \n+function exposeColorsToCssVars({ addBase, theme }) {\n+  function extractColorVars(colorObj, colorGroup = '') {\n+    return Object.keys(colorObj).reduce((vars, colorKey) => {\n+      const value = colorObj[colorKey];\n+\n+      const newVars =\n+        typeof value === 'string'\n+          ? { [`--color${colorGroup}-${colorKey}`]: value }\n+          : extractColorVars(value, `-${colorKey}`);\n+\n+      return { ...vars, ...newVars };\n+    }, {});\n+  }\n+\n+  addBase({\n+    ':root': extractColorVars(theme('colors')),\n+  });\n+}\n+\n module.exports = {\n   mode: 'jit',\n-  purge: [\n-    './src/**/*.js',\n-    './src/**/*.cljs',\n-    './resources/**/*.html',\n-  ],\n-  plugins: [require('@tailwindcss/ui')],\n+  purge: {\n+    content: [\n+      './src/**/*.js',\n+      './src/**/*.cljs',\n+      './resources/**/*.html'\n+    ],\n+    safelist: [\n+      \"bg-black\",\n+      \"bg-white\",\n+      \"bg-gray-50\",  \"bg-red-50\",  \"bg-yellow-50\",  \"bg-green-50\",  \"bg-blue-50\",  \"bg-indigo-50\",  \"bg-orange-50\",  \"bg-rose-50\",  \"bg-purple-50\",\n+      \"bg-gray-100\", \"bg-red-100\", \"bg-yellow-100\", \"bg-green-100\", \"bg-blue-100\", \"bg-indigo-100\", \"bg-orange-100\", \"bg-rose-100\", \"bg-purple-100\", \"bg-pink-100\",\n+      \"bg-gray-200\", \"bg-red-200\", \"bg-yellow-200\", \"bg-green-200\", \"bg-blue-200\", \"bg-indigo-200\", \"bg-orange-200\", \"bg-rose-200\", \"bg-purple-200\", \"bg-pink-200\",\n+      \"bg-gray-300\", \"bg-red-300\", \"bg-yellow-300\", \"bg-green-300\", \"bg-blue-300\", \"bg-indigo-300\", \"bg-orange-300\", \"bg-rose-300\", \"bg-purple-300\", \"bg-pink-300\",\n+      \"bg-gray-400\", \"bg-red-400\", \"bg-yellow-400\", \"bg-green-400\", \"bg-blue-400\", \"bg-indigo-400\", \"bg-orange-400\", \"bg-rose-400\", \"bg-purple-400\", \"bg-pink-400\",\n+      \"bg-gray-500\", \"bg-red-500\", \"bg-yellow-500\", \"bg-green-500\", \"bg-blue-500\", \"bg-indigo-500\", \"bg-orange-500\", \"bg-rose-500\", \"bg-purple-500\", \"bg-pink-500\",\n+      \"bg-gray-600\", \"bg-red-600\", \"bg-yellow-600\", \"bg-green-600\", \"bg-blue-600\", \"bg-indigo-600\", \"bg-orange-600\", \"bg-rose-600\", \"bg-purple-600\", \"bg-pink-600\",\n+      \"bg-gray-700\", \"bg-red-700\", \"bg-yellow-700\", \"bg-green-700\", \"bg-blue-700\", \"bg-indigo-700\", \"bg-orange-700\", \"bg-rose-700\", \"bg-purple-700\", \"bg-pink-700\",\n+      \"bg-gray-800\", \"bg-red-800\", \"bg-yellow-800\", \"bg-green-800\", \"bg-blue-800\", \"bg-indigo-800\", \"bg-orange-800\", \"bg-rose-800\", \"bg-purple-800\", \"bg-pink-800\",\n+      \"bg-gray-900\", \"bg-red-900\", \"bg-yellow-900\", \"bg-green-900\", \"bg-blue-900\", \"bg-indigo-900\", \"bg-orange-900\", \"bg-rose-900\", \"bg-purple-900\", \"bg-pink-900\",\n+    ]\n+  },",
    "repo_full_name": "logseq/logseq",
    "discussion_comments": [
      {
        "comment_id": "979752319",
        "repo_full_name": "logseq/logseq",
        "pr_number": 6821,
        "pr_file": "tailwind.config.js",
        "discussion_id": "979752319",
        "commented_code": "@@ -1,16 +1,56 @@\n const colors = require('tailwindcss/colors')\n \n+function exposeColorsToCssVars({ addBase, theme }) {\n+  function extractColorVars(colorObj, colorGroup = '') {\n+    return Object.keys(colorObj).reduce((vars, colorKey) => {\n+      const value = colorObj[colorKey];\n+\n+      const newVars =\n+        typeof value === 'string'\n+          ? { [`--color${colorGroup}-${colorKey}`]: value }\n+          : extractColorVars(value, `-${colorKey}`);\n+\n+      return { ...vars, ...newVars };\n+    }, {});\n+  }\n+\n+  addBase({\n+    ':root': extractColorVars(theme('colors')),\n+  });\n+}\n+\n module.exports = {\n   mode: 'jit',\n-  purge: [\n-    './src/**/*.js',\n-    './src/**/*.cljs',\n-    './resources/**/*.html',\n-  ],\n-  plugins: [require('@tailwindcss/ui')],\n+  purge: {\n+    content: [\n+      './src/**/*.js',\n+      './src/**/*.cljs',\n+      './resources/**/*.html'\n+    ],\n+    safelist: [\n+      \"bg-black\",\n+      \"bg-white\",\n+      \"bg-gray-50\",  \"bg-red-50\",  \"bg-yellow-50\",  \"bg-green-50\",  \"bg-blue-50\",  \"bg-indigo-50\",  \"bg-orange-50\",  \"bg-rose-50\",  \"bg-purple-50\",\n+      \"bg-gray-100\", \"bg-red-100\", \"bg-yellow-100\", \"bg-green-100\", \"bg-blue-100\", \"bg-indigo-100\", \"bg-orange-100\", \"bg-rose-100\", \"bg-purple-100\", \"bg-pink-100\",\n+      \"bg-gray-200\", \"bg-red-200\", \"bg-yellow-200\", \"bg-green-200\", \"bg-blue-200\", \"bg-indigo-200\", \"bg-orange-200\", \"bg-rose-200\", \"bg-purple-200\", \"bg-pink-200\",\n+      \"bg-gray-300\", \"bg-red-300\", \"bg-yellow-300\", \"bg-green-300\", \"bg-blue-300\", \"bg-indigo-300\", \"bg-orange-300\", \"bg-rose-300\", \"bg-purple-300\", \"bg-pink-300\",\n+      \"bg-gray-400\", \"bg-red-400\", \"bg-yellow-400\", \"bg-green-400\", \"bg-blue-400\", \"bg-indigo-400\", \"bg-orange-400\", \"bg-rose-400\", \"bg-purple-400\", \"bg-pink-400\",\n+      \"bg-gray-500\", \"bg-red-500\", \"bg-yellow-500\", \"bg-green-500\", \"bg-blue-500\", \"bg-indigo-500\", \"bg-orange-500\", \"bg-rose-500\", \"bg-purple-500\", \"bg-pink-500\",\n+      \"bg-gray-600\", \"bg-red-600\", \"bg-yellow-600\", \"bg-green-600\", \"bg-blue-600\", \"bg-indigo-600\", \"bg-orange-600\", \"bg-rose-600\", \"bg-purple-600\", \"bg-pink-600\",\n+      \"bg-gray-700\", \"bg-red-700\", \"bg-yellow-700\", \"bg-green-700\", \"bg-blue-700\", \"bg-indigo-700\", \"bg-orange-700\", \"bg-rose-700\", \"bg-purple-700\", \"bg-pink-700\",\n+      \"bg-gray-800\", \"bg-red-800\", \"bg-yellow-800\", \"bg-green-800\", \"bg-blue-800\", \"bg-indigo-800\", \"bg-orange-800\", \"bg-rose-800\", \"bg-purple-800\", \"bg-pink-800\",\n+      \"bg-gray-900\", \"bg-red-900\", \"bg-yellow-900\", \"bg-green-900\", \"bg-blue-900\", \"bg-indigo-900\", \"bg-orange-900\", \"bg-rose-900\", \"bg-purple-900\", \"bg-pink-900\",\n+    ]\n+  },",
        "comment_created_at": "2022-09-26T09:04:35+00:00",
        "comment_author": "sprocketc",
        "comment_body": "We can add color classes to [tailwind's safelist](https://tailwindcss.nuxtjs.org/tailwind/config/#whitelisting-classes) instead of re-declaring them. Although `safelist` supports regular expressions, they are [incompatible with jit](https://v2.tailwindcss.com/docs/just-in-time-mode#limitations) mode, so we have to explicitly list all of them.",
        "pr_file_module": null
      }
    ]
  }
]