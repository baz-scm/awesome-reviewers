[
  {
    "discussion_id": "1728882997",
    "pr_number": 2753,
    "pr_file": "src/mbgl/gl/layer_group_gl.cpp",
    "created_at": "2024-08-23T12:22:06+00:00",
    "commented_code": "return;\n     }\n \n-    MLN_TRACE_FUNC()\n-    MLN_ZONE_STR(name)\n+    {\n+        MLN_TRACE_FUNC()\n+        MLN_ZONE_STR(name)\n+    }",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1728882997",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2753,
        "pr_file": "src/mbgl/gl/layer_group_gl.cpp",
        "discussion_id": "1728882997",
        "commented_code": "@@ -28,8 +28,10 @@ void TileLayerGroupGL::upload(gfx::UploadPass& uploadPass) {\n         return;\n     }\n \n-    MLN_TRACE_FUNC()\n-    MLN_ZONE_STR(name)\n+    {\n+        MLN_TRACE_FUNC()\n+        MLN_ZONE_STR(name)\n+    }",
        "comment_created_at": "2024-08-23T12:22:06+00:00",
        "comment_author": "alexcristici",
        "comment_body": "What about this? Seems to be duplicated?",
        "pr_file_module": null
      },
      {
        "comment_id": "1731727161",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2753,
        "pr_file": "src/mbgl/gl/layer_group_gl.cpp",
        "discussion_id": "1728882997",
        "commented_code": "@@ -28,8 +28,10 @@ void TileLayerGroupGL::upload(gfx::UploadPass& uploadPass) {\n         return;\n     }\n \n-    MLN_TRACE_FUNC()\n-    MLN_ZONE_STR(name)\n+    {\n+        MLN_TRACE_FUNC()\n+        MLN_ZONE_STR(name)\n+    }",
        "comment_created_at": "2024-08-26T19:38:13+00:00",
        "comment_author": "alasram",
        "comment_body": "`MLN_ZONE_STR` adds a string text to the Zone. From Tracy manual:\r\n```\r\nUse the ZoneText(text, size) macro to add a custom text string that the profiler will display along\r\nwith the zone information (for example, name of the file you are opening).\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1731802969",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2753,
        "pr_file": "src/mbgl/gl/layer_group_gl.cpp",
        "discussion_id": "1728882997",
        "commented_code": "@@ -28,8 +28,10 @@ void TileLayerGroupGL::upload(gfx::UploadPass& uploadPass) {\n         return;\n     }\n \n-    MLN_TRACE_FUNC()\n-    MLN_ZONE_STR(name)\n+    {\n+        MLN_TRACE_FUNC()\n+        MLN_ZONE_STR(name)\n+    }",
        "comment_created_at": "2024-08-26T20:43:05+00:00",
        "comment_author": "TimSylvester",
        "comment_body": "Yes, this lets you see what layer, source, etc., is being done from each block in the trace.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1610013228",
    "pr_number": 2417,
    "pr_file": "src/mbgl/gl/uniform_buffer_gl.cpp",
    "created_at": "2024-05-22T13:56:39+00:00",
    "commented_code": "using namespace platform;\n \n+namespace {\n+\n+int64_t generateDebugId() noexcept {\n+    static std::atomic_int64_t counter(0);\n+    return ++counter;\n+}\n+\n+} // namespace\n+\n UniformBufferGL::UniformBufferGL(const void* data_, std::size_t size_, IBufferAllocator& allocator_)\n     : UniformBuffer(size_),\n+      uniqueDebugId(generateDebugId()),",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1610013228",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2417,
        "pr_file": "src/mbgl/gl/uniform_buffer_gl.cpp",
        "discussion_id": "1610013228",
        "commented_code": "@@ -12,9 +14,20 @@ namespace gl {\n \n using namespace platform;\n \n+namespace {\n+\n+int64_t generateDebugId() noexcept {\n+    static std::atomic_int64_t counter(0);\n+    return ++counter;\n+}\n+\n+} // namespace\n+\n UniformBufferGL::UniformBufferGL(const void* data_, std::size_t size_, IBufferAllocator& allocator_)\n     : UniformBuffer(size_),\n+      uniqueDebugId(generateDebugId()),",
        "comment_created_at": "2024-05-22T13:56:39+00:00",
        "comment_author": "mwilsnd",
        "comment_body": "Could this be put behind a preprocessor macro so it only happens when built with Tracy support?",
        "pr_file_module": null
      },
      {
        "comment_id": "1610783375",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2417,
        "pr_file": "src/mbgl/gl/uniform_buffer_gl.cpp",
        "discussion_id": "1610013228",
        "commented_code": "@@ -12,9 +14,20 @@ namespace gl {\n \n using namespace platform;\n \n+namespace {\n+\n+int64_t generateDebugId() noexcept {\n+    static std::atomic_int64_t counter(0);\n+    return ++counter;\n+}\n+\n+} // namespace\n+\n UniformBufferGL::UniformBufferGL(const void* data_, std::size_t size_, IBufferAllocator& allocator_)\n     : UniformBuffer(size_),\n+      uniqueDebugId(generateDebugId()),",
        "comment_created_at": "2024-05-22T23:27:32+00:00",
        "comment_author": "alasram",
        "comment_body": "All added code is now guarded by the macro MLN_TRACY_ENABLE",
        "pr_file_module": null
      }
    ]
  }
]