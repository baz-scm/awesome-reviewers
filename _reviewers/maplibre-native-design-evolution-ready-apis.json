[
  {
    "discussion_id": "2104071813",
    "pr_number": 3322,
    "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/maps/MapView.java",
    "created_at": "2025-05-23T08:17:28+00:00",
    "commented_code": "* Called when the map has finished rendering a frame\n      *\n      * @param fully true if all frames have been rendered, false if partially rendered\n+     * @param stats rendering statistics\n      */\n-    void onDidFinishRenderingFrame(boolean fully, double frameEncodingTime, double frameRenderingTime);\n+    void onDidFinishRenderingFrame(boolean fully, RenderingStats stats);",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "2104071813",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3322,
        "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/maps/MapView.java",
        "discussion_id": "2104071813",
        "commented_code": "@@ -1188,8 +1188,9 @@ public interface OnDidFinishRenderingFrameListener {\n      * Called when the map has finished rendering a frame\n      *\n      * @param fully true if all frames have been rendered, false if partially rendered\n+     * @param stats rendering statistics\n      */\n-    void onDidFinishRenderingFrame(boolean fully, double frameEncodingTime, double frameRenderingTime);\n+    void onDidFinishRenderingFrame(boolean fully, RenderingStats stats);",
        "comment_created_at": "2025-05-23T08:17:28+00:00",
        "comment_author": "louwers",
        "comment_body": "This is technically a breaking change right?",
        "pr_file_module": null
      },
      {
        "comment_id": "2104075324",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3322,
        "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/maps/MapView.java",
        "discussion_id": "2104071813",
        "commented_code": "@@ -1188,8 +1188,9 @@ public interface OnDidFinishRenderingFrameListener {\n      * Called when the map has finished rendering a frame\n      *\n      * @param fully true if all frames have been rendered, false if partially rendered\n+     * @param stats rendering statistics\n      */\n-    void onDidFinishRenderingFrame(boolean fully, double frameEncodingTime, double frameRenderingTime);\n+    void onDidFinishRenderingFrame(boolean fully, RenderingStats stats);",
        "comment_created_at": "2025-05-23T08:19:39+00:00",
        "comment_author": "louwers",
        "comment_body": "Maybe we can deprecate this API and add a new one that has the full rendering stats?",
        "pr_file_module": null
      },
      {
        "comment_id": "2104372955",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3322,
        "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/maps/MapView.java",
        "discussion_id": "2104071813",
        "commented_code": "@@ -1188,8 +1188,9 @@ public interface OnDidFinishRenderingFrameListener {\n      * Called when the map has finished rendering a frame\n      *\n      * @param fully true if all frames have been rendered, false if partially rendered\n+     * @param stats rendering statistics\n      */\n-    void onDidFinishRenderingFrame(boolean fully, double frameEncodingTime, double frameRenderingTime);\n+    void onDidFinishRenderingFrame(boolean fully, RenderingStats stats);",
        "comment_created_at": "2025-05-23T11:17:18+00:00",
        "comment_author": "adrian-cojocaru",
        "comment_body": "I don't remember exactly why I added new methods for iOS and core, but decided to update the existing one on Android.\r\nAdded a new listener with rendering stats.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1828804638",
    "pr_number": 2990,
    "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/maps/NativeMap.java",
    "created_at": "2024-11-05T06:39:24+00:00",
    "commented_code": "@NonNull\n   CameraPosition getCameraPosition();\n \n+  // Note for implementors: the ordering of the padding is left, top, right, bottom\n   CameraPosition getCameraForLatLngBounds(@NonNull LatLngBounds bounds, int[] padding, double bearing, double pitch);",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1828804638",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2990,
        "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/maps/NativeMap.java",
        "discussion_id": "1828804638",
        "commented_code": "@@ -55,6 +55,7 @@ void easeTo(@NonNull LatLng center, double zoom, double bearing, double pitch, d\n   @NonNull\n   CameraPosition getCameraPosition();\n \n+  // Note for implementors: the ordering of the padding is left, top, right, bottom\n   CameraPosition getCameraForLatLngBounds(@NonNull LatLngBounds bounds, int[] padding, double bearing, double pitch);",
        "comment_created_at": "2024-11-05T06:39:24+00:00",
        "comment_author": "ianthetechie",
        "comment_body": "I have attempted to keep this PR as minimal as possible, but if there's appetite for a deeper API change, I'd suggest that this API should be deprecated and replaced with something unambiguous. In our compose wrapper, we have something with this general shape:\r\n\r\n```\r\ndata class CameraPadding(\r\n    val left: Int,\r\n    val top: Int,\r\n    val right Int,\r\n    val bottom: Int\r\n)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1826600991",
    "pr_number": 2987,
    "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/module/http/HttpRequestImpl.java",
    "created_at": "2024-11-02T16:50:25+00:00",
    "commented_code": "HttpLogger.logEnabled = enabled;\n   }\n \n+  @Deprecated\n   public static void setOkHttpClient(@Nullable OkHttpClient okHttpClient) {",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1826600991",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2987,
        "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/module/http/HttpRequestImpl.java",
        "discussion_id": "1826600991",
        "commented_code": "@@ -105,9 +105,14 @@ public static void enableLog(boolean enabled) {\n     HttpLogger.logEnabled = enabled;\n   }\n \n+  @Deprecated\n   public static void setOkHttpClient(@Nullable OkHttpClient okHttpClient) {",
        "comment_created_at": "2024-11-02T16:50:25+00:00",
        "comment_author": "louwers",
        "comment_body": "Would it be a breaking change to take a `Call.Factory` here?",
        "pr_file_module": null
      },
      {
        "comment_id": "1826862415",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2987,
        "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/module/http/HttpRequestImpl.java",
        "discussion_id": "1826600991",
        "commented_code": "@@ -105,9 +105,14 @@ public static void enableLog(boolean enabled) {\n     HttpLogger.logEnabled = enabled;\n   }\n \n+  @Deprecated\n   public static void setOkHttpClient(@Nullable OkHttpClient okHttpClient) {",
        "comment_created_at": "2024-11-02T22:10:59+00:00",
        "comment_author": "yschimke",
        "comment_body": "Binary incompatible, but source compatible",
        "pr_file_module": null
      },
      {
        "comment_id": "1826865267",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2987,
        "pr_file": "platform/android/MapLibreAndroid/src/main/java/org/maplibre/android/module/http/HttpRequestImpl.java",
        "discussion_id": "1826600991",
        "commented_code": "@@ -105,9 +105,14 @@ public static void enableLog(boolean enabled) {\n     HttpLogger.logEnabled = enabled;\n   }\n \n+  @Deprecated\n   public static void setOkHttpClient(@Nullable OkHttpClient okHttpClient) {",
        "comment_created_at": "2024-11-02T22:35:45+00:00",
        "comment_author": "louwers",
        "comment_body": "If it's source compatible I'd say go ahead and just change the signature, if you don't mind. \ud83d\ude42 ",
        "pr_file_module": null
      }
    ]
  }
]