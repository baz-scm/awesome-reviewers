[
  {
    "discussion_id": "1689998915",
    "pr_number": 2643,
    "pr_file": "platform/linux/README.md",
    "created_at": "2024-07-24T15:12:51+00:00",
    "commented_code": "### Building with Docker\n \n-You can use a Docker container to build MapLibre Native. A `Dockerfile` that installes the required dependencies when the image is built is provided in this directory.\n+You can use a Docker container to build MapLibre Native. Note that you cannot build using both Docker and host methods at the same time. If you want to switch, you need to clean the repository first, e.g. by using `git clean -dxfi -e .idea -e .clwb -e .vscode`\n \n ```bash\n # Build docker image from the repo root\n-docker build -t maplibre-native-image -f platform/linux/Dockerfile .\n+# Specifying USER_ID and GROUP_ID allows container to create files with the same owner as the host user,\n+# and avoids having to pass -u $(id -u):$(id -g) to docker run.  \n+docker build \\\n+  -t maplibre-native-image \\\n+  --build-arg USER_ID=$(id -u) \\\n+  --build-arg GROUP_ID=$(id -g) \\\n+  -f platform/linux/Dockerfile \\\n+  platform/linux\n \n-# Run docker image as the current user.\n-# This ensures that the files created in the container are owned by the current user.\n-docker run --rm -it -v \"$PWD:/code/\" -u $(id -u):$(id -g) maplibre-native-image ___any_build_command___\n-\n-# You can also execute build commands from inside the docker container by starting it without parameters:\n-docker run --rm -it -v \"$PWD:/code/\" -u $(id -u):$(id -g) maplibre-native-image\n-```\n-\n-You can safely ignore this type of message and a missing username. It happens if your linux user was not the first one created on the system.\n-\n-```\n-groups: cannot find name for group ID ....\n-I have no name!@...:/root$ `\n+# Run all build commands using the docker container.\n+# You can also execute build commands from inside the docker container by starting it without the build command.",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1689998915",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2643,
        "pr_file": "platform/linux/README.md",
        "discussion_id": "1689998915",
        "commented_code": "@@ -26,25 +26,22 @@ Optional: `libsqlite3-dev` (also available as vendored dependency).\n \n ### Building with Docker\n \n-You can use a Docker container to build MapLibre Native. A `Dockerfile` that installes the required dependencies when the image is built is provided in this directory.\n+You can use a Docker container to build MapLibre Native. Note that you cannot build using both Docker and host methods at the same time. If you want to switch, you need to clean the repository first, e.g. by using `git clean -dxfi -e .idea -e .clwb -e .vscode`\n \n ```bash\n # Build docker image from the repo root\n-docker build -t maplibre-native-image -f platform/linux/Dockerfile .\n+# Specifying USER_ID and GROUP_ID allows container to create files with the same owner as the host user,\n+# and avoids having to pass -u $(id -u):$(id -g) to docker run.  \n+docker build \\\n+  -t maplibre-native-image \\\n+  --build-arg USER_ID=$(id -u) \\\n+  --build-arg GROUP_ID=$(id -g) \\\n+  -f platform/linux/Dockerfile \\\n+  platform/linux\n \n-# Run docker image as the current user.\n-# This ensures that the files created in the container are owned by the current user.\n-docker run --rm -it -v \"$PWD:/code/\" -u $(id -u):$(id -g) maplibre-native-image ___any_build_command___\n-\n-# You can also execute build commands from inside the docker container by starting it without parameters:\n-docker run --rm -it -v \"$PWD:/code/\" -u $(id -u):$(id -g) maplibre-native-image\n-```\n-\n-You can safely ignore this type of message and a missing username. It happens if your linux user was not the first one created on the system.\n-\n-```\n-groups: cannot find name for group ID ....\n-I have no name!@...:/root$ `\n+# Run all build commands using the docker container.\n+# You can also execute build commands from inside the docker container by starting it without the build command.",
        "comment_created_at": "2024-07-24T15:12:51+00:00",
        "comment_author": "louwers",
        "comment_body": "If we have to choose one, just include the command without the `___any_build_command___`, because it's nicer to have a valid command that people can copy and paste.\r\n\r\nOptionally mention that you can also run build commands directly.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1428557267",
    "pr_number": 1965,
    "pr_file": "platform/linux/README.md",
    "created_at": "2023-12-15T22:40:02+00:00",
    "commented_code": "# Linux\n \n-This guide explains how to get started building and running MapLibre Native on Linux. The guide focusses on **Debian 11**, but should be adaptible to other distributions. The build process should give you a set of `.a` files that you can use to include MapLibre Native in other C++ projects, as well as a set of executables that you can run to render map tile images and test the project.\n+This guide explains how to get started building and running MapLibre Native on Linux. The guide focusses on a Ubuntu 22.04 clean docker image, but should be adaptible to other distributions. The build process should give you a set of `.a` files that you can use to include MapLibre Native in other C++ projects, as well as a set of executables that you can run to render map tile images and test the project.\n \n-## Prerequisites\n+## Requirements\n \n The following system libraries need to be installed.\n \n ```bash\n-apt install libcurl4-openssl-dev libglfw3-dev libuv1-dev libpng-dev libicu-dev libjpeg62-turbo libwebp-dev\n+apt install libcurl4-openssl-dev libglfw3-dev libuv1-dev libpng-dev libicu-dev libjpeg8-dev libwebp-dev xvfb\n ```\n \n Optional: `libsqlite3-dev` (also available as vendored dependency).\n \n-### Build tools\n-\n The following tools need to be available.\n \n ```bash\n-apt install g++ git cmake ccache ninja-build pkg-config\n+apt install clang git cmake ccache ninja-build pkg-config\n+```\n+\n+## Docker\n+\n+Alternatively to the above requirements, you can use a docker container to build MapLibre Native:",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1428557267",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1965,
        "pr_file": "platform/linux/README.md",
        "discussion_id": "1428557267",
        "commented_code": "@@ -1,23 +1,37 @@\n # Linux\n \n-This guide explains how to get started building and running MapLibre Native on Linux. The guide focusses on **Debian 11**, but should be adaptible to other distributions. The build process should give you a set of `.a` files that you can use to include MapLibre Native in other C++ projects, as well as a set of executables that you can run to render map tile images and test the project.\n+This guide explains how to get started building and running MapLibre Native on Linux. The guide focusses on a Ubuntu 22.04 clean docker image, but should be adaptible to other distributions. The build process should give you a set of `.a` files that you can use to include MapLibre Native in other C++ projects, as well as a set of executables that you can run to render map tile images and test the project.\n \n-## Prerequisites\n+## Requirements\n \n The following system libraries need to be installed.\n \n ```bash\n-apt install libcurl4-openssl-dev libglfw3-dev libuv1-dev libpng-dev libicu-dev libjpeg62-turbo libwebp-dev\n+apt install libcurl4-openssl-dev libglfw3-dev libuv1-dev libpng-dev libicu-dev libjpeg8-dev libwebp-dev xvfb\n ```\n \n Optional: `libsqlite3-dev` (also available as vendored dependency).\n \n-### Build tools\n-\n The following tools need to be available.\n \n ```bash\n-apt install g++ git cmake ccache ninja-build pkg-config\n+apt install clang git cmake ccache ninja-build pkg-config\n+```\n+\n+## Docker\n+\n+Alternatively to the above requirements, you can use a docker container to build MapLibre Native:",
        "comment_created_at": "2023-12-15T22:40:02+00:00",
        "comment_author": "louwers",
        "comment_body": "```suggestion\r\nYou can use a Docker container to build MapLibre Native. A `Dockerfile` that installes the required dependencies when the image is built is provided in this directory.\r\n```",
        "pr_file_module": null
      }
    ]
  }
]