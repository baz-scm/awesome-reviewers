[
  {
    "discussion_id": "1193181775",
    "pr_number": 1140,
    "pr_file": "platform/macos/macos.cmake",
    "created_at": "2023-05-14T17:21:17+00:00",
    "commented_code": "cmake_minimum_required(VERSION 3.19)\n-set(CMAKE_OSX_DEPLOYMENT_TARGET \"10.13\")\n+set(CMAKE_OSX_DEPLOYMENT_TARGET \"10.15\")",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1193181775",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1140,
        "pr_file": "platform/macos/macos.cmake",
        "discussion_id": "1193181775",
        "commented_code": "@@ -1,5 +1,5 @@\n cmake_minimum_required(VERSION 3.19)\n-set(CMAKE_OSX_DEPLOYMENT_TARGET \"10.13\")\n+set(CMAKE_OSX_DEPLOYMENT_TARGET \"10.15\")",
        "comment_created_at": "2023-05-14T17:21:17+00:00",
        "comment_author": "SiarheiFedartsou",
        "comment_body": "Some parts of std::filesystem are available only since macOS 10.15 (which is pretty old, release date is October 7, 2019).",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1195371883",
    "pr_number": 1140,
    "pr_file": "platform/ios/ios.cmake",
    "created_at": "2023-05-16T15:49:20+00:00",
    "commented_code": "option(MLN_IOS_RENDER_TEST \"Include render tests\" ON)\n \n if(NOT DEFINED IOS_DEPLOYMENT_TARGET)\n-    set(IOS_DEPLOYMENT_TARGET \"12.0\")\n+    set(IOS_DEPLOYMENT_TARGET \"13.0\")",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1195371883",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1140,
        "pr_file": "platform/ios/ios.cmake",
        "discussion_id": "1195371883",
        "commented_code": "@@ -2,7 +2,7 @@ option(MLN_WITH_IOS_CCACHE \"Enable ccache for iOS\" OFF)\n option(MLN_IOS_RENDER_TEST \"Include render tests\" ON)\n \n if(NOT DEFINED IOS_DEPLOYMENT_TARGET)\n-    set(IOS_DEPLOYMENT_TARGET \"12.0\")\n+    set(IOS_DEPLOYMENT_TARGET \"13.0\")",
        "comment_created_at": "2023-05-16T15:49:20+00:00",
        "comment_author": "ntadej",
        "comment_body": "This is maybe too strong. 12.0 is still supported by Apple.",
        "pr_file_module": null
      },
      {
        "comment_id": "1195382543",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1140,
        "pr_file": "platform/ios/ios.cmake",
        "discussion_id": "1195371883",
        "commented_code": "@@ -2,7 +2,7 @@ option(MLN_WITH_IOS_CCACHE \"Enable ccache for iOS\" OFF)\n option(MLN_IOS_RENDER_TEST \"Include render tests\" ON)\n \n if(NOT DEFINED IOS_DEPLOYMENT_TARGET)\n-    set(IOS_DEPLOYMENT_TARGET \"12.0\")\n+    set(IOS_DEPLOYMENT_TARGET \"13.0\")",
        "comment_created_at": "2023-05-16T15:57:36+00:00",
        "comment_author": "SiarheiFedartsou",
        "comment_body": "Unfortunately `std::filesystem::path` is not available before iOS 13.0. Do we have obligations to support iOS 12? Current release is iOS 16. iOS 17 will be released at fall. I am not in iOS world for a couple of years already, but some time ago Apple's recommendation was to support the latest 2 major versions(since iOS has no such fragmentation as Android has and usually majority of users have quite fresh version). We are library and users of us may have different reasons to support older versions, but even with this bump we will still support 4 major versions which is quite a lot. WDYT?",
        "pr_file_module": null
      },
      {
        "comment_id": "1195386478",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1140,
        "pr_file": "platform/ios/ios.cmake",
        "discussion_id": "1195371883",
        "commented_code": "@@ -2,7 +2,7 @@ option(MLN_WITH_IOS_CCACHE \"Enable ccache for iOS\" OFF)\n option(MLN_IOS_RENDER_TEST \"Include render tests\" ON)\n \n if(NOT DEFINED IOS_DEPLOYMENT_TARGET)\n-    set(IOS_DEPLOYMENT_TARGET \"12.0\")\n+    set(IOS_DEPLOYMENT_TARGET \"13.0\")",
        "comment_created_at": "2023-05-16T16:00:46+00:00",
        "comment_author": "ntadej",
        "comment_body": "The discussion happened in #689 where we settled on iOS 12 for now. There are still open-source users (including me), who support iOS 12.\r\n\r\nLooking at the code, does the library actually use it or only tests?",
        "pr_file_module": null
      },
      {
        "comment_id": "1195389569",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1140,
        "pr_file": "platform/ios/ios.cmake",
        "discussion_id": "1195371883",
        "commented_code": "@@ -2,7 +2,7 @@ option(MLN_WITH_IOS_CCACHE \"Enable ccache for iOS\" OFF)\n option(MLN_IOS_RENDER_TEST \"Include render tests\" ON)\n \n if(NOT DEFINED IOS_DEPLOYMENT_TARGET)\n-    set(IOS_DEPLOYMENT_TARGET \"12.0\")\n+    set(IOS_DEPLOYMENT_TARGET \"13.0\")",
        "comment_created_at": "2023-05-16T16:03:09+00:00",
        "comment_author": "SiarheiFedartsou",
        "comment_body": "Tests only as I can see. Do you think we can just use std::string instead?",
        "pr_file_module": null
      },
      {
        "comment_id": "1195394765",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1140,
        "pr_file": "platform/ios/ios.cmake",
        "discussion_id": "1195371883",
        "commented_code": "@@ -2,7 +2,7 @@ option(MLN_WITH_IOS_CCACHE \"Enable ccache for iOS\" OFF)\n option(MLN_IOS_RENDER_TEST \"Include render tests\" ON)\n \n if(NOT DEFINED IOS_DEPLOYMENT_TARGET)\n-    set(IOS_DEPLOYMENT_TARGET \"12.0\")\n+    set(IOS_DEPLOYMENT_TARGET \"13.0\")",
        "comment_created_at": "2023-05-16T16:07:41+00:00",
        "comment_author": "ntadej",
        "comment_body": "Or drop tests for older versions but still support building the code. In most cases (core) changes are not really sensitive...",
        "pr_file_module": null
      },
      {
        "comment_id": "1195398638",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1140,
        "pr_file": "platform/ios/ios.cmake",
        "discussion_id": "1195371883",
        "commented_code": "@@ -2,7 +2,7 @@ option(MLN_WITH_IOS_CCACHE \"Enable ccache for iOS\" OFF)\n option(MLN_IOS_RENDER_TEST \"Include render tests\" ON)\n \n if(NOT DEFINED IOS_DEPLOYMENT_TARGET)\n-    set(IOS_DEPLOYMENT_TARGET \"12.0\")\n+    set(IOS_DEPLOYMENT_TARGET \"13.0\")",
        "comment_created_at": "2023-05-16T16:10:54+00:00",
        "comment_author": "SiarheiFedartsou",
        "comment_body": "Okay, I will take a look later then. Tbh it seemed to be a low hanging fruit :) ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1610058908",
    "pr_number": 2417,
    "pr_file": "include/mbgl/util/instrumentation.hpp",
    "created_at": "2024-05-22T14:13:00+00:00",
    "commented_code": "+#pragma once\n+\n+#include <tracy/Tracy.hpp>",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1610058908",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2417,
        "pr_file": "include/mbgl/util/instrumentation.hpp",
        "discussion_id": "1610058908",
        "commented_code": "@@ -0,0 +1,89 @@\n+#pragma once\n+\n+#include <tracy/Tracy.hpp>",
        "comment_created_at": "2024-05-22T14:13:00+00:00",
        "comment_author": "mwilsnd",
        "comment_body": "This header won't be found for bazel builds, can you move it inside the `#if MLN_RENDER_BACKEND_OPENGL` block and additionally guard it with `defined(MLN_USE_TRACY )`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1610786278",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2417,
        "pr_file": "include/mbgl/util/instrumentation.hpp",
        "discussion_id": "1610058908",
        "commented_code": "@@ -0,0 +1,89 @@\n+#pragma once\n+\n+#include <tracy/Tracy.hpp>",
        "comment_created_at": "2024-05-22T23:33:25+00:00",
        "comment_author": "alasram",
        "comment_body": "everything is guarded now",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1183514106",
    "pr_number": 1079,
    "pr_file": "platform/windows/windows.cmake",
    "created_at": "2023-05-03T10:32:58+00:00",
    "commented_code": "mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1183514106",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-05-03T10:32:58+00:00",
        "comment_author": "etnav",
        "comment_body": "Was this an intended change for `if(MLN_WITH_EGL)`?\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1183737064",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-05-03T14:05:08+00:00",
        "comment_author": "etnav",
        "comment_body": "@tdcosta100 It seems to be causing issues when using the `MLN_WITH_EGL` flag.\r\n\r\n`\"GLES3/gl3ext.h\": No such file or directory` -> from `gl_functions.cpp`",
        "pr_file_module": null
      },
      {
        "comment_id": "1184007182",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-05-03T17:30:46+00:00",
        "comment_author": "tdcosta100",
        "comment_body": "> Was this an intended change for `if(MLN_WITH_EGL)`?\r\n\r\nYes, because there is not a `libGLESv3.dll` even with ANGLE. I suspect there isn't for Linux too, I didn't check it yet.\r\n\r\n> @tdcosta100 It seems to be causing issues when using the `MLN_WITH_EGL` flag.\r\n> \r\n> `\"GLES3/gl3ext.h\": No such file or directory` -> from `gl_functions.cpp`\r\n\r\nI will check this. Also, apparently the ANGLE port in vcpkg is broken too, so probably I will need to submit a PR there too. As soon as possible I will rework this part.",
        "pr_file_module": null
      },
      {
        "comment_id": "1218031600",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-06-05T12:52:12+00:00",
        "comment_author": "etnav",
        "comment_body": "Have you by any chance had any success with this?",
        "pr_file_module": null
      },
      {
        "comment_id": "1218560764",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-06-05T20:30:15+00:00",
        "comment_author": "tdcosta100",
        "comment_body": "Hi, @etnav. I did some changes to the ANGLE package and submitted to the vcpkg project. Then things went bad:\r\n\r\nhttps://github.com/microsoft/vcpkg/pull/31254\r\n\r\nI can point the vcpkg subdirectory to my branch, so ANGLE works again. But I'm really tired of trying to submit this change to their repository and they are demanding me to do things like I was the package developer. I'm not, I'm just trying to fix something broken in it.",
        "pr_file_module": null
      },
      {
        "comment_id": "1219018706",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-06-06T06:51:00+00:00",
        "comment_author": "etnav",
        "comment_body": "Had a glance, that's very annoying. After such a long drag and waste of time. \ud83d\ude20 \r\n\r\nThanks for your effort though, I will try to check this again when I got some spare time and get back to the issue.",
        "pr_file_module": null
      },
      {
        "comment_id": "1219510231",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-06-06T12:01:21+00:00",
        "comment_author": "tdcosta100",
        "comment_body": "2 weeks of work, and it wasn't good enough for them. But ok to stay broken. I will change the ref to my branch, for now.",
        "pr_file_module": null
      },
      {
        "comment_id": "1239028531",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-06-22T21:02:39+00:00",
        "comment_author": "tdcosta100",
        "comment_body": "Good news, they finally merged the change, made by someone else they like more. I will change the ref now.",
        "pr_file_module": null
      },
      {
        "comment_id": "1240418315",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-06-23T21:27:39+00:00",
        "comment_author": "tdcosta100",
        "comment_body": "Finally fixed!",
        "pr_file_module": null
      },
      {
        "comment_id": "1281915333",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-08-02T13:34:07+00:00",
        "comment_author": "xiaozhuai",
        "comment_body": "> made by someone else they like more\r\n\r\n@tdcosta100 \r\nLOL, they didn't like me either.\r\nI often get into arguments with them, but I get used. \r\nYou may want to see this pr `#32660` in vcpkg. (Since I don't want to notify them, so I didn't link to it)\r\n\r\nWhatever, thank you again for your efforts! And have a good day!",
        "pr_file_module": null
      },
      {
        "comment_id": "1282567724",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1079,
        "pr_file": "platform/windows/windows.cmake",
        "discussion_id": "1183514106",
        "commented_code": "@@ -91,7 +91,7 @@ if(MLN_WITH_EGL)\n         mbgl-core\n         PRIVATE\n             unofficial::angle::libEGL\n-            unofficial::angle::libGLESv3\n+            unofficial::angle::libGLESv2",
        "comment_created_at": "2023-08-03T02:11:18+00:00",
        "comment_author": "tdcosta100",
        "comment_body": "Oh my, looks like my PR. They seem to not like others's contribution, but as they are on GitHub, they are obbligated to.",
        "pr_file_module": null
      }
    ]
  }
]