[
  {
    "discussion_id": "1817903508",
    "pr_number": 2968,
    "pr_file": ".github/workflows/windows-ci.yml",
    "created_at": "2024-10-26T18:37:14+00:00",
    "commented_code": "+name: windows-ci\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+    branches:\n+      - main\n+      - windows-*.*.x\n+    tags:\n+      - windows-*\n+\n+  pull_request:\n+    branches:\n+      - '*'\n+\n+env:\n+  SCCACHE_GHA_ENABLED: \"true\"\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  # INFO: We are cancelling the concurrency group if the change is on PR. For workflow dispatch, this will not work.\n+  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}\n+\n+permissions:\n+  actions: read           # needed for CodeQL\n+  contents: read          # needed for CodeQL\n+  security-events: write  # needed for CodeQL\n+\n+jobs:\n+  pre-job:\n+    runs-on: windows-2022\n+    outputs:\n+      should_skip: ${{ github.event_name != 'workflow_dispatch' && steps.changed-files.outputs.windows_any_modified != 'true' }}\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+\n+      - name: Get all Windows files that have changed\n+        if: github.event_name != 'workflow_dispatch'\n+        id: changed-files\n+        uses: tj-actions/changed-files@v45\n+        with:\n+          files_yaml_from_source_file: .github/changed-files.yml\n+\n+      - name: List changed files\n+        if: steps.changed-files.outputs.windows_any_modified == 'true'  \n+        shell: bash\n+        run: |\n+          echo \"Changed file(s): ${{ steps.changed-files.outputs.windows_all_changed_files }}\"\n+\n+  windows-build-and-test:\n+    if: needs.pre-job.outputs.should_skip != 'true'\n+    needs: pre-job\n+    strategy:\n+      matrix:\n+        renderer: [opengl, egl, vulkan, osmesa]\n+        rendering_mode: [legacy, drawable]\n+        exclude:\n+          - renderer: egl\n+            rendering_mode: drawable\n+          - renderer: vulkan\n+            rendering_mode: legacy\n+    runs-on: windows-2022\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+          fetch-depth: 0\n+\n+      - name: Initialize CodeQL\n+        uses: github/codeql-action/init@v3\n+        with:\n+          languages: cpp\n+\n+      - uses: ilammy/msvc-dev-cmd@v1\n+\n+      - name: Export GitHub Actions cache environment variables\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\n+            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\n+\n+      - uses: mozilla-actions/sccache-action@v0.0.6\n+\n+      - name: Initialize sccache\n+        run: |\n+          sccache --start-server\n+          sccache --zero-stats\n+\n+      - name: Configure MapLibre Native Core\n+        env:\n+          CI: 1\n+          VCPKG_BINARY_SOURCES: \"clear;x-gha,readwrite\"\n+          VCPKG_KEEP_ENV_VARS: CMAKE_CXX_COMPILER_LAUNCHER;CMAKE_C_COMPILER_LAUNCHER\n+          CMAKE_C_COMPILER_LAUNCHER: sccache\n+          CMAKE_CXX_COMPILER_LAUNCHER: sccache\n+        shell: bash\n+        run: |",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1817903508",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2968,
        "pr_file": ".github/workflows/windows-ci.yml",
        "discussion_id": "1817903508",
        "commented_code": "@@ -0,0 +1,230 @@\n+name: windows-ci\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+    branches:\n+      - main\n+      - windows-*.*.x\n+    tags:\n+      - windows-*\n+\n+  pull_request:\n+    branches:\n+      - '*'\n+\n+env:\n+  SCCACHE_GHA_ENABLED: \"true\"\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  # INFO: We are cancelling the concurrency group if the change is on PR. For workflow dispatch, this will not work.\n+  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}\n+\n+permissions:\n+  actions: read           # needed for CodeQL\n+  contents: read          # needed for CodeQL\n+  security-events: write  # needed for CodeQL\n+\n+jobs:\n+  pre-job:\n+    runs-on: windows-2022\n+    outputs:\n+      should_skip: ${{ github.event_name != 'workflow_dispatch' && steps.changed-files.outputs.windows_any_modified != 'true' }}\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+\n+      - name: Get all Windows files that have changed\n+        if: github.event_name != 'workflow_dispatch'\n+        id: changed-files\n+        uses: tj-actions/changed-files@v45\n+        with:\n+          files_yaml_from_source_file: .github/changed-files.yml\n+\n+      - name: List changed files\n+        if: steps.changed-files.outputs.windows_any_modified == 'true'  \n+        shell: bash\n+        run: |\n+          echo \"Changed file(s): ${{ steps.changed-files.outputs.windows_all_changed_files }}\"\n+\n+  windows-build-and-test:\n+    if: needs.pre-job.outputs.should_skip != 'true'\n+    needs: pre-job\n+    strategy:\n+      matrix:\n+        renderer: [opengl, egl, vulkan, osmesa]\n+        rendering_mode: [legacy, drawable]\n+        exclude:\n+          - renderer: egl\n+            rendering_mode: drawable\n+          - renderer: vulkan\n+            rendering_mode: legacy\n+    runs-on: windows-2022\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+          fetch-depth: 0\n+\n+      - name: Initialize CodeQL\n+        uses: github/codeql-action/init@v3\n+        with:\n+          languages: cpp\n+\n+      - uses: ilammy/msvc-dev-cmd@v1\n+\n+      - name: Export GitHub Actions cache environment variables\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\n+            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\n+\n+      - uses: mozilla-actions/sccache-action@v0.0.6\n+\n+      - name: Initialize sccache\n+        run: |\n+          sccache --start-server\n+          sccache --zero-stats\n+\n+      - name: Configure MapLibre Native Core\n+        env:\n+          CI: 1\n+          VCPKG_BINARY_SOURCES: \"clear;x-gha,readwrite\"\n+          VCPKG_KEEP_ENV_VARS: CMAKE_CXX_COMPILER_LAUNCHER;CMAKE_C_COMPILER_LAUNCHER\n+          CMAKE_C_COMPILER_LAUNCHER: sccache\n+          CMAKE_CXX_COMPILER_LAUNCHER: sccache\n+        shell: bash\n+        run: |",
        "comment_created_at": "2024-10-26T18:37:14+00:00",
        "comment_author": "louwers",
        "comment_body": "Shellcheck detects an issue with this script:\r\n\r\n```\r\nArgument mixes string and array. Use * or separate argument\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1817903554",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2968,
        "pr_file": ".github/workflows/windows-ci.yml",
        "discussion_id": "1817903508",
        "commented_code": "@@ -0,0 +1,230 @@\n+name: windows-ci\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+    branches:\n+      - main\n+      - windows-*.*.x\n+    tags:\n+      - windows-*\n+\n+  pull_request:\n+    branches:\n+      - '*'\n+\n+env:\n+  SCCACHE_GHA_ENABLED: \"true\"\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  # INFO: We are cancelling the concurrency group if the change is on PR. For workflow dispatch, this will not work.\n+  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}\n+\n+permissions:\n+  actions: read           # needed for CodeQL\n+  contents: read          # needed for CodeQL\n+  security-events: write  # needed for CodeQL\n+\n+jobs:\n+  pre-job:\n+    runs-on: windows-2022\n+    outputs:\n+      should_skip: ${{ github.event_name != 'workflow_dispatch' && steps.changed-files.outputs.windows_any_modified != 'true' }}\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+\n+      - name: Get all Windows files that have changed\n+        if: github.event_name != 'workflow_dispatch'\n+        id: changed-files\n+        uses: tj-actions/changed-files@v45\n+        with:\n+          files_yaml_from_source_file: .github/changed-files.yml\n+\n+      - name: List changed files\n+        if: steps.changed-files.outputs.windows_any_modified == 'true'  \n+        shell: bash\n+        run: |\n+          echo \"Changed file(s): ${{ steps.changed-files.outputs.windows_all_changed_files }}\"\n+\n+  windows-build-and-test:\n+    if: needs.pre-job.outputs.should_skip != 'true'\n+    needs: pre-job\n+    strategy:\n+      matrix:\n+        renderer: [opengl, egl, vulkan, osmesa]\n+        rendering_mode: [legacy, drawable]\n+        exclude:\n+          - renderer: egl\n+            rendering_mode: drawable\n+          - renderer: vulkan\n+            rendering_mode: legacy\n+    runs-on: windows-2022\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+          fetch-depth: 0\n+\n+      - name: Initialize CodeQL\n+        uses: github/codeql-action/init@v3\n+        with:\n+          languages: cpp\n+\n+      - uses: ilammy/msvc-dev-cmd@v1\n+\n+      - name: Export GitHub Actions cache environment variables\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\n+            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\n+\n+      - uses: mozilla-actions/sccache-action@v0.0.6\n+\n+      - name: Initialize sccache\n+        run: |\n+          sccache --start-server\n+          sccache --zero-stats\n+\n+      - name: Configure MapLibre Native Core\n+        env:\n+          CI: 1\n+          VCPKG_BINARY_SOURCES: \"clear;x-gha,readwrite\"\n+          VCPKG_KEEP_ENV_VARS: CMAKE_CXX_COMPILER_LAUNCHER;CMAKE_C_COMPILER_LAUNCHER\n+          CMAKE_C_COMPILER_LAUNCHER: sccache\n+          CMAKE_CXX_COMPILER_LAUNCHER: sccache\n+        shell: bash\n+        run: |",
        "comment_created_at": "2024-10-26T18:37:56+00:00",
        "comment_author": "louwers",
        "comment_body": "Since this is quite a large script, maybe it can be extracted in a file so it can be easily ran.",
        "pr_file_module": null
      },
      {
        "comment_id": "1817920331",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2968,
        "pr_file": ".github/workflows/windows-ci.yml",
        "discussion_id": "1817903508",
        "commented_code": "@@ -0,0 +1,230 @@\n+name: windows-ci\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+    branches:\n+      - main\n+      - windows-*.*.x\n+    tags:\n+      - windows-*\n+\n+  pull_request:\n+    branches:\n+      - '*'\n+\n+env:\n+  SCCACHE_GHA_ENABLED: \"true\"\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  # INFO: We are cancelling the concurrency group if the change is on PR. For workflow dispatch, this will not work.\n+  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}\n+\n+permissions:\n+  actions: read           # needed for CodeQL\n+  contents: read          # needed for CodeQL\n+  security-events: write  # needed for CodeQL\n+\n+jobs:\n+  pre-job:\n+    runs-on: windows-2022\n+    outputs:\n+      should_skip: ${{ github.event_name != 'workflow_dispatch' && steps.changed-files.outputs.windows_any_modified != 'true' }}\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+\n+      - name: Get all Windows files that have changed\n+        if: github.event_name != 'workflow_dispatch'\n+        id: changed-files\n+        uses: tj-actions/changed-files@v45\n+        with:\n+          files_yaml_from_source_file: .github/changed-files.yml\n+\n+      - name: List changed files\n+        if: steps.changed-files.outputs.windows_any_modified == 'true'  \n+        shell: bash\n+        run: |\n+          echo \"Changed file(s): ${{ steps.changed-files.outputs.windows_all_changed_files }}\"\n+\n+  windows-build-and-test:\n+    if: needs.pre-job.outputs.should_skip != 'true'\n+    needs: pre-job\n+    strategy:\n+      matrix:\n+        renderer: [opengl, egl, vulkan, osmesa]\n+        rendering_mode: [legacy, drawable]\n+        exclude:\n+          - renderer: egl\n+            rendering_mode: drawable\n+          - renderer: vulkan\n+            rendering_mode: legacy\n+    runs-on: windows-2022\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+          fetch-depth: 0\n+\n+      - name: Initialize CodeQL\n+        uses: github/codeql-action/init@v3\n+        with:\n+          languages: cpp\n+\n+      - uses: ilammy/msvc-dev-cmd@v1\n+\n+      - name: Export GitHub Actions cache environment variables\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\n+            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\n+\n+      - uses: mozilla-actions/sccache-action@v0.0.6\n+\n+      - name: Initialize sccache\n+        run: |\n+          sccache --start-server\n+          sccache --zero-stats\n+\n+      - name: Configure MapLibre Native Core\n+        env:\n+          CI: 1\n+          VCPKG_BINARY_SOURCES: \"clear;x-gha,readwrite\"\n+          VCPKG_KEEP_ENV_VARS: CMAKE_CXX_COMPILER_LAUNCHER;CMAKE_C_COMPILER_LAUNCHER\n+          CMAKE_C_COMPILER_LAUNCHER: sccache\n+          CMAKE_CXX_COMPILER_LAUNCHER: sccache\n+        shell: bash\n+        run: |",
        "comment_created_at": "2024-10-26T19:56:27+00:00",
        "comment_author": "tdcosta100",
        "comment_body": "You are right. Done!",
        "pr_file_module": null
      },
      {
        "comment_id": "1817920756",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2968,
        "pr_file": ".github/workflows/windows-ci.yml",
        "discussion_id": "1817903508",
        "commented_code": "@@ -0,0 +1,230 @@\n+name: windows-ci\n+\n+on:\n+  workflow_dispatch:\n+  push:\n+    branches:\n+      - main\n+      - windows-*.*.x\n+    tags:\n+      - windows-*\n+\n+  pull_request:\n+    branches:\n+      - '*'\n+\n+env:\n+  SCCACHE_GHA_ENABLED: \"true\"\n+\n+concurrency:\n+  group: ${{ github.workflow }}-${{ github.ref }}\n+  # INFO: We are cancelling the concurrency group if the change is on PR. For workflow dispatch, this will not work.\n+  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}\n+\n+permissions:\n+  actions: read           # needed for CodeQL\n+  contents: read          # needed for CodeQL\n+  security-events: write  # needed for CodeQL\n+\n+jobs:\n+  pre-job:\n+    runs-on: windows-2022\n+    outputs:\n+      should_skip: ${{ github.event_name != 'workflow_dispatch' && steps.changed-files.outputs.windows_any_modified != 'true' }}\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+\n+      - name: Get all Windows files that have changed\n+        if: github.event_name != 'workflow_dispatch'\n+        id: changed-files\n+        uses: tj-actions/changed-files@v45\n+        with:\n+          files_yaml_from_source_file: .github/changed-files.yml\n+\n+      - name: List changed files\n+        if: steps.changed-files.outputs.windows_any_modified == 'true'  \n+        shell: bash\n+        run: |\n+          echo \"Changed file(s): ${{ steps.changed-files.outputs.windows_all_changed_files }}\"\n+\n+  windows-build-and-test:\n+    if: needs.pre-job.outputs.should_skip != 'true'\n+    needs: pre-job\n+    strategy:\n+      matrix:\n+        renderer: [opengl, egl, vulkan, osmesa]\n+        rendering_mode: [legacy, drawable]\n+        exclude:\n+          - renderer: egl\n+            rendering_mode: drawable\n+          - renderer: vulkan\n+            rendering_mode: legacy\n+    runs-on: windows-2022\n+    steps:\n+      - run: |\n+          git config --system core.longpaths true\n+\n+      - uses: actions/checkout@v4\n+        with:\n+          submodules: recursive\n+          fetch-depth: 0\n+\n+      - name: Initialize CodeQL\n+        uses: github/codeql-action/init@v3\n+        with:\n+          languages: cpp\n+\n+      - uses: ilammy/msvc-dev-cmd@v1\n+\n+      - name: Export GitHub Actions cache environment variables\n+        uses: actions/github-script@v7\n+        with:\n+          script: |\n+            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\n+            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\n+\n+      - uses: mozilla-actions/sccache-action@v0.0.6\n+\n+      - name: Initialize sccache\n+        run: |\n+          sccache --start-server\n+          sccache --zero-stats\n+\n+      - name: Configure MapLibre Native Core\n+        env:\n+          CI: 1\n+          VCPKG_BINARY_SOURCES: \"clear;x-gha,readwrite\"\n+          VCPKG_KEEP_ENV_VARS: CMAKE_CXX_COMPILER_LAUNCHER;CMAKE_C_COMPILER_LAUNCHER\n+          CMAKE_C_COMPILER_LAUNCHER: sccache\n+          CMAKE_CXX_COMPILER_LAUNCHER: sccache\n+        shell: bash\n+        run: |",
        "comment_created_at": "2024-10-26T20:00:05+00:00",
        "comment_author": "tdcosta100",
        "comment_body": "Now Shellcheck tests passed =D!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1485994167",
    "pr_number": 2100,
    "pr_file": ".github/workflows/android-device-test.yml",
    "created_at": "2024-02-12T10:31:53+00:00",
    "commented_code": "with:\n           files: \"${{ matrix.test.testFile }}, ${{ matrix.test.appFile }}\"\n \n+      - name: Upload external data for benchmark\n+        if: matrix.test.name == 'Android Benchmark'\n+        run: |",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1485994167",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2100,
        "pr_file": ".github/workflows/android-device-test.yml",
        "discussion_id": "1485994167",
        "commented_code": "@@ -83,6 +77,33 @@ jobs:\n         with:\n           files: \"${{ matrix.test.testFile }}, ${{ matrix.test.appFile }}\"\n \n+      - name: Upload external data for benchmark\n+        if: matrix.test.name == 'Android Benchmark'\n+        run: |",
        "comment_created_at": "2024-02-12T10:31:53+00:00",
        "comment_author": "HarelM",
        "comment_body": "I would recommend putting this in a script in the repo and referencing this script instead of writing it all in the CI code, this way you can also test it locally.",
        "pr_file_module": null
      },
      {
        "comment_id": "1486031238",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2100,
        "pr_file": ".github/workflows/android-device-test.yml",
        "discussion_id": "1485994167",
        "commented_code": "@@ -83,6 +77,33 @@ jobs:\n         with:\n           files: \"${{ matrix.test.testFile }}, ${{ matrix.test.appFile }}\"\n \n+      - name: Upload external data for benchmark\n+        if: matrix.test.name == 'Android Benchmark'\n+        run: |",
        "comment_created_at": "2024-02-12T11:05:54+00:00",
        "comment_author": "louwers",
        "comment_body": "Like this?",
        "pr_file_module": null
      },
      {
        "comment_id": "1486037468",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 2100,
        "pr_file": ".github/workflows/android-device-test.yml",
        "discussion_id": "1485994167",
        "commented_code": "@@ -83,6 +77,33 @@ jobs:\n         with:\n           files: \"${{ matrix.test.testFile }}, ${{ matrix.test.appFile }}\"\n \n+      - name: Upload external data for benchmark\n+        if: matrix.test.name == 'Android Benchmark'\n+        run: |",
        "comment_created_at": "2024-02-12T11:12:06+00:00",
        "comment_author": "HarelM",
        "comment_body": "Yup",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1912677979",
    "pr_number": 3137,
    "pr_file": ".github/workflows/linux-ci.yml",
    "created_at": "2025-01-13T05:31:33+00:00",
    "commented_code": "xvfb \\\n             x11-xserver-utils\n \n+      - name: Install cxxbridge-cmd (compile)\n+        if: ${{ github.ref == 'refs/heads/rust' || github.event.pull_request.base.ref == 'rust' }}\n+        uses: baptiste0928/cargo-install@v3\n+        with:\n+          crate: cxxbridge-cmd",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1912677979",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3137,
        "pr_file": ".github/workflows/linux-ci.yml",
        "discussion_id": "1912677979",
        "commented_code": "@@ -200,6 +200,12 @@ jobs:\n             xvfb \\\n             x11-xserver-utils\n \n+      - name: Install cxxbridge-cmd (compile)\n+        if: ${{ github.ref == 'refs/heads/rust' || github.event.pull_request.base.ref == 'rust' }}\n+        uses: baptiste0928/cargo-install@v3\n+        with:\n+          crate: cxxbridge-cmd",
        "comment_created_at": "2025-01-13T05:31:33+00:00",
        "comment_author": "ianthetechie",
        "comment_body": "Do we have a policy or general consensus on third-party GitHub Actions? For simple cases like this, I'd normally just run `cargo install cxxbridge-cmd` since it seems both simpler and more robust long-term than a third-party action.",
        "pr_file_module": null
      },
      {
        "comment_id": "1913030987",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3137,
        "pr_file": ".github/workflows/linux-ci.yml",
        "discussion_id": "1912677979",
        "commented_code": "@@ -200,6 +200,12 @@ jobs:\n             xvfb \\\n             x11-xserver-utils\n \n+      - name: Install cxxbridge-cmd (compile)\n+        if: ${{ github.ref == 'refs/heads/rust' || github.event.pull_request.base.ref == 'rust' }}\n+        uses: baptiste0928/cargo-install@v3\n+        with:\n+          crate: cxxbridge-cmd",
        "comment_created_at": "2025-01-13T11:16:50+00:00",
        "comment_author": "louwers",
        "comment_body": "Yes sounds better, thanks.",
        "pr_file_module": null
      },
      {
        "comment_id": "1913696100",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3137,
        "pr_file": ".github/workflows/linux-ci.yml",
        "discussion_id": "1912677979",
        "commented_code": "@@ -200,6 +200,12 @@ jobs:\n             xvfb \\\n             x11-xserver-utils\n \n+      - name: Install cxxbridge-cmd (compile)\n+        if: ${{ github.ref == 'refs/heads/rust' || github.event.pull_request.base.ref == 'rust' }}\n+        uses: baptiste0928/cargo-install@v3\n+        with:\n+          crate: cxxbridge-cmd",
        "comment_created_at": "2025-01-13T19:20:07+00:00",
        "comment_author": "nyurik",
        "comment_body": "The issue with cargo install is that it takes much longer to run. Other systems like binstall and this action optimize this process to a few seconds",
        "pr_file_module": null
      },
      {
        "comment_id": "1913707410",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3137,
        "pr_file": ".github/workflows/linux-ci.yml",
        "discussion_id": "1912677979",
        "commented_code": "@@ -200,6 +200,12 @@ jobs:\n             xvfb \\\n             x11-xserver-utils\n \n+      - name: Install cxxbridge-cmd (compile)\n+        if: ${{ github.ref == 'refs/heads/rust' || github.event.pull_request.base.ref == 'rust' }}\n+        uses: baptiste0928/cargo-install@v3\n+        with:\n+          crate: cxxbridge-cmd",
        "comment_created_at": "2025-01-13T19:30:51+00:00",
        "comment_author": "louwers",
        "comment_body": "I see it relies on caches. That will not speed things up because our cache is full after a single run of the workflows.\r\n\r\nGitHub promised they will allow a bigger cache than just 10GB in Q1 2025 though.",
        "pr_file_module": null
      },
      {
        "comment_id": "1913767896",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3137,
        "pr_file": ".github/workflows/linux-ci.yml",
        "discussion_id": "1912677979",
        "commented_code": "@@ -200,6 +200,12 @@ jobs:\n             xvfb \\\n             x11-xserver-utils\n \n+      - name: Install cxxbridge-cmd (compile)\n+        if: ${{ github.ref == 'refs/heads/rust' || github.event.pull_request.base.ref == 'rust' }}\n+        uses: baptiste0928/cargo-install@v3\n+        with:\n+          crate: cxxbridge-cmd",
        "comment_created_at": "2025-01-13T20:27:31+00:00",
        "comment_author": "nyurik",
        "comment_body": "good point - in that case lets do these two manual steps: install [binstall](https://github.com/cargo-bins/cargo-binstall) and use it:\r\n\r\n```bash\r\ncurl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash\r\n\r\ncargo binstall cxxbridge-cmd --...  # needs options to disable tracking and to skip confirmation\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1915236876",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3137,
        "pr_file": ".github/workflows/linux-ci.yml",
        "discussion_id": "1912677979",
        "commented_code": "@@ -200,6 +200,12 @@ jobs:\n             xvfb \\\n             x11-xserver-utils\n \n+      - name: Install cxxbridge-cmd (compile)\n+        if: ${{ github.ref == 'refs/heads/rust' || github.event.pull_request.base.ref == 'rust' }}\n+        uses: baptiste0928/cargo-install@v3\n+        with:\n+          crate: cxxbridge-cmd",
        "comment_created_at": "2025-01-14T16:49:29+00:00",
        "comment_author": "ianthetechie",
        "comment_body": "I think there are ways to cache though if you're worried about CI times. I think there was a Mozilla solution or something. Basically, I may be the minority here, but I don't think it's a great habit to get into adding actions from relatively obscure individuals (both for security and for robustness long-term), and I'm even less sold on the idea of curling a URL 😂 ",
        "pr_file_module": null
      },
      {
        "comment_id": "1915493954",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 3137,
        "pr_file": ".github/workflows/linux-ci.yml",
        "discussion_id": "1912677979",
        "commented_code": "@@ -200,6 +200,12 @@ jobs:\n             xvfb \\\n             x11-xserver-utils\n \n+      - name: Install cxxbridge-cmd (compile)\n+        if: ${{ github.ref == 'refs/heads/rust' || github.event.pull_request.base.ref == 'rust' }}\n+        uses: baptiste0928/cargo-install@v3\n+        with:\n+          crate: cxxbridge-cmd",
        "comment_created_at": "2025-01-14T19:31:46+00:00",
        "comment_author": "louwers",
        "comment_body": "I prefer to just keep it simple for now.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1362193696",
    "pr_number": 1770,
    "pr_file": ".github/workflows/pr-bloaty.yml",
    "created_at": "2023-10-17T14:11:15+00:00",
    "commented_code": "- name: Compile Bloaty\n         run: |\n           git clone https://github.com/google/bloaty.git\n-          cmake -B bloaty/build -G Ninja -S bloaty\n+          cmake -B bloaty/build -S bloaty",
    "repo_full_name": "maplibre/maplibre-native",
    "discussion_comments": [
      {
        "comment_id": "1362193696",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1770,
        "pr_file": ".github/workflows/pr-bloaty.yml",
        "discussion_id": "1362193696",
        "commented_code": "@@ -36,7 +36,7 @@ jobs:\n       - name: Compile Bloaty\n         run: |\n           git clone https://github.com/google/bloaty.git\n-          cmake -B bloaty/build -G Ninja -S bloaty\n+          cmake -B bloaty/build -S bloaty",
        "comment_created_at": "2023-10-17T14:11:15+00:00",
        "comment_author": "ntadej",
        "comment_body": "This will AFAIK build serially which we probably do not want.",
        "pr_file_module": null
      },
      {
        "comment_id": "1362195021",
        "repo_full_name": "maplibre/maplibre-native",
        "pr_number": 1770,
        "pr_file": ".github/workflows/pr-bloaty.yml",
        "discussion_id": "1362193696",
        "commented_code": "@@ -36,7 +36,7 @@ jobs:\n       - name: Compile Bloaty\n         run: |\n           git clone https://github.com/google/bloaty.git\n-          cmake -B bloaty/build -G Ninja -S bloaty\n+          cmake -B bloaty/build -S bloaty",
        "comment_created_at": "2023-10-17T14:12:05+00:00",
        "comment_author": "louwers",
        "comment_body": "Fixed.",
        "pr_file_module": null
      }
    ]
  }
]