[
  {
    "discussion_id": "1931348262",
    "pr_number": 202,
    "pr_file": "src/markitdown/api.py",
    "created_at": "2025-01-28T00:08:34+00:00",
    "commented_code": "+from fastapi import FastAPI, File, UploadFile, HTTPException\n+from fastapi.responses import FileResponse\n+from markitdown import MarkItDown\n+import os\n+\n+app = FastAPI()\n+\n+@app.post(\"/convert\")\n+async def convert(file: UploadFile = File(...)):\n+    if not file.filename:\n+        raise HTTPException(status_code=400, detail=\"No file uploaded\")\n+\n+    try:\n+        contents = await file.read()\n+        temp_file_path = f\"/tmp/{file.filename}\"\n+        with open(temp_file_path, \"wb\") as temp_file:\n+            temp_file.write(contents)\n+\n+        markitdown = MarkItDown()\n+        result = markitdown.convert(temp_file_path)",
    "repo_full_name": "microsoft/markitdown",
    "discussion_comments": [
      {
        "comment_id": "1931348262",
        "repo_full_name": "microsoft/markitdown",
        "pr_number": 202,
        "pr_file": "src/markitdown/api.py",
        "discussion_id": "1931348262",
        "commented_code": "@@ -0,0 +1,32 @@\n+from fastapi import FastAPI, File, UploadFile, HTTPException\n+from fastapi.responses import FileResponse\n+from markitdown import MarkItDown\n+import os\n+\n+app = FastAPI()\n+\n+@app.post(\"/convert\")\n+async def convert(file: UploadFile = File(...)):\n+    if not file.filename:\n+        raise HTTPException(status_code=400, detail=\"No file uploaded\")\n+\n+    try:\n+        contents = await file.read()\n+        temp_file_path = f\"/tmp/{file.filename}\"\n+        with open(temp_file_path, \"wb\") as temp_file:\n+            temp_file.write(contents)\n+\n+        markitdown = MarkItDown()\n+        result = markitdown.convert(temp_file_path)",
        "comment_created_at": "2025-01-28T00:08:34+00:00",
        "comment_author": "ranma42",
        "comment_body": "when this is a long CPU-bound operation (for example when converting a long PDF) this can block the executor",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1931352020",
    "pr_number": 202,
    "pr_file": "src/markitdown/api.py",
    "created_at": "2025-01-28T00:14:39+00:00",
    "commented_code": "+from fastapi import FastAPI, File, UploadFile, HTTPException\n+from fastapi.responses import FileResponse\n+from markitdown import MarkItDown\n+import os\n+\n+app = FastAPI()\n+\n+@app.post(\"/convert\")\n+async def convert(file: UploadFile = File(...)):\n+    if not file.filename:\n+        raise HTTPException(status_code=400, detail=\"No file uploaded\")\n+\n+    try:\n+        contents = await file.read()\n+        temp_file_path = f\"/tmp/{file.filename}\"",
    "repo_full_name": "microsoft/markitdown",
    "discussion_comments": [
      {
        "comment_id": "1931352020",
        "repo_full_name": "microsoft/markitdown",
        "pr_number": 202,
        "pr_file": "src/markitdown/api.py",
        "discussion_id": "1931352020",
        "commented_code": "@@ -0,0 +1,32 @@\n+from fastapi import FastAPI, File, UploadFile, HTTPException\n+from fastapi.responses import FileResponse\n+from markitdown import MarkItDown\n+import os\n+\n+app = FastAPI()\n+\n+@app.post(\"/convert\")\n+async def convert(file: UploadFile = File(...)):\n+    if not file.filename:\n+        raise HTTPException(status_code=400, detail=\"No file uploaded\")\n+\n+    try:\n+        contents = await file.read()\n+        temp_file_path = f\"/tmp/{file.filename}\"",
        "comment_created_at": "2025-01-28T00:14:39+00:00",
        "comment_author": "ranma42",
        "comment_body": "if multiple requests are accepted concurrently with the same filename, they can conflict\r\n(nb: AFAICT this currently does not occur because requests are handled sequentially)",
        "pr_file_module": null
      }
    ]
  }
]