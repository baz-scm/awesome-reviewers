[
  {
    "discussion_id": "2354845857",
    "pr_number": 1417,
    "pr_file": "packages/markitdown/src/markitdown/converters/_docx_converter.py",
    "created_at": "2025-09-17T09:10:00+00:00",
    "commented_code": "style_map = kwargs.get(\"style_map\", None)\n         pre_process_stream = pre_process_docx(file_stream)\n-        return self._html_converter.convert_string(\n-            mammoth.convert_to_html(pre_process_stream, style_map=style_map).value,\n-            **kwargs,\n-        )\n+\n+        # Patch: handle missing styleId safely\n+        try:\n+            html = mammoth.convert_to_html(pre_process_stream, style_map=style_map).value\n+        except KeyError as e:\n+            if str(e) == \"'w:styleId'\":\n+                # Ignore missing style IDs and convert anyway\n+                html = mammoth.convert_to_html(pre_process_stream, style_map=style_map, ignore_empty_styles=True).value\n+            else:\n+                raise",
    "repo_full_name": "microsoft/markitdown",
    "discussion_comments": [
      {
        "comment_id": "2354845857",
        "repo_full_name": "microsoft/markitdown",
        "pr_number": 1417,
        "pr_file": "packages/markitdown/src/markitdown/converters/_docx_converter.py",
        "discussion_id": "2354845857",
        "commented_code": "@@ -84,7 +84,15 @@ def convert(\n \n         style_map = kwargs.get(\"style_map\", None)\n         pre_process_stream = pre_process_docx(file_stream)\n-        return self._html_converter.convert_string(\n-            mammoth.convert_to_html(pre_process_stream, style_map=style_map).value,\n-            **kwargs,\n-        )\n+\n+        # Patch: handle missing styleId safely\n+        try:\n+            html = mammoth.convert_to_html(pre_process_stream, style_map=style_map).value\n+        except KeyError as e:\n+            if str(e) == \"'w:styleId'\":\n+                # Ignore missing style IDs and convert anyway\n+                html = mammoth.convert_to_html(pre_process_stream, style_map=style_map, ignore_empty_styles=True).value\n+            else:\n+                raise",
        "comment_created_at": "2025-09-17T09:10:00+00:00",
        "comment_author": "MonkeyCode-AI",
        "comment_body": "```python\n        # Patch: handle missing styleId safely\n        try:\n            html = mammoth.convert_to_html(pre_process_stream, style_map=style_map).value\n        except KeyError as e:\n            if str(e) == \"'w:styleId'\":\n                # Ignore missing style IDs and convert anyway\n                html = mammoth.convert_to_html(pre_process_stream, style_map=style_map, ignore_empty_styles=True).value\n            else:\n                raise\n```\n\n\u8fd9\u6bb5\u4ee3\u7801\u901a\u8fc7 try/except \u5757\u5904\u7406\u4e86\u53ef\u80fd\u56e0\u7f3a\u5c11 `w:styleId` \u800c\u5bfc\u81f4\u7684 KeyError\u3002\u8fd9\u662f\u4e2a\u4e0d\u9519\u7684\u9632\u5fa1\u6027\u7f16\u7a0b\u5b9e\u8df5\u3002\u4e0d\u8fc7\uff0c\u53ef\u4ee5\u8003\u8651\u4ee5\u4e0b\u51e0\u70b9\u6539\u8fdb\uff1a\n\n1. **\u66f4\u660e\u786e\u7684\u5f02\u5e38\u5904\u7406**\uff1a\u68c0\u67e5\u5f02\u5e38\u4fe1\u606f\u662f\u5426\u4e3a `'w:styleId'` \u53ef\u80fd\u4f1a\u56e0\u8bed\u8a00\u73af\u5883\u6216 mammoth \u7248\u672c\u53d8\u5316\u800c\u5931\u6548\u3002\u5982\u679c\u53ef\u80fd\uff0c\u5c1d\u8bd5\u901a\u8fc7\u68c0\u67e5\u5143\u7d20\u5c5e\u6027\u6765\u786e\u5b9a\u662f\u5426\u7f3a\u5c11\u6837\u5f0f ID\u3002\n2. **\u65e5\u5fd7\u8bb0\u5f55**\uff1a\u5efa\u8bae\u6dfb\u52a0\u4e00\u4e9b\u65e5\u5fd7\u8bb0\u5f55\uff0c\u4ee5\u4fbf\u5728\u5904\u7406\u5f02\u5e38\u60c5\u51b5\u65f6\u80fd\u591f\u8ddf\u8e2a\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\n3. **\u6587\u6863**\uff1a\u867d\u7136\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca\uff0c\u4f46\u5728 docstring \u6216\u5f00\u53d1\u8005\u6587\u6863\u4e2d\u63cf\u8ff0\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u7684\u5904\u7406\u65b9\u5f0f\u4f1a\u66f4\u6709\u5e2e\u52a9\u3002\n\n\u603b\u4f53\u6765\u8bf4\uff0c\u8fd9\u4e2a\u4fee\u590d\u662f\u6709\u6548\u7684\uff0c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u5065\u58ee\u6027\u3002",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1892963355",
    "pr_number": 153,
    "pr_file": "src/markitdown/_markitdown.py",
    "created_at": "2024-12-19T18:25:08+00:00",
    "commented_code": "return result\n \n \n+class DocConverter(HtmlConverter):\n+    \"\"\"\n+    Converts DOC files to Markdown.\n+    \"\"\"\n+\n+    def convert(self, local_path, **kwargs) -> Union[None, DocumentConverterResult]:\n+        # Bail if not a DOC\n+        extension = kwargs.get(\"file_extension\", \"\")\n+        if extension.lower() != \".doc\":\n+            return None\n+\n+        if not (soffice := shutil.which(\"soffice\")):\n+            return None\n+\n+        local_path = Path(local_path)\n+        outdir = local_path.parent\n+        result = None\n+\n+        libreoffice_command = [\n+            soffice,\n+            \"--headless\",\n+            \"--convert-to\",\n+            \"txt:Text\",\n+            \"--outdir\",\n+            outdir,\n+            local_path,\n+        ]\n+        try:\n+            result = subprocess.run(libreoffice_command, capture_output=True, text=True)\n+            output_file = outdir / (local_path.stem + \".txt\")\n+            with open(output_file, \"r\", encoding=\"utf-8\") as f:\n+                output_content = f.read()\n+            output_file.unlink(missing_ok=True)\n+            result = self._convert(output_content)\n+            return result\n+\n+        except Exception as _:",
    "repo_full_name": "microsoft/markitdown",
    "discussion_comments": [
      {
        "comment_id": "1892963355",
        "repo_full_name": "microsoft/markitdown",
        "pr_number": 153,
        "pr_file": "src/markitdown/_markitdown.py",
        "discussion_id": "1892963355",
        "commented_code": "@@ -712,6 +713,46 @@ def convert(self, local_path, **kwargs) -> Union[None, DocumentConverterResult]:\n         return result\n \n \n+class DocConverter(HtmlConverter):\n+    \"\"\"\n+    Converts DOC files to Markdown.\n+    \"\"\"\n+\n+    def convert(self, local_path, **kwargs) -> Union[None, DocumentConverterResult]:\n+        # Bail if not a DOC\n+        extension = kwargs.get(\"file_extension\", \"\")\n+        if extension.lower() != \".doc\":\n+            return None\n+\n+        if not (soffice := shutil.which(\"soffice\")):\n+            return None\n+\n+        local_path = Path(local_path)\n+        outdir = local_path.parent\n+        result = None\n+\n+        libreoffice_command = [\n+            soffice,\n+            \"--headless\",\n+            \"--convert-to\",\n+            \"txt:Text\",\n+            \"--outdir\",\n+            outdir,\n+            local_path,\n+        ]\n+        try:\n+            result = subprocess.run(libreoffice_command, capture_output=True, text=True)\n+            output_file = outdir / (local_path.stem + \".txt\")\n+            with open(output_file, \"r\", encoding=\"utf-8\") as f:\n+                output_content = f.read()\n+            output_file.unlink(missing_ok=True)\n+            result = self._convert(output_content)\n+            return result\n+\n+        except Exception as _:",
        "comment_created_at": "2024-12-19T18:25:08+00:00",
        "comment_author": "gagb",
        "comment_body": "This part catches exceptions silently, can we update this? Maybe print warning?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1887704555",
    "pr_number": 42,
    "pr_file": "src/markitdown/_markitdown.py",
    "created_at": "2024-12-16T23:28:24+00:00",
    "commented_code": "ext = kwargs.get(\"file_extension\")\n         extensions = [ext] if ext is not None else []\n \n+        if not os.path.exists(path):\n+            raise FileDoesNotExistException(f\"File {path} does not exist\")",
    "repo_full_name": "microsoft/markitdown",
    "discussion_comments": [
      {
        "comment_id": "1887704555",
        "repo_full_name": "microsoft/markitdown",
        "pr_number": 42,
        "pr_file": "src/markitdown/_markitdown.py",
        "discussion_id": "1887704555",
        "commented_code": "@@ -911,6 +915,9 @@ def convert_local(\n         ext = kwargs.get(\"file_extension\")\n         extensions = [ext] if ext is not None else []\n \n+        if not os.path.exists(path):\n+            raise FileDoesNotExistException(f\"File {path} does not exist\")",
        "comment_created_at": "2024-12-16T23:28:24+00:00",
        "comment_author": "gagb",
        "comment_body": "Can you place raise the Python built in exception instead?\r\n\r\nhttps://docs.python.org/3/library/exceptions.html#FileNotFoundError",
        "pr_file_module": null
      }
    ]
  }
]