[
  {
    "discussion_id": "2011954839",
    "pr_number": 34243,
    "pr_file": "eslint.config.mjs",
    "created_at": "2025-03-25T12:08:15+00:00",
    "commented_code": "+import js from '@eslint/js';\n+import { defineConfig, globalIgnores } from 'eslint/config';\n+import formatjs from 'eslint-plugin-formatjs';\n+import importPlugin from 'eslint-plugin-import';\n+import jsdoc from 'eslint-plugin-jsdoc';\n+import jsxA11Y from 'eslint-plugin-jsx-a11y';\n+import promisePlugin from 'eslint-plugin-promise';\n+import react from 'eslint-plugin-react';\n+import reactHooks from 'eslint-plugin-react-hooks';\n+import globals from 'globals';\n+import tseslint from 'typescript-eslint';\n+\n+export default defineConfig([\n+  globalIgnores([\n+    'build/**/*',\n+    'coverage/**/*',\n+    'db/**/*',\n+    'lib/**/*',\n+    'log/**/*',\n+    'node_modules/**/*',\n+    'public/**/*',\n+    '!public/embed.js',\n+    'spec/**/*',\n+    'tmp/**/*',\n+    'vendor/**/*',\n+  ]),\n+  {\n+    files: [\n+      '**/*.ts',\n+      '**/*.tsx',\n+      '**/*.jsx',\n+      '**/*.js',\n+      '**/*.cjs',\n+      '**/*.mjs',\n+      '**/*.mts',\n+      '**/*.cts',\n+    ],\n+\n+    linterOptions: {\n+      reportUnusedDisableDirectives: 'error',\n+      reportUnusedInlineConfigs: 'error',\n+    },\n+\n+    extends: [\n+      js.configs.recommended,\n+      react.configs.flat.recommended,\n+      reactHooks.configs['recommended-latest'],\n+      jsxA11Y.flatConfigs.recommended,\n+      importPlugin.flatConfigs.recommended,",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "2011954839",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 34243,
        "pr_file": "eslint.config.mjs",
        "discussion_id": "2011954839",
        "commented_code": "@@ -0,0 +1,423 @@\n+import js from '@eslint/js';\n+import { defineConfig, globalIgnores } from 'eslint/config';\n+import formatjs from 'eslint-plugin-formatjs';\n+import importPlugin from 'eslint-plugin-import';\n+import jsdoc from 'eslint-plugin-jsdoc';\n+import jsxA11Y from 'eslint-plugin-jsx-a11y';\n+import promisePlugin from 'eslint-plugin-promise';\n+import react from 'eslint-plugin-react';\n+import reactHooks from 'eslint-plugin-react-hooks';\n+import globals from 'globals';\n+import tseslint from 'typescript-eslint';\n+\n+export default defineConfig([\n+  globalIgnores([\n+    'build/**/*',\n+    'coverage/**/*',\n+    'db/**/*',\n+    'lib/**/*',\n+    'log/**/*',\n+    'node_modules/**/*',\n+    'public/**/*',\n+    '!public/embed.js',\n+    'spec/**/*',\n+    'tmp/**/*',\n+    'vendor/**/*',\n+  ]),\n+  {\n+    files: [\n+      '**/*.ts',\n+      '**/*.tsx',\n+      '**/*.jsx',\n+      '**/*.js',\n+      '**/*.cjs',\n+      '**/*.mjs',\n+      '**/*.mts',\n+      '**/*.cts',\n+    ],\n+\n+    linterOptions: {\n+      reportUnusedDisableDirectives: 'error',\n+      reportUnusedInlineConfigs: 'error',\n+    },\n+\n+    extends: [\n+      js.configs.recommended,\n+      react.configs.flat.recommended,\n+      reactHooks.configs['recommended-latest'],\n+      jsxA11Y.flatConfigs.recommended,\n+      importPlugin.flatConfigs.recommended,",
        "comment_created_at": "2025-03-25T12:08:15+00:00",
        "comment_author": "renchap",
        "comment_body": "We probably also want `importPlugin.flatConfigs.react`",
        "pr_file_module": null
      },
      {
        "comment_id": "2013433005",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 34243,
        "pr_file": "eslint.config.mjs",
        "discussion_id": "2011954839",
        "commented_code": "@@ -0,0 +1,423 @@\n+import js from '@eslint/js';\n+import { defineConfig, globalIgnores } from 'eslint/config';\n+import formatjs from 'eslint-plugin-formatjs';\n+import importPlugin from 'eslint-plugin-import';\n+import jsdoc from 'eslint-plugin-jsdoc';\n+import jsxA11Y from 'eslint-plugin-jsx-a11y';\n+import promisePlugin from 'eslint-plugin-promise';\n+import react from 'eslint-plugin-react';\n+import reactHooks from 'eslint-plugin-react-hooks';\n+import globals from 'globals';\n+import tseslint from 'typescript-eslint';\n+\n+export default defineConfig([\n+  globalIgnores([\n+    'build/**/*',\n+    'coverage/**/*',\n+    'db/**/*',\n+    'lib/**/*',\n+    'log/**/*',\n+    'node_modules/**/*',\n+    'public/**/*',\n+    '!public/embed.js',\n+    'spec/**/*',\n+    'tmp/**/*',\n+    'vendor/**/*',\n+  ]),\n+  {\n+    files: [\n+      '**/*.ts',\n+      '**/*.tsx',\n+      '**/*.jsx',\n+      '**/*.js',\n+      '**/*.cjs',\n+      '**/*.mjs',\n+      '**/*.mts',\n+      '**/*.cts',\n+    ],\n+\n+    linterOptions: {\n+      reportUnusedDisableDirectives: 'error',\n+      reportUnusedInlineConfigs: 'error',\n+    },\n+\n+    extends: [\n+      js.configs.recommended,\n+      react.configs.flat.recommended,\n+      reactHooks.configs['recommended-latest'],\n+      jsxA11Y.flatConfigs.recommended,\n+      importPlugin.flatConfigs.recommended,",
        "comment_created_at": "2025-03-26T05:48:26+00:00",
        "comment_author": "nschonni",
        "comment_body": "Done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2011957342",
    "pr_number": 34243,
    "pr_file": "eslint.config.mjs",
    "created_at": "2025-03-25T12:09:25+00:00",
    "commented_code": "+import js from '@eslint/js';\n+import { defineConfig, globalIgnores } from 'eslint/config';\n+import formatjs from 'eslint-plugin-formatjs';\n+import importPlugin from 'eslint-plugin-import';\n+import jsdoc from 'eslint-plugin-jsdoc';\n+import jsxA11Y from 'eslint-plugin-jsx-a11y';\n+import promisePlugin from 'eslint-plugin-promise';\n+import react from 'eslint-plugin-react';\n+import reactHooks from 'eslint-plugin-react-hooks';\n+import globals from 'globals';\n+import tseslint from 'typescript-eslint';\n+\n+export default defineConfig([\n+  globalIgnores([\n+    'build/**/*',\n+    'coverage/**/*',\n+    'db/**/*',\n+    'lib/**/*',\n+    'log/**/*',\n+    'node_modules/**/*',\n+    'public/**/*',\n+    '!public/embed.js',\n+    'spec/**/*',\n+    'tmp/**/*',\n+    'vendor/**/*',\n+  ]),\n+  {\n+    files: [\n+      '**/*.ts',\n+      '**/*.tsx',\n+      '**/*.jsx',\n+      '**/*.js',\n+      '**/*.cjs',\n+      '**/*.mjs',\n+      '**/*.mts',\n+      '**/*.cts',\n+    ],\n+\n+    linterOptions: {\n+      reportUnusedDisableDirectives: 'error',\n+      reportUnusedInlineConfigs: 'error',\n+    },\n+\n+    extends: [\n+      js.configs.recommended,\n+      react.configs.flat.recommended,",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "2011957342",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 34243,
        "pr_file": "eslint.config.mjs",
        "discussion_id": "2011957342",
        "commented_code": "@@ -0,0 +1,423 @@\n+import js from '@eslint/js';\n+import { defineConfig, globalIgnores } from 'eslint/config';\n+import formatjs from 'eslint-plugin-formatjs';\n+import importPlugin from 'eslint-plugin-import';\n+import jsdoc from 'eslint-plugin-jsdoc';\n+import jsxA11Y from 'eslint-plugin-jsx-a11y';\n+import promisePlugin from 'eslint-plugin-promise';\n+import react from 'eslint-plugin-react';\n+import reactHooks from 'eslint-plugin-react-hooks';\n+import globals from 'globals';\n+import tseslint from 'typescript-eslint';\n+\n+export default defineConfig([\n+  globalIgnores([\n+    'build/**/*',\n+    'coverage/**/*',\n+    'db/**/*',\n+    'lib/**/*',\n+    'log/**/*',\n+    'node_modules/**/*',\n+    'public/**/*',\n+    '!public/embed.js',\n+    'spec/**/*',\n+    'tmp/**/*',\n+    'vendor/**/*',\n+  ]),\n+  {\n+    files: [\n+      '**/*.ts',\n+      '**/*.tsx',\n+      '**/*.jsx',\n+      '**/*.js',\n+      '**/*.cjs',\n+      '**/*.mjs',\n+      '**/*.mts',\n+      '**/*.cts',\n+    ],\n+\n+    linterOptions: {\n+      reportUnusedDisableDirectives: 'error',\n+      reportUnusedInlineConfigs: 'error',\n+    },\n+\n+    extends: [\n+      js.configs.recommended,\n+      react.configs.flat.recommended,",
        "comment_created_at": "2025-03-25T12:09:25+00:00",
        "comment_author": "renchap",
        "comment_body": "We also want `reactPlugin.configs.flat[\"jsx-runtime\"]` which auto-configures some other things",
        "pr_file_module": null
      },
      {
        "comment_id": "2013434118",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 34243,
        "pr_file": "eslint.config.mjs",
        "discussion_id": "2011957342",
        "commented_code": "@@ -0,0 +1,423 @@\n+import js from '@eslint/js';\n+import { defineConfig, globalIgnores } from 'eslint/config';\n+import formatjs from 'eslint-plugin-formatjs';\n+import importPlugin from 'eslint-plugin-import';\n+import jsdoc from 'eslint-plugin-jsdoc';\n+import jsxA11Y from 'eslint-plugin-jsx-a11y';\n+import promisePlugin from 'eslint-plugin-promise';\n+import react from 'eslint-plugin-react';\n+import reactHooks from 'eslint-plugin-react-hooks';\n+import globals from 'globals';\n+import tseslint from 'typescript-eslint';\n+\n+export default defineConfig([\n+  globalIgnores([\n+    'build/**/*',\n+    'coverage/**/*',\n+    'db/**/*',\n+    'lib/**/*',\n+    'log/**/*',\n+    'node_modules/**/*',\n+    'public/**/*',\n+    '!public/embed.js',\n+    'spec/**/*',\n+    'tmp/**/*',\n+    'vendor/**/*',\n+  ]),\n+  {\n+    files: [\n+      '**/*.ts',\n+      '**/*.tsx',\n+      '**/*.jsx',\n+      '**/*.js',\n+      '**/*.cjs',\n+      '**/*.mjs',\n+      '**/*.mts',\n+      '**/*.cts',\n+    ],\n+\n+    linterOptions: {\n+      reportUnusedDisableDirectives: 'error',\n+      reportUnusedInlineConfigs: 'error',\n+    },\n+\n+    extends: [\n+      js.configs.recommended,\n+      react.configs.flat.recommended,",
        "comment_created_at": "2025-03-26T05:49:45+00:00",
        "comment_author": "nschonni",
        "comment_body": "Done, flagged a few Type imports that it autofixed",
        "pr_file_module": null
      }
    ]
  }
]