[
  {
    "discussion_id": "1947354802",
    "pr_number": 33236,
    "pr_file": "streaming/index.js",
    "created_at": "2025-02-08T00:33:12+00:00",
    "commented_code": "reject(new AuthenticationError('Not authorized to stream this list'));\n       });\n \n+      break;\n+    case 'profile':\n+      if (!params.account_id) {\n+        reject(new RequestError('Missing account id parameter'));\n+        return;\n+      }",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "1947354802",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33236,
        "pr_file": "streaming/index.js",
        "discussion_id": "1947354802",
        "commented_code": "@@ -1096,6 +1100,17 @@ const startServer = async () => {\n         reject(new AuthenticationError('Not authorized to stream this list'));\n       });\n \n+      break;\n+    case 'profile':\n+      if (!params.account_id) {\n+        reject(new RequestError('Missing account id parameter'));\n+        return;\n+      }",
        "comment_created_at": "2025-02-08T00:33:12+00:00",
        "comment_author": "ThisIsMissEm",
        "comment_body": "What about if the requested `params.account_id` Account has blocked the requestee? Yes, filtering will happen at the per-message level, but we should probably do an authorization check here too.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "985301527",
    "pr_number": 19059,
    "pr_file": "streaming/index.js",
    "created_at": "2022-10-02T21:49:26+00:00",
    "commented_code": "});\n   });\n \n+  /**\n+   * @param {string} groupId\n+   * @param {any} req\n+   * @return {Promise.<void>}\n+   */\n+  const authorizeGroupAccess = (groupId, req) => new Promise((resolve, reject) => {\n+    const { accountId } = req;\n+\n+    if (accountId) {\n+      resolve();\n+    } else {\n+      reject();\n+    };\n+\n+    /* TODO: possibly handle private-access groups in the future",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "985301527",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 19059,
        "pr_file": "streaming/index.js",
        "discussion_id": "985301527",
        "commented_code": "@@ -608,6 +610,41 @@ const startWorker = async (workerId) => {\n     });\n   });\n \n+  /**\n+   * @param {string} groupId\n+   * @param {any} req\n+   * @return {Promise.<void>}\n+   */\n+  const authorizeGroupAccess = (groupId, req) => new Promise((resolve, reject) => {\n+    const { accountId } = req;\n+\n+    if (accountId) {\n+      resolve();\n+    } else {\n+      reject();\n+    };\n+\n+    /* TODO: possibly handle private-access groups in the future",
        "comment_created_at": "2022-10-02T21:49:26+00:00",
        "comment_author": "Gargron",
        "comment_body": "It seems like currently there is no safeguard for streaming from private groups here?",
        "pr_file_module": null
      },
      {
        "comment_id": "987580025",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 19059,
        "pr_file": "streaming/index.js",
        "discussion_id": "985301527",
        "commented_code": "@@ -608,6 +610,41 @@ const startWorker = async (workerId) => {\n     });\n   });\n \n+  /**\n+   * @param {string} groupId\n+   * @param {any} req\n+   * @return {Promise.<void>}\n+   */\n+  const authorizeGroupAccess = (groupId, req) => new Promise((resolve, reject) => {\n+    const { accountId } = req;\n+\n+    if (accountId) {\n+      resolve();\n+    } else {\n+      reject();\n+    };\n+\n+    /* TODO: possibly handle private-access groups in the future",
        "comment_created_at": "2022-10-05T06:42:06+00:00",
        "comment_author": "ClearlyClaire",
        "comment_body": "Indeed, because we don't have any support or representation for private groups at the moment.",
        "pr_file_module": null
      }
    ]
  }
]