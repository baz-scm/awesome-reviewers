[
  {
    "discussion_id": "1920207655",
    "pr_number": 33630,
    "pr_file": "app/views/admin/custom_emojis/index.html.haml",
    "created_at": "2025-01-17T13:40:00+00:00",
    "commented_code": ".input.select.optional\n               .label_input\n                 = f.select :category_id,\n-                           options_from_collection_for_select(CustomEmojiCategory.all, 'id', 'name'),\n+                           options_from_collection_for_select(CustomEmojiCategory.order(:name).all, 'id', 'name'),",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "1920207655",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33630,
        "pr_file": "app/views/admin/custom_emojis/index.html.haml",
        "discussion_id": "1920207655",
        "commented_code": "@@ -72,7 +72,7 @@\n             .input.select.optional\n               .label_input\n                 = f.select :category_id,\n-                           options_from_collection_for_select(CustomEmojiCategory.all, 'id', 'name'),\n+                           options_from_collection_for_select(CustomEmojiCategory.order(:name).all, 'id', 'name'),",
        "comment_created_at": "2025-01-17T13:40:00+00:00",
        "comment_author": "mjankowski",
        "comment_body": "Minor style nitpicks:\r\n\r\n- Use `order(name: :asc)` to be explicit about what we want\r\n- Add an `alphabetic` (or something) scope on the model to capture the order (mirrors an existing scope on `CustomEmoji`)\r\n- Move the entire `CustomEmojiCategory...all` to a helper method, to avoid directly referring to a constant from the view (this isn't something you added, it's already like that, but now may be good time to extract)\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1920232128",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33630,
        "pr_file": "app/views/admin/custom_emojis/index.html.haml",
        "discussion_id": "1920207655",
        "commented_code": "@@ -72,7 +72,7 @@\n             .input.select.optional\n               .label_input\n                 = f.select :category_id,\n-                           options_from_collection_for_select(CustomEmojiCategory.all, 'id', 'name'),\n+                           options_from_collection_for_select(CustomEmojiCategory.order(:name).all, 'id', 'name'),",
        "comment_created_at": "2025-01-17T13:58:51+00:00",
        "comment_author": "ShadowJonathan",
        "comment_body": "Unsure about the 3rd pattern, but i'll move this to an `.alphabetic` scope on the model, and then add `.all`\r\n\r\nIf you have an example of a helper method, please show it (unless its just `alphabetic.all`), and help me think of a proper name for it. It seems this function just accepts an activerecord query/collection, and turns it into options on its own",
        "pr_file_module": null
      },
      {
        "comment_id": "1920234825",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33630,
        "pr_file": "app/views/admin/custom_emojis/index.html.haml",
        "discussion_id": "1920207655",
        "commented_code": "@@ -72,7 +72,7 @@\n             .input.select.optional\n               .label_input\n                 = f.select :category_id,\n-                           options_from_collection_for_select(CustomEmojiCategory.all, 'id', 'name'),\n+                           options_from_collection_for_select(CustomEmojiCategory.order(:name).all, 'id', 'name'),",
        "comment_created_at": "2025-01-17T14:00:58+00:00",
        "comment_author": "ShadowJonathan",
        "comment_body": "Applied 1 and 2, please say if this is alright, or if you want 3 as well (and then please give me a place/name that i could use for it, or an example i can follow)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1864930819",
    "pr_number": 33055,
    "pr_file": "app/views/admin/terms_of_service/generates/show.html.haml",
    "created_at": "2024-12-01T15:30:52+00:00",
    "commented_code": "+- content_for :page_title do\n+  = t('admin.terms_of_service.generates.title')\n+\n+- content_for :heading_actions do\n+  .back-link\n+    = link_to admin_terms_of_service_index_path do\n+      = material_symbol 'chevron_left'\n+      = t('admin.terms_of_service.back')\n+\n+%p.lead= t('admin.terms_of_service.generates.explanation_html')\n+\n+%p.lead= t('admin.terms_of_service.generates.chance_to_review_html')\n+\n+%hr.spacer/\n+\n+= simple_form_for @generator, url: admin_terms_of_service_generate_path, method: :post do |form|\n+  = render 'shared/error_messages', object: @generator\n+\n+  .fields-group",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "1864930819",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33055,
        "pr_file": "app/views/admin/terms_of_service/generates/show.html.haml",
        "discussion_id": "1864930819",
        "commented_code": "@@ -0,0 +1,41 @@\n+- content_for :page_title do\n+  = t('admin.terms_of_service.generates.title')\n+\n+- content_for :heading_actions do\n+  .back-link\n+    = link_to admin_terms_of_service_index_path do\n+      = material_symbol 'chevron_left'\n+      = t('admin.terms_of_service.back')\n+\n+%p.lead= t('admin.terms_of_service.generates.explanation_html')\n+\n+%p.lead= t('admin.terms_of_service.generates.chance_to_review_html')\n+\n+%hr.spacer/\n+\n+= simple_form_for @generator, url: admin_terms_of_service_generate_path, method: :post do |form|\n+  = render 'shared/error_messages', object: @generator\n+\n+  .fields-group",
        "comment_created_at": "2024-12-01T15:30:52+00:00",
        "comment_author": "mjankowski",
        "comment_body": "In this one and the other form/edit views ... pull out the input fields to a `_form` partial? (and then `render form` from this view)?",
        "pr_file_module": null
      },
      {
        "comment_id": "1872622023",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33055,
        "pr_file": "app/views/admin/terms_of_service/generates/show.html.haml",
        "discussion_id": "1864930819",
        "commented_code": "@@ -0,0 +1,41 @@\n+- content_for :page_title do\n+  = t('admin.terms_of_service.generates.title')\n+\n+- content_for :heading_actions do\n+  .back-link\n+    = link_to admin_terms_of_service_index_path do\n+      = material_symbol 'chevron_left'\n+      = t('admin.terms_of_service.back')\n+\n+%p.lead= t('admin.terms_of_service.generates.explanation_html')\n+\n+%p.lead= t('admin.terms_of_service.generates.chance_to_review_html')\n+\n+%hr.spacer/\n+\n+= simple_form_for @generator, url: admin_terms_of_service_generate_path, method: :post do |form|\n+  = render 'shared/error_messages', object: @generator\n+\n+  .fields-group",
        "comment_created_at": "2024-12-06T05:18:36+00:00",
        "comment_author": "Gargron",
        "comment_body": "This would make sense to me if multiple views reused the form, but this is the only occurence, so I do not really see the benefit.",
        "pr_file_module": null
      },
      {
        "comment_id": "1873001305",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33055,
        "pr_file": "app/views/admin/terms_of_service/generates/show.html.haml",
        "discussion_id": "1864930819",
        "commented_code": "@@ -0,0 +1,41 @@\n+- content_for :page_title do\n+  = t('admin.terms_of_service.generates.title')\n+\n+- content_for :heading_actions do\n+  .back-link\n+    = link_to admin_terms_of_service_index_path do\n+      = material_symbol 'chevron_left'\n+      = t('admin.terms_of_service.back')\n+\n+%p.lead= t('admin.terms_of_service.generates.explanation_html')\n+\n+%p.lead= t('admin.terms_of_service.generates.chance_to_review_html')\n+\n+%hr.spacer/\n+\n+= simple_form_for @generator, url: admin_terms_of_service_generate_path, method: :post do |form|\n+  = render 'shared/error_messages', object: @generator\n+\n+  .fields-group",
        "comment_created_at": "2024-12-06T10:24:37+00:00",
        "comment_author": "mjankowski",
        "comment_body": "\ud83d\udc4d\n\nIt's definitely more clearly useful in a new+edit scenario, but also imho there's a nice mental scanning/parsing benefit when updating the views.\n\nThere's also (again IMO) a nice consistency benefit to be had by just doing it everywhere. I think we currently have form partials in most but not quite all spots. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1861243175",
    "pr_number": 31557,
    "pr_file": "app/views/admin/reports/index.html.haml",
    "created_at": "2024-11-27T21:02:50+00:00",
    "commented_code": "- reports.each do |report|\n         .report-card__summary__item\n           .report-card__summary__item__reported-by\n-            - if report.account.instance_actor?\n-              = site_hostname\n-            - elsif report.account.local?\n-              = admin_account_link_to report.account\n-            - else\n-              = report.account.domain\n+            = link_to admin_report_path(report), class: 'report-card__summary__item__report-id' do\n+              .one-line= t('admin.reports.report', id: report.id)",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "1861243175",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 31557,
        "pr_file": "app/views/admin/reports/index.html.haml",
        "discussion_id": "1861243175",
        "commented_code": "@@ -50,15 +52,22 @@\n       - reports.each do |report|\n         .report-card__summary__item\n           .report-card__summary__item__reported-by\n-            - if report.account.instance_actor?\n-              = site_hostname\n-            - elsif report.account.local?\n-              = admin_account_link_to report.account\n-            - else\n-              = report.account.domain\n+            = link_to admin_report_path(report), class: 'report-card__summary__item__report-id' do\n+              .one-line= t('admin.reports.report', id: report.id)",
        "comment_created_at": "2024-11-27T21:02:50+00:00",
        "comment_author": "mjankowski",
        "comment_body": "This whole case block ... 1) maybe dump into helper method, 2) are there existing i18n strings to use?",
        "pr_file_module": null
      }
    ]
  }
]