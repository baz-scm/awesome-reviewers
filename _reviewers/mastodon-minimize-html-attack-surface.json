[
  {
    "discussion_id": "1887883125",
    "pr_number": 33331,
    "pr_file": "lib/sanitize_ext/sanitize_config.rb",
    "created_at": "2024-12-17T04:36:52+00:00",
    "commented_code": "attributes: {\n         'audio' => %w(controls),\n         'embed' => %w(height src type width),\n-        'iframe' => %w(allowfullscreen frameborder height scrolling src width),\n+        'iframe' => %w(allowfullscreen height scrolling src style width),",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "1887883125",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33331,
        "pr_file": "lib/sanitize_ext/sanitize_config.rb",
        "discussion_id": "1887883125",
        "commented_code": "@@ -136,7 +136,7 @@ module Config\n       attributes: {\n         'audio' => %w(controls),\n         'embed' => %w(height src type width),\n-        'iframe' => %w(allowfullscreen frameborder height scrolling src width),\n+        'iframe' => %w(allowfullscreen height scrolling src style width),",
        "comment_created_at": "2024-12-17T04:36:52+00:00",
        "comment_author": "Gargron",
        "comment_body": "I think allowing `style` might actually introduce potential security issues. Not sure this is necessary.",
        "pr_file_module": null
      },
      {
        "comment_id": "1887923828",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33331,
        "pr_file": "lib/sanitize_ext/sanitize_config.rb",
        "discussion_id": "1887883125",
        "commented_code": "@@ -136,7 +136,7 @@ module Config\n       attributes: {\n         'audio' => %w(controls),\n         'embed' => %w(height src type width),\n-        'iframe' => %w(allowfullscreen frameborder height scrolling src width),\n+        'iframe' => %w(allowfullscreen height scrolling src style width),",
        "comment_created_at": "2024-12-17T05:36:44+00:00",
        "comment_author": "nschonni",
        "comment_body": "Should I just leave `frameborder` as allowed here, for any external embeds that might still use it?",
        "pr_file_module": null
      },
      {
        "comment_id": "1888138457",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33331,
        "pr_file": "lib/sanitize_ext/sanitize_config.rb",
        "discussion_id": "1887883125",
        "commented_code": "@@ -136,7 +136,7 @@ module Config\n       attributes: {\n         'audio' => %w(controls),\n         'embed' => %w(height src type width),\n-        'iframe' => %w(allowfullscreen frameborder height scrolling src width),\n+        'iframe' => %w(allowfullscreen height scrolling src style width),",
        "comment_created_at": "2024-12-17T08:59:24+00:00",
        "comment_author": "ClearlyClaire",
        "comment_body": "Allowing `style` attributes *should* be safe, although there have been vulnerabilities in our sanitizing library in the past, and limiting the surface area should be best.\r\n\r\nAnd if we do decide to allow `style` attributes, it probably makes sense to only allow specific properties like `border`. And keep support for `frameborder` as well.",
        "pr_file_module": null
      },
      {
        "comment_id": "1888943626",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33331,
        "pr_file": "lib/sanitize_ext/sanitize_config.rb",
        "discussion_id": "1887883125",
        "commented_code": "@@ -136,7 +136,7 @@ module Config\n       attributes: {\n         'audio' => %w(controls),\n         'embed' => %w(height src type width),\n-        'iframe' => %w(allowfullscreen frameborder height scrolling src width),\n+        'iframe' => %w(allowfullscreen height scrolling src style width),",
        "comment_created_at": "2024-12-17T17:33:34+00:00",
        "comment_author": "nschonni",
        "comment_body": "Thanks! To keep this simple, I've reverted this file, and kept the changes focused to the places where Mastodon was authoring the `frameborder` attribute",
        "pr_file_module": null
      },
      {
        "comment_id": "1889723362",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33331,
        "pr_file": "lib/sanitize_ext/sanitize_config.rb",
        "discussion_id": "1887883125",
        "commented_code": "@@ -136,7 +136,7 @@ module Config\n       attributes: {\n         'audio' => %w(controls),\n         'embed' => %w(height src type width),\n-        'iframe' => %w(allowfullscreen frameborder height scrolling src width),\n+        'iframe' => %w(allowfullscreen height scrolling src style width),",
        "comment_created_at": "2024-12-18T07:07:32+00:00",
        "comment_author": "ClearlyClaire",
        "comment_body": "Afaik the `html` bit you modified still goes through sanitization, so by using `style` instead, it will get sanitized away and won't work.",
        "pr_file_module": null
      },
      {
        "comment_id": "1897038701",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33331,
        "pr_file": "lib/sanitize_ext/sanitize_config.rb",
        "discussion_id": "1887883125",
        "commented_code": "@@ -136,7 +136,7 @@ module Config\n       attributes: {\n         'audio' => %w(controls),\n         'embed' => %w(height src type width),\n-        'iframe' => %w(allowfullscreen frameborder height scrolling src width),\n+        'iframe' => %w(allowfullscreen height scrolling src style width),",
        "comment_created_at": "2024-12-25T01:51:55+00:00",
        "comment_author": "nschonni",
        "comment_body": "Good call. I added back `style`, but left `frameborder` for any legacy content that might need it for the same affect",
        "pr_file_module": null
      },
      {
        "comment_id": "1901789657",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 33331,
        "pr_file": "lib/sanitize_ext/sanitize_config.rb",
        "discussion_id": "1887883125",
        "commented_code": "@@ -136,7 +136,7 @@ module Config\n       attributes: {\n         'audio' => %w(controls),\n         'embed' => %w(height src type width),\n-        'iframe' => %w(allowfullscreen frameborder height scrolling src width),\n+        'iframe' => %w(allowfullscreen height scrolling src style width),",
        "comment_created_at": "2025-01-03T13:33:26+00:00",
        "comment_author": "ClearlyClaire",
        "comment_body": "I'm not sure if we want to risk adding support for `style` (it's *supposed* to be safe but significantly increases the attack surface), I'll let @Gargron decide on this.\r\n\r\nBut if we're doing this, we should very much use something like:\r\n```ruby\r\n  css: {\r\n    properties: ['border']\r\n  }\r\n```\r\n\r\nto limit attributes to a list of explicitly-vetted properties, to avoid an attacker getting creative and using confusing UI elements, and so on.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1741118243",
    "pr_number": 31702,
    "pr_file": "app/controllers/auth/registrations_controller.rb",
    "created_at": "2024-09-02T16:32:29+00:00",
    "commented_code": "end\n   end\n \n+  def set_invite_reason_message\n+    # rubocop:disable Rails/OutputSafety\n+    @invite_reason_message = markdown.render(Setting.require_invite_message).html_safe if Setting.require_invite_message.present?\n+    # rubocop:enable Rails/OutputSafety",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "1741118243",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 31702,
        "pr_file": "app/controllers/auth/registrations_controller.rb",
        "discussion_id": "1741118243",
        "commented_code": "@@ -115,6 +116,12 @@ def set_invite\n     end\n   end\n \n+  def set_invite_reason_message\n+    # rubocop:disable Rails/OutputSafety\n+    @invite_reason_message = markdown.render(Setting.require_invite_message).html_safe if Setting.require_invite_message.present?\n+    # rubocop:enable Rails/OutputSafety",
        "comment_created_at": "2024-09-02T16:32:29+00:00",
        "comment_author": "ThisIsMissEm",
        "comment_body": "I'm not sure how to do this safely? Apparently markdown.render returns html as a string but it's not marked as safe for usage in templates?",
        "pr_file_module": null
      }
    ]
  }
]