[
  {
    "discussion_id": "2163242712",
    "pr_number": 35094,
    "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
    "created_at": "2025-06-24T08:05:43+00:00",
    "commented_code": "type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));\n   await userEvent.click(canvas.getByRole('button'));",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "2163242712",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 35094,
        "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
        "discussion_id": "2163242712",
        "commented_code": "@@ -36,6 +36,7 @@ export default meta;\n type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));\n   await userEvent.click(canvas.getByRole('button'));",
        "comment_created_at": "2025-06-24T08:05:43+00:00",
        "comment_author": "diondiondion",
        "comment_body": "I wonder whether `.findByRole` would work here, as well. (I believe it has a wait built in.)\r\n\r\n```suggestion\r\n  await userEvent.click(canvas.findByRole('button'));\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2163382458",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 35094,
        "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
        "discussion_id": "2163242712",
        "commented_code": "@@ -36,6 +36,7 @@ export default meta;\n type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));\n   await userEvent.click(canvas.getByRole('button'));",
        "comment_created_at": "2025-06-24T09:07:31+00:00",
        "comment_author": "ChaosExAnima",
        "comment_body": "not directly, `click` cannot accept a promise. but you can `await` the `findByRole` output and use that.",
        "pr_file_module": null
      },
      {
        "comment_id": "2163242712",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 35094,
        "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
        "discussion_id": "2163242712",
        "commented_code": "@@ -36,6 +36,7 @@ export default meta;\n type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));\n   await userEvent.click(canvas.getByRole('button'));",
        "comment_created_at": "2025-06-24T08:05:43+00:00",
        "comment_author": "diondiondion",
        "comment_body": "I wonder whether `.findByRole` would work here, as well. (I believe it has a wait built in.)\r\n\r\n```suggestion\r\n  await userEvent.click(canvas.findByRole('button'));\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2163382458",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 35094,
        "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
        "discussion_id": "2163242712",
        "commented_code": "@@ -36,6 +36,7 @@ export default meta;\n type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));\n   await userEvent.click(canvas.getByRole('button'));",
        "comment_created_at": "2025-06-24T09:07:31+00:00",
        "comment_author": "ChaosExAnima",
        "comment_body": "not directly, `click` cannot accept a promise. but you can `await` the `findByRole` output and use that.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2163291672",
    "pr_number": 35094,
    "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
    "created_at": "2025-06-24T08:28:12+00:00",
    "commented_code": "type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "2163291672",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 35094,
        "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
        "discussion_id": "2163291672",
        "commented_code": "@@ -36,6 +36,7 @@ export default meta;\n type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));",
        "comment_created_at": "2025-06-24T08:28:12+00:00",
        "comment_author": "renchap",
        "comment_body": "Would there be a way to add a `waitFor` automatically before the story starts, so it starts in a state where all the context is already loaded?\r\n\r\nOr was this a mistake and it is idiomatic to start a story with a `waitFor`?",
        "pr_file_module": null
      },
      {
        "comment_id": "2163401427",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 35094,
        "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
        "discussion_id": "2163291672",
        "commented_code": "@@ -36,6 +36,7 @@ export default meta;\n type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));",
        "comment_created_at": "2025-06-24T09:12:38+00:00",
        "comment_author": "ChaosExAnima",
        "comment_body": "not off the top of my head. it's tricky to entirely abstract that delay as there needs to be an element to watch for, and that varies between components.\r\n\r\nEdit: if it becomes a big issue, we can write a wrapper that waits for a specific element or attribute we insert. but i don't think that's needed right now.",
        "pr_file_module": null
      },
      {
        "comment_id": "2163291672",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 35094,
        "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
        "discussion_id": "2163291672",
        "commented_code": "@@ -36,6 +36,7 @@ export default meta;\n type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));",
        "comment_created_at": "2025-06-24T08:28:12+00:00",
        "comment_author": "renchap",
        "comment_body": "Would there be a way to add a `waitFor` automatically before the story starts, so it starts in a state where all the context is already loaded?\r\n\r\nOr was this a mistake and it is idiomatic to start a story with a `waitFor`?",
        "pr_file_module": null
      },
      {
        "comment_id": "2163401427",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 35094,
        "pr_file": "app/javascript/mastodon/components/button/button.stories.tsx",
        "discussion_id": "2163291672",
        "commented_code": "@@ -36,6 +36,7 @@ export default meta;\n type Story = StoryObj<typeof meta>;\n \n const buttonTest: Story['play'] = async ({ args, canvas, userEvent }) => {\n+  await waitFor(() => canvas.getByRole('button'));",
        "comment_created_at": "2025-06-24T09:12:38+00:00",
        "comment_author": "ChaosExAnima",
        "comment_body": "not off the top of my head. it's tricky to entirely abstract that delay as there needs to be an element to watch for, and that varies between components.\r\n\r\nEdit: if it becomes a big issue, we can write a wrapper that waits for a specific element or attribute we insert. but i don't think that's needed right now.",
        "pr_file_module": null
      }
    ]
  }
]