[
  {
    "discussion_id": "150931163",
    "pr_number": 5697,
    "pr_file": ".env.production.sample",
    "created_at": "2017-11-14T19:03:57+00:00",
    "commented_code": "# If you use Docker, you may want to assign UID/GID manually.\n # UID=1000\n # GID=1000\n+\n+# Maximum allowed character count\n+# MAX_TOOT_CHARS=500",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "150931163",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 5697,
        "pr_file": ".env.production.sample",
        "discussion_id": "150931163",
        "commented_code": "@@ -134,3 +134,6 @@ STREAMING_CLUSTER_NUM=1\n # If you use Docker, you may want to assign UID/GID manually.\n # UID=1000\n # GID=1000\n+\n+# Maximum allowed character count\n+# MAX_TOOT_CHARS=500",
        "comment_created_at": "2017-11-14T19:03:57+00:00",
        "comment_author": "mkljczk",
        "comment_body": "afaik, toots are called statuses in code\u2026",
        "pr_file_module": null
      },
      {
        "comment_id": "151066436",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 5697,
        "pr_file": ".env.production.sample",
        "discussion_id": "150931163",
        "commented_code": "@@ -134,3 +134,6 @@ STREAMING_CLUSTER_NUM=1\n # If you use Docker, you may want to assign UID/GID manually.\n # UID=1000\n # GID=1000\n+\n+# Maximum allowed character count\n+# MAX_TOOT_CHARS=500",
        "comment_created_at": "2017-11-15T09:02:14+00:00",
        "comment_author": "lambadalambda",
        "comment_body": "You think it's worth to rename it again?",
        "pr_file_module": null
      },
      {
        "comment_id": "151067290",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 5697,
        "pr_file": ".env.production.sample",
        "discussion_id": "150931163",
        "commented_code": "@@ -134,3 +134,6 @@ STREAMING_CLUSTER_NUM=1\n # If you use Docker, you may want to assign UID/GID manually.\n # UID=1000\n # GID=1000\n+\n+# Maximum allowed character count\n+# MAX_TOOT_CHARS=500",
        "comment_created_at": "2017-11-15T09:06:19+00:00",
        "comment_author": "ClearlyClaire",
        "comment_body": "I'm personally fine either ways. `MAX_STATUS_CHARS` would be more consistent with the source code, but the configuration option is intended for admins, not for developers.",
        "pr_file_module": null
      },
      {
        "comment_id": "2231374773",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 5697,
        "pr_file": ".env.production.sample",
        "discussion_id": "150931163",
        "commented_code": "@@ -134,3 +134,6 @@ STREAMING_CLUSTER_NUM=1\n # If you use Docker, you may want to assign UID/GID manually.\n # UID=1000\n # GID=1000\n+\n+# Maximum allowed character count\n+# MAX_TOOT_CHARS=500",
        "comment_created_at": "2025-07-25T15:09:32+00:00",
        "comment_author": "fachrylakoni-star",
        "comment_body": "Salim Bodouin",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1725735897",
    "pr_number": 31529,
    "pr_file": "app/views/admin/instances/_instance_note.html.haml",
    "created_at": "2024-08-21T20:46:16+00:00",
    "commented_code": "+.report-notes__item",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "1725735897",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 31529,
        "pr_file": "app/views/admin/instances/_instance_note.html.haml",
        "discussion_id": "1725735897",
        "commented_code": "@@ -0,0 +1,18 @@\n+.report-notes__item",
        "comment_created_at": "2024-08-21T20:46:16+00:00",
        "comment_author": "ThisIsMissEm",
        "comment_body": "This should be deleted.. we reuse the `report_notes/report_notes` partial \u2014 we should probably rename that partial to `moderation_notes` or something, since it applies for Account Moderation Notes, Report Notes, and Instance Notes now.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2099659959",
    "pr_number": 34494,
    "pr_file": "app/views/auth/registrations/rules.html.haml",
    "created_at": "2025-05-21T08:15:02+00:00",
    "commented_code": "%ol.rules-list\n     - @rules.each do |rule|\n+      - translation = rule.translations.find { |translation| translation.language == I18n.locale.to_s }\n       %li\n         %button{ type: 'button', aria: { expanded: 'false' } }\n-          .rules-list__text= rule.text\n-          .rules-list__hint= rule.hint\n+          .rules-list__text= translation&.text || rule.text\n+          .rules-list__hint= translation&.hint || rule.hint",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "2099659959",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 34494,
        "pr_file": "app/views/auth/registrations/rules.html.haml",
        "discussion_id": "2099659959",
        "commented_code": "@@ -18,10 +18,11 @@\n \n   %ol.rules-list\n     - @rules.each do |rule|\n+      - translation = rule.translations.find { |translation| translation.language == I18n.locale.to_s }\n       %li\n         %button{ type: 'button', aria: { expanded: 'false' } }\n-          .rules-list__text= rule.text\n-          .rules-list__hint= rule.hint\n+          .rules-list__text= translation&.text || rule.text\n+          .rules-list__hint= translation&.hint || rule.hint",
        "comment_created_at": "2025-05-21T08:15:02+00:00",
        "comment_author": "oneiros",
        "comment_body": "How about moving the translation lookup logic into a method on the `Rule` model?\r\n\r\nIt could also include the fallback logic and maybe even memoization. That could simplify this template a lot.",
        "pr_file_module": null
      },
      {
        "comment_id": "2099776229",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 34494,
        "pr_file": "app/views/auth/registrations/rules.html.haml",
        "discussion_id": "2099659959",
        "commented_code": "@@ -18,10 +18,11 @@\n \n   %ol.rules-list\n     - @rules.each do |rule|\n+      - translation = rule.translations.find { |translation| translation.language == I18n.locale.to_s }\n       %li\n         %button{ type: 'button', aria: { expanded: 'false' } }\n-          .rules-list__text= rule.text\n-          .rules-list__hint= rule.hint\n+          .rules-list__text= translation&.text || rule.text\n+          .rules-list__hint= translation&.hint || rule.hint",
        "comment_created_at": "2025-05-21T09:08:39+00:00",
        "comment_author": "ClearlyClaire",
        "comment_body": "I'm having a look and it's not super obvious how this could be done. I mean we could have a `rule.translated_text_for(I18n.locale.to_s)` but then memoizing the correct translation would be pretty awkward imho.",
        "pr_file_module": null
      },
      {
        "comment_id": "2099790678",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 34494,
        "pr_file": "app/views/auth/registrations/rules.html.haml",
        "discussion_id": "2099659959",
        "commented_code": "@@ -18,10 +18,11 @@\n \n   %ol.rules-list\n     - @rules.each do |rule|\n+      - translation = rule.translations.find { |translation| translation.language == I18n.locale.to_s }\n       %li\n         %button{ type: 'button', aria: { expanded: 'false' } }\n-          .rules-list__text= rule.text\n-          .rules-list__hint= rule.hint\n+          .rules-list__text= translation&.text || rule.text\n+          .rules-list__hint= translation&.hint || rule.hint",
        "comment_created_at": "2025-05-21T09:15:57+00:00",
        "comment_author": "oneiros",
        "comment_body": "I think that even without memoization it would be an improvement, so line 21 above could become something like:\r\n\r\n```ruby\r\ntranslation = rule.translation_for(I18n.locale)\r\n```\r\n\r\nAnd lines 24 and 25 could be made simpler.\r\n\r\nYes, memoizing when the result depends on a parameter is a bit awkward. I usually reach for a `Hash` and do something like:\r\n\r\n```ruby\r\ndef translation_for(locale)\r\n  @cached_translations ||= {}\r\n  @cached_translations[locale] ||= (translations.find_by(language: locale) || self)\r\nend\r\n```\r\n\r\nIt is not pretty, but gets the job done.",
        "pr_file_module": null
      },
      {
        "comment_id": "2099855148",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 34494,
        "pr_file": "app/views/auth/registrations/rules.html.haml",
        "discussion_id": "2099659959",
        "commented_code": "@@ -18,10 +18,11 @@\n \n   %ol.rules-list\n     - @rules.each do |rule|\n+      - translation = rule.translations.find { |translation| translation.language == I18n.locale.to_s }\n       %li\n         %button{ type: 'button', aria: { expanded: 'false' } }\n-          .rules-list__text= rule.text\n-          .rules-list__hint= rule.hint\n+          .rules-list__text= translation&.text || rule.text\n+          .rules-list__hint= translation&.hint || rule.hint",
        "comment_created_at": "2025-05-21T09:46:36+00:00",
        "comment_author": "ClearlyClaire",
        "comment_body": "I went with something like that, thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1730414645",
    "pr_number": 31481,
    "pr_file": "app/views/admin/instances/index.html.haml",
    "created_at": "2024-08-25T19:10:36+00:00",
    "commented_code": ".filter-subset\n     %strong= t('admin.instances.moderation.title')\n     %ul\n-      %li= filter_link_to t('admin.instances.moderation.all'), limited: nil\n-\n-      - unless limited_federation_mode?\n-        %li= filter_link_to t('admin.instances.moderation.limited'), limited: '1'\n+      - if limited_federation_mode?\n+        %li= filter_link_to t('admin.instances.moderation.allowed'), status: nil\n+      - else\n+        %li= filter_link_to t('admin.instances.moderation.all'), status: nil\n+        %li= filter_link_to t('admin.instances.moderation.not_limited'), status: 'not_limited'\n+        %li= filter_link_to t('admin.instances.moderation.noop'), status: 'noop'",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "1730414645",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 31481,
        "pr_file": "app/views/admin/instances/index.html.haml",
        "discussion_id": "1730414645",
        "commented_code": "@@ -15,10 +15,14 @@\n   .filter-subset\n     %strong= t('admin.instances.moderation.title')\n     %ul\n-      %li= filter_link_to t('admin.instances.moderation.all'), limited: nil\n-\n-      - unless limited_federation_mode?\n-        %li= filter_link_to t('admin.instances.moderation.limited'), limited: '1'\n+      - if limited_federation_mode?\n+        %li= filter_link_to t('admin.instances.moderation.allowed'), status: nil\n+      - else\n+        %li= filter_link_to t('admin.instances.moderation.all'), status: nil\n+        %li= filter_link_to t('admin.instances.moderation.not_limited'), status: 'not_limited'\n+        %li= filter_link_to t('admin.instances.moderation.noop'), status: 'noop'",
        "comment_created_at": "2024-08-25T19:10:36+00:00",
        "comment_author": "ThisIsMissEm",
        "comment_body": "The localisation here for \"noop\" is \"Filtered\", which seems like the most reasonable value, because showing a moderator \"NOOP\" in the menu just doesn't really make sense, and usually this severity is used in combination with the `reject_*` fields in domain blocks, which are effectively \"filters\"",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1853892382",
    "pr_number": 31475,
    "pr_file": "app/views/admin/reports/show.html.haml",
    "created_at": "2024-11-22T13:09:32+00:00",
    "commented_code": "- if @report.comment.present?\n   = render 'admin/reports/comment', report: @report\n \n+- if @report.account.local? && !@statuses.empty? && (@report.account.user.settings['web.expand_content_warnings'] || @report.account.user.settings['web.display_media'] == 'show_all')",
    "repo_full_name": "mastodon/mastodon",
    "discussion_comments": [
      {
        "comment_id": "1853892382",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 31475,
        "pr_file": "app/views/admin/reports/show.html.haml",
        "discussion_id": "1853892382",
        "commented_code": "@@ -29,6 +29,9 @@\n - if @report.comment.present?\n   = render 'admin/reports/comment', report: @report\n \n+- if @report.account.local? && !@statuses.empty? && (@report.account.user.settings['web.expand_content_warnings'] || @report.account.user.settings['web.display_media'] == 'show_all')",
        "comment_created_at": "2024-11-22T13:09:32+00:00",
        "comment_author": "mjankowski",
        "comment_body": "The \"does this user have expand CW or show all media on\" check could probably either be extracted to a view hleper we could use here, or some well named method on User (and optionally delegated from account to tighten up even more) ... `User#all_content_visible?` or something ... not sure on naming.",
        "pr_file_module": null
      },
      {
        "comment_id": "1854206045",
        "repo_full_name": "mastodon/mastodon",
        "pr_number": 31475,
        "pr_file": "app/views/admin/reports/show.html.haml",
        "discussion_id": "1853892382",
        "commented_code": "@@ -29,6 +29,9 @@\n - if @report.comment.present?\n   = render 'admin/reports/comment', report: @report\n \n+- if @report.account.local? && !@statuses.empty? && (@report.account.user.settings['web.expand_content_warnings'] || @report.account.user.settings['web.display_media'] == 'show_all')",
        "comment_created_at": "2024-11-22T16:14:11+00:00",
        "comment_author": "ThisIsMissEm",
        "comment_body": "Maybe, but given its a single use for now, I'd probably not add a method for it",
        "pr_file_module": null
      }
    ]
  }
]