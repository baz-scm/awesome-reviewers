[
  {
    "discussion_id": "2152915699",
    "pr_number": 46333,
    "pr_file": "packages/mui-material/src/Tabs/Tabs.js",
    "created_at": "2025-06-17T18:31:16+00:00",
    "commented_code": "scrollbarWidth: 0,\n   });\n \n-  const valueToIndex = new Map();\n+  const valueToIndex = React.useMemo(() => new Map(), []);",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2152915699",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46333,
        "pr_file": "packages/mui-material/src/Tabs/Tabs.js",
        "discussion_id": "2152915699",
        "commented_code": "@@ -375,9 +375,10 @@ const Tabs = React.forwardRef(function Tabs(inProps, ref) {\n     scrollbarWidth: 0,\n   });\n \n-  const valueToIndex = new Map();\n+  const valueToIndex = React.useMemo(() => new Map(), []);",
        "comment_created_at": "2025-06-17T18:31:16+00:00",
        "comment_author": "DiegoAndai",
        "comment_body": "Should we use a ref here instead?",
        "pr_file_module": null
      },
      {
        "comment_id": "2154276681",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46333,
        "pr_file": "packages/mui-material/src/Tabs/Tabs.js",
        "discussion_id": "2152915699",
        "commented_code": "@@ -375,9 +375,10 @@ const Tabs = React.forwardRef(function Tabs(inProps, ref) {\n     scrollbarWidth: 0,\n   });\n \n-  const valueToIndex = new Map();\n+  const valueToIndex = React.useMemo(() => new Map(), []);",
        "comment_created_at": "2025-06-18T10:41:03+00:00",
        "comment_author": "ZeeshanTamboli",
        "comment_body": "Makes sense. While useMemo technically works here, it is meant for **derived values** based on dependencies. Updated in https://github.com/mui/material-ui/pull/46333/commits/fd86ebd2caee0137c24e72eb2d5c83706759a317.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2158300705",
    "pr_number": 46333,
    "pr_file": "packages/mui-material/src/Tabs/Tabs.js",
    "created_at": "2025-06-20T08:05:11+00:00",
    "commented_code": "scrollbarWidth: 0,\n   });\n \n-  const valueToIndex = React.useRef(new Map()).current;\n+  const valueToIndex = useLazyRef(() => new Map()).current;",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2158300705",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46333,
        "pr_file": "packages/mui-material/src/Tabs/Tabs.js",
        "discussion_id": "2158300705",
        "commented_code": "@@ -375,7 +376,7 @@ const Tabs = React.forwardRef(function Tabs(inProps, ref) {\n     scrollbarWidth: 0,\n   });\n \n-  const valueToIndex = React.useRef(new Map()).current;\n+  const valueToIndex = useLazyRef(() => new Map()).current;",
        "comment_created_at": "2025-06-20T08:05:11+00:00",
        "comment_author": "michaldudak",
        "comment_body": "`() => new Map()` can be extracted to a function in the module scope so a new one isn't instantiated every time this code runs.",
        "pr_file_module": null
      },
      {
        "comment_id": "2158863991",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46333,
        "pr_file": "packages/mui-material/src/Tabs/Tabs.js",
        "discussion_id": "2158300705",
        "commented_code": "@@ -375,7 +376,7 @@ const Tabs = React.forwardRef(function Tabs(inProps, ref) {\n     scrollbarWidth: 0,\n   });\n \n-  const valueToIndex = React.useRef(new Map()).current;\n+  const valueToIndex = useLazyRef(() => new Map()).current;",
        "comment_created_at": "2025-06-20T12:36:43+00:00",
        "comment_author": "ZeeshanTamboli",
        "comment_body": "Done in https://github.com/mui/material-ui/pull/46333/commits/acc42c28a2a484209f2196d11bb5e5e51a9e5948",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1200307385",
    "pr_number": 37362,
    "pr_file": "docs/src/modules/components/ComponentPageTabs.js",
    "created_at": "2023-05-22T10:16:18+00:00",
    "commented_code": "export const HEIGHT = 50;\n \n+const tabSxProp = (theme) => ({",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "1200307385",
        "repo_full_name": "mui/material-ui",
        "pr_number": 37362,
        "pr_file": "docs/src/modules/components/ComponentPageTabs.js",
        "discussion_id": "1200307385",
        "commented_code": "@@ -9,6 +9,27 @@ import Link from 'docs/src/modules/components/Link';\n \n export const HEIGHT = 50;\n \n+const tabSxProp = (theme) => ({",
        "comment_created_at": "2023-05-22T10:16:18+00:00",
        "comment_author": "mnajdova",
        "comment_body": "Letâ€™s use the `styled` util instead of `sx` for better perf.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1994693685",
    "pr_number": 45386,
    "pr_file": "docs/data/material/customization/color/ColorTool.js",
    "created_at": "2025-03-14T04:17:41+00:00",
    "commented_code": "import CheckIcon from '@mui/icons-material/Check';\n import Slider from '@mui/material/Slider';\n import { capitalize } from '@mui/material/utils';\n-import { DispatchContext } from 'docs/src/modules/components/ThemeContext';\n+import { resetDocsColor, setDocsColors } from 'docs/src/BrandingCssVarsProvider';",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "1994693685",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45386,
        "pr_file": "docs/data/material/customization/color/ColorTool.js",
        "discussion_id": "1994693685",
        "commented_code": "@@ -12,7 +12,7 @@ import Button from '@mui/material/Button';\n import CheckIcon from '@mui/icons-material/Check';\n import Slider from '@mui/material/Slider';\n import { capitalize } from '@mui/material/utils';\n-import { DispatchContext } from 'docs/src/modules/components/ThemeContext';\n+import { resetDocsColor, setDocsColors } from 'docs/src/BrandingCssVarsProvider';",
        "comment_created_at": "2025-03-14T04:17:41+00:00",
        "comment_author": "siriwatknp",
        "comment_body": "`ColorTool` no longer need to update palette via Context, it's a lot easier and more performant to attach the CSS variables directly to html inline style.",
        "pr_file_module": null
      }
    ]
  }
]