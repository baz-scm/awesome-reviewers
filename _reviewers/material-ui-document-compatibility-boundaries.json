[
  {
    "discussion_id": "2182940549",
    "pr_number": 46476,
    "pr_file": "docs/data/material/customization/theming/theming.md",
    "created_at": "2025-07-03T14:28:06+00:00",
    "commented_code": "2. `...args` (_object[]_): Deep merge the arguments with the about to be returned theme.\n \n :::warning\n-Only the first argument (`options`) is processed by the `createTheme()` function.\n-If you want to actually merge two themes' options and create a new one based on them, you may want to deep merge the two options and provide them as a first argument to the `createTheme()` function.\n+Only the first argument (`options`) is processed by the `createTheme()` function. While passing multiple arguments currently works for backward compatibility, this behavior may be removed in future versions. To ensure your code remains forward-compatible, you should **manually deep merge** the theme objects and pass the result as a single object to `createTheme()`.",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2182940549",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46476,
        "pr_file": "docs/data/material/customization/theming/theming.md",
        "discussion_id": "2182940549",
        "commented_code": "@@ -159,8 +159,7 @@ Generate a theme base on the options received. Then, pass it as a prop to [`Them\n 2. `...args` (_object[]_): Deep merge the arguments with the about to be returned theme.\n \n :::warning\n-Only the first argument (`options`) is processed by the `createTheme()` function.\n-If you want to actually merge two themes' options and create a new one based on them, you may want to deep merge the two options and provide them as a first argument to the `createTheme()` function.\n+Only the first argument (`options`) is processed by the `createTheme()` function. While passing multiple arguments currently works for backward compatibility, this behavior may be removed in future versions. To ensure your code remains forward-compatible, you should **manually deep merge** the theme objects and pass the result as a single object to `createTheme()`.",
        "comment_created_at": "2025-07-03T14:28:06+00:00",
        "comment_author": "mapache-salvaje",
        "comment_body": "```suggestion\r\nOnly the first argument (`options`) is processed by the `createTheme()` function. \r\nWhile passing multiple arguments currently works for backward compatibility, this behavior may be removed in future versions. \r\nTo ensure your code remains forward-compatible, you should manually deep merge the theme objects and pass the result as a single object to `createTheme()`.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2019127837",
    "pr_number": 45670,
    "pr_file": "docs/pages/blog/mui-x-v8.md",
    "created_at": "2025-03-28T18:14:26+00:00",
    "commented_code": "+---\n+title: Introducing MUI\u00a0X v8\n+description: Read all about the new release of the advanced components and other important steps forward with this new major.\n+date: 2025-03-31T08:00:00.000Z\n+authors: ['josefreitas']\n+tags: ['MUI X', 'Product']\n+manualCard: false\n+---\n+\n+<div style=\"max-width: 692px; width: 100%; height: 230px; overflow: hidden; margin-bottom: 16px;\">\n+  <a href=\"https://github.com/mui/mui-x/releases/tag/v8.0.0\">\n+    <img src=\"/static/blog/mui-x-v8/intro.jpg\" alt=\"MUI\u00a0X v8 - major stable release\" width=\"2400\" height=\"800\" style=\"width: 100%; height: 100%; object-fit: cover; object-position: center;\" />\n+  </a>\n+</div>\n+\n+We are excited to announce the stable release of [MUI\u00a0X\u00a0v8.0.0](https://github.com/mui/mui-x/releases/tag/v8.0.0)\u2014packed with many new features, native ESM support alongside Material UI v7, and an improved license management experience.\n+\n+:::warning\n+**MUI\u00a0X v8 natively supports ESM** along Material UI v7. But because of that, the support for Material UI v5 and v6 don't come out-of-the-box.\n+\n+Read more on: [Support for Material UI](#support-for-material-ui)\n+:::\n+\n+## Table of Contents\n+\n+- [Data Grid](#data-grid)\n+  - [Pivoting](#pivoting)\n+  - [AI Assistant \u2013 Featuring LLMs on the Data Grid](#ai-assistant-featuring-llms-on-the-data-grid)\n+  - [New Toolbar](#new-toolbar)\n+  - [Design Agnostic Core](#design-agnostic-core)\n+  - [New No Columns Overlay](#new-no-columns-overlay)\n+  - [Data Source on the Community Plan](#data-source-on-the-community-plan)\n+  - [Server-Side Aggregation and Lazy Loading](#server-side-aggregation-and-lazy-loading)\n+  - [List View](#list-view)\n+  - [Performance Improvements](#performance-improvements)\n+- [Date and Time Pickers](#date-and-time-pickers)\n+  - [Time Range Picker](#time-range-picker)\n+  - [Auto Switch Strategy](#auto-switch-strategy)\n+  - [Clear `ownerState` for slots](#clear-ownerstate-for-slots)\n+  - [Accessible DOM Structure](#accessible-dom-structure)\n+  - [Keyboard Editing on Mobile Pickers](#keyboard-editing-on-mobile-pickers)\n+- [Tree View](#tree-view)\n+  - [Automatic selection propagation](#automatic-selection-propagation)\n+  - [Lazy loading child nodes](#lazy-loading-child-nodes)\n+  - [New Customization Hook](#new-customization-hook)\n+- [Charts](#charts)\n+  - [Refined Design and Interaction](#refined-design-and-interaction)\n+  - [Funnel Charts](#funnel-charts)\n+  - [Radar Charts](#radar-charts)\n+  - [Server-Side Rendering for Charts](#server-side-rendering-for-charts)\n+- [Enhanced License Management and Telemetry](#enhanced-license-management-and-telemetry)\n+- [Priority Support \u2013 A New Support Service](#priority-support-a-new-support-service)\n+- [Support for Material UI](#support-for-material-ui)\n+- [Migration](#migration)\n+- [Long-Term Support](#long-term-support)\n+- [What's next](#whats-next)\n+- [How to Get Involved](#how-to-get-involved)\n+\n+## Data Grid\n+\n+### Pivoting\n+\n+The wait is over! With pivoting, your users can easily restructure and summarize large datasets: group related data, calculate aggregates (such as sums, averages, and counts), and compare different data categories side by side. This flexibility enables faster insight discovery and more efficient data analysis.\n+\n+The feature is available out-of-the-box, but you can also create a pre-configured setup depending on your user requirements.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"690\" height=\"417\" controls>\n+    <source src=\"/static/blog/mui-x-v8/pivoting.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>A common pivoting use case</figcaption>\n+</figure>\n+\n+Learn how to use pivoting [now](/x/react-data-grid/pivoting/).\n+\n+### Ask Your Table - Featuring AI Assistance on the Data Grid\n+\n+After a period of test with users and pilot customers, we're excited to introduce our new AI Assistant for the Data Grid: [Ask Your Table](/x/react-data-grid/ask-your-table/).\n+\n+Now your users can interact with data using natural language queries and extract data insights quickly as ever.\n+\n+For example, if you\u2019re working with an Olympics medal dataset, you can simply ask, \u201cWho won the most gold medals this century?\u201d and the Data Grid will automatically apply the right filters, groupings, and aggregations to display your answer\u2014all that while keeping your dataset private.\n+\n+<figure>\n+  <img width=\"2084\" height=\"928\" alt=\"An example use case showcasing the answer to the question with the correct sorting, filters and grouping\" src=\"/static/blog/mui-x-v8/ask-your-table.png\" loading=\"lazy\">\n+  <figcaption>An answer from the Data Grid</figcaption>\n+</figure>\n+\n+**Feature's key Benefits:**\n+\n+- **Enhanced usability**: Simplify interactions with data by asking questions in plain language.\n+- **Unlock the full potential of the Data Grid**: Explore, combine, and discover powerful data analysis features often hidden behind menus, without the tedious hopping from one menu to another.\n+- **Data privacy:** No need to share your dataset\u2014the service model only requires your column definitions and a few data samples.\n+\n+Interested in bringing this feature to your users? [Contact us](mailto:sales@mui.com) to get access to your API Key!\n+\n+### New Toolbar\n+\n+The [redesigned toolbar](/x/react-data-grid/components/toolbar/) not only looks fantastic but also empowers developers one step further through an open composition of sub-components, allowing you to tailor the toolbar's layout precisely to your application's needs.\n+\n+<figure>\n+  <img width=\"100%\" alt=\"The new toolbar's design\" src=\"/static/blog/mui-x-v8/new-toolbar.png\" loading=\"lazy\">\n+  <figcaption>The new toolbar's design</figcaption>\n+</figure>\n+\n+This new developer experience, based on composition, may feel different from our previous approach\u2014but it sets a new standard. We\u2019ll soon extend this enhanced experience to other key subcomponents, such as the filter panel and columns management panel, ensuring a cohesive and powerful toolkit for advanced customization.\n+\n+Dive into our new docs section: [Sub-Components Composition](/x/react-data-grid/components/usage/)\n+\n+### Design Agnostic Core\n+\n+We understand how customization is important to you. So with the ultimate goal to be absolutely customizable, we're taking the first step to decouple Material UI from the Data Grid Core, opening the possibility to use the Data Grid with any design system\u2014and it\u2019s just the beginning. On the next steps, we'll work to provide the best experience for you to build a full featured data grid that fits all your design requirements.\n+\n+### No-Columns Overlay\n+\n+We\u2019ve added a no-columns overlay to serve as a clear fallback when the Data Grid has no columns to show.\n+\n+Learn more about overlays on [overlay's docs](/x/react-data-grid/overlays/).\n+\n+### Data Source on the Community Plan\n+\n+Great news\u2014the Data Source is now part of the community plan!\n+\n+We're unifying our approach to handling server-side data across all plans, creating a single, cohesive framework.\n+\n+Explore your options in our [Data Source Docs](/x/react-data-grid/data-source/).\n+\n+### Server-Side Aggregation and Lazy Loading\n+\n+The Data Source now supports advanced features such as server-side aggregation, and on-demand data fetching for infinite scrolling, and lazy loading.\n+\n+Explore all your options when handling [Server-Side Data](/x/react-data-grid/server-side-data/).\n+\n+### List View\n+\n+We\u2019ve promoted List View to stable, and over this major we\u2019re committed to enhancing this feature even further\u2014making it easier to deliver a robust Data Grid experience on small screens.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"690\" height=\"417\" controls>\n+    <source src=\"/static/blog/mui-x-v8/list-view.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Two different views to match the capabilities of multiple displays</figcaption>\n+</figure>\n+\n+Learn more about [List View](/x/react-data-grid/list-view/).\n+\n+### Performance Improvements\n+\n+We\u2019ve made significant performance enhancements across the board\u2014from smoother scrolling and faster Excel export to improved mount/resize and aggregation performance.\n+\n+## Date and Time Pickers\n+\n+### Time Range Picker\n+\n+It's finally here! The highly anticipated Time Range Picker component is designed for a straightforward and efficient experience, perfect for scheduling applications and detailed period inputs.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"690\" height=\"417\" controls>\n+    <source src=\"/static/blog/mui-x-v8/time-range-picker.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Time Range Picker example</figcaption>\n+</figure>\n+\n+Get started with the [Time Range Picker](/x/react-date-pickers/time-range-picker/).\n+\n+### New view-switching Strategy\n+\n+We\u2019ve removed the automatic view-switching in the date time and time range pickers to deliver a more consistent and user-friendly experience. Now, you can easily customize the input flow behavior to better suit your application's needs.\n+\n+You can learn about it on [docs](/x/react-date-pickers/time-range-picker/).\n+\n+### Clear `ownerState` for slots\n+\n+We've refined our slot system by clearing the `ownerState` before passing props to slot components. This ensures that only the necessary properties are forwarded\u2014resulting in a cleaner API, reduced prop clutter, and enhanced performance. By isolating internal state from presentation layers, you gain more predictable styling and greater control when customizing components.\n+\n+### Accessible DOM Structure\n+\n+The Accessible DOM Structure is now the default for our field components. The new structure ensures screen readers can correctly work with the fields\n+\n+### Keyboard Editing on Mobile Pickers\n+\n+We\u2019ve introduced keyboard editing support for mobile pickers. Users can now seamlessly input and adjust date and time values directly via on-screen keyboards, providing a more accessible and efficient experience.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Mobile picker with keyboard input\" src=\"/static/blog/mui-x-v8/mobile-picker-keyboard.png\" loading=\"lazy\">\n+  <figcaption>Mobile picker with keyboard input</figcaption>\n+</figure>\n+\n+## Tree View\n+\n+### Automatic selection propagation\n+\n+The Rich Tree View now supports parent/child selection propagation. This means you can select a parent and automatically select all your children, and vice-versa depending on your requirements and configuration.\n+\n+```js\n+type TreeViewSelectionPropagation = {\n+  descendants?: boolean; // default: false\n+  parents?: boolean; // default: false\n+};\n+```\n+\n+You can learn about this and other selection features on [Selection docs](/x/react-tree-view/rich-tree-view/selection/).\n+\n+### Lazy loading child nodes\n+\n+We\u2019ve enhanced the Rich Tree View with a robust lazy loading mechanism for children. Now, child nodes are loaded on demand\u2014reducing initial load times and improving performance when working with extensive hierarchical data. This approach ensures a smoother user experience and also minimizes unnecessary network overhead.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"690\" height=\"417\" controls>\n+    <source src=\"/static/blog/mui-x-v8/tree-view-lazy-loading.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>lazy loading of children on selection</figcaption>\n+</figure>\n+\n+Learn how to add [lazy loading](/x/react-tree-view/rich-tree-view/lazy-loading/) to your application's Tree View.\n+\n+### New Customization Hook\n+\n+We\u2019ve officially transitioned to a new developer experience for customizing TreeItems for the Rich Tree View. With our new customization hook, you can freely compose your TreeItem while still leveraging all the out-of-the-box features of the RichTreeView. This provides unparalleled flexibility to tailor your tree components to your project\u2019s unique requirements.\n+\n+```js\n+const CustomTreeItemComponent = React.forwardRef(function CustomTreeItemComponent(\n+  { id, itemId, label, disabled, children }: TreeItemProps,\n+  ref: React.Ref<HTMLLIElement>,\n+) {\n+  const treeItemData = useTreeItem({ id, itemId, children, label, disabled, rootRef: ref });\n+\n+  return (\n+    <TreeItemProvider {...treeItemData.getContextProviderProps()}>\n+      <TreeItemRoot {...treeItemData.getRootProps()}>\n+        <TreeItemContent {...treeItemData.getContentProps()}>\n+          <TreeItemLabel {...treeItemData.getLabelProps()} />\n+        </TreeItemContent>\n+        {children && <TreeItemGroupTransition {...treeItemData.getGroupTransitionProps()} />}\n+      </TreeItemRoot>\n+    </TreeItemProvider>\n+  );\n+}\n+```\n+\n+Learn more this and other options on [Tree Item Customization docs](/x/react-tree-view/tree-item-customization/).\n+\n+## Charts\n+\n+### Funnel Charts\n+\n+We have expanded our chart portfolio with the addition of Funnel Charts, providing a new way to visualize data conversions and drop-offs.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Funnel charts examples\" src=\"/static/blog/mui-x-v8/funnel-charts.png\" loading=\"lazy\">\n+  <figcaption>Funnel charts examples</figcaption>\n+</figure>\n+\n+### Radar Charts\n+\n+Similarly, our Radar Charts offer a dynamic way to display multivariate data, enhancing your users data analysis capabilities.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Radar charts examples\" src=\"/static/blog/mui-x-v8/radar-charts.png\" loading=\"lazy\">\n+  <figcaption>Radar charts examples</figcaption>\n+</figure>\n+\n+### Server-Side Rendering for Charts\n+\n+You can now leverage server-side rendering (SSR) for charts to improve initial load performance and SEO.\n+SSR is supported under two conditions:\n+\n+- **Dimensions:** You must provide explicit `width` and `height` props, as the SVG dimensions cannot be computed on the server.\n+- **Animations:** Animations must be disabled using the `skipAnimation` prop; otherwise, the chart may render in an empty state on the initial render.\n+\n+### Refined Design and Interaction\n+\n+Charts in MUI\u00a0X v8 have been improved with a focus on clarity and interactivity.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Charts redesigned - before/after\" src=\"/static/blog/mui-x-v8/charts-before-after.png\" loading=\"lazy\">\n+  <figcaption>Charts redesigned before/after</figcaption>\n+</figure>\n+\n+### HTML Legend for Charts\n+\n+We\u2019ve re-engineered the charts legend so that it\u2019s now rendered as a native HTML element. This change gives you more control over its styling and behavior, making it easier to integrate with your design system.\n+\n+### Charts Composition\n+\n+We've restructured our charts composition by dividing responsibilities between two dedicated components: `<ChartDataProvider />` and `<ChartsSurface />`. The `<ChartDataProvider />` now focuses solely on managing and processing your chart data, while `<ChartsSurface />` is dedicated to rendering the visual aspects. This clear separation enhances customization, improves performance, and offers a more flexible integration with your application.\n+\n+Learn more in our [Charts Composition Documentation](/x/react-charts/composition/).\n+\n+## Enhanced License Management and Telemetry\n+\n+Managing your license has never been easier. Our redesigned [account page](https://mui.com/store/account/) on the store allows you to view your license keys, update number of seats, renew, upgrade and more, with minimal effort.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Radar charts examples\" src=\"/static/blog/mui-x-v8/accounts-page.png\" loading=\"lazy\">\n+  <figcaption>Accounts Page</figcaption>\n+</figure>\n+\n+In addition, we\u2019ve integrated telemetry into our system to continuously enhance your experience with our products. Using this same infrastructure, you'll soon be able to manage your license without changing your key\u2014thanks to server-side license validation.\n+\n+Telemetry is released as an opt-in feature. We recommend enabling it by adding the following code to your project, close to your license validation:\n+\n+```js\n+import { muiXTelemetrySettings } from '@mui/x-license';\n+\n+muiXTelemetrySettings.enableTelemetry();\n+```\n+\n+You can find more details in our [telemetry guide](/x/guides/telemetry/).\n+\n+## Priority Support \u2013 A New Support Service\n+\n+A few months ago, we launched Priority Support with a few customers, and now we\u2019re excited to invite more users to take advantage of this service.\n+\n+Priority Support offers fast, dedicated assistance with guaranteed response times, ensuring that technical issues on both MUI\u00a0X and MUI Core are addressed swiftly and efficiently.\n+\n+For full details on the benefits and service levels of Priority Support, please see our [Support SLA](https://mui.com/legal/technical-support-sla/).\n+\n+If you\u2019re interested in upgrading to Priority Support, don\u2019t hesitate to [contact our sales team](mailto:sales@mui.com) for more information or purchase it directly through your account page.\n+\n+## Support for Material UI\n+\n+When planning this major release, our goal was to support the last two major versions of Material UI. However, we faced a tough choice: continue supporting older versions (v5 and v6) or fully embrace the innovations of **Material UI v7**. With native ESM support, improved package management, and seamless integration with modern bundlers like Vite and webpack, v7 represents the future of Material UI. Supporting both wasn\u2019t feasible, so we chose to move forward.",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2019127837",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45670,
        "pr_file": "docs/pages/blog/mui-x-v8.md",
        "discussion_id": "2019127837",
        "commented_code": "@@ -0,0 +1,358 @@\n+---\n+title: Introducing MUI\u00a0X v8\n+description: Read all about the new release of the advanced components and other important steps forward with this new major.\n+date: 2025-03-31T08:00:00.000Z\n+authors: ['josefreitas']\n+tags: ['MUI X', 'Product']\n+manualCard: false\n+---\n+\n+<div style=\"max-width: 692px; width: 100%; height: 230px; overflow: hidden; margin-bottom: 16px;\">\n+  <a href=\"https://github.com/mui/mui-x/releases/tag/v8.0.0\">\n+    <img src=\"/static/blog/mui-x-v8/intro.jpg\" alt=\"MUI\u00a0X v8 - major stable release\" width=\"2400\" height=\"800\" style=\"width: 100%; height: 100%; object-fit: cover; object-position: center;\" />\n+  </a>\n+</div>\n+\n+We are excited to announce the stable release of [MUI\u00a0X\u00a0v8.0.0](https://github.com/mui/mui-x/releases/tag/v8.0.0)\u2014packed with many new features, native ESM support alongside Material UI v7, and an improved license management experience.\n+\n+:::warning\n+**MUI\u00a0X v8 natively supports ESM** along Material UI v7. But because of that, the support for Material UI v5 and v6 don't come out-of-the-box.\n+\n+Read more on: [Support for Material UI](#support-for-material-ui)\n+:::\n+\n+## Table of Contents\n+\n+- [Data Grid](#data-grid)\n+  - [Pivoting](#pivoting)\n+  - [AI Assistant \u2013 Featuring LLMs on the Data Grid](#ai-assistant-featuring-llms-on-the-data-grid)\n+  - [New Toolbar](#new-toolbar)\n+  - [Design Agnostic Core](#design-agnostic-core)\n+  - [New No Columns Overlay](#new-no-columns-overlay)\n+  - [Data Source on the Community Plan](#data-source-on-the-community-plan)\n+  - [Server-Side Aggregation and Lazy Loading](#server-side-aggregation-and-lazy-loading)\n+  - [List View](#list-view)\n+  - [Performance Improvements](#performance-improvements)\n+- [Date and Time Pickers](#date-and-time-pickers)\n+  - [Time Range Picker](#time-range-picker)\n+  - [Auto Switch Strategy](#auto-switch-strategy)\n+  - [Clear `ownerState` for slots](#clear-ownerstate-for-slots)\n+  - [Accessible DOM Structure](#accessible-dom-structure)\n+  - [Keyboard Editing on Mobile Pickers](#keyboard-editing-on-mobile-pickers)\n+- [Tree View](#tree-view)\n+  - [Automatic selection propagation](#automatic-selection-propagation)\n+  - [Lazy loading child nodes](#lazy-loading-child-nodes)\n+  - [New Customization Hook](#new-customization-hook)\n+- [Charts](#charts)\n+  - [Refined Design and Interaction](#refined-design-and-interaction)\n+  - [Funnel Charts](#funnel-charts)\n+  - [Radar Charts](#radar-charts)\n+  - [Server-Side Rendering for Charts](#server-side-rendering-for-charts)\n+- [Enhanced License Management and Telemetry](#enhanced-license-management-and-telemetry)\n+- [Priority Support \u2013 A New Support Service](#priority-support-a-new-support-service)\n+- [Support for Material UI](#support-for-material-ui)\n+- [Migration](#migration)\n+- [Long-Term Support](#long-term-support)\n+- [What's next](#whats-next)\n+- [How to Get Involved](#how-to-get-involved)\n+\n+## Data Grid\n+\n+### Pivoting\n+\n+The wait is over! With pivoting, your users can easily restructure and summarize large datasets: group related data, calculate aggregates (such as sums, averages, and counts), and compare different data categories side by side. This flexibility enables faster insight discovery and more efficient data analysis.\n+\n+The feature is available out-of-the-box, but you can also create a pre-configured setup depending on your user requirements.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"690\" height=\"417\" controls>\n+    <source src=\"/static/blog/mui-x-v8/pivoting.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>A common pivoting use case</figcaption>\n+</figure>\n+\n+Learn how to use pivoting [now](/x/react-data-grid/pivoting/).\n+\n+### Ask Your Table - Featuring AI Assistance on the Data Grid\n+\n+After a period of test with users and pilot customers, we're excited to introduce our new AI Assistant for the Data Grid: [Ask Your Table](/x/react-data-grid/ask-your-table/).\n+\n+Now your users can interact with data using natural language queries and extract data insights quickly as ever.\n+\n+For example, if you\u2019re working with an Olympics medal dataset, you can simply ask, \u201cWho won the most gold medals this century?\u201d and the Data Grid will automatically apply the right filters, groupings, and aggregations to display your answer\u2014all that while keeping your dataset private.\n+\n+<figure>\n+  <img width=\"2084\" height=\"928\" alt=\"An example use case showcasing the answer to the question with the correct sorting, filters and grouping\" src=\"/static/blog/mui-x-v8/ask-your-table.png\" loading=\"lazy\">\n+  <figcaption>An answer from the Data Grid</figcaption>\n+</figure>\n+\n+**Feature's key Benefits:**\n+\n+- **Enhanced usability**: Simplify interactions with data by asking questions in plain language.\n+- **Unlock the full potential of the Data Grid**: Explore, combine, and discover powerful data analysis features often hidden behind menus, without the tedious hopping from one menu to another.\n+- **Data privacy:** No need to share your dataset\u2014the service model only requires your column definitions and a few data samples.\n+\n+Interested in bringing this feature to your users? [Contact us](mailto:sales@mui.com) to get access to your API Key!\n+\n+### New Toolbar\n+\n+The [redesigned toolbar](/x/react-data-grid/components/toolbar/) not only looks fantastic but also empowers developers one step further through an open composition of sub-components, allowing you to tailor the toolbar's layout precisely to your application's needs.\n+\n+<figure>\n+  <img width=\"100%\" alt=\"The new toolbar's design\" src=\"/static/blog/mui-x-v8/new-toolbar.png\" loading=\"lazy\">\n+  <figcaption>The new toolbar's design</figcaption>\n+</figure>\n+\n+This new developer experience, based on composition, may feel different from our previous approach\u2014but it sets a new standard. We\u2019ll soon extend this enhanced experience to other key subcomponents, such as the filter panel and columns management panel, ensuring a cohesive and powerful toolkit for advanced customization.\n+\n+Dive into our new docs section: [Sub-Components Composition](/x/react-data-grid/components/usage/)\n+\n+### Design Agnostic Core\n+\n+We understand how customization is important to you. So with the ultimate goal to be absolutely customizable, we're taking the first step to decouple Material UI from the Data Grid Core, opening the possibility to use the Data Grid with any design system\u2014and it\u2019s just the beginning. On the next steps, we'll work to provide the best experience for you to build a full featured data grid that fits all your design requirements.\n+\n+### No-Columns Overlay\n+\n+We\u2019ve added a no-columns overlay to serve as a clear fallback when the Data Grid has no columns to show.\n+\n+Learn more about overlays on [overlay's docs](/x/react-data-grid/overlays/).\n+\n+### Data Source on the Community Plan\n+\n+Great news\u2014the Data Source is now part of the community plan!\n+\n+We're unifying our approach to handling server-side data across all plans, creating a single, cohesive framework.\n+\n+Explore your options in our [Data Source Docs](/x/react-data-grid/data-source/).\n+\n+### Server-Side Aggregation and Lazy Loading\n+\n+The Data Source now supports advanced features such as server-side aggregation, and on-demand data fetching for infinite scrolling, and lazy loading.\n+\n+Explore all your options when handling [Server-Side Data](/x/react-data-grid/server-side-data/).\n+\n+### List View\n+\n+We\u2019ve promoted List View to stable, and over this major we\u2019re committed to enhancing this feature even further\u2014making it easier to deliver a robust Data Grid experience on small screens.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"690\" height=\"417\" controls>\n+    <source src=\"/static/blog/mui-x-v8/list-view.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Two different views to match the capabilities of multiple displays</figcaption>\n+</figure>\n+\n+Learn more about [List View](/x/react-data-grid/list-view/).\n+\n+### Performance Improvements\n+\n+We\u2019ve made significant performance enhancements across the board\u2014from smoother scrolling and faster Excel export to improved mount/resize and aggregation performance.\n+\n+## Date and Time Pickers\n+\n+### Time Range Picker\n+\n+It's finally here! The highly anticipated Time Range Picker component is designed for a straightforward and efficient experience, perfect for scheduling applications and detailed period inputs.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"690\" height=\"417\" controls>\n+    <source src=\"/static/blog/mui-x-v8/time-range-picker.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Time Range Picker example</figcaption>\n+</figure>\n+\n+Get started with the [Time Range Picker](/x/react-date-pickers/time-range-picker/).\n+\n+### New view-switching Strategy\n+\n+We\u2019ve removed the automatic view-switching in the date time and time range pickers to deliver a more consistent and user-friendly experience. Now, you can easily customize the input flow behavior to better suit your application's needs.\n+\n+You can learn about it on [docs](/x/react-date-pickers/time-range-picker/).\n+\n+### Clear `ownerState` for slots\n+\n+We've refined our slot system by clearing the `ownerState` before passing props to slot components. This ensures that only the necessary properties are forwarded\u2014resulting in a cleaner API, reduced prop clutter, and enhanced performance. By isolating internal state from presentation layers, you gain more predictable styling and greater control when customizing components.\n+\n+### Accessible DOM Structure\n+\n+The Accessible DOM Structure is now the default for our field components. The new structure ensures screen readers can correctly work with the fields\n+\n+### Keyboard Editing on Mobile Pickers\n+\n+We\u2019ve introduced keyboard editing support for mobile pickers. Users can now seamlessly input and adjust date and time values directly via on-screen keyboards, providing a more accessible and efficient experience.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Mobile picker with keyboard input\" src=\"/static/blog/mui-x-v8/mobile-picker-keyboard.png\" loading=\"lazy\">\n+  <figcaption>Mobile picker with keyboard input</figcaption>\n+</figure>\n+\n+## Tree View\n+\n+### Automatic selection propagation\n+\n+The Rich Tree View now supports parent/child selection propagation. This means you can select a parent and automatically select all your children, and vice-versa depending on your requirements and configuration.\n+\n+```js\n+type TreeViewSelectionPropagation = {\n+  descendants?: boolean; // default: false\n+  parents?: boolean; // default: false\n+};\n+```\n+\n+You can learn about this and other selection features on [Selection docs](/x/react-tree-view/rich-tree-view/selection/).\n+\n+### Lazy loading child nodes\n+\n+We\u2019ve enhanced the Rich Tree View with a robust lazy loading mechanism for children. Now, child nodes are loaded on demand\u2014reducing initial load times and improving performance when working with extensive hierarchical data. This approach ensures a smoother user experience and also minimizes unnecessary network overhead.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"690\" height=\"417\" controls>\n+    <source src=\"/static/blog/mui-x-v8/tree-view-lazy-loading.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>lazy loading of children on selection</figcaption>\n+</figure>\n+\n+Learn how to add [lazy loading](/x/react-tree-view/rich-tree-view/lazy-loading/) to your application's Tree View.\n+\n+### New Customization Hook\n+\n+We\u2019ve officially transitioned to a new developer experience for customizing TreeItems for the Rich Tree View. With our new customization hook, you can freely compose your TreeItem while still leveraging all the out-of-the-box features of the RichTreeView. This provides unparalleled flexibility to tailor your tree components to your project\u2019s unique requirements.\n+\n+```js\n+const CustomTreeItemComponent = React.forwardRef(function CustomTreeItemComponent(\n+  { id, itemId, label, disabled, children }: TreeItemProps,\n+  ref: React.Ref<HTMLLIElement>,\n+) {\n+  const treeItemData = useTreeItem({ id, itemId, children, label, disabled, rootRef: ref });\n+\n+  return (\n+    <TreeItemProvider {...treeItemData.getContextProviderProps()}>\n+      <TreeItemRoot {...treeItemData.getRootProps()}>\n+        <TreeItemContent {...treeItemData.getContentProps()}>\n+          <TreeItemLabel {...treeItemData.getLabelProps()} />\n+        </TreeItemContent>\n+        {children && <TreeItemGroupTransition {...treeItemData.getGroupTransitionProps()} />}\n+      </TreeItemRoot>\n+    </TreeItemProvider>\n+  );\n+}\n+```\n+\n+Learn more this and other options on [Tree Item Customization docs](/x/react-tree-view/tree-item-customization/).\n+\n+## Charts\n+\n+### Funnel Charts\n+\n+We have expanded our chart portfolio with the addition of Funnel Charts, providing a new way to visualize data conversions and drop-offs.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Funnel charts examples\" src=\"/static/blog/mui-x-v8/funnel-charts.png\" loading=\"lazy\">\n+  <figcaption>Funnel charts examples</figcaption>\n+</figure>\n+\n+### Radar Charts\n+\n+Similarly, our Radar Charts offer a dynamic way to display multivariate data, enhancing your users data analysis capabilities.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Radar charts examples\" src=\"/static/blog/mui-x-v8/radar-charts.png\" loading=\"lazy\">\n+  <figcaption>Radar charts examples</figcaption>\n+</figure>\n+\n+### Server-Side Rendering for Charts\n+\n+You can now leverage server-side rendering (SSR) for charts to improve initial load performance and SEO.\n+SSR is supported under two conditions:\n+\n+- **Dimensions:** You must provide explicit `width` and `height` props, as the SVG dimensions cannot be computed on the server.\n+- **Animations:** Animations must be disabled using the `skipAnimation` prop; otherwise, the chart may render in an empty state on the initial render.\n+\n+### Refined Design and Interaction\n+\n+Charts in MUI\u00a0X v8 have been improved with a focus on clarity and interactivity.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Charts redesigned - before/after\" src=\"/static/blog/mui-x-v8/charts-before-after.png\" loading=\"lazy\">\n+  <figcaption>Charts redesigned before/after</figcaption>\n+</figure>\n+\n+### HTML Legend for Charts\n+\n+We\u2019ve re-engineered the charts legend so that it\u2019s now rendered as a native HTML element. This change gives you more control over its styling and behavior, making it easier to integrate with your design system.\n+\n+### Charts Composition\n+\n+We've restructured our charts composition by dividing responsibilities between two dedicated components: `<ChartDataProvider />` and `<ChartsSurface />`. The `<ChartDataProvider />` now focuses solely on managing and processing your chart data, while `<ChartsSurface />` is dedicated to rendering the visual aspects. This clear separation enhances customization, improves performance, and offers a more flexible integration with your application.\n+\n+Learn more in our [Charts Composition Documentation](/x/react-charts/composition/).\n+\n+## Enhanced License Management and Telemetry\n+\n+Managing your license has never been easier. Our redesigned [account page](https://mui.com/store/account/) on the store allows you to view your license keys, update number of seats, renew, upgrade and more, with minimal effort.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Radar charts examples\" src=\"/static/blog/mui-x-v8/accounts-page.png\" loading=\"lazy\">\n+  <figcaption>Accounts Page</figcaption>\n+</figure>\n+\n+In addition, we\u2019ve integrated telemetry into our system to continuously enhance your experience with our products. Using this same infrastructure, you'll soon be able to manage your license without changing your key\u2014thanks to server-side license validation.\n+\n+Telemetry is released as an opt-in feature. We recommend enabling it by adding the following code to your project, close to your license validation:\n+\n+```js\n+import { muiXTelemetrySettings } from '@mui/x-license';\n+\n+muiXTelemetrySettings.enableTelemetry();\n+```\n+\n+You can find more details in our [telemetry guide](/x/guides/telemetry/).\n+\n+## Priority Support \u2013 A New Support Service\n+\n+A few months ago, we launched Priority Support with a few customers, and now we\u2019re excited to invite more users to take advantage of this service.\n+\n+Priority Support offers fast, dedicated assistance with guaranteed response times, ensuring that technical issues on both MUI\u00a0X and MUI Core are addressed swiftly and efficiently.\n+\n+For full details on the benefits and service levels of Priority Support, please see our [Support SLA](https://mui.com/legal/technical-support-sla/).\n+\n+If you\u2019re interested in upgrading to Priority Support, don\u2019t hesitate to [contact our sales team](mailto:sales@mui.com) for more information or purchase it directly through your account page.\n+\n+## Support for Material UI\n+\n+When planning this major release, our goal was to support the last two major versions of Material UI. However, we faced a tough choice: continue supporting older versions (v5 and v6) or fully embrace the innovations of **Material UI v7**. With native ESM support, improved package management, and seamless integration with modern bundlers like Vite and webpack, v7 represents the future of Material UI. Supporting both wasn\u2019t feasible, so we chose to move forward.",
        "comment_created_at": "2025-03-28T18:14:26+00:00",
        "comment_author": "cherniavskii",
        "comment_body": "```suggestion\r\nWhen planning this major release, our goal was to support the last two major versions of Material UI. However, we faced a tough choice: continue supporting older versions (v5 and v6) or fully embrace the innovations of **Material UI v7**. With native ESM support, improved package management, and seamless integration with modern bundlers like Vite and webpack, v7 represents the future of Material UI.\r\n```\r\n\r\nThis statement is a bit misleading \u2013 it suggests it's not possible to use Material UI v5/v6.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2029055244",
    "pr_number": 45670,
    "pr_file": "docs/pages/blog/mui-x-v8.md",
    "created_at": "2025-04-04T15:41:33+00:00",
    "commented_code": "+---\n+title: Introducing MUI\u00a0X v8\n+description: Read all about the new release of the advanced components and other important steps forward with this new major.\n+date: 2025-03-31T08:00:00.000Z\n+authors: ['josefreitas']\n+tags: ['MUI X', 'Product']\n+manualCard: true\n+---\n+\n+<div style=\"max-width: 692px; width: 100%; height: 230px; overflow: hidden; margin-bottom: 16px;\">\n+  <a href=\"https://github.com/mui/mui-x/releases/tag/v8.0.0\">\n+    <img src=\"/static/blog/mui-x-v8/intro.png\" alt=\"MUI\u00a0X v8 - major stable release\" width=\"2400\" height=\"800\" style=\"width: 100%; height: 100%; object-fit: cover; object-position: center;\" />\n+  </a>\n+</div>\n+\n+We are excited to announce the stable release of [MUI\u00a0X\u00a0v8.0.0](https://github.com/mui/mui-x/releases/tag/v8.0.0)\u2014packed with many new features, native ESM support alongside Material UI v7, and an improved license management experience.\n+\n+:::warning\n+**MUI\u00a0X v8 natively supports ESM** along Material UI v7. But because of that, the support for Material UI v5 and v6 don't come out-of-the-box.\n+\n+Read more on: [Support for Material UI](#support-for-material-ui)\n+:::\n+\n+## Table of Contents\n+\n+- [Data Grid](#data-grid)\n+  - [Pivoting](#pivoting)[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+  - [AI Assistant \u2013 Featuring LLMs on the Data Grid](#ai-assistant-featuring-llms-on-the-data-grid)[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+  - [List View](#list-view)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Server-Side Aggregation and Lazy Loading](#server-side-aggregation-and-lazy-loading)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Data Source on the Community Plan](#data-source-on-the-community-plan)\n+  - [New Toolbar](#new-toolbar)\n+  - [Design Agnostic Core](#design-agnostic-core)\n+  - [New No Columns Overlay](#new-no-columns-overlay)\n+  - [Performance Improvements](#performance-improvements)\n+- [Date and Time Pickers](#date-and-time-pickers)\n+  - [Time Range Picker](#time-range-picker)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Auto Switch Strategy](#auto-switch-strategy)\n+  - [Clear `ownerState` for slots](#clear-ownerstate-for-slots)\n+  - [Accessible DOM Structure](#accessible-dom-structure)\n+  - [Keyboard Editing on Mobile Pickers](#keyboard-editing-on-mobile-pickers)\n+- [Tree View](#tree-view)\n+  - [Lazy loading child nodes](#lazy-loading-child-nodes) [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Automatic selection propagation](#automatic-selection-propagation)\n+  - [New Customization Hook](#new-customization-hook)\n+- [Charts](#charts)\n+  - [Funnel Charts](#funnel-charts)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Radar Charts](#radar-charts)\n+  - [Server-Side Rendering for Charts](#server-side-rendering-for-charts)\n+  - [Refined Design and Interaction](#refined-design-and-interaction)\n+  - [HTML Legend for Charts](#html-legend-for-charts)\n+  - [Charts Composition](#charts-composition)\n+- [Enhanced License Management and Telemetry](#enhanced-license-management-and-telemetry)\n+- [Priority Support \u2013 A New Support Service](#priority-support-a-new-support-service)\n+- [Support for Material UI](#support-for-material-ui)\n+- [Migration](#migration)\n+- [Long-Term Support](#long-term-support)\n+- [What's next](#whats-next)\n+- [How to Get Involved](#how-to-get-involved)\n+\n+## Data Grid\n+\n+### Pivoting [<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+\n+The wait is over! With pivoting, your users can easily restructure and summarize large datasets: group related data, calculate aggregates (such as sums, averages, and counts), and compare different data categories side by side. This flexibility enables faster insight discovery and more efficient data analysis.\n+\n+The feature is available out-of-the-box, but you can also create a pre-configured setup depending on your user requirements.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"1046\" height=\"720\" controls>\n+    <source src=\"/static/blog/mui-x-v8/pivoting.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>A common pivoting use case</figcaption>\n+</figure>\n+\n+Learn how to use pivoting [now](/x/react-data-grid/pivoting/).\n+\n+### Ask Your Table - Featuring AI Assistance on the Data Grid [<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+\n+After a period of test with users and pilot customers, we're excited to introduce our new AI Assistant for the Data Grid: [Ask Your Table](/x/react-data-grid/ai-assistant/).\n+\n+Now your users can interact with data using natural language queries and extract data insights quickly as ever.\n+\n+For example, if you\u2019re working with an Olympics medal dataset, you can simply ask, \u201cWho won the most gold medals this century?\u201d and the Data Grid will automatically apply the right filters, groupings, and aggregations to display your answer\u2014all that while keeping your dataset private.\n+\n+<figure>\n+  <img width=\"2084\" height=\"928\" alt=\"An example use case showcasing the answer to the question with the correct sorting, filters and grouping\" src=\"/static/blog/mui-x-v8/ask-your-table.png\" loading=\"lazy\">\n+  <figcaption>An answer from the Data Grid</figcaption>\n+</figure>\n+\n+**Feature's key Benefits:**\n+\n+- **Enhanced usability**: Simplify interactions with data by asking questions in plain language.\n+- **Unlock the full potential of the Data Grid**: Explore, combine, and discover powerful data analysis features often hidden behind menus, without the tedious hopping from one menu to another.\n+- **Data privacy:** No need to share your dataset\u2014the service model only requires your column definitions and a few data samples.\n+\n+Interested in bringing this feature to your users? [Contact us](mailto:sales@mui.com) to get access to your API Key!\n+\n+### List View [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+We\u2019ve promoted List View to stable, and over this major we\u2019re committed to enhancing this feature even further\u2014making it easier to deliver a robust Data Grid experience on small screens.\n+\n+<figure>\n+  <img width=\"512\" height=\"768\" alt=\"An example of a Data Grid's list view on a phone\" src=\"/static/blog/mui-x-v8/list-view.png\" loading=\"lazy\">\n+  <figcaption>An example of a Data Grid's list view on a phone</figcaption>\n+</figure>\n+\n+Learn more about [List View](/x/react-data-grid/list-view/).\n+\n+### Row Spanning\n+\n+Row spanning has also been promoted to stable, providing a reliable and flexible solution for merging cells across multiple rows. This enhancement makes it easier to create complex, multi-row layouts within your Data Grid, allowing you to present your data more effectively.\n+\n+Learn how to setup and use [Row spanning](/x/react-data-grid/row-spanning/).\n+\n+### Server-Side Aggregation and Lazy Loading [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+The Data Source now supports advanced features such as server-side aggregation, and on-demand data fetching for infinite scrolling, and lazy loading.\n+\n+Explore all your options when handling [Server-Side Data](/x/react-data-grid/server-side-data/).\n+\n+### Data Source on the Community Plan\n+\n+Great news\u2014the Data Source is now part of the community plan!\n+\n+We're unifying our approach to handling server-side data across all plans, creating a single, cohesive framework.\n+\n+Explore your options in our [Data Source Docs](/x/react-data-grid/data-source/).\n+\n+### New Toolbar\n+\n+The [redesigned toolbar](/x/react-data-grid/components/toolbar/) not only looks fantastic but also empowers developers one step further through an open composition of sub-components, allowing you to tailor the toolbar's layout precisely to your application's needs.\n+\n+<figure>\n+  <img width=\"100%\" alt=\"The new toolbar's design\" src=\"/static/blog/mui-x-v8/new-toolbar.png\" loading=\"lazy\">\n+  <figcaption>The new toolbar's design</figcaption>\n+</figure>\n+\n+This new developer experience, based on composition, may feel different from our previous approach\u2014but it sets a new standard. We\u2019ll soon extend this enhanced experience to other key subcomponents, such as the filter panel and columns management panel, ensuring a cohesive and powerful toolkit for advanced customization.\n+\n+Dive into our new docs section: [Sub-Components Composition](/x/react-data-grid/components/usage/)\n+\n+### Design Agnostic Core\n+\n+We understand how customization is important to you. So with the ultimate goal to be absolutely customizable, we're taking the first step to decouple Material UI from the Data Grid Core, opening the possibility to use the Data Grid with any design system\u2014and it\u2019s just the beginning. On the next steps, we'll work to provide the best experience for you to build a full featured data grid that fits all your design requirements.\n+\n+### No-Columns Overlay\n+\n+We\u2019ve added a no-columns overlay to serve as a clear fallback when the Data Grid has no columns to show.\n+\n+Learn more about overlays on [overlay's docs](/x/react-data-grid/overlays/).\n+\n+### Performance Improvements\n+\n+We\u2019ve made significant performance enhancements across the board\u2014from smoother scrolling and faster Excel export to improved mount/resize and aggregation performance.\n+\n+## Date and Time Pickers\n+\n+### Time Range Picker [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+It's finally here! The highly anticipated Time Range Picker component is designed for a straightforward and efficient experience, perfect for scheduling applications and detailed period inputs.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"477\" height=\"538\" controls>\n+    <source src=\"/static/blog/mui-x-v8/time-range-picker.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Time Range Picker example</figcaption>\n+</figure>\n+\n+Get started with the [Time Range Picker](/x/react-date-pickers/time-range-picker/).\n+\n+### New view-switching Strategy\n+\n+We\u2019ve removed the automatic view-switching in the date time and time range pickers to deliver a more consistent and user-friendly experience. Now, you can easily customize the input flow behavior to better suit your application's needs.\n+\n+You can learn about it on [docs](/x/react-date-pickers/time-range-picker/).\n+\n+### Clear `ownerState` for slots\n+\n+We've refined our slot system by clearing the `ownerState` before passing props to slot components. This ensures that only the necessary properties are forwarded\u2014resulting in a cleaner API, reduced prop clutter, and enhanced performance. By isolating internal state from presentation layers, you gain more predictable styling and greater control when customizing components.\n+\n+### Accessible DOM Structure\n+\n+The Accessible DOM Structure is now the default for our field components. The new structure ensures screen readers can correctly work with the fields\n+\n+### Keyboard Editing on Mobile Pickers\n+\n+We\u2019ve introduced keyboard editing support for mobile pickers. Users can now seamlessly input and adjust date and time values directly via on-screen keyboards, providing a more accessible and efficient experience.\n+\n+<figure>\n+  <img width=\"375\" alt=\"Mobile picker with keyboard input\" src=\"/static/blog/mui-x-v8/mobile-picker-keyboard.jpg\" loading=\"lazy\">\n+  <figcaption>Mobile picker with keyboard input</figcaption>\n+</figure>\n+\n+## Tree View\n+\n+### Lazy loading child nodes [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+We\u2019ve enhanced the Rich Tree View with a robust lazy loading mechanism for children. Now, child nodes are loaded on demand\u2014reducing initial load times and improving performance when working with extensive hierarchical data. This approach ensures a smoother user experience and also minimizes unnecessary network overhead.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"360\" controls>\n+    <source src=\"/static/blog/mui-x-v8/tree-view-lazy-loading.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Lazy loading of children on selection</figcaption>\n+</figure>\n+\n+Learn how to add [lazy loading](/x/react-tree-view/rich-tree-view/lazy-loading/) to your application's Tree View.\n+\n+### Performance improvements in re-rendering\n+\n+We\u2019ve optimized the Tree View to update only the components that need changes, rather than re-rendering all child nodes.\n+With the use of selectors to precisely target nodes for re-rendering, we\u2019ve achieved a significant performance boost.\n+In upcoming releases, we\u2019ll make another big step with the introduction of virtualization.\n+\n+### Automatic selection propagation\n+\n+The Rich Tree View now supports parent/child selection propagation. This means you can select a parent and automatically select all your children, and vice-versa depending on your requirements and configuration.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"250\" controls>\n+    <source alt=\"Automatic selection of children\"  src=\"/static/blog/mui-x-v8/tree-view-automatic-selection.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Automatic selection of children</figcaption>\n+</figure>\n+\n+```js\n+type TreeViewSelectionPropagation = {\n+  descendants?: boolean; // default: false\n+  parents?: boolean; // default: false\n+};\n+```\n+\n+You can learn about this and other selection features on [Selection docs](/x/react-tree-view/rich-tree-view/selection/).\n+\n+### New Customization Hook\n+\n+We\u2019ve officially transitioned to a new developer experience for customizing TreeItems for the Rich Tree View. With our new customization hook, you can freely compose your TreeItem while still leveraging all the out-of-the-box features of the RichTreeView. This provides unparalleled flexibility to tailor your tree components to your project\u2019s unique requirements.\n+\n+```js\n+const CustomTreeItemComponent = React.forwardRef(function CustomTreeItemComponent(\n+  { id, itemId, label, disabled, children }: TreeItemProps,\n+  ref: React.Ref<HTMLLIElement>,\n+) {\n+  const treeItemData = useTreeItem({ id, itemId, children, label, disabled, rootRef: ref });\n+\n+  return (\n+    <TreeItemProvider {...treeItemData.getContextProviderProps()}>\n+      <TreeItemRoot {...treeItemData.getRootProps()}>\n+        <TreeItemContent {...treeItemData.getContentProps()}>\n+          <TreeItemLabel {...treeItemData.getLabelProps()} />\n+        </TreeItemContent>\n+        {children && <TreeItemGroupTransition {...treeItemData.getGroupTransitionProps()} />}\n+      </TreeItemRoot>\n+    </TreeItemProvider>\n+  );\n+}\n+```\n+\n+Learn more this and other options on [Tree Item Customization docs](/x/react-tree-view/tree-item-customization/).\n+\n+## Charts\n+\n+### Funnel Charts [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+We have expanded our chart portfolio with the addition of Funnel Charts, providing a new way to visualize data conversions and drop-offs.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Funnel charts examples\" src=\"/static/blog/mui-x-v8/funnel-charts.png\" loading=\"lazy\">\n+  <figcaption>Funnel charts examples</figcaption>\n+</figure>\n+\n+### Radar Charts\n+\n+Similarly, our Radar Charts offer a dynamic way to display multivariate data, enhancing your users data analysis capabilities.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Radar charts examples\" src=\"/static/blog/mui-x-v8/radar-charts.png\" loading=\"lazy\">\n+  <figcaption>Radar charts examples</figcaption>\n+</figure>\n+\n+### Server-Side Rendering for Charts\n+\n+You can now leverage server-side rendering (SSR) for charts to improve initial load performance and SEO.\n+SSR is supported under two conditions:\n+\n+- **Dimensions:** You must provide explicit `width` and `height` props, as the SVG dimensions cannot be computed on the server.\n+- **Animations:** Animations must be disabled using the `skipAnimation` prop; otherwise, the chart may render in an empty state on the initial render.\n+\n+### Refined Design and Interaction\n+\n+Charts in MUI\u00a0X v8 have been improved with a focus on clarity and interactivity.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Charts redesigned - before/after\" src=\"/static/blog/mui-x-v8/charts-before-after.png\" loading=\"lazy\">\n+  <figcaption>Charts redesigned before/after</figcaption>\n+</figure>\n+\n+### HTML Legend for Charts\n+\n+We\u2019ve re-engineered the charts legend so that it\u2019s now rendered as a native HTML element. This change gives you more control over its styling and behavior, making it easier to integrate with your design system.\n+\n+### Charts Composition\n+\n+We've restructured our charts composition by dividing responsibilities between two dedicated components: `<ChartDataProvider />` and `<ChartsSurface />`. The `<ChartDataProvider />` now focuses solely on managing and processing your chart data, while `<ChartsSurface />` is dedicated to rendering the visual aspects. This clear separation enhances customization, improves performance, and offers a more flexible integration with your application.\n+\n+Learn more in our [Charts Composition Documentation](/x/react-charts/composition/).\n+\n+## Enhanced License Management and Telemetry\n+\n+Managing your license has never been easier. Our redesigned [account page](https://mui.com/store/account/) on the store allows you to view your license keys, update number of seats, renew, upgrade and more, with minimal effort.\n+\n+<figure>\n+  <img width=\"606\" height=\"434\" alt=\"One of the new screens in your accounts site\" src=\"/static/blog/mui-x-v8/accounts-page.png\" loading=\"lazy\">\n+  <figcaption>One of the new screens in your accounts site</figcaption>\n+</figure>\n+\n+In addition, we\u2019ve integrated telemetry into our system to continuously enhance your experience with our products. Using this same infrastructure, you'll soon be able to manage your license without changing your key\u2014thanks to server-side license validation.\n+\n+Telemetry is released as an opt-in feature. We recommend enabling it by adding the following code to your project, close to your license validation:\n+\n+```js\n+import { muiXTelemetrySettings } from '@mui/x-license';\n+\n+muiXTelemetrySettings.enableTelemetry();\n+```\n+\n+You can find more details in our [telemetry guide](/x/guides/telemetry/).\n+\n+## Priority Support \u2013 A New Support Service\n+\n+A few months ago, we launched Priority Support with a few customers, and now we\u2019re excited to invite more users to take advantage of this service.\n+\n+Priority Support offers fast, dedicated assistance with guaranteed response times, ensuring that technical issues on both MUI\u00a0X and MUI Core are addressed swiftly and efficiently.\n+\n+For full details on the benefits and service levels of Priority Support, please see our [Support SLA](https://mui.com/legal/technical-support-sla/).\n+\n+If you\u2019re interested in upgrading to Priority Support, don\u2019t hesitate to [contact our sales team](mailto:sales@mui.com) for more information or purchase it directly through your account page.\n+\n+## Support for Material UI\n+\n+When planning this major release, our goal was to support the last two major versions of Material UI. However, we faced a tough choice: continue supporting older versions (v5 and v6) out-of-the-box or fully embrace the innovations of **Material UI v7**. With improved ESM support and seamless integration with modern bundlers like Vite and webpack, v7 represents the future of Material UI. Supporting both out-of-the-box wasn\u2019t feasible, so we chose to move forward.",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2029055244",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45670,
        "pr_file": "docs/pages/blog/mui-x-v8.md",
        "discussion_id": "2029055244",
        "commented_code": "@@ -0,0 +1,380 @@\n+---\n+title: Introducing MUI\u00a0X v8\n+description: Read all about the new release of the advanced components and other important steps forward with this new major.\n+date: 2025-03-31T08:00:00.000Z\n+authors: ['josefreitas']\n+tags: ['MUI X', 'Product']\n+manualCard: true\n+---\n+\n+<div style=\"max-width: 692px; width: 100%; height: 230px; overflow: hidden; margin-bottom: 16px;\">\n+  <a href=\"https://github.com/mui/mui-x/releases/tag/v8.0.0\">\n+    <img src=\"/static/blog/mui-x-v8/intro.png\" alt=\"MUI\u00a0X v8 - major stable release\" width=\"2400\" height=\"800\" style=\"width: 100%; height: 100%; object-fit: cover; object-position: center;\" />\n+  </a>\n+</div>\n+\n+We are excited to announce the stable release of [MUI\u00a0X\u00a0v8.0.0](https://github.com/mui/mui-x/releases/tag/v8.0.0)\u2014packed with many new features, native ESM support alongside Material UI v7, and an improved license management experience.\n+\n+:::warning\n+**MUI\u00a0X v8 natively supports ESM** along Material UI v7. But because of that, the support for Material UI v5 and v6 don't come out-of-the-box.\n+\n+Read more on: [Support for Material UI](#support-for-material-ui)\n+:::\n+\n+## Table of Contents\n+\n+- [Data Grid](#data-grid)\n+  - [Pivoting](#pivoting)[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+  - [AI Assistant \u2013 Featuring LLMs on the Data Grid](#ai-assistant-featuring-llms-on-the-data-grid)[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+  - [List View](#list-view)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Server-Side Aggregation and Lazy Loading](#server-side-aggregation-and-lazy-loading)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Data Source on the Community Plan](#data-source-on-the-community-plan)\n+  - [New Toolbar](#new-toolbar)\n+  - [Design Agnostic Core](#design-agnostic-core)\n+  - [New No Columns Overlay](#new-no-columns-overlay)\n+  - [Performance Improvements](#performance-improvements)\n+- [Date and Time Pickers](#date-and-time-pickers)\n+  - [Time Range Picker](#time-range-picker)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Auto Switch Strategy](#auto-switch-strategy)\n+  - [Clear `ownerState` for slots](#clear-ownerstate-for-slots)\n+  - [Accessible DOM Structure](#accessible-dom-structure)\n+  - [Keyboard Editing on Mobile Pickers](#keyboard-editing-on-mobile-pickers)\n+- [Tree View](#tree-view)\n+  - [Lazy loading child nodes](#lazy-loading-child-nodes) [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Automatic selection propagation](#automatic-selection-propagation)\n+  - [New Customization Hook](#new-customization-hook)\n+- [Charts](#charts)\n+  - [Funnel Charts](#funnel-charts)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Radar Charts](#radar-charts)\n+  - [Server-Side Rendering for Charts](#server-side-rendering-for-charts)\n+  - [Refined Design and Interaction](#refined-design-and-interaction)\n+  - [HTML Legend for Charts](#html-legend-for-charts)\n+  - [Charts Composition](#charts-composition)\n+- [Enhanced License Management and Telemetry](#enhanced-license-management-and-telemetry)\n+- [Priority Support \u2013 A New Support Service](#priority-support-a-new-support-service)\n+- [Support for Material UI](#support-for-material-ui)\n+- [Migration](#migration)\n+- [Long-Term Support](#long-term-support)\n+- [What's next](#whats-next)\n+- [How to Get Involved](#how-to-get-involved)\n+\n+## Data Grid\n+\n+### Pivoting [<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+\n+The wait is over! With pivoting, your users can easily restructure and summarize large datasets: group related data, calculate aggregates (such as sums, averages, and counts), and compare different data categories side by side. This flexibility enables faster insight discovery and more efficient data analysis.\n+\n+The feature is available out-of-the-box, but you can also create a pre-configured setup depending on your user requirements.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"1046\" height=\"720\" controls>\n+    <source src=\"/static/blog/mui-x-v8/pivoting.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>A common pivoting use case</figcaption>\n+</figure>\n+\n+Learn how to use pivoting [now](/x/react-data-grid/pivoting/).\n+\n+### Ask Your Table - Featuring AI Assistance on the Data Grid [<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+\n+After a period of test with users and pilot customers, we're excited to introduce our new AI Assistant for the Data Grid: [Ask Your Table](/x/react-data-grid/ai-assistant/).\n+\n+Now your users can interact with data using natural language queries and extract data insights quickly as ever.\n+\n+For example, if you\u2019re working with an Olympics medal dataset, you can simply ask, \u201cWho won the most gold medals this century?\u201d and the Data Grid will automatically apply the right filters, groupings, and aggregations to display your answer\u2014all that while keeping your dataset private.\n+\n+<figure>\n+  <img width=\"2084\" height=\"928\" alt=\"An example use case showcasing the answer to the question with the correct sorting, filters and grouping\" src=\"/static/blog/mui-x-v8/ask-your-table.png\" loading=\"lazy\">\n+  <figcaption>An answer from the Data Grid</figcaption>\n+</figure>\n+\n+**Feature's key Benefits:**\n+\n+- **Enhanced usability**: Simplify interactions with data by asking questions in plain language.\n+- **Unlock the full potential of the Data Grid**: Explore, combine, and discover powerful data analysis features often hidden behind menus, without the tedious hopping from one menu to another.\n+- **Data privacy:** No need to share your dataset\u2014the service model only requires your column definitions and a few data samples.\n+\n+Interested in bringing this feature to your users? [Contact us](mailto:sales@mui.com) to get access to your API Key!\n+\n+### List View [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+We\u2019ve promoted List View to stable, and over this major we\u2019re committed to enhancing this feature even further\u2014making it easier to deliver a robust Data Grid experience on small screens.\n+\n+<figure>\n+  <img width=\"512\" height=\"768\" alt=\"An example of a Data Grid's list view on a phone\" src=\"/static/blog/mui-x-v8/list-view.png\" loading=\"lazy\">\n+  <figcaption>An example of a Data Grid's list view on a phone</figcaption>\n+</figure>\n+\n+Learn more about [List View](/x/react-data-grid/list-view/).\n+\n+### Row Spanning\n+\n+Row spanning has also been promoted to stable, providing a reliable and flexible solution for merging cells across multiple rows. This enhancement makes it easier to create complex, multi-row layouts within your Data Grid, allowing you to present your data more effectively.\n+\n+Learn how to setup and use [Row spanning](/x/react-data-grid/row-spanning/).\n+\n+### Server-Side Aggregation and Lazy Loading [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+The Data Source now supports advanced features such as server-side aggregation, and on-demand data fetching for infinite scrolling, and lazy loading.\n+\n+Explore all your options when handling [Server-Side Data](/x/react-data-grid/server-side-data/).\n+\n+### Data Source on the Community Plan\n+\n+Great news\u2014the Data Source is now part of the community plan!\n+\n+We're unifying our approach to handling server-side data across all plans, creating a single, cohesive framework.\n+\n+Explore your options in our [Data Source Docs](/x/react-data-grid/data-source/).\n+\n+### New Toolbar\n+\n+The [redesigned toolbar](/x/react-data-grid/components/toolbar/) not only looks fantastic but also empowers developers one step further through an open composition of sub-components, allowing you to tailor the toolbar's layout precisely to your application's needs.\n+\n+<figure>\n+  <img width=\"100%\" alt=\"The new toolbar's design\" src=\"/static/blog/mui-x-v8/new-toolbar.png\" loading=\"lazy\">\n+  <figcaption>The new toolbar's design</figcaption>\n+</figure>\n+\n+This new developer experience, based on composition, may feel different from our previous approach\u2014but it sets a new standard. We\u2019ll soon extend this enhanced experience to other key subcomponents, such as the filter panel and columns management panel, ensuring a cohesive and powerful toolkit for advanced customization.\n+\n+Dive into our new docs section: [Sub-Components Composition](/x/react-data-grid/components/usage/)\n+\n+### Design Agnostic Core\n+\n+We understand how customization is important to you. So with the ultimate goal to be absolutely customizable, we're taking the first step to decouple Material UI from the Data Grid Core, opening the possibility to use the Data Grid with any design system\u2014and it\u2019s just the beginning. On the next steps, we'll work to provide the best experience for you to build a full featured data grid that fits all your design requirements.\n+\n+### No-Columns Overlay\n+\n+We\u2019ve added a no-columns overlay to serve as a clear fallback when the Data Grid has no columns to show.\n+\n+Learn more about overlays on [overlay's docs](/x/react-data-grid/overlays/).\n+\n+### Performance Improvements\n+\n+We\u2019ve made significant performance enhancements across the board\u2014from smoother scrolling and faster Excel export to improved mount/resize and aggregation performance.\n+\n+## Date and Time Pickers\n+\n+### Time Range Picker [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+It's finally here! The highly anticipated Time Range Picker component is designed for a straightforward and efficient experience, perfect for scheduling applications and detailed period inputs.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"477\" height=\"538\" controls>\n+    <source src=\"/static/blog/mui-x-v8/time-range-picker.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Time Range Picker example</figcaption>\n+</figure>\n+\n+Get started with the [Time Range Picker](/x/react-date-pickers/time-range-picker/).\n+\n+### New view-switching Strategy\n+\n+We\u2019ve removed the automatic view-switching in the date time and time range pickers to deliver a more consistent and user-friendly experience. Now, you can easily customize the input flow behavior to better suit your application's needs.\n+\n+You can learn about it on [docs](/x/react-date-pickers/time-range-picker/).\n+\n+### Clear `ownerState` for slots\n+\n+We've refined our slot system by clearing the `ownerState` before passing props to slot components. This ensures that only the necessary properties are forwarded\u2014resulting in a cleaner API, reduced prop clutter, and enhanced performance. By isolating internal state from presentation layers, you gain more predictable styling and greater control when customizing components.\n+\n+### Accessible DOM Structure\n+\n+The Accessible DOM Structure is now the default for our field components. The new structure ensures screen readers can correctly work with the fields\n+\n+### Keyboard Editing on Mobile Pickers\n+\n+We\u2019ve introduced keyboard editing support for mobile pickers. Users can now seamlessly input and adjust date and time values directly via on-screen keyboards, providing a more accessible and efficient experience.\n+\n+<figure>\n+  <img width=\"375\" alt=\"Mobile picker with keyboard input\" src=\"/static/blog/mui-x-v8/mobile-picker-keyboard.jpg\" loading=\"lazy\">\n+  <figcaption>Mobile picker with keyboard input</figcaption>\n+</figure>\n+\n+## Tree View\n+\n+### Lazy loading child nodes [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+We\u2019ve enhanced the Rich Tree View with a robust lazy loading mechanism for children. Now, child nodes are loaded on demand\u2014reducing initial load times and improving performance when working with extensive hierarchical data. This approach ensures a smoother user experience and also minimizes unnecessary network overhead.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"360\" controls>\n+    <source src=\"/static/blog/mui-x-v8/tree-view-lazy-loading.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Lazy loading of children on selection</figcaption>\n+</figure>\n+\n+Learn how to add [lazy loading](/x/react-tree-view/rich-tree-view/lazy-loading/) to your application's Tree View.\n+\n+### Performance improvements in re-rendering\n+\n+We\u2019ve optimized the Tree View to update only the components that need changes, rather than re-rendering all child nodes.\n+With the use of selectors to precisely target nodes for re-rendering, we\u2019ve achieved a significant performance boost.\n+In upcoming releases, we\u2019ll make another big step with the introduction of virtualization.\n+\n+### Automatic selection propagation\n+\n+The Rich Tree View now supports parent/child selection propagation. This means you can select a parent and automatically select all your children, and vice-versa depending on your requirements and configuration.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"250\" controls>\n+    <source alt=\"Automatic selection of children\"  src=\"/static/blog/mui-x-v8/tree-view-automatic-selection.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Automatic selection of children</figcaption>\n+</figure>\n+\n+```js\n+type TreeViewSelectionPropagation = {\n+  descendants?: boolean; // default: false\n+  parents?: boolean; // default: false\n+};\n+```\n+\n+You can learn about this and other selection features on [Selection docs](/x/react-tree-view/rich-tree-view/selection/).\n+\n+### New Customization Hook\n+\n+We\u2019ve officially transitioned to a new developer experience for customizing TreeItems for the Rich Tree View. With our new customization hook, you can freely compose your TreeItem while still leveraging all the out-of-the-box features of the RichTreeView. This provides unparalleled flexibility to tailor your tree components to your project\u2019s unique requirements.\n+\n+```js\n+const CustomTreeItemComponent = React.forwardRef(function CustomTreeItemComponent(\n+  { id, itemId, label, disabled, children }: TreeItemProps,\n+  ref: React.Ref<HTMLLIElement>,\n+) {\n+  const treeItemData = useTreeItem({ id, itemId, children, label, disabled, rootRef: ref });\n+\n+  return (\n+    <TreeItemProvider {...treeItemData.getContextProviderProps()}>\n+      <TreeItemRoot {...treeItemData.getRootProps()}>\n+        <TreeItemContent {...treeItemData.getContentProps()}>\n+          <TreeItemLabel {...treeItemData.getLabelProps()} />\n+        </TreeItemContent>\n+        {children && <TreeItemGroupTransition {...treeItemData.getGroupTransitionProps()} />}\n+      </TreeItemRoot>\n+    </TreeItemProvider>\n+  );\n+}\n+```\n+\n+Learn more this and other options on [Tree Item Customization docs](/x/react-tree-view/tree-item-customization/).\n+\n+## Charts\n+\n+### Funnel Charts [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+We have expanded our chart portfolio with the addition of Funnel Charts, providing a new way to visualize data conversions and drop-offs.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Funnel charts examples\" src=\"/static/blog/mui-x-v8/funnel-charts.png\" loading=\"lazy\">\n+  <figcaption>Funnel charts examples</figcaption>\n+</figure>\n+\n+### Radar Charts\n+\n+Similarly, our Radar Charts offer a dynamic way to display multivariate data, enhancing your users data analysis capabilities.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Radar charts examples\" src=\"/static/blog/mui-x-v8/radar-charts.png\" loading=\"lazy\">\n+  <figcaption>Radar charts examples</figcaption>\n+</figure>\n+\n+### Server-Side Rendering for Charts\n+\n+You can now leverage server-side rendering (SSR) for charts to improve initial load performance and SEO.\n+SSR is supported under two conditions:\n+\n+- **Dimensions:** You must provide explicit `width` and `height` props, as the SVG dimensions cannot be computed on the server.\n+- **Animations:** Animations must be disabled using the `skipAnimation` prop; otherwise, the chart may render in an empty state on the initial render.\n+\n+### Refined Design and Interaction\n+\n+Charts in MUI\u00a0X v8 have been improved with a focus on clarity and interactivity.\n+\n+<figure>\n+  <img width=\"606\" height=\"300\" alt=\"Charts redesigned - before/after\" src=\"/static/blog/mui-x-v8/charts-before-after.png\" loading=\"lazy\">\n+  <figcaption>Charts redesigned before/after</figcaption>\n+</figure>\n+\n+### HTML Legend for Charts\n+\n+We\u2019ve re-engineered the charts legend so that it\u2019s now rendered as a native HTML element. This change gives you more control over its styling and behavior, making it easier to integrate with your design system.\n+\n+### Charts Composition\n+\n+We've restructured our charts composition by dividing responsibilities between two dedicated components: `<ChartDataProvider />` and `<ChartsSurface />`. The `<ChartDataProvider />` now focuses solely on managing and processing your chart data, while `<ChartsSurface />` is dedicated to rendering the visual aspects. This clear separation enhances customization, improves performance, and offers a more flexible integration with your application.\n+\n+Learn more in our [Charts Composition Documentation](/x/react-charts/composition/).\n+\n+## Enhanced License Management and Telemetry\n+\n+Managing your license has never been easier. Our redesigned [account page](https://mui.com/store/account/) on the store allows you to view your license keys, update number of seats, renew, upgrade and more, with minimal effort.\n+\n+<figure>\n+  <img width=\"606\" height=\"434\" alt=\"One of the new screens in your accounts site\" src=\"/static/blog/mui-x-v8/accounts-page.png\" loading=\"lazy\">\n+  <figcaption>One of the new screens in your accounts site</figcaption>\n+</figure>\n+\n+In addition, we\u2019ve integrated telemetry into our system to continuously enhance your experience with our products. Using this same infrastructure, you'll soon be able to manage your license without changing your key\u2014thanks to server-side license validation.\n+\n+Telemetry is released as an opt-in feature. We recommend enabling it by adding the following code to your project, close to your license validation:\n+\n+```js\n+import { muiXTelemetrySettings } from '@mui/x-license';\n+\n+muiXTelemetrySettings.enableTelemetry();\n+```\n+\n+You can find more details in our [telemetry guide](/x/guides/telemetry/).\n+\n+## Priority Support \u2013 A New Support Service\n+\n+A few months ago, we launched Priority Support with a few customers, and now we\u2019re excited to invite more users to take advantage of this service.\n+\n+Priority Support offers fast, dedicated assistance with guaranteed response times, ensuring that technical issues on both MUI\u00a0X and MUI Core are addressed swiftly and efficiently.\n+\n+For full details on the benefits and service levels of Priority Support, please see our [Support SLA](https://mui.com/legal/technical-support-sla/).\n+\n+If you\u2019re interested in upgrading to Priority Support, don\u2019t hesitate to [contact our sales team](mailto:sales@mui.com) for more information or purchase it directly through your account page.\n+\n+## Support for Material UI\n+\n+When planning this major release, our goal was to support the last two major versions of Material UI. However, we faced a tough choice: continue supporting older versions (v5 and v6) out-of-the-box or fully embrace the innovations of **Material UI v7**. With improved ESM support and seamless integration with modern bundlers like Vite and webpack, v7 represents the future of Material UI. Supporting both out-of-the-box wasn\u2019t feasible, so we chose to move forward.",
        "comment_created_at": "2025-04-04T15:41:33+00:00",
        "comment_author": "mapache-salvaje",
        "comment_body": "```suggestion\r\nWhen planning this major release, our goal was to support the last two major versions of Material UI. However, we faced a tough choice: continue supporting older versions (v5 and v6) out of the box, or fully embrace the step forward with Material UI v7. With improved ESM support and seamless integration with modern bundlers like Vite and webpack, v7 represents the future of Material UI. Supporting both simultaneously wasn\u2019t feasible, so we chose to move forward.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2020282038",
    "pr_number": 45762,
    "pr_file": "docs/data/material/migration/upgrade-to-v7/upgrade-to-v7.md",
    "created_at": "2025-03-30T23:28:17+00:00",
    "commented_code": "The package layout has been updated to use the Node.js exports field. This brings several changes:\n \n-Deep imports with more than one level are no longer allowed. For example:\n+Deep imports with more than one level are no longer working, at all (they were already considered private API). For example:",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2020282038",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45762,
        "pr_file": "docs/data/material/migration/upgrade-to-v7/upgrade-to-v7.md",
        "discussion_id": "2020282038",
        "commented_code": "@@ -91,11 +84,11 @@ The steps you need to take to migrate from Material\u00a0UI\u00a0v6 to v7 are described\n \n The package layout has been updated to use the Node.js exports field. This brings several changes:\n \n-Deep imports with more than one level are no longer allowed. For example:\n+Deep imports with more than one level are no longer working, at all (they were already considered private API). For example:",
        "comment_created_at": "2025-03-30T23:28:17+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "That was not true, it has never been allowed, per https://mui.com/material-ui/guides/minimizing-bundle-size/#option-one-use-path-imports.",
        "pr_file_module": null
      }
    ]
  }
]