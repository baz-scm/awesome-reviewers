[
  {
    "discussion_id": "1785798837",
    "pr_number": 37672,
    "pr_file": "packages/mui-material/src/Unstable_TrapFocus/FocusTrap.tsx",
    "created_at": "2024-10-03T08:02:16+00:00",
    "commented_code": "}\n \n     const doc = ownerDocument(rootRef.current);\n+    const openFocusElement = getTabbable(rootRef.current, true, true)?.[0] ?? rootRef.current;",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "1785798837",
        "repo_full_name": "mui/material-ui",
        "pr_number": 37672,
        "pr_file": "packages/mui-material/src/Unstable_TrapFocus/FocusTrap.tsx",
        "discussion_id": "1785798837",
        "commented_code": "@@ -164,23 +183,25 @@ function FocusTrap(props: FocusTrapProps): React.JSX.Element {\n     }\n \n     const doc = ownerDocument(rootRef.current);\n+    const openFocusElement = getTabbable(rootRef.current, true, true)?.[0] ?? rootRef.current;",
        "comment_created_at": "2024-10-03T08:02:16+00:00",
        "comment_author": "ZeeshanTamboli",
        "comment_body": "This is internal component so maybe we don't need to document in the types that `getTabbable` prop now accepts three parameters: https://github.com/mui/material-ui/blob/master/packages/mui-material/src/Unstable_TrapFocus/FocusTrap.types.ts#L13, but it would be better to add it.",
        "pr_file_module": null
      },
      {
        "comment_id": "1786104347",
        "repo_full_name": "mui/material-ui",
        "pr_number": 37672,
        "pr_file": "packages/mui-material/src/Unstable_TrapFocus/FocusTrap.tsx",
        "discussion_id": "1785798837",
        "commented_code": "@@ -164,23 +183,25 @@ function FocusTrap(props: FocusTrapProps): React.JSX.Element {\n     }\n \n     const doc = ownerDocument(rootRef.current);\n+    const openFocusElement = getTabbable(rootRef.current, true, true)?.[0] ?? rootRef.current;",
        "comment_created_at": "2024-10-03T12:04:29+00:00",
        "comment_author": "Greg-NetDuma",
        "comment_body": "added",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1596815802",
    "pr_number": 42096,
    "pr_file": "examples/material-ui-remix-ts/app/mui/MuiMeta.tsx",
    "created_at": "2024-05-10T14:19:32+00:00",
    "commented_code": "+import theme from \"./theme\";\n+",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "1596815802",
        "repo_full_name": "mui/material-ui",
        "pr_number": 42096,
        "pr_file": "examples/material-ui-remix-ts/app/mui/MuiMeta.tsx",
        "discussion_id": "1596815802",
        "commented_code": "@@ -0,0 +1,5 @@\n+import theme from \"./theme\";\n+",
        "comment_created_at": "2024-05-10T14:19:32+00:00",
        "comment_author": "cjoecker",
        "comment_body": "Why is an extra component necessary and not just adding `<meta ... />` into the layout component? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1600227739",
        "repo_full_name": "mui/material-ui",
        "pr_number": 42096,
        "pr_file": "examples/material-ui-remix-ts/app/mui/MuiMeta.tsx",
        "discussion_id": "1596815802",
        "commented_code": "@@ -0,0 +1,5 @@\n+import theme from \"./theme\";\n+",
        "comment_created_at": "2024-05-14T15:16:42+00:00",
        "comment_author": "mahmoudmoravej",
        "comment_body": "My main approach was to keep modifying the main files as minimum as possible. We will only leave `<MuiMeta/>` on the root.tsx (no layout page anymore) file and the logic will be handled inside that.\r\n \r\nSo, if we need to change the metadata, we only update this file and people using this example, can simply update their MuiMeta.tsx file without the headache of touching core files again. ",
        "pr_file_module": null
      }
    ]
  }
]