[
  {
    "discussion_id": "1124708057",
    "pr_number": 36389,
    "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
    "created_at": "2023-03-03T16:33:56+00:00",
    "commented_code": "}\n \n     firstFocus.current = false;\n-  };\n \n-  const handleInputMouseDown = (event) => {",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "1124708057",
        "repo_full_name": "mui/material-ui",
        "pr_number": 36389,
        "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
        "discussion_id": "1124708057",
        "commented_code": "@@ -1020,9 +1020,20 @@ export default function useAutocomplete(props) {\n     }\n \n     firstFocus.current = false;\n-  };\n \n-  const handleInputMouseDown = (event) => {",
        "comment_created_at": "2023-03-03T16:33:56+00:00",
        "comment_author": "mj12albert",
        "comment_body": "@taverasady Sorry I kind of missed the topic of this PR â€“ I think it would be better to explicitly check [`event.button`](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button) or [`event.buttons` ](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons) to detect a right click, or only accept primary/left button clicks\r\n\r\ne.g.\r\n\r\n```diff\r\ndiff --git a/packages/mui-base/src/useAutocomplete/useAutocomplete.js b/packages/mui-base/src/useAutocomplete/useAutocomplete.js\r\nindex cba6b18029..9710e4b8c7 100644\r\n--- a/packages/mui-base/src/useAutocomplete/useAutocomplete.js\r\n+++ b/packages/mui-base/src/useAutocomplete/useAutocomplete.js\r\n@@ -1023,7 +1023,7 @@ export default function useAutocomplete(props) {\r\n   };\r\n \r\n   const handleInputMouseDown = (event) => {\r\n-    if (inputValue === '' || !open) {\r\n+    if ((inputValue === '' || !open) && event.buttons === 1) {\r\n       handlePopupIndicator(event);\r\n     }\r\n   };\r\n\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1124794069",
        "repo_full_name": "mui/material-ui",
        "pr_number": 36389,
        "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
        "discussion_id": "1124708057",
        "commented_code": "@@ -1020,9 +1020,20 @@ export default function useAutocomplete(props) {\n     }\n \n     firstFocus.current = false;\n-  };\n \n-  const handleInputMouseDown = (event) => {",
        "comment_created_at": "2023-03-03T17:30:24+00:00",
        "comment_author": "taverasady",
        "comment_body": "@mj12albert  I agree, reverted changes and added the extra code on the if",
        "pr_file_module": null
      },
      {
        "comment_id": "1137606307",
        "repo_full_name": "mui/material-ui",
        "pr_number": 36389,
        "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
        "discussion_id": "1124708057",
        "commented_code": "@@ -1020,9 +1020,20 @@ export default function useAutocomplete(props) {\n     }\n \n     firstFocus.current = false;\n-  };\n \n-  const handleInputMouseDown = (event) => {",
        "comment_created_at": "2023-03-15T18:53:13+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "To check what should be the correct behavior with the middle click",
        "pr_file_module": null
      },
      {
        "comment_id": "1138353168",
        "repo_full_name": "mui/material-ui",
        "pr_number": 36389,
        "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
        "discussion_id": "1124708057",
        "commented_code": "@@ -1020,9 +1020,20 @@ export default function useAutocomplete(props) {\n     }\n \n     firstFocus.current = false;\n-  };\n \n-  const handleInputMouseDown = (event) => {",
        "comment_created_at": "2023-03-16T09:23:41+00:00",
        "comment_author": "michaldudak",
        "comment_body": "The native `<select>` does not open on the middle click (on Windows, at least). ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1141521909",
    "pr_number": 36389,
    "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
    "created_at": "2023-03-20T00:51:31+00:00",
    "commented_code": "};\n \n   const handleInputMouseDown = (event) => {\n-    if (inputValue === '' || !open) {\n+    if ((inputValue === '' || !open) && event.buttons === 0) {",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "1141521909",
        "repo_full_name": "mui/material-ui",
        "pr_number": 36389,
        "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
        "discussion_id": "1141521909",
        "commented_code": "@@ -1023,7 +1023,7 @@ export default function useAutocomplete(props) {\n   };\n \n   const handleInputMouseDown = (event) => {\n-    if (inputValue === '' || !open) {\n+    if ((inputValue === '' || !open) && event.buttons === 0) {",
        "comment_created_at": "2023-03-20T00:51:31+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "How about?\r\n\r\n```suggestion\r\n    if ((inputValue === '' || !open) && event.button === 0) {\r\n```\r\n\r\n<img width=\"797\" alt=\"Screenshot 2023-03-20 at 01 51 17\" src=\"https://user-images.githubusercontent.com/3165635/226222148-a910ba0c-8a90-4436-ace1-c7b1817bde73.png\">\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\r\n\r\n\r\nWe use `event.button` for the select and the slider: https://github.com/mui/material-ui/pull/22557#discussion_r486698221",
        "pr_file_module": null
      },
      {
        "comment_id": "1141550896",
        "repo_full_name": "mui/material-ui",
        "pr_number": 36389,
        "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
        "discussion_id": "1141521909",
        "commented_code": "@@ -1023,7 +1023,7 @@ export default function useAutocomplete(props) {\n   };\n \n   const handleInputMouseDown = (event) => {\n-    if (inputValue === '' || !open) {\n+    if ((inputValue === '' || !open) && event.buttons === 0) {",
        "comment_created_at": "2023-03-20T01:51:43+00:00",
        "comment_author": "taverasady",
        "comment_body": "Code has been updated @oliviertassinari  thanks for the feedback.",
        "pr_file_module": null
      },
      {
        "comment_id": "1144559740",
        "repo_full_name": "mui/material-ui",
        "pr_number": 36389,
        "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
        "discussion_id": "1141521909",
        "commented_code": "@@ -1023,7 +1023,7 @@ export default function useAutocomplete(props) {\n   };\n \n   const handleInputMouseDown = (event) => {\n-    if (inputValue === '' || !open) {\n+    if ((inputValue === '' || !open) && event.buttons === 0) {",
        "comment_created_at": "2023-03-22T10:22:11+00:00",
        "comment_author": "michaldudak",
        "comment_body": "@oliviertassinari what's wrong with `event.buttons`, though? They should both work equally fine in this case, no?",
        "pr_file_module": null
      },
      {
        "comment_id": "1145458110",
        "repo_full_name": "mui/material-ui",
        "pr_number": 36389,
        "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
        "discussion_id": "1141521909",
        "commented_code": "@@ -1023,7 +1023,7 @@ export default function useAutocomplete(props) {\n   };\n \n   const handleInputMouseDown = (event) => {\n-    if (inputValue === '' || !open) {\n+    if ((inputValue === '' || !open) && event.buttons === 0) {",
        "comment_created_at": "2023-03-22T22:08:22+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "@michaldudak In the case of `event.buttons`, I imagine that the logic would need to be `event.buttons === 1` while it's `event.button === 0` in our case. But overall, I think that the issue is:\r\n\r\n- button is active: which button was pressed on the mouse **to** trigger the event\r\n- buttons is passive: which buttons are pressed on the mouse **when** a mouse event is triggered",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1145460325",
    "pr_number": 36389,
    "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
    "created_at": "2023-03-22T22:11:39+00:00",
    "commented_code": "};\n \n   const handleInputMouseDown = (event) => {\n-    if (inputValue === '' || !open) {\n+    if ((inputValue === '' || !open) && event.button === 0) {",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "1145460325",
        "repo_full_name": "mui/material-ui",
        "pr_number": 36389,
        "pr_file": "packages/mui-base/src/useAutocomplete/useAutocomplete.js",
        "discussion_id": "1145460325",
        "commented_code": "@@ -1023,7 +1023,7 @@ export default function useAutocomplete(props) {\n   };\n \n   const handleInputMouseDown = (event) => {\n-    if (inputValue === '' || !open) {\n+    if ((inputValue === '' || !open) && event.button === 0) {",
        "comment_created_at": "2023-03-22T22:11:39+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "Maybe\r\n\r\n```suggestion\r\n    // Only handle event when the main button is pressed (left click).\r\n    if ((inputValue === '' || !open) && event.button === 0) {\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1959990790",
    "pr_number": 45345,
    "pr_file": "packages/mui-material/src/Tab/Tab.js",
    "created_at": "2025-02-18T15:31:23+00:00",
    "commented_code": "}\n   };\n \n+  const handleKeyDown = (event) => {\n+    if (event.altKey && (event.key === 'ArrowLeft' || event.key === 'ArrowRight')) {\n+      event.stopPropagation();\n+    }\n+  };\n+",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "1959990790",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45345,
        "pr_file": "packages/mui-material/src/Tab/Tab.js",
        "discussion_id": "1959990790",
        "commented_code": "@@ -254,6 +254,12 @@ const Tab = React.forwardRef(function Tab(inProps, ref) {\n     }\n   };\n \n+  const handleKeyDown = (event) => {\n+    if (event.altKey && (event.key === 'ArrowLeft' || event.key === 'ArrowRight')) {\n+      event.stopPropagation();\n+    }\n+  };\n+",
        "comment_created_at": "2025-02-18T15:31:23+00:00",
        "comment_author": "Dazbii",
        "comment_body": "I'm not sure this will properly intercept the execution, as I believe this may be happening during the bubbling step, which does not guarantee that it will be executed before the rest of the input capturing. In my workaround, I used an event listener with `capture: true` to do ensure it got ahead of the regular input handling",
        "pr_file_module": null
      }
    ]
  }
]