[
  {
    "discussion_id": "2161297164",
    "pr_number": 46406,
    "pr_file": "examples/material-ui-react-router-ts/vite.config.ts",
    "created_at": "2025-06-23T10:45:49+00:00",
    "commented_code": "+import { reactRouter } from '@react-router/dev/vite';\n+import { defineConfig } from 'vite';\n+import tsconfigPaths from 'vite-tsconfig-paths';\n+\n+export default defineConfig({\n+  plugins: [reactRouter(), tsconfigPaths()],\n+  ssr: {\n+    // Workaround for resolving dependencies in the server bundle\n+    // Without this, the React context will be different between direct import and transitive imports in development environment\n+    // For more information, see https://github.com/mui/material-ui/issues/45878#issuecomment-2987441663\n+    optimizeDeps: {\n+      include: ['@emotion/*', '@mui/*'],\n+    },\n+    noExternal: ['@emotion/*', '@mui/*'],",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2161297164",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46406,
        "pr_file": "examples/material-ui-react-router-ts/vite.config.ts",
        "discussion_id": "2161297164",
        "commented_code": "@@ -0,0 +1,16 @@\n+import { reactRouter } from '@react-router/dev/vite';\n+import { defineConfig } from 'vite';\n+import tsconfigPaths from 'vite-tsconfig-paths';\n+\n+export default defineConfig({\n+  plugins: [reactRouter(), tsconfigPaths()],\n+  ssr: {\n+    // Workaround for resolving dependencies in the server bundle\n+    // Without this, the React context will be different between direct import and transitive imports in development environment\n+    // For more information, see https://github.com/mui/material-ui/issues/45878#issuecomment-2987441663\n+    optimizeDeps: {\n+      include: ['@emotion/*', '@mui/*'],\n+    },\n+    noExternal: ['@emotion/*', '@mui/*'],",
        "comment_created_at": "2025-06-23T10:45:49+00:00",
        "comment_author": "Janpot",
        "comment_body": "\ud83d\ude15  This will require the user to add every library that uses emotion in this list?",
        "pr_file_module": null
      },
      {
        "comment_id": "2163465738",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46406,
        "pr_file": "examples/material-ui-react-router-ts/vite.config.ts",
        "discussion_id": "2161297164",
        "commented_code": "@@ -0,0 +1,16 @@\n+import { reactRouter } from '@react-router/dev/vite';\n+import { defineConfig } from 'vite';\n+import tsconfigPaths from 'vite-tsconfig-paths';\n+\n+export default defineConfig({\n+  plugins: [reactRouter(), tsconfigPaths()],\n+  ssr: {\n+    // Workaround for resolving dependencies in the server bundle\n+    // Without this, the React context will be different between direct import and transitive imports in development environment\n+    // For more information, see https://github.com/mui/material-ui/issues/45878#issuecomment-2987441663\n+    optimizeDeps: {\n+      include: ['@emotion/*', '@mui/*'],\n+    },\n+    noExternal: ['@emotion/*', '@mui/*'],",
        "comment_created_at": "2025-06-24T09:38:47+00:00",
        "comment_author": "siriwatknp",
        "comment_body": "I believe so.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2067561130",
    "pr_number": 46044,
    "pr_file": "docs/src/modules/sandbox/StackBlitz.ts",
    "created_at": "2025-04-29T23:07:54+00:00",
    "commented_code": "'index.html': CRA.getHtml({ ...demoData, main: `/src/index.${ext}` }),\n     'package.json': JSON.stringify(\n       {\n-        name: 'mui-demo',\n+        version: process.env.LIB_VERSION,",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2067561130",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46044,
        "pr_file": "docs/src/modules/sandbox/StackBlitz.ts",
        "discussion_id": "2067561130",
        "commented_code": "@@ -64,8 +65,9 @@ export default defineConfig({\n     'index.html': CRA.getHtml({ ...demoData, main: `/src/index.${ext}` }),\n     'package.json': JSON.stringify(\n       {\n-        name: 'mui-demo',\n+        version: process.env.LIB_VERSION,",
        "comment_created_at": "2025-04-29T23:07:54+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "Because we set \"latest\" for the dependencies version, and most people who create reproduction never pin the npm packages version, having the versions set at the root should help us reproduce 2+ years old bugs when we try to iterate on some logic.",
        "pr_file_module": null
      },
      {
        "comment_id": "2068071753",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46044,
        "pr_file": "docs/src/modules/sandbox/StackBlitz.ts",
        "discussion_id": "2067561130",
        "commented_code": "@@ -64,8 +65,9 @@ export default defineConfig({\n     'index.html': CRA.getHtml({ ...demoData, main: `/src/index.${ext}` }),\n     'package.json': JSON.stringify(\n       {\n-        name: 'mui-demo',\n+        version: process.env.LIB_VERSION,",
        "comment_created_at": "2025-04-30T07:41:07+00:00",
        "comment_author": "Janpot",
        "comment_body": "That's not very useful to recreate the installed environment. First, our packages follow independent versioning so it can't be captured in a single version number. And second, it won't capture transitive dependencies. i.e. you may fix the @mui/material version to 7.3.6, its @mui/utils dependency is defined with caret range, so it may as well install 7.56.12 of that package. Or the bug may have been in vite.\r\nThere will be a lockfile in the sandbox of the reproduction which should be sufficient to recreate and inspect the conditions of the bug.",
        "pr_file_module": null
      },
      {
        "comment_id": "2068971613",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46044,
        "pr_file": "docs/src/modules/sandbox/StackBlitz.ts",
        "discussion_id": "2067561130",
        "commented_code": "@@ -64,8 +65,9 @@ export default defineConfig({\n     'index.html': CRA.getHtml({ ...demoData, main: `/src/index.${ext}` }),\n     'package.json': JSON.stringify(\n       {\n-        name: 'mui-demo',\n+        version: process.env.LIB_VERSION,",
        "comment_created_at": "2025-04-30T15:50:42+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "> That's not very useful to recreate the installed environment\r\n\r\n@Janpot Oh yeah, agree, it only helps to know it's v4 and not v5 or v6 \ud83d\ude06. \r\n\r\n> There will be a lockfile in the sandbox of the reproduction which should be sufficient to recreate and inspect the conditions of the bug.\r\n\r\nIn the reproduction provided in https://github.com/mui/material-ui/issues, none seems to have this.\r\n\r\n(_A side note, they all seem to prefer CodeSandbox even when we push to StackBlitz by default in the instructions, maybe some SEO lag, or something else._)",
        "pr_file_module": null
      },
      {
        "comment_id": "2069307601",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46044,
        "pr_file": "docs/src/modules/sandbox/StackBlitz.ts",
        "discussion_id": "2067561130",
        "commented_code": "@@ -64,8 +65,9 @@ export default defineConfig({\n     'index.html': CRA.getHtml({ ...demoData, main: `/src/index.${ext}` }),\n     'package.json': JSON.stringify(\n       {\n-        name: 'mui-demo',\n+        version: process.env.LIB_VERSION,",
        "comment_created_at": "2025-04-30T19:19:51+00:00",
        "comment_author": "Janpot",
        "comment_body": "> it only helps to know it's v4 and not v5 or v6\r\n\r\nWouldn't it make more sense then to just replace \"latest\" with \"<current-major>\"? ",
        "pr_file_module": null
      },
      {
        "comment_id": "2069520486",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46044,
        "pr_file": "docs/src/modules/sandbox/StackBlitz.ts",
        "discussion_id": "2067561130",
        "commented_code": "@@ -64,8 +65,9 @@ export default defineConfig({\n     'index.html': CRA.getHtml({ ...demoData, main: `/src/index.${ext}` }),\n     'package.json': JSON.stringify(\n       {\n-        name: 'mui-demo',\n+        version: process.env.LIB_VERSION,",
        "comment_created_at": "2025-04-30T21:54:14+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "Yeah, I think it would be better, but this is more time-consuming to implement. I think we can narrow the scope  down, make the PR simpler. I'm reverting the version.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2069994276",
    "pr_number": 46051,
    "pr_file": "docs/next.config.ts",
    "created_at": "2025-05-01T08:38:47+00:00",
    "commented_code": "'notistack',",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2069994276",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46051,
        "pr_file": "docs/next.config.ts",
        "discussion_id": "2069994276",
        "commented_code": "@@ -63,12 +63,15 @@ export default withDocsInfra({\n             'notistack',",
        "comment_created_at": "2025-05-01T08:38:47+00:00",
        "comment_author": "Janpot",
        "comment_body": "\r\n\r\nI had claude write a little script to search all dependencies under docs/node_modules and to find any that depend on a workspace package. It came up with this:\r\n\r\n```tsx\r\n[\r\n  \"@mui-internal/api-docs-builder\",\r\n  \"@mui/base\",\r\n  \"@mui/docs\",\r\n  \"@mui/icons-material\",\r\n  \"@mui/internal-scripts\",\r\n  \"@mui/lab\",\r\n  \"@mui/material\",\r\n  \"@mui/system\",\r\n  \"@mui/utils\",\r\n  \"@mui/x-charts\",\r\n  \"@mui/x-data-grid\",\r\n  \"@mui/x-data-grid-generator\",\r\n  \"@mui/x-data-grid-premium\",\r\n  \"@mui/x-data-grid-pro\",\r\n  \"@mui/x-date-pickers\",\r\n  \"@mui/x-date-pickers-pro\",\r\n  \"@mui/x-license\",\r\n  \"@mui/x-tree-view\",\r\n  \"@toolpad/core\",\r\n  \"material-ui-popup-state\"\r\n]\r\n```\r\n\r\nIgnoring the internal ones for a second, interesting to see `notistack` isn't in there and `material-ui-popup-state` is. Verified and it seems to check out.\r\n\r\n```suggestion\r\n            'material-ui-popup-state',\r\n```\r\n\r\n_edit: We could even automate the initialization of `hasDependencyOnRepoPackages` if we want. The script seems fast enough._",
        "pr_file_module": null
      },
      {
        "comment_id": "2074351527",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46051,
        "pr_file": "docs/next.config.ts",
        "discussion_id": "2069994276",
        "commented_code": "@@ -63,12 +63,15 @@ export default withDocsInfra({\n             'notistack',",
        "comment_created_at": "2025-05-05T23:06:41+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "It looks like @jedwards1211 handled Material UI v7 support in https://github.com/jcoreio/material-ui-popup-state/issues/153, so we can make the change.\r\n\r\nIn the future, we might find surprises with breaking changes, and have to temporarily comment those lines.",
        "pr_file_module": null
      },
      {
        "comment_id": "2074491118",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46051,
        "pr_file": "docs/next.config.ts",
        "discussion_id": "2069994276",
        "commented_code": "@@ -63,12 +63,15 @@ export default withDocsInfra({\n             'notistack',",
        "comment_created_at": "2025-05-06T01:07:34+00:00",
        "comment_author": "jedwards1211",
        "comment_body": "Oh gosh, I forgot that there's examples using `material-ui-popup-state` in the docs, I'll try to submit updates to those more often",
        "pr_file_module": null
      },
      {
        "comment_id": "2075921866",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46051,
        "pr_file": "docs/next.config.ts",
        "discussion_id": "2069994276",
        "commented_code": "@@ -63,12 +63,15 @@ export default withDocsInfra({\n             'notistack',",
        "comment_created_at": "2025-05-06T17:07:38+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "@jedwards1211 was there major changes that requires to update those examples? For example https://deploy-preview-46051--material-ui.netlify.app/material-ui/react-menu/#material-ui-popup-state",
        "pr_file_module": null
      },
      {
        "comment_id": "2075972827",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46051,
        "pr_file": "docs/next.config.ts",
        "discussion_id": "2069994276",
        "commented_code": "@@ -63,12 +63,15 @@ export default withDocsInfra({\n             'notistack',",
        "comment_created_at": "2025-05-06T17:43:08+00:00",
        "comment_author": "jedwards1211",
        "comment_body": "I don't think so, here are the major version notes:\r\n\r\n# [2.0.0](https://github.com/jcoreio/material-ui-popup-state/compare/v1.9.3...v2.0.0) (2021-10-20)\r\n\r\n### Bug Fixes\r\n\r\n* upgrade to MUI v5 prod release ([db78c2e](https://github.com/jcoreio/material-ui-popup-state/commit/db78c2e3500919beb61e12c1c51cc7386ef77d46))\r\n\r\n\r\n### Features\r\n\r\n* support MUI v5 ([a2d13a5](https://github.com/jcoreio/material-ui-popup-state/commit/a2d13a5cc9591630332ae61e5186ff8867cb5ecb)), closes [#76](https://github.com/jcoreio/material-ui-popup-state/issues/76) [#77](https://github.com/jcoreio/material-ui-popup-state/issues/77)\r\n* **deps:** upgrade material-ui deps ([bbf59a0](https://github.com/jcoreio/material-ui-popup-state/commit/bbf59a0922a97e49922533fe338f71c0844b0448))\r\n\r\n\r\n### BREAKING CHANGES\r\n\r\n* MUI v4 is no longer supported\r\n\r\n# [3.0.0](https://github.com/jcoreio/material-ui-popup-state/compare/v2.0.1...v3.0.0) (2022-05-11)\r\n\r\n### Features\r\n\r\n* add conditional exports ([6533b92](https://github.com/jcoreio/material-ui-popup-state/commit/6533b922c99ed84b0f3b0d515367f186a4108c1a)), closes [#88](https://github.com/jcoreio/material-ui-popup-state/issues/88)\r\n\r\n\r\n### BREAKING CHANGES\r\n\r\n* package.json now uses conditional exports, so `/es/` imports are gone.\r\nNow you can `import { ... } from 'material-ui-popup-state/hooks'` instead of `'material-ui-popup-state/es/hooks'`.\r\n\r\n# [4.0.0](https://github.com/jcoreio/material-ui-popup-state/compare/v3.1.1...v4.0.0) (2022-07-02)\r\n\r\n### Bug Fixes\r\n\r\n* use contextmenu event location in bindMenu/bindPopover ([3c1230f](https://github.com/jcoreio/material-ui-popup-state/commit/3c1230fac270da9ba98b73dc3dabef8195da6802)), closes [#97](https://github.com/jcoreio/material-ui-popup-state/issues/97)\r\n\r\n\r\n### BREAKING CHANGES\r\n\r\n* The position of `<Menu {...bindMenu(popupState)}>`\r\nand `<Popover {...bindPopover(popupState)}>` has changed if you are\r\nusing `bindContextMenu`.  Before, they would be positioned to the\r\nevent target element (using `anchorEl`).  Now they will be positioned\r\nto the event location (using `anchorPosition`).\r\n\r\nTo restore the previous behavior, pass `anchorReference=\"anchorEl\"` after\r\n`bindMenu`/`bindPopover`.  For example, `<Menu {...bindMenu(popupState)} anchorReference=\"anchorEl\">`.\r\n\r\n# [5.0.0](https://github.com/jcoreio/material-ui-popup-state/compare/v4.1.0...v5.0.0) (2022-12-12)\r\n\r\n### Bug Fixes\r\n\r\n* make callbacks stable ([ae8c286](https://github.com/jcoreio/material-ui-popup-state/commit/ae8c2864678316e624a28423d0f73b1786945a30)), closes [#110](https://github.com/jcoreio/material-ui-popup-state/issues/110)\r\n* fix TS type defs ([ae8c286](https://github.com/jcoreio/material-ui-popup-state/commit/ae8c2864678316e624a28423d0f73b1786945a30)), closes [#100](https://github.com/jcoreio/material-ui-popup-state/issues/100)\r\n* fix `package.json` `exports` ([ae8c286](https://github.com/jcoreio/material-ui-popup-state/commit/ae8c2864678316e624a28423d0f73b1786945a30))\r\n\r\n### BREAKING CHANGES\r\n\r\n* drop support for React < 16.8.0\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2076068768",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46051,
        "pr_file": "docs/next.config.ts",
        "discussion_id": "2069994276",
        "commented_code": "@@ -63,12 +63,15 @@ export default withDocsInfra({\n             'notistack',",
        "comment_created_at": "2025-05-06T18:51:27+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "OK, thanks. So I think that we can assume that we are good.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2011477265",
    "pr_number": 45668,
    "pr_file": "docs/src/modules/sandbox/Dependencies.ts",
    "created_at": "2025-03-25T07:26:55+00:00",
    "commented_code": "commitRef === undefined ||\n       process.env.SOURCE_CODE_REPO !== 'https://github.com/mui/material-ui'\n     ) {\n-      // #default-branch-switch\n-      return 'latest';\n+      if (['joy', 'base'].includes(packageName)) {\n+        return 'latest';\n+      }\n+      // #npm-tag-reference\n+      return 'latest-v6';",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2011477265",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45668,
        "pr_file": "docs/src/modules/sandbox/Dependencies.ts",
        "discussion_id": "2011477265",
        "commented_code": "@@ -51,8 +51,11 @@ export default function SandboxDependencies(demo: Demo, options?: { commitRef?:\n       commitRef === undefined ||\n       process.env.SOURCE_CODE_REPO !== 'https://github.com/mui/material-ui'\n     ) {\n-      // #default-branch-switch\n-      return 'latest';\n+      if (['joy', 'base'].includes(packageName)) {\n+        return 'latest';\n+      }\n+      // #npm-tag-reference\n+      return 'latest-v6';",
        "comment_created_at": "2025-03-25T07:26:55+00:00",
        "comment_author": "mnajdova",
        "comment_body": "What's the motivation for using tag for the `latest-v6`? Can't we just use \"^6.0.0\"? I understand the tag is useful for switching between latest and next, but here I don't see the value.",
        "pr_file_module": null
      },
      {
        "comment_id": "2011545609",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45668,
        "pr_file": "docs/src/modules/sandbox/Dependencies.ts",
        "discussion_id": "2011477265",
        "commented_code": "@@ -51,8 +51,11 @@ export default function SandboxDependencies(demo: Demo, options?: { commitRef?:\n       commitRef === undefined ||\n       process.env.SOURCE_CODE_REPO !== 'https://github.com/mui/material-ui'\n     ) {\n-      // #default-branch-switch\n-      return 'latest';\n+      if (['joy', 'base'].includes(packageName)) {\n+        return 'latest';\n+      }\n+      // #npm-tag-reference\n+      return 'latest-v6';",
        "comment_created_at": "2025-03-25T08:17:30+00:00",
        "comment_author": "mnajdova",
        "comment_body": "I see we have it in the guide, but I honestly don't understand why \ud83e\udd37  - this is not blocking merging the PR, we can have a separate discussion.",
        "pr_file_module": null
      },
      {
        "comment_id": "2011913138",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45668,
        "pr_file": "docs/src/modules/sandbox/Dependencies.ts",
        "discussion_id": "2011477265",
        "commented_code": "@@ -51,8 +51,11 @@ export default function SandboxDependencies(demo: Demo, options?: { commitRef?:\n       commitRef === undefined ||\n       process.env.SOURCE_CODE_REPO !== 'https://github.com/mui/material-ui'\n     ) {\n-      // #default-branch-switch\n-      return 'latest';\n+      if (['joy', 'base'].includes(packageName)) {\n+        return 'latest';\n+      }\n+      // #npm-tag-reference\n+      return 'latest-v6';",
        "comment_created_at": "2025-03-25T11:42:06+00:00",
        "comment_author": "DiegoAndai",
        "comment_body": "This makes sense, let's use `^6.0.0`",
        "pr_file_module": null
      }
    ]
  }
]