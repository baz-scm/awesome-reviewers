[
  {
    "discussion_id": "1440296646",
    "pr_number": 40409,
    "pr_file": "packages/mui-material-nextjs/src/v13-pagesRouter/pagesRouterV13.tsx",
    "created_at": "2024-01-03T10:30:57+00:00",
    "commented_code": "// You can consider sharing the same Emotion cache between all the SSR requests to speed up performance.\n   // However, be aware that it can have global side effects.\n   const cache = options?.emotionCache ?? createEmotionCache();\n+  const { extractCriticalToChunks } = createEmotionServer(cache);",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "1440296646",
        "repo_full_name": "mui/material-ui",
        "pr_number": 40409,
        "pr_file": "packages/mui-material-nextjs/src/v13-pagesRouter/pagesRouterV13.tsx",
        "discussion_id": "1440296646",
        "commented_code": "@@ -113,6 +113,7 @@ export async function documentGetInitialProps(\n   // You can consider sharing the same Emotion cache between all the SSR requests to speed up performance.\n   // However, be aware that it can have global side effects.\n   const cache = options?.emotionCache ?? createEmotionCache();\n+  const { extractCriticalToChunks } = createEmotionServer(cache);",
        "comment_created_at": "2024-01-03T10:30:57+00:00",
        "comment_author": "siriwatknp",
        "comment_body": "If `createEmotionServer` is not called here there will be no `cache.compat = true` which ruins the server-side rendering.",
        "pr_file_module": null
      },
      {
        "comment_id": "1440305038",
        "repo_full_name": "mui/material-ui",
        "pr_number": 40409,
        "pr_file": "packages/mui-material-nextjs/src/v13-pagesRouter/pagesRouterV13.tsx",
        "discussion_id": "1440296646",
        "commented_code": "@@ -113,6 +113,7 @@ export async function documentGetInitialProps(\n   // You can consider sharing the same Emotion cache between all the SSR requests to speed up performance.\n   // However, be aware that it can have global side effects.\n   const cache = options?.emotionCache ?? createEmotionCache();\n+  const { extractCriticalToChunks } = createEmotionServer(cache);",
        "comment_created_at": "2024-01-03T10:40:03+00:00",
        "comment_author": "mnajdova",
        "comment_body": "Let's add a comment before this line. It could be easy to break again in the future otherwise.",
        "pr_file_module": null
      },
      {
        "comment_id": "1440375172",
        "repo_full_name": "mui/material-ui",
        "pr_number": 40409,
        "pr_file": "packages/mui-material-nextjs/src/v13-pagesRouter/pagesRouterV13.tsx",
        "discussion_id": "1440296646",
        "commented_code": "@@ -113,6 +113,7 @@ export async function documentGetInitialProps(\n   // You can consider sharing the same Emotion cache between all the SSR requests to speed up performance.\n   // However, be aware that it can have global side effects.\n   const cache = options?.emotionCache ?? createEmotionCache();\n+  const { extractCriticalToChunks } = createEmotionServer(cache);",
        "comment_created_at": "2024-01-03T12:01:57+00:00",
        "comment_author": "mnajdova",
        "comment_body": "```suggestion\r\n  // The createEmotionServer has to be called directly after the cache creation due to the side effect of cache.compat = true,\r\n  // otherwise the <style> tag will not come with the HTML string from the server.\r\n  const { extractCriticalToChunks } = createEmotionServer(cache);\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1441494951",
        "repo_full_name": "mui/material-ui",
        "pr_number": 40409,
        "pr_file": "packages/mui-material-nextjs/src/v13-pagesRouter/pagesRouterV13.tsx",
        "discussion_id": "1440296646",
        "commented_code": "@@ -113,6 +113,7 @@ export async function documentGetInitialProps(\n   // You can consider sharing the same Emotion cache between all the SSR requests to speed up performance.\n   // However, be aware that it can have global side effects.\n   const cache = options?.emotionCache ?? createEmotionCache();\n+  const { extractCriticalToChunks } = createEmotionServer(cache);",
        "comment_created_at": "2024-01-04T09:01:17+00:00",
        "comment_author": "siriwatknp",
        "comment_body": "In fact, it has to be\r\n```\r\notherwise the <style> tag will come with the HTML string from the server.\r\n```\r\n\r\nWe don't want the style tag to be with the HTML (it's the emotion's default behavior), instead we want all of the styles to be in the head tag.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2025426518",
    "pr_number": 45155,
    "pr_file": "examples/material-ui-nextjs-pages-router-ts/src/Link.tsx",
    "created_at": "2025-04-02T19:07:04+00:00",
    "commented_code": "shallow={shallow}\n         passHref",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2025426518",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45155,
        "pr_file": "examples/material-ui-nextjs-pages-router-ts/src/Link.tsx",
        "discussion_id": "2025426518",
        "commented_code": "@@ -39,10 +25,9 @@ export const NextLinkComposed = React.forwardRef<HTMLAnchorElement, NextLinkComp\n         shallow={shallow}\n         passHref",
        "comment_created_at": "2025-04-02T19:07:04+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "It looks like we can remove `passHref` now per https://nextjs.org/docs/app/api-reference/components/link and the source: https://github.com/vercel/next.js/blob/8e0acd90341d59f53447189f265c5c8f9b1e3c28/packages/next/src/client/link.tsx. \r\n\r\nI'm fixing this in https://github.com/mui/material-ui/pull/44871.",
        "pr_file_module": null
      }
    ]
  }
]