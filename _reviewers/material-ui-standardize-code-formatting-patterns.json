[
  {
    "discussion_id": "2073646883",
    "pr_number": 46087,
    "pr_file": "CHANGELOG.md",
    "created_at": "2025-05-05T15:14:30+00:00",
    "commented_code": "# [Versions](https://mui.com/versions/)\n \n+## 7.1.0\n+\n+<!-- generated comparing v7.0.2..master -->\n+\n+_May 5, 2025_\n+\n+A big thanks to the 21 contributors who made this release possible. Here are some highlights ✨:\n+\n+- 🎉 Material UI now works with **Tailwind CSS v4**! check out the [setup guide](https://mui.com/material-ui/integrations/tailwindcss/tailwindcss-v4/).\n+\n+### `@mui/material@7.1.0`\n+\n+- [InputBase] Text cursor jumps several lines up when inserting text fragment with new line at the end (#45246) @yermartee\n+- [OutlinedInput] Add missing `notchedOutline` slot (#45917) @siriwatknp\n+- [Snackbar] Skip default behavior when defaultMuiPrevent… (#45629) @sai6855\n+- [Avatar] Fix img slot types and add missing slots (#45483) @siriwatknp\n+- [material][Badge] Replace useSlotProps with useSlot hook (#45871) @sai6855\n+- [BottomNavigationAction] Add slots and slotProps (#45776) @sai6855\n+- [CardActionArea] Add slots and slotProps (#45866) @sai6855\n+- [useMediaQuery] Add warning and docs for using `useMediaQuery('print')` (#44790) @good-jinu\n+- Remove unnecessary clsx usages (#46084) @sai6855\n+- Corrected generic type definition in `SelectChangeEvent` (#45941) @SuyashShukla0007\n+- Fix theme object changes between renders (#45863) @siriwatknp\n+\n+### `@mui/material-nextjs@7.1.0`\n+\n+- Add option to enable CSS layers for pages router (#45596) @siriwatknp\n+- Do not wrap `@layer` order rules in App Router (#45864) @Nayeem-XTREME\n+\n+### `@mui/system@7.1.0`\n+\n+- [system] Fix `@mui/system` types organization (#45860) @Janpot\n+\n+### `@mui/styled-engine@7.1.0`\n+\n+- [styled-engine] Infer `ownerState` from props in `styled` (#46083) @siriwatknp\n+- [styled-engine] Fix style overrides variants type (#45478) @siriwatknp",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2073646883",
        "repo_full_name": "mui/material-ui",
        "pr_number": 46087,
        "pr_file": "CHANGELOG.md",
        "discussion_id": "2073646883",
        "commented_code": "@@ -1,5 +1,104 @@\n # [Versions](https://mui.com/versions/)\n \n+## 7.1.0\n+\n+<!-- generated comparing v7.0.2..master -->\n+\n+_May 5, 2025_\n+\n+A big thanks to the 21 contributors who made this release possible. Here are some highlights ✨:\n+\n+- 🎉 Material UI now works with **Tailwind CSS v4**! check out the [setup guide](https://mui.com/material-ui/integrations/tailwindcss/tailwindcss-v4/).\n+\n+### `@mui/material@7.1.0`\n+\n+- [InputBase] Text cursor jumps several lines up when inserting text fragment with new line at the end (#45246) @yermartee\n+- [OutlinedInput] Add missing `notchedOutline` slot (#45917) @siriwatknp\n+- [Snackbar] Skip default behavior when defaultMuiPrevent… (#45629) @sai6855\n+- [Avatar] Fix img slot types and add missing slots (#45483) @siriwatknp\n+- [material][Badge] Replace useSlotProps with useSlot hook (#45871) @sai6855\n+- [BottomNavigationAction] Add slots and slotProps (#45776) @sai6855\n+- [CardActionArea] Add slots and slotProps (#45866) @sai6855\n+- [useMediaQuery] Add warning and docs for using `useMediaQuery('print')` (#44790) @good-jinu\n+- Remove unnecessary clsx usages (#46084) @sai6855\n+- Corrected generic type definition in `SelectChangeEvent` (#45941) @SuyashShukla0007\n+- Fix theme object changes between renders (#45863) @siriwatknp\n+\n+### `@mui/material-nextjs@7.1.0`\n+\n+- Add option to enable CSS layers for pages router (#45596) @siriwatknp\n+- Do not wrap `@layer` order rules in App Router (#45864) @Nayeem-XTREME\n+\n+### `@mui/system@7.1.0`\n+\n+- [system] Fix `@mui/system` types organization (#45860) @Janpot\n+\n+### `@mui/styled-engine@7.1.0`\n+\n+- [styled-engine] Infer `ownerState` from props in `styled` (#46083) @siriwatknp\n+- [styled-engine] Fix style overrides variants type (#45478) @siriwatknp",
        "comment_created_at": "2025-05-05T15:14:30+00:00",
        "comment_author": "aarongarciah",
        "comment_body": "```suggestion\r\n- Infer `ownerState` from props in `styled` (#46083) @siriwatknp\r\n- Fix style overrides variants type (#45478) @siriwatknp\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2049171640",
    "pr_number": 45906,
    "pr_file": "docs/data/material/integrations/tailwindcss/tailwindcss-v4.md",
    "created_at": "2025-04-17T15:12:26+00:00",
    "commented_code": "+# Tailwind CSS v4 integration\n+\n+<p class=\"description\">Learn how to use Material UI with Tailwind CSS v4.</p>\n+\n+## Frameworks\n+\n+There are 2 steps to integrate Tailwind CSS v4 with Material UI:\n+\n+1. Configure the styles to generate with `@layer` directive.\n+2. Set up layer order to have `mui` comes before `utilities` layer so that Tailwind CSS classes can override Material UI styles.\n+\n+If you are using a framework, you can follow the instructions below to set up the integration.\n+\n+### Next.js App Router\n+\n+Follow the [App Router guide](/material-ui/integrations/nextjs/#app-router) and do the following steps:\n+\n+- enable the [CSS layer feature](/material-ui/integrations/nextjs/#using-other-styling-solutions) as shown below.\n+\n+```tsx title=\"src/app/layout.tsx\"\n+import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';\n+\n+export default function RootLayout() {\n+  return (\n+    <html lang=\"en\" suppressHydrationWarning>\n+      <body>\n+        <AppRouterCacheProvider options={{ enableCssLayer: true }}>\n+          {/* Your app */}\n+        </AppRouterCacheProvider>\n+      </body>\n+    </html>\n+  );\n+}\n+```\n+\n+- configure layer order in the Tailwind CSS file.\n+\n+```css title=\"src/app/globals.css\"\n+@layer theme, base, mui, components, utilities;\n+@import 'tailwindcss';\n+```\n+\n+### Next.js Pages Router\n+\n+Follow the [Pages Router guide](/material-ui/integrations/nextjs/#pages-router) and do the following steps:\n+\n+- enable the [CSS layer feature](/material-ui/integrations/nextjs/#configuration-2) as shown below.\n+\n+```tsx title=\"pages/_document.tsx\"\n+import {\n+  createCache,\n+  documentGetInitialProps,\n+} from '@mui/material-nextjs/v15-pagesRouter';\n+\n+// ...\n+\n+MyDocument.getInitialProps = async (ctx: DocumentContext) => {\n+  const finalProps = await documentGetInitialProps(ctx, {\n+    emotionCache: createCache({ enableCssLayer: true }),\n+  });\n+  return finalProps;\n+};\n+```\n+\n+- configure the layer order with `GlobalStyles` component (it must be the first child of `AppCacheProvider`).\n+\n+```tsx title=\"pages/_app.tsx\"\n+import { AppCacheProvider } from '@mui/material-nextjs/v15-pagesRouter';\n+import GlobalStyles from '@mui/material/GlobalStyles';\n+\n+export default function MyApp(props: AppProps) {\n+  const { Component, pageProps } = props;\n+  return (\n+    <AppCacheProvider {...props}>\n+      <GlobalStyles styles=\"@layer theme, base, mui, components, utilities;\" />\n+      {/* Your app */}\n+    </AppCacheProvider>\n+  );\n+}\n+```\n+\n+### Vite.js or any other SPA\n+\n+Open `src/main.tsx` and do the following steps:\n+\n+- set `enableCssLayer` prop to `StyledEngineProvider` component.",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2049171640",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45906,
        "pr_file": "docs/data/material/integrations/tailwindcss/tailwindcss-v4.md",
        "discussion_id": "2049171640",
        "commented_code": "@@ -0,0 +1,128 @@\n+# Tailwind CSS v4 integration\n+\n+<p class=\"description\">Learn how to use Material UI with Tailwind CSS v4.</p>\n+\n+## Frameworks\n+\n+There are 2 steps to integrate Tailwind CSS v4 with Material UI:\n+\n+1. Configure the styles to generate with `@layer` directive.\n+2. Set up layer order to have `mui` comes before `utilities` layer so that Tailwind CSS classes can override Material UI styles.\n+\n+If you are using a framework, you can follow the instructions below to set up the integration.\n+\n+### Next.js App Router\n+\n+Follow the [App Router guide](/material-ui/integrations/nextjs/#app-router) and do the following steps:\n+\n+- enable the [CSS layer feature](/material-ui/integrations/nextjs/#using-other-styling-solutions) as shown below.\n+\n+```tsx title=\"src/app/layout.tsx\"\n+import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';\n+\n+export default function RootLayout() {\n+  return (\n+    <html lang=\"en\" suppressHydrationWarning>\n+      <body>\n+        <AppRouterCacheProvider options={{ enableCssLayer: true }}>\n+          {/* Your app */}\n+        </AppRouterCacheProvider>\n+      </body>\n+    </html>\n+  );\n+}\n+```\n+\n+- configure layer order in the Tailwind CSS file.\n+\n+```css title=\"src/app/globals.css\"\n+@layer theme, base, mui, components, utilities;\n+@import 'tailwindcss';\n+```\n+\n+### Next.js Pages Router\n+\n+Follow the [Pages Router guide](/material-ui/integrations/nextjs/#pages-router) and do the following steps:\n+\n+- enable the [CSS layer feature](/material-ui/integrations/nextjs/#configuration-2) as shown below.\n+\n+```tsx title=\"pages/_document.tsx\"\n+import {\n+  createCache,\n+  documentGetInitialProps,\n+} from '@mui/material-nextjs/v15-pagesRouter';\n+\n+// ...\n+\n+MyDocument.getInitialProps = async (ctx: DocumentContext) => {\n+  const finalProps = await documentGetInitialProps(ctx, {\n+    emotionCache: createCache({ enableCssLayer: true }),\n+  });\n+  return finalProps;\n+};\n+```\n+\n+- configure the layer order with `GlobalStyles` component (it must be the first child of `AppCacheProvider`).\n+\n+```tsx title=\"pages/_app.tsx\"\n+import { AppCacheProvider } from '@mui/material-nextjs/v15-pagesRouter';\n+import GlobalStyles from '@mui/material/GlobalStyles';\n+\n+export default function MyApp(props: AppProps) {\n+  const { Component, pageProps } = props;\n+  return (\n+    <AppCacheProvider {...props}>\n+      <GlobalStyles styles=\"@layer theme, base, mui, components, utilities;\" />\n+      {/* Your app */}\n+    </AppCacheProvider>\n+  );\n+}\n+```\n+\n+### Vite.js or any other SPA\n+\n+Open `src/main.tsx` and do the following steps:\n+\n+- set `enableCssLayer` prop to `StyledEngineProvider` component.",
        "comment_created_at": "2025-04-17T15:12:26+00:00",
        "comment_author": "mapache-salvaje",
        "comment_body": "```suggestion\r\n1. Pass the `enableCssLayer` prop to the `StyledEngineProvider` component.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2028929590",
    "pr_number": 45670,
    "pr_file": "docs/pages/blog/mui-x-v8.md",
    "created_at": "2025-04-04T14:34:59+00:00",
    "commented_code": "+---\n+title: Introducing MUI X v8\n+description: Read all about the new release of the advanced components and other important steps forward with this new major.\n+date: 2025-03-31T08:00:00.000Z\n+authors: ['josefreitas']\n+tags: ['MUI X', 'Product']\n+manualCard: true\n+---\n+\n+<div style=\"max-width: 692px; width: 100%; height: 230px; overflow: hidden; margin-bottom: 16px;\">\n+  <a href=\"https://github.com/mui/mui-x/releases/tag/v8.0.0\">\n+    <img src=\"/static/blog/mui-x-v8/intro.png\" alt=\"MUI X v8 - major stable release\" width=\"2400\" height=\"800\" style=\"width: 100%; height: 100%; object-fit: cover; object-position: center;\" />\n+  </a>\n+</div>\n+\n+We are excited to announce the stable release of [MUI X v8.0.0](https://github.com/mui/mui-x/releases/tag/v8.0.0)—packed with many new features, native ESM support alongside Material UI v7, and an improved license management experience.\n+\n+:::warning\n+**MUI X v8 natively supports ESM** along Material UI v7. But because of that, the support for Material UI v5 and v6 don't come out-of-the-box.\n+\n+Read more on: [Support for Material UI](#support-for-material-ui)\n+:::\n+\n+## Table of Contents\n+\n+- [Data Grid](#data-grid)\n+  - [Pivoting](#pivoting)[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+  - [AI Assistant – Featuring LLMs on the Data Grid](#ai-assistant-featuring-llms-on-the-data-grid)[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+  - [List View](#list-view)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Server-Side Aggregation and Lazy Loading](#server-side-aggregation-and-lazy-loading)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Data Source on the Community Plan](#data-source-on-the-community-plan)\n+  - [New Toolbar](#new-toolbar)\n+  - [Design Agnostic Core](#design-agnostic-core)\n+  - [New No Columns Overlay](#new-no-columns-overlay)\n+  - [Performance Improvements](#performance-improvements)\n+- [Date and Time Pickers](#date-and-time-pickers)\n+  - [Time Range Picker](#time-range-picker)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Auto Switch Strategy](#auto-switch-strategy)\n+  - [Clear `ownerState` for slots](#clear-ownerstate-for-slots)\n+  - [Accessible DOM Structure](#accessible-dom-structure)\n+  - [Keyboard Editing on Mobile Pickers](#keyboard-editing-on-mobile-pickers)\n+- [Tree View](#tree-view)\n+  - [Lazy loading child nodes](#lazy-loading-child-nodes) [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Automatic selection propagation](#automatic-selection-propagation)\n+  - [New Customization Hook](#new-customization-hook)\n+- [Charts](#charts)\n+  - [Funnel Charts](#funnel-charts)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Radar Charts](#radar-charts)\n+  - [Server-Side Rendering for Charts](#server-side-rendering-for-charts)\n+  - [Refined Design and Interaction](#refined-design-and-interaction)\n+  - [HTML Legend for Charts](#html-legend-for-charts)\n+  - [Charts Composition](#charts-composition)\n+- [Enhanced License Management and Telemetry](#enhanced-license-management-and-telemetry)\n+- [Priority Support – A New Support Service](#priority-support-a-new-support-service)\n+- [Support for Material UI](#support-for-material-ui)\n+- [Migration](#migration)\n+- [Long-Term Support](#long-term-support)\n+- [What's next](#whats-next)\n+- [How to Get Involved](#how-to-get-involved)\n+\n+## Data Grid\n+\n+### Pivoting [<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+\n+The wait is over! With pivoting, your users can easily restructure and summarize large datasets: group related data, calculate aggregates (such as sums, averages, and counts), and compare different data categories side by side. This flexibility enables faster insight discovery and more efficient data analysis.\n+\n+The feature is available out-of-the-box, but you can also create a pre-configured setup depending on your user requirements.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"1046\" height=\"720\" controls>\n+    <source src=\"/static/blog/mui-x-v8/pivoting.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>A common pivoting use case</figcaption>\n+</figure>\n+\n+Learn how to use pivoting [now](/x/react-data-grid/pivoting/).\n+\n+### Ask Your Table - Featuring AI Assistance on the Data Grid [<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+\n+After a period of test with users and pilot customers, we're excited to introduce our new AI Assistant for the Data Grid: [Ask Your Table](/x/react-data-grid/ai-assistant/).\n+\n+Now your users can interact with data using natural language queries and extract data insights quickly as ever.\n+\n+For example, if you’re working with an Olympics medal dataset, you can simply ask, “Who won the most gold medals this century?” and the Data Grid will automatically apply the right filters, groupings, and aggregations to display your answer—all that while keeping your dataset private.\n+\n+<figure>\n+  <img width=\"2084\" height=\"928\" alt=\"An example use case showcasing the answer to the question with the correct sorting, filters and grouping\" src=\"/static/blog/mui-x-v8/ask-your-table.png\" loading=\"lazy\">\n+  <figcaption>An answer from the Data Grid</figcaption>\n+</figure>\n+\n+**Feature's key Benefits:**\n+\n+- **Enhanced usability**: Simplify interactions with data by asking questions in plain language.\n+- **Unlock the full potential of the Data Grid**: Explore, combine, and discover powerful data analysis features often hidden behind menus, without the tedious hopping from one menu to another.\n+- **Data privacy:** No need to share your dataset—the service model only requires your column definitions and a few data samples.\n+\n+Interested in bringing this feature to your users? [Contact us](mailto:sales@mui.com) to get access to your API Key!\n+\n+### List View [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+We’ve promoted List View to stable, and over this major we’re committed to enhancing this feature even further—making it easier to deliver a robust Data Grid experience on small screens.\n+\n+<figure>\n+  <img width=\"512\" height=\"768\" alt=\"An example of a Data Grid's list view on a phone\" src=\"/static/blog/mui-x-v8/list-view.png\" loading=\"lazy\">\n+  <figcaption>An example of a Data Grid's list view on a phone</figcaption>\n+</figure>\n+\n+Learn more about [List View](/x/react-data-grid/list-view/).\n+\n+### Row Spanning\n+\n+Row spanning has also been promoted to stable, providing a reliable and flexible solution for merging cells across multiple rows. This enhancement makes it easier to create complex, multi-row layouts within your Data Grid, allowing you to present your data more effectively.\n+\n+Learn how to setup and use [Row spanning](/x/react-data-grid/row-spanning/).\n+\n+### Server-Side Aggregation and Lazy Loading [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+The Data Source now supports advanced features such as server-side aggregation, and on-demand data fetching for infinite scrolling, and lazy loading.\n+\n+Explore all your options when handling [Server-Side Data](/x/react-data-grid/server-side-data/).\n+\n+### Data Source on the Community Plan\n+\n+Great news—the Data Source is now part of the community plan!\n+\n+We're unifying our approach to handling server-side data across all plans, creating a single, cohesive framework.\n+\n+Explore your options in our [Data Source Docs](/x/react-data-grid/data-source/).\n+\n+### New Toolbar\n+\n+The [redesigned toolbar](/x/react-data-grid/components/toolbar/) not only looks fantastic but also empowers developers one step further through an open composition of sub-components, allowing you to tailor the toolbar's layout precisely to your application's needs.\n+\n+<figure>\n+  <img width=\"100%\" alt=\"The new toolbar's design\" src=\"/static/blog/mui-x-v8/new-toolbar.png\" loading=\"lazy\">\n+  <figcaption>The new toolbar's design</figcaption>\n+</figure>\n+\n+This new developer experience, based on composition, may feel different from our previous approach—but it sets a new standard. We’ll soon extend this enhanced experience to other key subcomponents, such as the filter panel and columns management panel, ensuring a cohesive and powerful toolkit for advanced customization.\n+\n+Dive into our new docs section: [Sub-Components Composition](/x/react-data-grid/components/usage/)\n+\n+### Design Agnostic Core\n+\n+We understand how customization is important to you. So with the ultimate goal to be absolutely customizable, we're taking the first step to decouple Material UI from the Data Grid Core, opening the possibility to use the Data Grid with any design system—and it’s just the beginning. On the next steps, we'll work to provide the best experience for you to build a full featured data grid that fits all your design requirements.\n+\n+### No-Columns Overlay\n+\n+We’ve added a no-columns overlay to serve as a clear fallback when the Data Grid has no columns to show.\n+\n+Learn more about overlays on [overlay's docs](/x/react-data-grid/overlays/).\n+\n+### Performance Improvements\n+\n+We’ve made significant performance enhancements across the board—from smoother scrolling and faster Excel export to improved mount/resize and aggregation performance.\n+\n+## Date and Time Pickers\n+\n+### Time Range Picker [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+It's finally here! The highly anticipated Time Range Picker component is designed for a straightforward and efficient experience, perfect for scheduling applications and detailed period inputs.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"477\" height=\"538\" controls>\n+    <source src=\"/static/blog/mui-x-v8/time-range-picker.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Time Range Picker example</figcaption>\n+</figure>\n+\n+Get started with the [Time Range Picker](/x/react-date-pickers/time-range-picker/).\n+\n+### New view-switching Strategy\n+\n+We’ve removed the automatic view-switching in the date time and time range pickers to deliver a more consistent and user-friendly experience. Now, you can easily customize the input flow behavior to better suit your application's needs.",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2028929590",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45670,
        "pr_file": "docs/pages/blog/mui-x-v8.md",
        "discussion_id": "2028929590",
        "commented_code": "@@ -0,0 +1,380 @@\n+---\n+title: Introducing MUI X v8\n+description: Read all about the new release of the advanced components and other important steps forward with this new major.\n+date: 2025-03-31T08:00:00.000Z\n+authors: ['josefreitas']\n+tags: ['MUI X', 'Product']\n+manualCard: true\n+---\n+\n+<div style=\"max-width: 692px; width: 100%; height: 230px; overflow: hidden; margin-bottom: 16px;\">\n+  <a href=\"https://github.com/mui/mui-x/releases/tag/v8.0.0\">\n+    <img src=\"/static/blog/mui-x-v8/intro.png\" alt=\"MUI X v8 - major stable release\" width=\"2400\" height=\"800\" style=\"width: 100%; height: 100%; object-fit: cover; object-position: center;\" />\n+  </a>\n+</div>\n+\n+We are excited to announce the stable release of [MUI X v8.0.0](https://github.com/mui/mui-x/releases/tag/v8.0.0)—packed with many new features, native ESM support alongside Material UI v7, and an improved license management experience.\n+\n+:::warning\n+**MUI X v8 natively supports ESM** along Material UI v7. But because of that, the support for Material UI v5 and v6 don't come out-of-the-box.\n+\n+Read more on: [Support for Material UI](#support-for-material-ui)\n+:::\n+\n+## Table of Contents\n+\n+- [Data Grid](#data-grid)\n+  - [Pivoting](#pivoting)[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+  - [AI Assistant – Featuring LLMs on the Data Grid](#ai-assistant-featuring-llms-on-the-data-grid)[<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+  - [List View](#list-view)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Server-Side Aggregation and Lazy Loading](#server-side-aggregation-and-lazy-loading)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Data Source on the Community Plan](#data-source-on-the-community-plan)\n+  - [New Toolbar](#new-toolbar)\n+  - [Design Agnostic Core](#design-agnostic-core)\n+  - [New No Columns Overlay](#new-no-columns-overlay)\n+  - [Performance Improvements](#performance-improvements)\n+- [Date and Time Pickers](#date-and-time-pickers)\n+  - [Time Range Picker](#time-range-picker)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Auto Switch Strategy](#auto-switch-strategy)\n+  - [Clear `ownerState` for slots](#clear-ownerstate-for-slots)\n+  - [Accessible DOM Structure](#accessible-dom-structure)\n+  - [Keyboard Editing on Mobile Pickers](#keyboard-editing-on-mobile-pickers)\n+- [Tree View](#tree-view)\n+  - [Lazy loading child nodes](#lazy-loading-child-nodes) [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Automatic selection propagation](#automatic-selection-propagation)\n+  - [New Customization Hook](#new-customization-hook)\n+- [Charts](#charts)\n+  - [Funnel Charts](#funnel-charts)[<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+  - [Radar Charts](#radar-charts)\n+  - [Server-Side Rendering for Charts](#server-side-rendering-for-charts)\n+  - [Refined Design and Interaction](#refined-design-and-interaction)\n+  - [HTML Legend for Charts](#html-legend-for-charts)\n+  - [Charts Composition](#charts-composition)\n+- [Enhanced License Management and Telemetry](#enhanced-license-management-and-telemetry)\n+- [Priority Support – A New Support Service](#priority-support-a-new-support-service)\n+- [Support for Material UI](#support-for-material-ui)\n+- [Migration](#migration)\n+- [Long-Term Support](#long-term-support)\n+- [What's next](#whats-next)\n+- [How to Get Involved](#how-to-get-involved)\n+\n+## Data Grid\n+\n+### Pivoting [<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+\n+The wait is over! With pivoting, your users can easily restructure and summarize large datasets: group related data, calculate aggregates (such as sums, averages, and counts), and compare different data categories side by side. This flexibility enables faster insight discovery and more efficient data analysis.\n+\n+The feature is available out-of-the-box, but you can also create a pre-configured setup depending on your user requirements.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"1046\" height=\"720\" controls>\n+    <source src=\"/static/blog/mui-x-v8/pivoting.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>A common pivoting use case</figcaption>\n+</figure>\n+\n+Learn how to use pivoting [now](/x/react-data-grid/pivoting/).\n+\n+### Ask Your Table - Featuring AI Assistance on the Data Grid [<span class=\"plan-premium\"></span>](/x/introduction/licensing/#premium-plan 'Premium plan')\n+\n+After a period of test with users and pilot customers, we're excited to introduce our new AI Assistant for the Data Grid: [Ask Your Table](/x/react-data-grid/ai-assistant/).\n+\n+Now your users can interact with data using natural language queries and extract data insights quickly as ever.\n+\n+For example, if you’re working with an Olympics medal dataset, you can simply ask, “Who won the most gold medals this century?” and the Data Grid will automatically apply the right filters, groupings, and aggregations to display your answer—all that while keeping your dataset private.\n+\n+<figure>\n+  <img width=\"2084\" height=\"928\" alt=\"An example use case showcasing the answer to the question with the correct sorting, filters and grouping\" src=\"/static/blog/mui-x-v8/ask-your-table.png\" loading=\"lazy\">\n+  <figcaption>An answer from the Data Grid</figcaption>\n+</figure>\n+\n+**Feature's key Benefits:**\n+\n+- **Enhanced usability**: Simplify interactions with data by asking questions in plain language.\n+- **Unlock the full potential of the Data Grid**: Explore, combine, and discover powerful data analysis features often hidden behind menus, without the tedious hopping from one menu to another.\n+- **Data privacy:** No need to share your dataset—the service model only requires your column definitions and a few data samples.\n+\n+Interested in bringing this feature to your users? [Contact us](mailto:sales@mui.com) to get access to your API Key!\n+\n+### List View [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+We’ve promoted List View to stable, and over this major we’re committed to enhancing this feature even further—making it easier to deliver a robust Data Grid experience on small screens.\n+\n+<figure>\n+  <img width=\"512\" height=\"768\" alt=\"An example of a Data Grid's list view on a phone\" src=\"/static/blog/mui-x-v8/list-view.png\" loading=\"lazy\">\n+  <figcaption>An example of a Data Grid's list view on a phone</figcaption>\n+</figure>\n+\n+Learn more about [List View](/x/react-data-grid/list-view/).\n+\n+### Row Spanning\n+\n+Row spanning has also been promoted to stable, providing a reliable and flexible solution for merging cells across multiple rows. This enhancement makes it easier to create complex, multi-row layouts within your Data Grid, allowing you to present your data more effectively.\n+\n+Learn how to setup and use [Row spanning](/x/react-data-grid/row-spanning/).\n+\n+### Server-Side Aggregation and Lazy Loading [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+The Data Source now supports advanced features such as server-side aggregation, and on-demand data fetching for infinite scrolling, and lazy loading.\n+\n+Explore all your options when handling [Server-Side Data](/x/react-data-grid/server-side-data/).\n+\n+### Data Source on the Community Plan\n+\n+Great news—the Data Source is now part of the community plan!\n+\n+We're unifying our approach to handling server-side data across all plans, creating a single, cohesive framework.\n+\n+Explore your options in our [Data Source Docs](/x/react-data-grid/data-source/).\n+\n+### New Toolbar\n+\n+The [redesigned toolbar](/x/react-data-grid/components/toolbar/) not only looks fantastic but also empowers developers one step further through an open composition of sub-components, allowing you to tailor the toolbar's layout precisely to your application's needs.\n+\n+<figure>\n+  <img width=\"100%\" alt=\"The new toolbar's design\" src=\"/static/blog/mui-x-v8/new-toolbar.png\" loading=\"lazy\">\n+  <figcaption>The new toolbar's design</figcaption>\n+</figure>\n+\n+This new developer experience, based on composition, may feel different from our previous approach—but it sets a new standard. We’ll soon extend this enhanced experience to other key subcomponents, such as the filter panel and columns management panel, ensuring a cohesive and powerful toolkit for advanced customization.\n+\n+Dive into our new docs section: [Sub-Components Composition](/x/react-data-grid/components/usage/)\n+\n+### Design Agnostic Core\n+\n+We understand how customization is important to you. So with the ultimate goal to be absolutely customizable, we're taking the first step to decouple Material UI from the Data Grid Core, opening the possibility to use the Data Grid with any design system—and it’s just the beginning. On the next steps, we'll work to provide the best experience for you to build a full featured data grid that fits all your design requirements.\n+\n+### No-Columns Overlay\n+\n+We’ve added a no-columns overlay to serve as a clear fallback when the Data Grid has no columns to show.\n+\n+Learn more about overlays on [overlay's docs](/x/react-data-grid/overlays/).\n+\n+### Performance Improvements\n+\n+We’ve made significant performance enhancements across the board—from smoother scrolling and faster Excel export to improved mount/resize and aggregation performance.\n+\n+## Date and Time Pickers\n+\n+### Time Range Picker [<span class=\"plan-pro\"></span>](/x/introduction/licensing/#pro-plan 'Pro plan')\n+\n+It's finally here! The highly anticipated Time Range Picker component is designed for a straightforward and efficient experience, perfect for scheduling applications and detailed period inputs.\n+\n+<figure>\n+  <video autoplay muted loop playsinline width=\"477\" height=\"538\" controls>\n+    <source src=\"/static/blog/mui-x-v8/time-range-picker.mp4\" type=\"video/mp4\">\n+  </video>\n+  <figcaption>Time Range Picker example</figcaption>\n+</figure>\n+\n+Get started with the [Time Range Picker](/x/react-date-pickers/time-range-picker/).\n+\n+### New view-switching Strategy\n+\n+We’ve removed the automatic view-switching in the date time and time range pickers to deliver a more consistent and user-friendly experience. Now, you can easily customize the input flow behavior to better suit your application's needs.",
        "comment_created_at": "2025-04-04T14:34:59+00:00",
        "comment_author": "alelthomas",
        "comment_body": "```suggestion\r\nWe’ve removed the automatic view-switching in the Date Time and Time Range Pickers to deliver a more consistent and user-friendly experience. \r\n\r\nNow, you can easily customize the input flow behavior to better suit your application's needs.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2008375290",
    "pr_number": 45624,
    "pr_file": "docs/data/material/migration/upgrade-to-v7/upgrade-to-v7.md",
    "created_at": "2025-03-21T21:47:39+00:00",
    "commented_code": "<p class=\"description\">This guide explains how to upgrade from Material UI v6 to v7.</p>\n \n-## Start using the alpha release\n+## Why you should upgrade to Material UI v7\n \n-In the `package.json` file, change the package version from `latest` to `next`.\n+### Improved ESM support\n \n-```diff title=\"package.json\"\n--\"@mui/material\": \"latest\",\n-+\"@mui/material\": \"next\",\n-```\n+Our package layout has been updated, we now unambiguously support both valid ESM and commonjs through the `exports` field in `package.json`.\n+You can read more about this in the [Node.js documentation](https://nodejs.org/api/packages.html#packages_exports).\n+\n+This update fixes several issues with popular bundlers like Vite and webpack, and makes it possible to load our packages from ESM modules under Node.js.\n+\n+### Quality-of-life improvements\n+\n+Material UI v7 features other quality-of-life improvements, including:\n+\n+- Standardization of the slot pattern accross all components",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2008375290",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45624,
        "pr_file": "docs/data/material/migration/upgrade-to-v7/upgrade-to-v7.md",
        "discussion_id": "2008375290",
        "commented_code": "@@ -2,17 +2,44 @@\n \n <p class=\"description\">This guide explains how to upgrade from Material UI v6 to v7.</p>\n \n-## Start using the alpha release\n+## Why you should upgrade to Material UI v7\n \n-In the `package.json` file, change the package version from `latest` to `next`.\n+### Improved ESM support\n \n-```diff title=\"package.json\"\n--\"@mui/material\": \"latest\",\n-+\"@mui/material\": \"next\",\n-```\n+Our package layout has been updated, we now unambiguously support both valid ESM and commonjs through the `exports` field in `package.json`.\n+You can read more about this in the [Node.js documentation](https://nodejs.org/api/packages.html#packages_exports).\n+\n+This update fixes several issues with popular bundlers like Vite and webpack, and makes it possible to load our packages from ESM modules under Node.js.\n+\n+### Quality-of-life improvements\n+\n+Material UI v7 features other quality-of-life improvements, including:\n+\n+- Standardization of the slot pattern accross all components",
        "comment_created_at": "2025-03-21T21:47:39+00:00",
        "comment_author": "mapache-salvaje",
        "comment_body": "```suggestion\r\n- Standardization of the slot pattern across all components\r\n```",
        "pr_file_module": null
      }
    ]
  }
]