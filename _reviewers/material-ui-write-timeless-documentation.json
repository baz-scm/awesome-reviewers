[
  {
    "discussion_id": "753299467",
    "pr_number": 29711,
    "pr_file": "docs/src/pages.ts",
    "created_at": "2021-11-19T15:34:06+00:00",
    "commented_code": "title: 'GridPrintExportOptions',\n           },\n         ].map((page) => {\n-          return { ...page, linkProps: { as: `${page.pathname.replace(/^\\/api-docs/, '/api')}/` } };\n+          return {\n+            ...page,\n+            linkProps: { linkAs: `${page.pathname.replace(/^\\/api-docs/, '/api')}/` },\n+          };\n         }),\n       },\n     ]\n       .sort((a, b) =>\n         a.pathname.replace('/api-docs/', '').localeCompare(b.pathname.replace('/api-docs/', '')),\n       )\n       .map((page) => {\n-        return { ...page, linkProps: { as: `${page.pathname.replace(/^\\/api-docs/, '/api')}/` } };\n+        return {\n+          ...page,\n+          linkProps: { linkAs: `${page.pathname.replace(/^\\/api-docs/, '/api')}/` },",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "753299467",
        "repo_full_name": "mui/material-ui",
        "pr_number": 29711,
        "pr_file": "docs/src/pages.ts",
        "discussion_id": "753299467",
        "commented_code": "@@ -226,15 +226,21 @@ const pages: readonly MuiPage[] = [\n             title: 'GridPrintExportOptions',\n           },\n         ].map((page) => {\n-          return { ...page, linkProps: { as: `${page.pathname.replace(/^\\/api-docs/, '/api')}/` } };\n+          return {\n+            ...page,\n+            linkProps: { linkAs: `${page.pathname.replace(/^\\/api-docs/, '/api')}/` },\n+          };\n         }),\n       },\n     ]\n       .sort((a, b) =>\n         a.pathname.replace('/api-docs/', '').localeCompare(b.pathname.replace('/api-docs/', '')),\n       )\n       .map((page) => {\n-        return { ...page, linkProps: { as: `${page.pathname.replace(/^\\/api-docs/, '/api')}/` } };\n+        return {\n+          ...page,\n+          linkProps: { linkAs: `${page.pathname.replace(/^\\/api-docs/, '/api')}/` },",
        "comment_created_at": "2021-11-19T15:34:06+00:00",
        "comment_author": "oliviertassinari",
        "comment_body": "@mui-org/x heads up, this is a breaking change, you need to apply the same diff once you upgrade the mono-repo. We improve the support for the translation of the docs.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2036746372",
    "pr_number": 45596,
    "pr_file": "docs/src/modules/utils/useLazyCSS.ts",
    "created_at": "2025-04-10T07:58:43+00:00",
    "commented_code": "import { loadCSS } from 'fg-loadcss';\n \n /**\n- * Convenience wrapper around fgLoadCSS for hooks usage\n- * @param {string} href\n- * @param {string} before - CSS selector\n+ * Enhanced lazy CSS loader that wraps CSS in a layer using fetch to avoid CORS issues\n+ * @param {string} href - URL of the CSS file to load\n+ * @param {string} before - CSS selector to insert before\n+ * @param {object} options - Additional options\n+ * @param {string} options.layer - Optional CSS layer name to wrap the CSS in\n  * @returns {() => void} cleanup function\n  */\n-export default function useLazyCSS(href: string, before: string) {\n+export default function useLazyCSS(href: string, before: string, options: { layer?: string } = {}) {\n   React.useEffect(() => {\n-    const link = loadCSS(href, document.querySelector(before) as HTMLElement);\n+    // If no layer is specified, use the original behavior",
    "repo_full_name": "mui/material-ui",
    "discussion_comments": [
      {
        "comment_id": "2036746372",
        "repo_full_name": "mui/material-ui",
        "pr_number": 45596,
        "pr_file": "docs/src/modules/utils/useLazyCSS.ts",
        "discussion_id": "2036746372",
        "commented_code": "@@ -2,16 +2,71 @@ import * as React from 'react';\n import { loadCSS } from 'fg-loadcss';\n \n /**\n- * Convenience wrapper around fgLoadCSS for hooks usage\n- * @param {string} href\n- * @param {string} before - CSS selector\n+ * Enhanced lazy CSS loader that wraps CSS in a layer using fetch to avoid CORS issues\n+ * @param {string} href - URL of the CSS file to load\n+ * @param {string} before - CSS selector to insert before\n+ * @param {object} options - Additional options\n+ * @param {string} options.layer - Optional CSS layer name to wrap the CSS in\n  * @returns {() => void} cleanup function\n  */\n-export default function useLazyCSS(href: string, before: string) {\n+export default function useLazyCSS(href: string, before: string, options: { layer?: string } = {}) {\n   React.useEffect(() => {\n-    const link = loadCSS(href, document.querySelector(before) as HTMLElement);\n+    // If no layer is specified, use the original behavior",
        "comment_created_at": "2025-04-10T07:58:43+00:00",
        "comment_author": "alexfauquette",
        "comment_body": "The \"original behavior\" only make sense in this PR context. In one year, we will not understand what is \"original\"\r\n\r\n```suggestion\r\n    // If no layer is specified, add style and clean it on unmount\r\n```",
        "pr_file_module": null
      }
    ]
  }
]