[
  {
    "discussion_id": "2179351945",
    "pr_number": 12546,
    "pr_file": "packages/frontend/@n8n/chat/src/components/Input.vue",
    "created_at": "2025-07-02T07:39:42+00:00",
    "commented_code": "focusChatInput();\n }\n \n+function attachFiles() {\n+\tif (files.value) {\n+\t\tconst filesToAttach = Array.from(files.value);\n+\t\tresetFileDialog();\n+\t\tfiles.value = null;\n+\t\treturn filesToAttach;\n+\t}\n+\n+\treturn [];\n+}\n+\n+function setupWebsocketConnection(executionId: string) {\n+\t// if webhookUrl is not defined onSubmit is called from integrated chat\n+\t// do not setup websocket as it would be handled by the integrated chat\n+\tif (options.webhookUrl && chatStore.currentSessionId.value) {\n+\t\tconst baseUrl = new URL(options.webhookUrl).origin;\n+\t\tconst wsProtocol = baseUrl.startsWith('https') ? 'wss' : 'ws';\n+\t\tconst wsUrl = baseUrl.replace(/^https?/, wsProtocol);\n+\t\tchatStore.ws = new WebSocket(\n+\t\t\t`${wsUrl}/chat?sessionId=${chatStore.currentSessionId.value}&executionId=${executionId}&isPublic=true`,\n+\t\t);\n+\t\tchatStore.ws.onmessage = (e) => {\n+\t\t\tif (e.data === 'n8n|heartbeat') {\n+\t\t\t\tchatStore.ws?.send('n8n|heartbeat-ack');\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\tif (e.data === 'n8n|continue') {\n+\t\t\t\twaitingForChatResponse.value = false;\n+\t\t\t\tchatStore.waitingForResponse.value = true;\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\tconst newMessage: ChatMessage = {\n+\t\t\t\tid: uuidv4(),\n+\t\t\t\ttext: e.data,\n+\t\t\t\tsender: 'bot',\n+\t\t\t};\n+\n+\t\t\tchatStore.messages.value.push(newMessage);\n+\t\t\twaitingForChatResponse.value = true;\n+\t\t\tchatStore.waitingForResponse.value = false;\n+\t\t};\n+\n+\t\tchatStore.ws.onclose = () => {\n+\t\t\tchatStore.ws = null;\n+\t\t\twaitingForChatResponse.value = false;\n+\t\t\tchatStore.waitingForResponse.value = false;\n+\t\t};\n+\t}\n+}\n+\n+async function processFiles(data: File[] | undefined) {\n+\tif (!data || data.length === 0) return [];\n+\n+\tconst filePromises = data.map(async (file) => {\n+\t\t// eslint-disable-next-line @typescript-eslint/return-await",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2179351945",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 12546,
        "pr_file": "packages/frontend/@n8n/chat/src/components/Input.vue",
        "discussion_id": "2179351945",
        "commented_code": "@@ -127,6 +131,102 @@ function setInputValue(value: string) {\n \tfocusChatInput();\n }\n \n+function attachFiles() {\n+\tif (files.value) {\n+\t\tconst filesToAttach = Array.from(files.value);\n+\t\tresetFileDialog();\n+\t\tfiles.value = null;\n+\t\treturn filesToAttach;\n+\t}\n+\n+\treturn [];\n+}\n+\n+function setupWebsocketConnection(executionId: string) {\n+\t// if webhookUrl is not defined onSubmit is called from integrated chat\n+\t// do not setup websocket as it would be handled by the integrated chat\n+\tif (options.webhookUrl && chatStore.currentSessionId.value) {\n+\t\tconst baseUrl = new URL(options.webhookUrl).origin;\n+\t\tconst wsProtocol = baseUrl.startsWith('https') ? 'wss' : 'ws';\n+\t\tconst wsUrl = baseUrl.replace(/^https?/, wsProtocol);\n+\t\tchatStore.ws = new WebSocket(\n+\t\t\t`${wsUrl}/chat?sessionId=${chatStore.currentSessionId.value}&executionId=${executionId}&isPublic=true`,\n+\t\t);\n+\t\tchatStore.ws.onmessage = (e) => {\n+\t\t\tif (e.data === 'n8n|heartbeat') {\n+\t\t\t\tchatStore.ws?.send('n8n|heartbeat-ack');\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\tif (e.data === 'n8n|continue') {\n+\t\t\t\twaitingForChatResponse.value = false;\n+\t\t\t\tchatStore.waitingForResponse.value = true;\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\tconst newMessage: ChatMessage = {\n+\t\t\t\tid: uuidv4(),\n+\t\t\t\ttext: e.data,\n+\t\t\t\tsender: 'bot',\n+\t\t\t};\n+\n+\t\t\tchatStore.messages.value.push(newMessage);\n+\t\t\twaitingForChatResponse.value = true;\n+\t\t\tchatStore.waitingForResponse.value = false;\n+\t\t};\n+\n+\t\tchatStore.ws.onclose = () => {\n+\t\t\tchatStore.ws = null;\n+\t\t\twaitingForChatResponse.value = false;\n+\t\t\tchatStore.waitingForResponse.value = false;\n+\t\t};\n+\t}\n+}\n+\n+async function processFiles(data: File[] | undefined) {\n+\tif (!data || data.length === 0) return [];\n+\n+\tconst filePromises = data.map(async (file) => {\n+\t\t// eslint-disable-next-line @typescript-eslint/return-await",
        "comment_created_at": "2025-07-02T07:39:42+00:00",
        "comment_author": "ShireenMissi",
        "comment_body": "please don't disable lint rules inline",
        "pr_file_module": null
      }
    ]
  }
]