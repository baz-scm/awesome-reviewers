[
  {
    "discussion_id": "2209818684",
    "pr_number": 17362,
    "pr_file": "packages/frontend/editor-ui/src/components/WorkflowSettings.vue",
    "created_at": "2025-07-16T09:39:57+00:00",
    "commented_code": "</el-col>\n \t\t\t\t\t</el-row>\n \t\t\t\t</div>\n+\t\t\t\t<el-row>\n+\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n+\t\t\t\t\t\t<label for=\"avalableInMCP\">\n+\t\t\t\t\t\t\t{{ i18n.baseText('workflowSettings.availableInMCP') + ':' }}\n+\t\t\t\t\t\t\t<N8nTooltip placement=\"top\">\n+\t\t\t\t\t\t\t\t<template #content>\n+\t\t\t\t\t\t\t\t\t{{ i18n.baseText('workflowSettings.availableInMCP.tooltip') }}\n+\t\t\t\t\t\t\t\t</template>\n+\t\t\t\t\t\t\t\t<n8n-icon icon=\"circle-help\" />\n+\t\t\t\t\t\t\t</N8nTooltip>\n+\t\t\t\t\t\t</label>\n+\t\t\t\t\t</el-col>\n+\t\t\t\t\t<el-col :span=\"14\">\n+\t\t\t\t\t\t<div>\n+\t\t\t\t\t\t\t<el-switch\n+\t\t\t\t\t\t\t\tref=\"inputField\"\n+\t\t\t\t\t\t\t\t:disabled=\"readOnlyEnv || !workflowPermissions.update\"\n+\t\t\t\t\t\t\t\t:model-value=\"workflowSettings.availableInMCP ?? false\"\n+\t\t\t\t\t\t\t\tactive-color=\"#13ce66\"\n+\t\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-vailable-in-mcp\"",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2209818684",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17362,
        "pr_file": "packages/frontend/editor-ui/src/components/WorkflowSettings.vue",
        "discussion_id": "2209818684",
        "commented_code": "@@ -809,6 +818,31 @@ onMounted(async () => {\n \t\t\t\t\t\t</el-col>\n \t\t\t\t\t</el-row>\n \t\t\t\t</div>\n+\t\t\t\t<el-row>\n+\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n+\t\t\t\t\t\t<label for=\"avalableInMCP\">\n+\t\t\t\t\t\t\t{{ i18n.baseText('workflowSettings.availableInMCP') + ':' }}\n+\t\t\t\t\t\t\t<N8nTooltip placement=\"top\">\n+\t\t\t\t\t\t\t\t<template #content>\n+\t\t\t\t\t\t\t\t\t{{ i18n.baseText('workflowSettings.availableInMCP.tooltip') }}\n+\t\t\t\t\t\t\t\t</template>\n+\t\t\t\t\t\t\t\t<n8n-icon icon=\"circle-help\" />\n+\t\t\t\t\t\t\t</N8nTooltip>\n+\t\t\t\t\t\t</label>\n+\t\t\t\t\t</el-col>\n+\t\t\t\t\t<el-col :span=\"14\">\n+\t\t\t\t\t\t<div>\n+\t\t\t\t\t\t\t<el-switch\n+\t\t\t\t\t\t\t\tref=\"inputField\"\n+\t\t\t\t\t\t\t\t:disabled=\"readOnlyEnv || !workflowPermissions.update\"\n+\t\t\t\t\t\t\t\t:model-value=\"workflowSettings.availableInMCP ?? false\"\n+\t\t\t\t\t\t\t\tactive-color=\"#13ce66\"\n+\t\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-vailable-in-mcp\"",
        "comment_created_at": "2025-07-16T09:39:57+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":9,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"ref=\\\\\\\"inputField\\\\\\\"\\\" -n packages/frontend/editor-ui/src/components | head\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"workflowSettings.availableInMCP'\\\" -R packages/frontend/editor-ui/src/components/WorkflowSettings.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"workflow-settings-vailable-in-mcp\\\" -n\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"sed -n '780,860p' packages/frontend/editor-ui/src/components/WorkflowSettings.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"availableInMCP\\\" --line-number\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"avalableInMCP\\\" -n packages/frontend/editor-ui/src/components/WorkflowSettings.vue\"},\"toolName\":\"executeCommand\"}]}]} -->\nTypo in data-test-id (\"vailable\" missing the leading \"a\") will cause E2E/unit tests referencing the intended id to fail.\n\n```suggestion\n\t\t\t\t\t\t\t\tdata-test-id=\"workflow-settings-available-in-mcp\"\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2209818692",
    "pr_number": 17362,
    "pr_file": "packages/frontend/editor-ui/src/components/WorkflowSettings.vue",
    "created_at": "2025-07-16T09:39:57+00:00",
    "commented_code": "</el-col>\n \t\t\t\t\t</el-row>\n \t\t\t\t</div>\n+\t\t\t\t<el-row>\n+\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n+\t\t\t\t\t\t<label for=\"avalableInMCP\">",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2209818692",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17362,
        "pr_file": "packages/frontend/editor-ui/src/components/WorkflowSettings.vue",
        "discussion_id": "2209818692",
        "commented_code": "@@ -809,6 +818,31 @@\n \t\t\t\t\t\t</el-col>\n \t\t\t\t\t</el-row>\n \t\t\t\t</div>\n+\t\t\t\t<el-row>\n+\t\t\t\t\t<el-col :span=\"10\" class=\"setting-name\">\n+\t\t\t\t\t\t<label for=\"avalableInMCP\">",
        "comment_created_at": "2025-07-16T09:39:57+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":8,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"ref=\\\\\\\"inputField\\\\\\\"\\\" -n packages/frontend/editor-ui/src/components | head\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"workflowSettings.availableInMCP'\\\" -R packages/frontend/editor-ui/src/components/WorkflowSettings.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"workflow-settings-vailable-in-mcp\\\" -n\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"sed -n '780,860p' packages/frontend/editor-ui/src/components/WorkflowSettings.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"availableInMCP\\\" --line-number\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"avalableInMCP\\\" -n packages/frontend/editor-ui/src/components/WorkflowSettings.vue\"},\"toolName\":\"executeCommand\"}]}]} -->\nThe \"for\" attribute is misspelled (\"avalableInMCP\" instead of \"availableInMCP\"), breaking the association between the label and its control and reducing accessibility and test reliability.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2200781041",
    "pr_number": 17232,
    "pr_file": "packages/frontend/editor-ui/src/components/ParameterOptions.vue",
    "created_at": "2025-07-11T13:40:45+00:00",
    "commented_code": "});\n \n const emit = defineEmits<{\n+\t// eslint-disable-next-line @typescript-eslint/naming-convention",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2200781041",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17232,
        "pr_file": "packages/frontend/editor-ui/src/components/ParameterOptions.vue",
        "discussion_id": "2200781041",
        "commented_code": "@@ -33,20 +34,38 @@ const props = withDefaults(defineProps<Props>(), {\n });\n \n const emit = defineEmits<{\n+\t// eslint-disable-next-line @typescript-eslint/naming-convention",
        "comment_created_at": "2025-07-11T13:40:45+00:00",
        "comment_author": "Cadiac",
        "comment_body": "we should just disable that rule to be honestly :D but supressing these warnings is fine of course.",
        "pr_file_module": null
      },
      {
        "comment_id": "2200795502",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17232,
        "pr_file": "packages/frontend/editor-ui/src/components/ParameterOptions.vue",
        "discussion_id": "2200781041",
        "commented_code": "@@ -33,20 +34,38 @@ const props = withDefaults(defineProps<Props>(), {\n });\n \n const emit = defineEmits<{\n+\t// eslint-disable-next-line @typescript-eslint/naming-convention",
        "comment_created_at": "2025-07-11T13:47:55+00:00",
        "comment_author": "AkshatRaj00",
        "comment_body": "Reply (if planning to disable globally):\r\n\r\nTotally makes sense \u2014 I\u2019ll follow up with a rule update in the ESLint config so we don\u2019t have to suppress it repeatedly. Will keep the team aligned on the naming convention as well.",
        "pr_file_module": null
      },
      {
        "comment_id": "2200822722",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17232,
        "pr_file": "packages/frontend/editor-ui/src/components/ParameterOptions.vue",
        "discussion_id": "2200781041",
        "commented_code": "@@ -33,20 +34,38 @@ const props = withDefaults(defineProps<Props>(), {\n });\n \n const emit = defineEmits<{\n+\t// eslint-disable-next-line @typescript-eslint/naming-convention",
        "comment_created_at": "2025-07-11T14:01:23+00:00",
        "comment_author": "dariacodes",
        "comment_body": "I just did it - no more of this annoying rule!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2189233232",
    "pr_number": 16993,
    "pr_file": "packages/frontend/editor-ui/src/features/logs/components/LogsViewRunData.vue",
    "created_at": "2025-07-07T07:35:50+00:00",
    "commented_code": "import { PiPWindowSymbol } from '@/constants';\n import { isSubNodeLog } from '../logs.utils';\n \n-const { title, logEntry, paneType } = defineProps<{\n+const { title, logEntry, paneType, collapsingTableColumnName } = defineProps<{\n \ttitle: string;\n \tpaneType: NodePanelType;\n \tlogEntry: LogEntry;\n+\tcollapsingTableColumnName: string | null;\n+}>();\n+\n+const emit = defineEmits<{",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2189233232",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 16993,
        "pr_file": "packages/frontend/editor-ui/src/features/logs/components/LogsViewRunData.vue",
        "discussion_id": "2189233232",
        "commented_code": "@@ -11,10 +11,15 @@ import { I18nT } from 'vue-i18n';\n import { PiPWindowSymbol } from '@/constants';\n import { isSubNodeLog } from '../logs.utils';\n \n-const { title, logEntry, paneType } = defineProps<{\n+const { title, logEntry, paneType, collapsingTableColumnName } = defineProps<{\n \ttitle: string;\n \tpaneType: NodePanelType;\n \tlogEntry: LogEntry;\n+\tcollapsingTableColumnName: string | null;\n+}>();\n+\n+const emit = defineEmits<{",
        "comment_created_at": "2025-07-07T07:35:50+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":8,\"steps\":[]} -->\nThe emit type for 'collapsingTableColumnChanged' is correct, but the event name should be kebab-case ('collapsing-table-column-changed') to match Vue event naming conventions and the emitted event in the template.\n\n```suggestion\nconst emit = defineEmits<{\n\t'collapsing-table-column-changed': [columnName: string | null];\n}>();\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2189236013",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 16993,
        "pr_file": "packages/frontend/editor-ui/src/features/logs/components/LogsViewRunData.vue",
        "discussion_id": "2189233232",
        "commented_code": "@@ -11,10 +11,15 @@ import { I18nT } from 'vue-i18n';\n import { PiPWindowSymbol } from '@/constants';\n import { isSubNodeLog } from '../logs.utils';\n \n-const { title, logEntry, paneType } = defineProps<{\n+const { title, logEntry, paneType, collapsingTableColumnName } = defineProps<{\n \ttitle: string;\n \tpaneType: NodePanelType;\n \tlogEntry: LogEntry;\n+\tcollapsingTableColumnName: string | null;\n+}>();\n+\n+const emit = defineEmits<{",
        "comment_created_at": "2025-07-07T07:37:11+00:00",
        "comment_author": "autologie",
        "comment_body": "We seem to use camelCase elsewhere.",
        "pr_file_module": null
      }
    ]
  }
]