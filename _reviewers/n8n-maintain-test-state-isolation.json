[
  {
    "discussion_id": "2215780803",
    "pr_number": 17121,
    "pr_file": "packages/@n8n/nodes-langchain/nodes/vendors/Anthropic/helpers/utils.test.ts",
    "created_at": "2025-07-18T11:11:52+00:00",
    "commented_code": "+import { mockDeep } from 'jest-mock-extended';\n+import type { IExecuteFunctions } from 'n8n-workflow';\n+\n+import { downloadFile, getBaseUrl, getMimeType, splitByComma, uploadFile } from './utils';\n+import * as transport from '../transport';\n+\n+describe('Anthropic -> utils', () => {\n+\tconst mockExecuteFunctions = mockDeep<IExecuteFunctions>();\n+\tconst apiRequestMock = jest.spyOn(transport, 'apiRequest');",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2215825034",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17121,
        "pr_file": "packages/@n8n/nodes-langchain/nodes/vendors/Anthropic/helpers/utils.test.ts",
        "discussion_id": "2215780803",
        "commented_code": "@@ -0,0 +1,196 @@\n+import { mockDeep } from 'jest-mock-extended';\n+import type { IExecuteFunctions } from 'n8n-workflow';\n+\n+import { downloadFile, getBaseUrl, getMimeType, splitByComma, uploadFile } from './utils';\n+import * as transport from '../transport';\n+\n+describe('Anthropic -> utils', () => {\n+\tconst mockExecuteFunctions = mockDeep<IExecuteFunctions>();\n+\tconst apiRequestMock = jest.spyOn(transport, 'apiRequest');",
        "comment_created_at": "2025-07-18T11:34:20+00:00",
        "comment_author": "RomanDavydchuk",
        "comment_body": "This actually won't work",
        "pr_file_module": null
      }
    ]
  }
]