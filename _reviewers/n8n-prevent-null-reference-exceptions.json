[
  {
    "discussion_id": "2222558137",
    "pr_number": 16148,
    "pr_file": "packages/frontend/editor-ui/src/components/InputNodeSelect.vue",
    "created_at": "2025-07-22T13:34:15+00:00",
    "commented_code": "return '';\n \n \tconst activeNodeConnections =\n-\t\tprops.workflow.connectionsByDestinationNode[activeNode.value.name].main || [];\n+\t\tworkflowsStore.connectionsByDestinationNode[activeNode.value.name].main || [];",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2222558137",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 16148,
        "pr_file": "packages/frontend/editor-ui/src/components/InputNodeSelect.vue",
        "discussion_id": "2222558137",
        "commented_code": "@@ -84,7 +84,7 @@ function getMultipleNodesText(nodeName: string): string {\n \t\treturn '';\n \n \tconst activeNodeConnections =\n-\t\tprops.workflow.connectionsByDestinationNode[activeNode.value.name].main || [];\n+\t\tworkflowsStore.connectionsByDestinationNode[activeNode.value.name].main || [];",
        "comment_created_at": "2025-07-22T13:34:15+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":7,\"steps\":[]} -->\nPossible runtime crash when `.main` is accessed on an undefined mapping entry in `connectionsByDestinationNode`. Use optional chaining or a fallback check first.\n\n<details>\n<summary>Prompt for AI agents</summary>\n\n```\nAddress the following comment on packages/frontend/editor-ui/src/components/InputNodeSelect.vue at line 87:\n\n<comment>Possible runtime crash when `.main` is accessed on an undefined mapping entry in `connectionsByDestinationNode`. Use optional chaining or a fallback check first.</comment>\n\n<file context>\n@@ -84,7 +84,7 @@ function getMultipleNodesText(nodeName: string): string {\n \t\treturn &#39;&#39;;\n \n \tconst activeNodeConnections =\n-\t\tprops.workflow.connectionsByDestinationNode[activeNode.value.name].main || [];\n+\t\tworkflowsStore.connectionsByDestinationNode[activeNode.value.name].main || [];\n \t// Collect indexes of connected nodes\n \tconst connectedInputIndexes = activeNodeConnections.reduce((acc: number[], node, index) =&gt; {\n</file context>\n```\n\n</details>\n\n```suggestion\n\t\tworkflowsStore.connectionsByDestinationNode[activeNode.value.name]?.main || [];\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2225902447",
    "pr_number": 17590,
    "pr_file": "packages/frontend/editor-ui/src/components/Projects/ProjectTabs.vue",
    "created_at": "2025-07-23T15:08:40+00:00",
    "commented_code": "});\n \t}\n \n+\tif (props.additionalTabs.length) {",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2225902447",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17590,
        "pr_file": "packages/frontend/editor-ui/src/components/Projects/ProjectTabs.vue",
        "discussion_id": "2225902447",
        "commented_code": "@@ -101,6 +103,10 @@ const options = computed<Array<TabOptions<string>>>(() => {\n \t\t});\n \t}\n \n+\tif (props.additionalTabs.length) {",
        "comment_created_at": "2025-07-23T15:08:40+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":9,\"steps\":[]} -->\nAccessing props.additionalTabs.length without a nullish check can throw if the parent passes undefined, despite withDefaults. Use optional chaining to prevent runtime errors.\n\n<details>\n<summary>Prompt for AI agents</summary>\n\n```\nAddress the following comment on packages/frontend/editor-ui/src/components/Projects/ProjectTabs.vue at line 106:\n\n<comment>Accessing props.additionalTabs.length without a nullish check can throw if the parent passes undefined, despite withDefaults. Use optional chaining to prevent runtime errors.</comment>\n\n<file context>\n@@ -101,6 +103,10 @@ const options = computed&lt;Array&lt;TabOptions&lt;string&gt;&gt;&gt;(() =&gt; {\n \t\t});\n \t}\n \n+\tif (props.additionalTabs.length) {\n+\t\ttabs.push(...props.additionalTabs);\n+\t}\n</file context>\n```\n\n</details>\n\n```suggestion\n\tif (props.additionalTabs?.length) {\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2210446875",
    "pr_number": 17378,
    "pr_file": "packages/frontend/editor-ui/vite.config.mts",
    "created_at": "2025-07-16T13:30:59+00:00",
    "commented_code": "modernPolyfills: true,\n \t\trenderLegacyChunks: false,\n \t}),\n+\t{\n+\t\tname: 'Insert config script',\n+\t\ttransformIndexHtml: (html, ctx) => {\n+\t\t\tconst replacement = ctx.server",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2210446875",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17378,
        "pr_file": "packages/frontend/editor-ui/vite.config.mts",
        "discussion_id": "2210446875",
        "commented_code": "@@ -115,6 +115,16 @@ const plugins = [\n \t\tmodernPolyfills: true,\n \t\trenderLegacyChunks: false,\n \t}),\n+\t{\n+\t\tname: 'Insert config script',\n+\t\ttransformIndexHtml: (html, ctx) => {\n+\t\t\tconst replacement = ctx.server",
        "comment_created_at": "2025-07-16T13:30:59+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":9,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n -A3 -B3 -F \\\"const replacement = ctx.server\\\" packages/frontend/editor-ui/vite.config.mts\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"transformIndexHtml: (html\\\" -n\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"%CONFIG_SCRIPT%\\\" -n\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"name: 'Insert config script'\\\" -n\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"sed -n '118,126p' packages/frontend/editor-ui/vite.config.mts | nl -ba\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r \\\"transformIndexHtml(\\\" $(npm root 2>/dev/null || echo \\\"\\\")\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"git diff -U0 HEAD~1 | head -n 40\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"transformIndexHtml(html\\\" $(npm root 2>/dev/null || echo \\\"\\\")\"},\"toolName\":\"executeCommand\"}]}]} -->\nAccessing ctx.server without nullish check will throw when ctx is undefined during vite build runs, causing the build to crash. Use optional chaining to guard access.\n\n```suggestion\n\t\t\tconst replacement = ctx?.server\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2194807162",
    "pr_number": 17158,
    "pr_file": "packages/frontend/editor-ui/src/components/NodeSettings.vue",
    "created_at": "2025-07-09T11:45:47+00:00",
    "commented_code": "const outputPanelEditMode = computed(() => ndvStore.outputPanelEditMode);\n \n const isCommunityNode = computed(() => !!node.value && isCommunityPackageName(node.value.type));\n+const packageName = computed(() => node.value?.type.split('.')[0] ?? '');",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2194807162",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17158,
        "pr_file": "packages/frontend/editor-ui/src/components/NodeSettings.vue",
        "discussion_id": "2194807162",
        "commented_code": "@@ -227,6 +228,7 @@ const showNoParametersNotice = computed(\n const outputPanelEditMode = computed(() => ndvStore.outputPanelEditMode);\n \n const isCommunityNode = computed(() => !!node.value && isCommunityPackageName(node.value.type));\n+const packageName = computed(() => node.value?.type.split('.')[0] ?? '');",
        "comment_created_at": "2025-07-09T11:45:47+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":8,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"CommunityNodeFooter\\\" -R\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n -C 2 \\\"n8n-block-ui :show=\\\\\\\"blockUI\\\\\\\"\\\" packages/frontend/editor-ui/src/components/NodeSettings.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"import { useUsersStore }\\\" -R packages/frontend/editor-ui/src/components/NodeSettings.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"useUsersStore().isInstanceOwner\\\" -R packages/frontend | head\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"useUsersStore(\\\" packages/frontend/editor-ui/src/components/NodeSettings.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"CommunityNodeFooter\\\" packages/frontend/editor-ui/src/components/NodeSettings.vue\"},\"toolName\":\"executeCommand\"}]}]} -->\nIf `node.value` is `undefined`, `node.value?.type` evaluates to `undefined`, and accessing `.split()` on it will throw a runtime error. Add optional chaining before calling `split` (or guard the whole expression) to prevent crashes during initial render.\n\n```suggestion\nconst packageName = computed(() => node.value?.type?.split('.')[0] ?? '');\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2214412960",
    "pr_number": 17430,
    "pr_file": "packages/frontend/@n8n/design-system/src/components/AskAssistantChat/messages/ToolMessage.vue",
    "created_at": "2025-07-17T22:19:41+00:00",
    "commented_code": "+<script setup lang=\"ts\">\n+import { ref, computed } from 'vue';\n+\n+import { useI18n } from '@n8n/design-system/composables/useI18n';\n+\n+import BaseMessage from './BaseMessage.vue';\n+import type { ChatUI } from '../../../types/assistant';\n+import N8nIcon from '../../N8nIcon';\n+import N8nTooltip from '../../N8nTooltip';\n+\n+interface Props {\n+\tmessage: ChatUI.ToolMessage & { id: string; read: boolean };\n+\tisFirstOfRole: boolean;\n+\tshowProgressLogs?: boolean;\n+\tuser?: {\n+\t\tfirstName: string;\n+\t\tlastName: string;\n+\t};\n+}\n+\n+const props = defineProps<Props>();\n+const { t } = useI18n();\n+\n+const expanded = ref(false);\n+const toolDisplayName = computed(() => {\n+\t// Convert tool names from snake_case to Title Case\n+\treturn props.message.toolName\n+\t\t.split('_')\n+\t\t.map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n+\t\t.join(' ');\n+});\n+\n+const latestInput = computed(() => {\n+\tconst inputUpdate = props.message.updates.find((u) => u.type === 'input');",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2214412960",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17430,
        "pr_file": "packages/frontend/@n8n/design-system/src/components/AskAssistantChat/messages/ToolMessage.vue",
        "discussion_id": "2214412960",
        "commented_code": "@@ -0,0 +1,279 @@\n+<script setup lang=\"ts\">\n+import { ref, computed } from 'vue';\n+\n+import { useI18n } from '@n8n/design-system/composables/useI18n';\n+\n+import BaseMessage from './BaseMessage.vue';\n+import type { ChatUI } from '../../../types/assistant';\n+import N8nIcon from '../../N8nIcon';\n+import N8nTooltip from '../../N8nTooltip';\n+\n+interface Props {\n+\tmessage: ChatUI.ToolMessage & { id: string; read: boolean };\n+\tisFirstOfRole: boolean;\n+\tshowProgressLogs?: boolean;\n+\tuser?: {\n+\t\tfirstName: string;\n+\t\tlastName: string;\n+\t};\n+}\n+\n+const props = defineProps<Props>();\n+const { t } = useI18n();\n+\n+const expanded = ref(false);\n+const toolDisplayName = computed(() => {\n+\t// Convert tool names from snake_case to Title Case\n+\treturn props.message.toolName\n+\t\t.split('_')\n+\t\t.map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n+\t\t.join(' ');\n+});\n+\n+const latestInput = computed(() => {\n+\tconst inputUpdate = props.message.updates.find((u) => u.type === 'input');",
        "comment_created_at": "2025-07-17T22:19:41+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":8,\"steps\":[]} -->\nIf message.updates is undefined this line throws at runtime; use optional chaining or default fallback.\n\n<details>\n<summary>Prompt for AI agents</summary>\n\n```\nAddress the following comment on packages/frontend/@n8n/design-system/src/components/AskAssistantChat/messages/ToolMessage.vue at line 34:\n\n<comment>If message.updates is undefined this line throws at runtime; use optional chaining or default fallback.</comment>\n\n<file context>\n@@ -0,0 +1,279 @@\n+&lt;script setup lang=&quot;ts&quot;&gt;\n+import { ref, computed } from &#39;vue&#39;;\n+\n+import { useI18n } from &#39;@n8n/design-system/composables/useI18n&#39;;\n+\n+import BaseMessage from &#39;./BaseMessage.vue&#39;;\n+import type { ChatUI } from &#39;../../../types/assistant&#39;;\n+import N8nIcon from &#39;../../N8nIcon&#39;;\n+import N8nTooltip from &#39;../../N8nTooltip&#39;;\n+\n+interface Props {\n+\tmessage: ChatUI.ToolMessage &amp; { id: string; read: boolean };\n+\tisFirstOfRole: boolean;\n+\tshowProgressLogs?: boolean;\n+\tuser?: {\n+\t\tfirstName: string;\n+\t\tlastName: string;\n+\t};\n+}\n+\n+const props = defineProps&lt;Props&gt;();\n+const { t } = useI18n();\n+\n+const expanded = ref(false);\n+const toolDisplayName = computed(() =&gt; {\n+\t// Convert tool names from snake_case to Title Case\n+\treturn props.message.toolName\n+\t\t.split(&#39;_&#39;)\n+\t\t.map((word) =&gt; word.charAt(0).toUpperCase() + word.slice(1))\n+\t\t.join(&#39; &#39;);\n+});\n+\n+const latestInput = computed(() =&gt; {\n+\tconst inputUpdate = props.message.updates.find((u) =&gt; u.type === &#39;input&#39;);\n+\treturn inputUpdate?.data;\n+});\n+\n+const latestOutput = computed(() =&gt; {\n+\tconst outputUpdate = props.message.updates.find((u) =&gt; u.type === &#39;output&#39;);\n+\treturn outputUpdate?.data;\n+});\n+\n+const latestError = computed(() =&gt; {\n+\tconst errorUpdate = props.message.updates.find((u) =&gt; u.type === &#39;error&#39;);\n+\treturn errorUpdate?.data;\n+});\n+\n+const progressMessages = computed(() =&gt; {\n+\treturn (props.message.updates ?? []).filter((u) =&gt; u.type === &#39;progress&#39;).map((u) =&gt; u.data);\n+});\n+\n+const statusMessage = computed(() =&gt; {\n+\tswitch (props.message.status) {\n+\t\tcase &#39;running&#39;:\n+\t\t\treturn t(&#39;assistantChat.builder.toolRunning&#39;);\n+\t\tcase &#39;completed&#39;:\n+\t\t\treturn t(&#39;assistantChat.builder.toolCompleted&#39;);\n+\t\tcase &#39;error&#39;:\n+\t\t\treturn t(&#39;assistantChat.builder.toolError&#39;);\n+\t\tdefault:\n+\t\t\treturn &#39;&#39;;\n+\t}\n+});\n+\n+const statusColor = computed(() =&gt; {\n+\tswitch (props.message.status) {\n+\t\tcase &#39;completed&#39;:\n+\t\t\treturn &#39;success&#39;;\n+\t\tcase &#39;error&#39;:\n+\t\t\treturn &#39;danger&#39;;\n+\t\tdefault:\n+\t\t\treturn &#39;secondary&#39;;\n+\t}\n+});\n+\n+function formatJSON(data: Record&lt;string, unknown&gt; | string): string {\n+\tif (!data) return &#39;&#39;;\n+\ttry {\n+\t\treturn JSON.stringify(data, null, 2);\n+\t} catch {\n+\t\t// eslint-disable-next-line @typescript-eslint/no-base-to-string\n+\t\treturn String(data);\n+\t}\n+}\n+\n+function toggleExpanded() {\n+\texpanded.value = !expanded.value;\n+}\n+&lt;/script&gt;\n+\n+&lt;template&gt;\n+\t&lt;BaseMessage :message=&quot;message&quot; :is-first-of-role=&quot;isFirstOfRole&quot; :user=&quot;user&quot;&gt;\n+\t\t&lt;div :class=&quot;$style.toolMessage&quot;&gt;\n+\t\t\t&lt;div :class=&quot;$style.header&quot; @click=&quot;toggleExpanded&quot;&gt;\n+\t\t\t\t&lt;div :class=&quot;$style.titleRow&quot;&gt;\n+\t\t\t\t\t&lt;N8nIcon\n+\t\t\t\t\t\t:icon=&quot;expanded ? &#39;chevron-down&#39; : &#39;chevron-right&#39;&quot;\n+\t\t\t\t\t\tsize=&quot;small&quot;\n+\t\t\t\t\t\t:class=&quot;$style.expandIcon&quot;\n+\t\t\t\t\t/&gt;\n+\t\t\t\t\t&lt;span :class=&quot;$style.toolName&quot;&gt;{{ toolDisplayName }}&lt;/span&gt;\n+\t\t\t\t\t&lt;div :class=&quot;$style.status&quot;&gt;\n+\t\t\t\t\t\t&lt;N8nTooltip placement=&quot;left&quot; :disabled=&quot;message.status !== &#39;running&#39;&quot;&gt;\n+\t\t\t\t\t\t\t&lt;template #content&gt;\n+\t\t\t\t\t\t\t\t&lt;span :class=&quot;$style.statusText&quot;&gt;\n+\t\t\t\t\t\t\t\t\t{{ statusMessage }}\n+\t\t\t\t\t\t\t\t&lt;/span&gt;\n+\t\t\t\t\t\t\t&lt;/template&gt;\n+\t\t\t\t\t\t\t&lt;N8nIcon\n+\t\t\t\t\t\t\t\tv-if=&quot;message.status === &#39;running&#39;&quot;\n+\t\t\t\t\t\t\t\ticon=&quot;spinner&quot;\n+\t\t\t\t\t\t\t\tspin\n+\t\t\t\t\t\t\t\t:color=&quot;statusColor&quot;\n+\t\t\t\t\t\t\t/&gt;\n+\t\t\t\t\t\t\t&lt;N8nIcon\n+\t\t\t\t\t\t\t\tv-else-if=&quot;message.status === &#39;error&#39;&quot;\n+\t\t\t\t\t\t\t\ticon=&quot;status-error&quot;\n+\t\t\t\t\t\t\t\t:color=&quot;statusColor&quot;\n+\t\t\t\t\t\t\t/&gt;\n+\t\t\t\t\t\t\t&lt;N8nIcon v-else icon=&quot;status-completed&quot; :color=&quot;statusColor&quot; /&gt;\n+\t\t\t\t\t\t&lt;/N8nTooltip&gt;\n+\t\t\t\t\t&lt;/div&gt;\n+\t\t\t\t&lt;/div&gt;\n+\t\t\t&lt;/div&gt;\n+\n+\t\t\t&lt;div v-if=&quot;expanded&quot; :class=&quot;$style.content&quot;&gt;\n+\t\t\t\t&lt;!-- Progress messages --&gt;\n+\t\t\t\t&lt;div v-if=&quot;progressMessages.length &gt; 0 &amp;&amp; showProgressLogs&quot; :class=&quot;$style.section&quot;&gt;\n+\t\t\t\t\t&lt;div :class=&quot;$style.sectionTitle&quot;&gt;Progress&lt;/div&gt;\n+\t\t\t\t\t&lt;div\n+\t\t\t\t\t\tv-for=&quot;(progress, index) in progressMessages&quot;\n+\t\t\t\t\t\t:key=&quot;index&quot;\n+\t\t\t\t\t\t:class=&quot;$style.progressItem&quot;\n+\t\t\t\t\t&gt;\n+\t\t\t\t\t\t{{ progress }}\n+\t\t\t\t\t&lt;/div&gt;\n+\t\t\t\t&lt;/div&gt;\n+\n+\t\t\t\t&lt;!-- Input --&gt;\n+\t\t\t\t&lt;div v-if=&quot;latestInput&quot; :class=&quot;$style.section&quot;&gt;\n+\t\t\t\t\t&lt;div :class=&quot;$style.sectionTitle&quot;&gt;Input&lt;/div&gt;\n+\t\t\t\t\t&lt;pre :class=&quot;$style.jsonContent&quot;&gt;{{ formatJSON(latestInput) }}&lt;/pre&gt;\n+\t\t\t\t&lt;/div&gt;\n+\n+\t\t\t\t&lt;!-- Output --&gt;\n+\t\t\t\t&lt;div v-if=&quot;latestOutput&quot; :class=&quot;$style.section&quot;&gt;\n+\t\t\t\t\t&lt;div :class=&quot;$style.sectionTitle&quot;&gt;Output&lt;/div&gt;\n+\t\t\t\t\t&lt;pre :class=&quot;$style.jsonContent&quot;&gt;{{ formatJSON(latestOutput) }}&lt;/pre&gt;\n+\t\t\t\t&lt;/div&gt;\n+\n+\t\t\t\t&lt;!-- Error --&gt;\n+\t\t\t\t&lt;div v-if=&quot;latestError&quot; :class=&quot;$style.section&quot;&gt;\n+\t\t\t\t\t&lt;div :class=&quot;$style.sectionTitle&quot;&gt;Error&lt;/div&gt;\n+\t\t\t\t\t&lt;div :class=&quot;$style.errorContent&quot;&gt;\n+\t\t\t\t\t\t{{ latestError.message || latestError }}\n+\t\t\t\t\t&lt;/div&gt;\n+\t\t\t\t&lt;/div&gt;\n+\t\t\t&lt;/div&gt;\n+\t\t&lt;/div&gt;\n+\t&lt;/BaseMessage&gt;\n+&lt;/template&gt;\n+\n+&lt;style lang=&quot;scss&quot; module&gt;\n+.toolMessage {\n+\twidth: 100%;\n+}\n+\n+.header {\n+\tcursor: pointer;\n+\tpadding: var(--spacing-xs);\n+\tborder-radius: var(--border-radius-base);\n+\tbackground-color: var(--color-background-light);\n+\n+\t&amp;:hover {\n+\t\tbackground-color: var(--color-background-base);\n+\t}\n+}\n+\n+.titleRow {\n+\tdisplay: flex;\n+\talign-items: center;\n+\tgap: var(--spacing-xs);\n+}\n+\n+.expandIcon {\n+\tflex-shrink: 0;\n+}\n+\n+.toolName {\n+\tfont-weight: var(--font-weight-bold);\n+\tflex: 1;\n+}\n+\n+.status {\n+\tdisplay: flex;\n+\talign-items: center;\n+\tgap: var(--spacing-3xs);\n+}\n+\n+.statusText {\n+\tfont-size: var(--font-size-2xs);\n+\ttext-transform: capitalize;\n+\n+\t&amp;.status-running {\n+\t\tcolor: var(--execution-card-text-waiting);\n+\t}\n+\n+\t&amp;.status-completed {\n+\t\tcolor: var(--color-success);\n+\t}\n+\n+\t&amp;.status-error {\n+\t\tcolor: var(--color-text-danger);\n+\t}\n+}\n+\n+.content {\n+\tmargin-top: var(--spacing-xs);\n+\tpadding: var(--spacing-xs);\n+\tbackground-color: var(--color-background-xlight);\n+\tborder-radius: var(--border-radius-base);\n+}\n+\n+.section {\n+\tmargin-bottom: var(--spacing-s);\n+\n+\t&amp;:last-child {\n+\t\tmargin-bottom: 0;\n+\t}\n+}\n+\n+.sectionTitle {\n+\tfont-weight: var(--font-weight-bold);\n+\tfont-size: var(--font-size-2xs);\n+\tcolor: var(--color-text-dark);\n+\tmargin-bottom: var(--spacing-3xs);\n+}\n+\n+.progressItem {\n+\tfont-size: var(--font-size-2xs);\n+\tcolor: var(--color-text-base);\n+\tmargin-bottom: var(--spacing-3xs);\n+}\n+\n+.jsonContent {\n+\tfont-family: var(--font-family-monospace);\n+\tfont-size: var(--font-size-3xs);\n+\tbackground-color: var(--color-background-base);\n+\tpadding: var(--spacing-xs);\n+\tborder-radius: var(--border-radius-base);\n+\toverflow-x: auto;\n+\tmargin: 0;\n+\tmax-height: 300px;\n+\toverflow-y: auto;\n+\n+\t@supports not (selector(::-webkit-scrollbar)) {\n+\t\tscrollbar-width: thin;\n+\t}\n+\t@supports selector(::-webkit-scrollbar) {\n+\t\t&amp;::-webkit-scrollbar {\n+\t\t\twidth: var(--spacing-2xs);\n+\t\t\theight: var(--spacing-2xs);\n+\t\t}\n+\t\t&amp;::-webkit-scrollbar-thumb {\n+\t\t\tborder-radius: var(--spacing-xs);\n+\t\t\tbackground: var(--color-foreground-dark);\n+\t\t\tborder: var(--spacing-5xs) solid white;\n+\t\t}\n+\t}\n+}\n+\n+.errorContent {\n+\tcolor: var(--color-danger);\n+\tfont-size: var(--font-size-2xs);\n+\tpadding: var(--spacing-xs);\n+\tbackground-color: var(--color-danger-tint-2);\n+\tborder-radius: var(--border-radius-base);\n+}\n+&lt;/style&gt;\n</file context>\n```\n\n</details>\n\n```suggestion\n\tconst inputUpdate = props.message.updates?.find((u) => u.type === 'input');\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2191649813",
    "pr_number": 17076,
    "pr_file": "packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue",
    "created_at": "2025-07-08T06:59:20+00:00",
    "commented_code": "});\n \n const hasManyInputItems = computed(() => {\n-\treturn ndvStore.ndvInputData.length > 1;\n+\treturn (props.inputDataLength ?? 0) > 1;",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2191649813",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 17076,
        "pr_file": "packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue",
        "discussion_id": "2191649813",
        "commented_code": "@@ -78,7 +83,7 @@ const n8nVersion = computed(() => {\n });\n \n const hasManyInputItems = computed(() => {\n-\treturn ndvStore.ndvInputData.length > 1;\n+\treturn (props.inputDataLength ?? 0) > 1;",
        "comment_created_at": "2025-07-08T06:59:20+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":6,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"ndvStore\\\" -n packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"ndvStore\\\" packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"<NodeErrorView\\\" -n packages/frontend/editor-ui | head\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"ndvStore\\\" packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"ndvStore\\\" packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"ndvStore\\\" packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"ndvStore\\\" packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"ndvStore\\\" packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"ndvStore\\\" packages/frontend/editor-ui/src/components/Error/NodeErrorView.vue\"},\"toolName\":\"executeCommand\"}]}]} -->\nDefaulting undefined inputDataLength to 0 means hasManyInputItems becomes false whenever the parent component does not pass this prop, even though the node could have more than one input item. This silently drops the item-index suffix in error messages and changes existing behaviour where the length was obtained from ndvStore. Consider using a safer default (e.g. 1) or falling back to the old store value when the prop is not provided.\n\n```suggestion\n\treturn (props.inputDataLength ?? 1) > 1;\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2127747446",
    "pr_number": 16036,
    "pr_file": "packages/frontend/editor-ui/src/components/canvas/Canvas.vue",
    "created_at": "2025-06-05T00:57:15+00:00",
    "commented_code": "});\n }\n \n+async function onFilterExecutionBy(input: { ids: string[] }) {\n+\tconst workflowId = route.params.name as string;\n+\tif (!workflowId || !input || !input.ids || input.ids.length === 0) return;\n+\tconst customFilter = nodeDataById.value[input.ids[0]]?.name;",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2127747446",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 16036,
        "pr_file": "packages/frontend/editor-ui/src/components/canvas/Canvas.vue",
        "discussion_id": "2127747446",
        "commented_code": "@@ -648,6 +653,16 @@ function onOpenContextMenu(event: MouseEvent, target?: Pick<ContextMenuTarget, '\n \t});\n }\n \n+async function onFilterExecutionBy(input: { ids: string[] }) {\n+\tconst workflowId = route.params.name as string;\n+\tif (!workflowId || !input || !input.ids || input.ids.length === 0) return;\n+\tconst customFilter = nodeDataById.value[input.ids[0]]?.name;",
        "comment_created_at": "2025-06-05T00:57:15+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":8,\"steps\":[{\"text\":\"I'll analyze the changed code in the Canvas.vue file to identify any issues or potential improvements. Let me start by examining the code changes and understanding the context.\",\"toolCalls\":[{\"args\":{\"pattern\":\"**/*.vue\"},\"toolName\":\"listFiles\"}]},{\"text\":\"Let me examine the code changes in the Canvas.vue file to understand what's being added and check for any issues.\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r \\\"filter_executions_by\\\" packages/frontend/editor-ui/src/components/canvas/Canvas.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"Now let's look at the executions route to understand how the filtering is implemented:\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r \\\"executions route\\\" --include=\\\"*.ts\\\" --include=\\\"*.js\\\" .\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"Let's check for any router files related to executions:\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r \\\"executions\\\" --include=\\\"*.ts\\\" --include=\\\"*.js\\\" --include=\\\"*.vue\\\" . | grep -i \\\"route\\\"\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"Let's check the implementation of the onFilterExecutionBy function:\",\"toolCalls\":[{\"args\":{\"command\":\"grep -A 15 \\\"onFilterExecutionBy\\\" packages/frontend/editor-ui/src/components/canvas/Canvas.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"Let's check how the executions view handles the custom_filter parameter:\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r \\\"custom_filter\\\" --include=\\\"*.ts\\\" --include=\\\"*.js\\\" --include=\\\"*.vue\\\" .\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"Let's look at how the WorkflowExecutionsView.vue handles the custom_filter parameter:\",\"toolCalls\":[{\"args\":{\"command\":\"grep -A 10 -B 5 \\\"custom_filter\\\" packages/frontend/editor-ui/src/views/WorkflowExecutionsView.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"Let's check how the FilterExecutionsBy computed property is used:\",\"toolCalls\":[{\"args\":{\"command\":\"grep -r \\\"FilterExecutionsBy\\\" packages/frontend/editor-ui/src/views/WorkflowExecutionsView.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"Let's get more context around how the filter is used:\",\"toolCalls\":[{\"args\":{\"command\":\"grep -A 20 -B 5 \\\"nodesExecuted:\\\" packages/frontend/editor-ui/src/views/WorkflowExecutionsView.vue\"},\"toolName\":\"executeCommand\"}]}]} -->\nMissing validation for nodeDataById.value[input.ids[0]] existence before accessing name property\n\n```suggestion\n+\tconst customFilter = nodeDataById.value[input.ids[0]]?.name || undefined;\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2128792317",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 16036,
        "pr_file": "packages/frontend/editor-ui/src/components/canvas/Canvas.vue",
        "discussion_id": "2127747446",
        "commented_code": "@@ -648,6 +653,16 @@ function onOpenContextMenu(event: MouseEvent, target?: Pick<ContextMenuTarget, '\n \t});\n }\n \n+async function onFilterExecutionBy(input: { ids: string[] }) {\n+\tconst workflowId = route.params.name as string;\n+\tif (!workflowId || !input || !input.ids || input.ids.length === 0) return;\n+\tconst customFilter = nodeDataById.value[input.ids[0]]?.name;",
        "comment_created_at": "2025-06-05T12:56:33+00:00",
        "comment_author": "Alexandero89",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2178044457",
    "pr_number": 16896,
    "pr_file": "packages/frontend/editor-ui/src/components/ParameterInput.vue",
    "created_at": "2025-07-01T16:28:42+00:00",
    "commented_code": "telemetry.track('User set node operation or mode', {\n \t\t\tworkflow_id: workflowsStore.workflowId,\n \t\t\tnode_type: node.value?.type,\n-\t\t\tresource: node.value && node.value.parameters.resource,\n+\t\t\tresource: node.value?.parameters.resource,",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2178044457",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 16896,
        "pr_file": "packages/frontend/editor-ui/src/components/ParameterInput.vue",
        "discussion_id": "2178044457",
        "commented_code": "@@ -931,7 +931,7 @@ function valueChanged(value: NodeParameterValueType | {} | Date) {\n \t\ttelemetry.track('User set node operation or mode', {\n \t\t\tworkflow_id: workflowsStore.workflowId,\n \t\t\tnode_type: node.value?.type,\n-\t\t\tresource: node.value && node.value.parameters.resource,\n+\t\t\tresource: node.value?.parameters.resource,",
        "comment_created_at": "2025-07-01T16:28:42+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "<!-- metadata:{\"confidence\":7,\"steps\":[{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"function useExternalHooks\\\" -n\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"track('User set node operation or mode'\\\" -n packages/frontend/editor-ui/src/components/ParameterInput.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n \\\"node.value..parameters.resource\\\" -n packages/frontend/editor-ui/src/components/ParameterInput.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -n -A 5 -B 5 \\\"resource: node.value?.parameters.resource\\\" packages/frontend/editor-ui/src/components/ParameterInput.vue\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"parameterInput.mount\\\" -n\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"sed -n '1,120p' packages/frontend/editor-ui/src/composables/useExternalHooks.ts\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"interface INodeUi\\\" -n\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"sed -n '160,200p' packages/frontend/editor-ui/src/Interface.ts\"},\"toolName\":\"executeCommand\"}]},{\"text\":\"\",\"toolCalls\":[{\"args\":{\"command\":\"grep -R \\\"parameterInput.mount'\\\" -n\"},\"toolName\":\"executeCommand\"}]}]} -->\nIf node.value exists but node.value.parameters is undefined, accessing .resource will throw. Use optional chaining for parameters as well.\n\n```suggestion\n\t\t\tresource: node.value?.parameters?.resource,\n```",
        "pr_file_module": null
      }
    ]
  }
]