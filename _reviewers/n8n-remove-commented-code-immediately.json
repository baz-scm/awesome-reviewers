[
  {
    "discussion_id": "2046665014",
    "pr_number": 14675,
    "pr_file": "packages/editor-ui/src/composables/useDocumentTitle.ts",
    "created_at": "2025-04-16T10:49:34+00:00",
    "commented_code": "-import { useSettingsStore } from '@/stores/settings.store';\n-\n const DEFAULT_TITLE = 'Workflow Automation';\n \n export function useDocumentTitle() {\n-\tconst settingsStore = useSettingsStore();\n-\tconst { releaseChannel } = settingsStore.settings;\n-\tconst suffix =\n-\t\t!releaseChannel || releaseChannel === 'stable' ? 'n8n' : `n8n[${releaseChannel.toUpperCase()}]`;\n+\t// const settingsStore = useSettingsStore();",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2046665014",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 14675,
        "pr_file": "packages/editor-ui/src/composables/useDocumentTitle.ts",
        "discussion_id": "2046665014",
        "commented_code": "@@ -1,16 +1,12 @@\n-import { useSettingsStore } from '@/stores/settings.store';\n-\n const DEFAULT_TITLE = 'Workflow Automation';\n \n export function useDocumentTitle() {\n-\tconst settingsStore = useSettingsStore();\n-\tconst { releaseChannel } = settingsStore.settings;\n-\tconst suffix =\n-\t\t!releaseChannel || releaseChannel === 'stable' ? 'n8n' : `n8n[${releaseChannel.toUpperCase()}]`;\n+\t// const settingsStore = useSettingsStore();",
        "comment_created_at": "2025-04-16T10:49:34+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "Commented-out code should be removed rather than committed",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2046665091",
    "pr_number": 14675,
    "pr_file": "packages/cli/src/services/user.service.ts",
    "created_at": "2025-04-16T10:49:37+00:00",
    "commented_code": "error: '',\n \t\t\t\t};\n \n-\t\t\t\ttry {\n-\t\t\t\t\tconst result = await this.mailer.invite({\n-\t\t\t\t\t\temail,\n-\t\t\t\t\t\tinviteAcceptUrl,\n-\t\t\t\t\t});\n-\t\t\t\t\tif (result.emailSent) {\n-\t\t\t\t\t\tinvitedUser.user.emailSent = true;\n-\t\t\t\t\t\tdelete invitedUser.user?.inviteAcceptUrl;\n-\n-\t\t\t\t\t\tthis.eventService.emit('user-transactional-email-sent', {\n-\t\t\t\t\t\t\tuserId: id,\n-\t\t\t\t\t\t\tmessageType: 'New user invite',\n-\t\t\t\t\t\t\tpublicApi: false,\n-\t\t\t\t\t\t});\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tthis.eventService.emit('user-invited', {\n-\t\t\t\t\t\tuser: owner,\n-\t\t\t\t\t\ttargetUserId: Object.values(toInviteUsers),\n-\t\t\t\t\t\tpublicApi: false,\n-\t\t\t\t\t\temailSent: result.emailSent,\n-\t\t\t\t\t\tinviteeRole: role, // same role for all invited users\n-\t\t\t\t\t});\n-\t\t\t\t} catch (e) {\n-\t\t\t\t\tif (e instanceof Error) {\n-\t\t\t\t\t\tthis.eventService.emit('email-failed', {\n-\t\t\t\t\t\t\tuser: owner,\n-\t\t\t\t\t\t\tmessageType: 'New user invite',\n-\t\t\t\t\t\t\tpublicApi: false,\n-\t\t\t\t\t\t});\n-\t\t\t\t\t\tthis.logger.error('Failed to send email', {\n-\t\t\t\t\t\t\tuserId: owner.id,\n-\t\t\t\t\t\t\tinviteAcceptUrl,\n-\t\t\t\t\t\t\temail,\n-\t\t\t\t\t\t});\n-\t\t\t\t\t\tinvitedUser.error = e.message;\n-\t\t\t\t\t}\n-\t\t\t\t}\n+\t\t\t\tthis.eventService.emit('user-invited', {\n+\t\t\t\t\tuser: owner,\n+\t\t\t\t\ttargetUserId: Object.values(toInviteUsers),\n+\t\t\t\t\tpublicApi: false,\n+\t\t\t\t\temailSent: false,\n+\t\t\t\t\tinviteeRole: role, // same role for all invited users\n+\t\t\t\t});\n+\n+\t\t\t\t// try {",
    "repo_full_name": "n8n-io/n8n",
    "discussion_comments": [
      {
        "comment_id": "2046665091",
        "repo_full_name": "n8n-io/n8n",
        "pr_number": 14675,
        "pr_file": "packages/cli/src/services/user.service.ts",
        "discussion_id": "2046665091",
        "commented_code": "@@ -135,44 +135,45 @@ export class UserService {\n \t\t\t\t\terror: '',\n \t\t\t\t};\n \n-\t\t\t\ttry {\n-\t\t\t\t\tconst result = await this.mailer.invite({\n-\t\t\t\t\t\temail,\n-\t\t\t\t\t\tinviteAcceptUrl,\n-\t\t\t\t\t});\n-\t\t\t\t\tif (result.emailSent) {\n-\t\t\t\t\t\tinvitedUser.user.emailSent = true;\n-\t\t\t\t\t\tdelete invitedUser.user?.inviteAcceptUrl;\n-\n-\t\t\t\t\t\tthis.eventService.emit('user-transactional-email-sent', {\n-\t\t\t\t\t\t\tuserId: id,\n-\t\t\t\t\t\t\tmessageType: 'New user invite',\n-\t\t\t\t\t\t\tpublicApi: false,\n-\t\t\t\t\t\t});\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tthis.eventService.emit('user-invited', {\n-\t\t\t\t\t\tuser: owner,\n-\t\t\t\t\t\ttargetUserId: Object.values(toInviteUsers),\n-\t\t\t\t\t\tpublicApi: false,\n-\t\t\t\t\t\temailSent: result.emailSent,\n-\t\t\t\t\t\tinviteeRole: role, // same role for all invited users\n-\t\t\t\t\t});\n-\t\t\t\t} catch (e) {\n-\t\t\t\t\tif (e instanceof Error) {\n-\t\t\t\t\t\tthis.eventService.emit('email-failed', {\n-\t\t\t\t\t\t\tuser: owner,\n-\t\t\t\t\t\t\tmessageType: 'New user invite',\n-\t\t\t\t\t\t\tpublicApi: false,\n-\t\t\t\t\t\t});\n-\t\t\t\t\t\tthis.logger.error('Failed to send email', {\n-\t\t\t\t\t\t\tuserId: owner.id,\n-\t\t\t\t\t\t\tinviteAcceptUrl,\n-\t\t\t\t\t\t\temail,\n-\t\t\t\t\t\t});\n-\t\t\t\t\t\tinvitedUser.error = e.message;\n-\t\t\t\t\t}\n-\t\t\t\t}\n+\t\t\t\tthis.eventService.emit('user-invited', {\n+\t\t\t\t\tuser: owner,\n+\t\t\t\t\ttargetUserId: Object.values(toInviteUsers),\n+\t\t\t\t\tpublicApi: false,\n+\t\t\t\t\temailSent: false,\n+\t\t\t\t\tinviteeRole: role, // same role for all invited users\n+\t\t\t\t});\n+\n+\t\t\t\t// try {",
        "comment_created_at": "2025-04-16T10:49:37+00:00",
        "comment_author": "cubic-dev-ai[bot]",
        "comment_body": "Large block of commented-out code instead of proper removal reduces maintainability",
        "pr_file_module": null
      }
    ]
  }
]