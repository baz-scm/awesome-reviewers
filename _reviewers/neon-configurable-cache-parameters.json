[
  {
    "discussion_id": "2100490664",
    "pr_number": 11990,
    "pr_file": "pageserver/src/basebackup_cache.rs",
    "created_at": "2025-05-21T14:47:22+00:00",
    "commented_code": "encoder.shutdown().await?;\n \n+        self.data_cache\n+            .lock()\n+            .await\n+            .insert((tenant_shard_id.tenant_id, timeline_id), lsn);",
    "repo_full_name": "neondatabase/neon",
    "discussion_comments": [
      {
        "comment_id": "2100490664",
        "repo_full_name": "neondatabase/neon",
        "pr_number": 11990,
        "pr_file": "pageserver/src/basebackup_cache.rs",
        "discussion_id": "2100490664",
        "commented_code": "@@ -173,6 +224,11 @@ impl BasebackupCache {\n \n         encoder.shutdown().await?;\n \n+        self.data_cache\n+            .lock()\n+            .await\n+            .insert((tenant_shard_id.tenant_id, timeline_id), lsn);",
        "comment_created_at": "2025-05-21T14:47:22+00:00",
        "comment_author": "DimasKovas",
        "comment_body": "What if it already exists?\r\n\r\nIn that case we will forget that we have another entry and will never remove it.\r\n\r\nI guess we may want to store an array as an value,\r\n\r\nor, as an alternative, if we have `tokio::sync::mpsc::unbounded_channel` for deleting entries (and drain it in `select!`), then we may insert a new entry into the `data_cache` and add previous LSN (if existed) to `deletion_queue`, so the background task will delete it\r\n\r\nThe second option is probably simpler (don't need to keep an array)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2086253219",
    "pr_number": 11889,
    "pr_file": "pageserver/src/tenant/timeline.rs",
    "created_at": "2025-05-13T08:34:45+00:00",
    "commented_code": "use crate::walingest::WalLagCooldown;\n use crate::{ZERO_PAGE, task_mgr, walredo};\n \n+const REL_SIZE_CACHE_CAPACITY: usize = 1024;",
    "repo_full_name": "neondatabase/neon",
    "discussion_comments": [
      {
        "comment_id": "2086253219",
        "repo_full_name": "neondatabase/neon",
        "pr_number": 11889,
        "pr_file": "pageserver/src/tenant/timeline.rs",
        "discussion_id": "2086253219",
        "commented_code": "@@ -132,6 +133,8 @@ use crate::virtual_file::{MaybeFatalIo, VirtualFile};\n use crate::walingest::WalLagCooldown;\n use crate::{ZERO_PAGE, task_mgr, walredo};\n \n+const REL_SIZE_CACHE_CAPACITY: usize = 1024;",
        "comment_created_at": "2025-05-13T08:34:45+00:00",
        "comment_author": "VladLazar",
        "comment_body": "I don't have good intuition on what the right size for this cache is. Therefore, I'd make this a tenant config since those are configurable at run-time. The data structures supports capacity resizing via `resize_capacity`.\r\n\r\nThis would give us a tool to address replicas with slow get pages due to rel size cache churn.",
        "pr_file_module": null
      },
      {
        "comment_id": "2087365952",
        "repo_full_name": "neondatabase/neon",
        "pr_number": 11889,
        "pr_file": "pageserver/src/tenant/timeline.rs",
        "discussion_id": "2086253219",
        "commented_code": "@@ -132,6 +133,8 @@ use crate::virtual_file::{MaybeFatalIo, VirtualFile};\n use crate::walingest::WalLagCooldown;\n use crate::{ZERO_PAGE, task_mgr, walredo};\n \n+const REL_SIZE_CACHE_CAPACITY: usize = 1024;",
        "comment_created_at": "2025-05-13T17:56:33+00:00",
        "comment_author": "knizhnik",
        "comment_body": "Will do, as I wrote - this constant is just temporary thing to illustrate approach. Definitely it needs to be replaced with parameter. I just didn't want to cut&paste a lot of boilerplate code before there is some consensus of how to solve this issue (if my proposal with two cache is accepted).",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2091602724",
    "pr_number": 11889,
    "pr_file": "pageserver/src/tenant/timeline.rs",
    "created_at": "2025-05-15T16:46:43+00:00",
    "commented_code": "ancestor_gc_info.insert_child(timeline_id, metadata.ancestor_lsn(), is_offloaded);\n         }\n \n+        let relsize_snapshot_cache_capacity = {\n+            let loaded_tenant_conf = tenant_conf.load();\n+            loaded_tenant_conf\n+                .tenant_conf\n+                .relsize_snapshot_cache_capacity\n+                .unwrap_or(conf.default_tenant_conf.relsize_snapshot_cache_capacity)\n+        };",
    "repo_full_name": "neondatabase/neon",
    "discussion_comments": [
      {
        "comment_id": "2091602724",
        "repo_full_name": "neondatabase/neon",
        "pr_number": 11889,
        "pr_file": "pageserver/src/tenant/timeline.rs",
        "discussion_id": "2091602724",
        "commented_code": "@@ -2878,6 +2870,14 @@ impl Timeline {\n             ancestor_gc_info.insert_child(timeline_id, metadata.ancestor_lsn(), is_offloaded);\n         }\n \n+        let relsize_snapshot_cache_capacity = {\n+            let loaded_tenant_conf = tenant_conf.load();\n+            loaded_tenant_conf\n+                .tenant_conf\n+                .relsize_snapshot_cache_capacity\n+                .unwrap_or(conf.default_tenant_conf.relsize_snapshot_cache_capacity)\n+        };",
        "comment_created_at": "2025-05-15T16:46:43+00:00",
        "comment_author": "VladLazar",
        "comment_body": "Please plug into `Timeline::tenant_conf_updated` and resize the cache when the config changes.\r\nOtherwise, the config change still requires a restart.",
        "pr_file_module": null
      },
      {
        "comment_id": "2091771597",
        "repo_full_name": "neondatabase/neon",
        "pr_number": 11889,
        "pr_file": "pageserver/src/tenant/timeline.rs",
        "discussion_id": "2091602724",
        "commented_code": "@@ -2878,6 +2870,14 @@ impl Timeline {\n             ancestor_gc_info.insert_child(timeline_id, metadata.ancestor_lsn(), is_offloaded);\n         }\n \n+        let relsize_snapshot_cache_capacity = {\n+            let loaded_tenant_conf = tenant_conf.load();\n+            loaded_tenant_conf\n+                .tenant_conf\n+                .relsize_snapshot_cache_capacity\n+                .unwrap_or(conf.default_tenant_conf.relsize_snapshot_cache_capacity)\n+        };",
        "comment_created_at": "2025-05-15T18:41:21+00:00",
        "comment_author": "knizhnik",
        "comment_body": "Done",
        "pr_file_module": null
      },
      {
        "comment_id": "2091786805",
        "repo_full_name": "neondatabase/neon",
        "pr_number": 11889,
        "pr_file": "pageserver/src/tenant/timeline.rs",
        "discussion_id": "2091602724",
        "commented_code": "@@ -2878,6 +2870,14 @@ impl Timeline {\n             ancestor_gc_info.insert_child(timeline_id, metadata.ancestor_lsn(), is_offloaded);\n         }\n \n+        let relsize_snapshot_cache_capacity = {\n+            let loaded_tenant_conf = tenant_conf.load();\n+            loaded_tenant_conf\n+                .tenant_conf\n+                .relsize_snapshot_cache_capacity\n+                .unwrap_or(conf.default_tenant_conf.relsize_snapshot_cache_capacity)\n+        };",
        "comment_created_at": "2025-05-15T18:52:03+00:00",
        "comment_author": "knizhnik",
        "comment_body": "Done",
        "pr_file_module": null
      }
    ]
  }
]