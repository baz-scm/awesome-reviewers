[
  {
    "discussion_id": "1394949958",
    "pr_number": 12753,
    "pr_file": "packages/core/injector/internal-core-module/internal-core-module-factory.ts",
    "created_at": "2023-11-15T22:51:02+00:00",
    "commented_code": "return InternalCoreModule.register([\n       {\n         provide: ExternalContextCreator,\n-        useValue: ExternalContextCreator.fromContainer(container),\n+        useFactory: () => ExternalContextCreator.fromContainer(container),\n       },\n       {\n         provide: ModulesContainer,\n-        useValue: container.getModules(),\n+        useFactory: () => container.getModules(),\n       },\n       {\n         provide: HttpAdapterHost,\n-        useValue: httpAdapterHost,\n+        useFactory: () => httpAdapterHost,\n       },\n       {\n         provide: LazyModuleLoader,\n         useFactory: lazyModuleLoaderFactory,\n       },\n       {\n         provide: SerializedGraph,\n-        useValue: container.serializedGraph,\n+        useFactory: () => container.serializedGraph,",
    "repo_full_name": "nestjs/nest",
    "discussion_comments": [
      {
        "comment_id": "1394949958",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12753,
        "pr_file": "packages/core/injector/internal-core-module/internal-core-module-factory.ts",
        "discussion_id": "1394949958",
        "commented_code": "@@ -45,23 +45,23 @@ export class InternalCoreModuleFactory {\n     return InternalCoreModule.register([\n       {\n         provide: ExternalContextCreator,\n-        useValue: ExternalContextCreator.fromContainer(container),\n+        useFactory: () => ExternalContextCreator.fromContainer(container),\n       },\n       {\n         provide: ModulesContainer,\n-        useValue: container.getModules(),\n+        useFactory: () => container.getModules(),\n       },\n       {\n         provide: HttpAdapterHost,\n-        useValue: httpAdapterHost,\n+        useFactory: () => httpAdapterHost,\n       },\n       {\n         provide: LazyModuleLoader,\n         useFactory: lazyModuleLoaderFactory,\n       },\n       {\n         provide: SerializedGraph,\n-        useValue: container.serializedGraph,\n+        useFactory: () => container.serializedGraph,",
        "comment_created_at": "2023-11-15T22:51:02+00:00",
        "comment_author": "micalevisk",
        "comment_body": "I notice another good side-effect on changing `ExternalContextCreator` and `SerializedGraph` providers to factory:\r\n\r\n`SerializedGraph#toJSON` was called 6x in a very simple nestjs app before these changes, which I think it was useless because it was only invoked due to the name `toJSON` being known as a special method for `JSON.stringify` (used by `stringify` from `fast-safe-stringify`)\r\n\r\n:partying_face: ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1397170546",
    "pr_number": 12753,
    "pr_file": "packages/platform-express/multer/multer.module.ts",
    "created_at": "2023-11-17T12:03:10+00:00",
    "commented_code": "return {\n       module: MulterModule,\n       providers: [\n-        { provide: MULTER_MODULE_OPTIONS, useValue: options },\n+        // useFactory is for performance reasons\n+        // see more: https://github.com/nestjs/nest/issues/12738#issuecomment-1810987001\n+        { provide: MULTER_MODULE_OPTIONS, useFactory: () => options },",
    "repo_full_name": "nestjs/nest",
    "discussion_comments": [
      {
        "comment_id": "1397170546",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12753,
        "pr_file": "packages/platform-express/multer/multer.module.ts",
        "discussion_id": "1397170546",
        "commented_code": "@@ -17,7 +17,9 @@ export class MulterModule {\n     return {\n       module: MulterModule,\n       providers: [\n-        { provide: MULTER_MODULE_OPTIONS, useValue: options },\n+        // useFactory is for performance reasons\n+        // see more: https://github.com/nestjs/nest/issues/12738#issuecomment-1810987001\n+        { provide: MULTER_MODULE_OPTIONS, useFactory: () => options },",
        "comment_created_at": "2023-11-17T12:03:10+00:00",
        "comment_author": "kamilmysliwiec",
        "comment_body": "With this change, you won't be able to use multiple multer modules in your project (due to equal hash tokens).",
        "pr_file_module": null
      },
      {
        "comment_id": "1397210914",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12753,
        "pr_file": "packages/platform-express/multer/multer.module.ts",
        "discussion_id": "1397170546",
        "commented_code": "@@ -17,7 +17,9 @@ export class MulterModule {\n     return {\n       module: MulterModule,\n       providers: [\n-        { provide: MULTER_MODULE_OPTIONS, useValue: options },\n+        // useFactory is for performance reasons\n+        // see more: https://github.com/nestjs/nest/issues/12738#issuecomment-1810987001\n+        { provide: MULTER_MODULE_OPTIONS, useFactory: () => options },",
        "comment_created_at": "2023-11-17T12:25:10+00:00",
        "comment_author": "H4ad",
        "comment_body": "Yeah, but if the user uses https://docs.nestjs.com/techniques/file-upload#async-configuration, they already have this effect.\r\n\r\nAnyone that does not use `useValue` will have this same issue, so I think we can consider this a `minor` if we want to release a safer version.\r\n\r\nMaybe we can study emit warnings when we detect two modules duplicated (with same hash), so the users can be aware of this behavior.\r\n\r\nBut this could be better in a follow-up PR, what do you think?",
        "pr_file_module": null
      },
      {
        "comment_id": "1397213576",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12753,
        "pr_file": "packages/platform-express/multer/multer.module.ts",
        "discussion_id": "1397170546",
        "commented_code": "@@ -17,7 +17,9 @@ export class MulterModule {\n     return {\n       module: MulterModule,\n       providers: [\n-        { provide: MULTER_MODULE_OPTIONS, useValue: options },\n+        // useFactory is for performance reasons\n+        // see more: https://github.com/nestjs/nest/issues/12738#issuecomment-1810987001\n+        { provide: MULTER_MODULE_OPTIONS, useFactory: () => options },",
        "comment_created_at": "2023-11-17T12:27:07+00:00",
        "comment_author": "H4ad",
        "comment_body": "Actually, the https://github.com/nestjs/nest/pull/12753/files/8a2d19db5a2bf3c9026139cef9f884bb95b0100c#diff-cfbc60d072c116c16132ec78536eae4514513069d6e2020ab1444e41175ad5f1R25 already makes the module be unique.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1393188932",
    "pr_number": 12739,
    "pr_file": "packages/core/injector/module-token-factory.ts",
    "created_at": "2023-11-14T19:53:18+00:00",
    "commented_code": "module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
    "repo_full_name": "nestjs/nest",
    "discussion_comments": [
      {
        "comment_id": "1393188932",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T19:53:18+00:00",
        "comment_author": "micalevisk",
        "comment_body": "I guess we can also suggest them to use factory providers over value providers",
        "pr_file_module": null
      },
      {
        "comment_id": "1393189625",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T19:53:54+00:00",
        "comment_author": "micalevisk",
        "comment_body": "and I'm not sure if the word _object_ here would help the end user. But yeah, this is not a log to the app, it's an internal one",
        "pr_file_module": null
      },
      {
        "comment_id": "1393204141",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T20:05:30+00:00",
        "comment_author": "H4ad",
        "comment_body": "The issue could be related to the `Factory Providers` but can be also some issue on `exports` or `provide`.\r\n\r\n> and I'm not sure if the word object here would help the end user. But yeah, this is not a log to the app, it's an internal one\r\n\r\nI don't know a better term to describe, maybe `consider reduce the size of the module?`\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1393249178",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T20:37:27+00:00",
        "comment_author": "Tony133",
        "comment_body": "Personally, regarding the last line `\"More details: https://github.com/nestjs/nest/issues/12738\"` if we want to put a reference maybe I would make a comment above. 🙂",
        "pr_file_module": null
      },
      {
        "comment_id": "1393277790",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T20:58:24+00:00",
        "comment_author": "H4ad",
        "comment_body": "@Tony133 what do you mean?",
        "pr_file_module": null
      },
      {
        "comment_id": "1393287466",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T21:04:36+00:00",
        "comment_author": "Tony133",
        "comment_body": "> @Tony133 what do you mean?\r\n\r\nSomething like this:\r\n\r\n```ts\r\nif (timeSpentInMs > 10) {\r\n     // For more details see here: https://github.com/nestjs/nest/issues/12738\r\n      process.emitWarning(\r\n        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\r\n          2,\r\n        )}ms to serialize, consider reduce the size of the object.`,\r\n   )\r\n}\r\n\r\n```\r\nAdd a comment above `process.emitWarning()` 🙂\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1393306091",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T21:19:18+00:00",
        "comment_author": "jmcdo29",
        "comment_body": "I'd much rather we direct the user to the issue rather than have them dig into the source code to find the issue reference ",
        "pr_file_module": null
      },
      {
        "comment_id": "1393314032",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T21:24:10+00:00",
        "comment_author": "Tony133",
        "comment_body": "it's just an idea. 🙂\r\nI don't remember if we have already done something similar somewhere ? do you remember ? so as to be aligned 😄",
        "pr_file_module": null
      },
      {
        "comment_id": "1393362444",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T22:05:07+00:00",
        "comment_author": "jmcdo29",
        "comment_body": "[This wouldn't be the first time we've had a link in the exception](https://github.com/nestjs/nest/blob/ef5344826f23b5377a2f2599cf9efda0303e1f33/packages/core/errors/messages.ts#L163)",
        "pr_file_module": null
      },
      {
        "comment_id": "1393363519",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T22:06:07+00:00",
        "comment_author": "jmcdo29",
        "comment_body": "And I'm certain we've linked to issues from within our docs. If we _really_ don't want to link to the issue directly, then we should make a new section of the FAQ > Common Errors for this",
        "pr_file_module": null
      },
      {
        "comment_id": "1393373845",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-14T22:16:38+00:00",
        "comment_author": "Tony133",
        "comment_body": "I think documenting this in the documentation is a great idea too 😉👍, of course you have to figure out how to handle this part in the documentation 😄 , maybe to create a small section inside common errors ? 🤔",
        "pr_file_module": null
      },
      {
        "comment_id": "1394840569",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-15T21:42:58+00:00",
        "comment_author": "H4ad",
        "comment_body": "Updated the message to be a little bit more generic and more assertive about the problem.",
        "pr_file_module": null
      },
      {
        "comment_id": "1394872566",
        "repo_full_name": "nestjs/nest",
        "pr_number": 12739,
        "pr_file": "packages/core/injector/module-token-factory.ts",
        "discussion_id": "1393188932",
        "commented_code": "@@ -26,7 +27,17 @@ export class ModuleTokenFactory {\n       module: this.getModuleName(metatype),\n       dynamic: dynamicModuleMetadata,\n     };\n+    const start = performance.now();\n     const opaqueTokenString = this.getStringifiedOpaqueToken(opaqueToken);\n+    const timeSpentInMs = performance.now() - start;\n+\n+    if (timeSpentInMs > 10) {\n+      process.emitWarning(\n+        `The module \"${opaqueToken.module}\" took ${timeSpentInMs.toFixed(\n+          2,\n+        )}ms to serialize, consider reduce the size of the object. More details: https://github.com/nestjs/nest/issues/12738`,",
        "comment_created_at": "2023-11-15T21:58:53+00:00",
        "comment_author": "Tony133",
        "comment_body": "Using the Logger is much better, I like it 😉👍",
        "pr_file_module": null
      }
    ]
  }
]