[
  {
    "discussion_id": "2028236031",
    "pr_number": 14993,
    "pr_file": "handler-proxy/src/main/java/io/netty/handler/proxy/ProxyHandler.java",
    "created_at": "2025-04-04T07:04:35+00:00",
    "commented_code": "return ctx.executor();\n         }\n     }\n+\n+    public final void setDestinationAddress(SocketAddress destinationAddress) {",
    "repo_full_name": "netty/netty",
    "discussion_comments": [
      {
        "comment_id": "2028236031",
        "repo_full_name": "netty/netty",
        "pr_number": 14993,
        "pr_file": "handler-proxy/src/main/java/io/netty/handler/proxy/ProxyHandler.java",
        "discussion_id": "2028236031",
        "commented_code": "@@ -456,4 +461,9 @@ protected EventExecutor executor() {\n             return ctx.executor();\n         }\n     }\n+\n+    public final void setDestinationAddress(SocketAddress destinationAddress) {",
        "comment_created_at": "2025-04-04T07:04:35+00:00",
        "comment_author": "normanmaurer",
        "comment_body": "Also add javadocs.",
        "pr_file_module": null
      },
      {
        "comment_id": "2030057771",
        "repo_full_name": "netty/netty",
        "pr_number": 14993,
        "pr_file": "handler-proxy/src/main/java/io/netty/handler/proxy/ProxyHandler.java",
        "discussion_id": "2028236031",
        "commented_code": "@@ -456,4 +461,9 @@ protected EventExecutor executor() {\n             return ctx.executor();\n         }\n     }\n+\n+    public final void setDestinationAddress(SocketAddress destinationAddress) {",
        "comment_created_at": "2025-04-06T06:50:20+00:00",
        "comment_author": "imz87",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1680949291",
    "pr_number": 14160,
    "pr_file": "codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResponseDecoder.java",
    "created_at": "2024-07-17T12:15:51+00:00",
    "commented_code": "import static io.netty.util.internal.ObjectUtil.checkNotNull;\n \n-abstract class DnsResponseDecoder<A extends SocketAddress> {\n+public abstract class DnsResponseDecoder<A extends SocketAddress> {",
    "repo_full_name": "netty/netty",
    "discussion_comments": [
      {
        "comment_id": "1680949291",
        "repo_full_name": "netty/netty",
        "pr_number": 14160,
        "pr_file": "codec-dns/src/main/java/io/netty/handler/codec/dns/DnsResponseDecoder.java",
        "discussion_id": "1680949291",
        "commented_code": "@@ -22,18 +22,18 @@\n \n import static io.netty.util.internal.ObjectUtil.checkNotNull;\n \n-abstract class DnsResponseDecoder<A extends SocketAddress> {\n+public abstract class DnsResponseDecoder<A extends SocketAddress> {",
        "comment_created_at": "2024-07-17T12:15:51+00:00",
        "comment_author": "normanmaurer",
        "comment_body": "As this is now public please add javadocs",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1680949360",
    "pr_number": 14160,
    "pr_file": "codec-dns/src/main/java/io/netty/handler/codec/dns/DnsQueryEncoder.java",
    "created_at": "2024-07-17T12:15:55+00:00",
    "commented_code": "import static io.netty.util.internal.ObjectUtil.checkNotNull;\n \n-final class DnsQueryEncoder {\n+public final class DnsQueryEncoder {",
    "repo_full_name": "netty/netty",
    "discussion_comments": [
      {
        "comment_id": "1680949360",
        "repo_full_name": "netty/netty",
        "pr_number": 14160,
        "pr_file": "codec-dns/src/main/java/io/netty/handler/codec/dns/DnsQueryEncoder.java",
        "discussion_id": "1680949360",
        "commented_code": "@@ -19,21 +19,21 @@\n \n import static io.netty.util.internal.ObjectUtil.checkNotNull;\n \n-final class DnsQueryEncoder {\n+public final class DnsQueryEncoder {",
        "comment_created_at": "2024-07-17T12:15:55+00:00",
        "comment_author": "normanmaurer",
        "comment_body": "As this is now public please add javadocs",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1256261155",
    "pr_number": 13473,
    "pr_file": "codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java",
    "created_at": "2023-07-07T18:18:36+00:00",
    "commented_code": "return pathEndIdx;\n     }\n \n-    private static Map<String, List<String>> decodeParams(String s, int from, Charset charset, int paramsLimit,\n-                                                          boolean semicolonIsNormalChar) {\n-        int len = s.length();\n+    private static String parsableUri(URI uri) {\n+        String rawPath = uri.getRawPath();\n+        if (rawPath == null) {\n+            rawPath = EMPTY_STRING;\n+        }\n+        String rawQuery = uri.getRawQuery();\n+        // Also take care of cut of things like \"http://localhost\"\n+        return rawQuery == null? rawPath : rawPath + '?' + rawQuery;\n+    }\n+\n+    private static int pathEndIdx(URI uri) {\n+        return uri.getRawPath().length();\n+    }\n+\n+    public static int getDefaultMaxParams() {\n+        return DEFAULT_MAX_PARAMS;\n+    }\n+\n+    public static boolean decodeParams(URI uri, Charset charset, int maxParams, boolean semicolonIsNormalChar,",
    "repo_full_name": "netty/netty",
    "discussion_comments": [
      {
        "comment_id": "1256261155",
        "repo_full_name": "netty/netty",
        "pr_number": 13473,
        "pr_file": "codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java",
        "discussion_id": "1256261155",
        "commented_code": "@@ -223,55 +218,176 @@ private int pathEndIdx() {\n         return pathEndIdx;\n     }\n \n-    private static Map<String, List<String>> decodeParams(String s, int from, Charset charset, int paramsLimit,\n-                                                          boolean semicolonIsNormalChar) {\n-        int len = s.length();\n+    private static String parsableUri(URI uri) {\n+        String rawPath = uri.getRawPath();\n+        if (rawPath == null) {\n+            rawPath = EMPTY_STRING;\n+        }\n+        String rawQuery = uri.getRawQuery();\n+        // Also take care of cut of things like \"http://localhost\"\n+        return rawQuery == null? rawPath : rawPath + '?' + rawQuery;\n+    }\n+\n+    private static int pathEndIdx(URI uri) {\n+        return uri.getRawPath().length();\n+    }\n+\n+    public static int getDefaultMaxParams() {\n+        return DEFAULT_MAX_PARAMS;\n+    }\n+\n+    public static boolean decodeParams(URI uri, Charset charset, int maxParams, boolean semicolonIsNormalChar,",
        "comment_created_at": "2023-07-07T18:18:36+00:00",
        "comment_author": "chrisvest",
        "comment_body": "These methods should have some javadocs to explain them.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2058996390",
    "pr_number": 15005,
    "pr_file": "codec-compression/src/main/java/io/netty/handler/codec/compression/ZlibCodecFactory.java",
    "created_at": "2025-04-24T18:16:58+00:00",
    "commented_code": "}\n     }\n \n+    @Deprecated\n     public static ZlibDecoder newZlibDecoder() {\n+        return newZlibDecoder(0);\n+    }\n+\n+    public static ZlibDecoder newZlibDecoder(int maxAllocation) {",
    "repo_full_name": "netty/netty",
    "discussion_comments": [
      {
        "comment_id": "2058996390",
        "repo_full_name": "netty/netty",
        "pr_number": 15005,
        "pr_file": "codec-compression/src/main/java/io/netty/handler/codec/compression/ZlibCodecFactory.java",
        "discussion_id": "2058996390",
        "commented_code": "@@ -104,27 +104,42 @@ public static ZlibEncoder newZlibEncoder(int compressionLevel, int windowBits, i\n         }\n     }\n \n+    @Deprecated\n     public static ZlibDecoder newZlibDecoder() {\n+        return newZlibDecoder(0);\n+    }\n+\n+    public static ZlibDecoder newZlibDecoder(int maxAllocation) {",
        "comment_created_at": "2025-04-24T18:16:58+00:00",
        "comment_author": "chrisvest",
        "comment_body": "Please add javadocs, here and elsewhere, that explain the parameters.",
        "pr_file_module": null
      },
      {
        "comment_id": "2059132279",
        "repo_full_name": "netty/netty",
        "pr_number": 15005,
        "pr_file": "codec-compression/src/main/java/io/netty/handler/codec/compression/ZlibCodecFactory.java",
        "discussion_id": "2058996390",
        "commented_code": "@@ -104,27 +104,42 @@ public static ZlibEncoder newZlibEncoder(int compressionLevel, int windowBits, i\n         }\n     }\n \n+    @Deprecated\n     public static ZlibDecoder newZlibDecoder() {\n+        return newZlibDecoder(0);\n+    }\n+\n+    public static ZlibDecoder newZlibDecoder(int maxAllocation) {",
        "comment_created_at": "2025-04-24T19:55:23+00:00",
        "comment_author": "idelpivnitskiy",
        "comment_body": "+1, please also add `@deprecated` javadoc tag where necessary with explanation what users should use instead of the deprecated methods",
        "pr_file_module": null
      },
      {
        "comment_id": "2063539787",
        "repo_full_name": "netty/netty",
        "pr_number": 15005,
        "pr_file": "codec-compression/src/main/java/io/netty/handler/codec/compression/ZlibCodecFactory.java",
        "discussion_id": "2058996390",
        "commented_code": "@@ -104,27 +104,42 @@ public static ZlibEncoder newZlibEncoder(int compressionLevel, int windowBits, i\n         }\n     }\n \n+    @Deprecated\n     public static ZlibDecoder newZlibDecoder() {\n+        return newZlibDecoder(0);\n+    }\n+\n+    public static ZlibDecoder newZlibDecoder(int maxAllocation) {",
        "comment_created_at": "2025-04-28T12:19:10+00:00",
        "comment_author": "DeviLab",
        "comment_body": "Added to every `newZlibDecoder` method",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2059294061",
    "pr_number": 15005,
    "pr_file": "codec-http2/src/main/java/io/netty/handler/codec/http2/DelegatingDecompressorFrameListener.java",
    "created_at": "2025-04-24T21:52:14+00:00",
    "commented_code": "private final boolean strict;\n     private boolean flowControllerInitialized;\n     private final Http2Connection.PropertyKey propertyKey;\n+    private final int maxAllocation;\n \n+    @Deprecated\n     public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener) {\n-        this(connection, listener, true);\n+        this(connection, listener, 0);\n     }\n \n     public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener,\n-                    boolean strict) {\n+                                               int maxAllocation) {\n+        this(connection, listener, true, maxAllocation);\n+    }\n+\n+    @Deprecated\n+    public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener,\n+                                               boolean strict) {\n+        this(connection, listener, strict, 0);\n+    }\n+\n+    public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener,",
    "repo_full_name": "netty/netty",
    "discussion_comments": [
      {
        "comment_id": "2059294061",
        "repo_full_name": "netty/netty",
        "pr_number": 15005,
        "pr_file": "codec-http2/src/main/java/io/netty/handler/codec/http2/DelegatingDecompressorFrameListener.java",
        "discussion_id": "2059294061",
        "commented_code": "@@ -52,16 +52,30 @@ public class DelegatingDecompressorFrameListener extends Http2FrameListenerDecor\n     private final boolean strict;\n     private boolean flowControllerInitialized;\n     private final Http2Connection.PropertyKey propertyKey;\n+    private final int maxAllocation;\n \n+    @Deprecated\n     public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener) {\n-        this(connection, listener, true);\n+        this(connection, listener, 0);\n     }\n \n     public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener,\n-                    boolean strict) {\n+                                               int maxAllocation) {\n+        this(connection, listener, true, maxAllocation);\n+    }\n+\n+    @Deprecated\n+    public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener,\n+                                               boolean strict) {\n+        this(connection, listener, strict, 0);\n+    }\n+\n+    public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener,",
        "comment_created_at": "2025-04-24T21:52:14+00:00",
        "comment_author": "idelpivnitskiy",
        "comment_body": "Consider adding javadoc for all constructors",
        "pr_file_module": null
      },
      {
        "comment_id": "2063532472",
        "repo_full_name": "netty/netty",
        "pr_number": 15005,
        "pr_file": "codec-http2/src/main/java/io/netty/handler/codec/http2/DelegatingDecompressorFrameListener.java",
        "discussion_id": "2059294061",
        "commented_code": "@@ -52,16 +52,30 @@ public class DelegatingDecompressorFrameListener extends Http2FrameListenerDecor\n     private final boolean strict;\n     private boolean flowControllerInitialized;\n     private final Http2Connection.PropertyKey propertyKey;\n+    private final int maxAllocation;\n \n+    @Deprecated\n     public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener) {\n-        this(connection, listener, true);\n+        this(connection, listener, 0);\n     }\n \n     public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener,\n-                    boolean strict) {\n+                                               int maxAllocation) {\n+        this(connection, listener, true, maxAllocation);\n+    }\n+\n+    @Deprecated\n+    public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener,\n+                                               boolean strict) {\n+        this(connection, listener, strict, 0);\n+    }\n+\n+    public DelegatingDecompressorFrameListener(Http2Connection connection, Http2FrameListener listener,",
        "comment_created_at": "2025-04-28T12:14:05+00:00",
        "comment_author": "DeviLab",
        "comment_body": "Added",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1920514998",
    "pr_number": 14693,
    "pr_file": "transport-classes-io_uring/src/main/java/io/netty/channel/uring/CompletionCallback.java",
    "created_at": "2025-01-17T17:19:09+00:00",
    "commented_code": "/**\n      * Called for a completion event that was put into the {@link CompletionQueue}.\n      */\n-    void handle(int res, int flags, long udata);\n+    boolean handle(int res, int flags, long udata);",
    "repo_full_name": "netty/netty",
    "discussion_comments": [
      {
        "comment_id": "1920514998",
        "repo_full_name": "netty/netty",
        "pr_number": 14693,
        "pr_file": "transport-classes-io_uring/src/main/java/io/netty/channel/uring/CompletionCallback.java",
        "discussion_id": "1920514998",
        "commented_code": "@@ -19,5 +19,5 @@ interface CompletionCallback {\n     /**\n      * Called for a completion event that was put into the {@link CompletionQueue}.\n      */\n-    void handle(int res, int flags, long udata);\n+    boolean handle(int res, int flags, long udata);",
        "comment_created_at": "2025-01-17T17:19:09+00:00",
        "comment_author": "chrisvest",
        "comment_body": "Let's add a bit of javadoc explaining the `boolean` return value.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1913034186",
    "pr_number": 14650,
    "pr_file": "transport-classes-io_uring/src/main/java/io/netty/channel/uring/IoUringIoHandlerOption.java",
    "created_at": "2025-01-13T11:19:41+00:00",
    "commented_code": "*/\n package io.netty.channel.uring;\n \n-public class IoUringIoHandlerOption {\n+import io.netty.util.internal.ObjectUtil;\n+\n+public final class IoUringIoHandlerOption {",
    "repo_full_name": "netty/netty",
    "discussion_comments": [
      {
        "comment_id": "1913034186",
        "repo_full_name": "netty/netty",
        "pr_number": 14650,
        "pr_file": "transport-classes-io_uring/src/main/java/io/netty/channel/uring/IoUringIoHandlerOption.java",
        "discussion_id": "1913034186",
        "commented_code": "@@ -15,12 +15,14 @@\n  */\n package io.netty.channel.uring;\n \n-public class IoUringIoHandlerOption {\n+import io.netty.util.internal.ObjectUtil;\n+\n+public final class IoUringIoHandlerOption {",
        "comment_created_at": "2025-01-13T11:19:41+00:00",
        "comment_author": "normanmaurer",
        "comment_body": "Also as this class is public we should add javadocs etc. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "672235271",
    "pr_number": 11469,
    "pr_file": "codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java",
    "created_at": "2021-07-19T12:01:19+00:00",
    "commented_code": "initialBufferSize, allowDuplicateContentLengths);\n     }\n \n+    public HttpResponseDecoder(",
    "repo_full_name": "netty/netty",
    "discussion_comments": [
      {
        "comment_id": "672235271",
        "repo_full_name": "netty/netty",
        "pr_number": 11469,
        "pr_file": "codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java",
        "discussion_id": "672235271",
        "commented_code": "@@ -120,6 +120,13 @@ public HttpResponseDecoder(\n               initialBufferSize, allowDuplicateContentLengths);\n     }\n \n+    public HttpResponseDecoder(",
        "comment_created_at": "2021-07-19T12:01:19+00:00",
        "comment_author": "trustin",
        "comment_body": "Please add Javadoc.",
        "pr_file_module": null
      },
      {
        "comment_id": "672290944",
        "repo_full_name": "netty/netty",
        "pr_number": 11469,
        "pr_file": "codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseDecoder.java",
        "discussion_id": "672235271",
        "commented_code": "@@ -120,6 +120,13 @@ public HttpResponseDecoder(\n               initialBufferSize, allowDuplicateContentLengths);\n     }\n \n+    public HttpResponseDecoder(",
        "comment_created_at": "2021-07-19T13:20:59+00:00",
        "comment_author": "mjohannesse3",
        "comment_body": "Done",
        "pr_file_module": null
      }
    ]
  }
]