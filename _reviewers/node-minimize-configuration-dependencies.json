[
  {
    "discussion_id": "1997267845",
    "pr_number": 57343,
    "pr_file": "vcbuild.bat",
    "created_at": "2025-03-15T19:52:11+00:00",
    "commented_code": ")\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
    "repo_full_name": "nodejs/node",
    "discussion_comments": [
      {
        "comment_id": "1997267845",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-15T19:52:11+00:00",
        "comment_author": "anonrig",
        "comment_body": "Why did we start using NPX? I don't think we should depend on npm, anymore than we should. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1997415433",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-15T23:41:02+00:00",
        "comment_author": "Trott",
        "comment_body": "> I don't think we should depend on npm, anymore than we should.\r\n\r\nGenuinely curious: Is there a technical reason for that or is this about package manager neutrality? (I definitely don't want to have the package manager neutrality conversation here as it would be very off-topic. I just want to know if your reasons are philosophical or technical. I respect your request for change either way.)",
        "pr_file_module": null
      },
      {
        "comment_id": "1997426038",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-16T00:04:31+00:00",
        "comment_author": "ovflowd",
        "comment_body": "Agree with Trott. Also the package is already being installed. We are using npx because \"node --run\" doesnt support running from a package.json in a different folder.\n\nWe tried numerous workarounds, had to use npx.",
        "pr_file_module": null
      },
      {
        "comment_id": "1997450479",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-16T00:57:09+00:00",
        "comment_author": "anonrig",
        "comment_body": "> We are using npx because \"node --run\" doesnt support running from a package.json in a different folder.\n\nThis looks like a good contribution opportunity and deserves to be a separate issue. (Or a requirement for this to land)",
        "pr_file_module": null
      },
      {
        "comment_id": "1997450921",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-16T00:58:22+00:00",
        "comment_author": "ovflowd",
        "comment_body": "Please don't make this a requirement. But I agree it would definitely be a good issue to be worked on :)",
        "pr_file_module": null
      },
      {
        "comment_id": "1997451350",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-16T01:01:49+00:00",
        "comment_author": "anonrig",
        "comment_body": "> We tried numerous workarounds, had to use npx.\n\nPackage manager neutrality is one thing and also having a non-nodejs managed process running on top of every build process doesn't seem ideal to me. We don't explicitly know npx behavior or if in the future the behavior will change in a non-destructive way that slips through our reviews. For example, whether or not if npx creates any subdirectory in the operating system is somewhat unknown to me. Even if it's not right now, what guards us from detecting such filesystem changes for caching for example?\n\nWe should keep the implementation as simple as possible. We can achieve the same solution without using npx.\n\nIf you still require npx behavior and if it's the only possible solution, I am still interested in blocking and waiting for someone to implement \"change directory when executing\" behavior to node --run (which I'm the author)",
        "pr_file_module": null
      },
      {
        "comment_id": "1997451525",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-16T01:03:26+00:00",
        "comment_author": "anonrig",
        "comment_body": "> Please don't make this a requirement. But I agree it would definitely be a good issue to be worked on :)\n\nI can just implement this if no one is interested in working on, if you give enough time. :-) ",
        "pr_file_module": null
      },
      {
        "comment_id": "1997451578",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-16T01:04:11+00:00",
        "comment_author": "ovflowd",
        "comment_body": "We're not in a hurry anyways.",
        "pr_file_module": null
      },
      {
        "comment_id": "1997451821",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-16T01:05:33+00:00",
        "comment_author": "anonrig",
        "comment_body": "> We're not in a hurry anyways.\n\nCan someone open an issue for this and assign me?",
        "pr_file_module": null
      },
      {
        "comment_id": "1997453305",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-16T01:14:27+00:00",
        "comment_author": "flakey5",
        "comment_body": "#57489",
        "pr_file_module": null
      },
      {
        "comment_id": "2008220076",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-21T19:37:37+00:00",
        "comment_author": "ovflowd",
        "comment_body": "@anonrig for the sake of unblocking work, would you mind if we get this merged as-is and follow-up with your changes? I think that'd be ideally and as soon as #57489 gets done we can switch over. The current old tooling already uses `npm` and I'd really appreciate to get this merged soon \ud83d\ude4f ",
        "pr_file_module": null
      },
      {
        "comment_id": "2008226830",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-21T19:44:09+00:00",
        "comment_author": "anonrig",
        "comment_body": "The current old tooling uses npm, but doesn't use npx. I prefer to wait, but I'll not block.",
        "pr_file_module": null
      },
      {
        "comment_id": "2008233813",
        "repo_full_name": "nodejs/node",
        "pr_number": 57343,
        "pr_file": "vcbuild.bat",
        "discussion_id": "1997267845",
        "commented_code": "@@ -778,6 +774,7 @@ for /D %%D IN (doc\\*) do (\n   )\n )\n %node_exe% tools\\lint-md\\lint-md.mjs %lint_md_files%\n+%npx_exe% --prefix tools\\doc api-docs-tooling -i doc\\api\\*.md",
        "comment_created_at": "2025-03-21T19:46:11+00:00",
        "comment_author": "ovflowd",
        "comment_body": "Appreciate ya! I do believe we are for now blocked anyways and we need to handle @aduh95's concern regarding `make docserve` I guess?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1830211402",
    "pr_number": 54364,
    "pr_file": "src/node_code_integrity.h",
    "created_at": "2024-11-05T23:35:47+00:00",
    "commented_code": "+#ifndef SRC_NODE_CODE_INTEGRITY_H_\n+#define SRC_NODE_CODE_INTEGRITY_H_\n+\n+#ifdef _WIN32",
    "repo_full_name": "nodejs/node",
    "discussion_comments": [
      {
        "comment_id": "1830211402",
        "repo_full_name": "nodejs/node",
        "pr_number": 54364,
        "pr_file": "src/node_code_integrity.h",
        "discussion_id": "1830211402",
        "commented_code": "@@ -0,0 +1,87 @@\n+#ifndef SRC_NODE_CODE_INTEGRITY_H_\n+#define SRC_NODE_CODE_INTEGRITY_H_\n+\n+#ifdef _WIN32",
        "comment_created_at": "2024-11-05T23:35:47+00:00",
        "comment_author": "jasnell",
        "comment_body": "Given that this is Windows only, I would generally prefer that this entire internal binding only be compiled on windows, with the non-functional stubs implemented solely in javascript on the other platforms.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2045207013",
    "pr_number": 54364,
    "pr_file": "src/node_code_integrity.cc",
    "created_at": "2025-04-15T18:15:16+00:00",
    "commented_code": "+#include \"node_code_integrity.h\"",
    "repo_full_name": "nodejs/node",
    "discussion_comments": [
      {
        "comment_id": "2045207013",
        "repo_full_name": "nodejs/node",
        "pr_number": 54364,
        "pr_file": "src/node_code_integrity.cc",
        "discussion_id": "2045207013",
        "commented_code": "@@ -0,0 +1,237 @@\n+#include \"node_code_integrity.h\"",
        "comment_created_at": "2025-04-15T18:15:16+00:00",
        "comment_author": "anonrig",
        "comment_body": "This file should be surrounded by a ifdef of is windows. We don't need to compile this file for non-windows environments.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2045207580",
    "pr_number": 54364,
    "pr_file": "src/node_code_integrity.h",
    "created_at": "2025-04-15T18:15:39+00:00",
    "commented_code": "+// Windows API documentation for WLDP can be found at",
    "repo_full_name": "nodejs/node",
    "discussion_comments": [
      {
        "comment_id": "2045207580",
        "repo_full_name": "nodejs/node",
        "pr_number": 54364,
        "pr_file": "src/node_code_integrity.h",
        "discussion_id": "2045207580",
        "commented_code": "@@ -0,0 +1,83 @@\n+// Windows API documentation for WLDP can be found at",
        "comment_created_at": "2025-04-15T18:15:39+00:00",
        "comment_author": "anonrig",
        "comment_body": "This file should also be surrounded by isWindows ifdef",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2156926928",
    "pr_number": 58678,
    "pr_file": "tools/v8_gypfiles/abseil.gyp",
    "created_at": "2025-06-19T12:39:30+00:00",
    "commented_code": "{\n+  'includes': ['toolchain.gypi', 'features.gypi'],",
    "repo_full_name": "nodejs/node",
    "discussion_comments": [
      {
        "comment_id": "2156926928",
        "repo_full_name": "nodejs/node",
        "pr_number": 58678,
        "pr_file": "tools/v8_gypfiles/abseil.gyp",
        "discussion_id": "2156926928",
        "commented_code": "@@ -1,4 +1,5 @@\n {\n+  'includes': ['toolchain.gypi', 'features.gypi'],",
        "comment_created_at": "2025-06-19T12:39:30+00:00",
        "comment_author": "targos",
        "comment_body": "Do we really need `features.gypi`? If we do, maybe part of it should be moved to `toolchain.gypi`, because including it adds many things that have nothing to do with abseil.",
        "pr_file_module": null
      },
      {
        "comment_id": "2156952373",
        "repo_full_name": "nodejs/node",
        "pr_number": 58678,
        "pr_file": "tools/v8_gypfiles/abseil.gyp",
        "discussion_id": "2156926928",
        "commented_code": "@@ -1,4 +1,5 @@\n {\n+  'includes': ['toolchain.gypi', 'features.gypi'],",
        "comment_created_at": "2025-06-19T12:49:33+00:00",
        "comment_author": "legendecas",
        "comment_body": "Only variable `v8_control_flow_integrity` is needed. I added a default value in `toolchain.gypi` as well, like `v8_target_arch`.",
        "pr_file_module": null
      }
    ]
  }
]