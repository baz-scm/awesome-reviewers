[
  {
    "discussion_id": "2121657402",
    "pr_number": 8418,
    "pr_file": "apps/dashboard/src/components/welcome/inbox-framework-guide.tsx",
    "created_at": "2025-06-02T16:35:14+00:00",
    "commented_code": "</motion.div>\n \n       {/* Framework Cards */}\n-      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex gap-2 px-6\">\n-        {frameworks.map((framework) => (\n-          <motion.div\n-            key={framework.name}\n-            variants={cardVariants}\n-            initial=\"initial\"\n-            whileHover=\"hover\"\n-            animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n-            className=\"relative\"\n-          >\n-            <Card\n-              onClick={() => handleFrameworkSelect(framework)}\n-              className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n-                framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n-              }`}\n+      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex flex-col gap-6 px-6\">\n+        <div className=\"flex flex-col gap-4\">\n+          <h3 className=\"text-sm font-medium text-[#525866]\">Select your framework</h3>\n+          <div className=\"flex gap-2\">\n+            {frameworks.map((framework) => (\n+              <motion.div\n+                key={framework.name}\n+                variants={cardVariants}\n+                initial=\"initial\"\n+                whileHover=\"hover\"\n+                animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n+                className=\"relative\"\n+              >\n+                <Card\n+                  onClick={() => handleFrameworkSelect(framework)}\n+                  className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n+                    framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n+                  }`}\n+                >\n+                  <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n+                    <motion.div variants={iconVariants} className=\"relative text-2xl\">\n+                      {framework.icon}\n+                    </motion.div>\n+                    <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n+                  </CardContent>\n+                </Card>\n+              </motion.div>\n+            ))}\n+          </div>\n+        </div>\n+\n+        {!['Remix', 'Native', 'Angular', 'JavaScript'].includes(selectedFramework.name) ? (\n+          <div className=\"flex flex-col gap-4\">\n+            <h3 className=\"text-sm font-medium text-[#525866]\">Choose installation method</h3>\n+            <Tabs\n+              defaultValue=\"cli\"\n+              value={installationMethod}\n+              onValueChange={(value) => setInstallationMethod(value as 'cli' | 'manual')}\n             >\n-              <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n-                <motion.div variants={iconVariants} className=\"relative text-2xl\">\n-                  {framework.icon}\n-                </motion.div>\n-                <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n-              </CardContent>\n-            </Card>\n-          </motion.div>\n-        ))}\n+              <TabsList className=\"inline-flex items-center gap-2 bg-transparent p-0\">\n+                <TabsTrigger\n+                  value=\"cli\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"\n+                >\n+                  CLI\n+                </TabsTrigger>\n+                <TabsTrigger\n+                  value=\"manual\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"\n+                >\n+                  Manual\n+                </TabsTrigger>\n+              </TabsList>\n+              <div className=\"relative mt-2 overflow-hidden pl-0\">\n+                <AnimatePresence mode=\"wait\">\n+                  {installationMethod === 'cli' && (\n+                    <motion.div\n+                      key=\"cli\"\n+                      initial={{ opacity: 0 }}\n+                      animate={{ opacity: 1 }}\n+                      exit={{ opacity: 0 }}\n+                      transition={{ duration: 0.15 }}",
    "repo_full_name": "novuhq/novu",
    "discussion_comments": [
      {
        "comment_id": "2121657402",
        "repo_full_name": "novuhq/novu",
        "pr_number": 8418,
        "pr_file": "apps/dashboard/src/components/welcome/inbox-framework-guide.tsx",
        "discussion_id": "2121657402",
        "commented_code": "@@ -123,36 +169,103 @@ export function InboxFrameworkGuide({\n       </motion.div>\n \n       {/* Framework Cards */}\n-      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex gap-2 px-6\">\n-        {frameworks.map((framework) => (\n-          <motion.div\n-            key={framework.name}\n-            variants={cardVariants}\n-            initial=\"initial\"\n-            whileHover=\"hover\"\n-            animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n-            className=\"relative\"\n-          >\n-            <Card\n-              onClick={() => handleFrameworkSelect(framework)}\n-              className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n-                framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n-              }`}\n+      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex flex-col gap-6 px-6\">\n+        <div className=\"flex flex-col gap-4\">\n+          <h3 className=\"text-sm font-medium text-[#525866]\">Select your framework</h3>\n+          <div className=\"flex gap-2\">\n+            {frameworks.map((framework) => (\n+              <motion.div\n+                key={framework.name}\n+                variants={cardVariants}\n+                initial=\"initial\"\n+                whileHover=\"hover\"\n+                animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n+                className=\"relative\"\n+              >\n+                <Card\n+                  onClick={() => handleFrameworkSelect(framework)}\n+                  className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n+                    framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n+                  }`}\n+                >\n+                  <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n+                    <motion.div variants={iconVariants} className=\"relative text-2xl\">\n+                      {framework.icon}\n+                    </motion.div>\n+                    <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n+                  </CardContent>\n+                </Card>\n+              </motion.div>\n+            ))}\n+          </div>\n+        </div>\n+\n+        {!['Remix', 'Native', 'Angular', 'JavaScript'].includes(selectedFramework.name) ? (\n+          <div className=\"flex flex-col gap-4\">\n+            <h3 className=\"text-sm font-medium text-[#525866]\">Choose installation method</h3>\n+            <Tabs\n+              defaultValue=\"cli\"\n+              value={installationMethod}\n+              onValueChange={(value) => setInstallationMethod(value as 'cli' | 'manual')}\n             >\n-              <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n-                <motion.div variants={iconVariants} className=\"relative text-2xl\">\n-                  {framework.icon}\n-                </motion.div>\n-                <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n-              </CardContent>\n-            </Card>\n-          </motion.div>\n-        ))}\n+              <TabsList className=\"inline-flex items-center gap-2 bg-transparent p-0\">\n+                <TabsTrigger\n+                  value=\"cli\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"\n+                >\n+                  CLI\n+                </TabsTrigger>\n+                <TabsTrigger\n+                  value=\"manual\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"\n+                >\n+                  Manual\n+                </TabsTrigger>\n+              </TabsList>\n+              <div className=\"relative mt-2 overflow-hidden pl-0\">\n+                <AnimatePresence mode=\"wait\">\n+                  {installationMethod === 'cli' && (\n+                    <motion.div\n+                      key=\"cli\"\n+                      initial={{ opacity: 0 }}\n+                      animate={{ opacity: 1 }}\n+                      exit={{ opacity: 0 }}\n+                      transition={{ duration: 0.15 }}",
        "comment_created_at": "2025-06-02T16:35:14+00:00",
        "comment_author": "LetItRock",
        "comment_body": "```suggestion\r\n                      {...fadeIn}\r\n```\r\n\r\n\r\nplease use the `fadeIn` constant from the `animations.ts` file, also please update it in the other places",
        "pr_file_module": null
      },
      {
        "comment_id": "2123728321",
        "repo_full_name": "novuhq/novu",
        "pr_number": 8418,
        "pr_file": "apps/dashboard/src/components/welcome/inbox-framework-guide.tsx",
        "discussion_id": "2121657402",
        "commented_code": "@@ -123,36 +169,103 @@ export function InboxFrameworkGuide({\n       </motion.div>\n \n       {/* Framework Cards */}\n-      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex gap-2 px-6\">\n-        {frameworks.map((framework) => (\n-          <motion.div\n-            key={framework.name}\n-            variants={cardVariants}\n-            initial=\"initial\"\n-            whileHover=\"hover\"\n-            animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n-            className=\"relative\"\n-          >\n-            <Card\n-              onClick={() => handleFrameworkSelect(framework)}\n-              className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n-                framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n-              }`}\n+      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex flex-col gap-6 px-6\">\n+        <div className=\"flex flex-col gap-4\">\n+          <h3 className=\"text-sm font-medium text-[#525866]\">Select your framework</h3>\n+          <div className=\"flex gap-2\">\n+            {frameworks.map((framework) => (\n+              <motion.div\n+                key={framework.name}\n+                variants={cardVariants}\n+                initial=\"initial\"\n+                whileHover=\"hover\"\n+                animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n+                className=\"relative\"\n+              >\n+                <Card\n+                  onClick={() => handleFrameworkSelect(framework)}\n+                  className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n+                    framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n+                  }`}\n+                >\n+                  <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n+                    <motion.div variants={iconVariants} className=\"relative text-2xl\">\n+                      {framework.icon}\n+                    </motion.div>\n+                    <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n+                  </CardContent>\n+                </Card>\n+              </motion.div>\n+            ))}\n+          </div>\n+        </div>\n+\n+        {!['Remix', 'Native', 'Angular', 'JavaScript'].includes(selectedFramework.name) ? (\n+          <div className=\"flex flex-col gap-4\">\n+            <h3 className=\"text-sm font-medium text-[#525866]\">Choose installation method</h3>\n+            <Tabs\n+              defaultValue=\"cli\"\n+              value={installationMethod}\n+              onValueChange={(value) => setInstallationMethod(value as 'cli' | 'manual')}\n             >\n-              <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n-                <motion.div variants={iconVariants} className=\"relative text-2xl\">\n-                  {framework.icon}\n-                </motion.div>\n-                <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n-              </CardContent>\n-            </Card>\n-          </motion.div>\n-        ))}\n+              <TabsList className=\"inline-flex items-center gap-2 bg-transparent p-0\">\n+                <TabsTrigger\n+                  value=\"cli\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"\n+                >\n+                  CLI\n+                </TabsTrigger>\n+                <TabsTrigger\n+                  value=\"manual\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"\n+                >\n+                  Manual\n+                </TabsTrigger>\n+              </TabsList>\n+              <div className=\"relative mt-2 overflow-hidden pl-0\">\n+                <AnimatePresence mode=\"wait\">\n+                  {installationMethod === 'cli' && (\n+                    <motion.div\n+                      key=\"cli\"\n+                      initial={{ opacity: 0 }}\n+                      animate={{ opacity: 1 }}\n+                      exit={{ opacity: 0 }}\n+                      transition={{ duration: 0.15 }}",
        "comment_created_at": "2025-06-03T12:54:38+00:00",
        "comment_author": "iampearceman",
        "comment_body": "I've addressed it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2121704536",
    "pr_number": 8418,
    "pr_file": "apps/dashboard/src/components/welcome/inbox-framework-guide.tsx",
    "created_at": "2025-06-02T16:56:44+00:00",
    "commented_code": "foregroundColor,\n }: InboxFrameworkGuideProps) {\n   const track = useTelemetry();\n-  const [selectedFramework, setSelectedFramework] = useState(frameworks.find((f) => f.selected) || frameworks[0]);\n+  const [selectedFramework, setSelectedFramework] = useState<CliFramework | ManualFramework>(\n+    cliFrameworks.find((f) => f.selected) || cliFrameworks[0]\n+  );\n+  const [installationMethod, setInstallationMethod] = useState<'cli' | 'manual'>('cli');\n+  const [packageManager, setPackageManager] = useState<PackageManager>('npm');\n \n   useEffect(() => {\n     if (!currentEnvironment?.identifier || !subscriberId) return;\n \n+    const frameworks = installationMethod === 'cli' ? cliFrameworks : manualFrameworks;",
    "repo_full_name": "novuhq/novu",
    "discussion_comments": [
      {
        "comment_id": "2121704536",
        "repo_full_name": "novuhq/novu",
        "pr_number": 8418,
        "pr_file": "apps/dashboard/src/components/welcome/inbox-framework-guide.tsx",
        "discussion_id": "2121704536",
        "commented_code": "@@ -83,26 +88,67 @@ export function InboxFrameworkGuide({\n   foregroundColor,\n }: InboxFrameworkGuideProps) {\n   const track = useTelemetry();\n-  const [selectedFramework, setSelectedFramework] = useState(frameworks.find((f) => f.selected) || frameworks[0]);\n+  const [selectedFramework, setSelectedFramework] = useState<CliFramework | ManualFramework>(\n+    cliFrameworks.find((f) => f.selected) || cliFrameworks[0]\n+  );\n+  const [installationMethod, setInstallationMethod] = useState<'cli' | 'manual'>('cli');\n+  const [packageManager, setPackageManager] = useState<PackageManager>('npm');\n \n   useEffect(() => {\n     if (!currentEnvironment?.identifier || !subscriberId) return;\n \n+    const frameworks = installationMethod === 'cli' ? cliFrameworks : manualFrameworks;",
        "comment_created_at": "2025-06-02T16:56:44+00:00",
        "comment_author": "LetItRock",
        "comment_body": "I think that we don't need to separate them to cli and manual frameworks as it creates a lot of unnecessary duplication, let's just have frameworks as they were before and just update the code example.\r\nBasically you can copy the `commonInstallStep` from the `framework-cli.instructions.tsx` file and use it in the `framework-guides.instructions.tsx` file when the `installationMethod` is `cli`. So the code to get frameworks will be like:\r\n```\r\nconst getFrameworks = (installationMethod: 'cli' | 'manual') => {\r\n   return [{\r\n    name: 'Next.js',\r\n    icon: <RiNextjsFill className=\"h-8 w-8 text-black\" />,\r\n    selected: true,\r\n    installSteps: installationMethod === 'cli' ? [commonCLIInstallStep('@novu/nextjs')] : [commonInstallStep('@novu/nextjs'), { ... }]\r\n  }, ...]\r\n}\r\n```\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2121714887",
    "pr_number": 8418,
    "pr_file": "apps/dashboard/src/components/welcome/inbox-framework-guide.tsx",
    "created_at": "2025-06-02T17:02:01+00:00",
    "commented_code": "</motion.div>\n \n       {/* Framework Cards */}\n-      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex gap-2 px-6\">\n-        {frameworks.map((framework) => (\n-          <motion.div\n-            key={framework.name}\n-            variants={cardVariants}\n-            initial=\"initial\"\n-            whileHover=\"hover\"\n-            animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n-            className=\"relative\"\n-          >\n-            <Card\n-              onClick={() => handleFrameworkSelect(framework)}\n-              className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n-                framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n-              }`}\n+      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex flex-col gap-6 px-6\">\n+        <div className=\"flex flex-col gap-4\">\n+          <h3 className=\"text-sm font-medium text-[#525866]\">Select your framework</h3>\n+          <div className=\"flex gap-2\">\n+            {frameworks.map((framework) => (\n+              <motion.div\n+                key={framework.name}\n+                variants={cardVariants}\n+                initial=\"initial\"\n+                whileHover=\"hover\"\n+                animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n+                className=\"relative\"\n+              >\n+                <Card\n+                  onClick={() => handleFrameworkSelect(framework)}\n+                  className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n+                    framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n+                  }`}\n+                >\n+                  <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n+                    <motion.div variants={iconVariants} className=\"relative text-2xl\">\n+                      {framework.icon}\n+                    </motion.div>\n+                    <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n+                  </CardContent>\n+                </Card>\n+              </motion.div>\n+            ))}\n+          </div>\n+        </div>\n+\n+        {!['Remix', 'Native', 'Angular', 'JavaScript'].includes(selectedFramework.name) ? (\n+          <div className=\"flex flex-col gap-4\">\n+            <h3 className=\"text-sm font-medium text-[#525866]\">Choose installation method</h3>\n+            <Tabs\n+              defaultValue=\"cli\"\n+              value={installationMethod}\n+              onValueChange={(value) => setInstallationMethod(value as 'cli' | 'manual')}\n             >\n-              <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n-                <motion.div variants={iconVariants} className=\"relative text-2xl\">\n-                  {framework.icon}\n-                </motion.div>\n-                <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n-              </CardContent>\n-            </Card>\n-          </motion.div>\n-        ))}\n+              <TabsList className=\"inline-flex items-center gap-2 bg-transparent p-0\">\n+                <TabsTrigger\n+                  value=\"cli\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"\n+                >\n+                  CLI\n+                </TabsTrigger>\n+                <TabsTrigger\n+                  value=\"manual\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"",
    "repo_full_name": "novuhq/novu",
    "discussion_comments": [
      {
        "comment_id": "2121714887",
        "repo_full_name": "novuhq/novu",
        "pr_number": 8418,
        "pr_file": "apps/dashboard/src/components/welcome/inbox-framework-guide.tsx",
        "discussion_id": "2121714887",
        "commented_code": "@@ -123,36 +169,103 @@ export function InboxFrameworkGuide({\n       </motion.div>\n \n       {/* Framework Cards */}\n-      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex gap-2 px-6\">\n-        {frameworks.map((framework) => (\n-          <motion.div\n-            key={framework.name}\n-            variants={cardVariants}\n-            initial=\"initial\"\n-            whileHover=\"hover\"\n-            animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n-            className=\"relative\"\n-          >\n-            <Card\n-              onClick={() => handleFrameworkSelect(framework)}\n-              className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n-                framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n-              }`}\n+      <motion.div variants={containerVariants} initial=\"hidden\" animate=\"show\" className=\"flex flex-col gap-6 px-6\">\n+        <div className=\"flex flex-col gap-4\">\n+          <h3 className=\"text-sm font-medium text-[#525866]\">Select your framework</h3>\n+          <div className=\"flex gap-2\">\n+            {frameworks.map((framework) => (\n+              <motion.div\n+                key={framework.name}\n+                variants={cardVariants}\n+                initial=\"initial\"\n+                whileHover=\"hover\"\n+                animate={framework.name === selectedFramework.name ? 'hover' : 'initial'}\n+                className=\"relative\"\n+              >\n+                <Card\n+                  onClick={() => handleFrameworkSelect(framework)}\n+                  className={`flex h-[100px] w-[100px] flex-col items-center justify-center border-none p-6 shadow-none hover:cursor-pointer ${\n+                    framework.name === selectedFramework.name ? 'bg-neutral-100' : ''\n+                  }`}\n+                >\n+                  <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n+                    <motion.div variants={iconVariants} className=\"relative text-2xl\">\n+                      {framework.icon}\n+                    </motion.div>\n+                    <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n+                  </CardContent>\n+                </Card>\n+              </motion.div>\n+            ))}\n+          </div>\n+        </div>\n+\n+        {!['Remix', 'Native', 'Angular', 'JavaScript'].includes(selectedFramework.name) ? (\n+          <div className=\"flex flex-col gap-4\">\n+            <h3 className=\"text-sm font-medium text-[#525866]\">Choose installation method</h3>\n+            <Tabs\n+              defaultValue=\"cli\"\n+              value={installationMethod}\n+              onValueChange={(value) => setInstallationMethod(value as 'cli' | 'manual')}\n             >\n-              <CardContent className=\"flex flex-col items-center gap-3 p-0\">\n-                <motion.div variants={iconVariants} className=\"relative text-2xl\">\n-                  {framework.icon}\n-                </motion.div>\n-                <span className=\"text-sm text-[#525866]\">{framework.name}</span>\n-              </CardContent>\n-            </Card>\n-          </motion.div>\n-        ))}\n+              <TabsList className=\"inline-flex items-center gap-2 bg-transparent p-0\">\n+                <TabsTrigger\n+                  value=\"cli\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"\n+                >\n+                  CLI\n+                </TabsTrigger>\n+                <TabsTrigger\n+                  value=\"manual\"\n+                  className=\"relative text-xs font-medium text-[#525866] transition-colors hover:text-[#dd2476] data-[state=active]:text-[#dd2476]\"",
        "comment_created_at": "2025-06-02T17:02:01+00:00",
        "comment_author": "LetItRock",
        "comment_body": "duplicated classes, please move to const",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2053872546",
    "pr_number": 8134,
    "pr_file": "apps/dashboard/src/components/conditions-editor/conditions-editor.tsx",
    "created_at": "2025-04-22T10:57:52+00:00",
    "commented_code": "isAllowedVariable,\n   query,\n   onQueryChange,\n+  saveForm,\n }: {\n   fields: Field[];\n   variables: LiquidVariable[];\n   isAllowedVariable: IsAllowedVariable;\n   query: RuleGroupType;\n   onQueryChange: (query: RuleGroupType) => void;\n+  saveForm: () => void;\n }) {\n   const context = useMemo(() => ({ variables, isAllowedVariable }), [variables, isAllowedVariable]);\n \n   return (\n     <QueryBuilder\n       fields={fields}\n       context={context}\n+      onAddRule={() => {\n+        saveForm();\n+        return true;",
    "repo_full_name": "novuhq/novu",
    "discussion_comments": [
      {
        "comment_id": "2053872546",
        "repo_full_name": "novuhq/novu",
        "pr_number": 8134,
        "pr_file": "apps/dashboard/src/components/conditions-editor/conditions-editor.tsx",
        "discussion_id": "2053872546",
        "commented_code": "@@ -55,19 +55,41 @@ function InternalConditionsEditor({\n   isAllowedVariable,\n   query,\n   onQueryChange,\n+  saveForm,\n }: {\n   fields: Field[];\n   variables: LiquidVariable[];\n   isAllowedVariable: IsAllowedVariable;\n   query: RuleGroupType;\n   onQueryChange: (query: RuleGroupType) => void;\n+  saveForm: () => void;\n }) {\n   const context = useMemo(() => ({ variables, isAllowedVariable }), [variables, isAllowedVariable]);\n \n   return (\n     <QueryBuilder\n       fields={fields}\n       context={context}\n+      onAddRule={() => {\n+        saveForm();\n+        return true;",
        "comment_created_at": "2025-04-22T10:57:52+00:00",
        "comment_author": "LetItRock",
        "comment_body": "please define one callback and reuse it between the props",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2036738958",
    "pr_number": 8097,
    "pr_file": "apps/dashboard/src/components/variable/components/variable-preview.tsx",
    "created_at": "2025-04-10T07:54:24+00:00",
    "commented_code": "+type VariablePreviewProps = {\n+  children: React.ReactNode;\n+  className?: string;\n+};\n+\n+export function VariablePreview({ children, className = '' }: VariablePreviewProps) {\n+  return <div className={`flex max-w-56 flex-col justify-center gap-1 p-1 ${className}`}>{children}</div>;",
    "repo_full_name": "novuhq/novu",
    "discussion_comments": [
      {
        "comment_id": "2036738958",
        "repo_full_name": "novuhq/novu",
        "pr_number": 8097,
        "pr_file": "apps/dashboard/src/components/variable/components/variable-preview.tsx",
        "discussion_id": "2036738958",
        "commented_code": "@@ -0,0 +1,34 @@\n+type VariablePreviewProps = {\n+  children: React.ReactNode;\n+  className?: string;\n+};\n+\n+export function VariablePreview({ children, className = '' }: VariablePreviewProps) {\n+  return <div className={`flex max-w-56 flex-col justify-center gap-1 p-1 ${className}`}>{children}</div>;",
        "comment_created_at": "2025-04-10T07:54:24+00:00",
        "comment_author": "LetItRock",
        "comment_body": "```suggestion\r\n  return <div className={cn('flex max-w-56 flex-col justify-center gap-1 p-1 ', className)}>{children}</div>;\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2036739403",
        "repo_full_name": "novuhq/novu",
        "pr_number": 8097,
        "pr_file": "apps/dashboard/src/components/variable/components/variable-preview.tsx",
        "discussion_id": "2036738958",
        "commented_code": "@@ -0,0 +1,34 @@\n+type VariablePreviewProps = {\n+  children: React.ReactNode;\n+  className?: string;\n+};\n+\n+export function VariablePreview({ children, className = '' }: VariablePreviewProps) {\n+  return <div className={`flex max-w-56 flex-col justify-center gap-1 p-1 ${className}`}>{children}</div>;",
        "comment_created_at": "2025-04-10T07:54:40+00:00",
        "comment_author": "LetItRock",
        "comment_body": "please do the same to other places in this file",
        "pr_file_module": null
      }
    ]
  }
]