[
  {
    "discussion_id": "2313527849",
    "pr_number": 9024,
    "pr_file": "libs/application-generic/src/services/analytic-logs/workflow-run/workflow-run.schema.ts",
    "created_at": "2025-09-01T10:13:54+00:00",
    "commented_code": "// Data retention\n   expires_at: { type: CHDateTime64(3, 'UTC') },\n+\n+  severity: { type: CHNullable(CHString()) }, // severity of the workflow run\n+  critical: { type: CHNullable(CHBoolean()) }, // critical flag of the workflow run",
    "repo_full_name": "novuhq/novu",
    "discussion_comments": [
      {
        "comment_id": "2313527849",
        "repo_full_name": "novuhq/novu",
        "pr_number": 9024,
        "pr_file": "libs/application-generic/src/services/analytic-logs/workflow-run/workflow-run.schema.ts",
        "discussion_id": "2313527849",
        "commented_code": "@@ -54,6 +55,9 @@ const schemaDefinition = {\n \n   // Data retention\n   expires_at: { type: CHDateTime64(3, 'UTC') },\n+\n+  severity: { type: CHNullable(CHString()) }, // severity of the workflow run\n+  critical: { type: CHNullable(CHBoolean()) }, // critical flag of the workflow run",
        "comment_created_at": "2025-09-01T10:13:54+00:00",
        "comment_author": "djabarovgeorge",
        "comment_body": "we can make those not nullable wit default values, it is more performant in ClickHouse to have any other value than null if possible.\n\n```suggestion\n  severity: { type: CHLowCardinality(CHString('none')) }, // severity of the workflow run\n  critical: { type:CHBoolean(false) }, // critical flag of the workflow run\n```\n\nALTER TABLE workflow_runs \nADD COLUMN IF NOT EXISTS severity String DEFAULT 'none';\n\nALTER TABLE workflow_runs \nADD COLUMN IF NOT EXISTS critical Boolean DEFAULT false';",
        "pr_file_module": null
      },
      {
        "comment_id": "2314083801",
        "repo_full_name": "novuhq/novu",
        "pr_number": 9024,
        "pr_file": "libs/application-generic/src/services/analytic-logs/workflow-run/workflow-run.schema.ts",
        "discussion_id": "2313527849",
        "commented_code": "@@ -54,6 +55,9 @@ const schemaDefinition = {\n \n   // Data retention\n   expires_at: { type: CHDateTime64(3, 'UTC') },\n+\n+  severity: { type: CHNullable(CHString()) }, // severity of the workflow run\n+  critical: { type: CHNullable(CHBoolean()) }, // critical flag of the workflow run",
        "comment_created_at": "2025-09-01T14:14:11+00:00",
        "comment_author": "LetItRock",
        "comment_body": "@djabarovgeorge, we can, but it will require us to migrate all the previously created workflow runs, as the type will indicate that there is always a value.  ",
        "pr_file_module": null
      },
      {
        "comment_id": "2314246774",
        "repo_full_name": "novuhq/novu",
        "pr_number": 9024,
        "pr_file": "libs/application-generic/src/services/analytic-logs/workflow-run/workflow-run.schema.ts",
        "discussion_id": "2313527849",
        "commented_code": "@@ -54,6 +55,9 @@ const schemaDefinition = {\n \n   // Data retention\n   expires_at: { type: CHDateTime64(3, 'UTC') },\n+\n+  severity: { type: CHNullable(CHString()) }, // severity of the workflow run\n+  critical: { type: CHNullable(CHBoolean()) }, // critical flag of the workflow run",
        "comment_created_at": "2025-09-01T15:37:17+00:00",
        "comment_author": "djabarovgeorge",
        "comment_body": "The code wont handle \"none\" with backwards compatible way? Same for not critical.\n\nWhat migration do you mean we will need?",
        "pr_file_module": null
      },
      {
        "comment_id": "2314258047",
        "repo_full_name": "novuhq/novu",
        "pr_number": 9024,
        "pr_file": "libs/application-generic/src/services/analytic-logs/workflow-run/workflow-run.schema.ts",
        "discussion_id": "2313527849",
        "commented_code": "@@ -54,6 +55,9 @@ const schemaDefinition = {\n \n   // Data retention\n   expires_at: { type: CHDateTime64(3, 'UTC') },\n+\n+  severity: { type: CHNullable(CHString()) }, // severity of the workflow run\n+  critical: { type: CHNullable(CHBoolean()) }, // critical flag of the workflow run",
        "comment_created_at": "2025-09-01T15:44:11+00:00",
        "comment_author": "LetItRock",
        "comment_body": "For the existing `workflow_runs` records, it will populate with the default value, for example, `none` but it might not be the correct value for that record; that's why we need the migration for the old records to fill it with the correct `severity, critical` values",
        "pr_file_module": null
      },
      {
        "comment_id": "2314464374",
        "repo_full_name": "novuhq/novu",
        "pr_number": 9024,
        "pr_file": "libs/application-generic/src/services/analytic-logs/workflow-run/workflow-run.schema.ts",
        "discussion_id": "2313527849",
        "commented_code": "@@ -54,6 +55,9 @@ const schemaDefinition = {\n \n   // Data retention\n   expires_at: { type: CHDateTime64(3, 'UTC') },\n+\n+  severity: { type: CHNullable(CHString()) }, // severity of the workflow run\n+  critical: { type: CHNullable(CHBoolean()) }, // critical flag of the workflow run",
        "comment_created_at": "2025-09-01T18:47:56+00:00",
        "comment_author": "djabarovgeorge",
        "comment_body": "you\u2019re totally right, i forgot we already deployed and started updating the workflow entities.\nanyway, i\u2019d love us to find a way to avoid creating nullable fields if possible. i can think of a few approaches without needing a migration:\n\n1. set these fields with defaults. since they\u2019re early-version fields that not many users rely on, it shouldn\u2019t impact much, especially since they\u2019re monitoring-related and not transactional.\n2. for filtering queries like severity === VALUE && createdAt > DEPLOY_DATE, (we can add the date condition in the if statment). for the workflow run GET, we can map those default values to nullish.\n3. merge the pr but defer the ui changes under a flag, and enable them in a couple of weeks once we already have some data stored in the database.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2260921566",
    "pr_number": 8882,
    "pr_file": "libs/dal/src/repositories/message/message.repository.ts",
    "created_at": "2025-08-07T17:04:02+00:00",
    "commented_code": "requestQuery.archived = { $in: [true, false] };\n     }\n \n+    const snoozedCondition: Array<MessageQuery> = [];\n     if (query.snoozed != null) {\n       if (query.snoozed) {\n         requestQuery.snoozedUntil = { $ne: null };\n       } else {\n-        requestQuery.$or = [{ snoozedUntil: { $exists: false } }, { snoozedUntil: null }];\n+        snoozedCondition.push({ snoozedUntil: { $exists: false } }, { snoozedUntil: null });\n+      }\n+    }\n+\n+    const severityCondition: Array<MessageQuery> = [];\n+    if (query.severity && query.severity?.length > 0) {\n+      if (query.severity.includes(SeverityLevelEnum.NONE)) {\n+        severityCondition.push({ severity: { $exists: false } }, { severity: { $in: query.severity } });\n+      } else {\n+        requestQuery.severity = { $in: query.severity };",
    "repo_full_name": "novuhq/novu",
    "discussion_comments": [
      {
        "comment_id": "2260921566",
        "repo_full_name": "novuhq/novu",
        "pr_number": 8882,
        "pr_file": "libs/dal/src/repositories/message/message.repository.ts",
        "discussion_id": "2260921566",
        "commented_code": "@@ -126,18 +128,41 @@ export class MessageRepository extends BaseRepository<MessageDBModel, MessageEnt\n       requestQuery.archived = { $in: [true, false] };\n     }\n \n+    const snoozedCondition: Array<MessageQuery> = [];\n     if (query.snoozed != null) {\n       if (query.snoozed) {\n         requestQuery.snoozedUntil = { $ne: null };\n       } else {\n-        requestQuery.$or = [{ snoozedUntil: { $exists: false } }, { snoozedUntil: null }];\n+        snoozedCondition.push({ snoozedUntil: { $exists: false } }, { snoozedUntil: null });\n+      }\n+    }\n+\n+    const severityCondition: Array<MessageQuery> = [];\n+    if (query.severity && query.severity?.length > 0) {\n+      if (query.severity.includes(SeverityLevelEnum.NONE)) {\n+        severityCondition.push({ severity: { $exists: false } }, { severity: { $in: query.severity } });\n+      } else {\n+        requestQuery.severity = { $in: query.severity };",
        "comment_created_at": "2025-08-07T17:04:02+00:00",
        "comment_author": "LetItRock",
        "comment_body": "this is an improvement over many different or statements; so for example when I search for the `snoozed: false` and `severity: high` I want to get only that match both parts of the condition",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2035131176",
    "pr_number": 8096,
    "pr_file": "libs/dal/src/repositories/message/message.schema.ts",
    "created_at": "2025-04-09T11:03:52+00:00",
    "commented_code": "*           channel = command.channel;\n  *        })\n  */\n-messageSchema.index({\n-  _subscriberId: 1,\n-  _environmentId: 1,\n-  channel: 1,\n-  read: 1,\n-  archived: 1,\n-  seen: 1,\n-  createdAt: -1,\n-});\n+messageSchema.index(\n+  {\n+    _subscriberId: 1,\n+    _environmentId: 1,\n+    read: 1,\n+    archived: 1,\n+    seen: 1,\n+    createdAt: -1,\n+  },\n+  {\n+    name: 'in_app_messages_count',\n+    partialFilterExpression: { channel: 'in-app' },",
    "repo_full_name": "novuhq/novu",
    "discussion_comments": [
      {
        "comment_id": "2035131176",
        "repo_full_name": "novuhq/novu",
        "pr_number": 8096,
        "pr_file": "libs/dal/src/repositories/message/message.schema.ts",
        "discussion_id": "2035131176",
        "commented_code": "@@ -207,15 +207,20 @@ messageSchema.index({\n  *           channel = command.channel;\n  *        })\n  */\n-messageSchema.index({\n-  _subscriberId: 1,\n-  _environmentId: 1,\n-  channel: 1,\n-  read: 1,\n-  archived: 1,\n-  seen: 1,\n-  createdAt: -1,\n-});\n+messageSchema.index(\n+  {\n+    _subscriberId: 1,\n+    _environmentId: 1,\n+    read: 1,\n+    archived: 1,\n+    seen: 1,\n+    createdAt: -1,\n+  },\n+  {\n+    name: 'in_app_messages_count',\n+    partialFilterExpression: { channel: 'in-app' },",
        "comment_created_at": "2025-04-09T11:03:52+00:00",
        "comment_author": "djabarovgeorge",
        "comment_body": "```suggestion\r\n    partialFilterExpression: { channel: 'in_app' },\r\n```",
        "pr_file_module": null
      }
    ]
  }
]