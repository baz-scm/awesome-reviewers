[
  {
    "discussion_id": "2111174727",
    "pr_number": 32223,
    "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
    "created_at": "2025-05-28T07:44:46+00:00",
    "commented_code": "* Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::warning\n+If you are looking to update your environment variables in production, refer to [`runtimeConfig` docs](https://nuxt.com/docs/guide/going-further/runtime-config#environment-variabes) as using `process.env` in an attempt to read environment variables at runtime will not work.\n+::\n+",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2111174727",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 32223,
        "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
        "discussion_id": "2111174727",
        "commented_code": "@@ -55,6 +55,10 @@ Since `.env` files are not used in production, you must explicitly set environme\n \n * Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::warning\n+If you are looking to update your environment variables in production, refer to [`runtimeConfig` docs](https://nuxt.com/docs/guide/going-further/runtime-config#environment-variabes) as using `process.env` in an attempt to read environment variables at runtime will not work.\n+::\n+",
        "comment_created_at": "2025-05-28T07:44:46+00:00",
        "comment_author": "OrbisK",
        "comment_body": "I'm not sure if this might be misleading.\r\n\r\nSome thoughts:\r\n- Runtime config cannot be updated in production when using generate/static builds.\r\n- There are some places where you can't use runtime config (outside of Nuxt context), where you have to use process.env.\r\n- I think you should always use the runtimeConfig inside the Nuxt context.\r\n\r\nMaybe we can simplify this to:\r\n- Always use the runtimeConfig.\r\n- If you are not in a Nuxt context, you can only use process.env.",
        "pr_file_module": null
      },
      {
        "comment_id": "2111181886",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 32223,
        "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
        "discussion_id": "2111174727",
        "commented_code": "@@ -55,6 +55,10 @@ Since `.env` files are not used in production, you must explicitly set environme\n \n * Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::warning\n+If you are looking to update your environment variables in production, refer to [`runtimeConfig` docs](https://nuxt.com/docs/guide/going-further/runtime-config#environment-variabes) as using `process.env` in an attempt to read environment variables at runtime will not work.\n+::\n+",
        "comment_created_at": "2025-05-28T07:48:35+00:00",
        "comment_author": "huang-julien",
        "comment_body": "process.env is usually still accessible server-side for some environment (such as Node).\r\n\r\n- Prefer to use runtimeConfig which have it's specificities to avoid vendor-locking yourself. \r\n- `useRuntimeConfig` is still accessible in nitro context (but comes from nitro).",
        "pr_file_module": null
      },
      {
        "comment_id": "2111946250",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 32223,
        "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
        "discussion_id": "2111174727",
        "commented_code": "@@ -55,6 +55,10 @@ Since `.env` files are not used in production, you must explicitly set environme\n \n * Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::warning\n+If you are looking to update your environment variables in production, refer to [`runtimeConfig` docs](https://nuxt.com/docs/guide/going-further/runtime-config#environment-variabes) as using `process.env` in an attempt to read environment variables at runtime will not work.\n+::\n+",
        "comment_created_at": "2025-05-28T13:36:51+00:00",
        "comment_author": "paranoidPhantom",
        "comment_body": "Thanks for the feedback!\r\n\r\nTo clarify, if I read from `process.env` in `nuxt.config.ts` (outside the `runtimeConfig` block), it will be updated on server start, even in production?\r\n\r\nThis confused me quite a bit and is why I decided to contribute with a clarification.",
        "pr_file_module": null
      },
      {
        "comment_id": "2111999698",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 32223,
        "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
        "discussion_id": "2111174727",
        "commented_code": "@@ -55,6 +55,10 @@ Since `.env` files are not used in production, you must explicitly set environme\n \n * Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::warning\n+If you are looking to update your environment variables in production, refer to [`runtimeConfig` docs](https://nuxt.com/docs/guide/going-further/runtime-config#environment-variabes) as using `process.env` in an attempt to read environment variables at runtime will not work.\n+::\n+",
        "comment_created_at": "2025-05-28T13:59:36+00:00",
        "comment_author": "danielroe",
        "comment_body": "no, nuxt.config is only read when building/dev, not when starting a production server ",
        "pr_file_module": null
      },
      {
        "comment_id": "2112006491",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 32223,
        "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
        "discussion_id": "2111174727",
        "commented_code": "@@ -55,6 +55,10 @@ Since `.env` files are not used in production, you must explicitly set environme\n \n * Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::warning\n+If you are looking to update your environment variables in production, refer to [`runtimeConfig` docs](https://nuxt.com/docs/guide/going-further/runtime-config#environment-variabes) as using `process.env` in an attempt to read environment variables at runtime will not work.\n+::\n+",
        "comment_created_at": "2025-05-28T14:02:32+00:00",
        "comment_author": "paranoidPhantom",
        "comment_body": "Sounds good. I will iterate on this PR based on what I've learned.",
        "pr_file_module": null
      },
      {
        "comment_id": "2112213320",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 32223,
        "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
        "discussion_id": "2111174727",
        "commented_code": "@@ -55,6 +55,10 @@ Since `.env` files are not used in production, you must explicitly set environme\n \n * Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::warning\n+If you are looking to update your environment variables in production, refer to [`runtimeConfig` docs](https://nuxt.com/docs/guide/going-further/runtime-config#environment-variabes) as using `process.env` in an attempt to read environment variables at runtime will not work.\n+::\n+",
        "comment_created_at": "2025-05-28T15:37:43+00:00",
        "comment_author": "pi0",
        "comment_body": "In confirmation to @huang-julien yes, `process.env` is guaranteed by nitro to be accessible at least in all server contexts we can also sync same env with context of nuxt config and modules.\r\n\r\nStatic build and client-side are exception.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2114685100",
    "pr_number": 32223,
    "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
    "created_at": "2025-05-29T20:18:21+00:00",
    "commented_code": "* Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::important\n+`nuxt.config.ts` only runs at build time, therefore you can not change anything in it using environment variables at runtime (including runtimeConfig). Refer to Alexamder Lichter's video",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2114685100",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 32223,
        "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
        "discussion_id": "2114685100",
        "commented_code": "@@ -55,6 +55,14 @@ Since `.env` files are not used in production, you must explicitly set environme\n \n * Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::important\n+`nuxt.config.ts` only runs at build time, therefore you can not change anything in it using environment variables at runtime (including runtimeConfig). Refer to Alexamder Lichter's video",
        "comment_created_at": "2025-05-29T20:18:21+00:00",
        "comment_author": "cybercoder-naj",
        "comment_body": "Looking at the context of the entire file right now, I believe this particular sentence does not hold much value. I read through the whole page, and I think this point has come across clearly especially in [line 16](https://github.com/nuxt/nuxt/blob/91f3e5af82dc0a9eddc9d9c269ed7ff0423036de/docs/2.guide/2.directory-structure/2.env.md?plain=1#L16) (maybe because I have knowledge bias).\r\n\r\nIt might be worth altering this line to talk about how nuxt prefixes the environment variables with `NUXT_` or `NUXT_PUBLIC_` when the production build is running. [Here's](https://github.com/search?q=repo%3Aicdocsoc%2Fichack+NUXT_PUBLIC_API_BASE_URL&type=code) an example. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2118056487",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 32223,
        "pr_file": "docs/2.guide/2.directory-structure/2.env.md",
        "discussion_id": "2114685100",
        "commented_code": "@@ -55,6 +55,14 @@ Since `.env` files are not used in production, you must explicitly set environme\n \n * Many cloud service providers, such as Vercel, Netlify, and AWS, provide interfaces for setting environment variables via their dashboards, CLI tools or configuration files.\n \n+::important\n+`nuxt.config.ts` only runs at build time, therefore you can not change anything in it using environment variables at runtime (including runtimeConfig). Refer to Alexamder Lichter's video",
        "comment_created_at": "2025-05-31T16:49:28+00:00",
        "comment_author": "paranoidPhantom",
        "comment_body": "Added an ::important block with a link to runtimeConfig docs. Not sure if it's necessary and will get merged, but I lean towards it being beneficial.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1186719869",
    "pr_number": 20636,
    "pr_file": "docs/1.getting-started/3.configuration.md",
    "created_at": "2023-05-06T16:44:43+00:00",
    "commented_code": "})\n ```\n \n-This file will often be mentioned in the documentation, for example to add custom scripts, register modules or change rendering modes.\n+This file will often be mentioned in the documentation, for example, to add custom scripts, register modules or change rendering modes.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1186719869",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/1.getting-started/3.configuration.md",
        "discussion_id": "1186719869",
        "commented_code": "@@ -19,19 +19,19 @@ export default defineNuxtConfig({\n })\n ```\n \n-This file will often be mentioned in the documentation, for example to add custom scripts, register modules or change rendering modes.\n+This file will often be mentioned in the documentation, for example, to add custom scripts, register modules or change rendering modes.",
        "comment_created_at": "2023-05-06T16:44:43+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nThis file will often be mentioned in the documentation, for example, to add custom scripts, register modules, or change rendering modes.\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1186740642",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/1.getting-started/3.configuration.md",
        "discussion_id": "1186719869",
        "commented_code": "@@ -19,19 +19,19 @@ export default defineNuxtConfig({\n })\n ```\n \n-This file will often be mentioned in the documentation, for example to add custom scripts, register modules or change rendering modes.\n+This file will often be mentioned in the documentation, for example, to add custom scripts, register modules or change rendering modes.",
        "comment_created_at": "2023-05-06T20:04:49+00:00",
        "comment_author": "GalacticHypernova",
        "comment_body": "Added!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1186720249",
    "pr_number": 20636,
    "pr_file": "docs/1.getting-started/3.configuration.md",
    "created_at": "2023-05-06T16:47:54+00:00",
    "commented_code": "})\n ```\n \n-This file will often be mentioned in the documentation, for example to add custom scripts, register modules or change rendering modes.\n+This file will often be mentioned in the documentation, for example, to add custom scripts, register modules or change rendering modes.\n \n ::alert{type=info}\n-Every configuration option is described in the [Configuration Reference](/docs/api/configuration/nuxt-config).\n+Every configuration option is in the [Configuration Reference](/docs/api/configuration/nuxt-config).\n ::\n \n ::alert{type=info}\n-You don't have to use TypeScript to build an application with Nuxt. However, it is strongly recommended to use the `.ts` extension for the `nuxt.config` file. This way you can benefit from hints in your IDE to avoid typos and mistakes while editing your configuration.\n+You don't have to use TypeScript to build an application with Nuxt. However, please use the `.ts` extension for the `nuxt.config` file. This way, you can benefit from hints in your IDE to avoid typos and mistakes while editing your configuration.\n ::\n \n ### Environment Variables and Private Tokens\n \n-The `runtimeConfig` API exposes values like environment variables to the rest of your application. By default, these keys are only available server-side. The keys within `runtimeConfig.public` are also available client-side.\n+The `runtimeConfig` API exposes values like environment variables to the rest of your application. By default, these keys are only available server-side. The keys within `runtimeConfig.public` are also available on the client side.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1186720249",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/1.getting-started/3.configuration.md",
        "discussion_id": "1186720249",
        "commented_code": "@@ -19,19 +19,19 @@ export default defineNuxtConfig({\n })\n ```\n \n-This file will often be mentioned in the documentation, for example to add custom scripts, register modules or change rendering modes.\n+This file will often be mentioned in the documentation, for example, to add custom scripts, register modules or change rendering modes.\n \n ::alert{type=info}\n-Every configuration option is described in the [Configuration Reference](/docs/api/configuration/nuxt-config).\n+Every configuration option is in the [Configuration Reference](/docs/api/configuration/nuxt-config).\n ::\n \n ::alert{type=info}\n-You don't have to use TypeScript to build an application with Nuxt. However, it is strongly recommended to use the `.ts` extension for the `nuxt.config` file. This way you can benefit from hints in your IDE to avoid typos and mistakes while editing your configuration.\n+You don't have to use TypeScript to build an application with Nuxt. However, please use the `.ts` extension for the `nuxt.config` file. This way, you can benefit from hints in your IDE to avoid typos and mistakes while editing your configuration.\n ::\n \n ### Environment Variables and Private Tokens\n \n-The `runtimeConfig` API exposes values like environment variables to the rest of your application. By default, these keys are only available server-side. The keys within `runtimeConfig.public` are also available client-side.\n+The `runtimeConfig` API exposes values like environment variables to the rest of your application. By default, these keys are only available server-side. The keys within `runtimeConfig.public` are also available on the client side.",
        "comment_created_at": "2023-05-06T16:47:54+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nThe `runtimeConfig` API exposes values like environment variables to the rest of your application. By default, these keys are only available on the server side. The keys within `runtimeConfig.public` are also available on the client side.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1186720629",
    "pr_number": 20636,
    "pr_file": "docs/1.getting-started/3.configuration.md",
    "created_at": "2023-05-06T16:51:21+00:00",
    "commented_code": "## App Configuration\n \n-The `app.config.ts` file, located in the source directory (by default the root of the project), is used to expose public variables that can be determined at build time. Contrary to the `runtimeConfig` option, these can not be overridden using environment variables.\n+The `app.config.ts` file, located in the source directory (by default, the project root), is used to expose public variables that can be determined at build time. Contrary to the `runtimeConfig` option, these can not be overridden using environment variables.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1186720629",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/1.getting-started/3.configuration.md",
        "discussion_id": "1186720629",
        "commented_code": "@@ -69,7 +69,7 @@ const runtimeConfig = useRuntimeConfig()\n \n ## App Configuration\n \n-The `app.config.ts` file, located in the source directory (by default the root of the project), is used to expose public variables that can be determined at build time. Contrary to the `runtimeConfig` option, these can not be overridden using environment variables.\n+The `app.config.ts` file, located in the source directory (by default, the project root), is used to expose public variables that can be determined at build time. Contrary to the `runtimeConfig` option, these can not be overridden using environment variables.",
        "comment_created_at": "2023-05-06T16:51:21+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nThe `app.config.ts` file, located in the source directory (by default, in the project root), is used to expose public variables that can be determined at build time. Contrary to the `runtimeConfig` option, these can't be overridden using environment variables.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1186720879",
    "pr_number": 20636,
    "pr_file": "docs/1.getting-started/3.configuration.md",
    "created_at": "2023-05-06T16:53:58+00:00",
    "commented_code": "## `runtimeConfig` vs `app.config`\n \n-As stated above, `runtimeConfig` and `app.config` are both used to expose variables to the rest of your application. To determine whether you should use one or the other, here are some guidelines:\n+As stated above, `runtimeConfig` and `app.config` expose variables to the rest of your application. To determine whether you should use one or the other, here are some guidelines:\n \n - `runtimeConfig`: Private or public tokens that need to be specified after build using environment variables.\n-- `app.config` : Public tokens that are determined at build time, website configuration such as theme variant, title and any project config that are not sensitive.\n+- `app.config` : Public tokens, determined at build time, for website configuration such as theme variant, title, and any project config that is not sensitive.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1186720879",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/1.getting-started/3.configuration.md",
        "discussion_id": "1186720879",
        "commented_code": "@@ -97,10 +97,10 @@ const appConfig = useAppConfig()\n \n ## `runtimeConfig` vs `app.config`\n \n-As stated above, `runtimeConfig` and `app.config` are both used to expose variables to the rest of your application. To determine whether you should use one or the other, here are some guidelines:\n+As stated above, `runtimeConfig` and `app.config` expose variables to the rest of your application. To determine whether you should use one or the other, here are some guidelines:\n \n - `runtimeConfig`: Private or public tokens that need to be specified after build using environment variables.\n-- `app.config` : Public tokens that are determined at build time, website configuration such as theme variant, title and any project config that are not sensitive.\n+- `app.config` : Public tokens, determined at build time, for website configuration such as theme variant, title, and any project config that is not sensitive.",
        "comment_created_at": "2023-05-06T16:53:58+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\n- `app.config` : Public tokens, determined at build time, for website configuration such as theme variant, title, and any project configuration that is not sensitive.\r\n```",
        "pr_file_module": null
      }
    ]
  }
]