[
  {
    "discussion_id": "2068158546",
    "pr_number": 31945,
    "pr_file": "packages/nuxt/src/app/plugins/view-transitions.client.ts",
    "created_at": "2025-04-30T08:29:18+00:00",
    "commented_code": "const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches\n     const prefersNoTransition = prefersReducedMotion && viewTransitionMode !== 'always'\n \n-    if (viewTransitionMode === false || prefersNoTransition || !isChangingPage(to, from)) {\n+    if (\n+      viewTransitionMode === false ||\n+      prefersNoTransition ||\n+      !isChangingPage(to, from) ||\n+      hasUAVisualTransition",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2068158546",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 31945,
        "pr_file": "packages/nuxt/src/app/plugins/view-transitions.client.ts",
        "discussion_id": "2068158546",
        "commented_code": "@@ -26,7 +33,12 @@ export default defineNuxtPlugin((nuxtApp) => {\n     const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches\n     const prefersNoTransition = prefersReducedMotion && viewTransitionMode !== 'always'\n \n-    if (viewTransitionMode === false || prefersNoTransition || !isChangingPage(to, from)) {\n+    if (\n+      viewTransitionMode === false ||\n+      prefersNoTransition ||\n+      !isChangingPage(to, from) ||\n+      hasUAVisualTransition",
        "comment_created_at": "2025-04-30T08:29:18+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\n      hasUAVisualTransition ||\r\n      !isChangingPage(to, from)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2046876556",
    "pr_number": 25864,
    "pr_file": "packages/schema/src/config/experimental.ts",
    "created_at": "2025-04-16T12:58:09+00:00",
    "commented_code": "* Whether Nuxt should stop if a Nuxt module is incompatible.\n      */\n     enforceModuleCompatibility: false,\n+\n+    /**\n+     * For `useAsyncData` and `useFetch`, whether `pending` should be true when data has not yet started to be fetched.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2046876556",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 25864,
        "pr_file": "packages/schema/src/config/experimental.ts",
        "discussion_id": "2046876556",
        "commented_code": "@@ -620,5 +620,14 @@ export default defineResolvers({\n      * Whether Nuxt should stop if a Nuxt module is incompatible.\n      */\n     enforceModuleCompatibility: false,\n+\n+    /**\n+     * For `useAsyncData` and `useFetch`, whether `pending` should be true when data has not yet started to be fetched.",
        "comment_created_at": "2025-04-16T12:58:09+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\n     * For `useAsyncData` and `useFetch`, whether `pending` should be `true` when data has not yet started to be fetched.\r\n```",
        "pr_file_module": null
      }
    ]
  }
]