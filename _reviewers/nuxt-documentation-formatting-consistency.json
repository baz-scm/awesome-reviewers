[
  {
    "discussion_id": "1678157601",
    "pr_number": 28160,
    "pr_file": "docs/2.guide/3.going-further/1.experimental-features.md",
    "created_at": "2024-07-15T17:14:41+00:00",
    "commented_code": "## emitRouteChunkError\n \n-Emits `app:chunkError` hook when there is an error loading vite/webpack chunks. Default behavior is to perform a hard reload of the new route when a chunk fails to load.\n+Emits `app:chunkError` hook when there is an error loading vite/webpack chunks. Default behavior is to perform a reload of the new route on navigation to a new route when a chunk fails to load.\n+\n+If you set this to `'automatic-immediate'` Nuxt will reload the current route immediatly, instead of waiting for a navigation. This is useful for chunk errors that are not triggered by navigation, e.g., when your Nuxt app fails to load a [lazy component](docs/guide/directory-structure/components#dynamic-imports). A potential downside of this behavior is undesired reloads, e.g., when your app does not need the chunk that caused the error.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1678157601",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 28160,
        "pr_file": "docs/2.guide/3.going-further/1.experimental-features.md",
        "discussion_id": "1678157601",
        "commented_code": "@@ -59,14 +59,16 @@ This feature will likely be removed in a near future.\n \n ## emitRouteChunkError\n \n-Emits `app:chunkError` hook when there is an error loading vite/webpack chunks. Default behavior is to perform a hard reload of the new route when a chunk fails to load.\n+Emits `app:chunkError` hook when there is an error loading vite/webpack chunks. Default behavior is to perform a reload of the new route on navigation to a new route when a chunk fails to load.\n+\n+If you set this to `'automatic-immediate'` Nuxt will reload the current route immediatly, instead of waiting for a navigation. This is useful for chunk errors that are not triggered by navigation, e.g., when your Nuxt app fails to load a [lazy component](docs/guide/directory-structure/components#dynamic-imports). A potential downside of this behavior is undesired reloads, e.g., when your app does not need the chunk that caused the error.",
        "comment_created_at": "2024-07-15T17:14:41+00:00",
        "comment_author": "BracketJohn",
        "comment_body": "```suggestion\r\nIf you set this to `'automatic-immediate'` Nuxt will reload the current route immediatly, instead of waiting for a navigation. This is useful for chunk errors that are not triggered by navigation, e.g., when your Nuxt app fails to load a [lazy component](/docs/guide/directory-structure/components#dynamic-imports). A potential downside of this behavior is undesired reloads, e.g., when your app does not need the chunk that caused the error.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1996774868",
    "pr_number": 31373,
    "pr_file": "docs/1.getting-started/6.data-fetching.md",
    "created_at": "2025-03-15T11:10:06+00:00",
    "commented_code": "[`useFetch`](/docs/api/composables/use-fetch) and [`useAsyncData`](/docs/api/composables/use-async-data) use keys to prevent refetching the same data.\n \n - [`useFetch`](/docs/api/composables/use-fetch) uses the provided URL as a key. Alternatively, a `key` value can be provided in the `options` object passed as a last argument.\n-- [`useAsyncData`](/docs/api/composables/use-async-data) uses its first argument as a key if it is a string. If the first argument is the handler function that performs the query, then a key that is unique to the file name and line number of the instance of\u00a0`useAsyncData`\u00a0will be generated for you.\n+- [`useAsyncData`](/docs/api/composables/use-async-data) uses its first argument as a key if it is a string. If the first argument is the handler function that performs the query, then a key that is unique to the file name and line number of the instance of `useAsyncData` will be generated for you.\n \n ::tip\n To get the cached data by key, you can use [`useNuxtData`](/docs/api/composables/use-nuxt-data)\n ::\n \n+#### Shared State and Option Consistency\n+\n+When multiple components use the same key with `useAsyncData` or `useFetch`, they will share the same data, error, and status refs. This ensures consistency across components but requires some options to be consistent.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1996774868",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 31373,
        "pr_file": "docs/1.getting-started/6.data-fetching.md",
        "discussion_id": "1996774868",
        "commented_code": "@@ -350,12 +350,68 @@ Both `pick` and `transform` don't prevent the unwanted data from being fetched i\n [`useFetch`](/docs/api/composables/use-fetch) and [`useAsyncData`](/docs/api/composables/use-async-data) use keys to prevent refetching the same data.\n \n - [`useFetch`](/docs/api/composables/use-fetch) uses the provided URL as a key. Alternatively, a `key` value can be provided in the `options` object passed as a last argument.\n-- [`useAsyncData`](/docs/api/composables/use-async-data) uses its first argument as a key if it is a string. If the first argument is the handler function that performs the query, then a key that is unique to the file name and line number of the instance of\u00a0`useAsyncData`\u00a0will be generated for you.\n+- [`useAsyncData`](/docs/api/composables/use-async-data) uses its first argument as a key if it is a string. If the first argument is the handler function that performs the query, then a key that is unique to the file name and line number of the instance of `useAsyncData` will be generated for you.\n \n ::tip\n To get the cached data by key, you can use [`useNuxtData`](/docs/api/composables/use-nuxt-data)\n ::\n \n+#### Shared State and Option Consistency\n+\n+When multiple components use the same key with `useAsyncData` or `useFetch`, they will share the same data, error, and status refs. This ensures consistency across components but requires some options to be consistent.",
        "comment_created_at": "2025-03-15T11:10:06+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nWhen multiple components use the same key with `useAsyncData` or `useFetch`, they will share the same `data`, `error` and `status` refs. This ensures consistency across components but requires some options to be consistent.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1996774901",
    "pr_number": 31373,
    "pr_file": "docs/3.api/2.composables/use-async-data.md",
    "created_at": "2025-03-15T11:10:22+00:00",
    "commented_code": "Learn how to use `transform` and `getCachedData` to avoid superfluous calls to an API and cache data for visitors on the client.\n ::\n \n+### Shared State and Option Consistency\n+\n+When using the same key for multiple `useAsyncData` calls, they will share the same data, error, and status refs. This ensures consistency across components but requires option consistency.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1996774901",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 31373,
        "pr_file": "docs/3.api/2.composables/use-async-data.md",
        "discussion_id": "1996774901",
        "commented_code": "@@ -98,6 +115,35 @@ You can use `useLazyAsyncData` to have the same behavior as `lazy: true` with `u\n Learn how to use `transform` and `getCachedData` to avoid superfluous calls to an API and cache data for visitors on the client.\n ::\n \n+### Shared State and Option Consistency\n+\n+When using the same key for multiple `useAsyncData` calls, they will share the same data, error, and status refs. This ensures consistency across components but requires option consistency.",
        "comment_created_at": "2025-03-15T11:10:22+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nWhen using the same key for multiple `useAsyncData` calls, they will share the same `data`, `error` and `status` refs. This ensures consistency across components but requires option consistency.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2046859480",
    "pr_number": 25864,
    "pr_file": "docs/1.getting-started/18.upgrade.md",
    "created_at": "2025-04-16T12:49:40+00:00",
    "commented_code": "Please report an issue if you are doing so, as we do not plan to keep this as configurable.\n \n+### Alignment of `pending` value in `useAsyncData` and `useFetch`\n+\n+\ud83d\udea6 **Impact Level**: Medium\n+\n+The `pending` object returned from `useAsyncData`, `useFetch`, `useLazyAsyncData` and `useLazyFetch` is now a `computed` property that is true only when `status` is also pending.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2046859480",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 25864,
        "pr_file": "docs/1.getting-started/18.upgrade.md",
        "discussion_id": "2046859480",
        "commented_code": "@@ -708,6 +709,52 @@ export default defineNuxtConfig({\n \n Please report an issue if you are doing so, as we do not plan to keep this as configurable.\n \n+### Alignment of `pending` value in `useAsyncData` and `useFetch`\n+\n+\ud83d\udea6 **Impact Level**: Medium\n+\n+The `pending` object returned from `useAsyncData`, `useFetch`, `useLazyAsyncData` and `useLazyFetch` is now a `computed` property that is true only when `status` is also pending.",
        "comment_created_at": "2025-04-16T12:49:40+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nThe `pending` object returned from `useAsyncData`, `useFetch`, `useLazyAsyncData` and `useLazyFetch` is now a computed property that is `true` only when `status` is also pending.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2046864739",
    "pr_number": 25864,
    "pr_file": "docs/2.guide/3.going-further/1.experimental-features.md",
    "created_at": "2025-04-16T12:52:12+00:00",
    "commented_code": "::read-more{icon=\"i-simple-icons-github\" color=\"gray\" to=\"https://github.com/nuxt/nuxt/pull/31373\" target=\"_blank\"}\n See PR #31373 for implementation details.\n ::\n+\n+## pendingWhenIdle\n+\n+If set to `false`, the `pending` object returned from `useAsyncData`, `useFetch`, `useLazyAsyncData` and `useLazyFetch` will be a `computed` property that is true only when `status` is also pending.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2046864739",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 25864,
        "pr_file": "docs/2.guide/3.going-further/1.experimental-features.md",
        "discussion_id": "2046864739",
        "commented_code": "@@ -621,3 +621,17 @@ export default defineNuxtConfig({\n ::read-more{icon=\"i-simple-icons-github\" color=\"gray\" to=\"https://github.com/nuxt/nuxt/pull/31373\" target=\"_blank\"}\n See PR #31373 for implementation details.\n ::\n+\n+## pendingWhenIdle\n+\n+If set to `false`, the `pending` object returned from `useAsyncData`, `useFetch`, `useLazyAsyncData` and `useLazyFetch` will be a `computed` property that is true only when `status` is also pending.",
        "comment_created_at": "2025-04-16T12:52:12+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nIf set to `false`, the `pending` object returned from `useAsyncData`, `useFetch`, `useLazyAsyncData` and `useLazyFetch` will be a computed property that is `true` only when `status` is also pending.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2002148131",
    "pr_number": 31234,
    "pr_file": "docs/3.api/3.utils/prerender-routes.md",
    "created_at": "2025-03-18T23:14:01+00:00",
    "commented_code": "::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full statically generated sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article');",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2002148131",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 31234,
        "pr_file": "docs/3.api/3.utils/prerender-routes.md",
        "discussion_id": "2002148131",
        "commented_code": "@@ -28,3 +28,19 @@ prerenderRoutes(['/', '/about'])\n ::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full statically generated sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article');",
        "comment_created_at": "2025-03-18T23:14:01+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\nprerenderRoutes('/api/content/article/name-of-article')\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1928428053",
    "pr_number": 30729,
    "pr_file": "docs/2.guide/1.concepts/3.rendering.md",
    "created_at": "2025-01-24T09:57:07+00:00",
    "commented_code": "The `200.html` and `404.html` might be useful for the hosting provider you are using.\n \n+#### Skip default routes generation\n+The default files `index.html`, `200.html` and `404.html` are part of Nuxt and often helpful. However, if you need to prevent these files from being generated in your build, you can use the `\"prerender:generate\"` hook from [Nitro](https://nuxt.com/docs/getting-started/prerendering#prerendergenerate-nitro-hook).\n+In order to achieve this we can change how the routes are prerendered. Just add this to your hooks in your nuxt.config.ts:\n+\n+```ts twoslash [nuxt.config.ts]\n+export default defineNuxtConfig({\n+  ssr: false,\n+  nitro: {\n+    hooks: {\n+      \"prerender:generate\"(route) {\n+        const routesToSkip = ['/index.html', '/200.html', '/404.html']; \n+        if (routesToSkip.includes(route.route) ) {\n+          route.skip = true;\n+        }\n+      }\n+    },\n+  }\n+});",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1928428053",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 30729,
        "pr_file": "docs/2.guide/1.concepts/3.rendering.md",
        "discussion_id": "1928428053",
        "commented_code": "@@ -126,6 +126,27 @@ This will produce three files:\n \n The `200.html` and `404.html` might be useful for the hosting provider you are using.\n \n+#### Skip default routes generation\n+The default files `index.html`, `200.html` and `404.html` are part of Nuxt and often helpful. However, if you need to prevent these files from being generated in your build, you can use the `\"prerender:generate\"` hook from [Nitro](https://nuxt.com/docs/getting-started/prerendering#prerendergenerate-nitro-hook).\n+In order to achieve this we can change how the routes are prerendered. Just add this to your hooks in your nuxt.config.ts:\n+\n+```ts twoslash [nuxt.config.ts]\n+export default defineNuxtConfig({\n+  ssr: false,\n+  nitro: {\n+    hooks: {\n+      \"prerender:generate\"(route) {\n+        const routesToSkip = ['/index.html', '/200.html', '/404.html']; \n+        if (routesToSkip.includes(route.route) ) {\n+          route.skip = true;\n+        }\n+      }\n+    },\n+  }\n+});",
        "comment_created_at": "2025-01-24T09:57:07+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\n  ssr: false,\r\n  nitro: {\r\n    hooks: {\r\n      'prerender:generate'(route) {\r\n        const routesToSkip = ['/index.html', '/200.html', '/404.html']\r\n        if (routesToSkip.includes(route.route) ) {\r\n          route.skip = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1928428632",
    "pr_number": 30729,
    "pr_file": "docs/2.guide/1.concepts/3.rendering.md",
    "created_at": "2025-01-24T09:57:34+00:00",
    "commented_code": "The `200.html` and `404.html` might be useful for the hosting provider you are using.\n \n+#### Skip default routes generation\n+\n+When prerendering a client-rendered app, Nuxt will generate `index.html`, `200.html` and `404.html` files by default. However, if you need to prevent any (or all) of these files from being generated in your build, you can use the `'prerender:generate'` hook from [Nitro](/docs/getting-started/prerendering#prerendergenerate-nitro-hook).",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1928428632",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 30729,
        "pr_file": "docs/2.guide/1.concepts/3.rendering.md",
        "discussion_id": "1928428632",
        "commented_code": "@@ -126,6 +126,26 @@ This will produce three files:\n \n The `200.html` and `404.html` might be useful for the hosting provider you are using.\n \n+#### Skip default routes generation\n+\n+When prerendering a client-rendered app, Nuxt will generate `index.html`, `200.html` and `404.html` files by default. However, if you need to prevent any (or all) of these files from being generated in your build, you can use the `'prerender:generate'` hook from [Nitro](/docs/getting-started/prerendering#prerendergenerate-nitro-hook).",
        "comment_created_at": "2025-01-24T09:57:34+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\nWhen prerendering a client-rendered app, Nuxt will generate `index.html`, `200.html` and `404.html` files by default. However, if you need to prevent any (or all) of these files from being generated in your build, you can use the `'prerender:generate'` hook from [Nitro](/docs/getting-started/prerendering#prerendergenerate-nitro-hook).\r\n\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1629399353",
    "pr_number": 27426,
    "pr_file": "docs/2.guide/1.concepts/3.rendering.md",
    "created_at": "2024-06-06T12:04:57+00:00",
    "commented_code": ":read-more{title=\"SPA Loading Template\" to=\"/docs/api/configuration/nuxt-config#spaloadingtemplate\"}\n ::\n \n+### Deploying a Static Client-Rendered App\n+\n+If you deploy your app to [static hosting](getting-started/deployment#static-hosting) with the `nuxi generate` or `nuxi build --prerender` commands, then by default, Nuxt will render every page as a separate static HTML file.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1629399353",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 27426,
        "pr_file": "docs/2.guide/1.concepts/3.rendering.md",
        "discussion_id": "1629399353",
        "commented_code": "@@ -69,6 +69,32 @@ If you do use `ssr: false`, you should also place an HTML file in `~/app/spa-loa\n :read-more{title=\"SPA Loading Template\" to=\"/docs/api/configuration/nuxt-config#spaloadingtemplate\"}\n ::\n \n+### Deploying a Static Client-Rendered App\n+\n+If you deploy your app to [static hosting](getting-started/deployment#static-hosting) with the `nuxi generate` or `nuxi build --prerender` commands, then by default, Nuxt will render every page as a separate static HTML file.",
        "comment_created_at": "2024-06-06T12:04:57+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\nIf you deploy your app to [static hosting](/docs/getting-started/deployment#static-hosting) with the `nuxi generate` or `nuxi build --prerender` commands, then by default, Nuxt will render every page as a separate static HTML file.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1607343020",
    "pr_number": 27284,
    "pr_file": "docs/3.api/1.components/4.nuxt-link.md",
    "created_at": "2024-05-20T22:10:19+00:00",
    "commented_code": "</template>\n ```\n \n+### Passing Params to Dynamic Routes\n+\n+In this example, we pass the `id` param to link to the route `~/pages/posts/[id].vue`.\n+\n+```vue [pages/index.vue]\n+<template>\n+  <NuxtLink :to={ name: 'posts-id', params: { id: 123 }>",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1607343020",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 27284,
        "pr_file": "docs/3.api/1.components/4.nuxt-link.md",
        "discussion_id": "1607343020",
        "commented_code": "@@ -25,6 +25,18 @@ In this example, we use `<NuxtLink>` component to link to another page of the ap\n </template>\n ```\n \n+### Passing Params to Dynamic Routes\n+\n+In this example, we pass the `id` param to link to the route `~/pages/posts/[id].vue`.\n+\n+```vue [pages/index.vue]\n+<template>\n+  <NuxtLink :to={ name: 'posts-id', params: { id: 123 }>",
        "comment_created_at": "2024-05-20T22:10:19+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\n  <NuxtLink :to=\"{ name: 'posts-id', params: { id: 123 } }\">\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1186907384",
    "pr_number": 20636,
    "pr_file": "docs/7.migration/6.pages-and-layouts.md",
    "created_at": "2023-05-07T20:07:06+00:00",
    "commented_code": "## `<NuxtLink>` Component\n \n-Most of the syntax and functionality are the same for the global [NuxtLink](/docs/api/components/nuxt-link) component. If you have been using the shortcut `<NLink>` format, you should update this to use `<NuxtLink>`.\n+The syntax and functionality are mostly the same for the global [NuxtLink](/docs/api/components/nuxt-link) component. If you have been using the shortcut `<NLink>` format, you should update this to use `<NuxtLink>`.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1186907384",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/7.migration/6.pages-and-layouts.md",
        "discussion_id": "1186907384",
        "commented_code": "@@ -179,15 +179,15 @@ definePageMeta({\n \n ## `<NuxtLink>` Component\n \n-Most of the syntax and functionality are the same for the global [NuxtLink](/docs/api/components/nuxt-link) component. If you have been using the shortcut `<NLink>` format, you should update this to use `<NuxtLink>`.\n+The syntax and functionality are mostly the same for the global [NuxtLink](/docs/api/components/nuxt-link) component. If you have been using the shortcut `<NLink>` format, you should update this to use `<NuxtLink>`.",
        "comment_created_at": "2023-05-07T20:07:06+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nThe syntax and functionality are mostly the same for the global [`<NuxtLink>`](/docs/api/components/nuxt-link) component. If you have been using the shortcut `<NLink>` format, you should update this to use `<NuxtLink>`.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1186907735",
    "pr_number": 20636,
    "pr_file": "docs/7.migration/5.plugins-and-middleware.md",
    "created_at": "2023-05-07T20:10:09+00:00",
    "commented_code": "::\n \n-Much like Nuxt 2, route middleware placed in your `~/middleware` folder is automatically registered. You can then specify it by name in a component. However, this is done with `definePageMeta` rather than as a component option.\n+Much like Nuxt 2, route middleware placed in your `~/middleware` folder gets registered automatically. You can then specify it by name in a component. However, this is done with `definePageMeta` rather than as a component option.\n \n-`navigateTo` is one of a number of route helper functions, which you can read more about in [the documentation about route middleware](/docs/guide/directory-structure/middleware).\n+`navigateTo` is one of several route helper functions, which you can read more about in [the documentation about route middleware](/docs/guide/directory-structure/middleware).",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1186907735",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/7.migration/5.plugins-and-middleware.md",
        "discussion_id": "1186907735",
        "commented_code": "@@ -63,11 +63,11 @@ export default defineNuxtRouteMiddleware((to, from) => {\n \n ::\n \n-Much like Nuxt 2, route middleware placed in your `~/middleware` folder is automatically registered. You can then specify it by name in a component. However, this is done with `definePageMeta` rather than as a component option.\n+Much like Nuxt 2, route middleware placed in your `~/middleware` folder gets registered automatically. You can then specify it by name in a component. However, this is done with `definePageMeta` rather than as a component option.\n \n-`navigateTo` is one of a number of route helper functions, which you can read more about in [the documentation about route middleware](/docs/guide/directory-structure/middleware).\n+`navigateTo` is one of several route helper functions, which you can read more about in [the documentation about route middleware](/docs/guide/directory-structure/middleware).",
        "comment_created_at": "2023-05-07T20:10:09+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\n`navigateTo` is one of several route helper functions, which you can read more about in the [documentation about route middleware](/docs/guide/directory-structure/middleware).\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1191910289",
    "pr_number": 20636,
    "pr_file": "docs/2.guide/2.directory-structure/1.pages.md",
    "created_at": "2023-05-12T05:06:47+00:00",
    "commented_code": "#### `layout`\n \n-You can define the layout used to render the route. This can be either false (to disable any layout), a string or a ref/computed, if you want to make it reactive in some way. [More about layouts](/docs/guide/directory-structure/layouts).\n+You can define the layout used to render the route. This can be either false (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1191910289",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/2.guide/2.directory-structure/1.pages.md",
        "discussion_id": "1191910289",
        "commented_code": "@@ -280,25 +280,25 @@ You can set a default value for this property [in your `nuxt.config`](/docs/api/\n \n #### `layout`\n \n-You can define the layout used to render the route. This can be either false (to disable any layout), a string or a ref/computed, if you want to make it reactive in some way. [More about layouts](/docs/guide/directory-structure/layouts).\n+You can define the layout used to render the route. This can be either false (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).",
        "comment_created_at": "2023-05-12T05:06:47+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nYou can define the layout used to render the route. This can be either `false` (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1191910336",
    "pr_number": 20636,
    "pr_file": "docs/2.guide/2.directory-structure/1.pages.md",
    "created_at": "2023-05-12T05:06:54+00:00",
    "commented_code": "#### `layout`\n \n-You can define the layout used to render the route. This can be either false (to disable any layout), a string or a ref/computed, if you want to make it reactive in some way. [More about layouts](/docs/guide/directory-structure/layouts).\n+You can define the layout used to render the route. This can be either false (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1191910336",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/2.guide/2.directory-structure/1.pages.md",
        "discussion_id": "1191910336",
        "commented_code": "@@ -280,25 +280,25 @@ You can set a default value for this property [in your `nuxt.config`](/docs/api/\n \n #### `layout`\n \n-You can define the layout used to render the route. This can be either false (to disable any layout), a string or a ref/computed, if you want to make it reactive in some way. [More about layouts](/docs/guide/directory-structure/layouts).\n+You can define the layout used to render the route. This can be either false (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).",
        "comment_created_at": "2023-05-12T05:06:54+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nYou can define the layout used to render the route. This can be either `false` (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1191910399",
    "pr_number": 20636,
    "pr_file": "docs/2.guide/2.directory-structure/1.pages.md",
    "created_at": "2023-05-12T05:07:01+00:00",
    "commented_code": "#### `layout`\n \n-You can define the layout used to render the route. This can be either false (to disable any layout), a string or a ref/computed, if you want to make it reactive in some way. [More about layouts](/docs/guide/directory-structure/layouts).\n+You can define the layout used to render the route. This can be either false (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1191910399",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/2.guide/2.directory-structure/1.pages.md",
        "discussion_id": "1191910399",
        "commented_code": "@@ -280,25 +280,25 @@ You can set a default value for this property [in your `nuxt.config`](/docs/api/\n \n #### `layout`\n \n-You can define the layout used to render the route. This can be either false (to disable any layout), a string or a ref/computed, if you want to make it reactive in some way. [More about layouts](/docs/guide/directory-structure/layouts).\n+You can define the layout used to render the route. This can be either false (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).",
        "comment_created_at": "2023-05-12T05:07:01+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nYou can define the layout used to render the route. This can be either `false` (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1191911379",
    "pr_number": 20636,
    "pr_file": "docs/2.guide/2.directory-structure/1.pages.md",
    "created_at": "2023-05-12T05:09:11+00:00",
    "commented_code": "#### `layout`\n \n-You can define the layout used to render the route. This can be either false (to disable any layout), a string or a ref/computed, if you want to make it reactive in some way. [More about layouts](/docs/guide/directory-structure/layouts).\n+You can define the layout used to render the route. This can be either false (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).\n \n #### `layoutTransition` and `pageTransition`\n \n-You can define transition properties for the `<transition>` component that wraps your pages and layouts, or pass `false` to disable the `<transition>` wrapper for that route. You can see a list of options that can be passed [here](https://vuejs.org/api/built-in-components.html#transition) or read [more about how transitions work](https://vuejs.org/guide/built-ins/transition.html#transition).\n+You can define transition properties for the `<transition>` component that wraps your pages and layouts or pass `false` to disable the `<transition>` wrapper for that route. You can see a list of options that can be passed [here](https://vuejs.org/api/built-in-components.html#transition) or read [more about how transitions work](https://vuejs.org/guide/built-ins/transition.html#transition).\n \n You can set default values for these properties [in your `nuxt.config`](/docs/api/configuration/nuxt-config#layouttransition).",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1191911379",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/2.guide/2.directory-structure/1.pages.md",
        "discussion_id": "1191911379",
        "commented_code": "@@ -280,25 +280,25 @@ You can set a default value for this property [in your `nuxt.config`](/docs/api/\n \n #### `layout`\n \n-You can define the layout used to render the route. This can be either false (to disable any layout), a string or a ref/computed, if you want to make it reactive in some way. [More about layouts](/docs/guide/directory-structure/layouts).\n+You can define the layout used to render the route. This can be either false (to disable any layout), a string, or a ref/computed if you want to make it reactive. [More about layouts](/docs/guide/directory-structure/layouts).\n \n #### `layoutTransition` and `pageTransition`\n \n-You can define transition properties for the `<transition>` component that wraps your pages and layouts, or pass `false` to disable the `<transition>` wrapper for that route. You can see a list of options that can be passed [here](https://vuejs.org/api/built-in-components.html#transition) or read [more about how transitions work](https://vuejs.org/guide/built-ins/transition.html#transition).\n+You can define transition properties for the `<transition>` component that wraps your pages and layouts or pass `false` to disable the `<transition>` wrapper for that route. You can see a list of options that can be passed [here](https://vuejs.org/api/built-in-components.html#transition) or read [more about how transitions work](https://vuejs.org/guide/built-ins/transition.html#transition).\n \n You can set default values for these properties [in your `nuxt.config`](/docs/api/configuration/nuxt-config#layouttransition).",
        "comment_created_at": "2023-05-12T05:09:11+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "```suggestion\r\nYou can set default values for these properties in the [`nuxt.config` file](/docs/api/configuration/nuxt-config#layouttransition).\r\n```",
        "pr_file_module": null
      }
    ]
  }
]