[
  {
    "discussion_id": "2002147777",
    "pr_number": 31234,
    "pr_file": "docs/3.api/3.utils/prerender-routes.md",
    "created_at": "2025-03-18T23:13:33+00:00",
    "commented_code": "::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full Statically Generated Sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article');\n+\n+// Somewhere later in App\n+const articleContent = await $fetch('/api/content/article/name-of-article', {\n+  responseType: 'json',\n+});\n+```\n+\n+::warning\n+Fetching prerendered API routes on production looses all headers you set up in `defineEventHandler` on server side! This means the data you fetch will most likely have `application/octet-stream` content type even if it is just a JSON and therefore break the application in unpredictable ways.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2002147777",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 31234,
        "pr_file": "docs/3.api/3.utils/prerender-routes.md",
        "discussion_id": "2002147777",
        "commented_code": "@@ -28,3 +28,19 @@ prerenderRoutes(['/', '/about'])\n ::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full Statically Generated Sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article');\n+\n+// Somewhere later in App\n+const articleContent = await $fetch('/api/content/article/name-of-article', {\n+  responseType: 'json',\n+});\n+```\n+\n+::warning\n+Fetching prerendered API routes on production looses all headers you set up in `defineEventHandler` on server side! This means the data you fetch will most likely have `application/octet-stream` content type even if it is just a JSON and therefore break the application in unpredictable ways.",
        "comment_created_at": "2025-03-18T23:13:33+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\nPrerendered API routes in production may not return the expected response headers, depending on the provider you deploy to. For example, a JSON response might be served with an `application/octet-stream` content type. In this case, you may have to specify an explicit `responseType`.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2002148505",
    "pr_number": 31234,
    "pr_file": "docs/3.api/3.utils/prerender-routes.md",
    "created_at": "2025-03-18T23:14:34+00:00",
    "commented_code": "::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full statically generated sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article');\n+\n+// Somewhere later in App\n+const articleContent = await $fetch('/api/content/article/name-of-article', {\n+  responseType: 'json',\n+})\n+```\n+\n+::warning\n+Prerendered API routes in production may not return the expected response headers, depending on the provider you deploy to. For example, a JSON response might be served with an `application/octet-stream` content type. In this case, you may have to specify an explicit `responseType`.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2002148505",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 31234,
        "pr_file": "docs/3.api/3.utils/prerender-routes.md",
        "discussion_id": "2002148505",
        "commented_code": "@@ -28,3 +28,19 @@ prerenderRoutes(['/', '/about'])\n ::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full statically generated sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article');\n+\n+// Somewhere later in App\n+const articleContent = await $fetch('/api/content/article/name-of-article', {\n+  responseType: 'json',\n+})\n+```\n+\n+::warning\n+Prerendered API routes in production may not return the expected response headers, depending on the provider you deploy to. For example, a JSON response might be served with an `application/octet-stream` content type. In this case, you may have to specify an explicit `responseType`.",
        "comment_created_at": "2025-03-18T23:14:34+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\nPrerendered API routes in production may not return the expected response headers, depending on the provider you deploy to. For example, a JSON response might be served with an `application/octet-stream` content type.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2002148576",
    "pr_number": 31234,
    "pr_file": "docs/3.api/3.utils/prerender-routes.md",
    "created_at": "2025-03-18T23:14:40+00:00",
    "commented_code": "::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full statically generated sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article');\n+\n+// Somewhere later in App\n+const articleContent = await $fetch('/api/content/article/name-of-article', {\n+  responseType: 'json',\n+})\n+```\n+\n+::warning\n+Prerendered API routes in production may not return the expected response headers, depending on the provider you deploy to. For example, a JSON response might be served with an `application/octet-stream` content type. In this case, you may have to specify an explicit `responseType`.\n+Always manually set `responseType` when fetching prerenderered API routes!",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2002148576",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 31234,
        "pr_file": "docs/3.api/3.utils/prerender-routes.md",
        "discussion_id": "2002148576",
        "commented_code": "@@ -28,3 +28,19 @@ prerenderRoutes(['/', '/about'])\n ::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full statically generated sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article');\n+\n+// Somewhere later in App\n+const articleContent = await $fetch('/api/content/article/name-of-article', {\n+  responseType: 'json',\n+})\n+```\n+\n+::warning\n+Prerendered API routes in production may not return the expected response headers, depending on the provider you deploy to. For example, a JSON response might be served with an `application/octet-stream` content type. In this case, you may have to specify an explicit `responseType`.\n+Always manually set `responseType` when fetching prerenderered API routes!",
        "comment_created_at": "2025-03-18T23:14:40+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\nAlways manually set `responseType` when fetching prerenderered API routes.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2002148824",
    "pr_number": 31234,
    "pr_file": "docs/3.api/3.utils/prerender-routes.md",
    "created_at": "2025-03-18T23:15:09+00:00",
    "commented_code": "::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full statically generated sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article')\n+\n+// Somewhere later in App\n+const articleContent = await $fetch('/api/content/article/name-of-article', {\n+  responseType: 'json',\n+})\n+```\n+\n+::warning\n+Prerendered API routes in production may not return the expected response headers, depending on the provider you deploy to. For example, a JSON response might be served with an `application/octet-stream` content type.\n+Always manually set `responseType` when fetching prerenderered API routes.",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "2002148824",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 31234,
        "pr_file": "docs/3.api/3.utils/prerender-routes.md",
        "discussion_id": "2002148824",
        "commented_code": "@@ -28,3 +28,19 @@ prerenderRoutes(['/', '/about'])\n ::note\n In the browser, or if called outside prerendering, `prerenderRoutes` will have no effect.\n ::\n+\n+You can even prerender API routes which is particularly useful for full statically generated sites (SSG) because you can then `$fetch` data as if you have an available server!\n+\n+```js\n+prerenderRoutes('/api/content/article/name-of-article')\n+\n+// Somewhere later in App\n+const articleContent = await $fetch('/api/content/article/name-of-article', {\n+  responseType: 'json',\n+})\n+```\n+\n+::warning\n+Prerendered API routes in production may not return the expected response headers, depending on the provider you deploy to. For example, a JSON response might be served with an `application/octet-stream` content type.\n+Always manually set `responseType` when fetching prerenderered API routes.",
        "comment_created_at": "2025-03-18T23:15:09+00:00",
        "comment_author": "danielroe",
        "comment_body": "```suggestion\r\nAlways manually set `responseType` when fetching prerendered API routes.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1186822847",
    "pr_number": 20636,
    "pr_file": "docs/1.getting-started/6.data-fetching.md",
    "created_at": "2023-05-07T10:09:33+00:00",
    "commented_code": "```\n \n ::alert{type=\"warning\"}\n-Be very careful before proxying headers to an external API and just include headers that you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:\n+Practice extreme caution when proxying headers to an external API, and only include headers you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1186822847",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/1.getting-started/6.data-fetching.md",
        "discussion_id": "1186822847",
        "commented_code": "@@ -301,7 +301,7 @@ const { data } = await useFetch('/api/me', { headers })\n ```\n \n ::alert{type=\"warning\"}\n-Be very careful before proxying headers to an external API and just include headers that you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:\n+Practice extreme caution when proxying headers to an external API, and only include headers you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:",
        "comment_created_at": "2023-05-07T10:09:33+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "What about _Use extreme caution_ instead? The former is pretty rare.\r\n```suggestion\r\nPractice extreme caution when proxying headers to an external API, and only include headers you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that **shouldn't** be proxied:\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1186861981",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/1.getting-started/6.data-fetching.md",
        "discussion_id": "1186822847",
        "commented_code": "@@ -301,7 +301,7 @@ const { data } = await useFetch('/api/me', { headers })\n ```\n \n ::alert{type=\"warning\"}\n-Be very careful before proxying headers to an external API and just include headers that you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:\n+Practice extreme caution when proxying headers to an external API, and only include headers you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:",
        "comment_created_at": "2023-05-07T14:19:31+00:00",
        "comment_author": "GalacticHypernova",
        "comment_body": "Use extreme caution sounds a bit odd to me for some reason, but I'm open to opinions!",
        "pr_file_module": null
      },
      {
        "comment_id": "1186875482",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/1.getting-started/6.data-fetching.md",
        "discussion_id": "1186822847",
        "commented_code": "@@ -301,7 +301,7 @@ const { data } = await useFetch('/api/me', { headers })\n ```\n \n ::alert{type=\"warning\"}\n-Be very careful before proxying headers to an external API and just include headers that you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:\n+Practice extreme caution when proxying headers to an external API, and only include headers you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:",
        "comment_created_at": "2023-05-07T15:48:48+00:00",
        "comment_author": "DamianGlowala",
        "comment_body": "Sure! I have some other suggestions:\r\n\r\nBe very careful when (...)\r\nBe extremely careful when (...)\r\nTake special care when (...)",
        "pr_file_module": null
      },
      {
        "comment_id": "1186899022",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 20636,
        "pr_file": "docs/1.getting-started/6.data-fetching.md",
        "discussion_id": "1186822847",
        "commented_code": "@@ -301,7 +301,7 @@ const { data } = await useFetch('/api/me', { headers })\n ```\n \n ::alert{type=\"warning\"}\n-Be very careful before proxying headers to an external API and just include headers that you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:\n+Practice extreme caution when proxying headers to an external API, and only include headers you need. Not all headers are safe to be bypassed and might introduce unwanted behavior. Here is a list of common headers that are NOT to be proxied:",
        "comment_created_at": "2023-05-07T18:58:11+00:00",
        "comment_author": "GalacticHypernova",
        "comment_body": "Added!",
        "pr_file_module": null
      }
    ]
  }
]