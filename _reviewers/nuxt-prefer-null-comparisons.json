[
  {
    "discussion_id": "1518822076",
    "pr_number": 26172,
    "pr_file": "packages/nuxt/src/app/composables/asyncData.ts",
    "created_at": "2024-03-10T11:06:11+00:00",
    "commented_code": "console.warn('[nuxt] `boolean` values are deprecated for the `dedupe` option of `useAsyncData` and will be removed in the future. Use \\'cancel\\' or \\'defer\\' instead.')\n   }\n \n-  const hasCachedData = () => ![null, undefined].includes(options.getCachedData!(key) as any)\n+  const hasCachedData = () => options.getCachedData!(key) != null",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1518822076",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 26172,
        "pr_file": "packages/nuxt/src/app/composables/asyncData.ts",
        "discussion_id": "1518822076",
        "commented_code": "@@ -243,7 +243,7 @@ export function useAsyncData<\n     console.warn('[nuxt] `boolean` values are deprecated for the `dedupe` option of `useAsyncData` and will be removed in the future. Use \\'cancel\\' or \\'defer\\' instead.')\n   }\n \n-  const hasCachedData = () => ![null, undefined].includes(options.getCachedData!(key) as any)\n+  const hasCachedData = () => options.getCachedData!(key) != null",
        "comment_created_at": "2024-03-10T11:06:11+00:00",
        "comment_author": "TheAlexLichter",
        "comment_body": "```suggestion\r\n  const hasCachedData = () => {\r\n    const data = options.getCachedData!(key)\r\n    return data !== null && data !== undefined\r\n }\r\n```\r\n\r\nMaybe explicitly check null and undefined instead?",
        "pr_file_module": null
      },
      {
        "comment_id": "1518823940",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 26172,
        "pr_file": "packages/nuxt/src/app/composables/asyncData.ts",
        "discussion_id": "1518822076",
        "commented_code": "@@ -243,7 +243,7 @@ export function useAsyncData<\n     console.warn('[nuxt] `boolean` values are deprecated for the `dedupe` option of `useAsyncData` and will be removed in the future. Use \\'cancel\\' or \\'defer\\' instead.')\n   }\n \n-  const hasCachedData = () => ![null, undefined].includes(options.getCachedData!(key) as any)\n+  const hasCachedData = () => options.getCachedData!(key) != null",
        "comment_created_at": "2024-03-10T11:17:08+00:00",
        "comment_author": "Mini-ghost",
        "comment_body": "In fact, `value != null` is used in some places inside Nuxt. I think this perhaps clear enough to identify `undefined` or `null` ?",
        "pr_file_module": null
      },
      {
        "comment_id": "1518827659",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 26172,
        "pr_file": "packages/nuxt/src/app/composables/asyncData.ts",
        "discussion_id": "1518822076",
        "commented_code": "@@ -243,7 +243,7 @@ export function useAsyncData<\n     console.warn('[nuxt] `boolean` values are deprecated for the `dedupe` option of `useAsyncData` and will be removed in the future. Use \\'cancel\\' or \\'defer\\' instead.')\n   }\n \n-  const hasCachedData = () => ![null, undefined].includes(options.getCachedData!(key) as any)\n+  const hasCachedData = () => options.getCachedData!(key) != null",
        "comment_created_at": "2024-03-10T11:35:08+00:00",
        "comment_author": "TheAlexLichter",
        "comment_body": "But what if the cached data should return `false`, `0` or `''`? \ud83e\udd14 ",
        "pr_file_module": null
      },
      {
        "comment_id": "1518903006",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 26172,
        "pr_file": "packages/nuxt/src/app/composables/asyncData.ts",
        "discussion_id": "1518822076",
        "commented_code": "@@ -243,7 +243,7 @@ export function useAsyncData<\n     console.warn('[nuxt] `boolean` values are deprecated for the `dedupe` option of `useAsyncData` and will be removed in the future. Use \\'cancel\\' or \\'defer\\' instead.')\n   }\n \n-  const hasCachedData = () => ![null, undefined].includes(options.getCachedData!(key) as any)\n+  const hasCachedData = () => options.getCachedData!(key) != null",
        "comment_created_at": "2024-03-10T17:23:25+00:00",
        "comment_author": "danielroe",
        "comment_body": "@manniL I also had to check, but I think it's good:\r\n\r\n![CleanShot 2024-03-10 at 10 23 02@2x](https://github.com/nuxt/nuxt/assets/28706372/d7c719dc-5c6f-4384-bcc7-04d60037fff6)\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1518919241",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 26172,
        "pr_file": "packages/nuxt/src/app/composables/asyncData.ts",
        "discussion_id": "1518822076",
        "commented_code": "@@ -243,7 +243,7 @@ export function useAsyncData<\n     console.warn('[nuxt] `boolean` values are deprecated for the `dedupe` option of `useAsyncData` and will be removed in the future. Use \\'cancel\\' or \\'defer\\' instead.')\n   }\n \n-  const hasCachedData = () => ![null, undefined].includes(options.getCachedData!(key) as any)\n+  const hasCachedData = () => options.getCachedData!(key) != null",
        "comment_created_at": "2024-03-10T17:46:06+00:00",
        "comment_author": "TheAlexLichter",
        "comment_body": "\ud83e\udd26  I think I accidentally checked for `!= undefined` in my tests.\r\n\r\n LGTM!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1674669763",
    "pr_number": 28125,
    "pr_file": "packages/kit/src/compatibility.ts",
    "created_at": "2024-07-11T20:40:45+00:00",
    "commented_code": "*/\n export function getNuxtVersion (nuxt: Nuxt | any = useNuxt() /* TODO: LegacyNuxt */) {\n   const rawVersion = nuxt?._version || nuxt?.version || nuxt?.constructor?.version\n-  if (!rawVersion) {\n+  if (!rawVersion || typeof rawVersion !== 'string') {",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1674669763",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 28125,
        "pr_file": "packages/kit/src/compatibility.ts",
        "discussion_id": "1674669763",
        "commented_code": "@@ -108,7 +108,7 @@ export function isNuxt3 (nuxt: Nuxt = useNuxt()) {\n  */\n export function getNuxtVersion (nuxt: Nuxt | any = useNuxt() /* TODO: LegacyNuxt */) {\n   const rawVersion = nuxt?._version || nuxt?.version || nuxt?.constructor?.version\n-  if (!rawVersion) {\n+  if (!rawVersion || typeof rawVersion !== 'string') {",
        "comment_created_at": "2024-07-11T20:40:45+00:00",
        "comment_author": "huang-julien",
        "comment_body": "```suggestion\r\n  if (typeof rawVersion !== 'string') {\r\n```\r\n\r\nI think we can directly do this",
        "pr_file_module": null
      },
      {
        "comment_id": "1675434428",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 28125,
        "pr_file": "packages/kit/src/compatibility.ts",
        "discussion_id": "1674669763",
        "commented_code": "@@ -108,7 +108,7 @@ export function isNuxt3 (nuxt: Nuxt = useNuxt()) {\n  */\n export function getNuxtVersion (nuxt: Nuxt | any = useNuxt() /* TODO: LegacyNuxt */) {\n   const rawVersion = nuxt?._version || nuxt?.version || nuxt?.constructor?.version\n-  if (!rawVersion) {\n+  if (!rawVersion || typeof rawVersion !== 'string') {",
        "comment_created_at": "2024-07-12T07:26:43+00:00",
        "comment_author": "BobbieGoede",
        "comment_body": "I think you're right!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1658540676",
    "pr_number": 27893,
    "pr_file": "packages/nuxt/src/core/nuxt.ts",
    "created_at": "2024-06-28T11:21:22+00:00",
    "commented_code": "}\n   }\n \n+  // Prompt to set compatibility date\n+  if (!nuxt.options.compatibilityDate) {\n+    const todaysDate = formatDate(new Date())\n+\n+    if (!warnedAboutCompatDate) {\n+      // Print warning\n+      console.info(`Nuxt now supports pinning the behavior of provider and deployment presets with a compatibility date. We recommend you specify a \\`compatibilityDate\\` in your \\`nuxt.config\\` file.`)\n+    }\n+\n+    // Prompt to update in dev mode\n+    if (!warnedAboutCompatDate && nuxt.options.dev) {\n+      const result = await consola.prompt(`Do you want to update your ${colorize('cyan', 'nuxt.config')} to set ${colorize('cyan', `compatibilityDate: '${todaysDate}'`)}?`, {\n+        type: 'confirm',\n+        default: true,\n+      })\n+      if (result) {",
    "repo_full_name": "nuxt/nuxt",
    "discussion_comments": [
      {
        "comment_id": "1658540676",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 27893,
        "pr_file": "packages/nuxt/src/core/nuxt.ts",
        "discussion_id": "1658540676",
        "commented_code": "@@ -82,6 +92,59 @@ async function initNuxt (nuxt: Nuxt) {\n     }\n   }\n \n+  // Prompt to set compatibility date\n+  if (!nuxt.options.compatibilityDate) {\n+    const todaysDate = formatDate(new Date())\n+\n+    if (!warnedAboutCompatDate) {\n+      // Print warning\n+      console.info(`Nuxt now supports pinning the behavior of provider and deployment presets with a compatibility date. We recommend you specify a \\`compatibilityDate\\` in your \\`nuxt.config\\` file.`)\n+    }\n+\n+    // Prompt to update in dev mode\n+    if (!warnedAboutCompatDate && nuxt.options.dev) {\n+      const result = await consola.prompt(`Do you want to update your ${colorize('cyan', 'nuxt.config')} to set ${colorize('cyan', `compatibilityDate: '${todaysDate}'`)}?`, {\n+        type: 'confirm',\n+        default: true,\n+      })\n+      if (result) {",
        "comment_created_at": "2024-06-28T11:21:22+00:00",
        "comment_author": "pi0",
        "comment_body": "(consola might return a Symbol in case of rejections. type issue not making it visible)\r\n\r\n```suggestion\r\n      if (result === true) {\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1658557798",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 27893,
        "pr_file": "packages/nuxt/src/core/nuxt.ts",
        "discussion_id": "1658540676",
        "commented_code": "@@ -82,6 +92,59 @@ async function initNuxt (nuxt: Nuxt) {\n     }\n   }\n \n+  // Prompt to set compatibility date\n+  if (!nuxt.options.compatibilityDate) {\n+    const todaysDate = formatDate(new Date())\n+\n+    if (!warnedAboutCompatDate) {\n+      // Print warning\n+      console.info(`Nuxt now supports pinning the behavior of provider and deployment presets with a compatibility date. We recommend you specify a \\`compatibilityDate\\` in your \\`nuxt.config\\` file.`)\n+    }\n+\n+    // Prompt to update in dev mode\n+    if (!warnedAboutCompatDate && nuxt.options.dev) {\n+      const result = await consola.prompt(`Do you want to update your ${colorize('cyan', 'nuxt.config')} to set ${colorize('cyan', `compatibilityDate: '${todaysDate}'`)}?`, {\n+        type: 'confirm',\n+        default: true,\n+      })\n+      if (result) {",
        "comment_created_at": "2024-06-28T11:27:19+00:00",
        "comment_author": "danielroe",
        "comment_body": "what else could it be?",
        "pr_file_module": null
      },
      {
        "comment_id": "1658562042",
        "repo_full_name": "nuxt/nuxt",
        "pr_number": 27893,
        "pr_file": "packages/nuxt/src/core/nuxt.ts",
        "discussion_id": "1658540676",
        "commented_code": "@@ -82,6 +92,59 @@ async function initNuxt (nuxt: Nuxt) {\n     }\n   }\n \n+  // Prompt to set compatibility date\n+  if (!nuxt.options.compatibilityDate) {\n+    const todaysDate = formatDate(new Date())\n+\n+    if (!warnedAboutCompatDate) {\n+      // Print warning\n+      console.info(`Nuxt now supports pinning the behavior of provider and deployment presets with a compatibility date. We recommend you specify a \\`compatibilityDate\\` in your \\`nuxt.config\\` file.`)\n+    }\n+\n+    // Prompt to update in dev mode\n+    if (!warnedAboutCompatDate && nuxt.options.dev) {\n+      const result = await consola.prompt(`Do you want to update your ${colorize('cyan', 'nuxt.config')} to set ${colorize('cyan', `compatibilityDate: '${todaysDate}'`)}?`, {\n+        type: 'confirm',\n+        default: true,\n+      })\n+      if (result) {",
        "comment_created_at": "2024-06-28T11:29:21+00:00",
        "comment_author": "pi0",
        "comment_body": "Symbol(abort)",
        "pr_file_module": null
      }
    ]
  }
]