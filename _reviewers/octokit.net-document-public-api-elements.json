[
  {
    "discussion_id": "1272548806",
    "pr_number": 2749,
    "pr_file": "Octokit.Reactive/Clients/ObservableOauthClient.cs",
    "created_at": "2023-07-24T17:25:54+00:00",
    "commented_code": "_client = client;\n         }\n \n-        /// <summary>\n-        /// Gets the URL used in the first step of the web flow. The Web application should redirect to this URL.\n-        /// </summary>\n-        /// <param name=\"request\">Parameters to the Oauth web flow login url</param>\n-        /// <returns></returns>",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "1272548806",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 2749,
        "pr_file": "Octokit.Reactive/Clients/ObservableOauthClient.cs",
        "discussion_id": "1272548806",
        "commented_code": "@@ -14,59 +18,30 @@ public ObservableOauthClient(IGitHubClient client)\n             _client = client;\n         }\n \n-        /// <summary>\n-        /// Gets the URL used in the first step of the web flow. The Web application should redirect to this URL.\n-        /// </summary>\n-        /// <param name=\"request\">Parameters to the Oauth web flow login url</param>\n-        /// <returns></returns>",
        "comment_created_at": "2023-07-24T17:25:54+00:00",
        "comment_author": "kfcampbell",
        "comment_body": "Do you mind explaining why you've removed this (and similar) content? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1272617758",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 2749,
        "pr_file": "Octokit.Reactive/Clients/ObservableOauthClient.cs",
        "discussion_id": "1272548806",
        "commented_code": "@@ -14,59 +18,30 @@ public ObservableOauthClient(IGitHubClient client)\n             _client = client;\n         }\n \n-        /// <summary>\n-        /// Gets the URL used in the first step of the web flow. The Web application should redirect to this URL.\n-        /// </summary>\n-        /// <param name=\"request\">Parameters to the Oauth web flow login url</param>\n-        /// <returns></returns>",
        "comment_created_at": "2023-07-24T18:36:28+00:00",
        "comment_author": "Kencdk",
        "comment_body": "I tried adding it to the PR message, but it's mistaken &lt;inheritdoc /&gt; for an HTML tag.\r\n\r\nWhen inheritdoc is added on the class level, is automatically inherits the xml doc from the interface.\r\nAs such, there is no need to have it in both places and risk one getting out of date :)\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/csharp/language-reference/xmldoc/recommended-tags#inheritdoc\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1272838391",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 2749,
        "pr_file": "Octokit.Reactive/Clients/ObservableOauthClient.cs",
        "discussion_id": "1272548806",
        "commented_code": "@@ -14,59 +18,30 @@ public ObservableOauthClient(IGitHubClient client)\n             _client = client;\n         }\n \n-        /// <summary>\n-        /// Gets the URL used in the first step of the web flow. The Web application should redirect to this URL.\n-        /// </summary>\n-        /// <param name=\"request\">Parameters to the Oauth web flow login url</param>\n-        /// <returns></returns>",
        "comment_created_at": "2023-07-24T23:01:16+00:00",
        "comment_author": "kfcampbell",
        "comment_body": "Oh that's awesome, thank you! Apologies for missing that in the PR description. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "231487690",
    "pr_number": 1896,
    "pr_file": "Octokit/Clients/TeamDiscussionsClient.cs",
    "created_at": "2018-11-07T12:37:55+00:00",
    "commented_code": "+﻿using System;\n+using System.Net;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+\n+namespace Octokit\n+{\n+    /// <summary>\n+    /// A client for GitHub's Organization Teams API.\n+    /// </summary>\n+    /// <remarks>\n+    /// See the <a href=\"http://developer.github.com/v3/orgs/teams/\">Organization Teams API documentation</a> for more information.\n+    /// </remarks>\n+    public class TeamDiscussionsClient : ApiClient, ITeamDiscussionsClient\n+    {\n+        private static readonly string AcceptHeader = AcceptHeaders.Concat(AcceptHeaders.TeamDiscussionsApiPreview, AcceptHeaders.ReactionsPreview);\n+\n+        /// <summary>\n+        /// Initializes a new GitHub Orgs Team API client.\n+        /// </summary>\n+        /// <param name=\"apiConnection\">An API connection.</param>\n+        public TeamDiscussionsClient(IApiConnection apiConnection)\n+            : base(apiConnection)\n+        {\n+        }\n+\n+        public Task<TeamDiscussion> Get(int teamId, int number)",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "231487690",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1896,
        "pr_file": "Octokit/Clients/TeamDiscussionsClient.cs",
        "discussion_id": "231487690",
        "commented_code": "@@ -0,0 +1,69 @@\n+﻿using System;\n+using System.Net;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+\n+namespace Octokit\n+{\n+    /// <summary>\n+    /// A client for GitHub's Organization Teams API.\n+    /// </summary>\n+    /// <remarks>\n+    /// See the <a href=\"http://developer.github.com/v3/orgs/teams/\">Organization Teams API documentation</a> for more information.\n+    /// </remarks>\n+    public class TeamDiscussionsClient : ApiClient, ITeamDiscussionsClient\n+    {\n+        private static readonly string AcceptHeader = AcceptHeaders.Concat(AcceptHeaders.TeamDiscussionsApiPreview, AcceptHeaders.ReactionsPreview);\n+\n+        /// <summary>\n+        /// Initializes a new GitHub Orgs Team API client.\n+        /// </summary>\n+        /// <param name=\"apiConnection\">An API connection.</param>\n+        public TeamDiscussionsClient(IApiConnection apiConnection)\n+            : base(apiConnection)\n+        {\n+        }\n+\n+        public Task<TeamDiscussion> Get(int teamId, int number)",
        "comment_created_at": "2018-11-07T12:37:55+00:00",
        "comment_author": "ryangribble",
        "comment_body": "XmlComments are missing from all the methods in this class (just copy the ones from the interface)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "231490072",
    "pr_number": 1896,
    "pr_file": "Octokit.Reactive/Clients/ObservableTeamDiscussionsClient.cs",
    "created_at": "2018-11-07T12:46:08+00:00",
    "commented_code": "+﻿using System;\n+using System.Reactive;\n+using System.Reactive.Threading.Tasks;\n+using Octokit.Reactive.Internal;\n+\n+namespace Octokit.Reactive\n+{\n+    /// <summary>\n+    /// A client for GitHub's Team Discussions API.\n+    /// </summary>\n+    /// <remarks>\n+    /// See the <a href=\"https://developer.github.com/v3/teams/discussions/\">Team Discussions API documentation</a> for more information.\n+    /// </remarks>\n+    public class ObservableTeamDiscussionsClient : IObservableTeamDiscussionsClient\n+    {\n+        private static readonly string AcceptHeader = AcceptHeaders.Concat(AcceptHeaders.TeamDiscussionsApiPreview, AcceptHeaders.ReactionsPreview);\n+\n+        readonly IConnection _connection;\n+        readonly ITeamDiscussionsClient _client;\n+\n+        /// <summary>\n+        /// Initializes a new Organization Teams API client.\n+        /// </summary>\n+        /// <param name=\"client\">An <see cref=\"IGitHubClient\" /> used to make the requests</param>\n+        public ObservableTeamDiscussionsClient(IGitHubClient client)\n+        {\n+            Ensure.ArgumentNotNull(client, nameof(client));\n+            _connection = client.Connection;\n+            _client = client.Organization.TeamDiscussions;\n+        }\n+\n+        public IObservable<TeamDiscussion> Get(int teamId, int number)",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "231490072",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1896,
        "pr_file": "Octokit.Reactive/Clients/ObservableTeamDiscussionsClient.cs",
        "discussion_id": "231490072",
        "commented_code": "@@ -0,0 +1,69 @@\n+﻿using System;\n+using System.Reactive;\n+using System.Reactive.Threading.Tasks;\n+using Octokit.Reactive.Internal;\n+\n+namespace Octokit.Reactive\n+{\n+    /// <summary>\n+    /// A client for GitHub's Team Discussions API.\n+    /// </summary>\n+    /// <remarks>\n+    /// See the <a href=\"https://developer.github.com/v3/teams/discussions/\">Team Discussions API documentation</a> for more information.\n+    /// </remarks>\n+    public class ObservableTeamDiscussionsClient : IObservableTeamDiscussionsClient\n+    {\n+        private static readonly string AcceptHeader = AcceptHeaders.Concat(AcceptHeaders.TeamDiscussionsApiPreview, AcceptHeaders.ReactionsPreview);\n+\n+        readonly IConnection _connection;\n+        readonly ITeamDiscussionsClient _client;\n+\n+        /// <summary>\n+        /// Initializes a new Organization Teams API client.\n+        /// </summary>\n+        /// <param name=\"client\">An <see cref=\"IGitHubClient\" /> used to make the requests</param>\n+        public ObservableTeamDiscussionsClient(IGitHubClient client)\n+        {\n+            Ensure.ArgumentNotNull(client, nameof(client));\n+            _connection = client.Connection;\n+            _client = client.Organization.TeamDiscussions;\n+        }\n+\n+        public IObservable<TeamDiscussion> Get(int teamId, int number)",
        "comment_created_at": "2018-11-07T12:46:08+00:00",
        "comment_author": "ryangribble",
        "comment_body": "XmlComments missing for all the methods in this class (just copy the ones from interface)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "112804040",
    "pr_number": 1588,
    "pr_file": "Octokit.Reactive/Clients/ObservablePullRequestReviewRequestsClient.cs",
    "created_at": "2017-04-22T06:35:21+00:00",
    "commented_code": "+using System;\n+using System.Reactive;\n+using System.Reactive.Threading.Tasks;\n+using Octokit.Reactive.Internal;\n+\n+namespace Octokit.Reactive\n+{\n+    public class ObservablePullRequestReviewRequestsClient : IObservablePullRequestReviewRequestsClient\n+    {\n+        readonly IPullRequestReviewRequestsClient _client;\n+        readonly IConnection _connection;\n+\n+        public ObservablePullRequestReviewRequestsClient(IGitHubClient client)\n+        {\n+            Ensure.ArgumentNotNull(client, \"client\");\n+\n+            _client = client.PullRequest.ReviewRequests;\n+            _connection = client.Connection;\n+        }\n+",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "112804040",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1588,
        "pr_file": "Octokit.Reactive/Clients/ObservablePullRequestReviewRequestsClient.cs",
        "discussion_id": "112804040",
        "commented_code": "@@ -0,0 +1,47 @@\n+using System;\n+using System.Reactive;\n+using System.Reactive.Threading.Tasks;\n+using Octokit.Reactive.Internal;\n+\n+namespace Octokit.Reactive\n+{\n+    public class ObservablePullRequestReviewRequestsClient : IObservablePullRequestReviewRequestsClient\n+    {\n+        readonly IPullRequestReviewRequestsClient _client;\n+        readonly IConnection _connection;\n+\n+        public ObservablePullRequestReviewRequestsClient(IGitHubClient client)\n+        {\n+            Ensure.ArgumentNotNull(client, \"client\");\n+\n+            _client = client.PullRequest.ReviewRequests;\n+            _connection = client.Connection;\n+        }\n+",
        "comment_created_at": "2017-04-22T06:35:21+00:00",
        "comment_author": "ryangribble",
        "comment_body": "Just FYI that we add the xmldoc comments to the interfaces and the client implementations, so once you are done with the changes please add the xmldoc comments to all the conrete methods as well :+1:",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "194703734",
    "pr_number": 1813,
    "pr_file": "Octokit/Models/Request/RepositoryTransfer.cs",
    "created_at": "2018-06-12T11:33:16+00:00",
    "commented_code": "+using System;\n+using System.Text;\n+using System.Diagnostics;\n+using System.Globalization;\n+\n+namespace Octokit\n+{\n+    [DebuggerDisplay(\"{DebuggerDisplay,nq}\")]\n+    public class RepositoryTransfer",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "194703734",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1813,
        "pr_file": "Octokit/Models/Request/RepositoryTransfer.cs",
        "discussion_id": "194703734",
        "commented_code": "@@ -0,0 +1,53 @@\n+using System;\n+using System.Text;\n+using System.Diagnostics;\n+using System.Globalization;\n+\n+namespace Octokit\n+{\n+    [DebuggerDisplay(\"{DebuggerDisplay,nq}\")]\n+    public class RepositoryTransfer",
        "comment_created_at": "2018-06-12T11:33:16+00:00",
        "comment_author": "ryangribble",
        "comment_body": "XmlDoc comments should be added to this class including it's ctor/s and the public properties",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "197421229",
    "pr_number": 1813,
    "pr_file": "Octokit/Models/Request/RepositoryTransfer.cs",
    "created_at": "2018-06-22T11:40:56+00:00",
    "commented_code": "+using System;\n+using System.Text;\n+using System.Diagnostics;\n+using System.Globalization;\n+using System.Collections.Generic;\n+\n+namespace Octokit\n+{\n+    /// <summary>\n+    /// Describes the transfer of a repository to a new owner.\n+    /// </summary>\n+    [DebuggerDisplay(\"{DebuggerDisplay,nq}\")]\n+    public class RepositoryTransfer\n+    {\n+        /// <summary>\n+        /// Creates a new repository transfer description with no team Ids.\n+        /// </summary>\n+        /// <param name=\"newOwner\">The new owner of the repository after the transfer.</param>\n+        /// <remarks>\n+        /// This is the only valid constructor for repositories whose current owner is not an\n+        /// organization.\n+        /// </remarks>\n+        public RepositoryTransfer(string newOwner)\n+        {\n+            Ensure.ArgumentNotNullOrEmptyString(newOwner, nameof(newOwner));\n+\n+            NewOwner = newOwner;\n+        }\n+\n+        /// <summary>\n+        /// Creates a new repository transfer description.\n+        /// </summary>\n+        /// <param name=\"newOwner\">The new owner of the repository after the transfer.</param>\n+        /// <param name=\"teamId\">A list of team Ids to add to the repository after the transfer.</param>\n+        /// <remarks>",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "197421229",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1813,
        "pr_file": "Octokit/Models/Request/RepositoryTransfer.cs",
        "discussion_id": "197421229",
        "commented_code": "@@ -0,0 +1,70 @@\n+using System;\n+using System.Text;\n+using System.Diagnostics;\n+using System.Globalization;\n+using System.Collections.Generic;\n+\n+namespace Octokit\n+{\n+    /// <summary>\n+    /// Describes the transfer of a repository to a new owner.\n+    /// </summary>\n+    [DebuggerDisplay(\"{DebuggerDisplay,nq}\")]\n+    public class RepositoryTransfer\n+    {\n+        /// <summary>\n+        /// Creates a new repository transfer description with no team Ids.\n+        /// </summary>\n+        /// <param name=\"newOwner\">The new owner of the repository after the transfer.</param>\n+        /// <remarks>\n+        /// This is the only valid constructor for repositories whose current owner is not an\n+        /// organization.\n+        /// </remarks>\n+        public RepositoryTransfer(string newOwner)\n+        {\n+            Ensure.ArgumentNotNullOrEmptyString(newOwner, nameof(newOwner));\n+\n+            NewOwner = newOwner;\n+        }\n+\n+        /// <summary>\n+        /// Creates a new repository transfer description.\n+        /// </summary>\n+        /// <param name=\"newOwner\">The new owner of the repository after the transfer.</param>\n+        /// <param name=\"teamId\">A list of team Ids to add to the repository after the transfer.</param>\n+        /// <remarks>",
        "comment_created_at": "2018-06-22T11:40:56+00:00",
        "comment_author": "ryangribble",
        "comment_body": "The wording on this remark is a bit odd (what do you mean by \"invalid description\"?).  Also `<remarks>` objects aren't visibile in intellisense AFAIK, so I would suggest removing this remark, and instead what I normally do is type a brief explanation in brackets of the description of the param element itself \r\n\r\neg\r\n`/// <param name=\"teamId\">A list of team Ids to add to the repository after the transfer (only applies to Organization owned repositories).</param>`\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "162899180",
    "pr_number": 1738,
    "pr_file": "Octokit/IGitHubClient.cs",
    "created_at": "2018-01-22T10:36:43+00:00",
    "commented_code": "/// </remarks>\n         IActivitiesClient Activity { get; }\n \n+        IApplicationsClient Application { get; }",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "162899180",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1738,
        "pr_file": "Octokit/IGitHubClient.cs",
        "discussion_id": "162899180",
        "commented_code": "@@ -38,6 +38,10 @@ public interface IGitHubClient : IApiInfoProvider\n         /// </remarks>\n         IActivitiesClient Activity { get; }\n \n+        IApplicationsClient Application { get; }",
        "comment_created_at": "2018-01-22T10:36:43+00:00",
        "comment_author": "ryangribble",
        "comment_body": "For consistency, we need to add `/// <summary>` and `/// <remarks>` Xml comments, like all the other client access properties in this class",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "70058818",
    "pr_number": 1410,
    "pr_file": "Octokit/Models/Request/CollaboratorRequest.cs",
    "created_at": "2016-07-08T11:08:13+00:00",
    "commented_code": "+﻿using System.Diagnostics;\n+using System.Globalization;\n+\n+namespace Octokit\n+{\n+    [DebuggerDisplay(\"{DebuggerDisplay,nq}\")]\n+    public class CollaboratorRequest\n+    {\n+        public CollaboratorRequest()\n+        {\n+            Permission = Permission.Push;\n+        }\n+\n+        public CollaboratorRequest(Permission permissions)",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "70058818",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1410,
        "pr_file": "Octokit/Models/Request/CollaboratorRequest.cs",
        "discussion_id": "70058818",
        "commented_code": "@@ -0,0 +1,29 @@\n+﻿using System.Diagnostics;\n+using System.Globalization;\n+\n+namespace Octokit\n+{\n+    [DebuggerDisplay(\"{DebuggerDisplay,nq}\")]\n+    public class CollaboratorRequest\n+    {\n+        public CollaboratorRequest()\n+        {\n+            Permission = Permission.Push;\n+        }\n+\n+        public CollaboratorRequest(Permission permissions)",
        "comment_created_at": "2016-07-08T11:08:13+00:00",
        "comment_author": "ryangribble",
        "comment_body": "Since this is a request object, we should put some XmlDoc on this constructor, to give the users intellisense.  Check out `RepositoryPermissionRequest` for an example\n",
        "pr_file_module": null
      }
    ]
  }
]