[
  {
    "discussion_id": "42215353",
    "pr_number": 933,
    "pr_file": "deploy.cmd",
    "created_at": "2015-10-16T07:27:25+00:00",
    "commented_code": "+\n+@echo off\n+\n+\"tools\nuget\nuget.exe\" \"install\" \"FAKE.Core\" \"-OutputDirectory\" \"tools\" \"-ExcludeVersion\" \"-version\" \"4.4.2\"\n+\n+:Build\n+cls\n+\n+SET TARGET=\"CreatePackages\"\n+SET GITOWNER=\"octokit\"",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "42215353",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 933,
        "pr_file": "deploy.cmd",
        "discussion_id": "42215353",
        "commented_code": "@@ -0,0 +1,29 @@\n+\n+@echo off\n+\n+\"tools\\nuget\\nuget.exe\" \"install\" \"FAKE.Core\" \"-OutputDirectory\" \"tools\" \"-ExcludeVersion\" \"-version\" \"4.4.2\"\n+\n+:Build\n+cls\n+\n+SET TARGET=\"CreatePackages\"\n+SET GITOWNER=\"octokit\"",
        "comment_created_at": "2015-10-16T07:27:25+00:00",
        "comment_author": "shiftkey",
        "comment_body": "Should this be named `GITHUBOWNER` to indicate this is specific to the GitHub API (rather than the Git repository)?\n\nAnd `octokit` is an organization, so this is just going to fail miserably with the default. Not sure what to put here, so let's leave it empty.\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "42216739",
    "pr_number": 933,
    "pr_file": "deploy.fsx",
    "created_at": "2015-10-16T07:48:42+00:00",
    "commented_code": "+#r @\"tools/FAKE.Core/tools/FakeLib.dll\"\n+#load \"tools/SourceLink.Fake/tools/SourceLink.fsx\"\n+#load \"Octokit.fsx\"\n+\n+open Fake \n+open Fake.Git\n+open System\n+open Octokit\n+open SourceLink\n+\n+let authors = [\"GitHub\"]\n+\n+let projectName = \"Octokit\"\n+let projectDescription = \"An async-based GitHub API client library for .NET\"\n+let projectSummary = projectDescription \n+\n+let reactiveProjectName = \"Octokit.Reactive\"\n+let reactiveProjectDescription = \"An IObservable based GitHub API client library for .NET using Reactive Extensions\"\n+let reactiveProjectSummary = reactiveProjectDescription // TODO: write a summary\n+\n+let gitOwner = getBuildParam \"gitOwner\"\n+let gitHome = \"https://github.com/\" + gitOwner\n+// The name of the project on GitHub\n+let gitName = \"octokit.net\"\n+\n+// directories\n+let buildDir = \"./Octokit/bin\"\n+let reactiveBuildDir = \"./Octokit.Reactive/bin\"\n+let packagingRoot = \"./packaging/\"\n+let packagingDir = packagingRoot @@ \"octokit\"\n+let reactivePackagingDir = packagingRoot @@ \"octokit.reactive\"\n+\n+let releaseNotes = \n+    ReadFile \"ReleaseNotes.md\"\n+    |> ReleaseNotesHelper.parseReleaseNotes\n+\n+\n+Target \"ReleaseToGithub\" (fun _ ->",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "42216739",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 933,
        "pr_file": "deploy.fsx",
        "discussion_id": "42216739",
        "commented_code": "@@ -0,0 +1,157 @@\n+#r @\"tools/FAKE.Core/tools/FakeLib.dll\"\n+#load \"tools/SourceLink.Fake/tools/SourceLink.fsx\"\n+#load \"Octokit.fsx\"\n+\n+open Fake \n+open Fake.Git\n+open System\n+open Octokit\n+open SourceLink\n+\n+let authors = [\"GitHub\"]\n+\n+let projectName = \"Octokit\"\n+let projectDescription = \"An async-based GitHub API client library for .NET\"\n+let projectSummary = projectDescription \n+\n+let reactiveProjectName = \"Octokit.Reactive\"\n+let reactiveProjectDescription = \"An IObservable based GitHub API client library for .NET using Reactive Extensions\"\n+let reactiveProjectSummary = reactiveProjectDescription // TODO: write a summary\n+\n+let gitOwner = getBuildParam \"gitOwner\"\n+let gitHome = \"https://github.com/\" + gitOwner\n+// The name of the project on GitHub\n+let gitName = \"octokit.net\"\n+\n+// directories\n+let buildDir = \"./Octokit/bin\"\n+let reactiveBuildDir = \"./Octokit.Reactive/bin\"\n+let packagingRoot = \"./packaging/\"\n+let packagingDir = packagingRoot @@ \"octokit\"\n+let reactivePackagingDir = packagingRoot @@ \"octokit.reactive\"\n+\n+let releaseNotes = \n+    ReadFile \"ReleaseNotes.md\"\n+    |> ReleaseNotesHelper.parseReleaseNotes\n+\n+\n+Target \"ReleaseToGithub\" (fun _ ->",
        "comment_created_at": "2015-10-16T07:48:42+00:00",
        "comment_author": "shiftkey",
        "comment_body": "OCD: `GitHub` not `Github`\n",
        "pr_file_module": null
      }
    ]
  }
]