[
  {
    "discussion_id": "231488184",
    "pr_number": 1896,
    "pr_file": "Octokit/Models/Request/NewTeamDiscussion.cs",
    "created_at": "2018-11-07T12:39:35+00:00",
    "commented_code": "+using System.Collections.ObjectModel;\n+using System.Diagnostics;\n+using System.Globalization;\n+\n+namespace Octokit\n+{\n+    /// <summary>\n+    /// Used to create a team discussion.\n+    /// </summary>\n+    /// <remarks>\n+    /// <para>\n+    /// In order to create a team discussions, the OAuth access tokens require the write:discussion scope.\n+    /// </para>\n+    /// <para>API: https://developer.github.com/v3/teams/discussions/#create-a-discussion </para>\n+    /// </remarks>\n+    [DebuggerDisplay(\"{DebuggerDisplay,nq}\")]\n+    public class NewTeamDiscussion\n+    {\n+        /// <summary>\n+        /// Initializes a new instance of the <see cref=\"NewTeamDiscussion\"/> class.\n+        /// </summary>\n+        /// <param name=\"title\">The discussion post's title.</param>\n+        /// <param name=\"body\">The discussion post's body text.</param>\n+        public NewTeamDiscussion(string title, string body)\n+        {\n+            Title = title;\n+            Body = body;\n+        }\n+\n+        /// <summary>\n+        /// The discussion post's title (required).\n+        /// </summary>\n+        public string Title { get; private set; }\n+\n+        /// <summary>\n+        /// The discussion post's body text (required).\n+        /// </summary>\n+        public string Body { get; set; }\n+\n+        /// <summary>\n+        /// Private posts are only visible to team members, organization owners, and team maintainers.\n+        /// Public posts are visible to all members of the organization. Set to true to create a private post.\n+        /// Default: false.\n+        /// </summary>\n+        public bool Private { get; set; }",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "231488184",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1896,
        "pr_file": "Octokit/Models/Request/NewTeamDiscussion.cs",
        "discussion_id": "231488184",
        "commented_code": "@@ -0,0 +1,55 @@\n+using System.Collections.ObjectModel;\n+using System.Diagnostics;\n+using System.Globalization;\n+\n+namespace Octokit\n+{\n+    /// <summary>\n+    /// Used to create a team discussion.\n+    /// </summary>\n+    /// <remarks>\n+    /// <para>\n+    /// In order to create a team discussions, the OAuth access tokens require the write:discussion scope.\n+    /// </para>\n+    /// <para>API: https://developer.github.com/v3/teams/discussions/#create-a-discussion </para>\n+    /// </remarks>\n+    [DebuggerDisplay(\"{DebuggerDisplay,nq}\")]\n+    public class NewTeamDiscussion\n+    {\n+        /// <summary>\n+        /// Initializes a new instance of the <see cref=\"NewTeamDiscussion\"/> class.\n+        /// </summary>\n+        /// <param name=\"title\">The discussion post's title.</param>\n+        /// <param name=\"body\">The discussion post's body text.</param>\n+        public NewTeamDiscussion(string title, string body)\n+        {\n+            Title = title;\n+            Body = body;\n+        }\n+\n+        /// <summary>\n+        /// The discussion post's title (required).\n+        /// </summary>\n+        public string Title { get; private set; }\n+\n+        /// <summary>\n+        /// The discussion post's body text (required).\n+        /// </summary>\n+        public string Body { get; set; }\n+\n+        /// <summary>\n+        /// Private posts are only visible to team members, organization owners, and team maintainers.\n+        /// Public posts are visible to all members of the organization. Set to true to create a private post.\n+        /// Default: false.\n+        /// </summary>\n+        public bool Private { get; set; }",
        "comment_created_at": "2018-11-07T12:39:35+00:00",
        "comment_author": "ryangribble",
        "comment_body": "Since this is an optional field it should probably be nullable (`bool? Private`) so that if the user doesn't set it, we dont send it to the API. Eventhough the default value is false anyway, there is a difference between us always sending false and us only sending a value when the user explicitly sets it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "170447599",
    "pr_number": 1771,
    "pr_file": "Octokit/Models/Response/PullRequest.cs",
    "created_at": "2018-02-25T09:49:33+00:00",
    "commented_code": "/// </summary>\n         public bool Locked { get; protected set; }\n \n+        /// <summary>\n+        /// If users with write access to the base repository can push to the HEAD branch\n+        /// </summary>\n+        public bool MaintainerCanModify { get; protected set; }",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "170447599",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1771,
        "pr_file": "Octokit/Models/Response/PullRequest.cs",
        "discussion_id": "170447599",
        "commented_code": "@@ -219,6 +220,11 @@ public bool Merged\n         /// </summary>\n         public bool Locked { get; protected set; }\n \n+        /// <summary>\n+        /// If users with write access to the base repository can push to the HEAD branch\n+        /// </summary>\n+        public bool MaintainerCanModify { get; protected set; }",
        "comment_created_at": "2018-02-25T09:49:33+00:00",
        "comment_author": "ryangribble",
        "comment_body": "I think we should make this nullable `bool? MaintainerCanModify` because responses that return lists of pull requests will not return this field, so rather than indicate it as `false` in that case, we should indicate it as `null`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "171085772",
    "pr_number": 1771,
    "pr_file": "Octokit/Models/Request/NewPullRequest.cs",
    "created_at": "2018-02-27T22:17:55+00:00",
    "commented_code": "/// </summary>\n         public string Head { get; private set; }\n \n+        /// <summary>\n+        /// Whether maintainers of the base repository can push to <see cref=\"Head\"/> if it is a branch\n+        /// </summary>\n+        public bool MaintainerCanModify { get; private set; }",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "171085772",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1771,
        "pr_file": "Octokit/Models/Request/NewPullRequest.cs",
        "discussion_id": "171085772",
        "commented_code": "@@ -41,6 +43,11 @@ public NewPullRequest(string title, string head, string baseRef)\n         /// </summary>\n         public string Head { get; private set; }\n \n+        /// <summary>\n+        /// Whether maintainers of the base repository can push to <see cref=\"Head\"/> if it is a branch\n+        /// </summary>\n+        public bool MaintainerCanModify { get; private set; }",
        "comment_created_at": "2018-02-27T22:17:55+00:00",
        "comment_author": "ryangribble",
        "comment_body": "This should be nullable `bool?` since it's an optional parameter.  That way when the user doesnt set it, we dont send anything in the request, and thus we default to whatever the API default is (which is important in this case since the API default is true, and if we leave this non nullable we would default to sending false)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "171085933",
    "pr_number": 1771,
    "pr_file": "Octokit/Models/Request/PullRequestUpdate.cs",
    "created_at": "2018-02-27T22:18:41+00:00",
    "commented_code": "/// </summary>\n         public string Base { get; set; }\n \n+        /// <summary>\n+        /// Whether maintainers of the base repository can push to the pull request's HEAD if it is a branch\n+        /// </summary>\n+        public bool MaintainerCanModify { get; set; }",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "171085933",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1771,
        "pr_file": "Octokit/Models/Request/PullRequestUpdate.cs",
        "discussion_id": "171085933",
        "commented_code": "@@ -29,6 +29,11 @@ public class PullRequestUpdate\n         /// </summary>\n         public string Base { get; set; }\n \n+        /// <summary>\n+        /// Whether maintainers of the base repository can push to the pull request's HEAD if it is a branch\n+        /// </summary>\n+        public bool MaintainerCanModify { get; set; }",
        "comment_created_at": "2018-02-27T22:18:41+00:00",
        "comment_author": "ryangribble",
        "comment_body": "This should also be nullable `bool?` so that the user is able to not specify a value and have it not change this property on the PR they are updating",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "167852872",
    "pr_number": 1757,
    "pr_file": "Octokit/Models/Response/EmailAddress.cs",
    "created_at": "2018-02-13T12:46:31+00:00",
    "commented_code": "public string Email { get; protected set; }\n \n         /// <summary>\n-        /// true if the email is verified; otherwise false\n+        /// True if the email is verified; otherwise false\n         /// </summary>\n         public bool Verified { get; protected set; }\n \n         /// <summary>\n-        /// true if this is the users primary email; otherwise false\n+        /// True if this is the users primary email; otherwise false\n         /// </summary>\n         public bool Primary { get; protected set; }\n \n+        /// <summary>\n+        /// \"private\" or \"public\" if the email address is the primary;\n+        /// otherwise null\n+        /// <summary>\n+        public StringEnum<EmailVisibility> Visibility { get; protected set; }",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "167852872",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1757,
        "pr_file": "Octokit/Models/Response/EmailAddress.cs",
        "discussion_id": "167852872",
        "commented_code": "@@ -25,24 +27,54 @@ public EmailAddress(string email, bool verified, bool primary)\n         public string Email { get; protected set; }\n \n         /// <summary>\n-        /// true if the email is verified; otherwise false\n+        /// True if the email is verified; otherwise false\n         /// </summary>\n         public bool Verified { get; protected set; }\n \n         /// <summary>\n-        /// true if this is the users primary email; otherwise false\n+        /// True if this is the users primary email; otherwise false\n         /// </summary>\n         public bool Primary { get; protected set; }\n \n+        /// <summary>\n+        /// \"private\" or \"public\" if the email address is the primary;\n+        /// otherwise null\n+        /// <summary>\n+        public StringEnum<EmailVisibility> Visibility { get; protected set; }",
        "comment_created_at": "2018-02-13T12:46:31+00:00",
        "comment_author": "ryangribble",
        "comment_body": "The API response actually has a `null` value rather than the string \"null\" so what we need to do is make this property nullable (eg `StringEnum<EmailVisibility>? Visibility`)",
        "pr_file_module": null
      },
      {
        "comment_id": "167853791",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1757,
        "pr_file": "Octokit/Models/Response/EmailAddress.cs",
        "discussion_id": "167852872",
        "commented_code": "@@ -25,24 +27,54 @@ public EmailAddress(string email, bool verified, bool primary)\n         public string Email { get; protected set; }\n \n         /// <summary>\n-        /// true if the email is verified; otherwise false\n+        /// True if the email is verified; otherwise false\n         /// </summary>\n         public bool Verified { get; protected set; }\n \n         /// <summary>\n-        /// true if this is the users primary email; otherwise false\n+        /// True if this is the users primary email; otherwise false\n         /// </summary>\n         public bool Primary { get; protected set; }\n \n+        /// <summary>\n+        /// \"private\" or \"public\" if the email address is the primary;\n+        /// otherwise null\n+        /// <summary>\n+        public StringEnum<EmailVisibility> Visibility { get; protected set; }",
        "comment_created_at": "2018-02-13T12:50:21+00:00",
        "comment_author": "ryangribble",
        "comment_body": "(and note that this will not deserialize currently, but once #1760 is in, this should then work!)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "167853378",
    "pr_number": 1757,
    "pr_file": "Octokit/Models/Response/EmailAddress.cs",
    "created_at": "2018-02-13T12:48:36+00:00",
    "commented_code": "public string Email { get; protected set; }\n \n         /// <summary>\n-        /// true if the email is verified; otherwise false\n+        /// True if the email is verified; otherwise false\n         /// </summary>\n         public bool Verified { get; protected set; }\n \n         /// <summary>\n-        /// true if this is the users primary email; otherwise false\n+        /// True if this is the users primary email; otherwise false\n         /// </summary>\n         public bool Primary { get; protected set; }\n \n+        /// <summary>\n+        /// \"private\" or \"public\" if the email address is the primary;\n+        /// otherwise null\n+        /// <summary>\n+        public StringEnum<EmailVisibility> Visibility { get; protected set; }\n+\n         [SuppressMessage(\"Microsoft.Performance\", \"CA1811:AvoidUncalledPrivateCode\",\n             Justification = \"Used by DebuggerDisplayAttribute\")]\n         internal string DebuggerDisplay\n         {\n             get\n             {\n                 return string.Format(CultureInfo.InvariantCulture,\n-                    \"EmailAddress: Email: {0}; Primary: {1}, Verified: {2}\", Email, Primary, Verified);\n+                    \"EmailAddress: Email: {0}; Primary: {1}, Verified: {2}, Visibility: {3}\", Email, Primary, Verified, Visibility);\n             }\n         }\n     }\n+\n+    /// <summary>\n+    /// Represents the visibility of an email address.\n+    /// </summary>\n+    public enum EmailVisibility\n+    {\n+        /// <summary>\n+        /// Primary email address and is public\n+        /// </summary>     \n+        [Parameter(Value = \"public\")]\n+        Public,\n+\n+        /// <summary>\n+        /// Primary email address and is private\n+        /// </summary> \n+        [Parameter(Value = \"private\")]\n+        Private,\n+\n+        /// <summary>\n+        /// Email is not the primary address\n+        /// </summary>\n+        [Parameter(Value = \"null\")]",
    "repo_full_name": "octokit/octokit.net",
    "discussion_comments": [
      {
        "comment_id": "167853378",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1757,
        "pr_file": "Octokit/Models/Response/EmailAddress.cs",
        "discussion_id": "167853378",
        "commented_code": "@@ -25,24 +27,54 @@ public EmailAddress(string email, bool verified, bool primary)\n         public string Email { get; protected set; }\n \n         /// <summary>\n-        /// true if the email is verified; otherwise false\n+        /// True if the email is verified; otherwise false\n         /// </summary>\n         public bool Verified { get; protected set; }\n \n         /// <summary>\n-        /// true if this is the users primary email; otherwise false\n+        /// True if this is the users primary email; otherwise false\n         /// </summary>\n         public bool Primary { get; protected set; }\n \n+        /// <summary>\n+        /// \"private\" or \"public\" if the email address is the primary;\n+        /// otherwise null\n+        /// <summary>\n+        public StringEnum<EmailVisibility> Visibility { get; protected set; }\n+\n         [SuppressMessage(\"Microsoft.Performance\", \"CA1811:AvoidUncalledPrivateCode\",\n             Justification = \"Used by DebuggerDisplayAttribute\")]\n         internal string DebuggerDisplay\n         {\n             get\n             {\n                 return string.Format(CultureInfo.InvariantCulture,\n-                    \"EmailAddress: Email: {0}; Primary: {1}, Verified: {2}\", Email, Primary, Verified);\n+                    \"EmailAddress: Email: {0}; Primary: {1}, Verified: {2}, Visibility: {3}\", Email, Primary, Verified, Visibility);\n             }\n         }\n     }\n+\n+    /// <summary>\n+    /// Represents the visibility of an email address.\n+    /// </summary>\n+    public enum EmailVisibility\n+    {\n+        /// <summary>\n+        /// Primary email address and is public\n+        /// </summary>     \n+        [Parameter(Value = \"public\")]\n+        Public,\n+\n+        /// <summary>\n+        /// Primary email address and is private\n+        /// </summary> \n+        [Parameter(Value = \"private\")]\n+        Private,\n+\n+        /// <summary>\n+        /// Email is not the primary address\n+        /// </summary>\n+        [Parameter(Value = \"null\")]",
        "comment_created_at": "2018-02-13T12:48:36+00:00",
        "comment_author": "ryangribble",
        "comment_body": "Need to remove this `All` option from the enum as it wont deserialize correctly anyway, plus we can make the property above nullable, to handle this case",
        "pr_file_module": null
      },
      {
        "comment_id": "167950721",
        "repo_full_name": "octokit/octokit.net",
        "pr_number": 1757,
        "pr_file": "Octokit/Models/Response/EmailAddress.cs",
        "discussion_id": "167853378",
        "commented_code": "@@ -25,24 +27,54 @@ public EmailAddress(string email, bool verified, bool primary)\n         public string Email { get; protected set; }\n \n         /// <summary>\n-        /// true if the email is verified; otherwise false\n+        /// True if the email is verified; otherwise false\n         /// </summary>\n         public bool Verified { get; protected set; }\n \n         /// <summary>\n-        /// true if this is the users primary email; otherwise false\n+        /// True if this is the users primary email; otherwise false\n         /// </summary>\n         public bool Primary { get; protected set; }\n \n+        /// <summary>\n+        /// \"private\" or \"public\" if the email address is the primary;\n+        /// otherwise null\n+        /// <summary>\n+        public StringEnum<EmailVisibility> Visibility { get; protected set; }\n+\n         [SuppressMessage(\"Microsoft.Performance\", \"CA1811:AvoidUncalledPrivateCode\",\n             Justification = \"Used by DebuggerDisplayAttribute\")]\n         internal string DebuggerDisplay\n         {\n             get\n             {\n                 return string.Format(CultureInfo.InvariantCulture,\n-                    \"EmailAddress: Email: {0}; Primary: {1}, Verified: {2}\", Email, Primary, Verified);\n+                    \"EmailAddress: Email: {0}; Primary: {1}, Verified: {2}, Visibility: {3}\", Email, Primary, Verified, Visibility);\n             }\n         }\n     }\n+\n+    /// <summary>\n+    /// Represents the visibility of an email address.\n+    /// </summary>\n+    public enum EmailVisibility\n+    {\n+        /// <summary>\n+        /// Primary email address and is public\n+        /// </summary>     \n+        [Parameter(Value = \"public\")]\n+        Public,\n+\n+        /// <summary>\n+        /// Primary email address and is private\n+        /// </summary> \n+        [Parameter(Value = \"private\")]\n+        Private,\n+\n+        /// <summary>\n+        /// Email is not the primary address\n+        /// </summary>\n+        [Parameter(Value = \"null\")]",
        "comment_created_at": "2018-02-13T18:04:01+00:00",
        "comment_author": "roblesch",
        "comment_body": "Done, let me know how these changes look. Thanks for the continued help on this!",
        "pr_file_module": null
      }
    ]
  }
]