[
  {
    "discussion_id": "1982280855",
    "pr_number": 9485,
    "pr_file": "api/types.go",
    "created_at": "2025-03-05T22:31:42+00:00",
    "commented_code": "// PullRequest is the request passed to [Client.Pull].\n type PullRequest struct {\n \tModel    string `json:\"model\"`\n-\tInsecure bool   `json:\"insecure,omitempty\"`\n-\tUsername string `json:\"username\"`\n-\tPassword string `json:\"password\"`\n+\tInsecure bool   `json:\"insecure,omitempty\"` // Deprecated: ignored",
    "repo_full_name": "ollama/ollama",
    "discussion_comments": [
      {
        "comment_id": "1982280855",
        "repo_full_name": "ollama/ollama",
        "pr_number": 9485,
        "pr_file": "api/types.go",
        "discussion_id": "1982280855",
        "commented_code": "@@ -361,9 +361,9 @@ type CopyRequest struct {\n // PullRequest is the request passed to [Client.Pull].\n type PullRequest struct {\n \tModel    string `json:\"model\"`\n-\tInsecure bool   `json:\"insecure,omitempty\"`\n-\tUsername string `json:\"username\"`\n-\tPassword string `json:\"password\"`\n+\tInsecure bool   `json:\"insecure,omitempty\"` // Deprecated: ignored",
        "comment_created_at": "2025-03-05T22:31:42+00:00",
        "comment_author": "BruceMacD",
        "comment_body": "What will happen on pulling from an http source now?",
        "pr_file_module": null
      },
      {
        "comment_id": "1982290381",
        "repo_full_name": "ollama/ollama",
        "pr_number": 9485,
        "pr_file": "api/types.go",
        "discussion_id": "1982280855",
        "commented_code": "@@ -361,9 +361,9 @@ type CopyRequest struct {\n // PullRequest is the request passed to [Client.Pull].\n type PullRequest struct {\n \tModel    string `json:\"model\"`\n-\tInsecure bool   `json:\"insecure,omitempty\"`\n-\tUsername string `json:\"username\"`\n-\tPassword string `json:\"password\"`\n+\tInsecure bool   `json:\"insecure,omitempty\"` // Deprecated: ignored",
        "comment_created_at": "2025-03-05T22:42:28+00:00",
        "comment_author": "bmizerany",
        "comment_body": "It just pulls, like curl would, or wget, or literally anything else.",
        "pr_file_module": null
      },
      {
        "comment_id": "1982291365",
        "repo_full_name": "ollama/ollama",
        "pr_number": 9485,
        "pr_file": "api/types.go",
        "discussion_id": "1982280855",
        "commented_code": "@@ -361,9 +361,9 @@ type CopyRequest struct {\n // PullRequest is the request passed to [Client.Pull].\n type PullRequest struct {\n \tModel    string `json:\"model\"`\n-\tInsecure bool   `json:\"insecure,omitempty\"`\n-\tUsername string `json:\"username\"`\n-\tPassword string `json:\"password\"`\n+\tInsecure bool   `json:\"insecure,omitempty\"` // Deprecated: ignored",
        "comment_created_at": "2025-03-05T22:43:39+00:00",
        "comment_author": "bmizerany",
        "comment_body": "I've added `https+insecure` for pulling/pushing to remotes that have certs but not in a CA and users are fine skipping verification (e.g. https://localhost:6000).",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1758200953",
    "pr_number": 6675,
    "pr_file": "server/download.go",
    "created_at": "2024-09-13T05:27:16+00:00",
    "commented_code": "continue\n \t\t\t}\n \t\t\tdefer resp.Body.Close()\n-\t\t\tif resp.StatusCode != http.StatusTemporaryRedirect && resp.StatusCode != http.StatusOK {\n+\n+\t\t\tswitch resp.StatusCode {\n+\t\t\tcase http.StatusOK:\n+\t\t\t\treturn requestURL, nil\n+\t\t\tcase http.StatusTemporaryRedirect:",
    "repo_full_name": "ollama/ollama",
    "discussion_comments": [
      {
        "comment_id": "1758200953",
        "repo_full_name": "ollama/ollama",
        "pr_number": 6675,
        "pr_file": "server/download.go",
        "discussion_id": "1758200953",
        "commented_code": "@@ -256,10 +256,15 @@ func (b *blobDownload) run(ctx context.Context, requestURL *url.URL, opts *regis\n \t\t\t\tcontinue\n \t\t\t}\n \t\t\tdefer resp.Body.Close()\n-\t\t\tif resp.StatusCode != http.StatusTemporaryRedirect && resp.StatusCode != http.StatusOK {\n+\n+\t\t\tswitch resp.StatusCode {\n+\t\t\tcase http.StatusOK:\n+\t\t\t\treturn requestURL, nil\n+\t\t\tcase http.StatusTemporaryRedirect:",
        "comment_created_at": "2024-09-13T05:27:16+00:00",
        "comment_author": "killerwhile",
        "comment_body": "Could we add more redirection status code such as 301 or 302?",
        "pr_file_module": null
      },
      {
        "comment_id": "1758208349",
        "repo_full_name": "ollama/ollama",
        "pr_number": 6675,
        "pr_file": "server/download.go",
        "discussion_id": "1758200953",
        "commented_code": "@@ -256,10 +256,15 @@ func (b *blobDownload) run(ctx context.Context, requestURL *url.URL, opts *regis\n \t\t\t\tcontinue\n \t\t\t}\n \t\t\tdefer resp.Body.Close()\n-\t\t\tif resp.StatusCode != http.StatusTemporaryRedirect && resp.StatusCode != http.StatusOK {\n+\n+\t\t\tswitch resp.StatusCode {\n+\t\t\tcase http.StatusOK:\n+\t\t\t\treturn requestURL, nil\n+\t\t\tcase http.StatusTemporaryRedirect:",
        "comment_created_at": "2024-09-13T05:36:48+00:00",
        "comment_author": "Tobix99",
        "comment_body": "Added 301, 302, 303 and 308 to the check",
        "pr_file_module": null
      }
    ]
  }
]