[
  {
    "discussion_id": "1889277636",
    "pr_number": 8113,
    "pr_file": "llama/ggml-metal-embed.metal",
    "created_at": "2024-12-17T21:55:19+00:00",
    "commented_code": "}\n }\n \n+\n+template<typename T>\n+kernel void kernel_rope_multi(\n+        constant ggml_metal_kargs_rope & args,\n+        device const char * src0,\n+        device const char * src1,\n+        device const char * src2,\n+        device       char * dst,\n+        ushort  tiitg[[thread_index_in_threadgroup]],\n+        ushort3 tptg [[threads_per_threadgroup]],\n+        uint3   tgpig[[threadgroup_position_in_grid]]) {\n+    const int i3 = tgpig[2];\n+    const int i2 = tgpig[1];\n+    const int i1 = tgpig[0];\n+\n+    float corr_dims[2];\n+    rope_yarn_corr_dims(args.n_dims, args.n_ctx_orig, args.freq_base, args.beta_fast, args.beta_slow, corr_dims);\n+\n+    device const int32_t * pos = (device const int32_t *) src1;\n+\n+    int sect_dims = args.sections[0] + args.sections[1] + args.sections[2] + args.sections[3];\n+    int sec_w = args.sections[1] + args.sections[0];\n+\n+    const float inv_ndims = -1.f/args.n_dims;\n+\n+    float cos_theta;\n+    float sin_theta;\n+\n+    for (int i0 = 2*tiitg; i0 < args.ne0; i0 += 2*tptg.x) {\n+        if (i0 < args.n_dims) {\n+            const int ic = i0/2;\n+            const int sector = ic % sect_dims;\n+\n+            float theta_base = (float) pos[i2];",
    "repo_full_name": "ollama/ollama",
    "discussion_comments": [
      {
        "comment_id": "1889277636",
        "repo_full_name": "ollama/ollama",
        "pr_number": 8113,
        "pr_file": "llama/ggml-metal-embed.metal",
        "discussion_id": "1889277636",
        "commented_code": "@@ -4785,15 +4786,161 @@ kernel void kernel_rope_neox(\n     }\n }\n \n+\n+template<typename T>\n+kernel void kernel_rope_multi(\n+        constant ggml_metal_kargs_rope & args,\n+        device const char * src0,\n+        device const char * src1,\n+        device const char * src2,\n+        device       char * dst,\n+        ushort  tiitg[[thread_index_in_threadgroup]],\n+        ushort3 tptg [[threads_per_threadgroup]],\n+        uint3   tgpig[[threadgroup_position_in_grid]]) {\n+    const int i3 = tgpig[2];\n+    const int i2 = tgpig[1];\n+    const int i1 = tgpig[0];\n+\n+    float corr_dims[2];\n+    rope_yarn_corr_dims(args.n_dims, args.n_ctx_orig, args.freq_base, args.beta_fast, args.beta_slow, corr_dims);\n+\n+    device const int32_t * pos = (device const int32_t *) src1;\n+\n+    int sect_dims = args.sections[0] + args.sections[1] + args.sections[2] + args.sections[3];\n+    int sec_w = args.sections[1] + args.sections[0];\n+\n+    const float inv_ndims = -1.f/args.n_dims;\n+\n+    float cos_theta;\n+    float sin_theta;\n+\n+    for (int i0 = 2*tiitg; i0 < args.ne0; i0 += 2*tptg.x) {\n+        if (i0 < args.n_dims) {\n+            const int ic = i0/2;\n+            const int sector = ic % sect_dims;\n+\n+            float theta_base = (float) pos[i2];",
        "comment_created_at": "2024-12-17T21:55:19+00:00",
        "comment_author": "pdevine",
        "comment_body": "is it worth DRYing out getting the value for theta_base? It looks like this code is duplicated below and could just be a function.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2002415047",
    "pr_number": 9880,
    "pr_file": "template/gemma3-instruct.gotmpl",
    "created_at": "2025-03-19T04:57:32+00:00",
    "commented_code": "+{{- $skipStartOfTurn := false }}",
    "repo_full_name": "ollama/ollama",
    "discussion_comments": [
      {
        "comment_id": "2002415047",
        "repo_full_name": "ollama/ollama",
        "pr_number": 9880,
        "pr_file": "template/gemma3-instruct.gotmpl",
        "discussion_id": "2002415047",
        "commented_code": "@@ -0,0 +1,16 @@\n+{{- $skipStartOfTurn := false }}",
        "comment_created_at": "2025-03-19T04:57:32+00:00",
        "comment_author": "jmorganca",
        "comment_body": "is `skipStartOfTurn` needed?",
        "pr_file_module": null
      },
      {
        "comment_id": "2002455159",
        "repo_full_name": "ollama/ollama",
        "pr_number": 9880,
        "pr_file": "template/gemma3-instruct.gotmpl",
        "discussion_id": "2002415047",
        "commented_code": "@@ -0,0 +1,16 @@\n+{{- $skipStartOfTurn := false }}",
        "comment_created_at": "2025-03-19T05:36:07+00:00",
        "comment_author": "pdevine",
        "comment_body": "yes, otherwise the `<start_of_turn>user` segment gets added both for the assistant and the user.",
        "pr_file_module": null
      }
    ]
  }
]