[
  {
    "discussion_id": "1721953652",
    "pr_number": 5059,
    "pr_file": "llm/generate/gen_linux.sh",
    "created_at": "2024-08-19T15:12:14+00:00",
    "commented_code": "fi\n \n+if [ -z \"${VULKAN_ROOT}\" ]; then\n+    # Try the default location in case it exists\n+    VULKAN_ROOT=/usr/lib/\n+fi\n+\n+if [ -z \"${CAP_ROOT}\" ]; then\n+    # Try the default location in case it exists\n+    CAP_ROOT=/usr/lib/\n+fi\n+\n+if [ -z \"${OLLAMA_SKIP_VULKAN_GENERATE}\" -a -d \"${VULKAN_ROOT}\" ] && [ -z \"${OLLAMA_SKIP_VULKAN_GENERATE}\" -a -d \"${CAP_ROOT}\" ]; then\n+    echo \"Vulkan and capabilities libraries detected - building dynamic Vulkan library\"\n+    init_vars\n+\n+    CMAKE_DEFS=\"${COMMON_CMAKE_DEFS} ${CMAKE_DEFS} -DLLAMA_VULKAN=1\"\n+    BUILD_DIR=\"../build/linux/${ARCH}/vulkan\"\n+    EXTRA_LIBS=\"-L${VULKAN_ROOT} -L${CAP_ROOT} -lvulkan -lcap\"\n+    build\n+\n+    # copy oneAPI dependencies\n+    for dep in $(ldd \"${BUILD_DIR}/bin/ollama_llama_server\" | grep \"=>\" | cut -f2 -d= | cut -f2 -d' ' | grep -e vulkan -e cap); do\n+        cp \"${dep}\" \"${BUILD_DIR}/bin/\"\n+    done\n+    cp \"${VULKAN_ROOT}/libvulkan.so\" \"${BUILD_DIR}/bin/\"\n+    cp \"${CAP_ROOT}/libcap.so\" \"${BUILD_DIR}/bin/\"",
    "repo_full_name": "ollama/ollama",
    "discussion_comments": [
      {
        "comment_id": "1721953652",
        "repo_full_name": "ollama/ollama",
        "pr_number": 5059,
        "pr_file": "llm/generate/gen_linux.sh",
        "discussion_id": "1721953652",
        "commented_code": "@@ -206,6 +206,34 @@ if [ -z \"${OLLAMA_SKIP_CUDA_GENERATE}\" -a -d \"${CUDA_LIB_DIR}\" ]; then\n \n fi\n \n+if [ -z \"${VULKAN_ROOT}\" ]; then\n+    # Try the default location in case it exists\n+    VULKAN_ROOT=/usr/lib/\n+fi\n+\n+if [ -z \"${CAP_ROOT}\" ]; then\n+    # Try the default location in case it exists\n+    CAP_ROOT=/usr/lib/\n+fi\n+\n+if [ -z \"${OLLAMA_SKIP_VULKAN_GENERATE}\" -a -d \"${VULKAN_ROOT}\" ] && [ -z \"${OLLAMA_SKIP_VULKAN_GENERATE}\" -a -d \"${CAP_ROOT}\" ]; then\n+    echo \"Vulkan and capabilities libraries detected - building dynamic Vulkan library\"\n+    init_vars\n+\n+    CMAKE_DEFS=\"${COMMON_CMAKE_DEFS} ${CMAKE_DEFS} -DLLAMA_VULKAN=1\"\n+    BUILD_DIR=\"../build/linux/${ARCH}/vulkan\"\n+    EXTRA_LIBS=\"-L${VULKAN_ROOT} -L${CAP_ROOT} -lvulkan -lcap\"\n+    build\n+\n+    # copy oneAPI dependencies\n+    for dep in $(ldd \"${BUILD_DIR}/bin/ollama_llama_server\" | grep \"=>\" | cut -f2 -d= | cut -f2 -d' ' | grep -e vulkan -e cap); do\n+        cp \"${dep}\" \"${BUILD_DIR}/bin/\"\n+    done\n+    cp \"${VULKAN_ROOT}/libvulkan.so\" \"${BUILD_DIR}/bin/\"\n+    cp \"${CAP_ROOT}/libcap.so\" \"${BUILD_DIR}/bin/\"",
        "comment_created_at": "2024-08-19T15:12:14+00:00",
        "comment_author": "ArthurHeymans",
        "comment_body": "On fedora 40 This needs to be:\r\n\r\n    cp ${VULKAN_ROOT}/libvulkan.so* \"${BUILD_DIR}/bin/\"\r\n    cp ${CAP_ROOT}/libcap.so* \"${BUILD_DIR}/bin/\"\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1612143691",
    "pr_number": 3278,
    "pr_file": "llm/generate/gen_linux.sh",
    "created_at": "2024-05-23T18:29:01+00:00",
    "commented_code": "fi\n \n+if [ -z \"${ONEAPI_ROOT}\" ]; then\n+    # Try the default location in case it exists\n+    ONEAPI_ROOT=/opt/intel/oneapi\n+fi\n+\n+if [ -d \"${ONEAPI_ROOT}\" ]; then\n+    echo \"OneAPI libraries detected - building dynamic OneAPI library\"\n+    init_vars\n+    source ${ONEAPI_ROOT}/setvars.sh --force # set up environment variables for oneAPI\n+    CC=icx\n+    CMAKE_DEFS=\"${COMMON_CMAKE_DEFS} ${CMAKE_DEFS} -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -DLLAMA_SYCL=ON -DLLAMA_SYCL_F16=OFF\"\n+    BUILD_DIR=\"../build/linux/${ARCH}/oneapi\"\n+    EXTRA_LIBS=\"-fsycl -Wl,-rpath,${ONEAPI_ROOT}/compiler/latest/lib,-rpath,${ONEAPI_ROOT}/mkl/latest/lib,-rpath,${ONEAPI_ROOT}/tbb/latest/lib,-rpath,${ONEAPI_ROOT}/compiler/latest/opt/oclfpga/linux64/lib -lOpenCL -lmkl_core -lmkl_sycl_blas -lmkl_intel_ilp64 -lmkl_tbb_thread -ltbb\"",
    "repo_full_name": "ollama/ollama",
    "discussion_comments": [
      {
        "comment_id": "1612143691",
        "repo_full_name": "ollama/ollama",
        "pr_number": 3278,
        "pr_file": "llm/generate/gen_linux.sh",
        "discussion_id": "1612143691",
        "commented_code": "@@ -206,6 +206,36 @@ if [ -d \"${CUDA_LIB_DIR}\" ]; then\n \n fi\n \n+if [ -z \"${ONEAPI_ROOT}\" ]; then\n+    # Try the default location in case it exists\n+    ONEAPI_ROOT=/opt/intel/oneapi\n+fi\n+\n+if [ -d \"${ONEAPI_ROOT}\" ]; then\n+    echo \"OneAPI libraries detected - building dynamic OneAPI library\"\n+    init_vars\n+    source ${ONEAPI_ROOT}/setvars.sh --force # set up environment variables for oneAPI\n+    CC=icx\n+    CMAKE_DEFS=\"${COMMON_CMAKE_DEFS} ${CMAKE_DEFS} -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -DLLAMA_SYCL=ON -DLLAMA_SYCL_F16=OFF\"\n+    BUILD_DIR=\"../build/linux/${ARCH}/oneapi\"\n+    EXTRA_LIBS=\"-fsycl -Wl,-rpath,${ONEAPI_ROOT}/compiler/latest/lib,-rpath,${ONEAPI_ROOT}/mkl/latest/lib,-rpath,${ONEAPI_ROOT}/tbb/latest/lib,-rpath,${ONEAPI_ROOT}/compiler/latest/opt/oclfpga/linux64/lib -lOpenCL -lmkl_core -lmkl_sycl_blas -lmkl_intel_ilp64 -lmkl_tbb_thread -ltbb\"",
        "comment_created_at": "2024-05-23T18:29:01+00:00",
        "comment_author": "dhiltgen",
        "comment_body": "This feels like it may be problematic if the user doesn't have oneapi installed at the exact same location as the build system.  I think we'll eventually need to carry these libraries as dependency payloads like we do with cuda and rocm.  (assuming that's permitted)\r\n\r\nAs an incremental step before we expose in the official builds, this may be OK, although I see you are copying the libraries below.  Ideally we'd like to set this up so the user only needs the driver installed on the host, and we use the user-space library from our build to ensure things are linked properly.",
        "pr_file_module": null
      },
      {
        "comment_id": "1612639774",
        "repo_full_name": "ollama/ollama",
        "pr_number": 3278,
        "pr_file": "llm/generate/gen_linux.sh",
        "discussion_id": "1612143691",
        "commented_code": "@@ -206,6 +206,36 @@ if [ -d \"${CUDA_LIB_DIR}\" ]; then\n \n fi\n \n+if [ -z \"${ONEAPI_ROOT}\" ]; then\n+    # Try the default location in case it exists\n+    ONEAPI_ROOT=/opt/intel/oneapi\n+fi\n+\n+if [ -d \"${ONEAPI_ROOT}\" ]; then\n+    echo \"OneAPI libraries detected - building dynamic OneAPI library\"\n+    init_vars\n+    source ${ONEAPI_ROOT}/setvars.sh --force # set up environment variables for oneAPI\n+    CC=icx\n+    CMAKE_DEFS=\"${COMMON_CMAKE_DEFS} ${CMAKE_DEFS} -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -DLLAMA_SYCL=ON -DLLAMA_SYCL_F16=OFF\"\n+    BUILD_DIR=\"../build/linux/${ARCH}/oneapi\"\n+    EXTRA_LIBS=\"-fsycl -Wl,-rpath,${ONEAPI_ROOT}/compiler/latest/lib,-rpath,${ONEAPI_ROOT}/mkl/latest/lib,-rpath,${ONEAPI_ROOT}/tbb/latest/lib,-rpath,${ONEAPI_ROOT}/compiler/latest/opt/oclfpga/linux64/lib -lOpenCL -lmkl_core -lmkl_sycl_blas -lmkl_intel_ilp64 -lmkl_tbb_thread -ltbb\"",
        "comment_created_at": "2024-05-24T02:56:23+00:00",
        "comment_author": "zhewang1-intc",
        "comment_body": "The libraries copied to the ${BUILD_DIR}/bin directory contain the essential oneAPI dependencies required for running the llama.cpp. There's no need for users to install oneAPI themselves, as the build system handles this dependency which means build system should install oneAPI.\r\n\r\nWhen the ollama binary executes, these dependencies are extracted to a temporary location on the user's machine. Upon detecting an Intel GPU driver, we appends the path to this temporary directory (containing the oneAPI dependencies) to the LD_LIBRARY_PATH environment variable. This ensures that even if oneAPI isn't installed locally, the program can still locate the necessary libraries to function.",
        "pr_file_module": null
      },
      {
        "comment_id": "1613654959",
        "repo_full_name": "ollama/ollama",
        "pr_number": 3278,
        "pr_file": "llm/generate/gen_linux.sh",
        "discussion_id": "1612143691",
        "commented_code": "@@ -206,6 +206,36 @@ if [ -d \"${CUDA_LIB_DIR}\" ]; then\n \n fi\n \n+if [ -z \"${ONEAPI_ROOT}\" ]; then\n+    # Try the default location in case it exists\n+    ONEAPI_ROOT=/opt/intel/oneapi\n+fi\n+\n+if [ -d \"${ONEAPI_ROOT}\" ]; then\n+    echo \"OneAPI libraries detected - building dynamic OneAPI library\"\n+    init_vars\n+    source ${ONEAPI_ROOT}/setvars.sh --force # set up environment variables for oneAPI\n+    CC=icx\n+    CMAKE_DEFS=\"${COMMON_CMAKE_DEFS} ${CMAKE_DEFS} -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -DLLAMA_SYCL=ON -DLLAMA_SYCL_F16=OFF\"\n+    BUILD_DIR=\"../build/linux/${ARCH}/oneapi\"\n+    EXTRA_LIBS=\"-fsycl -Wl,-rpath,${ONEAPI_ROOT}/compiler/latest/lib,-rpath,${ONEAPI_ROOT}/mkl/latest/lib,-rpath,${ONEAPI_ROOT}/tbb/latest/lib,-rpath,${ONEAPI_ROOT}/compiler/latest/opt/oclfpga/linux64/lib -lOpenCL -lmkl_core -lmkl_sycl_blas -lmkl_intel_ilp64 -lmkl_tbb_thread -ltbb\"",
        "comment_created_at": "2024-05-24T15:27:09+00:00",
        "comment_author": "dhiltgen",
        "comment_body": "In that case, I don't think this rpath is what we want, since that's setting a runtime setting for where ld can find the libraries at runtime and assumes you have installed the libs in the same location as the build system, but we likely want it to be a relative path based on `$ORIGIN` like we're doing with ROCm.  We can tidy this up in a follow up.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1943518892",
    "pr_number": 8691,
    "pr_file": "scripts/install.sh",
    "created_at": "2025-02-05T19:02:54+00:00",
    "commented_code": "dnf)\n             DNF_VERSION=$(dnf --version | grep -E -o -m 1 \"dnf[4-5]\")\n             if [ \"$DNF_VERSION\" = \"dnf5\" ]; then\n-                ADD_REPO_FMT=\"--addrepo\"\n+                DNF_COMPATIBILITY_FMT=\"addrepo --from-repofile=\"",
    "repo_full_name": "ollama/ollama",
    "discussion_comments": [
      {
        "comment_id": "1943518892",
        "repo_full_name": "ollama/ollama",
        "pr_number": 8691,
        "pr_file": "scripts/install.sh",
        "discussion_id": "1943518892",
        "commented_code": "@@ -251,12 +251,12 @@ install_cuda_driver_yum() {\n         dnf)\n             DNF_VERSION=$(dnf --version | grep -E -o -m 1 \"dnf[4-5]\")\n             if [ \"$DNF_VERSION\" = \"dnf5\" ]; then\n-                ADD_REPO_FMT=\"--addrepo\"\n+                DNF_COMPATIBILITY_FMT=\"addrepo --from-repofile=\"",
        "comment_created_at": "2025-02-05T19:02:54+00:00",
        "comment_author": "BruceMacD",
        "comment_body": "I believe the space after the `from-repofile` flag will cause issues, this results in the command format: `... addrepo --from-repofile= https://developer.download.nvidia.com...`",
        "pr_file_module": null
      },
      {
        "comment_id": "1943535958",
        "repo_full_name": "ollama/ollama",
        "pr_number": 8691,
        "pr_file": "scripts/install.sh",
        "discussion_id": "1943518892",
        "commented_code": "@@ -251,12 +251,12 @@ install_cuda_driver_yum() {\n         dnf)\n             DNF_VERSION=$(dnf --version | grep -E -o -m 1 \"dnf[4-5]\")\n             if [ \"$DNF_VERSION\" = \"dnf5\" ]; then\n-                ADD_REPO_FMT=\"--addrepo\"\n+                DNF_COMPATIBILITY_FMT=\"addrepo --from-repofile=\"",
        "comment_created_at": "2025-02-05T19:13:03+00:00",
        "comment_author": "FreeCap23",
        "comment_body": "I made a new commit, could you confirm there is no more space after the equals please? Thank you!",
        "pr_file_module": null
      }
    ]
  }
]