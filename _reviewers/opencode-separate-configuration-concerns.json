[
  {
    "discussion_id": "2273104002",
    "pr_number": 1888,
    "pr_file": "packages/tui/internal/components/chat/message.go",
    "created_at": "2025-08-13T11:37:26+00:00",
    "commented_code": "\"golang.org/x/text/language\"\n )\n \n+// shouldUse24HourFormat determines if 24-hour time format should be used\n+// based on config and system detection\n+func shouldUse24HourFormat(config *opencode.Config) bool {\n+\tswitch config.TimeFormat {\n+\tcase \"24h\":\n+\t\treturn true\n+\tcase \"12h\":\n+\t\treturn false\n+\tdefault:\n+\t\t// Default to detect behavior\n+\t\tif runtime.GOOS == \"darwin\" {\n+\t\t\treturn detectMacOS24HourFormat()\n+\t\t}\n+\t\treturn false // fallback to 12h on other platforms",
    "repo_full_name": "sst/opencode",
    "discussion_comments": [
      {
        "comment_id": "2273104002",
        "repo_full_name": "sst/opencode",
        "pr_number": 1888,
        "pr_file": "packages/tui/internal/components/chat/message.go",
        "discussion_id": "2273104002",
        "commented_code": "@@ -22,6 +24,38 @@ import (\n \t\"golang.org/x/text/language\"\n )\n \n+// shouldUse24HourFormat determines if 24-hour time format should be used\n+// based on config and system detection\n+func shouldUse24HourFormat(config *opencode.Config) bool {\n+\tswitch config.TimeFormat {\n+\tcase \"24h\":\n+\t\treturn true\n+\tcase \"12h\":\n+\t\treturn false\n+\tdefault:\n+\t\t// Default to detect behavior\n+\t\tif runtime.GOOS == \"darwin\" {\n+\t\t\treturn detectMacOS24HourFormat()\n+\t\t}\n+\t\treturn false // fallback to 12h on other platforms",
        "comment_created_at": "2025-08-13T11:37:26+00:00",
        "comment_author": "adamdotdevin",
        "comment_body": "i like the UX of it auto-determining on mac os, but with the way bubbletea works this code is going to run a lot; we should either 1) drop the auto-detect and just default to 12h unless you configure or 2) store the detected format in `app.State` and use it if there's no configured value.",
        "pr_file_module": null
      },
      {
        "comment_id": "2274786980",
        "repo_full_name": "sst/opencode",
        "pr_number": 1888,
        "pr_file": "packages/tui/internal/components/chat/message.go",
        "discussion_id": "2273104002",
        "commented_code": "@@ -22,6 +24,38 @@ import (\n \t\"golang.org/x/text/language\"\n )\n \n+// shouldUse24HourFormat determines if 24-hour time format should be used\n+// based on config and system detection\n+func shouldUse24HourFormat(config *opencode.Config) bool {\n+\tswitch config.TimeFormat {\n+\tcase \"24h\":\n+\t\treturn true\n+\tcase \"12h\":\n+\t\treturn false\n+\tdefault:\n+\t\t// Default to detect behavior\n+\t\tif runtime.GOOS == \"darwin\" {\n+\t\t\treturn detectMacOS24HourFormat()\n+\t\t}\n+\t\treturn false // fallback to 12h on other platforms",
        "comment_created_at": "2025-08-13T22:36:36+00:00",
        "comment_author": "mattrobenolt",
        "comment_body": "Done, I think this is what you're more expecting. I'd typically use a sync.OnceValue or something here, but I don't think there's anything that could happen as a race condition, so just used a *bool on the app.State.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2091570444",
    "pr_number": 14,
    "pr_file": "internal/config/config.go",
    "created_at": "2025-05-15T16:27:03+00:00",
    "commented_code": "// Config is the main configuration structure for the application.\n type Config struct {\n-\tData         Data                              `json:\"data\"`\n-\tWorkingDir   string                            `json:\"wd,omitempty\"`\n-\tMCPServers   map[string]MCPServer              `json:\"mcpServers,omitempty\"`\n-\tProviders    map[models.ModelProvider]Provider `json:\"providers,omitempty\"`\n-\tLSP          map[string]LSPConfig              `json:\"lsp,omitempty\"`\n-\tAgents       map[AgentName]Agent               `json:\"agents,omitempty\"`\n-\tDebug        bool                              `json:\"debug,omitempty\"`\n-\tDebugLSP     bool                              `json:\"debugLSP,omitempty\"`\n-\tContextPaths []string                          `json:\"contextPaths,omitempty\"`\n-\tTUI          TUIConfig                         `json:\"tui\"`\n+\tData          Data                              `json:\"data\"`\n+\tWorkingDir    string                            `json:\"wd,omitempty\"`\n+\tMCPServers    map[string]MCPServer              `json:\"mcpServers,omitempty\"`\n+\tProviders     map[models.ModelProvider]Provider `json:\"providers,omitempty\"`\n+\tLSP           map[string]LSPConfig              `json:\"lsp,omitempty\"`\n+\tAgents        map[AgentName]Agent               `json:\"agents,omitempty\"`\n+\tDebug         bool                              `json:\"debug,omitempty\"`\n+\tDebugLSP      bool                              `json:\"debugLSP,omitempty\"`\n+\tContextPaths  []string                          `json:\"contextPaths,omitempty\"`\n+\tTUI           TUIConfig                         `json:\"tui\"`\n+\tSetupComplete bool                              `json:\"setupComplete,omit\"`",
    "repo_full_name": "sst/opencode",
    "discussion_comments": [
      {
        "comment_id": "2091570444",
        "repo_full_name": "sst/opencode",
        "pr_number": 14,
        "pr_file": "internal/config/config.go",
        "discussion_id": "2091570444",
        "commented_code": "@@ -75,16 +75,17 @@ type TUIConfig struct {\n \n // Config is the main configuration structure for the application.\n type Config struct {\n-\tData         Data                              `json:\"data\"`\n-\tWorkingDir   string                            `json:\"wd,omitempty\"`\n-\tMCPServers   map[string]MCPServer              `json:\"mcpServers,omitempty\"`\n-\tProviders    map[models.ModelProvider]Provider `json:\"providers,omitempty\"`\n-\tLSP          map[string]LSPConfig              `json:\"lsp,omitempty\"`\n-\tAgents       map[AgentName]Agent               `json:\"agents,omitempty\"`\n-\tDebug        bool                              `json:\"debug,omitempty\"`\n-\tDebugLSP     bool                              `json:\"debugLSP,omitempty\"`\n-\tContextPaths []string                          `json:\"contextPaths,omitempty\"`\n-\tTUI          TUIConfig                         `json:\"tui\"`\n+\tData          Data                              `json:\"data\"`\n+\tWorkingDir    string                            `json:\"wd,omitempty\"`\n+\tMCPServers    map[string]MCPServer              `json:\"mcpServers,omitempty\"`\n+\tProviders     map[models.ModelProvider]Provider `json:\"providers,omitempty\"`\n+\tLSP           map[string]LSPConfig              `json:\"lsp,omitempty\"`\n+\tAgents        map[AgentName]Agent               `json:\"agents,omitempty\"`\n+\tDebug         bool                              `json:\"debug,omitempty\"`\n+\tDebugLSP      bool                              `json:\"debugLSP,omitempty\"`\n+\tContextPaths  []string                          `json:\"contextPaths,omitempty\"`\n+\tTUI           TUIConfig                         `json:\"tui\"`\n+\tSetupComplete bool                              `json:\"setupComplete,omit\"`",
        "comment_created_at": "2025-05-15T16:27:03+00:00",
        "comment_author": "adamdotdevin",
        "comment_body": "my main feedback is that i don't think we should have `setupComplete` as part of the config, we should just store that state using another mechanism. i think the current \"init\" feature stores a file in `.opencode`? i guess this is different in that it's more of a global setup than a project setup, but we could do something similar (store a file in the global config dir).",
        "pr_file_module": null
      },
      {
        "comment_id": "2091600083",
        "repo_full_name": "sst/opencode",
        "pr_number": 14,
        "pr_file": "internal/config/config.go",
        "discussion_id": "2091570444",
        "commented_code": "@@ -75,16 +75,17 @@ type TUIConfig struct {\n \n // Config is the main configuration structure for the application.\n type Config struct {\n-\tData         Data                              `json:\"data\"`\n-\tWorkingDir   string                            `json:\"wd,omitempty\"`\n-\tMCPServers   map[string]MCPServer              `json:\"mcpServers,omitempty\"`\n-\tProviders    map[models.ModelProvider]Provider `json:\"providers,omitempty\"`\n-\tLSP          map[string]LSPConfig              `json:\"lsp,omitempty\"`\n-\tAgents       map[AgentName]Agent               `json:\"agents,omitempty\"`\n-\tDebug        bool                              `json:\"debug,omitempty\"`\n-\tDebugLSP     bool                              `json:\"debugLSP,omitempty\"`\n-\tContextPaths []string                          `json:\"contextPaths,omitempty\"`\n-\tTUI          TUIConfig                         `json:\"tui\"`\n+\tData          Data                              `json:\"data\"`\n+\tWorkingDir    string                            `json:\"wd,omitempty\"`\n+\tMCPServers    map[string]MCPServer              `json:\"mcpServers,omitempty\"`\n+\tProviders     map[models.ModelProvider]Provider `json:\"providers,omitempty\"`\n+\tLSP           map[string]LSPConfig              `json:\"lsp,omitempty\"`\n+\tAgents        map[AgentName]Agent               `json:\"agents,omitempty\"`\n+\tDebug         bool                              `json:\"debug,omitempty\"`\n+\tDebugLSP      bool                              `json:\"debugLSP,omitempty\"`\n+\tContextPaths  []string                          `json:\"contextPaths,omitempty\"`\n+\tTUI           TUIConfig                         `json:\"tui\"`\n+\tSetupComplete bool                              `json:\"setupComplete,omit\"`",
        "comment_created_at": "2025-05-15T16:44:59+00:00",
        "comment_author": "l0gicgate",
        "comment_body": "I can just make this a global variable instead, and mutate it accordingly.",
        "pr_file_module": null
      },
      {
        "comment_id": "2091670779",
        "repo_full_name": "sst/opencode",
        "pr_number": 14,
        "pr_file": "internal/config/config.go",
        "discussion_id": "2091570444",
        "commented_code": "@@ -75,16 +75,17 @@ type TUIConfig struct {\n \n // Config is the main configuration structure for the application.\n type Config struct {\n-\tData         Data                              `json:\"data\"`\n-\tWorkingDir   string                            `json:\"wd,omitempty\"`\n-\tMCPServers   map[string]MCPServer              `json:\"mcpServers,omitempty\"`\n-\tProviders    map[models.ModelProvider]Provider `json:\"providers,omitempty\"`\n-\tLSP          map[string]LSPConfig              `json:\"lsp,omitempty\"`\n-\tAgents       map[AgentName]Agent               `json:\"agents,omitempty\"`\n-\tDebug        bool                              `json:\"debug,omitempty\"`\n-\tDebugLSP     bool                              `json:\"debugLSP,omitempty\"`\n-\tContextPaths []string                          `json:\"contextPaths,omitempty\"`\n-\tTUI          TUIConfig                         `json:\"tui\"`\n+\tData          Data                              `json:\"data\"`\n+\tWorkingDir    string                            `json:\"wd,omitempty\"`\n+\tMCPServers    map[string]MCPServer              `json:\"mcpServers,omitempty\"`\n+\tProviders     map[models.ModelProvider]Provider `json:\"providers,omitempty\"`\n+\tLSP           map[string]LSPConfig              `json:\"lsp,omitempty\"`\n+\tAgents        map[AgentName]Agent               `json:\"agents,omitempty\"`\n+\tDebug         bool                              `json:\"debug,omitempty\"`\n+\tDebugLSP      bool                              `json:\"debugLSP,omitempty\"`\n+\tContextPaths  []string                          `json:\"contextPaths,omitempty\"`\n+\tTUI           TUIConfig                         `json:\"tui\"`\n+\tSetupComplete bool                              `json:\"setupComplete,omit\"`",
        "comment_created_at": "2025-05-15T17:31:05+00:00",
        "comment_author": "l0gicgate",
        "comment_body": "Extracted the setup functionality into its own module and cleaned this all up via https://github.com/sst/opencode/pull/14/commits/98de5ba936848619fc763ec90e958d242f91260d",
        "pr_file_module": null
      }
    ]
  }
]