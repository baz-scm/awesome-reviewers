[
  {
    "discussion_id": "2169308763",
    "pr_number": 307,
    "pr_file": "install.sh",
    "created_at": "2025-06-26T15:12:22+00:00",
    "commented_code": "echo \"  -h    Show this help message\"\n }\n \n+retry() {\n+    # This facilitates arbitrary retry logic for the provided command\n+    #\n+    # USAGE:\n+    #  # Use the defaults\n+    #  retry curl --fail https://example.com\n+    #  # Provide an updated count\n+    #  retry 10 curl --fail https://example.com\n+    #  # Provide an updated count and delay\n+    #  retry 5 10 curl --fail https://example.com\n+    local retry_count=3\n+    local retry_delay=2\n+\n+    # Update the default values if provided\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_count=$1; shift; }\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_delay=$1; shift; }\n+\n+    local n=1\n+    until \"$@\"; do\n+        if (( n >= retry_count )); then\n+            printf '\u26a0\ufe0f  attempt %d/%d failed for: %s\n' \"$n\" \"$retry_count\" \"$*\" >&2\n+            return 1\n+        fi\n+        printf '\u26a0\ufe0f  attempt %d/%d failed for: %s; retrying in %ds\n' \"$n\" \"$retry_count\" \"$*\" \"$retry_delay\" >&2",
    "repo_full_name": "opengrep/opengrep",
    "discussion_comments": [
      {
        "comment_id": "2169308763",
        "repo_full_name": "opengrep/opengrep",
        "pr_number": 307,
        "pr_file": "install.sh",
        "discussion_id": "2169308763",
        "commented_code": "@@ -8,33 +10,75 @@ print_usage() {\n     echo \"  -h    Show this help message\"\n }\n \n+retry() {\n+    # This facilitates arbitrary retry logic for the provided command\n+    #\n+    # USAGE:\n+    #  # Use the defaults\n+    #  retry curl --fail https://example.com\n+    #  # Provide an updated count\n+    #  retry 10 curl --fail https://example.com\n+    #  # Provide an updated count and delay\n+    #  retry 5 10 curl --fail https://example.com\n+    local retry_count=3\n+    local retry_delay=2\n+\n+    # Update the default values if provided\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_count=$1; shift; }\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_delay=$1; shift; }\n+\n+    local n=1\n+    until \"$@\"; do\n+        if (( n >= retry_count )); then\n+            printf '\u26a0\ufe0f  attempt %d/%d failed for: %s\\n' \"$n\" \"$retry_count\" \"$*\" >&2\n+            return 1\n+        fi\n+        printf '\u26a0\ufe0f  attempt %d/%d failed for: %s; retrying in %ds\\n' \"$n\" \"$retry_count\" \"$*\" \"$retry_delay\" >&2",
        "comment_created_at": "2025-06-26T15:12:22+00:00",
        "comment_author": "dimitris-m",
        "comment_body": "I'm personally cautious with fancy symbols like \u26a0\ufe0f.\r\n\r\nDo all terminals support it? Does it interfere with logging (in clients)?",
        "pr_file_module": null
      },
      {
        "comment_id": "2169310959",
        "repo_full_name": "opengrep/opengrep",
        "pr_number": 307,
        "pr_file": "install.sh",
        "discussion_id": "2169308763",
        "commented_code": "@@ -8,33 +10,75 @@ print_usage() {\n     echo \"  -h    Show this help message\"\n }\n \n+retry() {\n+    # This facilitates arbitrary retry logic for the provided command\n+    #\n+    # USAGE:\n+    #  # Use the defaults\n+    #  retry curl --fail https://example.com\n+    #  # Provide an updated count\n+    #  retry 10 curl --fail https://example.com\n+    #  # Provide an updated count and delay\n+    #  retry 5 10 curl --fail https://example.com\n+    local retry_count=3\n+    local retry_delay=2\n+\n+    # Update the default values if provided\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_count=$1; shift; }\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_delay=$1; shift; }\n+\n+    local n=1\n+    until \"$@\"; do\n+        if (( n >= retry_count )); then\n+            printf '\u26a0\ufe0f  attempt %d/%d failed for: %s\\n' \"$n\" \"$retry_count\" \"$*\" >&2\n+            return 1\n+        fi\n+        printf '\u26a0\ufe0f  attempt %d/%d failed for: %s; retrying in %ds\\n' \"$n\" \"$retry_count\" \"$*\" \"$retry_delay\" >&2",
        "comment_created_at": "2025-06-26T15:13:21+00:00",
        "comment_author": "dimitris-m",
        "comment_body": "Note also that we don't use such symbols for other actions, successful or other warnings and errors. \r\nSo for consistency I would remove them.",
        "pr_file_module": null
      },
      {
        "comment_id": "2180514765",
        "repo_full_name": "opengrep/opengrep",
        "pr_number": 307,
        "pr_file": "install.sh",
        "discussion_id": "2169308763",
        "commented_code": "@@ -8,33 +10,75 @@ print_usage() {\n     echo \"  -h    Show this help message\"\n }\n \n+retry() {\n+    # This facilitates arbitrary retry logic for the provided command\n+    #\n+    # USAGE:\n+    #  # Use the defaults\n+    #  retry curl --fail https://example.com\n+    #  # Provide an updated count\n+    #  retry 10 curl --fail https://example.com\n+    #  # Provide an updated count and delay\n+    #  retry 5 10 curl --fail https://example.com\n+    local retry_count=3\n+    local retry_delay=2\n+\n+    # Update the default values if provided\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_count=$1; shift; }\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_delay=$1; shift; }\n+\n+    local n=1\n+    until \"$@\"; do\n+        if (( n >= retry_count )); then\n+            printf '\u26a0\ufe0f  attempt %d/%d failed for: %s\\n' \"$n\" \"$retry_count\" \"$*\" >&2\n+            return 1\n+        fi\n+        printf '\u26a0\ufe0f  attempt %d/%d failed for: %s; retrying in %ds\\n' \"$n\" \"$retry_count\" \"$*\" \"$retry_delay\" >&2",
        "comment_created_at": "2025-07-02T16:38:57+00:00",
        "comment_author": "JonZeolla",
        "comment_body": "I'm fine removing it",
        "pr_file_module": null
      },
      {
        "comment_id": "2180585684",
        "repo_full_name": "opengrep/opengrep",
        "pr_number": 307,
        "pr_file": "install.sh",
        "discussion_id": "2169308763",
        "commented_code": "@@ -8,33 +10,75 @@ print_usage() {\n     echo \"  -h    Show this help message\"\n }\n \n+retry() {\n+    # This facilitates arbitrary retry logic for the provided command\n+    #\n+    # USAGE:\n+    #  # Use the defaults\n+    #  retry curl --fail https://example.com\n+    #  # Provide an updated count\n+    #  retry 10 curl --fail https://example.com\n+    #  # Provide an updated count and delay\n+    #  retry 5 10 curl --fail https://example.com\n+    local retry_count=3\n+    local retry_delay=2\n+\n+    # Update the default values if provided\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_count=$1; shift; }\n+    [[ $1 =~ ^[0-9]+$ ]] && { retry_delay=$1; shift; }\n+\n+    local n=1\n+    until \"$@\"; do\n+        if (( n >= retry_count )); then\n+            printf '\u26a0\ufe0f  attempt %d/%d failed for: %s\\n' \"$n\" \"$retry_count\" \"$*\" >&2\n+            return 1\n+        fi\n+        printf '\u26a0\ufe0f  attempt %d/%d failed for: %s; retrying in %ds\\n' \"$n\" \"$retry_count\" \"$*\" \"$retry_delay\" >&2",
        "comment_created_at": "2025-07-02T17:15:03+00:00",
        "comment_author": "JonZeolla",
        "comment_body": "Removed in ee1923ddde7ecb755f2dba25fe8d65509dd5284e",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2154264390",
    "pr_number": 294,
    "pr_file": "install.sh",
    "created_at": "2025-06-18T10:34:11+00:00",
    "commented_code": "+#!/bin/bash -e",
    "repo_full_name": "opengrep/opengrep",
    "discussion_comments": [
      {
        "comment_id": "2154264390",
        "repo_full_name": "opengrep/opengrep",
        "pr_number": 294,
        "pr_file": "install.sh",
        "discussion_id": "2154264390",
        "commented_code": "@@ -0,0 +1,191 @@\n+#!/bin/bash -e",
        "comment_created_at": "2025-06-18T10:34:11+00:00",
        "comment_author": "JonZeolla",
        "comment_body": "```suggestion\r\n#!/usr/bin/env bash -e\r\n```",
        "pr_file_module": null
      }
    ]
  }
]