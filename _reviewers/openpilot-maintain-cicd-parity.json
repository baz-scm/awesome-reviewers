[
  {
    "discussion_id": "1741273854",
    "pr_number": 33438,
    "pr_file": "scripts/lint/lint.sh",
    "created_at": "2024-09-02T22:44:37+00:00",
    "commented_code": "ALL_FILES=$1\n   PYTHON_FILES=$2\n \n-  run \"ruff\" ruff check $PYTHON_FILES --quiet",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "1741273854",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 33438,
        "pr_file": "scripts/lint/lint.sh",
        "discussion_id": "1741273854",
        "commented_code": "@@ -47,7 +48,7 @@ function run_tests() {\n   ALL_FILES=$1\n   PYTHON_FILES=$2\n \n-  run \"ruff\" ruff check $PYTHON_FILES --quiet",
        "comment_created_at": "2024-09-02T22:44:37+00:00",
        "comment_author": "adeebshihadeh",
        "comment_body": "@maxime-desroches is there a reason this was done? we always want to run the same thing a user would do, and this was masking an error I hit while running \"ruff check .\"",
        "pr_file_module": null
      },
      {
        "comment_id": "1742503277",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 33438,
        "pr_file": "scripts/lint/lint.sh",
        "discussion_id": "1741273854",
        "commented_code": "@@ -47,7 +48,7 @@ function run_tests() {\n   ALL_FILES=$1\n   PYTHON_FILES=$2\n \n-  run \"ruff\" ruff check $PYTHON_FILES --quiet",
        "comment_created_at": "2024-09-03T18:34:16+00:00",
        "comment_author": "maxime-desroches",
        "comment_body": "Yes, the goal was to only check files that are tracked by git and ignore new files that you might have created that are unrelated or that you don't want to commit",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1713248443",
    "pr_number": 33261,
    "pr_file": "scripts/lint.sh",
    "created_at": "2024-08-12T06:54:58+00:00",
    "commented_code": "IGNORED_FILES=\"uv\\.lock|docs\\/CARS.md\"\n IGNORED_DIRS=\"^third_party.*|^msgq.*|^msgq_repo.*|^opendbc.*|^opendbc_repo.*|^cereal.*|^panda.*|^rednose.*|^rednose_repo.*|^tinygrad.*|^tinygrad_repo.*|^teleoprtc.*|^teleoprtc_repo.*\"\n \n+function check_banned_patterns() {\n+  BANNED_PATTERN='\\.vEgo(?!Stopping|Starting|Raw|Cluster)|\\.aEgo'\n+  if grep -r -P \"$BANNED_PATTERN\" --include='*.py' selfdrive/car; then\n+    echo 'Found banned pattern!'\n+    exit 1\n+  fi\n+}\n+",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "1713248443",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 33261,
        "pr_file": "scripts/lint.sh",
        "discussion_id": "1713248443",
        "commented_code": "@@ -15,6 +15,14 @@ FAILED=0\n IGNORED_FILES=\"uv\\.lock|docs\\/CARS.md\"\n IGNORED_DIRS=\"^third_party.*|^msgq.*|^msgq_repo.*|^opendbc.*|^opendbc_repo.*|^cereal.*|^panda.*|^rednose.*|^rednose_repo.*|^tinygrad.*|^tinygrad_repo.*|^teleoprtc.*|^teleoprtc_repo.*\"\n \n+function check_banned_patterns() {\n+  BANNED_PATTERN='\\.vEgo(?!Stopping|Starting|Raw|Cluster)|\\.aEgo'\n+  if grep -r -P \"$BANNED_PATTERN\" --include='*.py' selfdrive/car; then\n+    echo 'Found banned pattern!'\n+    exit 1\n+  fi\n+}\n+",
        "comment_created_at": "2024-08-12T06:54:58+00:00",
        "comment_author": "sshane",
        "comment_body": "@maxime-desroches is this something we want in the lint tool?",
        "pr_file_module": null
      },
      {
        "comment_id": "1714219619",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 33261,
        "pr_file": "scripts/lint.sh",
        "discussion_id": "1713248443",
        "commented_code": "@@ -15,6 +15,14 @@ FAILED=0\n IGNORED_FILES=\"uv\\.lock|docs\\/CARS.md\"\n IGNORED_DIRS=\"^third_party.*|^msgq.*|^msgq_repo.*|^opendbc.*|^opendbc_repo.*|^cereal.*|^panda.*|^rednose.*|^rednose_repo.*|^tinygrad.*|^tinygrad_repo.*|^teleoprtc.*|^teleoprtc_repo.*\"\n \n+function check_banned_patterns() {\n+  BANNED_PATTERN='\\.vEgo(?!Stopping|Starting|Raw|Cluster)|\\.aEgo'\n+  if grep -r -P \"$BANNED_PATTERN\" --include='*.py' selfdrive/car; then\n+    echo 'Found banned pattern!'\n+    exit 1\n+  fi\n+}\n+",
        "comment_created_at": "2024-08-12T18:37:30+00:00",
        "comment_author": "maxime-desroches",
        "comment_body": "If you think it might be useful while you switch everything over to opendbc, then we can add it. We might want to put these custom lint rules in separate files since we will also need a rule to enforce `python3` instead of `python` in shebangs and I would prefer to keep `lint.sh` as simple as possible. \r\n\r\nMaybe we can have a `lint/` subdirectory will all the custom rules we need?",
        "pr_file_module": null
      },
      {
        "comment_id": "1714230784",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 33261,
        "pr_file": "scripts/lint.sh",
        "discussion_id": "1713248443",
        "commented_code": "@@ -15,6 +15,14 @@ FAILED=0\n IGNORED_FILES=\"uv\\.lock|docs\\/CARS.md\"\n IGNORED_DIRS=\"^third_party.*|^msgq.*|^msgq_repo.*|^opendbc.*|^opendbc_repo.*|^cereal.*|^panda.*|^rednose.*|^rednose_repo.*|^tinygrad.*|^tinygrad_repo.*|^teleoprtc.*|^teleoprtc_repo.*\"\n \n+function check_banned_patterns() {\n+  BANNED_PATTERN='\\.vEgo(?!Stopping|Starting|Raw|Cluster)|\\.aEgo'\n+  if grep -r -P \"$BANNED_PATTERN\" --include='*.py' selfdrive/car; then\n+    echo 'Found banned pattern!'\n+    exit 1\n+  fi\n+}\n+",
        "comment_created_at": "2024-08-12T18:48:25+00:00",
        "comment_author": "sshane",
        "comment_body": "That's fine, this isn't needed once I merge dataclasses, as ruff will catch these attribute errors. `lint/` directories sound good.",
        "pr_file_module": null
      }
    ]
  }
]