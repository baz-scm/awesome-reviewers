[
  {
    "discussion_id": "2169486038",
    "pr_number": 35595,
    "pr_file": "cereal/log.capnp",
    "created_at": "2025-06-26T16:50:32+00:00",
    "commented_code": "# microphone data\n     microphone @103 :Microphone;\n+    audioData @147 :AudioData;",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "2169486038",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 35595,
        "pr_file": "cereal/log.capnp",
        "discussion_id": "2169486038",
        "commented_code": "@@ -2557,6 +2565,7 @@ struct Event {\n \n     # microphone data\n     microphone @103 :Microphone;\n+    audioData @147 :AudioData;",
        "comment_created_at": "2025-06-26T16:50:32+00:00",
        "comment_author": "adeebshihadeh",
        "comment_body": "so these need to be separate services since one is always logged and the other isn't, but can we come up with better names to make it more obvious what each has? `audioMetadata` and `rawAudio`?\r\n\r\nalso make sure to leave a good comment explaining why they're two separate services.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2048077301",
    "pr_number": 35023,
    "pr_file": "system/camerad/sensors/os04c10.cc",
    "created_at": "2025-04-17T02:11:57+00:00",
    "commented_code": "}  // namespace\n \n+void OS04C10::OS04C10_IFE_ds_override() {",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "2048077301",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 35023,
        "pr_file": "system/camerad/sensors/os04c10.cc",
        "discussion_id": "2048077301",
        "commented_code": "@@ -20,6 +20,17 @@ const uint32_t os04c10_analog_gains_reg[] = {\n \n }  // namespace\n \n+void OS04C10::OS04C10_IFE_ds_override() {",
        "comment_created_at": "2025-04-17T02:11:57+00:00",
        "comment_author": "adeebshihadeh",
        "comment_body": "don't put the class name in the function again. also ds is downscale? maybe call this `ife_downscale_configure`?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1883012707",
    "pr_number": 34213,
    "pr_file": "system/camerad/cameras/ife.h",
    "created_at": "2024-12-12T23:11:13+00:00",
    "commented_code": "// TODO: remove this\n   dst += write_cont(dst, 0xa3c, {\n     0x00000003,\n-    ((s->frame_width - 1) << 16) | (s->frame_width - 1),\n+    ((s->frame_width / s->out_scale - 1) << 16) | (s->frame_width - 1),",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "1883012707",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 34213,
        "pr_file": "system/camerad/cameras/ife.h",
        "discussion_id": "1883012707",
        "commented_code": "@@ -184,25 +184,25 @@ int build_initial_config(uint8_t *dst, const SensorInfo *s, std::vector<uint32_t\n   // TODO: remove this\n   dst += write_cont(dst, 0xa3c, {\n     0x00000003,\n-    ((s->frame_width - 1) << 16) | (s->frame_width - 1),\n+    ((s->frame_width / s->out_scale - 1) << 16) | (s->frame_width - 1),",
        "comment_created_at": "2024-12-12T23:11:13+00:00",
        "comment_author": "adeebshihadeh",
        "comment_body": "instead of `width / scale` everywhere, we should just have an input size and output size defined",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1651710137",
    "pr_number": 32821,
    "pr_file": "cereal/log.capnp",
    "created_at": "2024-06-24T22:30:34+00:00",
    "commented_code": "vPidDEPRECATED @2 :Float32;\n }\n \n+# Come up with a better name\n+struct SmolModelDataV2 {\n+  frameId @0 :UInt32;\n+  frameIdExtra @1 :UInt32;\n+\n+  position @2 :SmolXYZTData;\n+  orientation @3 :SmolXYZTData;\n+  velocity @4 :SmolXYZTData;\n+  orientationRate @5 :SmolXYZTData;\n+\n+  laneLines @6 :List(SmolXYZTData);\n+  laneLineProbs @7 :List(Float32);\n+  roadEdges @8 :List(SmolXYZTData);",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "1651710137",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 32821,
        "pr_file": "cereal/log.capnp",
        "discussion_id": "1651710137",
        "commented_code": "@@ -868,6 +868,30 @@ struct ControlsState @0x97ff69c53601abf1 {\n   vPidDEPRECATED @2 :Float32;\n }\n \n+# Come up with a better name\n+struct SmolModelDataV2 {\n+  frameId @0 :UInt32;\n+  frameIdExtra @1 :UInt32;\n+\n+  position @2 :SmolXYZTData;\n+  orientation @3 :SmolXYZTData;\n+  velocity @4 :SmolXYZTData;\n+  orientationRate @5 :SmolXYZTData;\n+\n+  laneLines @6 :List(SmolXYZTData);\n+  laneLineProbs @7 :List(Float32);\n+  roadEdges @8 :List(SmolXYZTData);",
        "comment_created_at": "2024-06-24T22:30:34+00:00",
        "comment_author": "haraschax",
        "comment_body": "Do we need all of these things for metrics? I would propose something like this if it's possible:\r\n\r\nstruct DrivingModelData {\r\n  frameId @0 :UInt32;\r\n  frameIdExtra @1 :UInt32;\r\n  action @2: ModelDataV2.Action;\r\n  \r\n  laneLineMeta @3: DrivingModelData.LaneLineMeta;\r\n\r\n  struct LaneLineMeta {\r\n    leftY...\r\n    rightY...\r\n    leftProb...\r\n    rightProb...\r\n}\r\n\r\nAnd then also the cam_odom stuff and some other meta\r\nand rename modelV2 to drivingModelFull or debug or something like that",
        "pr_file_module": null
      }
    ]
  }
]