[
  {
    "discussion_id": "2116415447",
    "pr_number": 35325,
    "pr_file": "system/athena/athenad.py",
    "created_at": "2025-05-30T18:30:03+00:00",
    "commented_code": "return HARDWARE.get_networks()\n \n \n+@dispatcher.add_method\n+def getEsimProfiles():\n+  return [asdict(p) for p in HARDWARE.get_sim_lpa().list_profiles()]\n+\n+\n+@dispatcher.add_method\n+def downloadEsimProfile(qr: str, profile_name: str):\n+  HARDWARE.get_sim_lpa().download_profile(qr, profile_name)\n+\n+\n+@dispatcher.add_method\n+def switchEsimProfile(iccid: str):",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "2116415447",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 35325,
        "pr_file": "system/athena/athenad.py",
        "discussion_id": "2116415447",
        "commented_code": "@@ -544,6 +544,22 @@ def getNetworks():\n   return HARDWARE.get_networks()\n \n \n+@dispatcher.add_method\n+def getEsimProfiles():\n+  return [asdict(p) for p in HARDWARE.get_sim_lpa().list_profiles()]\n+\n+\n+@dispatcher.add_method\n+def downloadEsimProfile(qr: str, profile_name: str):\n+  HARDWARE.get_sim_lpa().download_profile(qr, profile_name)\n+\n+\n+@dispatcher.add_method\n+def switchEsimProfile(iccid: str):",
        "comment_created_at": "2025-05-30T18:30:03+00:00",
        "comment_author": "adeebshihadeh",
        "comment_body": "let's call this setEsimProfile?",
        "pr_file_module": null
      },
      {
        "comment_id": "2116425059",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 35325,
        "pr_file": "system/athena/athenad.py",
        "discussion_id": "2116415447",
        "commented_code": "@@ -544,6 +544,22 @@ def getNetworks():\n   return HARDWARE.get_networks()\n \n \n+@dispatcher.add_method\n+def getEsimProfiles():\n+  return [asdict(p) for p in HARDWARE.get_sim_lpa().list_profiles()]\n+\n+\n+@dispatcher.add_method\n+def downloadEsimProfile(qr: str, profile_name: str):\n+  HARDWARE.get_sim_lpa().download_profile(qr, profile_name)\n+\n+\n+@dispatcher.add_method\n+def switchEsimProfile(iccid: str):",
        "comment_created_at": "2025-05-30T18:34:16+00:00",
        "comment_author": "greatgitsby",
        "comment_body": "```suggestion\r\ndef setEsimProfile(iccid: str):\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2080409153",
    "pr_number": 35161,
    "pr_file": "system/ui/lib/wifi_manager.py",
    "created_at": "2025-05-08T20:20:44+00:00",
    "commented_code": "self._thread = threading.Thread(target=self._run, daemon=True)\n     self._loop: asyncio.EventLoop | None = None\n-    self._running = False\n+    self._running = threading.Event()",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "2080409153",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 35161,
        "pr_file": "system/ui/lib/wifi_manager.py",
        "discussion_id": "2080409153",
        "commented_code": "@@ -398,15 +398,15 @@ def __init__(self):\n \n     self._thread = threading.Thread(target=self._run, daemon=True)\n     self._loop: asyncio.EventLoop | None = None\n-    self._running = False\n+    self._running = threading.Event()",
        "comment_created_at": "2025-05-08T20:20:44+00:00",
        "comment_author": "incognitojam",
        "comment_body": "~~Let's rename it to `_stop_event`, too~~",
        "pr_file_module": null
      },
      {
        "comment_id": "2080414491",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 35161,
        "pr_file": "system/ui/lib/wifi_manager.py",
        "discussion_id": "2080409153",
        "commented_code": "@@ -398,15 +398,15 @@ def __init__(self):\n \n     self._thread = threading.Thread(target=self._run, daemon=True)\n     self._loop: asyncio.EventLoop | None = None\n-    self._running = False\n+    self._running = threading.Event()",
        "comment_created_at": "2025-05-08T20:25:04+00:00",
        "comment_author": "incognitojam",
        "comment_body": "We usually have the logic for these the other way around, I think it's easier to quickly understand what's going on if we keep it consistent\r\n\r\nWe can change it to `_stop_event` instead and flip the logic around",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2032252762",
    "pr_number": 34991,
    "pr_file": "selfdrive/locationd/paramsd.py",
    "created_at": "2025-04-08T01:51:04+00:00",
    "commented_code": "msg_dat = msg.to_bytes()\n       if sm.frame % 1200 == 0:  # once a minute\n-        params_reader.put_nonblocking(\"LiveParameters\", msg_dat)\n+        params_reader.put_nonblocking(\"LiveParametersV2\", msg_dat)",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "2032252762",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 34991,
        "pr_file": "selfdrive/locationd/paramsd.py",
        "discussion_id": "2032252762",
        "commented_code": "@@ -288,7 +290,7 @@ def main():\n \n       msg_dat = msg.to_bytes()\n       if sm.frame % 1200 == 0:  # once a minute\n-        params_reader.put_nonblocking(\"LiveParameters\", msg_dat)\n+        params_reader.put_nonblocking(\"LiveParametersV2\", msg_dat)",
        "comment_created_at": "2025-04-08T01:51:04+00:00",
        "comment_author": "haraschax",
        "comment_body": "Should not be called params_reader if it also writes",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1445383014",
    "pr_number": 30930,
    "pr_file": "tools/webcam/camerad.py",
    "created_at": "2024-01-08T21:50:58+00:00",
    "commented_code": "+#!/usr/bin/env python3\n+import threading\n+import os\n+\n+from cereal.visionipc import VisionIpcServer, VisionStreamType\n+from cereal import messaging\n+\n+from openpilot.tools.webcam.camera import Camera\n+from openpilot.common.realtime import Ratekeeper\n+\n+\n+YUV_BUFFER_COUNT = int(os.getenv(\"YUV_BUFFER_COUNT\", \"20\"))\n+CAMERA_TYPE_STATE = {\"roadCameraState\":VisionStreamType.VISION_STREAM_ROAD,\n+                    \"driverCameraState\":VisionStreamType.VISION_STREAM_DRIVER,\n+                    \"wideRoadCameraState\":VisionStreamType.VISION_STREAM_WIDE_ROAD}\n+\n+def rk_loop(function, hz, exit_event: threading.Event):\n+  rk = Ratekeeper(hz, None)\n+  while not exit_event.is_set():\n+    function()\n+    rk.keep_time()\n+\n+class Camerad:\n+  def __init__(self):\n+    self.pm = messaging.PubMaster(['roadCameraState', 'driverCameraState', 'wideRoadCameraState'])\n+    self.vipc_server = VisionIpcServer(\"camerad\")\n+\n+    self.dual_camera = bool(int(os.getenv(\"DUAL\",\"0\")))\n+    self.cameras, self.camera_threads = [], [] # ORDER: road_cam, driver_cam, wide_cam\n+\n+    for cam_type, stream_type in CAMERA_TYPE_STATE.items():\n+      if cam_type == \"roadCameraState\":\n+        cam = Camera(cam_type, stream_type, int(os.getenv(\"CAMERA_WIDE_ID\", \"0\")))\n+      elif cam_type == \"driverCameraState\":\n+        cam = Camera(cam_type, stream_type, int(os.getenv(\"CAMERA_WIDE_ID\", \"1\")))\n+      else:\n+        if not self.dual_camera:\n+          break\n+        cam = Camera(cam_type, stream_type, int(os.getenv(\"CAMERA_WIDE_ID\", \"2\")))\n+      assert cam.cap.isOpened(), f\"Can't find {cam_type}\"\n+      self.cameras.append(cam)\n+      self.vipc_server.create_buffers(stream_type, YUV_BUFFER_COUNT, False, cam.W, cam.H)\n+\n+    self.vipc_server.start_listener()\n+\n+  #from sim\n+  def _send_yuv(self, yuv, frame_id, pub_type, yuv_type):\n+    eof = int(frame_id * 0.05 * 1e9)\n+    self.vipc_server.send(yuv_type, yuv, frame_id, eof, eof)\n+    dat = messaging.new_message(pub_type, valid=True)\n+    msg = {\n+      \"frameId\": frame_id,\n+      \"transform\": [1.0, 0.0, 0.0,\n+                    0.0, 1.0, 0.0,\n+                    0.0, 0.0, 1.0]\n+    }\n+    setattr(dat, pub_type, msg)\n+    self.pm.send(pub_type, dat)\n+\n+  def daemon_alive(self, cam):",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "1445383014",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 30930,
        "pr_file": "tools/webcam/camerad.py",
        "discussion_id": "1445383014",
        "commented_code": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+import threading\n+import os\n+\n+from cereal.visionipc import VisionIpcServer, VisionStreamType\n+from cereal import messaging\n+\n+from openpilot.tools.webcam.camera import Camera\n+from openpilot.common.realtime import Ratekeeper\n+\n+\n+YUV_BUFFER_COUNT = int(os.getenv(\"YUV_BUFFER_COUNT\", \"20\"))\n+CAMERA_TYPE_STATE = {\"roadCameraState\":VisionStreamType.VISION_STREAM_ROAD,\n+                    \"driverCameraState\":VisionStreamType.VISION_STREAM_DRIVER,\n+                    \"wideRoadCameraState\":VisionStreamType.VISION_STREAM_WIDE_ROAD}\n+\n+def rk_loop(function, hz, exit_event: threading.Event):\n+  rk = Ratekeeper(hz, None)\n+  while not exit_event.is_set():\n+    function()\n+    rk.keep_time()\n+\n+class Camerad:\n+  def __init__(self):\n+    self.pm = messaging.PubMaster(['roadCameraState', 'driverCameraState', 'wideRoadCameraState'])\n+    self.vipc_server = VisionIpcServer(\"camerad\")\n+\n+    self.dual_camera = bool(int(os.getenv(\"DUAL\",\"0\")))\n+    self.cameras, self.camera_threads = [], [] # ORDER: road_cam, driver_cam, wide_cam\n+\n+    for cam_type, stream_type in CAMERA_TYPE_STATE.items():\n+      if cam_type == \"roadCameraState\":\n+        cam = Camera(cam_type, stream_type, int(os.getenv(\"CAMERA_WIDE_ID\", \"0\")))\n+      elif cam_type == \"driverCameraState\":\n+        cam = Camera(cam_type, stream_type, int(os.getenv(\"CAMERA_WIDE_ID\", \"1\")))\n+      else:\n+        if not self.dual_camera:\n+          break\n+        cam = Camera(cam_type, stream_type, int(os.getenv(\"CAMERA_WIDE_ID\", \"2\")))\n+      assert cam.cap.isOpened(), f\"Can't find {cam_type}\"\n+      self.cameras.append(cam)\n+      self.vipc_server.create_buffers(stream_type, YUV_BUFFER_COUNT, False, cam.W, cam.H)\n+\n+    self.vipc_server.start_listener()\n+\n+  #from sim\n+  def _send_yuv(self, yuv, frame_id, pub_type, yuv_type):\n+    eof = int(frame_id * 0.05 * 1e9)\n+    self.vipc_server.send(yuv_type, yuv, frame_id, eof, eof)\n+    dat = messaging.new_message(pub_type, valid=True)\n+    msg = {\n+      \"frameId\": frame_id,\n+      \"transform\": [1.0, 0.0, 0.0,\n+                    0.0, 1.0, 0.0,\n+                    0.0, 0.0, 1.0]\n+    }\n+    setattr(dat, pub_type, msg)\n+    self.pm.send(pub_type, dat)\n+\n+  def daemon_alive(self, cam):",
        "comment_created_at": "2024-01-08T21:50:58+00:00",
        "comment_author": "adeebshihadeh",
        "comment_body": "give this a better name like \"camera_thread\" or \"camera_runner\"",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "423332696",
    "pr_number": 1458,
    "pr_file": "selfdrive/car/honda/hondacan.py",
    "created_at": "2020-05-11T21:33:02+00:00",
    "commented_code": "return 1 if car_fingerprint in HONDA_BOSCH and has_relay else 0\n \n \n-def get_lkas_cmd_bus(car_fingerprint, has_relay):\n+def get_lkas_cmd_bus(car_fingerprint, has_relay, openpilot_longitudinal_control=False):",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "423332696",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 1458,
        "pr_file": "selfdrive/car/honda/hondacan.py",
        "discussion_id": "423332696",
        "commented_code": "@@ -6,7 +6,9 @@ def get_pt_bus(car_fingerprint, has_relay):\n   return 1 if car_fingerprint in HONDA_BOSCH and has_relay else 0\n \n \n-def get_lkas_cmd_bus(car_fingerprint, has_relay):\n+def get_lkas_cmd_bus(car_fingerprint, has_relay, openpilot_longitudinal_control=False):",
        "comment_created_at": "2020-05-11T21:33:02+00:00",
        "comment_author": "pd0wm",
        "comment_body": "Maybe rename argument to `radar_present` since that is was actually matters right? Since it forwards the commands?",
        "pr_file_module": null
      },
      {
        "comment_id": "423335492",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 1458,
        "pr_file": "selfdrive/car/honda/hondacan.py",
        "discussion_id": "423332696",
        "commented_code": "@@ -6,7 +6,9 @@ def get_pt_bus(car_fingerprint, has_relay):\n   return 1 if car_fingerprint in HONDA_BOSCH and has_relay else 0\n \n \n-def get_lkas_cmd_bus(car_fingerprint, has_relay):\n+def get_lkas_cmd_bus(car_fingerprint, has_relay, openpilot_longitudinal_control=False):",
        "comment_created_at": "2020-05-11T21:39:14+00:00",
        "comment_author": "pd0wm",
        "comment_body": "Also add some comments about what all the buses are and why they are different for all the different checks in here. I always forget, so this might be a good place to put an explanation.",
        "pr_file_module": null
      },
      {
        "comment_id": "459043223",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 1458,
        "pr_file": "selfdrive/car/honda/hondacan.py",
        "discussion_id": "423332696",
        "commented_code": "@@ -6,7 +6,9 @@ def get_pt_bus(car_fingerprint, has_relay):\n   return 1 if car_fingerprint in HONDA_BOSCH and has_relay else 0\n \n \n-def get_lkas_cmd_bus(car_fingerprint, has_relay):\n+def get_lkas_cmd_bus(car_fingerprint, has_relay, openpilot_longitudinal_control=False):",
        "comment_created_at": "2020-07-22T19:50:13+00:00",
        "comment_author": "gregjhogan",
        "comment_body": "How about `radar_disabled`?\r\nShould I change all functions I added the parameter `openpilot_longitudinal_control` to be `radar_disabled`?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "496339026",
    "pr_number": 1458,
    "pr_file": "selfdrive/car/honda/hondacan.py",
    "created_at": "2020-09-29T02:18:18+00:00",
    "commented_code": "\"FCM_PROBLEM\": stock_hud[\"FCM_PROBLEM\"],\n       \"ICONS\": stock_hud[\"ICONS\"],\n     }\n+  if radar_disabled:",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "496339026",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 1458,
        "pr_file": "selfdrive/car/honda/hondacan.py",
        "discussion_id": "496339026",
        "commented_code": "@@ -76,6 +136,7 @@ def create_ui_commands(packer, pcm_speed, hud, car_fingerprint, is_metric, idx,\n       \"FCM_PROBLEM\": stock_hud[\"FCM_PROBLEM\"],\n       \"ICONS\": stock_hud[\"ICONS\"],\n     }\n+  if radar_disabled:",
        "comment_created_at": "2020-09-29T02:18:18+00:00",
        "comment_author": "adeebshihadeh",
        "comment_body": "maybe pass in CarParams instead? this name is confusing, and CarParams has the fingerprint",
        "pr_file_module": null
      },
      {
        "comment_id": "496406122",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 1458,
        "pr_file": "selfdrive/car/honda/hondacan.py",
        "discussion_id": "496339026",
        "commented_code": "@@ -76,6 +136,7 @@ def create_ui_commands(packer, pcm_speed, hud, car_fingerprint, is_metric, idx,\n       \"FCM_PROBLEM\": stock_hud[\"FCM_PROBLEM\"],\n       \"ICONS\": stock_hud[\"ICONS\"],\n     }\n+  if radar_disabled:",
        "comment_created_at": "2020-09-29T05:05:36+00:00",
        "comment_author": "gregjhogan",
        "comment_body": "What is confusing about `radar_disabled`? It literally means the radar has been disabled and is not outputting any messages.",
        "pr_file_module": null
      },
      {
        "comment_id": "496419181",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 1458,
        "pr_file": "selfdrive/car/honda/hondacan.py",
        "discussion_id": "496339026",
        "commented_code": "@@ -76,6 +136,7 @@ def create_ui_commands(packer, pcm_speed, hud, car_fingerprint, is_metric, idx,\n       \"FCM_PROBLEM\": stock_hud[\"FCM_PROBLEM\"],\n       \"ICONS\": stock_hud[\"ICONS\"],\n     }\n+  if radar_disabled:",
        "comment_created_at": "2020-09-29T05:23:39+00:00",
        "comment_author": "gregjhogan",
        "comment_body": "oh I see now, this isn't whether the radar is disabled, it is whether openpilot is handling longitudinal control, I will fix the name",
        "pr_file_module": null
      },
      {
        "comment_id": "496429557",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 1458,
        "pr_file": "selfdrive/car/honda/hondacan.py",
        "discussion_id": "496339026",
        "commented_code": "@@ -76,6 +136,7 @@ def create_ui_commands(packer, pcm_speed, hud, car_fingerprint, is_metric, idx,\n       \"FCM_PROBLEM\": stock_hud[\"FCM_PROBLEM\"],\n       \"ICONS\": stock_hud[\"ICONS\"],\n     }\n+  if radar_disabled:",
        "comment_created_at": "2020-09-29T05:39:01+00:00",
        "comment_author": "gregjhogan",
        "comment_body": "fixed",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1609116194",
    "pr_number": 31022,
    "pr_file": "selfdrive/car/honda/hondacan.py",
    "created_at": "2024-05-22T00:40:35+00:00",
    "commented_code": "commands.append(packer.make_can_msg(\"ACC_HUD\", CAN.pt, acc_hud_values))\n \n   lkas_hud_values = {\n-    'SET_ME_X41': 0x41,\n+    'ENABLED': 1,",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "1609116194",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 31022,
        "pr_file": "selfdrive/car/honda/hondacan.py",
        "discussion_id": "1609116194",
        "commented_code": "@@ -167,7 +167,8 @@ def create_ui_commands(packer, CAN, CP, enabled, pcm_speed, hud, is_metric, acc_\n     commands.append(packer.make_can_msg(\"ACC_HUD\", CAN.pt, acc_hud_values))\n \n   lkas_hud_values = {\n-    'SET_ME_X41': 0x41,\n+    'ENABLED': 1,",
        "comment_created_at": "2024-05-22T00:40:35+00:00",
        "comment_author": "sshane",
        "comment_body": "Can you rename enabled to something more clear? We have LDW_ON/OFF in the same message. Is `ENABLED` meant to be LKAS active or just enabled?",
        "pr_file_module": null
      },
      {
        "comment_id": "1610968439",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 31022,
        "pr_file": "selfdrive/car/honda/hondacan.py",
        "discussion_id": "1609116194",
        "commented_code": "@@ -167,7 +167,8 @@ def create_ui_commands(packer, CAN, CP, enabled, pcm_speed, hud, is_metric, acc_\n     commands.append(packer.make_can_msg(\"ACC_HUD\", CAN.pt, acc_hud_values))\n \n   lkas_hud_values = {\n-    'SET_ME_X41': 0x41,\n+    'ENABLED': 1,",
        "comment_created_at": "2024-05-23T04:47:08+00:00",
        "comment_author": "csouers",
        "comment_body": "Just enabled. `available` or `ready` might be a good alternative.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1096350343",
    "pr_number": 25677,
    "pr_file": "selfdrive/car/toyota/toyotacan.py",
    "created_at": "2023-02-03T22:49:02+00:00",
    "commented_code": "\"RELEASE_STANDSTILL\": not standstill_req,\n     \"CANCEL_REQ\": pcm_cancel,\n     \"ALLOW_LONG_PRESS\": 1,\n+    \"ACC_CUT_IN\": fcw_alert,",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "1096350343",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 25677,
        "pr_file": "selfdrive/car/toyota/toyotacan.py",
        "discussion_id": "1096350343",
        "commented_code": "@@ -38,6 +38,7 @@ def create_accel_command(packer, accel, pcm_cancel, standstill_req, lead, acc_ty\n     \"RELEASE_STANDSTILL\": not standstill_req,\n     \"CANCEL_REQ\": pcm_cancel,\n     \"ALLOW_LONG_PRESS\": 1,\n+    \"ACC_CUT_IN\": fcw_alert,",
        "comment_created_at": "2023-02-03T22:49:02+00:00",
        "comment_author": "adeebshihadeh",
        "comment_body": "should we rename the signal? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1096473002",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 25677,
        "pr_file": "selfdrive/car/toyota/toyotacan.py",
        "discussion_id": "1096350343",
        "commented_code": "@@ -38,6 +38,7 @@ def create_accel_command(packer, accel, pcm_cancel, standstill_req, lead, acc_ty\n     \"RELEASE_STANDSTILL\": not standstill_req,\n     \"CANCEL_REQ\": pcm_cancel,\n     \"ALLOW_LONG_PRESS\": 1,\n+    \"ACC_CUT_IN\": fcw_alert,",
        "comment_created_at": "2023-02-04T03:22:23+00:00",
        "comment_author": "cydia2020",
        "comment_body": "It's used as cut-in warning in the stock system, it's similar to fcw on both the dashboard and HUD, only difference is it's yellow instead of red.",
        "pr_file_module": null
      },
      {
        "comment_id": "1303819855",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 25677,
        "pr_file": "selfdrive/car/toyota/toyotacan.py",
        "discussion_id": "1096350343",
        "commented_code": "@@ -38,6 +38,7 @@ def create_accel_command(packer, accel, pcm_cancel, standstill_req, lead, acc_ty\n     \"RELEASE_STANDSTILL\": not standstill_req,\n     \"CANCEL_REQ\": pcm_cancel,\n     \"ALLOW_LONG_PRESS\": 1,\n+    \"ACC_CUT_IN\": fcw_alert,",
        "comment_created_at": "2023-08-24T05:29:47+00:00",
        "comment_author": "sshane",
        "comment_body": "`CUT_IN_WARNING`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1306272397",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 25677,
        "pr_file": "selfdrive/car/toyota/toyotacan.py",
        "discussion_id": "1096350343",
        "commented_code": "@@ -38,6 +38,7 @@ def create_accel_command(packer, accel, pcm_cancel, standstill_req, lead, acc_ty\n     \"RELEASE_STANDSTILL\": not standstill_req,\n     \"CANCEL_REQ\": pcm_cancel,\n     \"ALLOW_LONG_PRESS\": 1,\n+    \"ACC_CUT_IN\": fcw_alert,",
        "comment_created_at": "2023-08-26T00:56:00+00:00",
        "comment_author": "cydia2020",
        "comment_body": "![image](https://github.com/commaai/openpilot/assets/12470297/1b84c539-1739-42fe-ba11-8cf3ad4a96fc)\r\n\r\nThis is the signals name in TS",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1527445014",
    "pr_number": 31895,
    "pr_file": "selfdrive/car/volkswagen/mqbcan.py",
    "created_at": "2024-03-17T08:36:51+00:00",
    "commented_code": "]}\n \n   values.update({\n-    \"LDW_Status_LED_gelb\": 1 if enabled and steering_pressed else 0,\n-    \"LDW_Status_LED_gruen\": 1 if enabled and not steering_pressed else 0,\n+    \"LDW_Status_LED_gelb\": 1 if latActive and steering_pressed else 0,\n+    \"LDW_Status_LED_gruen\": 1 if latActive and not steering_pressed else 0,",
    "repo_full_name": "commaai/openpilot",
    "discussion_comments": [
      {
        "comment_id": "1527445014",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 31895,
        "pr_file": "selfdrive/car/volkswagen/mqbcan.py",
        "discussion_id": "1527445014",
        "commented_code": "@@ -40,8 +40,8 @@ def create_lka_hud_control(packer, bus, ldw_stock_values, enabled, steering_pres\n     ]}\n \n   values.update({\n-    \"LDW_Status_LED_gelb\": 1 if enabled and steering_pressed else 0,\n-    \"LDW_Status_LED_gruen\": 1 if enabled and not steering_pressed else 0,\n+    \"LDW_Status_LED_gelb\": 1 if latActive and steering_pressed else 0,\n+    \"LDW_Status_LED_gruen\": 1 if latActive and not steering_pressed else 0,",
        "comment_created_at": "2024-03-17T08:36:51+00:00",
        "comment_author": "sshane",
        "comment_body": "enabled should be a superset of active, you mean openpilot can *not* be controlling steer while showing the icon (steer fault for example)?",
        "pr_file_module": null
      },
      {
        "comment_id": "1527543085",
        "repo_full_name": "commaai/openpilot",
        "pr_number": 31895,
        "pr_file": "selfdrive/car/volkswagen/mqbcan.py",
        "discussion_id": "1527445014",
        "commented_code": "@@ -40,8 +40,8 @@ def create_lka_hud_control(packer, bus, ldw_stock_values, enabled, steering_pres\n     ]}\n \n   values.update({\n-    \"LDW_Status_LED_gelb\": 1 if enabled and steering_pressed else 0,\n-    \"LDW_Status_LED_gruen\": 1 if enabled and not steering_pressed else 0,\n+    \"LDW_Status_LED_gelb\": 1 if latActive and steering_pressed else 0,\n+    \"LDW_Status_LED_gruen\": 1 if latActive and not steering_pressed else 0,",
        "comment_created_at": "2024-03-17T15:45:22+00:00",
        "comment_author": "dkiiv",
        "comment_body": "yes, i suppose thats a better description.\r\nhaving it changed to active will also properly show when openpilot is at a standstill\r\n\r\ni just tested it this morning, while at standstill the LKAS light turns off as openpilot is not active-laterally (expected behavior)",
        "pr_file_module": null
      }
    ]
  }
]