[
  {
    "discussion_id": "1544909721",
    "pr_number": 3822,
    "pr_file": "pyproject.toml",
    "created_at": "2024-03-29T22:07:19+00:00",
    "commented_code": "-[tool.black]\n-line-length = 79\n-exclude = '''\n-(\n-  /(  # generated files\n-    .tox|\n-    venv|\n-    venv.*|\n-    .venv.*|\n-    target.*|\n-    .*/build/lib/.*|\n-    exporter/opentelemetry-exporter-zipkin-proto-http/src/opentelemetry/exporter/zipkin/proto/http/v2/gen|\n-    opentelemetry-proto/src/opentelemetry/proto/.*/.*|\n-    scripts\n-  )/\n-)\n-'''\n [tool.pytest.ini_options]\n addopts = \"-rs -v\"\n log_cli = true\n+\n+[tool.ruff]\n+# Minimum supported python version\n+target-version = \"py38\"\n+\n+line-length = 79\n+extend-exclude = [\n+  # Ignore generated files",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "1544909721",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 3822,
        "pr_file": "pyproject.toml",
        "discussion_id": "1544909721",
        "commented_code": "@@ -1,20 +1,30 @@\n-[tool.black]\n-line-length = 79\n-exclude = '''\n-(\n-  /(  # generated files\n-    .tox|\n-    venv|\n-    venv.*|\n-    .venv.*|\n-    target.*|\n-    .*/build/lib/.*|\n-    exporter/opentelemetry-exporter-zipkin-proto-http/src/opentelemetry/exporter/zipkin/proto/http/v2/gen|\n-    opentelemetry-proto/src/opentelemetry/proto/.*/.*|\n-    scripts\n-  )/\n-)\n-'''\n [tool.pytest.ini_options]\n addopts = \"-rs -v\"\n log_cli = true\n+\n+[tool.ruff]\n+# Minimum supported python version\n+target-version = \"py38\"\n+\n+line-length = 79\n+extend-exclude = [\n+  # Ignore generated files",
        "comment_created_at": "2024-03-29T22:07:19+00:00",
        "comment_author": "lzchen",
        "comment_body": "Should we also ignore the previous files that we ignored like `.tox` and `.venv`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1546326552",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 3822,
        "pr_file": "pyproject.toml",
        "discussion_id": "1544909721",
        "commented_code": "@@ -1,20 +1,30 @@\n-[tool.black]\n-line-length = 79\n-exclude = '''\n-(\n-  /(  # generated files\n-    .tox|\n-    venv|\n-    venv.*|\n-    .venv.*|\n-    target.*|\n-    .*/build/lib/.*|\n-    exporter/opentelemetry-exporter-zipkin-proto-http/src/opentelemetry/exporter/zipkin/proto/http/v2/gen|\n-    opentelemetry-proto/src/opentelemetry/proto/.*/.*|\n-    scripts\n-  )/\n-)\n-'''\n [tool.pytest.ini_options]\n addopts = \"-rs -v\"\n log_cli = true\n+\n+[tool.ruff]\n+# Minimum supported python version\n+target-version = \"py38\"\n+\n+line-length = 79\n+extend-exclude = [\n+  # Ignore generated files",
        "comment_created_at": "2024-04-01T13:20:19+00:00",
        "comment_author": "xrmx",
        "comment_body": "It does by default https://docs.astral.sh/ruff/settings/#exclude",
        "pr_file_module": null
      },
      {
        "comment_id": "1546396445",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 3822,
        "pr_file": "pyproject.toml",
        "discussion_id": "1544909721",
        "commented_code": "@@ -1,20 +1,30 @@\n-[tool.black]\n-line-length = 79\n-exclude = '''\n-(\n-  /(  # generated files\n-    .tox|\n-    venv|\n-    venv.*|\n-    .venv.*|\n-    target.*|\n-    .*/build/lib/.*|\n-    exporter/opentelemetry-exporter-zipkin-proto-http/src/opentelemetry/exporter/zipkin/proto/http/v2/gen|\n-    opentelemetry-proto/src/opentelemetry/proto/.*/.*|\n-    scripts\n-  )/\n-)\n-'''\n [tool.pytest.ini_options]\n addopts = \"-rs -v\"\n log_cli = true\n+\n+[tool.ruff]\n+# Minimum supported python version\n+target-version = \"py38\"\n+\n+line-length = 79\n+extend-exclude = [\n+  # Ignore generated files",
        "comment_created_at": "2024-04-01T14:36:31+00:00",
        "comment_author": "aabmass",
        "comment_body": "Ruff's default includes these https://docs.astral.sh/ruff/configuration/#configuring-ruff. It also respects `.gitignore` files by default.\r\n\r\nIf anyone runs into any missing dirs for your local environment, we can ofc update",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1985245840",
    "pr_number": 4425,
    "pr_file": "pyproject.toml",
    "created_at": "2025-03-07T15:16:05+00:00",
    "commented_code": "log_cli = true\n \n [tool.pyright]\n-typeCheckingMode = \"off\"\n-reportMissingTypeStubs = \"error\"\n+typeCheckingMode = \"strict\"\n include = [\n     \"opentelemetry-api/src\",\n     \"opentelemetry-sdk/src\",\n     \"opentelemetry-semantic-conventions/src\",\n+    \"opentelemetry-proto/src\",\n+    \"scripts\"\n+]\n+ignore = [\n+  \"docs/**\",\n+  \"exporter/**\",\n+  \"propagator/**\",\n+  \"shim/**\",\n+]\n+reportUnnecessaryTypeIgnoreComment = true",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "1985245840",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4425,
        "pr_file": "pyproject.toml",
        "discussion_id": "1985245840",
        "commented_code": "@@ -3,12 +3,26 @@ addopts = \"-rs -v\"\n log_cli = true\n \n [tool.pyright]\n-typeCheckingMode = \"off\"\n-reportMissingTypeStubs = \"error\"\n+typeCheckingMode = \"strict\"\n include = [\n     \"opentelemetry-api/src\",\n     \"opentelemetry-sdk/src\",\n     \"opentelemetry-semantic-conventions/src\",\n+    \"opentelemetry-proto/src\",\n+    \"scripts\"\n+]\n+ignore = [\n+  \"docs/**\",\n+  \"exporter/**\",\n+  \"propagator/**\",\n+  \"shim/**\",\n+]\n+reportUnnecessaryTypeIgnoreComment = true",
        "comment_created_at": "2025-03-07T15:16:05+00:00",
        "comment_author": "aabmass",
        "comment_body": "One thing pattern I've noticed in contrib. If you do `type: ignore [foo]`, pyright seems to ignore everything. It only seems to narrow to the specific error if you use `pyright: ignore [foo]`.\r\n\r\nI'm guessing there are quite a few places this is the case in the code today",
        "pr_file_module": null
      },
      {
        "comment_id": "1985923108",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4425,
        "pr_file": "pyproject.toml",
        "discussion_id": "1985245840",
        "commented_code": "@@ -3,12 +3,26 @@ addopts = \"-rs -v\"\n log_cli = true\n \n [tool.pyright]\n-typeCheckingMode = \"off\"\n-reportMissingTypeStubs = \"error\"\n+typeCheckingMode = \"strict\"\n include = [\n     \"opentelemetry-api/src\",\n     \"opentelemetry-sdk/src\",\n     \"opentelemetry-semantic-conventions/src\",\n+    \"opentelemetry-proto/src\",\n+    \"scripts\"\n+]\n+ignore = [\n+  \"docs/**\",\n+  \"exporter/**\",\n+  \"propagator/**\",\n+  \"shim/**\",\n+]\n+reportUnnecessaryTypeIgnoreComment = true",
        "comment_created_at": "2025-03-08T01:41:34+00:00",
        "comment_author": "emdneto",
        "comment_body": "Right. And for the whole file we can use something like this which also works: `# pyright: strict, reportUnusedVariable=none`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1745210327",
    "pr_number": 4177,
    "pr_file": "opentelemetry-api/pyproject.toml",
    "created_at": "2024-09-05T10:26:51+00:00",
    "commented_code": "]\n dependencies = [\n     \"Deprecated >= 1.2.6\",\n-    # FIXME This should be able to be removed after 3.12 is released if there is a reliable API\n-    # in importlib.metadata.\n-    \"importlib-metadata >= 6.0, <= 8.4.0\",\n+    \"importlib-metadata >= 6.0, <= 8.4.0; python_version >= '3.8' and python_version <= '3.9'\",",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "1745210327",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4177,
        "pr_file": "opentelemetry-api/pyproject.toml",
        "discussion_id": "1745210327",
        "commented_code": "@@ -27,9 +27,7 @@ classifiers = [\n ]\n dependencies = [\n     \"Deprecated >= 1.2.6\",\n-    # FIXME This should be able to be removed after 3.12 is released if there is a reliable API\n-    # in importlib.metadata.\n-    \"importlib-metadata >= 6.0, <= 8.4.0\",\n+    \"importlib-metadata >= 6.0, <= 8.4.0; python_version >= '3.8' and python_version <= '3.9'\",",
        "comment_created_at": "2024-09-05T10:26:51+00:00",
        "comment_author": "xrmx",
        "comment_body": "```suggestion\r\n    \"importlib-metadata >= 6.0, <= 8.4.0; python_version < '3.10'\",\r\n```\r\n\r\nThis will match the code",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1695432891",
    "pr_number": 4089,
    "pr_file": "opentelemetry-api/pyproject.toml",
    "created_at": "2024-07-29T15:25:55+00:00",
    "commented_code": "\"Deprecated >= 1.2.6\",\n     # FIXME This should be able to be removed after 3.12 is released if there is a reliable API\n     # in importlib.metadata.\n-    \"importlib-metadata >= 6.0, <= 8.0.0\",\n+    \"importlib-metadata >= 6.0, < 9.0.0\",",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "1695432891",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4089,
        "pr_file": "opentelemetry-api/pyproject.toml",
        "discussion_id": "1695432891",
        "commented_code": "@@ -29,7 +29,7 @@ dependencies = [\n     \"Deprecated >= 1.2.6\",\n     # FIXME This should be able to be removed after 3.12 is released if there is a reliable API\n     # in importlib.metadata.\n-    \"importlib-metadata >= 6.0, <= 8.0.0\",\n+    \"importlib-metadata >= 6.0, < 9.0.0\",",
        "comment_created_at": "2024-07-29T15:25:55+00:00",
        "comment_author": "xrmx",
        "comment_body": "We tend to be conservative on importlib-metadata because they don't follow semantic versioning\r\n\r\n```suggestion\r\n    \"importlib-metadata >= 6.0, <= 8.2.0\",\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1695440801",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4089,
        "pr_file": "opentelemetry-api/pyproject.toml",
        "discussion_id": "1695432891",
        "commented_code": "@@ -29,7 +29,7 @@ dependencies = [\n     \"Deprecated >= 1.2.6\",\n     # FIXME This should be able to be removed after 3.12 is released if there is a reliable API\n     # in importlib.metadata.\n-    \"importlib-metadata >= 6.0, <= 8.0.0\",\n+    \"importlib-metadata >= 6.0, < 9.0.0\",",
        "comment_created_at": "2024-07-29T15:31:05+00:00",
        "comment_author": "antonpirker",
        "comment_body": "Dang. So there is no way around bumping this every now and then?",
        "pr_file_module": null
      }
    ]
  }
]