[
  {
    "discussion_id": "379172263",
    "pr_number": 378,
    "pr_file": "ext/opentelemetry-ext-prometheus/CHANGELOG.md",
    "created_at": "2020-02-13T23:15:50+00:00",
    "commented_code": "+# Changelog\n+\n+## Unreleased\n+",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "379172263",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 378,
        "pr_file": "ext/opentelemetry-ext-prometheus/CHANGELOG.md",
        "discussion_id": "379172263",
        "commented_code": "@@ -0,0 +1,4 @@\n+# Changelog\n+\n+## Unreleased\n+",
        "comment_created_at": "2020-02-13T23:15:50+00:00",
        "comment_author": "lzchen",
        "comment_body": "Are we leaving this blank?",
        "pr_file_module": null
      },
      {
        "comment_id": "379202613",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 378,
        "pr_file": "ext/opentelemetry-ext-prometheus/CHANGELOG.md",
        "discussion_id": "379172263",
        "commented_code": "@@ -0,0 +1,4 @@\n+# Changelog\n+\n+## Unreleased\n+",
        "comment_created_at": "2020-02-14T01:00:38+00:00",
        "comment_author": "hectorhdzg",
        "comment_body": "Is not blank it says unreleased, once is released changelogs will make sense",
        "pr_file_module": null
      },
      {
        "comment_id": "381769635",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 378,
        "pr_file": "ext/opentelemetry-ext-prometheus/CHANGELOG.md",
        "discussion_id": "379172263",
        "commented_code": "@@ -0,0 +1,4 @@\n+# Changelog\n+\n+## Unreleased\n+",
        "comment_created_at": "2020-02-20T05:29:11+00:00",
        "comment_author": "toumorokoshi",
        "comment_body": "@c24t are we doing changelogs on this fashion? I wonder if there's an easier way to manage these than attempting to update changelogs in all repos as we go along. Then again, this may play better with pypi.",
        "pr_file_module": null
      },
      {
        "comment_id": "382857725",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 378,
        "pr_file": "ext/opentelemetry-ext-prometheus/CHANGELOG.md",
        "discussion_id": "379172263",
        "commented_code": "@@ -0,0 +1,4 @@\n+# Changelog\n+\n+## Unreleased\n+",
        "comment_created_at": "2020-02-21T23:51:25+00:00",
        "comment_author": "c24t",
        "comment_body": "This is how we started the other changelogs. The idea is that each PR that makes a relevant change should add a line under \"unreleased\", and those lines get moved under a release-specific header when we cut the release.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1926941873",
    "pr_number": 4391,
    "pr_file": "CHANGELOG.md",
    "created_at": "2025-01-23T13:00:39+00:00",
    "commented_code": "([#4371](https://github.com/open-telemetry/opentelemetry-python/pull/4371))\n - Fix span context manager typing by using ParamSpec from typing_extensions\n   ([#4389](https://github.com/open-telemetry/opentelemetry-python/pull/4389))\n+- semantic-conventions: Remove `opentelemetry.semconv.attributes.network_attributes.NETWORK_INTERFACE_NAME`",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "1926941873",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4391,
        "pr_file": "CHANGELOG.md",
        "discussion_id": "1926941873",
        "commented_code": "@@ -17,6 +17,9 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n   ([#4371](https://github.com/open-telemetry/opentelemetry-python/pull/4371))\n - Fix span context manager typing by using ParamSpec from typing_extensions\n   ([#4389](https://github.com/open-telemetry/opentelemetry-python/pull/4389))\n+- semantic-conventions: Remove `opentelemetry.semconv.attributes.network_attributes.NETWORK_INTERFACE_NAME`",
        "comment_created_at": "2025-01-23T13:00:39+00:00",
        "comment_author": "emdneto",
        "comment_body": "Since we don't have a breaking changes section in changelog, does it make sense to add something like `[BREAKING]`  here?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1639014239",
    "pr_number": 3966,
    "pr_file": "CHANGELOG.md",
    "created_at": "2024-06-13T22:32:46+00:00",
    "commented_code": "([#3949](https://github.com/open-telemetry/opentelemetry-python/pull/3949))\n - Add Python 3.12 to tox\n   ([#3616](https://github.com/open-telemetry/opentelemetry-python/pull/3616))\n+- Update Semantic Conventions code generation scripts:\n+  - fix namespace exclusion that resulted in dropping  `os` and `net` namespaces.\n+  - add `Final` decorator to constants",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "1639014239",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 3966,
        "pr_file": "CHANGELOG.md",
        "discussion_id": "1639014239",
        "commented_code": "@@ -14,6 +14,12 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0\n   ([#3949](https://github.com/open-telemetry/opentelemetry-python/pull/3949))\n - Add Python 3.12 to tox\n   ([#3616](https://github.com/open-telemetry/opentelemetry-python/pull/3616))\n+- Update Semantic Conventions code generation scripts:\n+  - fix namespace exclusion that resulted in dropping  `os` and `net` namespaces.\n+  - add `Final` decorator to constants",
        "comment_created_at": "2024-06-13T22:32:46+00:00",
        "comment_author": "lzchen",
        "comment_body": "Nit: Include description of why we are adding `Final`",
        "pr_file_module": null
      }
    ]
  }
]