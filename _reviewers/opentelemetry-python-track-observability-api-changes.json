[
  {
    "discussion_id": "346547697",
    "pr_number": 206,
    "pr_file": "ext/opentelemetry-ext-flask/README.rst",
    "created_at": "2019-11-14T21:11:42+00:00",
    "commented_code": "+OpenTelemetry Flask tracing\n+===========================\n+\n+This library builds on the OpenTelemetry WSGI middleware to track web requests\n+in Flask applications. In addition to opentelemetry-ext-wsgi, it supports\n+flask-specific features such as:\n+\n+* The Flask endpoint name is used as the Span name.\n+* The ``http.route`` Span attribute is set so that one can see which URL rule\n+  matched a request.\n+\n+Usage\n+-----\n+\n+.. code-block:: python\n+\n+    from flask import Flask\n+    from opentelemetry.ext.flask_util import instrument_app",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "346547697",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 206,
        "pr_file": "ext/opentelemetry-ext-flask/README.rst",
        "discussion_id": "346547697",
        "commented_code": "@@ -0,0 +1,35 @@\n+OpenTelemetry Flask tracing\n+===========================\n+\n+This library builds on the OpenTelemetry WSGI middleware to track web requests\n+in Flask applications. In addition to opentelemetry-ext-wsgi, it supports\n+flask-specific features such as:\n+\n+* The Flask endpoint name is used as the Span name.\n+* The ``http.route`` Span attribute is set so that one can see which URL rule\n+  matched a request.\n+\n+Usage\n+-----\n+\n+.. code-block:: python\n+\n+    from flask import Flask\n+    from opentelemetry.ext.flask_util import instrument_app",
        "comment_created_at": "2019-11-14T21:11:42+00:00",
        "comment_author": "codeboten",
        "comment_body": "```suggestion\r\n    from opentelemetry.ext.flask import instrument_app\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "387162632",
    "pr_number": 459,
    "pr_file": "ext/opentelemetry-ext-jaeger/README.rst",
    "created_at": "2020-03-03T17:02:04+00:00",
    "commented_code": "span_processor = BatchExportSpanProcessor(jaeger_exporter)\n \n     # add to the tracer\n-    tracer.add_span_processor(span_processor)\n+    trace.tracer_source().add_span_processor(span_processor)",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "387162632",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 459,
        "pr_file": "ext/opentelemetry-ext-jaeger/README.rst",
        "discussion_id": "387162632",
        "commented_code": "@@ -56,7 +56,7 @@ gRPC is still not supported by this implementation.\n     span_processor = BatchExportSpanProcessor(jaeger_exporter)\n \n     # add to the tracer\n-    tracer.add_span_processor(span_processor)\n+    trace.tracer_source().add_span_processor(span_processor)",
        "comment_created_at": "2020-03-03T17:02:04+00:00",
        "comment_author": "codeboten",
        "comment_body": "There was a change between 0.4 and the current master to rename `TracerSource` to `TraceProvider`. For this example to work with the master version, this code will need to be updated to show:\r\n```suggestion\r\n    trace.tracer_provider().add_span_processor(span_processor)\r\n```\r\n\r\nOr alternatively, to work with 0.4. the code above will need to be updated to use `TracerSource`\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/459/files#diff-2f282c97a47c5c1e4db9466939a1721bR38",
        "pr_file_module": null
      },
      {
        "comment_id": "387166623",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 459,
        "pr_file": "ext/opentelemetry-ext-jaeger/README.rst",
        "discussion_id": "387162632",
        "commented_code": "@@ -56,7 +56,7 @@ gRPC is still not supported by this implementation.\n     span_processor = BatchExportSpanProcessor(jaeger_exporter)\n \n     # add to the tracer\n-    tracer.add_span_processor(span_processor)\n+    trace.tracer_source().add_span_processor(span_processor)",
        "comment_created_at": "2020-03-03T17:08:33+00:00",
        "comment_author": "mauriciovasquezbernal",
        "comment_body": "ops, I already had forgotten about that one.",
        "pr_file_module": null
      },
      {
        "comment_id": "387176205",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 459,
        "pr_file": "ext/opentelemetry-ext-jaeger/README.rst",
        "discussion_id": "387162632",
        "commented_code": "@@ -56,7 +56,7 @@ gRPC is still not supported by this implementation.\n     span_processor = BatchExportSpanProcessor(jaeger_exporter)\n \n     # add to the tracer\n-    tracer.add_span_processor(span_processor)\n+    trace.tracer_source().add_span_processor(span_processor)",
        "comment_created_at": "2020-03-03T17:24:51+00:00",
        "comment_author": "disfluxly",
        "comment_body": "Good to know. Given the rapid development, I suggest just updating master.",
        "pr_file_module": null
      }
    ]
  }
]