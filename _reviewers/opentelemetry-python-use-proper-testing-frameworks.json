[
  {
    "discussion_id": "2142898601",
    "pr_number": 4633,
    "pr_file": "scripts/griffe_check.sh",
    "created_at": "2025-06-12T14:18:19+00:00",
    "commented_code": "+#!/bin/bash\n+\n+OVERALL_EXIT_CODE=0\n+BRANCH_TO_COMPARE=\"main\"\n+GRIFFE_CMD=\"griffe check -v -a $BRANCH_TO_COMPARE \"\n+\n+run_griffe_check() {\n+    local package_spec=\"$1\"\n+    local package_name\n+    local search_path=\"\"\n+\n+    if [[ \"$package_spec\" == *\"/\"* ]]; then",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "2142898601",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4633,
        "pr_file": "scripts/griffe_check.sh",
        "discussion_id": "2142898601",
        "commented_code": "@@ -0,0 +1,28 @@\n+#!/bin/bash\n+\n+OVERALL_EXIT_CODE=0\n+BRANCH_TO_COMPARE=\"main\"\n+GRIFFE_CMD=\"griffe check -v -a $BRANCH_TO_COMPARE \"\n+\n+run_griffe_check() {\n+    local package_spec=\"$1\"\n+    local package_name\n+    local search_path=\"\"\n+\n+    if [[ \"$package_spec\" == *\"/\"* ]]; then",
        "comment_created_at": "2025-06-12T14:18:19+00:00",
        "comment_author": "aabmass",
        "comment_body": "sorry my bash isn't that great. when tox calls with no arguments, will it check all directories? This might get annoying for test directories.",
        "pr_file_module": null
      },
      {
        "comment_id": "2142945579",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4633,
        "pr_file": "scripts/griffe_check.sh",
        "discussion_id": "2142898601",
        "commented_code": "@@ -0,0 +1,28 @@\n+#!/bin/bash\n+\n+OVERALL_EXIT_CODE=0\n+BRANCH_TO_COMPARE=\"main\"\n+GRIFFE_CMD=\"griffe check -v -a $BRANCH_TO_COMPARE \"\n+\n+run_griffe_check() {\n+    local package_spec=\"$1\"\n+    local package_name\n+    local search_path=\"\"\n+\n+    if [[ \"$package_spec\" == *\"/\"* ]]; then",
        "comment_created_at": "2025-06-12T14:35:56+00:00",
        "comment_author": "emdneto",
        "comment_body": "Yes, tests will also be checked \ud83d\ude13. I agree it will be annoying. Let me see if we can exclude them. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2143003560",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4633,
        "pr_file": "scripts/griffe_check.sh",
        "discussion_id": "2142898601",
        "commented_code": "@@ -0,0 +1,28 @@\n+#!/bin/bash\n+\n+OVERALL_EXIT_CODE=0\n+BRANCH_TO_COMPARE=\"main\"\n+GRIFFE_CMD=\"griffe check -v -a $BRANCH_TO_COMPARE \"\n+\n+run_griffe_check() {\n+    local package_spec=\"$1\"\n+    local package_name\n+    local search_path=\"\"\n+\n+    if [[ \"$package_spec\" == *\"/\"* ]]; then",
        "comment_created_at": "2025-06-12T15:01:30+00:00",
        "comment_author": "emdneto",
        "comment_body": "thanks for the approval, but I'll put it in draft to write the check using griffe Python API. It will be easier to maintain.",
        "pr_file_module": null
      },
      {
        "comment_id": "2162704327",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4633,
        "pr_file": "scripts/griffe_check.sh",
        "discussion_id": "2142898601",
        "commented_code": "@@ -0,0 +1,28 @@\n+#!/bin/bash\n+\n+OVERALL_EXIT_CODE=0\n+BRANCH_TO_COMPARE=\"main\"\n+GRIFFE_CMD=\"griffe check -v -a $BRANCH_TO_COMPARE \"\n+\n+run_griffe_check() {\n+    local package_spec=\"$1\"\n+    local package_name\n+    local search_path=\"\"\n+\n+    if [[ \"$package_spec\" == *\"/\"* ]]; then",
        "comment_created_at": "2025-06-23T23:54:27+00:00",
        "comment_author": "emdneto",
        "comment_body": "@aabmass I've wrote a simple script that uses griffe python API. We can now iterate over the breakages and implement the logic we want. Let me know wdyt",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1971661318",
    "pr_number": 4448,
    "pr_file": "scripts/tracecontext-integration-test.sh",
    "created_at": "2025-02-26T14:11:43+00:00",
    "commented_code": "}\n trap onshutdown EXIT\n cd ./target/trace-context/test\n-python test.py http://127.0.0.1:5000/verify-tracecontext\n+\n+# The disabled test is not compatible with an optional part of the W3C \n+# spec that we have implemented (dropping duplicated keys from tracestate).\n+# W3C are planning to include flags for optional features in the test suite.\n+# https://github.com/w3c/trace-context/issues/529\n+# FIXME: update test to use flags for optional features when available.\n+python test.py http://127.0.0.1:5000/verify-tracecontext -k \"not test_tracestate_duplicated_keys\"",
    "repo_full_name": "open-telemetry/opentelemetry-python",
    "discussion_comments": [
      {
        "comment_id": "1971661318",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4448,
        "pr_file": "scripts/tracecontext-integration-test.sh",
        "discussion_id": "1971661318",
        "commented_code": "@@ -24,4 +24,10 @@ onshutdown()\n }\n trap onshutdown EXIT\n cd ./target/trace-context/test\n-python test.py http://127.0.0.1:5000/verify-tracecontext\n+\n+# The disabled test is not compatible with an optional part of the W3C \n+# spec that we have implemented (dropping duplicated keys from tracestate).\n+# W3C are planning to include flags for optional features in the test suite.\n+# https://github.com/w3c/trace-context/issues/529\n+# FIXME: update test to use flags for optional features when available.\n+python test.py http://127.0.0.1:5000/verify-tracecontext -k \"not test_tracestate_duplicated_keys\"",
        "comment_created_at": "2025-02-26T14:11:43+00:00",
        "comment_author": "emdneto",
        "comment_body": "How about?\r\n\r\n```suggestion\r\nexport SERVICE_ENDPOINT=http://127.0.0.1:5000/verify-tracecontext\r\npytest -k 'not test_tracestate_duplicated_keys'\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1971682881",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4448,
        "pr_file": "scripts/tracecontext-integration-test.sh",
        "discussion_id": "1971661318",
        "commented_code": "@@ -24,4 +24,10 @@ onshutdown()\n }\n trap onshutdown EXIT\n cd ./target/trace-context/test\n-python test.py http://127.0.0.1:5000/verify-tracecontext\n+\n+# The disabled test is not compatible with an optional part of the W3C \n+# spec that we have implemented (dropping duplicated keys from tracestate).\n+# W3C are planning to include flags for optional features in the test suite.\n+# https://github.com/w3c/trace-context/issues/529\n+# FIXME: update test to use flags for optional features when available.\n+python test.py http://127.0.0.1:5000/verify-tracecontext -k \"not test_tracestate_duplicated_keys\"",
        "comment_created_at": "2025-02-26T14:23:46+00:00",
        "comment_author": "emdneto",
        "comment_body": "Nope. It won't work ",
        "pr_file_module": null
      },
      {
        "comment_id": "1971689934",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4448,
        "pr_file": "scripts/tracecontext-integration-test.sh",
        "discussion_id": "1971661318",
        "commented_code": "@@ -24,4 +24,10 @@ onshutdown()\n }\n trap onshutdown EXIT\n cd ./target/trace-context/test\n-python test.py http://127.0.0.1:5000/verify-tracecontext\n+\n+# The disabled test is not compatible with an optional part of the W3C \n+# spec that we have implemented (dropping duplicated keys from tracestate).\n+# W3C are planning to include flags for optional features in the test suite.\n+# https://github.com/w3c/trace-context/issues/529\n+# FIXME: update test to use flags for optional features when available.\n+python test.py http://127.0.0.1:5000/verify-tracecontext -k \"not test_tracestate_duplicated_keys\"",
        "comment_created_at": "2025-02-26T14:27:26+00:00",
        "comment_author": "jomcgi",
        "comment_body": "~~I tried a few variations as well but couldn't get it to work~~\r\nObviously not enough, this is working with tox for me locally.",
        "pr_file_module": null
      },
      {
        "comment_id": "1971708922",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4448,
        "pr_file": "scripts/tracecontext-integration-test.sh",
        "discussion_id": "1971661318",
        "commented_code": "@@ -24,4 +24,10 @@ onshutdown()\n }\n trap onshutdown EXIT\n cd ./target/trace-context/test\n-python test.py http://127.0.0.1:5000/verify-tracecontext\n+\n+# The disabled test is not compatible with an optional part of the W3C \n+# spec that we have implemented (dropping duplicated keys from tracestate).\n+# W3C are planning to include flags for optional features in the test suite.\n+# https://github.com/w3c/trace-context/issues/529\n+# FIXME: update test to use flags for optional features when available.\n+python test.py http://127.0.0.1:5000/verify-tracecontext -k \"not test_tracestate_duplicated_keys\"",
        "comment_created_at": "2025-02-26T14:37:39+00:00",
        "comment_author": "jomcgi",
        "comment_body": "I've pushed a change that worked with tox locally for me:\r\n```\r\nexport SERVICE_ENDPOINT=http://127.0.0.1:5000/verify-tracecontext\r\npytest test.py -k \"not test_tracestate_duplicated_keys\"\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1971796735",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4448,
        "pr_file": "scripts/tracecontext-integration-test.sh",
        "discussion_id": "1971661318",
        "commented_code": "@@ -24,4 +24,10 @@ onshutdown()\n }\n trap onshutdown EXIT\n cd ./target/trace-context/test\n-python test.py http://127.0.0.1:5000/verify-tracecontext\n+\n+# The disabled test is not compatible with an optional part of the W3C \n+# spec that we have implemented (dropping duplicated keys from tracestate).\n+# W3C are planning to include flags for optional features in the test suite.\n+# https://github.com/w3c/trace-context/issues/529\n+# FIXME: update test to use flags for optional features when available.\n+python test.py http://127.0.0.1:5000/verify-tracecontext -k \"not test_tracestate_duplicated_keys\"",
        "comment_created_at": "2025-02-26T15:16:49+00:00",
        "comment_author": "emdneto",
        "comment_body": "@jomcgi It works for me as well. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1971814925",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4448,
        "pr_file": "scripts/tracecontext-integration-test.sh",
        "discussion_id": "1971661318",
        "commented_code": "@@ -24,4 +24,10 @@ onshutdown()\n }\n trap onshutdown EXIT\n cd ./target/trace-context/test\n-python test.py http://127.0.0.1:5000/verify-tracecontext\n+\n+# The disabled test is not compatible with an optional part of the W3C \n+# spec that we have implemented (dropping duplicated keys from tracestate).\n+# W3C are planning to include flags for optional features in the test suite.\n+# https://github.com/w3c/trace-context/issues/529\n+# FIXME: update test to use flags for optional features when available.\n+python test.py http://127.0.0.1:5000/verify-tracecontext -k \"not test_tracestate_duplicated_keys\"",
        "comment_created_at": "2025-02-26T15:24:46+00:00",
        "comment_author": "emdneto",
        "comment_body": "@jomcgi Now I think it's just a matter of adding pytest in tox.ini for the tracecontext test.",
        "pr_file_module": null
      },
      {
        "comment_id": "1971886438",
        "repo_full_name": "open-telemetry/opentelemetry-python",
        "pr_number": 4448,
        "pr_file": "scripts/tracecontext-integration-test.sh",
        "discussion_id": "1971661318",
        "commented_code": "@@ -24,4 +24,10 @@ onshutdown()\n }\n trap onshutdown EXIT\n cd ./target/trace-context/test\n-python test.py http://127.0.0.1:5000/verify-tracecontext\n+\n+# The disabled test is not compatible with an optional part of the W3C \n+# spec that we have implemented (dropping duplicated keys from tracestate).\n+# W3C are planning to include flags for optional features in the test suite.\n+# https://github.com/w3c/trace-context/issues/529\n+# FIXME: update test to use flags for optional features when available.\n+python test.py http://127.0.0.1:5000/verify-tracecontext -k \"not test_tracestate_duplicated_keys\"",
        "comment_created_at": "2025-02-26T16:02:21+00:00",
        "comment_author": "jomcgi",
        "comment_body": "I've updated the `tracecontext` test env to include `pytest==7.4.4`",
        "pr_file_module": null
      }
    ]
  }
]