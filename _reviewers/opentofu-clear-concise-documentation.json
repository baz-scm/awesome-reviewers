[
  {
    "discussion_id": "2190575472",
    "pr_number": 2696,
    "pr_file": "website/docs/language/providers/configuration.mdx",
    "created_at": "2025-07-07T16:30:38+00:00",
    "commented_code": "all of the associated resource instances have been destroyed.\n :::\n \n+### Deleting a provider instance\n+\n+One main limitation of the provider instances feature is that removing a provider instance requires extra rounds of planning and applying. The following example illustrates this issue and how to avoid it.\n+\n+As explained above, a resource should always use a `for_each` expression that is a subset of the provider configuration's `for_each`. In the following configuration, both the provider and the resource use the same `for_each` value:\n+\n+```\n+variable \"aws_active_regions\" {\n+  type    = set(string)\n+  default = [\"us-east-1\", \"sa-east-1\"]\n+}\n+\n+provider \"aws\" {\n+  alias    = \"by_region\"\n+  for_each = var.aws_active_regions\n+  region   = each.key\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"lambda_cloudfront\" {\n+  name     = \"/aws/lambda/${each.key}.lambda\"\n+  provider = aws.by_region[each.key]\n+  for_each = var.aws_active_regions\n+}\n+```\n+\n+This configuration will produce the following warning:\n+\n+```\n+This provider configuration uses the same for_each expression as a resource, which means that subsequent removal of elements from this collection would cause a planning error.\n+│\n+│ OpenTofu relies on a provider instance to destroy resource instances that are associated with it, and so the provider\n+│ instance must outlive all of its resource instances by at least one plan/apply round. For removal of instances to succeed\n+│ in future you must structure the configuration so that the provider block's for_each expression can produce a superset of\n+│ the instances of the resources associated with the provider configuration. Refer to the OpenTofu documentation for\n+│ specific suggestions.\n+│\n+│ To destroy this object before removing the provider configuration, consider first performing a targeted destroy:\n+│     tofu apply -destroy -target=aws_cloudwatch_log_group.lambda_cloudfront\n+```\n+\n+This approach is error-prone because you must run `apply -destroy -target` for all resources associated with the provider instance before you can remove the provider instance itself. If you try to remove the provider instance by deleting the key from `aws_active_regions` before destroying the resources, OpenTofu will prevent you:\n+\n+```\n+Error: Provider instance not present\n+│\n+│ To work with aws_cloudwatch_log_group.lambda_cloudfront[\"sa-east-1\"] its original provider instance at\n+│ provider[\"registry.opentofu.org/hashicorp/aws\"].by_region[\"sa-east-1\"] is required, but it has been removed. This occurs\n+│ when an element is removed from the provider configuration's for_each collection while objects created by that the\n+│ associated provider instance still exist in the state. Re-add the for_each element to destroy\n+│ aws_cloudwatch_log_group.lambda_cloudfront[\"sa-east-1\"], after which you can remove the provider configuration again.\n+│\n+│ This is commonly caused by using the same for_each collection both for a resource (or its containing module) and its\n+│ associated provider configuration. To successfully remove an instance of a resource it must be possible to remove the\n+│ corresponding element from the resource's for_each collection while retaining the corresponding element in the provider's\n+│ for_each collection.\n+```",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "2190575472",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2696,
        "pr_file": "website/docs/language/providers/configuration.mdx",
        "discussion_id": "2190575472",
        "commented_code": "@@ -339,6 +339,103 @@ action. You can then remove the element altogether on the next round, once\n all of the associated resource instances have been destroyed.\n :::\n \n+### Deleting a provider instance\n+\n+One main limitation of the provider instances feature is that removing a provider instance requires extra rounds of planning and applying. The following example illustrates this issue and how to avoid it.\n+\n+As explained above, a resource should always use a `for_each` expression that is a subset of the provider configuration's `for_each`. In the following configuration, both the provider and the resource use the same `for_each` value:\n+\n+```\n+variable \"aws_active_regions\" {\n+  type    = set(string)\n+  default = [\"us-east-1\", \"sa-east-1\"]\n+}\n+\n+provider \"aws\" {\n+  alias    = \"by_region\"\n+  for_each = var.aws_active_regions\n+  region   = each.key\n+}\n+\n+resource \"aws_cloudwatch_log_group\" \"lambda_cloudfront\" {\n+  name     = \"/aws/lambda/${each.key}.lambda\"\n+  provider = aws.by_region[each.key]\n+  for_each = var.aws_active_regions\n+}\n+```\n+\n+This configuration will produce the following warning:\n+\n+```\n+This provider configuration uses the same for_each expression as a resource, which means that subsequent removal of elements from this collection would cause a planning error.\n+│\n+│ OpenTofu relies on a provider instance to destroy resource instances that are associated with it, and so the provider\n+│ instance must outlive all of its resource instances by at least one plan/apply round. For removal of instances to succeed\n+│ in future you must structure the configuration so that the provider block's for_each expression can produce a superset of\n+│ the instances of the resources associated with the provider configuration. Refer to the OpenTofu documentation for\n+│ specific suggestions.\n+│\n+│ To destroy this object before removing the provider configuration, consider first performing a targeted destroy:\n+│     tofu apply -destroy -target=aws_cloudwatch_log_group.lambda_cloudfront\n+```\n+\n+This approach is error-prone because you must run `apply -destroy -target` for all resources associated with the provider instance before you can remove the provider instance itself. If you try to remove the provider instance by deleting the key from `aws_active_regions` before destroying the resources, OpenTofu will prevent you:\n+\n+```\n+Error: Provider instance not present\n+│\n+│ To work with aws_cloudwatch_log_group.lambda_cloudfront[\"sa-east-1\"] its original provider instance at\n+│ provider[\"registry.opentofu.org/hashicorp/aws\"].by_region[\"sa-east-1\"] is required, but it has been removed. This occurs\n+│ when an element is removed from the provider configuration's for_each collection while objects created by that the\n+│ associated provider instance still exist in the state. Re-add the for_each element to destroy\n+│ aws_cloudwatch_log_group.lambda_cloudfront[\"sa-east-1\"], after which you can remove the provider configuration again.\n+│\n+│ This is commonly caused by using the same for_each collection both for a resource (or its containing module) and its\n+│ associated provider configuration. To successfully remove an instance of a resource it must be possible to remove the\n+│ corresponding element from the resource's for_each collection while retaining the corresponding element in the provider's\n+│ for_each collection.\n+```",
        "comment_created_at": "2025-07-07T16:30:38+00:00",
        "comment_author": "apparentlymart",
        "comment_body": "Let's make sure that these consistently use the │prefix on all lines -- either including it or omitting it -- since I think right now it's a little unclear whether the first line of each of these is part of the error message or something else. (OpenTofu CLI includes these markers to help sighted users more quickly notice the boundaries between different diagnostic messages, using visual hierarchy.)\r\n\r\nI'd suggest also generating these with your terminal set to about 72-ish columns wide so that the hard-wrapping will generate shorter lines that should be easier to read on narrower screens without a lot of horizontal scrolling. (I must admit I'm not sure what is a good width for the current way `opentofu.org` is laid out on narrow screens; 72 is just an arbitrary number that we previously used for some other error messages.)\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2056326381",
    "pr_number": 2697,
    "pr_file": "website/docs/language/state/remote-state-data.mdx",
    "created_at": "2025-04-23T15:33:57+00:00",
    "commented_code": ":::warning\n \n+`terraform_remote_state` does not respect the sensitivity of source state snapshots. Use caution when referencing state with sensitive root module output values.",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "2056326381",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2697,
        "pr_file": "website/docs/language/state/remote-state-data.mdx",
        "discussion_id": "2056326381",
        "commented_code": "@@ -13,6 +13,12 @@ You can use the `terraform_remote_state` data source without requiring or config\n \n :::warning\n \n+`terraform_remote_state` does not respect the sensitivity of source state snapshots. Use caution when referencing state with sensitive root module output values.",
        "comment_created_at": "2025-04-23T15:33:57+00:00",
        "comment_author": "ollevche",
        "comment_body": "nit:\r\n```suggestion\r\n`terraform_remote_state` does not respect the sensitivity of source state snapshots. Use with caution when referencing state with sensitive root module output values.\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2056354829",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2697,
        "pr_file": "website/docs/language/state/remote-state-data.mdx",
        "discussion_id": "2056326381",
        "commented_code": "@@ -13,6 +13,12 @@ You can use the `terraform_remote_state` data source without requiring or config\n \n :::warning\n \n+`terraform_remote_state` does not respect the sensitivity of source state snapshots. Use caution when referencing state with sensitive root module output values.",
        "comment_created_at": "2025-04-23T15:43:37+00:00",
        "comment_author": "Yantrio",
        "comment_body": "I think both forms are correct here, telling someone to \"use caution\" and \"use with caution\" are both valid.\r\n\r\nI would actually propose a third alternative to make things worse: `Please be cautious when referencing....`",
        "pr_file_module": null
      },
      {
        "comment_id": "2056357266",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2697,
        "pr_file": "website/docs/language/state/remote-state-data.mdx",
        "discussion_id": "2056326381",
        "commented_code": "@@ -13,6 +13,12 @@ You can use the `terraform_remote_state` data source without requiring or config\n \n :::warning\n \n+`terraform_remote_state` does not respect the sensitivity of source state snapshots. Use caution when referencing state with sensitive root module output values.",
        "comment_created_at": "2025-04-23T15:44:49+00:00",
        "comment_author": "cam72cam",
        "comment_body": "I dislike the \"Please\", I want the message to be a call to action and not gentle.",
        "pr_file_module": null
      },
      {
        "comment_id": "2056372074",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2697,
        "pr_file": "website/docs/language/state/remote-state-data.mdx",
        "discussion_id": "2056326381",
        "commented_code": "@@ -13,6 +13,12 @@ You can use the `terraform_remote_state` data source without requiring or config\n \n :::warning\n \n+`terraform_remote_state` does not respect the sensitivity of source state snapshots. Use caution when referencing state with sensitive root module output values.",
        "comment_created_at": "2025-04-23T15:51:25+00:00",
        "comment_author": "apparentlymart",
        "comment_body": "FWIW, the prevailing writing style for the docs avoids things like \"Please\" and prefers to just directly assert facts, instructions, or recommendations, and so I agree with the comment above and would personally broaden that to _all_ of our documentation, rather than just this one example.\r\n\r\nI don't have a strong opinion on \"use caution\" vs. \"be cautious\". They both seem valid.\r\n\r\nThe only example I could find of something _close_ to this in the existing docs is:\r\n\r\nhttps://github.com/opentofu/opentofu/blob/ff4c84055065fa2d83d318155b72aef6434d99e4/website/docs/language/modules/develop/refactoring.mdx?plain=1#L428\r\n\r\n...which does seem closer to \"use caution\" than \"be cautious\", but isn't exactly the same as either!\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2013544946",
    "pr_number": 2631,
    "pr_file": "website/docs/cli/oci_registries/provider-mirror.mdx",
    "created_at": "2025-03-26T07:38:53+00:00",
    "commented_code": "+---\n+description: >-\n+  Use OCI registries as an alternative installation source for OpenTofu providers\n+---\n+\n+# Provider Mirrors in OCI Registries\n+\n+A \"provider mirror\" is a secondary location hosting a copy of a provider to be used instead\n+of accessing the provider's primary OpenTofu Provider Registry. Creating a local mirror of some\n+or all of the providers you use can reduce data transfer costs and can help with running\n+OpenTofu in \"air-gapped\" environments that cannot access any services over the public internet.\n+\n+Alternative provider installation methods are configured as part of\n+[the OpenTofu CLI Configuration](../config/config-file.mdx). You can configure installation\n+from OCI Registries using an `oci_mirror` block as part of your\n+[Explicit Installation Method Configuration](../config/config-file.mdx#explicit-installation-method-configuration).\n+\n+```hcl\n+provider_installation {\n+  oci_mirror {\n+    repository_template = \"example.com/opentofu-providers/${namespace}/${type}\"\n+    include             = [\"registry.opentofu.org/*/*\"]\n+  }\n+}\n+```\n+\n+The above example specifies that any provider that belongs to the primary OpenTofu Registry\n+should instead be installed from a repository in an OCI registry, constructing the\n+repository address dynamically using the components of the provider source address.\n+\n+For example, the provider source address `hashicorp/tls` is a shorthand for\n+`registry.opentofu.org/hashicorp/tls`, and so it matches the installation method rule\n+configured above, with `hashicorp` as the \"namespace\" and `tls` as the \"type\".\n+Therefore this configuration calls for the provider to be installed from the\n+repository named `opentofu-providers/hashicorp/tls` in the OCI registry running at\n+`example.com`.\n+\n+## `oci_mirror` installation method arguments\n+\n+- `repository_template`: A HCL-style template string that evaluates to an OCI repository\n+  address to use for a given provider.\n+\n+    The following symbols are available for interpolation in the template:\n+\n+    - `hostname`: The hostname of the primary registry that the provider belongs to,\n+      such as `registry.opentofu.org`.\n+    - `namespace`: The namespace that the provider belongs to within its origin registry,\n+      such as `hashicorp` in the above example.\n+    - `type`: The provider's \"type\" name, which is the final portion of the source address\n+      that's unique within a particular namespace, such as `tls` in the above example.\n+\n+    The template **must** include an interpolation for any component of the provider source\n+    address that is not constrained exactly by the `include` argument. For example,",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "2013544946",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2631,
        "pr_file": "website/docs/cli/oci_registries/provider-mirror.mdx",
        "discussion_id": "2013544946",
        "commented_code": "@@ -0,0 +1,310 @@\n+---\n+description: >-\n+  Use OCI registries as an alternative installation source for OpenTofu providers\n+---\n+\n+# Provider Mirrors in OCI Registries\n+\n+A \"provider mirror\" is a secondary location hosting a copy of a provider to be used instead\n+of accessing the provider's primary OpenTofu Provider Registry. Creating a local mirror of some\n+or all of the providers you use can reduce data transfer costs and can help with running\n+OpenTofu in \"air-gapped\" environments that cannot access any services over the public internet.\n+\n+Alternative provider installation methods are configured as part of\n+[the OpenTofu CLI Configuration](../config/config-file.mdx). You can configure installation\n+from OCI Registries using an `oci_mirror` block as part of your\n+[Explicit Installation Method Configuration](../config/config-file.mdx#explicit-installation-method-configuration).\n+\n+```hcl\n+provider_installation {\n+  oci_mirror {\n+    repository_template = \"example.com/opentofu-providers/${namespace}/${type}\"\n+    include             = [\"registry.opentofu.org/*/*\"]\n+  }\n+}\n+```\n+\n+The above example specifies that any provider that belongs to the primary OpenTofu Registry\n+should instead be installed from a repository in an OCI registry, constructing the\n+repository address dynamically using the components of the provider source address.\n+\n+For example, the provider source address `hashicorp/tls` is a shorthand for\n+`registry.opentofu.org/hashicorp/tls`, and so it matches the installation method rule\n+configured above, with `hashicorp` as the \"namespace\" and `tls` as the \"type\".\n+Therefore this configuration calls for the provider to be installed from the\n+repository named `opentofu-providers/hashicorp/tls` in the OCI registry running at\n+`example.com`.\n+\n+## `oci_mirror` installation method arguments\n+\n+- `repository_template`: A HCL-style template string that evaluates to an OCI repository\n+  address to use for a given provider.\n+\n+    The following symbols are available for interpolation in the template:\n+\n+    - `hostname`: The hostname of the primary registry that the provider belongs to,\n+      such as `registry.opentofu.org`.\n+    - `namespace`: The namespace that the provider belongs to within its origin registry,\n+      such as `hashicorp` in the above example.\n+    - `type`: The provider's \"type\" name, which is the final portion of the source address\n+      that's unique within a particular namespace, such as `tls` in the above example.\n+\n+    The template **must** include an interpolation for any component of the provider source\n+    address that is not constrained exactly by the `include` argument. For example,",
        "comment_created_at": "2025-03-26T07:38:53+00:00",
        "comment_author": "yottta",
        "comment_body": "`question`\r\nAnd if setting `include = [\"registry.opentofu.org/mycorp/*\"]` then it means that the template should include interpolation only for the `type`?\r\nIf so, I will try to add just a small mention of it.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2014500637",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2631,
        "pr_file": "website/docs/cli/oci_registries/provider-mirror.mdx",
        "discussion_id": "2013544946",
        "commented_code": "@@ -0,0 +1,310 @@\n+---\n+description: >-\n+  Use OCI registries as an alternative installation source for OpenTofu providers\n+---\n+\n+# Provider Mirrors in OCI Registries\n+\n+A \"provider mirror\" is a secondary location hosting a copy of a provider to be used instead\n+of accessing the provider's primary OpenTofu Provider Registry. Creating a local mirror of some\n+or all of the providers you use can reduce data transfer costs and can help with running\n+OpenTofu in \"air-gapped\" environments that cannot access any services over the public internet.\n+\n+Alternative provider installation methods are configured as part of\n+[the OpenTofu CLI Configuration](../config/config-file.mdx). You can configure installation\n+from OCI Registries using an `oci_mirror` block as part of your\n+[Explicit Installation Method Configuration](../config/config-file.mdx#explicit-installation-method-configuration).\n+\n+```hcl\n+provider_installation {\n+  oci_mirror {\n+    repository_template = \"example.com/opentofu-providers/${namespace}/${type}\"\n+    include             = [\"registry.opentofu.org/*/*\"]\n+  }\n+}\n+```\n+\n+The above example specifies that any provider that belongs to the primary OpenTofu Registry\n+should instead be installed from a repository in an OCI registry, constructing the\n+repository address dynamically using the components of the provider source address.\n+\n+For example, the provider source address `hashicorp/tls` is a shorthand for\n+`registry.opentofu.org/hashicorp/tls`, and so it matches the installation method rule\n+configured above, with `hashicorp` as the \"namespace\" and `tls` as the \"type\".\n+Therefore this configuration calls for the provider to be installed from the\n+repository named `opentofu-providers/hashicorp/tls` in the OCI registry running at\n+`example.com`.\n+\n+## `oci_mirror` installation method arguments\n+\n+- `repository_template`: A HCL-style template string that evaluates to an OCI repository\n+  address to use for a given provider.\n+\n+    The following symbols are available for interpolation in the template:\n+\n+    - `hostname`: The hostname of the primary registry that the provider belongs to,\n+      such as `registry.opentofu.org`.\n+    - `namespace`: The namespace that the provider belongs to within its origin registry,\n+      such as `hashicorp` in the above example.\n+    - `type`: The provider's \"type\" name, which is the final portion of the source address\n+      that's unique within a particular namespace, such as `tls` in the above example.\n+\n+    The template **must** include an interpolation for any component of the provider source\n+    address that is not constrained exactly by the `include` argument. For example,",
        "comment_created_at": "2025-03-26T15:56:16+00:00",
        "comment_author": "apparentlymart",
        "comment_body": "Yes, that is correct.\r\n\r\nI was reluctant to make this text very long by giving lots of examples because the implementation is already built to give direct feedback about this if an author uses it incorrectly.\r\n\r\nThe fact that you correctly understood the intention without any additional words about it makes me think we should try too keep this as it is currently written and wait to see if others find it confusing in practice. It's been my experience that readers tend to skip unnecessarily long documentation, and so I'd like to try with only one example to see if this is sufficient before we make it longer.\r\n\r\nWhat you think?",
        "pr_file_module": null
      },
      {
        "comment_id": "2014580699",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2631,
        "pr_file": "website/docs/cli/oci_registries/provider-mirror.mdx",
        "discussion_id": "2013544946",
        "commented_code": "@@ -0,0 +1,310 @@\n+---\n+description: >-\n+  Use OCI registries as an alternative installation source for OpenTofu providers\n+---\n+\n+# Provider Mirrors in OCI Registries\n+\n+A \"provider mirror\" is a secondary location hosting a copy of a provider to be used instead\n+of accessing the provider's primary OpenTofu Provider Registry. Creating a local mirror of some\n+or all of the providers you use can reduce data transfer costs and can help with running\n+OpenTofu in \"air-gapped\" environments that cannot access any services over the public internet.\n+\n+Alternative provider installation methods are configured as part of\n+[the OpenTofu CLI Configuration](../config/config-file.mdx). You can configure installation\n+from OCI Registries using an `oci_mirror` block as part of your\n+[Explicit Installation Method Configuration](../config/config-file.mdx#explicit-installation-method-configuration).\n+\n+```hcl\n+provider_installation {\n+  oci_mirror {\n+    repository_template = \"example.com/opentofu-providers/${namespace}/${type}\"\n+    include             = [\"registry.opentofu.org/*/*\"]\n+  }\n+}\n+```\n+\n+The above example specifies that any provider that belongs to the primary OpenTofu Registry\n+should instead be installed from a repository in an OCI registry, constructing the\n+repository address dynamically using the components of the provider source address.\n+\n+For example, the provider source address `hashicorp/tls` is a shorthand for\n+`registry.opentofu.org/hashicorp/tls`, and so it matches the installation method rule\n+configured above, with `hashicorp` as the \"namespace\" and `tls` as the \"type\".\n+Therefore this configuration calls for the provider to be installed from the\n+repository named `opentofu-providers/hashicorp/tls` in the OCI registry running at\n+`example.com`.\n+\n+## `oci_mirror` installation method arguments\n+\n+- `repository_template`: A HCL-style template string that evaluates to an OCI repository\n+  address to use for a given provider.\n+\n+    The following symbols are available for interpolation in the template:\n+\n+    - `hostname`: The hostname of the primary registry that the provider belongs to,\n+      such as `registry.opentofu.org`.\n+    - `namespace`: The namespace that the provider belongs to within its origin registry,\n+      such as `hashicorp` in the above example.\n+    - `type`: The provider's \"type\" name, which is the final portion of the source address\n+      that's unique within a particular namespace, such as `tls` in the above example.\n+\n+    The template **must** include an interpolation for any component of the provider source\n+    address that is not constrained exactly by the `include` argument. For example,",
        "comment_created_at": "2025-03-26T16:39:42+00:00",
        "comment_author": "yottta",
        "comment_body": "Great points! Let's go with the current shape.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1896560541",
    "pr_number": 2306,
    "pr_file": "website/docs/language/functions/index.mdx",
    "created_at": "2024-12-24T08:57:35+00:00",
    "commented_code": "}\n ```\n \n+### Built-in Provider Functions:\n+OpenTofu has a built-in provider `terraform.io/builtin/terraform` which provides [additional functions](../providers/builtin.mdx#functions) that can be used in OpenTofu configurations.\n+\n+#### Usage Example:",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "1896560541",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2306,
        "pr_file": "website/docs/language/functions/index.mdx",
        "discussion_id": "1896560541",
        "commented_code": "@@ -61,6 +61,24 @@ locals {\n }\n ```\n \n+### Built-in Provider Functions:\n+OpenTofu has a built-in provider `terraform.io/builtin/terraform` which provides [additional functions](../providers/builtin.mdx#functions) that can be used in OpenTofu configurations.\n+\n+#### Usage Example:",
        "comment_created_at": "2024-12-24T08:57:35+00:00",
        "comment_author": "ollevche",
        "comment_body": "nit: not sure if we need an example here, IMO it increases page complexity more than adds relevant context (for this particular page).",
        "pr_file_module": null
      },
      {
        "comment_id": "1896617676",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2306,
        "pr_file": "website/docs/language/functions/index.mdx",
        "discussion_id": "1896560541",
        "commented_code": "@@ -61,6 +61,24 @@ locals {\n }\n ```\n \n+### Built-in Provider Functions:\n+OpenTofu has a built-in provider `terraform.io/builtin/terraform` which provides [additional functions](../providers/builtin.mdx#functions) that can be used in OpenTofu configurations.\n+\n+#### Usage Example:",
        "comment_created_at": "2024-12-24T10:05:50+00:00",
        "comment_author": "Gogotchuri",
        "comment_body": "Removing the usage example",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1687955889",
    "pr_number": 1843,
    "pr_file": "website/docs/cli/commands/console.mdx",
    "created_at": "2024-07-23T12:13:33+00:00",
    "commented_code": "The `tofu console` command provides an interactive console for\n evaluating [expressions](../../language/expressions/index.mdx).\n \n+:::note",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "1687955889",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 1843,
        "pr_file": "website/docs/cli/commands/console.mdx",
        "discussion_id": "1687955889",
        "commented_code": "@@ -9,6 +9,14 @@ description: >-\n The `tofu console` command provides an interactive console for\n evaluating [expressions](../../language/expressions/index.mdx).\n \n+:::note",
        "comment_created_at": "2024-07-23T12:13:33+00:00",
        "comment_author": "Evi1Pumpkin",
        "comment_body": "Nitpick, but sometimes this note is before the \"Usage\" section, and sometimes it is in the \"Usage\" section right before the flags are mentioned.\r\nLet's be consistent and choose a single place. I think it makes more sense to include this section inside the  \"Usage\" section, as it's relevant to how you use the command.",
        "pr_file_module": null
      },
      {
        "comment_id": "1688019028",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 1843,
        "pr_file": "website/docs/cli/commands/console.mdx",
        "discussion_id": "1687955889",
        "commented_code": "@@ -9,6 +9,14 @@ description: >-\n The `tofu console` command provides an interactive console for\n evaluating [expressions](../../language/expressions/index.mdx).\n \n+:::note",
        "comment_created_at": "2024-07-23T12:57:50+00:00",
        "comment_author": "ollevche",
        "comment_body": "Yep, makes sense. Moved note to usage block for most of the commands: [3980be3](https://github.com/opentofu/opentofu/pull/1843/commits/3980be38e72560ca2a97aea35f51c0f0ea66b9cf)",
        "pr_file_module": null
      },
      {
        "comment_id": "1688043020",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 1843,
        "pr_file": "website/docs/cli/commands/console.mdx",
        "discussion_id": "1687955889",
        "commented_code": "@@ -9,6 +9,14 @@ description: >-\n The `tofu console` command provides an interactive console for\n evaluating [expressions](../../language/expressions/index.mdx).\n \n+:::note",
        "comment_created_at": "2024-07-23T13:13:40+00:00",
        "comment_author": "Evi1Pumpkin",
        "comment_body": "There is a single command that you didn't update, `website/docs/cli/commands/get.mdx`.\r\nNot sure if it's a miss or if you had a reason :)",
        "pr_file_module": null
      },
      {
        "comment_id": "1688060148",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 1843,
        "pr_file": "website/docs/cli/commands/console.mdx",
        "discussion_id": "1687955889",
        "commented_code": "@@ -9,6 +9,14 @@ description: >-\n The `tofu console` command provides an interactive console for\n evaluating [expressions](../../language/expressions/index.mdx).\n \n+:::note",
        "comment_created_at": "2024-07-23T13:24:30+00:00",
        "comment_author": "ollevche",
        "comment_body": "that's a miss, thank you!\r\n\r\n[e27f67c](https://github.com/opentofu/opentofu/pull/1843/commits/e27f67c2a6ed5485312283c102c84e11accd337b)",
        "pr_file_module": null
      }
    ]
  }
]