[
  {
    "discussion_id": "2014536417",
    "pr_number": 2636,
    "pr_file": ".github/workflows/govulncheck.yml",
    "created_at": "2025-03-26T16:15:11+00:00",
    "commented_code": "+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  gather-branches:\n+    name: Collect the branches that needs to be scanned\n+    runs-on: ubuntu-latest\n+    if: github.ref == 'refs/heads/main'\n+    env:\n+      GH_TOKEN: ${{ github.token }}\n+    outputs:\n+      branches: ${{ steps.branches.outputs.branches }}\n+    steps:\n+      - id: branches\n+        run: |\n+          ## This is using GitHub API and we manually filter out the versions that are not supported anymore\n+          # gh api \"repos/opentofu/opentofu/branches?protected=true\" --paginate | tee out \n+          # cat out | jq '.[] | select(.name != \"v1.6\") | [.name]' | jq -sc 'add' | tee branches\n+          # echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "2014536417",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014536417",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  gather-branches:\n+    name: Collect the branches that needs to be scanned\n+    runs-on: ubuntu-latest\n+    if: github.ref == 'refs/heads/main'\n+    env:\n+      GH_TOKEN: ${{ github.token }}\n+    outputs:\n+      branches: ${{ steps.branches.outputs.branches }}\n+    steps:\n+      - id: branches\n+        run: |\n+          ## This is using GitHub API and we manually filter out the versions that are not supported anymore\n+          # gh api \"repos/opentofu/opentofu/branches?protected=true\" --paginate | tee out \n+          # cat out | jq '.[] | select(.name != \"v1.6\") | [.name]' | jq -sc 'add' | tee branches\n+          # echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"",
        "comment_created_at": "2025-03-26T16:15:11+00:00",
        "comment_author": "yottta",
        "comment_body": "This is a first approach where I used the GH API to get all the protected branches (which are only the ones that are for the versions released of OpenTofu) and out of those exclude the the unmaintained versions.\r\nPros:\r\n* is using a reliable and well-known API that we can fully trust.\r\n\r\nCons:\r\n* manual maintenance. Quite ugly to update this.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2016898691",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014536417",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  gather-branches:\n+    name: Collect the branches that needs to be scanned\n+    runs-on: ubuntu-latest\n+    if: github.ref == 'refs/heads/main'\n+    env:\n+      GH_TOKEN: ${{ github.token }}\n+    outputs:\n+      branches: ${{ steps.branches.outputs.branches }}\n+    steps:\n+      - id: branches\n+        run: |\n+          ## This is using GitHub API and we manually filter out the versions that are not supported anymore\n+          # gh api \"repos/opentofu/opentofu/branches?protected=true\" --paginate | tee out \n+          # cat out | jq '.[] | select(.name != \"v1.6\") | [.name]' | jq -sc 'add' | tee branches\n+          # echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"",
        "comment_created_at": "2025-03-27T15:09:48+00:00",
        "comment_author": "Gogotchuri",
        "comment_body": "The endoflife should be fine, there might be 2 main issues here:\r\n- They delay the update for eol (which is in no way critical, we just scan for no reason)\r\n- Server is down, which will likely not be an issue",
        "pr_file_module": null
      },
      {
        "comment_id": "2018746090",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014536417",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  gather-branches:\n+    name: Collect the branches that needs to be scanned\n+    runs-on: ubuntu-latest\n+    if: github.ref == 'refs/heads/main'\n+    env:\n+      GH_TOKEN: ${{ github.token }}\n+    outputs:\n+      branches: ${{ steps.branches.outputs.branches }}\n+    steps:\n+      - id: branches\n+        run: |\n+          ## This is using GitHub API and we manually filter out the versions that are not supported anymore\n+          # gh api \"repos/opentofu/opentofu/branches?protected=true\" --paginate | tee out \n+          # cat out | jq '.[] | select(.name != \"v1.6\") | [.name]' | jq -sc 'add' | tee branches\n+          # echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"",
        "comment_created_at": "2025-03-28T14:03:27+00:00",
        "comment_author": "yottta",
        "comment_body": "The update on the site is done automatically as seen [here](https://github.com/endoflife-date/release-data/tree/main?tab=readme-ov-file).\r\n![image](https://github.com/user-attachments/assets/01e8497d-1e49-4104-9ed8-21c39e9a4928)\r\n_That checkmark is for auto update_",
        "pr_file_module": null
      },
      {
        "comment_id": "2033050160",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014536417",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  gather-branches:\n+    name: Collect the branches that needs to be scanned\n+    runs-on: ubuntu-latest\n+    if: github.ref == 'refs/heads/main'\n+    env:\n+      GH_TOKEN: ${{ github.token }}\n+    outputs:\n+      branches: ${{ steps.branches.outputs.branches }}\n+    steps:\n+      - id: branches\n+        run: |\n+          ## This is using GitHub API and we manually filter out the versions that are not supported anymore\n+          # gh api \"repos/opentofu/opentofu/branches?protected=true\" --paginate | tee out \n+          # cat out | jq '.[] | select(.name != \"v1.6\") | [.name]' | jq -sc 'add' | tee branches\n+          # echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"",
        "comment_created_at": "2025-04-08T12:08:29+00:00",
        "comment_author": "yottta",
        "comment_body": "We are keeping only the hardcoded strategy to hold the control on what branches we run the flow against.\r\nSee [this](https://github.com/opentofu/opentofu/pull/2636#discussion_r2033011305) suggestion.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2014557445",
    "pr_number": 2636,
    "pr_file": ".github/workflows/govulncheck.yml",
    "created_at": "2025-03-26T16:26:19+00:00",
    "commented_code": "+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  gather-branches:\n+    name: Collect the branches that needs to be scanned\n+    runs-on: ubuntu-latest\n+    if: github.ref == 'refs/heads/main'\n+    env:\n+      GH_TOKEN: ${{ github.token }}\n+    outputs:\n+      branches: ${{ steps.branches.outputs.branches }}\n+    steps:\n+      - id: branches\n+        run: |\n+          ## This is using GitHub API and we manually filter out the versions that are not supported anymore\n+          # gh api \"repos/opentofu/opentofu/branches?protected=true\" --paginate | tee out \n+          # cat out | jq '.[] | select(.name != \"v1.6\") | [.name]' | jq -sc 'add' | tee branches\n+          # echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"\n+          \n+          ## This is using https://endoflife.date since there 1.6 is already marked as it reached EOL\n+          ## This is adding manually the main branch to scan it as well\n+          curl https://endoflife.date/api/opentofu.json | tee out \n+          cat out | jq '.[] | select(.eol == false) | [.cycle]' | jq -sc 'add' | jq -c '[\"main\"] + .' | tee branches\n+          echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "2014557445",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014557445",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  gather-branches:\n+    name: Collect the branches that needs to be scanned\n+    runs-on: ubuntu-latest\n+    if: github.ref == 'refs/heads/main'\n+    env:\n+      GH_TOKEN: ${{ github.token }}\n+    outputs:\n+      branches: ${{ steps.branches.outputs.branches }}\n+    steps:\n+      - id: branches\n+        run: |\n+          ## This is using GitHub API and we manually filter out the versions that are not supported anymore\n+          # gh api \"repos/opentofu/opentofu/branches?protected=true\" --paginate | tee out \n+          # cat out | jq '.[] | select(.name != \"v1.6\") | [.name]' | jq -sc 'add' | tee branches\n+          # echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"\n+          \n+          ## This is using https://endoflife.date since there 1.6 is already marked as it reached EOL\n+          ## This is adding manually the main branch to scan it as well\n+          curl https://endoflife.date/api/opentofu.json | tee out \n+          cat out | jq '.[] | select(.eol == false) | [.cycle]' | jq -sc 'add' | jq -c '[\"main\"] + .' | tee branches\n+          echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"",
        "comment_created_at": "2025-03-26T16:26:19+00:00",
        "comment_author": "yottta",
        "comment_body": "This second approach is using https://endoflife.date/opentofu and is nice in terms that we don't really need to maintain this workflow anymore, once merged.\r\nPros:\r\n* no maintenance needed\r\n\r\nCons:\r\n* adds dependency on a 3rd party system",
        "pr_file_module": null
      },
      {
        "comment_id": "2033050347",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014557445",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  gather-branches:\n+    name: Collect the branches that needs to be scanned\n+    runs-on: ubuntu-latest\n+    if: github.ref == 'refs/heads/main'\n+    env:\n+      GH_TOKEN: ${{ github.token }}\n+    outputs:\n+      branches: ${{ steps.branches.outputs.branches }}\n+    steps:\n+      - id: branches\n+        run: |\n+          ## This is using GitHub API and we manually filter out the versions that are not supported anymore\n+          # gh api \"repos/opentofu/opentofu/branches?protected=true\" --paginate | tee out \n+          # cat out | jq '.[] | select(.name != \"v1.6\") | [.name]' | jq -sc 'add' | tee branches\n+          # echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"\n+          \n+          ## This is using https://endoflife.date since there 1.6 is already marked as it reached EOL\n+          ## This is adding manually the main branch to scan it as well\n+          curl https://endoflife.date/api/opentofu.json | tee out \n+          cat out | jq '.[] | select(.eol == false) | [.cycle]' | jq -sc 'add' | jq -c '[\"main\"] + .' | tee branches\n+          echo \"branches=$(cat branches)\">> \"$GITHUB_OUTPUT\"",
        "comment_created_at": "2025-04-08T12:08:35+00:00",
        "comment_author": "yottta",
        "comment_body": "We are keeping only the hardcoded strategy to hold the control on what branches we run the flow against.\r\nSee [this](https://github.com/opentofu/opentofu/pull/2636#discussion_r2033011305) suggestion.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2089181172",
    "pr_number": 2636,
    "pr_file": ".github/workflows/govulncheck.yml",
    "created_at": "2025-05-14T15:11:10+00:00",
    "commented_code": "+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will try to create an issue for each vulnerability key that is found.\n+# If an issue for it already exists, it will skip creating it.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '00 15 * * MON'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  govulncheck:\n+    name: Run govulncheck for ${{ matrix.branch }}\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        include:\n+          - { branch: main }\n+          - { branch: v1.9 }\n+          - { branch: v1.8 }\n+          - { branch: v1.7 }",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "2089181172",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2089181172",
        "commented_code": "@@ -0,0 +1,93 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will try to create an issue for each vulnerability key that is found.\n+# If an issue for it already exists, it will skip creating it.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '00 15 * * MON'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  govulncheck:\n+    name: Run govulncheck for ${{ matrix.branch }}\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        include:\n+          - { branch: main }\n+          - { branch: v1.9 }\n+          - { branch: v1.8 }\n+          - { branch: v1.7 }",
        "comment_created_at": "2025-05-14T15:11:10+00:00",
        "comment_author": "apparentlymart",
        "comment_body": "I am still a little concerned that we're presumably going to need to commit to `main` every time our set of supported versions changes, thereby causing risk that we forget about it and creating clutter in the git history that's unrelated to the actual product we're building, but I also see that this changes infrequently enough that it'll probably be fine. :+1: \r\n\r\nIt's a little awkward that the `main` branch switches to tracking the next release at the time we release our first beta, but the oldest supported version reaches end of life only when we make  the _final_ release for a new series, so I guess we'll need to update this as a separate step once we release v1.10.0 final, rather than including it as part of the work to create the v1.10 branch and have `main` start to represent v1.11 development. If we find that we tend to forget to do this in future releases then I'd consider that a prompt to revisit this decision and consider a different approach, but I think it's fine to wait to see what happens.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2089210868",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2089181172",
        "commented_code": "@@ -0,0 +1,93 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will try to create an issue for each vulnerability key that is found.\n+# If an issue for it already exists, it will skip creating it.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '00 15 * * MON'\n+  workflow_dispatch: {}\n+\n+jobs:\n+  govulncheck:\n+    name: Run govulncheck for ${{ matrix.branch }}\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        include:\n+          - { branch: main }\n+          - { branch: v1.9 }\n+          - { branch: v1.8 }\n+          - { branch: v1.7 }",
        "comment_created_at": "2025-05-14T15:25:49+00:00",
        "comment_author": "yottta",
        "comment_body": "We added this section in the [CONTRIBUTING.RELEASE.md](https://github.com/opentofu/opentofu/pull/2636/files#diff-f3a80a44a166a40dd17304f62b1399e0a1477a0af3cea60dc41250f550b5ef07R248) for it.\r\nLet's see if this will be enough.",
        "pr_file_module": null
      }
    ]
  }
]