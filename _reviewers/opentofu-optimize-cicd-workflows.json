[
  {
    "discussion_id": "2014570382",
    "pr_number": 2636,
    "pr_file": ".github/workflows/govulncheck.yml",
    "created_at": "2025-03-26T16:33:26+00:00",
    "commented_code": "+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "2014570382",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014570382",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'",
        "comment_created_at": "2025-03-26T16:33:26+00:00",
        "comment_author": "yottta",
        "comment_body": "Configured this to run once a week, on Sunday morning. Also, weird minute section configuration due to this mention from [GH actions docs](https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#schedule):\r\n> The `schedule` event can be delayed during periods of high loads of GitHub Actions workflow runs. High load times include the start of every hour. If the load is sufficiently high enough, some queued jobs may be dropped. To decrease the chance of delay, schedule your workflow to run at a different time of the hour.",
        "pr_file_module": null
      },
      {
        "comment_id": "2016895313",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014570382",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'",
        "comment_created_at": "2025-03-27T15:08:16+00:00",
        "comment_author": "Gogotchuri",
        "comment_body": "Nice catch!",
        "pr_file_module": null
      },
      {
        "comment_id": "2088611370",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014570382",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'",
        "comment_created_at": "2025-05-14T10:25:31+00:00",
        "comment_author": "cam72cam",
        "comment_body": "I wonder if having this fire while engineers are online makes more sense?",
        "pr_file_module": null
      },
      {
        "comment_id": "2088688741",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014570382",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'",
        "comment_created_at": "2025-05-14T11:09:54+00:00",
        "comment_author": "yottta",
        "comment_body": "Perhaps we could change this later to fit our future needs.",
        "pr_file_module": null
      },
      {
        "comment_id": "2088695144",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014570382",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'",
        "comment_created_at": "2025-05-14T11:13:53+00:00",
        "comment_author": "cam72cam",
        "comment_body": "I don't want to get pinged all Sunday if a bunch of vulns are posted to github.",
        "pr_file_module": null
      },
      {
        "comment_id": "2088702233",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2636,
        "pr_file": ".github/workflows/govulncheck.yml",
        "discussion_id": "2014570382",
        "commented_code": "@@ -0,0 +1,100 @@\n+# This workflow is meant to run govulncheck on all the branches\n+# that are containing a maintained version of OpenTofu.\n+# For more considerations about this, check this PR: https://github.com/opentofu/opentofu/pull/2600\n+#\n+# This will attempt to create an issue with the results for each scanned version\n+# in case any vulnerability is found. If the issue for the scanned branch already exists\n+# the run will just print the scan output and will leave the issue untouched.\n+#\n+# This is meant to run _only_ from the main branch, on a scheduled manner.\n+# All the other branches will be scanned directly by the run triggered from the main branch.\n+\n+name: Govulncheck\n+\n+on:\n+  schedule:\n+    - cron: '42 3 * * SUN'",
        "comment_created_at": "2025-05-14T11:18:33+00:00",
        "comment_author": "yottta",
        "comment_body": "Changed in d7bd8375e8a0c9ccc46fc607eb2591595c0b865b",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1343644241",
    "pr_number": 624,
    "pr_file": ".github/workflows/golangci-lint.yml",
    "created_at": "2023-10-03T07:42:45+00:00",
    "commented_code": "+name: golangci-lint\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+permissions:\n+  contents: read\n+  # Optional: allow read access to pull request. Use with `only-new-issues` option.\n+  # pull-requests: read\n+\n+jobs:\n+  golangci:\n+    name: lint\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v3\n+      - uses: actions/setup-go@v4\n+        with:\n+          go-version: '1.21'\n+          cache: false\n+      - name: golangci-lint\n+        uses: golangci/golangci-lint-action@v3\n+        with:\n+          # Require: The version of golangci-lint to use.\n+          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.\n+          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.\n+          version: v1.54\n+\n+          # Optional: working directory, useful for monorepos\n+          # working-directory: somedir\n+\n+          # Optional: golangci-lint command line arguments.\n+          #\n+          # Note: By default, the `.golangci.yml` file should be at the root of the repository.\n+          # The location of the configuration file can be changed by using `--config=`\n+          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0\n+          args:  -p import --timeout=10m --allow-parallel-runners\n+\n+          # Optional: show only new issues if it's a pull request. The default value is `false`.\n+          only-new-issues: true",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "1343644241",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 624,
        "pr_file": ".github/workflows/golangci-lint.yml",
        "discussion_id": "1343644241",
        "commented_code": "@@ -0,0 +1,55 @@\n+name: golangci-lint\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+permissions:\n+  contents: read\n+  # Optional: allow read access to pull request. Use with `only-new-issues` option.\n+  # pull-requests: read\n+\n+jobs:\n+  golangci:\n+    name: lint\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v3\n+      - uses: actions/setup-go@v4\n+        with:\n+          go-version: '1.21'\n+          cache: false\n+      - name: golangci-lint\n+        uses: golangci/golangci-lint-action@v3\n+        with:\n+          # Require: The version of golangci-lint to use.\n+          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.\n+          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.\n+          version: v1.54\n+\n+          # Optional: working directory, useful for monorepos\n+          # working-directory: somedir\n+\n+          # Optional: golangci-lint command line arguments.\n+          #\n+          # Note: By default, the `.golangci.yml` file should be at the root of the repository.\n+          # The location of the configuration file can be changed by using `--config=`\n+          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0\n+          args:  -p import --timeout=10m --allow-parallel-runners\n+\n+          # Optional: show only new issues if it's a pull request. The default value is `false`.\n+          only-new-issues: true",
        "comment_created_at": "2023-10-03T07:42:45+00:00",
        "comment_author": "eranelbaz",
        "comment_body": "Are we going to fix the current issues?\r\nhow does it know if there are new issues?",
        "pr_file_module": null
      },
      {
        "comment_id": "1344823127",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 624,
        "pr_file": ".github/workflows/golangci-lint.yml",
        "discussion_id": "1343644241",
        "commented_code": "@@ -0,0 +1,55 @@\n+name: golangci-lint\n+on:\n+  push:\n+    branches:\n+      - main\n+  pull_request:\n+\n+permissions:\n+  contents: read\n+  # Optional: allow read access to pull request. Use with `only-new-issues` option.\n+  # pull-requests: read\n+\n+jobs:\n+  golangci:\n+    name: lint\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v3\n+      - uses: actions/setup-go@v4\n+        with:\n+          go-version: '1.21'\n+          cache: false\n+      - name: golangci-lint\n+        uses: golangci/golangci-lint-action@v3\n+        with:\n+          # Require: The version of golangci-lint to use.\n+          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.\n+          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.\n+          version: v1.54\n+\n+          # Optional: working directory, useful for monorepos\n+          # working-directory: somedir\n+\n+          # Optional: golangci-lint command line arguments.\n+          #\n+          # Note: By default, the `.golangci.yml` file should be at the root of the repository.\n+          # The location of the configuration file can be changed by using `--config=`\n+          # args: --timeout=30m --config=/my/path/.golangci.yml --issues-exit-code=0\n+          args:  -p import --timeout=10m --allow-parallel-runners\n+\n+          # Optional: show only new issues if it's a pull request. The default value is `false`.\n+          only-new-issues: true",
        "comment_created_at": "2023-10-03T22:35:09+00:00",
        "comment_author": "Hefeweizen",
        "comment_body": "> Are we going to fix the current issues?\r\nI was going to rely on #513 to fix the bulk of the current issues.\r\nI would not make future PR authors responsible for the entire state of the repo; I would only make them responsible for the code they've changed.  Yes, this might leave lingering errors, but to do otherwise creates an impediment for those wanting to contribute.\r\n\r\n1-off issues should be created to have this work done for the entire repository.\r\n\r\n> how does it know if there are new issues?\r\nI didn't update the needed permissions, so it can't.  : )  I'll fix that.\r\nWhen it's working, it grabs the parent PR to limit its scope to the changes within that PR.\r\nhttps://github.com/golangci/golangci-lint-action/blob/e09eda33b5d643674c0219d04a7b18e4ef933127/src/run.ts#L25\r\n\r\n& thanks for using the fine-toothed comb; great questions!\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1502456613",
    "pr_number": 1304,
    "pr_file": ".github/workflows/checks.yml",
    "created_at": "2024-02-26T11:28:26+00:00",
    "commented_code": "- checks-workflow-dev/*\n     tags:\n       - 'v[0-9]+.[0-9]+.[0-9]+*'\n+    paths-ignore:\n+      - 'website/**'",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "1502456613",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 1304,
        "pr_file": ".github/workflows/checks.yml",
        "discussion_id": "1502456613",
        "commented_code": "@@ -24,6 +24,8 @@ on:\n       - checks-workflow-dev/*\n     tags:\n       - 'v[0-9]+.[0-9]+.[0-9]+*'\n+    paths-ignore:\n+      - 'website/**'",
        "comment_created_at": "2024-02-26T11:28:26+00:00",
        "comment_author": "Yantrio",
        "comment_body": "I think we should also ignore the `docs` folder",
        "pr_file_module": null
      },
      {
        "comment_id": "1502478305",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 1304,
        "pr_file": ".github/workflows/checks.yml",
        "discussion_id": "1502456613",
        "commented_code": "@@ -24,6 +24,8 @@ on:\n       - checks-workflow-dev/*\n     tags:\n       - 'v[0-9]+.[0-9]+.[0-9]+*'\n+    paths-ignore:\n+      - 'website/**'",
        "comment_created_at": "2024-02-26T11:40:06+00:00",
        "comment_author": "rdhar",
        "comment_body": "Agreed, will append it to the list. ",
        "pr_file_module": null
      }
    ]
  }
]