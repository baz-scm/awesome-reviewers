[
  {
    "discussion_id": "2014150955",
    "pr_number": 2633,
    "pr_file": "internal/tofu/node_output.go",
    "created_at": "2025-03-26T13:30:08+00:00",
    "commented_code": "// non-root outputs need to keep sensitive marks for evaluation, but are\n \t// not serialized.\n-\tif n.Addr.Module.IsRoot() {\n+\tif n.Addr.Module.IsRoot() && marks.Contains(val, marks.Sensitive) {",
    "repo_full_name": "opentofu/opentofu",
    "discussion_comments": [
      {
        "comment_id": "2014150955",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2633,
        "pr_file": "internal/tofu/node_output.go",
        "discussion_id": "2014150955",
        "commented_code": "@@ -615,7 +615,7 @@ func (n *NodeApplyableOutput) setValue(state *states.SyncState, changes *plans.C\n \n \t// non-root outputs need to keep sensitive marks for evaluation, but are\n \t// not serialized.\n-\tif n.Addr.Module.IsRoot() {\n+\tif n.Addr.Module.IsRoot() && marks.Contains(val, marks.Sensitive) {",
        "comment_created_at": "2025-03-26T13:30:08+00:00",
        "comment_author": "ollevche",
        "comment_body": "This is actually irrelevant for the deprecation marks. However, we don't need to remove sensitive marks if there are none.",
        "pr_file_module": null
      },
      {
        "comment_id": "2014271344",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2633,
        "pr_file": "internal/tofu/node_output.go",
        "discussion_id": "2014150955",
        "commented_code": "@@ -615,7 +615,7 @@ func (n *NodeApplyableOutput) setValue(state *states.SyncState, changes *plans.C\n \n \t// non-root outputs need to keep sensitive marks for evaluation, but are\n \t// not serialized.\n-\tif n.Addr.Module.IsRoot() {\n+\tif n.Addr.Module.IsRoot() && marks.Contains(val, marks.Sensitive) {",
        "comment_created_at": "2025-03-26T14:18:40+00:00",
        "comment_author": "ollevche",
        "comment_body": "I removed that change. The code below is not only removing sensitive marks, but also reordering existing ones (from nested to top level). I believe this was not an issue for most cases, but now that we actually care about other marks, it could be a problem. I will review usages.",
        "pr_file_module": null
      },
      {
        "comment_id": "2047372980",
        "repo_full_name": "opentofu/opentofu",
        "pr_number": 2633,
        "pr_file": "internal/tofu/node_output.go",
        "discussion_id": "2014150955",
        "commented_code": "@@ -615,7 +615,7 @@ func (n *NodeApplyableOutput) setValue(state *states.SyncState, changes *plans.C\n \n \t// non-root outputs need to keep sensitive marks for evaluation, but are\n \t// not serialized.\n-\tif n.Addr.Module.IsRoot() {\n+\tif n.Addr.Module.IsRoot() && marks.Contains(val, marks.Sensitive) {",
        "comment_created_at": "2025-04-16T17:07:43+00:00",
        "comment_author": "ollevche",
        "comment_body": "Found a few more cases, where sensitive marks handling needs to be refactored and put the changes under a separate PR - https://github.com/opentofu/opentofu/pull/2673",
        "pr_file_module": null
      }
    ]
  }
]