[
  {
    "discussion_id": "1717121071",
    "pr_number": 46,
    "pr_file": "server/bin/emcie-server",
    "created_at": "2024-08-14T15:12:57+00:00",
    "commented_code": "@asynccontextmanager\n-async def load_app(config: Any) -> AsyncIterator[FastAPI]:\n+async def load_app(params: CLIParams) -> AsyncIterator[FastAPI]:\n     global EXIT_STACK\n \n     EXIT_STACK = AsyncExitStack()\n \n-    async with setup_container(config) as container, EXIT_STACK:\n+    async with setup_container(params.config) as container, EXIT_STACK:\n+        assert await params.indexer.index(container)",
    "repo_full_name": "emcie-co/parlant",
    "discussion_comments": [
      {
        "comment_id": "1717121071",
        "repo_full_name": "emcie-co/parlant",
        "pr_number": 46,
        "pr_file": "server/bin/emcie-server",
        "discussion_id": "1717121071",
        "commented_code": "@@ -210,12 +215,13 @@ async def setup_container(config: Any) -> AsyncIterator[Container]:\n \n \n @asynccontextmanager\n-async def load_app(config: Any) -> AsyncIterator[FastAPI]:\n+async def load_app(params: CLIParams) -> AsyncIterator[FastAPI]:\n     global EXIT_STACK\n \n     EXIT_STACK = AsyncExitStack()\n \n-    async with setup_container(config) as container, EXIT_STACK:\n+    async with setup_container(params.config) as container, EXIT_STACK:\n+        assert await params.indexer.index(container)",
        "comment_created_at": "2024-08-14T15:12:57+00:00",
        "comment_author": "kichanyurd",
        "comment_body": "If this raises an error, we don't want the CLI to \"crash\" in the user's face. We want a clean message that describes what happened and suggests what to do next.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2315305423",
    "pr_number": 529,
    "pr_file": "mypy.ini",
    "created_at": "2025-09-02T08:21:00+00:00",
    "commented_code": "files = src, tests\n disable_error_code = type-abstract\n exclude = scripts\n-plugins = pydantic.mypy",
    "repo_full_name": "emcie-co/parlant",
    "discussion_comments": [
      {
        "comment_id": "2315305423",
        "repo_full_name": "emcie-co/parlant",
        "pr_number": 529,
        "pr_file": "mypy.ini",
        "discussion_id": "2315305423",
        "commented_code": "@@ -7,4 +7,20 @@ mypy_path = src\n files = src, tests\n disable_error_code = type-abstract\n exclude = scripts\n-plugins = pydantic.mypy",
        "comment_created_at": "2025-09-02T08:21:00+00:00",
        "comment_author": "mc-dorzo",
        "comment_body": "We prefer not to apply a blanket ignore_missing_imports for entire modules. Instead, we try to handle the case of missing imports on a case-by-case basis to avoid unintentionally hiding real issues.\r\n",
        "pr_file_module": null
      }
    ]
  }
]