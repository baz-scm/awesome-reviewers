[
  {
    "discussion_id": "2149514734",
    "pr_number": 36313,
    "pr_file": "packages/trace-viewer/src/ui/networkResourceDetails.tsx",
    "created_at": "2025-06-16T09:43:21+00:00",
    "commented_code": ");\n };\n \n+const CollapsibleSection: React.FC<{\n+  title: string;\n+  children: React.ReactNode;\n+  defaultOpen?: boolean;\n+  collapsedSuffix?: React.ReactNode;\n+}> = ({ title, children, defaultOpen = true, collapsedSuffix }) => {\n+  const [isOpen, setIsOpen] = React.useState(defaultOpen);\n+\n+  return (\n+    <div className='network-collapsible-section'>\n+      <div\n+        className='network-collapsible-header'\n+        onClick={() => setIsOpen(!isOpen)}\n+        style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}",
    "repo_full_name": "microsoft/playwright",
    "discussion_comments": [
      {
        "comment_id": "2149514734",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 36313,
        "pr_file": "packages/trace-viewer/src/ui/networkResourceDetails.tsx",
        "discussion_id": "2149514734",
        "commented_code": "@@ -103,33 +103,111 @@ const CopyDropdown: React.FC<{\n   );\n };\n \n+const CollapsibleSection: React.FC<{\n+  title: string;\n+  children: React.ReactNode;\n+  defaultOpen?: boolean;\n+  collapsedSuffix?: React.ReactNode;\n+}> = ({ title, children, defaultOpen = true, collapsedSuffix }) => {\n+  const [isOpen, setIsOpen] = React.useState(defaultOpen);\n+\n+  return (\n+    <div className='network-collapsible-section'>\n+      <div\n+        className='network-collapsible-header'\n+        onClick={() => setIsOpen(!isOpen)}\n+        style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}",
        "comment_created_at": "2025-06-16T09:43:21+00:00",
        "comment_author": "yasboyman",
        "comment_body": "Could these inline styles please be added to the stylesheet instead of in-line styles",
        "pr_file_module": null
      },
      {
        "comment_id": "2151805281",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 36313,
        "pr_file": "packages/trace-viewer/src/ui/networkResourceDetails.tsx",
        "discussion_id": "2149514734",
        "commented_code": "@@ -103,33 +103,111 @@ const CopyDropdown: React.FC<{\n   );\n };\n \n+const CollapsibleSection: React.FC<{\n+  title: string;\n+  children: React.ReactNode;\n+  defaultOpen?: boolean;\n+  collapsedSuffix?: React.ReactNode;\n+}> = ({ title, children, defaultOpen = true, collapsedSuffix }) => {\n+  const [isOpen, setIsOpen] = React.useState(defaultOpen);\n+\n+  return (\n+    <div className='network-collapsible-section'>\n+      <div\n+        className='network-collapsible-header'\n+        onClick={() => setIsOpen(!isOpen)}\n+        style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}",
        "comment_created_at": "2025-06-17T09:35:46+00:00",
        "comment_author": "Nihal-Kumar",
        "comment_body": "Updated",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2009799454",
    "pr_number": 35255,
    "pr_file": "packages/trace-viewer/src/ui/browserFrame.tsx",
    "created_at": "2025-03-24T09:33:26+00:00",
    "commented_code": "import './browserFrame.css';\n import * as React from 'react';\n+import { useState } from 'react';\n+import { CopyToClipboard } from './copyToClipboard';\n \n export const BrowserFrame: React.FunctionComponent<{\n   url?: string,\n-}> = ({ url }) => {\n+}> = ({ url }): React.ReactElement => {\n+  const [isHovered, setIsHovered] = useState(false);",
    "repo_full_name": "microsoft/playwright",
    "discussion_comments": [
      {
        "comment_id": "2009799454",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 35255,
        "pr_file": "packages/trace-viewer/src/ui/browserFrame.tsx",
        "discussion_id": "2009799454",
        "commented_code": "@@ -16,17 +16,31 @@\n \n import './browserFrame.css';\n import * as React from 'react';\n+import { useState } from 'react';\n+import { CopyToClipboard } from './copyToClipboard';\n \n export const BrowserFrame: React.FunctionComponent<{\n   url?: string,\n-}> = ({ url }) => {\n+}> = ({ url }): React.ReactElement => {\n+  const [isHovered, setIsHovered] = useState(false);",
        "comment_created_at": "2025-03-24T09:33:26+00:00",
        "comment_author": "dgozman",
        "comment_body": "Instead of `useState()` and listening to mouseenter/mouseleave, perhaps we can just use css `:hover` to make the button visible on hover?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2018440527",
    "pr_number": 35366,
    "pr_file": "packages/trace-viewer/src/ui/networkResourceDetails.tsx",
    "created_at": "2025-03-28T11:04:42+00:00",
    "commented_code": "setSelectedTab={setSelectedTab} />;\n };\n \n+\n+const CopyDropdown: React.FC<{\n+  resource: Entry,\n+  sdkLanguage: Language,\n+  requestBody: RequestBody,\n+}> = ({ resource, sdkLanguage, requestBody }) => {\n+  const [isOpen, setIsOpen] = React.useState(false);\n+\n+  const copiedDescription = <><span className='codicon codicon-check' style={{ marginRight: '5px' }} /> Copied </>;\n+  const copyAsPlaywright = async () => getAPIRequestCodeGen(sdkLanguage).generatePlaywrightRequestCall(resource.request, requestBody?.text);\n+  return (\n+    <div className='copy-request-dropdown' onMouseLeave={() => setIsOpen(false)} onMouseEnter={() => setIsOpen(true)}>\n+      <ToolbarButton className='copy-request-dropdown-toggle'>\n+        <span className='codicon codicon-copy' style={{ marginRight: '5px' }}/>\n+        Copy request\n+        <span className='codicon codicon-chevron-down' style={{ marginLeft: '5px' }}/>\n+      </ToolbarButton>\n+\n+      {isOpen && (",
    "repo_full_name": "microsoft/playwright",
    "discussion_comments": [
      {
        "comment_id": "2018440527",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 35366,
        "pr_file": "packages/trace-viewer/src/ui/networkResourceDetails.tsx",
        "discussion_id": "2018440527",
        "commented_code": "@@ -58,31 +82,40 @@ export const NetworkResourceDetails: React.FunctionComponent<{\n     setSelectedTab={setSelectedTab} />;\n };\n \n+\n+const CopyDropdown: React.FC<{\n+  resource: Entry,\n+  sdkLanguage: Language,\n+  requestBody: RequestBody,\n+}> = ({ resource, sdkLanguage, requestBody }) => {\n+  const [isOpen, setIsOpen] = React.useState(false);\n+\n+  const copiedDescription = <><span className='codicon codicon-check' style={{ marginRight: '5px' }} /> Copied </>;\n+  const copyAsPlaywright = async () => getAPIRequestCodeGen(sdkLanguage).generatePlaywrightRequestCall(resource.request, requestBody?.text);\n+  return (\n+    <div className='copy-request-dropdown' onMouseLeave={() => setIsOpen(false)} onMouseEnter={() => setIsOpen(true)}>\n+      <ToolbarButton className='copy-request-dropdown-toggle'>\n+        <span className='codicon codicon-copy' style={{ marginRight: '5px' }}/>\n+        Copy request\n+        <span className='codicon codicon-chevron-down' style={{ marginLeft: '5px' }}/>\n+      </ToolbarButton>\n+\n+      {isOpen && (",
        "comment_created_at": "2025-03-28T11:04:42+00:00",
        "comment_author": "dgozman",
        "comment_body": "I wonder whether the whole `isOpen` tracking can be replaced with\r\n```css\r\n.copy-request-dropdown:not(:hover) .copy-request-dropdown-menu {\r\n  display: none;\r\n}\r\n```",
        "pr_file_module": null
      }
    ]
  }
]