[
  {
    "discussion_id": "2020530079",
    "pr_number": 35409,
    "pr_file": "docs/src/auth.md",
    "created_at": "2025-03-31T07:32:21+00:00",
    "commented_code": "We recommend to create `playwright/.auth` directory and add it to your `.gitignore`. Your authentication routine will produce authenticated browser state and save it to a file in this `playwright/.auth` directory. Later on, tests will reuse this state and start already authenticated.\n \n+:::danger\n+The browser state file may contain sensitive cookies and headers that could be used to impersonate you or your test account.\n+We strongly discourage checking them into private or public repositories.",
    "repo_full_name": "microsoft/playwright",
    "discussion_comments": [
      {
        "comment_id": "2020530079",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 35409,
        "pr_file": "docs/src/auth.md",
        "discussion_id": "2020530079",
        "commented_code": "@@ -13,6 +13,11 @@ Regardless of the authentication strategy you choose, you are likely to store au\n \n We recommend to create `playwright/.auth` directory and add it to your `.gitignore`. Your authentication routine will produce authenticated browser state and save it to a file in this `playwright/.auth` directory. Later on, tests will reuse this state and start already authenticated.\n \n+:::danger\n+The browser state file may contain sensitive cookies and headers that could be used to impersonate you or your test account.\n+We strongly discourage checking them into private or public repositories.",
        "comment_created_at": "2025-03-31T07:32:21+00:00",
        "comment_author": "mxschmitt",
        "comment_body": "```suggestion\r\nWe strongly discourage checking them into private or public repositories and adding it to your `.gitignore` file.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2020533614",
    "pr_number": 35409,
    "pr_file": "docs/src/auth.md",
    "created_at": "2025-03-31T07:35:33+00:00",
    "commented_code": "We recommend to create `playwright/.auth` directory and add it to your `.gitignore`. Your authentication routine will produce authenticated browser state and save it to a file in this `playwright/.auth` directory. Later on, tests will reuse this state and start already authenticated.\n \n+:::danger",
    "repo_full_name": "microsoft/playwright",
    "discussion_comments": [
      {
        "comment_id": "2020533614",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 35409,
        "pr_file": "docs/src/auth.md",
        "discussion_id": "2020533614",
        "commented_code": "@@ -13,6 +13,11 @@ Regardless of the authentication strategy you choose, you are likely to store au\n \n We recommend to create `playwright/.auth` directory and add it to your `.gitignore`. Your authentication routine will produce authenticated browser state and save it to a file in this `playwright/.auth` directory. Later on, tests will reuse this state and start already authenticated.\n \n+:::danger",
        "comment_created_at": "2025-03-31T07:35:33+00:00",
        "comment_author": "dgozman",
        "comment_body": "I would love the auth guide to not have a BIG RED WARNING on the first page!",
        "pr_file_module": null
      },
      {
        "comment_id": "2021314087",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 35409,
        "pr_file": "docs/src/auth.md",
        "discussion_id": "2020533614",
        "commented_code": "@@ -13,6 +13,11 @@ Regardless of the authentication strategy you choose, you are likely to store au\n \n We recommend to create `playwright/.auth` directory and add it to your `.gitignore`. Your authentication routine will produce authenticated browser state and save it to a file in this `playwright/.auth` directory. Later on, tests will reuse this state and start already authenticated.\n \n+:::danger",
        "comment_created_at": "2025-03-31T15:57:04+00:00",
        "comment_author": "rwoll",
        "comment_body": "It's big red warning worthy, IMO. I don't suggest it lightly and do appreciate not wanting to decorate the docs with a bunch of warnings. However, the consequence of checking these auth files in under many circumstances is full account takeover, and there's evidence many folks are not aware of the risks of checking these in.\r\n\r\nThat being said, perhaps there's something we could implement to make it safe(r)-by-default.\r\n\r\nSome alternative ideas I had (with various degrees of effectiveness vs. implementationd difficulty vs. DX):\r\n\r\n1. Add `playwright/.auth` to the Create Playwright template, and hope folks heed the recommendation to put this files in the `.auth/` directory.\r\n2.  Have some sort of explicit safelist for headers that the user could configure with everything off-by-default if \u2014 and only if \u2014 playwright detects the file is not in `.gitignore`.\r\n3. Provide users a specific API for marking sensitive state files and ensure PW puts them in a location *outside the tree*<sup>1</sup>:\r\n\r\n    ```\r\n    {\r\n      name: 'firefox',\r\n      use: {\r\n        ...devices['Desktop Firefox'],\r\n        // Use prepared auth state.\r\n        storageState: { sensitive: true, 'playwright/.auth/user.json' },\r\n      },\r\n      dependencies: ['setup'],\r\n    },\r\n    ```\r\n\r\n<sup>1</sup>: It's important they are put outside the working directory/tree since some folks will decide to by default upload the entire `plawright/*` directory as a build artifact and it would be bad if these files were slurped up into it.\r\n\r\nwdyt? My vote would be something like #3.",
        "pr_file_module": null
      },
      {
        "comment_id": "2021331555",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 35409,
        "pr_file": "docs/src/auth.md",
        "discussion_id": "2020533614",
        "commented_code": "@@ -13,6 +13,11 @@ Regardless of the authentication strategy you choose, you are likely to store au\n \n We recommend to create `playwright/.auth` directory and add it to your `.gitignore`. Your authentication routine will produce authenticated browser state and save it to a file in this `playwright/.auth` directory. Later on, tests will reuse this state and start already authenticated.\n \n+:::danger",
        "comment_created_at": "2025-03-31T16:05:22+00:00",
        "comment_author": "rwoll",
        "comment_body": "@dgozman - or perhaps it could be as simple as:\r\n\r\n1. Do not add the big red warning,\r\n2. But update the example docs to have the user store the files in a temp dir:\r\n\r\n```\r\n    {\r\n      name: 'firefox',\r\n      use: {\r\n        ...devices['Desktop Firefox'],\r\n        // Use prepared auth state.\r\n        storageState: `${mkdirtemp()}/playwright/.auth/user.json`,\r\n      },\r\n      dependencies: ['setup'],\r\n    },\r\n  ],\r\n```",
        "pr_file_module": null
      }
    ]
  }
]