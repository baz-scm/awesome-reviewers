[
  {
    "discussion_id": "2268868881",
    "pr_number": 36987,
    "pr_file": "docs/src/intro-js.md",
    "created_at": "2025-08-12T07:21:14+00:00",
    "commented_code": "</Tabs>\n \n-![tests running in command line](https://github.com/microsoft/playwright/assets/13063165/981c1b2b-dc7e-4b85-b241-272b44da6628)\n-See our doc on [Running Tests](./running-tests.md) to learn more about running tests in headed mode, running multiple tests, running specific tests etc.\n+![tests running in command line](./images/getting-started/run-tests-cli.png)\n+\n+Tips:\n+- See the browser window: add `--headed`.\n+- Run a single project/browser: `--project=chromium`.\n+- Run one file: `npx playwright test tests/example.spec.ts`.\n+- List tests without running: `--list`.",
    "repo_full_name": "microsoft/playwright",
    "discussion_comments": [
      {
        "comment_id": "2268868881",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 36987,
        "pr_file": "docs/src/intro-js.md",
        "discussion_id": "2268868881",
        "commented_code": "@@ -125,12 +126,19 @@ pnpm exec playwright test\n \n </Tabs>\n \n-![tests running in command line](https://github.com/microsoft/playwright/assets/13063165/981c1b2b-dc7e-4b85-b241-272b44da6628)\n-See our doc on [Running Tests](./running-tests.md) to learn more about running tests in headed mode, running multiple tests, running specific tests etc.\n+![tests running in command line](./images/getting-started/run-tests-cli.png)\n+\n+Tips:\n+- See the browser window: add `--headed`.\n+- Run a single project/browser: `--project=chromium`.\n+- Run one file: `npx playwright test tests/example.spec.ts`.\n+- List tests without running: `--list`.",
        "comment_created_at": "2025-08-12T07:21:14+00:00",
        "comment_author": "dgozman",
        "comment_body": "I don't think `--list` is ever used by most testers.\r\n\r\n```suggestion\r\n- Open testing UI: `--ui`.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1674092708",
    "pr_number": 30962,
    "pr_file": "docs/src/test-api/class-testconfig.md",
    "created_at": "2024-07-11T14:14:29+00:00",
    "commented_code": "```\n \n \n+## property: TestConfig.shardingMode\n+\n+* since: v1.46\n+- type: ?<[ShardingMode]<\"partition\"|\"round-robin\"|\"duration-round-robin\">>\n+\n+Defines the algorithm to be used for sharding. Defaults to `'partition'`.\n+* `'partition'` - divide the set of test groups by number of shards. e.g. first\n+  half goes to shard 1/2 and seconds half to shard 2/2.\n+* `'round-robin'` - spread test groups to shards in a round-robin way. e.g. loop",
    "repo_full_name": "microsoft/playwright",
    "discussion_comments": [
      {
        "comment_id": "1674092708",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 30962,
        "pr_file": "docs/src/test-api/class-testconfig.md",
        "discussion_id": "1674092708",
        "commented_code": "@@ -482,6 +482,27 @@ export default defineConfig({\n ```\n \n \n+## property: TestConfig.shardingMode\n+\n+* since: v1.46\n+- type: ?<[ShardingMode]<\"partition\"|\"round-robin\"|\"duration-round-robin\">>\n+\n+Defines the algorithm to be used for sharding. Defaults to `'partition'`.\n+* `'partition'` - divide the set of test groups by number of shards. e.g. first\n+  half goes to shard 1/2 and seconds half to shard 2/2.\n+* `'round-robin'` - spread test groups to shards in a round-robin way. e.g. loop",
        "comment_created_at": "2024-07-11T14:14:29+00:00",
        "comment_author": "dgozman",
        "comment_body": "I feel like this is not a really useful strategy, because it is not stable. Whenever I add a test or move it between files, all my shards will be completely new. This introduces a lot of variability on CI, which from our experience is something to avoid. I wonder whether we can make this stable somehow?",
        "pr_file_module": null
      },
      {
        "comment_id": "1678937472",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 30962,
        "pr_file": "docs/src/test-api/class-testconfig.md",
        "discussion_id": "1674092708",
        "commented_code": "@@ -482,6 +482,27 @@ export default defineConfig({\n ```\n \n \n+## property: TestConfig.shardingMode\n+\n+* since: v1.46\n+- type: ?<[ShardingMode]<\"partition\"|\"round-robin\"|\"duration-round-robin\">>\n+\n+Defines the algorithm to be used for sharding. Defaults to `'partition'`.\n+* `'partition'` - divide the set of test groups by number of shards. e.g. first\n+  half goes to shard 1/2 and seconds half to shard 2/2.\n+* `'round-robin'` - spread test groups to shards in a round-robin way. e.g. loop",
        "comment_created_at": "2024-07-16T07:59:07+00:00",
        "comment_author": "muhqu",
        "comment_body": "In my current project `round-robin` yields much better distribution than `partition`. Here is why, our tests are organised something like this (simplified)\u2026\r\n```\r\ntests/framework/toolbar.test.ts\r\ntests/framework/stage.test.ts\r\ntests/logged-in/login-free.test.ts\r\ntests/logged-in/login-premium.test.ts\r\ntests/logged-in/premium-upsell.test.ts\r\ntests/logged-out/view-only.test.ts\r\ntests/logged-out/seo.test.ts\r\n```\r\n\r\nOur framework tests are pretty exhaustive and take the most time. The logged-in tests require more time than logged-out tests due to additional bootstrap and teardown. By using the `partition` algorithm the first shards require significantly more time as they have all the long-tests from either framework or logged-in suites. With `round-robin` we're already achieving a much better balanced overall runtime, even though the algorithm doesn't know anything about per test duration.\r\n\r\nI don't feel like the round-robin algorithm is \"not stable\". It's deterministic, given the same set of tests it always yields the same result. Also I think in CI there should be no assumption that one test goes after another, unless they are explicitly configured to execute sequentially within the same test group.",
        "pr_file_module": null
      },
      {
        "comment_id": "1678948534",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 30962,
        "pr_file": "docs/src/test-api/class-testconfig.md",
        "discussion_id": "1674092708",
        "commented_code": "@@ -482,6 +482,27 @@ export default defineConfig({\n ```\n \n \n+## property: TestConfig.shardingMode\n+\n+* since: v1.46\n+- type: ?<[ShardingMode]<\"partition\"|\"round-robin\"|\"duration-round-robin\">>\n+\n+Defines the algorithm to be used for sharding. Defaults to `'partition'`.\n+* `'partition'` - divide the set of test groups by number of shards. e.g. first\n+  half goes to shard 1/2 and seconds half to shard 2/2.\n+* `'round-robin'` - spread test groups to shards in a round-robin way. e.g. loop",
        "comment_created_at": "2024-07-16T08:07:20+00:00",
        "comment_author": "dgozman",
        "comment_body": "I guess that's fair. If you would like to opt-in into `round-robin` and it works for you, that's great. I still think it is less stable than I would prefer, but it doesn't hurt to have it as an option anyway.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2067290452",
    "pr_number": 35802,
    "pr_file": "docs/src/accessibility-testing-js.md",
    "created_at": "2025-04-29T20:00:50+00:00",
    "commented_code": "const accessibilityScanResults = await new AxeBuilder({ page }).analyze(); // 4\n \n-    expect(accessibilityScanResults.violations).toEqual([]); // 5\n+    expect(accessibilityScanResults.violations).toStrictEqual([]); // 5",
    "repo_full_name": "microsoft/playwright",
    "discussion_comments": [
      {
        "comment_id": "2067290452",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 35802,
        "pr_file": "docs/src/accessibility-testing-js.md",
        "discussion_id": "2067290452",
        "commented_code": "@@ -44,7 +44,7 @@ test.describe('homepage', () => { // 2\n \n     const accessibilityScanResults = await new AxeBuilder({ page }).analyze(); // 4\n \n-    expect(accessibilityScanResults.violations).toEqual([]); // 5\n+    expect(accessibilityScanResults.violations).toStrictEqual([]); // 5",
        "comment_created_at": "2025-04-29T20:00:50+00:00",
        "comment_author": "mxschmitt",
        "comment_body": "I think usually we recommend `toEqual` in these cases - could you change it to these?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1988244266",
    "pr_number": 35109,
    "pr_file": "docs/src/test-api/class-testconfig.md",
    "created_at": "2025-03-11T01:55:36+00:00",
    "commented_code": "});\n ```\n \n+## property: TestConfig.failOnFlakyTests\n+* since: v1.52\n+- type: ?<[boolean]>\n+\n+Whether to exit with an error if any tests are marked as flaky. Useful on CI.\n+\n+Also available in the [command line](../test-cli.md) with the `--fail-on-flaky-tests` option.\n+\n+**Usage**\n+\n+```js title=\"playwright.config.ts\"\n+import { defineConfig } from '@playwright/test';\n+\n+export default defineConfig({\n+  failOnFlakyTests: !!process.env.CI,",
    "repo_full_name": "microsoft/playwright",
    "discussion_comments": [
      {
        "comment_id": "1988244266",
        "repo_full_name": "microsoft/playwright",
        "pr_number": 35109,
        "pr_file": "docs/src/test-api/class-testconfig.md",
        "discussion_id": "1988244266",
        "commented_code": "@@ -108,6 +108,24 @@ export default defineConfig({\n });\n ```\n \n+## property: TestConfig.failOnFlakyTests\n+* since: v1.52\n+- type: ?<[boolean]>\n+\n+Whether to exit with an error if any tests are marked as flaky. Useful on CI.\n+\n+Also available in the [command line](../test-cli.md) with the `--fail-on-flaky-tests` option.\n+\n+**Usage**\n+\n+```js title=\"playwright.config.ts\"\n+import { defineConfig } from '@playwright/test';\n+\n+export default defineConfig({\n+  failOnFlakyTests: !!process.env.CI,",
        "comment_created_at": "2025-03-11T01:55:36+00:00",
        "comment_author": "pavelfeldman",
        "comment_body": "I don't think allowing flakiness locally and not allowing it on CI would make sense, I'd set it to true.\r\n",
        "pr_file_module": null
      }
    ]
  }
]