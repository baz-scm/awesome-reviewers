[
  {
    "discussion_id": "985250476",
    "pr_number": 6679,
    "pr_file": "src/poetry/puzzle/provider.py",
    "created_at": "2022-10-02T14:48:26+00:00",
    "commented_code": "self._io.write(debug_info)\n \n+    def _group_by_source(",
    "repo_full_name": "python-poetry/poetry",
    "discussion_comments": [
      {
        "comment_id": "985250476",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 6679,
        "pr_file": "src/poetry/puzzle/provider.py",
        "discussion_id": "985250476",
        "commented_code": "@@ -947,6 +940,22 @@ def debug(self, message: str, depth: int = 0) -> None:\n \n             self._io.write(debug_info)\n \n+    def _group_by_source(",
        "comment_created_at": "2022-10-02T14:48:26+00:00",
        "comment_author": "neersighted",
        "comment_body": "I just realized we don't have a docstring here -- could you add one describing the intention of this method and how it's meant to be used?\r\n\r\nThe battle against no source code level documentation starts on each PR :smile:",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "985250548",
    "pr_number": 6679,
    "pr_file": "src/poetry/puzzle/provider.py",
    "created_at": "2022-10-02T14:49:01+00:00",
    "commented_code": "self.debug(f\"<debug>Duplicate dependencies for {dep_name}</debug>\")\n \n-            non_direct_origin_deps: list[Dependency] = []\n-            direct_origin_deps: list[Dependency] = []\n-            for dep in deps:\n-                if dep.is_direct_origin():\n-                    direct_origin_deps.append(dep)\n-                else:\n-                    non_direct_origin_deps.append(dep)\n-            deps = (\n-                self._merge_dependencies_by_constraint(\n-                    self._merge_dependencies_by_marker(non_direct_origin_deps)\n+            dep_groups = self._group_by_source(deps)",
    "repo_full_name": "python-poetry/poetry",
    "discussion_comments": [
      {
        "comment_id": "985250548",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 6679,
        "pr_file": "src/poetry/puzzle/provider.py",
        "discussion_id": "985250548",
        "commented_code": "@@ -670,19 +670,12 @@ def complete_package(\n \n             self.debug(f\"<debug>Duplicate dependencies for {dep_name}</debug>\")\n \n-            non_direct_origin_deps: list[Dependency] = []\n-            direct_origin_deps: list[Dependency] = []\n-            for dep in deps:\n-                if dep.is_direct_origin():\n-                    direct_origin_deps.append(dep)\n-                else:\n-                    non_direct_origin_deps.append(dep)\n-            deps = (\n-                self._merge_dependencies_by_constraint(\n-                    self._merge_dependencies_by_marker(non_direct_origin_deps)\n+            dep_groups = self._group_by_source(deps)",
        "comment_created_at": "2022-10-02T14:49:01+00:00",
        "comment_author": "neersighted",
        "comment_body": "Similarly, a comment describing the intended merge logic (and why) would be valuable here. This refactoring is much more readable than the old version, and a comment will make it so even new contributors can digest it.",
        "pr_file_module": null
      }
    ]
  }
]