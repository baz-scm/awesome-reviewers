[
  {
    "discussion_id": "1912616101",
    "pr_number": 9805,
    "pr_file": "src/poetry/config/config.py",
    "created_at": "2025-01-13T02:51:09+00:00",
    "commented_code": "\"keyring\": {\n             \"enabled\": True,\n         },\n+        \"system-truststore\": True,",
    "repo_full_name": "python-poetry/poetry",
    "discussion_comments": [
      {
        "comment_id": "1912616101",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 9805,
        "pr_file": "src/poetry/config/config.py",
        "discussion_id": "1912616101",
        "commented_code": "@@ -135,6 +135,7 @@ class Config:\n         \"keyring\": {\n             \"enabled\": True,\n         },\n+        \"system-truststore\": True,",
        "comment_created_at": "2025-01-13T02:51:09+00:00",
        "comment_author": "abn",
        "comment_body": "Default to `False`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1913113608",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 9805,
        "pr_file": "src/poetry/config/config.py",
        "discussion_id": "1912616101",
        "commented_code": "@@ -135,6 +135,7 @@ class Config:\n         \"keyring\": {\n             \"enabled\": True,\n         },\n+        \"system-truststore\": True,",
        "comment_created_at": "2025-01-13T12:27:43+00:00",
        "comment_author": "Secrus",
        "comment_body": "I can agree, but if we go with `False`, we should set a date for when it goes `True` by default. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1916632604",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 9805,
        "pr_file": "src/poetry/config/config.py",
        "discussion_id": "1912616101",
        "commented_code": "@@ -135,6 +135,7 @@ class Config:\n         \"keyring\": {\n             \"enabled\": True,\n         },\n+        \"system-truststore\": True,",
        "comment_created_at": "2025-01-15T13:14:34+00:00",
        "comment_author": "Secrus",
        "comment_body": "Switched and added a TODO with a flip date proposal.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1632029695",
    "pr_number": 9422,
    "pr_file": "src/poetry/config/config.py",
    "created_at": "2024-06-08T11:42:44+00:00",
    "commented_code": "\"modern-installation\": True,\n             \"parallel\": True,\n             \"max-workers\": None,\n+            \"max-retries\": 0,",
    "repo_full_name": "python-poetry/poetry",
    "discussion_comments": [
      {
        "comment_id": "1632029695",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 9422,
        "pr_file": "src/poetry/config/config.py",
        "discussion_id": "1632029695",
        "commented_code": "@@ -131,6 +131,7 @@ class Config:\n             \"modern-installation\": True,\n             \"parallel\": True,\n             \"max-workers\": None,\n+            \"max-retries\": 0,",
        "comment_created_at": "2024-06-08T11:42:44+00:00",
        "comment_author": "radoering",
        "comment_body": "You have to add this setting in two more places:\r\n\r\n- Some lines below in `_get_normalizer`\r\n- In `ConfigCommand.unique_config_values`",
        "pr_file_module": null
      },
      {
        "comment_id": "1635653489",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 9422,
        "pr_file": "src/poetry/config/config.py",
        "discussion_id": "1632029695",
        "commented_code": "@@ -131,6 +131,7 @@ class Config:\n             \"modern-installation\": True,\n             \"parallel\": True,\n             \"max-workers\": None,\n+            \"max-retries\": 0,",
        "comment_created_at": "2024-06-12T01:11:23+00:00",
        "comment_author": "austinzh",
        "comment_body": "Done.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1155307133",
    "pr_number": 7658,
    "pr_file": "src/poetry/factory.py",
    "created_at": "2023-04-02T12:57:50+00:00",
    "commented_code": "repository = cls.create_package_source(\n                 source, auth_config, disable_cache=disable_cache\n             )\n-            is_default = source.get(\"default\", False)\n-            is_secondary = source.get(\"secondary\", False)\n+            priority = Priority[source.get(\"priority\", Priority.PRIMARY.name).upper()]\n+            if source.get(\"default\") or source.get(\"secondary\"):\n+                warnings.warn(\n+                    (\n+                        \"Found deprecated key 'default' or 'secondary' in\"\n+                        \" pyproject.toml configuration for source\"\n+                        f\" {source.get('name')}. Please provide the key 'priority'\"\n+                        \" instead. Accepted values are:\"\n+                        f\" {', '.join(p.name.lower() for p in Priority)}.\"\n+                    ),\n+                    DeprecationWarning,\n+                    stacklevel=2,\n+                )",
    "repo_full_name": "python-poetry/poetry",
    "discussion_comments": [
      {
        "comment_id": "1155307133",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 7658,
        "pr_file": "src/poetry/factory.py",
        "discussion_id": "1155307133",
        "commented_code": "@@ -132,31 +134,52 @@ def create_pool(\n             repository = cls.create_package_source(\n                 source, auth_config, disable_cache=disable_cache\n             )\n-            is_default = source.get(\"default\", False)\n-            is_secondary = source.get(\"secondary\", False)\n+            priority = Priority[source.get(\"priority\", Priority.PRIMARY.name).upper()]\n+            if source.get(\"default\") or source.get(\"secondary\"):\n+                warnings.warn(\n+                    (\n+                        \"Found deprecated key 'default' or 'secondary' in\"\n+                        \" pyproject.toml configuration for source\"\n+                        f\" {source.get('name')}. Please provide the key 'priority'\"\n+                        \" instead. Accepted values are:\"\n+                        f\" {', '.join(p.name.lower() for p in Priority)}.\"\n+                    ),\n+                    DeprecationWarning,\n+                    stacklevel=2,\n+                )",
        "comment_created_at": "2023-04-02T12:57:50+00:00",
        "comment_author": "radoering",
        "comment_body": "```suggestion\r\n                warning = (\r\n                    \"Found deprecated key 'default' or 'secondary' in\"\r\n                    \" pyproject.toml configuration for source\"\r\n                    f\" {source.get('name')}. Please provide the key 'priority'\"\r\n                    \" instead. Accepted values are:\"\r\n                    f\" {', '.join(p.name.lower() for p in Priority)}.\"\r\n                )\r\n                io.write_error_line(\"<warning>Warning: {warning}</warning>\")\r\n```\r\n\r\nor similar.\r\n\r\nDeprecation warnings are for (plugin) developers, but that's something that's relevant for the end user.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1303623894",
    "pr_number": 2813,
    "pr_file": "poetry/installation/authenticator.py",
    "created_at": "2023-08-23T23:00:57+00:00",
    "commented_code": null,
    "repo_full_name": "python-poetry/poetry",
    "discussion_comments": [
      {
        "comment_id": "1303623894",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 2813,
        "pr_file": "poetry/installation/authenticator.py",
        "discussion_id": "1303623894",
        "commented_code": null,
        "comment_created_at": "2023-08-23T23:00:57+00:00",
        "comment_author": "alexanderilyin",
        "comment_body": "It would be great to be able to override retries limit and HTTP statuses via configuration options.",
        "pr_file_module": null
      }
    ]
  }
]