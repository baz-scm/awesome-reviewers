[
  {
    "discussion_id": "1247320846",
    "pr_number": 8146,
    "pr_file": "docs/pre-commit-hooks.md",
    "created_at": "2023-06-30T01:46:30+00:00",
    "commented_code": "`pre-commit autoupdate` updates the `rev` for each repository defined in your `.pre-commit-config.yaml`\n to the latest available tag in the default branch.\n \n-Poetry follows a branching strategy, where the default branch is the active development branch\n-and fixes gets back ported to stable branches. New tags are assigned in these stable branches.\n+Poetry follows a branching strategy where the default branch is the active development branch\n+and, fixes get backported to stable branches. New tags are assigned in these stable branches.",
    "repo_full_name": "python-poetry/poetry",
    "discussion_comments": [
      {
        "comment_id": "1247320846",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 8146,
        "pr_file": "docs/pre-commit-hooks.md",
        "discussion_id": "1247320846",
        "commented_code": "@@ -109,16 +109,16 @@ repos:\n `pre-commit autoupdate` updates the `rev` for each repository defined in your `.pre-commit-config.yaml`\n to the latest available tag in the default branch.\n \n-Poetry follows a branching strategy, where the default branch is the active development branch\n-and fixes gets back ported to stable branches. New tags are assigned in these stable branches.\n+Poetry follows a branching strategy where the default branch is the active development branch\n+and, fixes get backported to stable branches. New tags are assigned in these stable branches.",
        "comment_created_at": "2023-06-30T01:46:30+00:00",
        "comment_author": "MicaelJarniac",
        "comment_body": "```suggestion\r\nPoetry follows a branching strategy where the default branch is the active development branch,\r\nand fixes get backported to stable branches. New tags are assigned in these stable branches.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1443136250",
    "pr_number": 8658,
    "pr_file": "docs/faq.md",
    "created_at": "2024-01-05T17:13:18+00:00",
    "commented_code": "### Is tox supported?\n \n-**Yes**. By using the [isolated builds](https://tox.readthedocs.io/en/latest/config.html#conf-isolated_build) `tox` provides,\n-you can use it in combination with the PEP 517 compliant build system provided by Poetry.\n+**Yes**. Provided that you are using `tox` > 4, you can use it in combination with the PEP 517 compliant build system\n+provided by Poetry.",
    "repo_full_name": "python-poetry/poetry",
    "discussion_comments": [
      {
        "comment_id": "1443136250",
        "repo_full_name": "python-poetry/poetry",
        "pr_number": 8658,
        "pr_file": "docs/faq.md",
        "discussion_id": "1443136250",
        "commented_code": "@@ -83,8 +83,8 @@ If your package will be used as an application, it might be worth to define an u\n \n ### Is tox supported?\n \n-**Yes**. By using the [isolated builds](https://tox.readthedocs.io/en/latest/config.html#conf-isolated_build) `tox` provides,\n-you can use it in combination with the PEP 517 compliant build system provided by Poetry.\n+**Yes**. Provided that you are using `tox` > 4, you can use it in combination with the PEP 517 compliant build system\n+provided by Poetry.",
        "comment_created_at": "2024-01-05T17:13:18+00:00",
        "comment_author": "radoering",
        "comment_body": "```suggestion\r\n**Yes**. Provided that you are using `tox` >= 4, you can use it in combination with\r\nthe PEP 517 compliant build system provided by Poetry. (With tox 3, you have to set the \r\n[isolated build](https://tox.wiki/en/3.27.1/config.html#conf-isolated_build) option.)\r\n```",
        "pr_file_module": null
      }
    ]
  }
]