[
  {
    "discussion_id": "2093248756",
    "pr_number": 22749,
    "pr_file": "py-polars/polars/series/list.py",
    "created_at": "2025-05-16T15:17:51+00:00",
    "commented_code": "expr",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "2093248756",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 22749,
        "pr_file": "py-polars/polars/series/list.py",
        "discussion_id": "2093248756",
        "commented_code": "@@ -965,12 +965,6 @@ def filter(self, predicate: Expr, *, parallel: bool = False) -> Series:\n         expr",
        "comment_created_at": "2025-05-16T15:17:51+00:00",
        "comment_author": "orlp",
        "comment_body": "I didn't notice this last time, but I think this should be `predicate` instead of `expr` as well.",
        "pr_file_module": null
      },
      {
        "comment_id": "2094629301",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 22749,
        "pr_file": "py-polars/polars/series/list.py",
        "discussion_id": "2093248756",
        "commented_code": "@@ -965,12 +965,6 @@ def filter(self, predicate: Expr, *, parallel: bool = False) -> Series:\n         expr",
        "comment_created_at": "2025-05-18T21:20:48+00:00",
        "comment_author": "florian-klein",
        "comment_body": "Good catch! I missed that when refactoring; double-checked and everything should be `predicate` now ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1995692408",
    "pr_number": 21675,
    "pr_file": "py-polars/polars/plugins.py",
    "created_at": "2025-03-14T14:32:01+00:00",
    "commented_code": "cast_to_supertype: bool = False,\n     input_wildcard_expansion: bool = False,\n     pass_name_to_apply: bool = False,\n+    use_abspath: bool = False,",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1995692408",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 21675,
        "pr_file": "py-polars/polars/plugins.py",
        "discussion_id": "1995692408",
        "commented_code": "@@ -32,6 +33,7 @@ def register_plugin_function(\n     cast_to_supertype: bool = False,\n     input_wildcard_expansion: bool = False,\n     pass_name_to_apply: bool = False,\n+    use_abspath: bool = False,",
        "comment_created_at": "2025-03-14T14:32:01+00:00",
        "comment_author": "ritchie46",
        "comment_body": "`use_abs_path`.\r\n\r\nWe have a convention that separate words are `_` separated. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1996679885",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 21675,
        "pr_file": "py-polars/polars/plugins.py",
        "discussion_id": "1995692408",
        "commented_code": "@@ -32,6 +33,7 @@ def register_plugin_function(\n     cast_to_supertype: bool = False,\n     input_wildcard_expansion: bool = False,\n     pass_name_to_apply: bool = False,\n+    use_abspath: bool = False,",
        "comment_created_at": "2025-03-15T09:12:43+00:00",
        "comment_author": "anath2",
        "comment_body": "Fixed 👍 ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1867158117",
    "pr_number": 20026,
    "pr_file": "py-polars/polars/_typing.py",
    "created_at": "2024-12-03T07:08:40+00:00",
    "commented_code": "IpcCompression: TypeAlias = Literal[\"uncompressed\", \"lz4\", \"zstd\"]\n JoinValidation: TypeAlias = Literal[\"m:m\", \"m:1\", \"1:m\", \"1:1\"]\n Label: TypeAlias = Literal[\"left\", \"right\", \"datapoint\"]\n+MaintainOrder: TypeAlias = Literal[\"none\", \"left\", \"right\", \"left_right\", \"right_left\"]",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1867158117",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 20026,
        "pr_file": "py-polars/polars/_typing.py",
        "discussion_id": "1867158117",
        "commented_code": "@@ -108,6 +108,7 @@ def __arrow_c_stream__(self, requested_schema: object | None = None) -> object:\n IpcCompression: TypeAlias = Literal[\"uncompressed\", \"lz4\", \"zstd\"]\n JoinValidation: TypeAlias = Literal[\"m:m\", \"m:1\", \"1:m\", \"1:1\"]\n Label: TypeAlias = Literal[\"left\", \"right\", \"datapoint\"]\n+MaintainOrder: TypeAlias = Literal[\"none\", \"left\", \"right\", \"left_right\", \"right_left\"]",
        "comment_created_at": "2024-12-03T07:08:40+00:00",
        "comment_author": "ritchie46",
        "comment_body": "Can we use python `None`  directly (so not part of this set.\r\n\r\nThe argument then becomes `arg: MaintainOrder | None`\r\n\r\nPS. I also think we should name it `MaintainOrderJoin`",
        "pr_file_module": null
      }
    ]
  }
]