[
  {
    "discussion_id": "1929350904",
    "pr_number": 20904,
    "pr_file": "py-polars/polars/dataframe/plotting/plotting.py",
    "created_at": "2025-01-24T23:14:57+00:00",
    "commented_code": "class DataFramePlot:\n     \"\"\"DataFrame.plot namespace.\"\"\"\n \n+    def __init__(self, df: DataFrame, backend: str | None = None) -> None:\n+        self._df = df\n+        # TODO: add config for backend\n+        if backend is None and \"POLARS_PLOTTING_BACKEND\" in os.environ:",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1929350904",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 20904,
        "pr_file": "py-polars/polars/dataframe/plotting/plotting.py",
        "discussion_id": "1929350904",
        "commented_code": "@@ -34,6 +34,38 @@\n class DataFramePlot:\n     \"\"\"DataFrame.plot namespace.\"\"\"\n \n+    def __init__(self, df: DataFrame, backend: str | None = None) -> None:\n+        self._df = df\n+        # TODO: add config for backend\n+        if backend is None and \"POLARS_PLOTTING_BACKEND\" in os.environ:",
        "comment_created_at": "2025-01-24T23:14:57+00:00",
        "comment_author": "deanm0000",
        "comment_body": "I guess it should track if its picking backend from parameter or env. That way we raise from`df.plot(backend=\"plotly\").alt.line(...)` for the inconsistency.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1979813620",
    "pr_number": 20717,
    "pr_file": "py-polars/polars/lazyframe/frame.py",
    "created_at": "2025-03-04T16:32:47+00:00",
    "commented_code": "collapse_joins: bool = True,\n         no_optimization: bool = False,\n         streaming: bool = False,\n-        engine: EngineType = \"cpu\",\n+        engine: None | EngineType = \"cpu\",",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1979813620",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 20717,
        "pr_file": "py-polars/polars/lazyframe/frame.py",
        "discussion_id": "1979813620",
        "commented_code": "@@ -1872,7 +1876,7 @@ def collect(\n         collapse_joins: bool = True,\n         no_optimization: bool = False,\n         streaming: bool = False,\n-        engine: EngineType = \"cpu\",\n+        engine: None | EngineType = \"cpu\",",
        "comment_created_at": "2025-03-04T16:32:47+00:00",
        "comment_author": "wence-",
        "comment_body": "Default to `None` here, Document what `None` means in the docstring (`get_engine_affinity` is used)?\r\n\r\n```suggestion\r\n        engine: EngineType | None = None,\r\n```\r\n\r\nI think we want `None` to be the default, otherwise the `engine_affinity` env var will only be respected when calling `collect(engine=None)`, rather than just `collect()`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1979823428",
    "pr_number": 20717,
    "pr_file": "py-polars/polars/lazyframe/frame.py",
    "created_at": "2025-03-04T16:38:03+00:00",
    "commented_code": "new_streaming: bool,\n     _eager: bool,\n ) -> Callable[[Any, int | None], None] | None:\n-    is_gpu = (is_config_obj := isinstance(engine, GPUEngine)) or engine == \"gpu\"\n+    is_gpu = (\n+        (is_config_obj := isinstance(engine, GPUEngine))\n+        or engine == \"gpu\"\n+        or get_engine_affinity() == \"gpu\"\n+    )",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1979823428",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 20717,
        "pr_file": "py-polars/polars/lazyframe/frame.py",
        "discussion_id": "1979823428",
        "commented_code": "@@ -155,7 +155,11 @@ def _gpu_engine_callback(\n     new_streaming: bool,\n     _eager: bool,\n ) -> Callable[[Any, int | None], None] | None:\n-    is_gpu = (is_config_obj := isinstance(engine, GPUEngine)) or engine == \"gpu\"\n+    is_gpu = (\n+        (is_config_obj := isinstance(engine, GPUEngine))\n+        or engine == \"gpu\"\n+        or get_engine_affinity() == \"gpu\"\n+    )",
        "comment_created_at": "2025-03-04T16:38:03+00:00",
        "comment_author": "wence-",
        "comment_body": "I think you don't need to make this change if changing the default `engine` argument to `None` below.\r\n\r\nI think `get_engine_affinity()` should only be called if `engine is None`, but here `engine` cannot be `None`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1979823931",
    "pr_number": 20717,
    "pr_file": "py-polars/polars/lazyframe/frame.py",
    "created_at": "2025-03-04T16:38:21+00:00",
    "commented_code": "error_msg = f\"collect() got an unexpected keyword argument '{k}'\"\n                 raise TypeError(error_msg)\n \n-        new_streaming = _kwargs.get(\"new_streaming\", False)\n+        if engine is None:\n+            engine = get_engine_affinity()\n+            if engine is None:\n+                engine = \"cpu\"",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1979823931",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 20717,
        "pr_file": "py-polars/polars/lazyframe/frame.py",
        "discussion_id": "1979823931",
        "commented_code": "@@ -2076,7 +2080,14 @@ def collect(\n                 error_msg = f\"collect() got an unexpected keyword argument '{k}'\"\n                 raise TypeError(error_msg)\n \n-        new_streaming = _kwargs.get(\"new_streaming\", False)\n+        if engine is None:\n+            engine = get_engine_affinity()\n+            if engine is None:\n+                engine = \"cpu\"",
        "comment_created_at": "2025-03-04T16:38:21+00:00",
        "comment_author": "wence-",
        "comment_body": "```suggestion\r\n        if engine is None:\r\n            engine = get_engine_affinity()\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1971100896",
    "pr_number": 20717,
    "pr_file": "py-polars/polars/config.py",
    "created_at": "2025-02-26T07:54:45+00:00",
    "commented_code": "os.environ[\"POLARS_MAX_EXPR_DEPTH\"] = str(limit)\n         return cls\n+\n+    @classmethod\n+    def set_engine_affinity(\n+        cls, engine: Literal[\"cpu\", \"gpu\", \"streaming\"] | None\n+    ) -> type[Config]:\n+        \"\"\"\n+        Set which engine to use by default.\n+\n+        Parameters\n+        ----------\n+        engine : Literal[\"cpu\", \"gpu\", \"streaming\"]\n+            The default engine to use on all .collect() calls",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1971100896",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 20717,
        "pr_file": "py-polars/polars/config.py",
        "discussion_id": "1971100896",
        "commented_code": "@@ -1450,3 +1452,62 @@ def set_expr_depth_warning(cls, limit: int) -> type[Config]:\n \n         os.environ[\"POLARS_MAX_EXPR_DEPTH\"] = str(limit)\n         return cls\n+\n+    @classmethod\n+    def set_engine_affinity(\n+        cls, engine: Literal[\"cpu\", \"gpu\", \"streaming\"] | None\n+    ) -> type[Config]:\n+        \"\"\"\n+        Set which engine to use by default.\n+\n+        Parameters\n+        ----------\n+        engine : Literal[\"cpu\", \"gpu\", \"streaming\"]\n+            The default engine to use on all .collect() calls",
        "comment_created_at": "2025-02-26T07:54:45+00:00",
        "comment_author": "ritchie46",
        "comment_body": "We should soften this guarantee. We will try to run on this engine, but don't guarantee it. Both streaming and gpu have cpu fallbacks.",
        "pr_file_module": null
      }
    ]
  }
]