[
  {
    "discussion_id": "1443037998",
    "pr_number": 13357,
    "pr_file": "py-polars/polars/datatypes/classes.py",
    "created_at": "2024-01-05T15:53:19+00:00",
    "commented_code": "def __repr__(self) -> str:\n         class_name = self.__class__.__name__\n-        return f\"{class_name}(categories={self.categories!r})\"\n+        if len(categories := self.categories) <= 6:\n+            categories = [\",\".join(f\"{cat!r}\" for cat in categories)]\n+        else:\n+            categories = (\n+                [\",\".join(f\"{cat!r}\" for cat in categories[:3])]\n+                + [\"\u2026\"]\n+                + [\",\".join(f\"{cat!r}\" for cat in categories[-3:])]\n+            )",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1443037998",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 13357,
        "pr_file": "py-polars/polars/datatypes/classes.py",
        "discussion_id": "1443037998",
        "commented_code": "@@ -579,7 +579,15 @@ def __hash__(self) -> int:\n \n     def __repr__(self) -> str:\n         class_name = self.__class__.__name__\n-        return f\"{class_name}(categories={self.categories!r})\"\n+        if len(categories := self.categories) <= 6:\n+            categories = [\",\".join(f\"{cat!r}\" for cat in categories)]\n+        else:\n+            categories = (\n+                [\",\".join(f\"{cat!r}\" for cat in categories[:3])]\n+                + [\"\u2026\"]\n+                + [\",\".join(f\"{cat!r}\" for cat in categories[-3:])]\n+            )",
        "comment_created_at": "2024-01-05T15:53:19+00:00",
        "comment_author": "stinodego",
        "comment_body": "This is equivalent and easier to read/more efficient:\r\n\r\n```suggestion\r\n            categories = [\r\n                \",\".join(repr(cat) for cat in categories[:3]),\r\n                \"\u2026\",\r\n                \",\".join(repr(cat) for cat in categories[-3:]),\r\n            ]\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1443649168",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 13357,
        "pr_file": "py-polars/polars/datatypes/classes.py",
        "discussion_id": "1443037998",
        "commented_code": "@@ -579,7 +579,15 @@ def __hash__(self) -> int:\n \n     def __repr__(self) -> str:\n         class_name = self.__class__.__name__\n-        return f\"{class_name}(categories={self.categories!r})\"\n+        if len(categories := self.categories) <= 6:\n+            categories = [\",\".join(f\"{cat!r}\" for cat in categories)]\n+        else:\n+            categories = (\n+                [\",\".join(f\"{cat!r}\" for cat in categories[:3])]\n+                + [\"\u2026\"]\n+                + [\",\".join(f\"{cat!r}\" for cat in categories[-3:])]\n+            )",
        "comment_created_at": "2024-01-06T07:14:41+00:00",
        "comment_author": "alexander-beedie",
        "comment_body": "The `repr` call is actually _less_ efficient that `f-strings` (example below) \ud83d\ude09 \r\nCondensing the list-join is a good move though \ud83d\udc4d ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1989812908",
    "pr_number": 20717,
    "pr_file": "py-polars/polars/lazyframe/frame.py",
    "created_at": "2025-03-11T17:29:42+00:00",
    "commented_code": "if tree_format:\n                 format = \"tree\"\n \n+        if engine == \"auto\" and get_engine_affinity() != \"auto\":\n+            engine = get_engine_affinity()",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1989812908",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 20717,
        "pr_file": "py-polars/polars/lazyframe/frame.py",
        "discussion_id": "1989812908",
        "commented_code": "@@ -1166,6 +1169,9 @@ def explain(\n             if tree_format:\n                 format = \"tree\"\n \n+        if engine == \"auto\" and get_engine_affinity() != \"auto\":\n+            engine = get_engine_affinity()",
        "comment_created_at": "2025-03-11T17:29:42+00:00",
        "comment_author": "wence-",
        "comment_body": "*nit*: Let's remove this repeated code into a function:\r\n```\r\ndef _select_engine(engine: EngineType) -> EngineType:\r\n    return get_engine_affinity() if engine == \"auto\" else engine\r\n```\r\n\r\nand then:\r\n```suggestion\r\n        engine = _select_engine(engine)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1883530717",
    "pr_number": 20263,
    "pr_file": "py-polars/polars/expr/binary.py",
    "created_at": "2024-12-13T08:14:38+00:00",
    "commented_code": "sz = wrap_expr(self._pyexpr.bin_size_bytes())\n         sz = scale_bytes(sz, unit)\n         return sz\n+\n+\n+\n+    def from_buffer(\n+        self, dtype: PolarsDataType | type[Any], endianness: Endianness = \"little\"",
    "repo_full_name": "pola-rs/polars",
    "discussion_comments": [
      {
        "comment_id": "1883530717",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 20263,
        "pr_file": "py-polars/polars/expr/binary.py",
        "discussion_id": "1883530717",
        "commented_code": "@@ -289,3 +296,42 @@ def size(self, unit: SizeUnit = \"b\") -> Expr:\n         sz = wrap_expr(self._pyexpr.bin_size_bytes())\n         sz = scale_bytes(sz, unit)\n         return sz\n+\n+\n+\n+    def from_buffer(\n+        self, dtype: PolarsDataType | type[Any], endianness: Endianness = \"little\"",
        "comment_created_at": "2024-12-13T08:14:38+00:00",
        "comment_author": "ritchie46",
        "comment_body": "Let's make this required keyword arguments:\r\n\r\n`self, * , dtype: PolarsDataType | type[Any], endianness: Endianness = \"little\"`",
        "pr_file_module": null
      },
      {
        "comment_id": "1885400921",
        "repo_full_name": "pola-rs/polars",
        "pr_number": 20263,
        "pr_file": "py-polars/polars/expr/binary.py",
        "discussion_id": "1883530717",
        "commented_code": "@@ -289,3 +296,42 @@ def size(self, unit: SizeUnit = \"b\") -> Expr:\n         sz = wrap_expr(self._pyexpr.bin_size_bytes())\n         sz = scale_bytes(sz, unit)\n         return sz\n+\n+\n+\n+    def from_buffer(\n+        self, dtype: PolarsDataType | type[Any], endianness: Endianness = \"little\"",
        "comment_created_at": "2024-12-14T21:53:08+00:00",
        "comment_author": "balbok0",
        "comment_body": "fixed.",
        "pr_file_module": null
      }
    ]
  }
]