[
  {
    "discussion_id": "2262796731",
    "pr_number": 36374,
    "pr_file": "frontend/src/scenes/surveys/SurveyEdit.tsx",
    "created_at": "2025-08-08T12:10:09+00:00",
    "commented_code": "null\n                                                                                       )\n                                                                                       // Reset variant selection when flag changes\n+                                                                                      const {\n+                                                                                          linkedFlagVariant,\n+                                                                                          ...conditions\n+                                                                                      } = survey.conditions\n                                                                                       setSurveyValue('conditions', {\n-                                                                                          ...survey.conditions,\n-                                                                                          linkedFlagVariant: null,\n+                                                                                          ...conditions,",
    "repo_full_name": "PostHog/posthog",
    "discussion_comments": [
      {
        "comment_id": "2262796731",
        "repo_full_name": "PostHog/posthog",
        "pr_number": 36374,
        "pr_file": "frontend/src/scenes/surveys/SurveyEdit.tsx",
        "discussion_id": "2262796731",
        "commented_code": "@@ -783,17 +783,23 @@ export default function SurveyEdit(): JSX.Element {\n                                                                                           null\n                                                                                       )\n                                                                                       // Reset variant selection when flag changes\n+                                                                                      const {\n+                                                                                          linkedFlagVariant,\n+                                                                                          ...conditions\n+                                                                                      } = survey.conditions\n                                                                                       setSurveyValue('conditions', {\n-                                                                                          ...survey.conditions,\n-                                                                                          linkedFlagVariant: null,\n+                                                                                          ...conditions,",
        "comment_created_at": "2025-08-08T12:10:09+00:00",
        "comment_author": "marandaneto",
        "comment_body": "we were calling the API with `{\r\n  \"url\": \"\",\r\n  \"linkedFlagVariant\": null\r\n}` instead of no `linkedFlagVariant` at all.",
        "pr_file_module": null
      },
      {
        "comment_id": "2262837694",
        "repo_full_name": "PostHog/posthog",
        "pr_number": 36374,
        "pr_file": "frontend/src/scenes/surveys/SurveyEdit.tsx",
        "discussion_id": "2262796731",
        "commented_code": "@@ -783,17 +783,23 @@ export default function SurveyEdit(): JSX.Element {\n                                                                                           null\n                                                                                       )\n                                                                                       // Reset variant selection when flag changes\n+                                                                                      const {\n+                                                                                          linkedFlagVariant,\n+                                                                                          ...conditions\n+                                                                                      } = survey.conditions\n                                                                                       setSurveyValue('conditions', {\n-                                                                                          ...survey.conditions,\n-                                                                                          linkedFlagVariant: null,\n+                                                                                          ...conditions,",
        "comment_created_at": "2025-08-08T12:25:19+00:00",
        "comment_author": "marandaneto",
        "comment_body": "also fixed the `\"url\": \"\"` issue, `url` is also `Optional`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2250144726",
    "pr_number": 36080,
    "pr_file": "frontend/src/scenes/surveys/SurveyOverview.tsx",
    "created_at": "2025-08-04T13:49:14+00:00",
    "commented_code": "export function SurveyOverview(): JSX.Element {\n     const { survey, selectedPageIndex, targetingFlagFilters } = useValues(surveyLogic)\n     const { setSelectedPageIndex } = useActions(surveyLogic)\n-    const { featureFlags } = useValues(featureFlagLogic)\n+\n+    const isExternalSurvey = survey.type === SurveyType.ExternalSurvey\n \n     const { surveyUsesLimit, surveyUsesAdaptiveLimit } = useValues(surveyLogic)\n     return (\n         <div className=\"flex gap-4\">\n             <dl className=\"flex flex-col gap-4 flex-1 overflow-hidden\">\n-                <SurveyOption label=\"Display mode\">{SURVEY_TYPE_LABEL_MAP[survey.type]}</SurveyOption>\n+                <SurveyOption label=\"Display mode\">\n+                    <div className=\"flex flex-col\">\n+                        <div className=\"flex flex-row items-center gap-2\">\n+                            {SURVEY_TYPE_LABEL_MAP[survey.type]}\n+                            {isExternalSurvey && <CopySurveyLink surveyId={survey.id} className=\"w-fit\" />}\n+                        </div>\n+                        {isExternalSurvey && (\n+                            <span>\n+                                Track responses to users by adding{' '}\n+                                <code className=\"bg-surface-tertiary px-1 rounded\">?distinct_id=user@email.com</code> to\n+                                the URL. Otherwise responses are anonymous.",
    "repo_full_name": "PostHog/posthog",
    "discussion_comments": [
      {
        "comment_id": "2251560706",
        "repo_full_name": "PostHog/posthog",
        "pr_number": 36080,
        "pr_file": "frontend/src/scenes/surveys/SurveyOverview.tsx",
        "discussion_id": "2250144726",
        "commented_code": "@@ -54,13 +52,28 @@ const QuestionIconMap = {\n export function SurveyOverview(): JSX.Element {\n     const { survey, selectedPageIndex, targetingFlagFilters } = useValues(surveyLogic)\n     const { setSelectedPageIndex } = useActions(surveyLogic)\n-    const { featureFlags } = useValues(featureFlagLogic)\n+\n+    const isExternalSurvey = survey.type === SurveyType.ExternalSurvey\n \n     const { surveyUsesLimit, surveyUsesAdaptiveLimit } = useValues(surveyLogic)\n     return (\n         <div className=\"flex gap-4\">\n             <dl className=\"flex flex-col gap-4 flex-1 overflow-hidden\">\n-                <SurveyOption label=\"Display mode\">{SURVEY_TYPE_LABEL_MAP[survey.type]}</SurveyOption>\n+                <SurveyOption label=\"Display mode\">\n+                    <div className=\"flex flex-col\">\n+                        <div className=\"flex flex-row items-center gap-2\">\n+                            {SURVEY_TYPE_LABEL_MAP[survey.type]}\n+                            {isExternalSurvey && <CopySurveyLink surveyId={survey.id} className=\"w-fit\" />}\n+                        </div>\n+                        {isExternalSurvey && (\n+                            <span>\n+                                Track responses to users by adding{' '}\n+                                <code className=\"bg-surface-tertiary px-1 rounded\">?distinct_id=user@email.com</code> to\n+                                the URL. Otherwise responses are anonymous.",
        "comment_created_at": "2025-08-04T13:49:14+00:00",
        "comment_author": "lucasheriques",
        "comment_body": "i used email because I think they're easier to reason about. @marandaneto you agreed with greptile here, but why do you think we should do that? \r\n\r\nMost people collect emails on their apps, and I think using it is more friendly to non-technical people than using any other kind of ID\r\n\r\nThis way, even if the responder is not a person in your app (so they don't have the person profile in PostHog), you can still identify who answered. Technical people and others that more familiar with PostHog might know better that the distinct_id can also have other formats. For the example, I prefer to optimize for non-technical users. WDYT?",
        "pr_file_module": null
      },
      {
        "comment_id": "2251575200",
        "repo_full_name": "PostHog/posthog",
        "pr_number": 36080,
        "pr_file": "frontend/src/scenes/surveys/SurveyOverview.tsx",
        "discussion_id": "2250144726",
        "commented_code": "@@ -54,13 +52,28 @@ const QuestionIconMap = {\n export function SurveyOverview(): JSX.Element {\n     const { survey, selectedPageIndex, targetingFlagFilters } = useValues(surveyLogic)\n     const { setSelectedPageIndex } = useActions(surveyLogic)\n-    const { featureFlags } = useValues(featureFlagLogic)\n+\n+    const isExternalSurvey = survey.type === SurveyType.ExternalSurvey\n \n     const { surveyUsesLimit, surveyUsesAdaptiveLimit } = useValues(surveyLogic)\n     return (\n         <div className=\"flex gap-4\">\n             <dl className=\"flex flex-col gap-4 flex-1 overflow-hidden\">\n-                <SurveyOption label=\"Display mode\">{SURVEY_TYPE_LABEL_MAP[survey.type]}</SurveyOption>\n+                <SurveyOption label=\"Display mode\">\n+                    <div className=\"flex flex-col\">\n+                        <div className=\"flex flex-row items-center gap-2\">\n+                            {SURVEY_TYPE_LABEL_MAP[survey.type]}\n+                            {isExternalSurvey && <CopySurveyLink surveyId={survey.id} className=\"w-fit\" />}\n+                        </div>\n+                        {isExternalSurvey && (\n+                            <span>\n+                                Track responses to users by adding{' '}\n+                                <code className=\"bg-surface-tertiary px-1 rounded\">?distinct_id=user@email.com</code> to\n+                                the URL. Otherwise responses are anonymous.",
        "comment_created_at": "2025-08-04T13:54:53+00:00",
        "comment_author": "marandaneto",
        "comment_body": "if you want to support email identification, you should allow the API to also receive an `email` query param and not `distinct_id` since this is a known and unique posthog identifier.\r\nright now passing a `distinct_id` and an email value is semantically wrong (unless people do that when calling `identify(distinctId=myEmail)` and will duplicate users and skew active user metrics etc\r\nthats why i prefer to do proper documentation about this and just link to the docs instead of duplicating all this info in the UI across multiple places/hints, etc",
        "pr_file_module": null
      },
      {
        "comment_id": "2251586686",
        "repo_full_name": "PostHog/posthog",
        "pr_number": 36080,
        "pr_file": "frontend/src/scenes/surveys/SurveyOverview.tsx",
        "discussion_id": "2250144726",
        "commented_code": "@@ -54,13 +52,28 @@ const QuestionIconMap = {\n export function SurveyOverview(): JSX.Element {\n     const { survey, selectedPageIndex, targetingFlagFilters } = useValues(surveyLogic)\n     const { setSelectedPageIndex } = useActions(surveyLogic)\n-    const { featureFlags } = useValues(featureFlagLogic)\n+\n+    const isExternalSurvey = survey.type === SurveyType.ExternalSurvey\n \n     const { surveyUsesLimit, surveyUsesAdaptiveLimit } = useValues(surveyLogic)\n     return (\n         <div className=\"flex gap-4\">\n             <dl className=\"flex flex-col gap-4 flex-1 overflow-hidden\">\n-                <SurveyOption label=\"Display mode\">{SURVEY_TYPE_LABEL_MAP[survey.type]}</SurveyOption>\n+                <SurveyOption label=\"Display mode\">\n+                    <div className=\"flex flex-col\">\n+                        <div className=\"flex flex-row items-center gap-2\">\n+                            {SURVEY_TYPE_LABEL_MAP[survey.type]}\n+                            {isExternalSurvey && <CopySurveyLink surveyId={survey.id} className=\"w-fit\" />}\n+                        </div>\n+                        {isExternalSurvey && (\n+                            <span>\n+                                Track responses to users by adding{' '}\n+                                <code className=\"bg-surface-tertiary px-1 rounded\">?distinct_id=user@email.com</code> to\n+                                the URL. Otherwise responses are anonymous.",
        "comment_created_at": "2025-08-04T13:58:04+00:00",
        "comment_author": "lucasheriques",
        "comment_body": "got it, makes sense. I'll address your comments to link to the docs. before I'll will fix the comments in the docs PR now, and link it here once it's merged",
        "pr_file_module": null
      }
    ]
  }
]