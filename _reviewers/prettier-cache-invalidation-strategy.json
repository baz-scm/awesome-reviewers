[
  {
    "discussion_id": "1952033386",
    "pr_number": 17100,
    "pr_file": "changelog_unreleased/cli/17100.md",
    "created_at": "2025-02-12T06:08:22+00:00",
    "commented_code": "+#### Invalidate outdated cache file (#17100 by @sosukesuzuki)\n+\n+Prettier 3.5 uses a different cache format than previous versions.\n+Since loading an old cache file in Prettier 3.5 would cause a runtime error outdated cache files are removed.",
    "repo_full_name": "prettier/prettier",
    "discussion_comments": [
      {
        "comment_id": "1952033386",
        "repo_full_name": "prettier/prettier",
        "pr_number": 17100,
        "pr_file": "changelog_unreleased/cli/17100.md",
        "discussion_id": "1952033386",
        "commented_code": "@@ -0,0 +1,4 @@\n+#### Invalidate outdated cache file (#17100 by @sosukesuzuki)\n+\n+Prettier 3.5 uses a different cache format than previous versions.\n+Since loading an old cache file in Prettier 3.5 would cause a runtime error outdated cache files are removed.",
        "comment_created_at": "2025-02-12T06:08:22+00:00",
        "comment_author": "fisker",
        "comment_body": "I'm not good at English, feel free to ignore.\r\n\r\nI guess this can be improved, maybe something like\r\n\r\n```\r\n#### Fix CLI crash when cache for old version exists (#17100 by @sosukesuzuki)\r\n\r\nPrettier 3.5 uses a different cache format than previous versions, Prettier stable crashes when reading existing cache file, Prettier main fixed the problem.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "889578543",
    "pr_number": 12800,
    "pr_file": "docs/cli.md",
    "created_at": "2022-06-04T15:50:58+00:00",
    "commented_code": "## `--no-plugin-search`\n \n Disable plugin autoloading.\n+\n+## `--cache`\n+\n+If this option is enabled, the following values are used as cache keys and the file is formatted only if one of them is changed.\n+\n+- Prettier version\n+- Options\n+- Node.js version\n+- (if `--cache-strategy` is `metadata`) file metadata, such as timestamps\n+- (if `--cache-strategy` is `content`) content of the file\n+\n+```bash\n+prettier --write --cache src\n+```\n+\n+Running Prettier without `--cache` will delete the cache.\n+\n+Also, since the cache file is stored in `./node_modules/.cache/prettier/.prettier-cache`, so you can use `rm -f . /node_modules/.cache/prettier/.prettier-cache` to remove them manually.",
    "repo_full_name": "prettier/prettier",
    "discussion_comments": [
      {
        "comment_id": "889578543",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12800,
        "pr_file": "docs/cli.md",
        "discussion_id": "889578543",
        "commented_code": "@@ -204,3 +204,35 @@ Prevent errors when pattern is unmatched.\n ## `--no-plugin-search`\n \n Disable plugin autoloading.\n+\n+## `--cache`\n+\n+If this option is enabled, the following values are used as cache keys and the file is formatted only if one of them is changed.\n+\n+- Prettier version\n+- Options\n+- Node.js version\n+- (if `--cache-strategy` is `metadata`) file metadata, such as timestamps\n+- (if `--cache-strategy` is `content`) content of the file\n+\n+```bash\n+prettier --write --cache src\n+```\n+\n+Running Prettier without `--cache` will delete the cache.\n+\n+Also, since the cache file is stored in `./node_modules/.cache/prettier/.prettier-cache`, so you can use `rm -f . /node_modules/.cache/prettier/.prettier-cache` to remove them manually.",
        "comment_created_at": "2022-06-04T15:50:58+00:00",
        "comment_author": "lydell",
        "comment_body": "```suggestion\r\nAlso, since the cache file is stored in `./node_modules/.cache/prettier/.prettier-cache`, so you can use `rm ./node_modules/.cache/prettier/.prettier-cache` to remove it manually.\r\n```\r\n\r\n- Removed accidental space.\r\n- Removed `-f` so one gets an error message if the file is not found (for example you\u2019re in a subdirectory and need `../`).\r\n- Changed \u201cthem\u201d to \u201cit\u201d.",
        "pr_file_module": null
      }
    ]
  }
]