[
  {
    "discussion_id": "851375274",
    "pr_number": 12584,
    "pr_file": "src/language-html/print-preprocess.js",
    "created_at": "2022-04-15T16:52:11+00:00",
    "commented_code": "});\n }\n \n+function markTsScript(ast, options) {\n+  if (options.parser === \"vue\") {\n+    ast.walk((node) => {",
    "repo_full_name": "prettier/prettier",
    "discussion_comments": [
      {
        "comment_id": "851375274",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12584,
        "pr_file": "src/language-html/print-preprocess.js",
        "discussion_id": "851375274",
        "commented_code": "@@ -408,4 +410,18 @@ function addIsSpaceSensitive(ast, options) {\n   });\n }\n \n+function markTsScript(ast, options) {\n+  if (options.parser === \"vue\") {\n+    ast.walk((node) => {",
        "comment_created_at": "2022-04-15T16:52:11+00:00",
        "comment_author": "fisker",
        "comment_body": "I think this is really bad, we are walking big vue SFC just to find the root script.(I think `.walk()` can't quit).\r\nIf we want allow ts only if ts script found, I think we can found them from the root.\r\n\r\nAlso, I'm not sure if we really need this check, I like things be safe, but I think we can always pase it as ts? I don't use ts myself, I'm fine with both add or remove this check.",
        "pr_file_module": null
      },
      {
        "comment_id": "851579758",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12584,
        "pr_file": "src/language-html/print-preprocess.js",
        "discussion_id": "851375274",
        "commented_code": "@@ -408,4 +410,18 @@ function addIsSpaceSensitive(ast, options) {\n   });\n }\n \n+function markTsScript(ast, options) {\n+  if (options.parser === \"vue\") {\n+    ast.walk((node) => {",
        "comment_created_at": "2022-04-16T03:30:35+00:00",
        "comment_author": "sosukesuzuki",
        "comment_body": "Thank you.\r\n\r\nIt is unsafe to use TS parser always. For example, The below code is valid as JS and TS.\r\n\r\n```ts\r\nconst foo = doSomething<T1 | T2>(param)\r\n```\r\n\r\n```js\r\n// as JS\r\nconst foo = (doSomething < T1) | (T2 > param);\r\n```\r\n\r\nTS and JS parse differently for such codes. Therefore, it is safe to parse as TypeScript only when the script tag explicitly specifies the use of TS.",
        "pr_file_module": null
      },
      {
        "comment_id": "851580286",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12584,
        "pr_file": "src/language-html/print-preprocess.js",
        "discussion_id": "851375274",
        "commented_code": "@@ -408,4 +410,18 @@ function addIsSpaceSensitive(ast, options) {\n   });\n }\n \n+function markTsScript(ast, options) {\n+  if (options.parser === \"vue\") {\n+    ast.walk((node) => {",
        "comment_created_at": "2022-04-16T03:37:41+00:00",
        "comment_author": "sosukesuzuki",
        "comment_body": "I've fixed to avoid using `ast.walk`. [35b2600](https://github.com/prettier/prettier/pull/12584/commits/35b2600c0d3b7d295dfc31ce0877c030bf8af51b)",
        "pr_file_module": null
      },
      {
        "comment_id": "851642870",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12584,
        "pr_file": "src/language-html/print-preprocess.js",
        "discussion_id": "851375274",
        "commented_code": "@@ -408,4 +410,18 @@ function addIsSpaceSensitive(ast, options) {\n   });\n }\n \n+function markTsScript(ast, options) {\n+  if (options.parser === \"vue\") {\n+    ast.walk((node) => {",
        "comment_created_at": "2022-04-16T15:36:57+00:00",
        "comment_author": "Shinigami92",
        "comment_body": "Does it make sense in any case to use `jsx` and `template` together?\r\nIMO you are using `jsx` with the `render`-function and then you do not use the `__vue_expression` and `__vue_event_binding`, or you use `template` and therefore not `jsx`/`tsx`.\r\n\r\n~~I did not test it, but could it also be that you can use TS types in `template` but not using `<script lang=\"ts\">`?~~\r\nI can confirm that you **need** `<script lang=\"ts\">`!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "786854557",
    "pr_number": 12113,
    "pr_file": "src/language-html/syntax-vue.js",
    "created_at": "2022-01-18T15:10:25+00:00",
    "commented_code": "if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
    "repo_full_name": "prettier/prettier",
    "discussion_comments": [
      {
        "comment_id": "786854557",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12113,
        "pr_file": "src/language-html/syntax-vue.js",
        "discussion_id": "786854557",
        "commented_code": "@@ -50,14 +55,27 @@ function parseVueFor(value) {\n     if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
        "comment_created_at": "2022-01-18T15:10:25+00:00",
        "comment_author": "fisker",
        "comment_body": "Why this write in template original..",
        "pr_file_module": null
      },
      {
        "comment_id": "786875447",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12113,
        "pr_file": "src/language-html/syntax-vue.js",
        "discussion_id": "786854557",
        "commented_code": "@@ -50,14 +55,27 @@ function parseVueFor(value) {\n     if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
        "comment_created_at": "2022-01-18T15:31:04+00:00",
        "comment_author": "duailibe",
        "comment_body": "Yeah, it makes sense to remove this template",
        "pr_file_module": null
      },
      {
        "comment_id": "786876241",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12113,
        "pr_file": "src/language-html/syntax-vue.js",
        "discussion_id": "786854557",
        "commented_code": "@@ -50,14 +55,27 @@ function parseVueFor(value) {\n     if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
        "comment_created_at": "2022-01-18T15:31:49+00:00",
        "comment_author": "lkho",
        "comment_body": "actually i found another bug",
        "pr_file_module": null
      },
      {
        "comment_id": "786880779",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12113,
        "pr_file": "src/language-html/syntax-vue.js",
        "discussion_id": "786854557",
        "commented_code": "@@ -50,14 +55,27 @@ function parseVueFor(value) {\n     if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
        "comment_created_at": "2022-01-18T15:36:31+00:00",
        "comment_author": "lkho",
        "comment_body": "it should not `.filter(Boolean)` the statements.\r\nsuppose:\r\n\r\n```html\r\n<div id=\"hello-vue\" class=\"demo\">\r\n  <div v-for=\"(,a,b) of 'abcd'\">\r\n    {{a}}, {{b}}\r\n  </div>\r\n</div>\r\n```\r\nshould print \r\n```\r\n0,\r\n1,\r\n2,\r\n3,\r\n```\r\nbut now the if i call `parseVueFor('(,a,b) of \"abcd\"')` it returns undefined\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "786884502",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12113,
        "pr_file": "src/language-html/syntax-vue.js",
        "discussion_id": "786854557",
        "commented_code": "@@ -50,14 +55,27 @@ function parseVueFor(value) {\n     if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
        "comment_created_at": "2022-01-18T15:40:02+00:00",
        "comment_author": "lkho",
        "comment_body": "Moreover, if you run this sample `v-for=\"(,a,b) of 'abcd'\"` in prettier@2.5.1 \r\n[link](https://prettier.io/playground/#N4Igxg9gdgLgprEAuEAeeBbADgGwIbwB8AOlAARmoAmAlgG5l0C0AZhAE4C8xIAFADR5+AIwCUZCCzJgehVAHpadElAWZcBOCpD8QELDBrQAzslB527CAHcAChYSmUeHNbwBPU7uHs8YANZwMADKeBhwADI0UHDILC7GcN6+AUHBWH7RAObIMOwArkkgcBjCcFRU5RF4UFn5eFlwAGIcGASGtcggePkwEDogABYwGDgA6oM08MYZYHDBjlP0U+5dYMZeINGJ7DC2vlltcQlFAFbGAB7B2ThwAIr5EPDHOIm6Gew7XXSFA1js0RgYxoVBgg2QAA4AAzvKyJMa+LBdf5wHZ0WK6ACOj3g+30Tm6xiYMXK5QG7Dg2JoFP2DSOSHiryKiQwNFyBWZN3uONiDJOuhgeGEwNB4KQACYBb4aDhsgBhCAYenFYwAVgG+USABUhU5GW8QD84ABJKCVWDBMAAgwAQTNwRg7luL0SAF9XUA)\r\nit removed the first comma, which is incorect",
        "pr_file_module": null
      },
      {
        "comment_id": "786885506",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12113,
        "pr_file": "src/language-html/syntax-vue.js",
        "discussion_id": "786854557",
        "commented_code": "@@ -50,14 +55,27 @@ function parseVueFor(value) {\n     if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
        "comment_created_at": "2022-01-18T15:41:06+00:00",
        "comment_author": "lkho",
        "comment_body": "do you guys think this worth another issue?",
        "pr_file_module": null
      },
      {
        "comment_id": "786892355",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12113,
        "pr_file": "src/language-html/syntax-vue.js",
        "discussion_id": "786854557",
        "commented_code": "@@ -50,14 +55,27 @@ function parseVueFor(value) {\n     if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
        "comment_created_at": "2022-01-18T15:47:56+00:00",
        "comment_author": "lkho",
        "comment_body": "I've posted this new issue here: https://github.com/prettier/prettier/issues/12114",
        "pr_file_module": null
      },
      {
        "comment_id": "786914558",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12113,
        "pr_file": "src/language-html/syntax-vue.js",
        "discussion_id": "786854557",
        "commented_code": "@@ -50,14 +55,27 @@ function parseVueFor(value) {\n     if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
        "comment_created_at": "2022-01-18T16:10:01+00:00",
        "comment_author": "fisker",
        "comment_body": "I've fixed this case here.",
        "pr_file_module": null
      },
      {
        "comment_id": "787683263",
        "repo_full_name": "prettier/prettier",
        "pr_number": 12113,
        "pr_file": "src/language-html/syntax-vue.js",
        "discussion_id": "786854557",
        "commented_code": "@@ -50,14 +55,27 @@ function parseVueFor(value) {\n     if (iteratorMatch[2]) {\n       res.iterator2 = iteratorMatch[2].trim();\n     }\n+\n+    if (\n+      (res.iterator2 && (!res.iterator1 || !res.alias)) ||\n+      (res.iterator1 && !res.alias)\n+    ) {\n+      return;\n+    }\n   } else {\n     res.alias = alias;\n   }\n \n+  const left = `${[res.alias, res.iterator1, res.iterator2]\n+    .filter(Boolean)\n+    .join(\",\")}`;",
        "comment_created_at": "2022-01-19T12:11:05+00:00",
        "comment_author": "fisker",
        "comment_body": "Added a test for your case https://github.com/prettier/prettier/pull/12113/commits/6bbf42bb043622b0e30b68c342dec0c5ae01acb6",
        "pr_file_module": null
      }
    ]
  }
]