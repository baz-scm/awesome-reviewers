[
  {
    "discussion_id": "1612380647",
    "pr_number": 24273,
    "pr_file": "eslint.config.cjs",
    "created_at": "2024-05-23T22:03:48+00:00",
    "commented_code": "+const typescriptEslint = require('@typescript-eslint/eslint-plugin')\n+const jest = require('eslint-plugin-jest')\n+const simpleImportSort = require('eslint-plugin-simple-import-sort')\n+const _import = require('eslint-plugin-import')\n+const localRules = require('eslint-plugin-local-rules')\n+const path = require('path')\n+\n+const { fixupPluginRules } = require('@eslint/compat')\n+\n+const globals = require('globals')\n+const tsParser = require('@typescript-eslint/parser')\n+const js = require('@eslint/js')\n+\n+const { FlatCompat } = require('@eslint/eslintrc')\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+  recommendedConfig: js.configs.recommended,\n+  allConfig: js.configs.all,\n+})\n+\n+const project = path.resolve(__dirname, 'tsconfig.json')\n+\n+module.exports = [\n+  {\n+    files: ['**/*.ts'],\n+  },\n+  {\n+    ignores: [\n+      '.prisma',\n+      '.github',\n+      'helpers/blaze/**',\n+      '.github/renovate.json',\n+      '**/dist/**',\n+      '**/esm/**',\n+      '**/build/**',\n+      '**/fixtures/**',\n+      '**/byline.ts',\n+      '**/prism.ts',\n+      '**/charm.ts',\n+      '**/pnpm-lock.yaml',\n+      '**/generated-dmmf.ts',\n+      '**/packages/client/generator-build/**',\n+      '**/packages/client/declaration/**',\n+      '**/packages/client/runtime/**',\n+      '**/packages/client/src/__tests__/types/**',\n+      'packages/client/scripts/default-index.js',\n+      '**/packages/cli/prisma-client/**',\n+      '**/packages/cli/install/**',\n+      '**/packages/cli/preinstall/**',\n+      'packages/cli/**/tmp-*',\n+      '**/sandbox/**',\n+    ],\n+  },\n+  ...compat.extends(\n+    'eslint:recommended',\n+    'plugin:@typescript-eslint/eslint-recommended',\n+    'plugin:@typescript-eslint/recommended',\n+    'plugin:@typescript-eslint/recommended-requiring-type-checking',\n+    'plugin:prettier/recommended',\n+    'plugin:jest/recommended',\n+  ),",
    "repo_full_name": "prisma/prisma",
    "discussion_comments": [
      {
        "comment_id": "1612380647",
        "repo_full_name": "prisma/prisma",
        "pr_number": 24273,
        "pr_file": "eslint.config.cjs",
        "discussion_id": "1612380647",
        "commented_code": "@@ -0,0 +1,167 @@\n+const typescriptEslint = require('@typescript-eslint/eslint-plugin')\n+const jest = require('eslint-plugin-jest')\n+const simpleImportSort = require('eslint-plugin-simple-import-sort')\n+const _import = require('eslint-plugin-import')\n+const localRules = require('eslint-plugin-local-rules')\n+const path = require('path')\n+\n+const { fixupPluginRules } = require('@eslint/compat')\n+\n+const globals = require('globals')\n+const tsParser = require('@typescript-eslint/parser')\n+const js = require('@eslint/js')\n+\n+const { FlatCompat } = require('@eslint/eslintrc')\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+  recommendedConfig: js.configs.recommended,\n+  allConfig: js.configs.all,\n+})\n+\n+const project = path.resolve(__dirname, 'tsconfig.json')\n+\n+module.exports = [\n+  {\n+    files: ['**/*.ts'],\n+  },\n+  {\n+    ignores: [\n+      '.prisma',\n+      '.github',\n+      'helpers/blaze/**',\n+      '.github/renovate.json',\n+      '**/dist/**',\n+      '**/esm/**',\n+      '**/build/**',\n+      '**/fixtures/**',\n+      '**/byline.ts',\n+      '**/prism.ts',\n+      '**/charm.ts',\n+      '**/pnpm-lock.yaml',\n+      '**/generated-dmmf.ts',\n+      '**/packages/client/generator-build/**',\n+      '**/packages/client/declaration/**',\n+      '**/packages/client/runtime/**',\n+      '**/packages/client/src/__tests__/types/**',\n+      'packages/client/scripts/default-index.js',\n+      '**/packages/cli/prisma-client/**',\n+      '**/packages/cli/install/**',\n+      '**/packages/cli/preinstall/**',\n+      'packages/cli/**/tmp-*',\n+      '**/sandbox/**',\n+    ],\n+  },\n+  ...compat.extends(\n+    'eslint:recommended',\n+    'plugin:@typescript-eslint/eslint-recommended',\n+    'plugin:@typescript-eslint/recommended',\n+    'plugin:@typescript-eslint/recommended-requiring-type-checking',\n+    'plugin:prettier/recommended',\n+    'plugin:jest/recommended',\n+  ),",
        "comment_created_at": "2024-05-23T22:03:48+00:00",
        "comment_author": "gutyerrez",
        "comment_body": "I see only one problem in this part. eslintrc will be long not supported and not maintened again. The compat \"transforms\" the configuration to support eslintrc old configuration. In this case i really want the best thing is to adapt fully to new eslint format.\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1613544027",
        "repo_full_name": "prisma/prisma",
        "pr_number": 24273,
        "pr_file": "eslint.config.cjs",
        "discussion_id": "1612380647",
        "commented_code": "@@ -0,0 +1,167 @@\n+const typescriptEslint = require('@typescript-eslint/eslint-plugin')\n+const jest = require('eslint-plugin-jest')\n+const simpleImportSort = require('eslint-plugin-simple-import-sort')\n+const _import = require('eslint-plugin-import')\n+const localRules = require('eslint-plugin-local-rules')\n+const path = require('path')\n+\n+const { fixupPluginRules } = require('@eslint/compat')\n+\n+const globals = require('globals')\n+const tsParser = require('@typescript-eslint/parser')\n+const js = require('@eslint/js')\n+\n+const { FlatCompat } = require('@eslint/eslintrc')\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+  recommendedConfig: js.configs.recommended,\n+  allConfig: js.configs.all,\n+})\n+\n+const project = path.resolve(__dirname, 'tsconfig.json')\n+\n+module.exports = [\n+  {\n+    files: ['**/*.ts'],\n+  },\n+  {\n+    ignores: [\n+      '.prisma',\n+      '.github',\n+      'helpers/blaze/**',\n+      '.github/renovate.json',\n+      '**/dist/**',\n+      '**/esm/**',\n+      '**/build/**',\n+      '**/fixtures/**',\n+      '**/byline.ts',\n+      '**/prism.ts',\n+      '**/charm.ts',\n+      '**/pnpm-lock.yaml',\n+      '**/generated-dmmf.ts',\n+      '**/packages/client/generator-build/**',\n+      '**/packages/client/declaration/**',\n+      '**/packages/client/runtime/**',\n+      '**/packages/client/src/__tests__/types/**',\n+      'packages/client/scripts/default-index.js',\n+      '**/packages/cli/prisma-client/**',\n+      '**/packages/cli/install/**',\n+      '**/packages/cli/preinstall/**',\n+      'packages/cli/**/tmp-*',\n+      '**/sandbox/**',\n+    ],\n+  },\n+  ...compat.extends(\n+    'eslint:recommended',\n+    'plugin:@typescript-eslint/eslint-recommended',\n+    'plugin:@typescript-eslint/recommended',\n+    'plugin:@typescript-eslint/recommended-requiring-type-checking',\n+    'plugin:prettier/recommended',\n+    'plugin:jest/recommended',\n+  ),",
        "comment_created_at": "2024-05-24T14:07:21+00:00",
        "comment_author": "nzakas",
        "comment_body": "That's a good approach in the long run. For right now, there are still too many plugins that don't officially support the new config format, so we need this. You can always revisit later as plugins are updated.",
        "pr_file_module": null
      },
      {
        "comment_id": "1613575146",
        "repo_full_name": "prisma/prisma",
        "pr_number": 24273,
        "pr_file": "eslint.config.cjs",
        "discussion_id": "1612380647",
        "commented_code": "@@ -0,0 +1,167 @@\n+const typescriptEslint = require('@typescript-eslint/eslint-plugin')\n+const jest = require('eslint-plugin-jest')\n+const simpleImportSort = require('eslint-plugin-simple-import-sort')\n+const _import = require('eslint-plugin-import')\n+const localRules = require('eslint-plugin-local-rules')\n+const path = require('path')\n+\n+const { fixupPluginRules } = require('@eslint/compat')\n+\n+const globals = require('globals')\n+const tsParser = require('@typescript-eslint/parser')\n+const js = require('@eslint/js')\n+\n+const { FlatCompat } = require('@eslint/eslintrc')\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+  recommendedConfig: js.configs.recommended,\n+  allConfig: js.configs.all,\n+})\n+\n+const project = path.resolve(__dirname, 'tsconfig.json')\n+\n+module.exports = [\n+  {\n+    files: ['**/*.ts'],\n+  },\n+  {\n+    ignores: [\n+      '.prisma',\n+      '.github',\n+      'helpers/blaze/**',\n+      '.github/renovate.json',\n+      '**/dist/**',\n+      '**/esm/**',\n+      '**/build/**',\n+      '**/fixtures/**',\n+      '**/byline.ts',\n+      '**/prism.ts',\n+      '**/charm.ts',\n+      '**/pnpm-lock.yaml',\n+      '**/generated-dmmf.ts',\n+      '**/packages/client/generator-build/**',\n+      '**/packages/client/declaration/**',\n+      '**/packages/client/runtime/**',\n+      '**/packages/client/src/__tests__/types/**',\n+      'packages/client/scripts/default-index.js',\n+      '**/packages/cli/prisma-client/**',\n+      '**/packages/cli/install/**',\n+      '**/packages/cli/preinstall/**',\n+      'packages/cli/**/tmp-*',\n+      '**/sandbox/**',\n+    ],\n+  },\n+  ...compat.extends(\n+    'eslint:recommended',\n+    'plugin:@typescript-eslint/eslint-recommended',\n+    'plugin:@typescript-eslint/recommended',\n+    'plugin:@typescript-eslint/recommended-requiring-type-checking',\n+    'plugin:prettier/recommended',\n+    'plugin:jest/recommended',\n+  ),",
        "comment_created_at": "2024-05-24T14:29:53+00:00",
        "comment_author": "gutyerrez",
        "comment_body": "TypeScript eslint now support Eslint v9. Here's a explain https://github.com/typescript-eslint/typescript-eslint/issues/8211#issuecomment-2106427365\r\n\r\nPrettier too have a Eslint v9 support. Here's a merged PR https://github.com/prettier/eslint-plugin-prettier/pull/616\r\n\r\nAnd you can see all supported parsers/plugins in the issue [18391](https://github.com/eslint/eslint/issues/18391)",
        "pr_file_module": null
      },
      {
        "comment_id": "1613794467",
        "repo_full_name": "prisma/prisma",
        "pr_number": 24273,
        "pr_file": "eslint.config.cjs",
        "discussion_id": "1612380647",
        "commented_code": "@@ -0,0 +1,167 @@\n+const typescriptEslint = require('@typescript-eslint/eslint-plugin')\n+const jest = require('eslint-plugin-jest')\n+const simpleImportSort = require('eslint-plugin-simple-import-sort')\n+const _import = require('eslint-plugin-import')\n+const localRules = require('eslint-plugin-local-rules')\n+const path = require('path')\n+\n+const { fixupPluginRules } = require('@eslint/compat')\n+\n+const globals = require('globals')\n+const tsParser = require('@typescript-eslint/parser')\n+const js = require('@eslint/js')\n+\n+const { FlatCompat } = require('@eslint/eslintrc')\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+  recommendedConfig: js.configs.recommended,\n+  allConfig: js.configs.all,\n+})\n+\n+const project = path.resolve(__dirname, 'tsconfig.json')\n+\n+module.exports = [\n+  {\n+    files: ['**/*.ts'],\n+  },\n+  {\n+    ignores: [\n+      '.prisma',\n+      '.github',\n+      'helpers/blaze/**',\n+      '.github/renovate.json',\n+      '**/dist/**',\n+      '**/esm/**',\n+      '**/build/**',\n+      '**/fixtures/**',\n+      '**/byline.ts',\n+      '**/prism.ts',\n+      '**/charm.ts',\n+      '**/pnpm-lock.yaml',\n+      '**/generated-dmmf.ts',\n+      '**/packages/client/generator-build/**',\n+      '**/packages/client/declaration/**',\n+      '**/packages/client/runtime/**',\n+      '**/packages/client/src/__tests__/types/**',\n+      'packages/client/scripts/default-index.js',\n+      '**/packages/cli/prisma-client/**',\n+      '**/packages/cli/install/**',\n+      '**/packages/cli/preinstall/**',\n+      'packages/cli/**/tmp-*',\n+      '**/sandbox/**',\n+    ],\n+  },\n+  ...compat.extends(\n+    'eslint:recommended',\n+    'plugin:@typescript-eslint/eslint-recommended',\n+    'plugin:@typescript-eslint/recommended',\n+    'plugin:@typescript-eslint/recommended-requiring-type-checking',\n+    'plugin:prettier/recommended',\n+    'plugin:jest/recommended',\n+  ),",
        "comment_created_at": "2024-05-24T17:15:50+00:00",
        "comment_author": "nzakas",
        "comment_body": "Yes, I maintain ESLint, so I'm aware. :)\r\n\r\nThis is just meant to be a courtesy PR to help get you started. This was generated by our new migration tool so there are some inefficiencies, but you can modify this however you'd like.",
        "pr_file_module": null
      },
      {
        "comment_id": "1613937816",
        "repo_full_name": "prisma/prisma",
        "pr_number": 24273,
        "pr_file": "eslint.config.cjs",
        "discussion_id": "1612380647",
        "commented_code": "@@ -0,0 +1,167 @@\n+const typescriptEslint = require('@typescript-eslint/eslint-plugin')\n+const jest = require('eslint-plugin-jest')\n+const simpleImportSort = require('eslint-plugin-simple-import-sort')\n+const _import = require('eslint-plugin-import')\n+const localRules = require('eslint-plugin-local-rules')\n+const path = require('path')\n+\n+const { fixupPluginRules } = require('@eslint/compat')\n+\n+const globals = require('globals')\n+const tsParser = require('@typescript-eslint/parser')\n+const js = require('@eslint/js')\n+\n+const { FlatCompat } = require('@eslint/eslintrc')\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+  recommendedConfig: js.configs.recommended,\n+  allConfig: js.configs.all,\n+})\n+\n+const project = path.resolve(__dirname, 'tsconfig.json')\n+\n+module.exports = [\n+  {\n+    files: ['**/*.ts'],\n+  },\n+  {\n+    ignores: [\n+      '.prisma',\n+      '.github',\n+      'helpers/blaze/**',\n+      '.github/renovate.json',\n+      '**/dist/**',\n+      '**/esm/**',\n+      '**/build/**',\n+      '**/fixtures/**',\n+      '**/byline.ts',\n+      '**/prism.ts',\n+      '**/charm.ts',\n+      '**/pnpm-lock.yaml',\n+      '**/generated-dmmf.ts',\n+      '**/packages/client/generator-build/**',\n+      '**/packages/client/declaration/**',\n+      '**/packages/client/runtime/**',\n+      '**/packages/client/src/__tests__/types/**',\n+      'packages/client/scripts/default-index.js',\n+      '**/packages/cli/prisma-client/**',\n+      '**/packages/cli/install/**',\n+      '**/packages/cli/preinstall/**',\n+      'packages/cli/**/tmp-*',\n+      '**/sandbox/**',\n+    ],\n+  },\n+  ...compat.extends(\n+    'eslint:recommended',\n+    'plugin:@typescript-eslint/eslint-recommended',\n+    'plugin:@typescript-eslint/recommended',\n+    'plugin:@typescript-eslint/recommended-requiring-type-checking',\n+    'plugin:prettier/recommended',\n+    'plugin:jest/recommended',\n+  ),",
        "comment_created_at": "2024-05-24T19:27:10+00:00",
        "comment_author": "gutyerrez",
        "comment_body": "Nice! Now i understand everything, thanks for the explain",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1612382388",
    "pr_number": 24273,
    "pr_file": "eslint.config.cjs",
    "created_at": "2024-05-23T22:05:17+00:00",
    "commented_code": "+const typescriptEslint = require('@typescript-eslint/eslint-plugin')\n+const jest = require('eslint-plugin-jest')\n+const simpleImportSort = require('eslint-plugin-simple-import-sort')\n+const _import = require('eslint-plugin-import')\n+const localRules = require('eslint-plugin-local-rules')\n+const path = require('path')\n+\n+const { fixupPluginRules } = require('@eslint/compat')\n+\n+const globals = require('globals')\n+const tsParser = require('@typescript-eslint/parser')\n+const js = require('@eslint/js')\n+\n+const { FlatCompat } = require('@eslint/eslintrc')\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+  recommendedConfig: js.configs.recommended,\n+  allConfig: js.configs.all,\n+})\n+\n+const project = path.resolve(__dirname, 'tsconfig.json')\n+\n+module.exports = [\n+  {\n+    files: ['**/*.ts'],\n+  },",
    "repo_full_name": "prisma/prisma",
    "discussion_comments": [
      {
        "comment_id": "1612382388",
        "repo_full_name": "prisma/prisma",
        "pr_number": 24273,
        "pr_file": "eslint.config.cjs",
        "discussion_id": "1612382388",
        "commented_code": "@@ -0,0 +1,167 @@\n+const typescriptEslint = require('@typescript-eslint/eslint-plugin')\n+const jest = require('eslint-plugin-jest')\n+const simpleImportSort = require('eslint-plugin-simple-import-sort')\n+const _import = require('eslint-plugin-import')\n+const localRules = require('eslint-plugin-local-rules')\n+const path = require('path')\n+\n+const { fixupPluginRules } = require('@eslint/compat')\n+\n+const globals = require('globals')\n+const tsParser = require('@typescript-eslint/parser')\n+const js = require('@eslint/js')\n+\n+const { FlatCompat } = require('@eslint/eslintrc')\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+  recommendedConfig: js.configs.recommended,\n+  allConfig: js.configs.all,\n+})\n+\n+const project = path.resolve(__dirname, 'tsconfig.json')\n+\n+module.exports = [\n+  {\n+    files: ['**/*.ts'],\n+  },",
        "comment_created_at": "2024-05-23T22:05:17+00:00",
        "comment_author": "gutyerrez",
        "comment_body": "With the v9 release eslint give's a way to define rules for specific file extensions. in this block you have only a file extensions without inserting rules and others things. Are that really working good?",
        "pr_file_module": null
      },
      {
        "comment_id": "1613545423",
        "repo_full_name": "prisma/prisma",
        "pr_number": 24273,
        "pr_file": "eslint.config.cjs",
        "discussion_id": "1612382388",
        "commented_code": "@@ -0,0 +1,167 @@\n+const typescriptEslint = require('@typescript-eslint/eslint-plugin')\n+const jest = require('eslint-plugin-jest')\n+const simpleImportSort = require('eslint-plugin-simple-import-sort')\n+const _import = require('eslint-plugin-import')\n+const localRules = require('eslint-plugin-local-rules')\n+const path = require('path')\n+\n+const { fixupPluginRules } = require('@eslint/compat')\n+\n+const globals = require('globals')\n+const tsParser = require('@typescript-eslint/parser')\n+const js = require('@eslint/js')\n+\n+const { FlatCompat } = require('@eslint/eslintrc')\n+\n+const compat = new FlatCompat({\n+  baseDirectory: __dirname,\n+  recommendedConfig: js.configs.recommended,\n+  allConfig: js.configs.all,\n+})\n+\n+const project = path.resolve(__dirname, 'tsconfig.json')\n+\n+module.exports = [\n+  {\n+    files: ['**/*.ts'],\n+  },",
        "comment_created_at": "2024-05-24T14:08:20+00:00",
        "comment_author": "nzakas",
        "comment_body": "Yes. This is telling ESLint to search for `**/*.ts` files by default. This replaces the `--ext .ts` command line flag. You can optionally include additional configuration if you want, but the primary focus of this entry is to ensure that TypeScript files are search for by default.",
        "pr_file_module": null
      }
    ]
  }
]