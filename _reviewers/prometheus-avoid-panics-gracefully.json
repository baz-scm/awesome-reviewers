[
  {
    "discussion_id": "1498781111",
    "pr_number": 13592,
    "pr_file": "promql/engine.go",
    "created_at": "2024-02-22T07:36:25+00:00",
    "commented_code": "switch op {\n \tcase parser.ADD:\n \t\tif hlhs != nil && hrhs != nil {\n-\t\t\treturn 0, hlhs.Copy().Add(hrhs).Compact(0), true\n+\t\t\tres, err := hlhs.Copy().Add(hrhs)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "1498781111",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 13592,
        "pr_file": "promql/engine.go",
        "discussion_id": "1498781111",
        "commented_code": "@@ -2553,12 +2553,20 @@ func vectorElemBinop(op parser.ItemType, lhs, rhs float64, hlhs, hrhs *histogram\n \tswitch op {\n \tcase parser.ADD:\n \t\tif hlhs != nil && hrhs != nil {\n-\t\t\treturn 0, hlhs.Copy().Add(hrhs).Compact(0), true\n+\t\t\tres, err := hlhs.Copy().Add(hrhs)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)",
        "comment_created_at": "2024-02-22T07:36:25+00:00",
        "comment_author": "krajorama",
        "comment_body": "We should not panic in the engine, instead return false in the last return value (keep).\r\n```suggestion\r\n\t\t\t\treturn 0, nil, false\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1498781553",
    "pr_number": 13592,
    "pr_file": "promql/engine.go",
    "created_at": "2024-02-22T07:36:48+00:00",
    "commented_code": "switch op {\n \tcase parser.ADD:\n \t\tif hlhs != nil && hrhs != nil {\n-\t\t\treturn 0, hlhs.Copy().Add(hrhs).Compact(0), true\n+\t\t\tres, err := hlhs.Copy().Add(hrhs)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t\treturn 0, res.Compact(0), true\n \t\t}\n \t\treturn lhs + rhs, nil, true\n \tcase parser.SUB:\n \t\tif hlhs != nil && hrhs != nil {\n-\t\t\treturn 0, hlhs.Copy().Sub(hrhs).Compact(0), true\n+\t\t\tres, err := hlhs.Copy().Sub(hrhs)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "1498781553",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 13592,
        "pr_file": "promql/engine.go",
        "discussion_id": "1498781553",
        "commented_code": "@@ -2553,12 +2553,20 @@ func vectorElemBinop(op parser.ItemType, lhs, rhs float64, hlhs, hrhs *histogram\n \tswitch op {\n \tcase parser.ADD:\n \t\tif hlhs != nil && hrhs != nil {\n-\t\t\treturn 0, hlhs.Copy().Add(hrhs).Compact(0), true\n+\t\t\tres, err := hlhs.Copy().Add(hrhs)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)\n+\t\t\t}\n+\t\t\treturn 0, res.Compact(0), true\n \t\t}\n \t\treturn lhs + rhs, nil, true\n \tcase parser.SUB:\n \t\tif hlhs != nil && hrhs != nil {\n-\t\t\treturn 0, hlhs.Copy().Sub(hrhs).Compact(0), true\n+\t\t\tres, err := hlhs.Copy().Sub(hrhs)\n+\t\t\tif err != nil {\n+\t\t\t\tpanic(err)",
        "comment_created_at": "2024-02-22T07:36:48+00:00",
        "comment_author": "krajorama",
        "comment_body": "We should not panic in the engine, instead return false in the last return value (keep).\r\n```suggestion\r\n\t\t\t\treturn 0, nil, false\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1498787422",
    "pr_number": 13592,
    "pr_file": "promql/engine.go",
    "created_at": "2024-02-22T07:40:22+00:00",
    "commented_code": "if s.H != nil {\n \t\t\t\tgroup.hasHistogram = true\n \t\t\t\tif group.histogramValue != nil {\n-\t\t\t\t\tgroup.histogramValue.Add(s.H)\n+\t\t\t\t\t_, err := group.histogramValue.Add(s.H)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\tpanic(err)\n+\t\t\t\t\t}\n \t\t\t\t}",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "1498787422",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 13592,
        "pr_file": "promql/engine.go",
        "discussion_id": "1498787422",
        "commented_code": "@@ -2743,7 +2751,10 @@ func (ev *evaluator) aggregation(e *parser.AggregateExpr, grouping []string, par\n \t\t\tif s.H != nil {\n \t\t\t\tgroup.hasHistogram = true\n \t\t\t\tif group.histogramValue != nil {\n-\t\t\t\t\tgroup.histogramValue.Add(s.H)\n+\t\t\t\t\t_, err := group.histogramValue.Add(s.H)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\tpanic(err)\n+\t\t\t\t\t}\n \t\t\t\t}",
        "comment_created_at": "2024-02-22T07:40:22+00:00",
        "comment_author": "krajorama",
        "comment_body": "We should not panic in the engine, instead ignore the value in the addition. Possibly throw a warning.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1498790619",
    "pr_number": 13592,
    "pr_file": "promql/engine.go",
    "created_at": "2024-02-22T07:41:57+00:00",
    "commented_code": "if group.histogramMean != nil {\n \t\t\t\t\tleft := s.H.Copy().Div(float64(group.groupCount))\n \t\t\t\t\tright := group.histogramMean.Copy().Div(float64(group.groupCount))\n-\t\t\t\t\ttoAdd := left.Sub(right)\n-\t\t\t\t\tgroup.histogramMean.Add(toAdd)\n+\t\t\t\t\ttoAdd, err := left.Sub(right)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\tpanic(err)",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "1498790619",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 13592,
        "pr_file": "promql/engine.go",
        "discussion_id": "1498790619",
        "commented_code": "@@ -2760,8 +2771,14 @@ func (ev *evaluator) aggregation(e *parser.AggregateExpr, grouping []string, par\n \t\t\t\tif group.histogramMean != nil {\n \t\t\t\t\tleft := s.H.Copy().Div(float64(group.groupCount))\n \t\t\t\t\tright := group.histogramMean.Copy().Div(float64(group.groupCount))\n-\t\t\t\t\ttoAdd := left.Sub(right)\n-\t\t\t\t\tgroup.histogramMean.Add(toAdd)\n+\t\t\t\t\ttoAdd, err := left.Sub(right)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\tpanic(err)",
        "comment_created_at": "2024-02-22T07:41:57+00:00",
        "comment_author": "krajorama",
        "comment_body": "We should not panic in the engine, instead ignore the value in the addition. Possibly throw a warning.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1498790772",
    "pr_number": 13592,
    "pr_file": "promql/engine.go",
    "created_at": "2024-02-22T07:42:01+00:00",
    "commented_code": "if group.histogramMean != nil {\n \t\t\t\t\tleft := s.H.Copy().Div(float64(group.groupCount))\n \t\t\t\t\tright := group.histogramMean.Copy().Div(float64(group.groupCount))\n-\t\t\t\t\ttoAdd := left.Sub(right)\n-\t\t\t\t\tgroup.histogramMean.Add(toAdd)\n+\t\t\t\t\ttoAdd, err := left.Sub(right)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\tpanic(err)\n+\t\t\t\t\t}\n+\t\t\t\t\t_, err = group.histogramMean.Add(toAdd)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\tpanic(err)",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "1498790772",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 13592,
        "pr_file": "promql/engine.go",
        "discussion_id": "1498790772",
        "commented_code": "@@ -2760,8 +2771,14 @@ func (ev *evaluator) aggregation(e *parser.AggregateExpr, grouping []string, par\n \t\t\t\tif group.histogramMean != nil {\n \t\t\t\t\tleft := s.H.Copy().Div(float64(group.groupCount))\n \t\t\t\t\tright := group.histogramMean.Copy().Div(float64(group.groupCount))\n-\t\t\t\t\ttoAdd := left.Sub(right)\n-\t\t\t\t\tgroup.histogramMean.Add(toAdd)\n+\t\t\t\t\ttoAdd, err := left.Sub(right)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\tpanic(err)\n+\t\t\t\t\t}\n+\t\t\t\t\t_, err = group.histogramMean.Add(toAdd)\n+\t\t\t\t\tif err != nil {\n+\t\t\t\t\t\tpanic(err)",
        "comment_created_at": "2024-02-22T07:42:01+00:00",
        "comment_author": "krajorama",
        "comment_body": "We should not panic in the engine, instead ignore the value in the addition. Possibly throw a warning.",
        "pr_file_module": null
      }
    ]
  }
]