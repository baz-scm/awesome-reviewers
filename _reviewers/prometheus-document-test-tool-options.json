[
  {
    "discussion_id": "2090098308",
    "pr_number": 16562,
    "pr_file": "promql/promqltest/README.md",
    "created_at": "2025-05-15T02:44:08+00:00",
    "commented_code": "Every `<expect>` line must match at least one corresponding annotation or error.\n \n If at least one `<expect>` line of type `warn` or `info` is present, then all corresponding annotations must have a matching `expect` line.\n+\n+#### Migrating Test Files to the New Syntax\n+- All `.test` files in test directory will be updated in place.\n+- Deprecated syntax will be replaced with the recommended `expect` line statements.\n+\n+Usage:\n+```sh\n+go run ./promql/promqltest/cmd/migrate/main.go --mode=strict\n+```\n+\n+The --mode flag controls how annotation rules are applied during migration:\n+- strict: Adds all recommended expect lines (e.g., expect no_warn, expect no_info).\n+- basic: Only adds minimal expect lines for each command.\n+- tolerant: Only adds expect fail and expect ordered wherever needed.",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "2090098308",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 16562,
        "pr_file": "promql/promqltest/README.md",
        "discussion_id": "2090098308",
        "commented_code": "@@ -164,3 +164,17 @@ There can be multiple `<expect>` lines for a given `<type>`. Each `<type>` valid\n Every `<expect>` line must match at least one corresponding annotation or error.\n \n If at least one `<expect>` line of type `warn` or `info` is present, then all corresponding annotations must have a matching `expect` line.\n+\n+#### Migrating Test Files to the New Syntax\n+- All `.test` files in test directory will be updated in place.\n+- Deprecated syntax will be replaced with the recommended `expect` line statements.\n+\n+Usage:\n+```sh\n+go run ./promql/promqltest/cmd/migrate/main.go --mode=strict\n+```\n+\n+The --mode flag controls how annotation rules are applied during migration:\n+- strict: Adds all recommended expect lines (e.g., expect no_warn, expect no_info).\n+- basic: Only adds minimal expect lines for each command.\n+- tolerant: Only adds expect fail and expect ordered wherever needed.",
        "comment_created_at": "2025-05-15T02:44:08+00:00",
        "comment_author": "NeerajGartia21",
        "comment_body": "```suggestion\r\n- tolerant: Only adds `expect fail` and `expect ordered` wherever needed.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2090100602",
    "pr_number": 16562,
    "pr_file": "promql/promqltest/README.md",
    "created_at": "2025-05-15T02:47:15+00:00",
    "commented_code": "Every `<expect>` line must match at least one corresponding annotation or error.\n \n If at least one `<expect>` line of type `warn` or `info` is present, then all corresponding annotations must have a matching `expect` line.\n+\n+#### Migrating Test Files to the New Syntax\n+- All `.test` files in test directory will be updated in place.\n+- Deprecated syntax will be replaced with the recommended `expect` line statements.\n+\n+Usage:\n+```sh\n+go run ./promql/promqltest/cmd/migrate/main.go --mode=strict\n+```\n+\n+The --mode flag controls how annotation rules are applied during migration:\n+- strict: Adds all recommended expect lines (e.g., expect no_warn, expect no_info).",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "2090100602",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 16562,
        "pr_file": "promql/promqltest/README.md",
        "discussion_id": "2090100602",
        "commented_code": "@@ -164,3 +164,17 @@ There can be multiple `<expect>` lines for a given `<type>`. Each `<type>` valid\n Every `<expect>` line must match at least one corresponding annotation or error.\n \n If at least one `<expect>` line of type `warn` or `info` is present, then all corresponding annotations must have a matching `expect` line.\n+\n+#### Migrating Test Files to the New Syntax\n+- All `.test` files in test directory will be updated in place.\n+- Deprecated syntax will be replaced with the recommended `expect` line statements.\n+\n+Usage:\n+```sh\n+go run ./promql/promqltest/cmd/migrate/main.go --mode=strict\n+```\n+\n+The --mode flag controls how annotation rules are applied during migration:\n+- strict: Adds all recommended expect lines (e.g., expect no_warn, expect no_info).",
        "comment_created_at": "2025-05-15T02:47:15+00:00",
        "comment_author": "NeerajGartia21",
        "comment_body": "```suggestion\r\n- strict: Adds all recommended expect lines (e.g., `expect no_warn`, `expect no_info`).\r\n```\r\nLet's add a few simple examples to show how each mode (strict, basic, tolerant) changes the annotations. That would make the differences easier to understand.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2140534315",
    "pr_number": 16562,
    "pr_file": "promql/promqltest/README.md",
    "created_at": "2025-06-11T15:49:32+00:00",
    "commented_code": "Every `<expect>` line must match at least one corresponding annotation or error.\n \n If at least one `<expect>` line of type `warn` or `info` is present, then all corresponding annotations must have a matching `expect` line.\n+\n+#### Migrating Test Files to the New Syntax\n+- All `.test` files in test directory will be updated in place.\n+- Deprecated syntax will be replaced with the recommended `expect` line statements.\n+\n+Usage:\n+```sh\n+go run ./promql/promqltest/cmd/migrate/main.go --mode=strict\n+```\n+\n+The --mode flag controls how annotation rules are applied during migration:\n+- strict: Adds all recommended expect lines (e.g., `expect no_warn`, `expect no_info`).\n+- basic: Only adds minimal expect lines for each command.\n+- tolerant: Only adds `expect fail` and `expect ordered` wherever needed.",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "2140534315",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 16562,
        "pr_file": "promql/promqltest/README.md",
        "discussion_id": "2140534315",
        "commented_code": "@@ -164,3 +164,17 @@ There can be multiple `<expect>` lines for a given `<type>`. Each `<type>` valid\n Every `<expect>` line must match at least one corresponding annotation or error.\n \n If at least one `<expect>` line of type `warn` or `info` is present, then all corresponding annotations must have a matching `expect` line.\n+\n+#### Migrating Test Files to the New Syntax\n+- All `.test` files in test directory will be updated in place.\n+- Deprecated syntax will be replaced with the recommended `expect` line statements.\n+\n+Usage:\n+```sh\n+go run ./promql/promqltest/cmd/migrate/main.go --mode=strict\n+```\n+\n+The --mode flag controls how annotation rules are applied during migration:\n+- strict: Adds all recommended expect lines (e.g., `expect no_warn`, `expect no_info`).\n+- basic: Only adds minimal expect lines for each command.\n+- tolerant: Only adds `expect fail` and `expect ordered` wherever needed.",
        "comment_created_at": "2025-06-11T15:49:32+00:00",
        "comment_author": "beorn7",
        "comment_body": "I feel we need a bit more explanation here. How about the following:\r\n\r\n```suggestion\r\nThe `--mode` flag controls how expectations are migrated:\r\n- `strict`: Strictly migrates all expectations to the new syntax.\r\n  This is probably more verbose than intended because the old syntax\r\n  implied many constraints that are often not needed.\r\n- `basic`: Like `strict` but never creates `no_info` and `no_warn`\r\n  expectations. This can be a good starting point to manually add \r\n  `no_info` and `no_warn` expectations and/or remove `info` and \r\n  `warn` expectations as needed.\r\n- `tolerant`: Only creates `expect fail` and `expect ordered` where\r\n  appropriate. All desired expectations about presence or absence \r\n  of `info` and `warn` have to be added manually.\r\n  \r\nAll three modes create valid passing tests from previously passing tests.\r\n`basic` and `tolerant` just test fewer expectations than the previous tests.\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2146426214",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 16562,
        "pr_file": "promql/promqltest/README.md",
        "discussion_id": "2140534315",
        "commented_code": "@@ -164,3 +164,17 @@ There can be multiple `<expect>` lines for a given `<type>`. Each `<type>` valid\n Every `<expect>` line must match at least one corresponding annotation or error.\n \n If at least one `<expect>` line of type `warn` or `info` is present, then all corresponding annotations must have a matching `expect` line.\n+\n+#### Migrating Test Files to the New Syntax\n+- All `.test` files in test directory will be updated in place.\n+- Deprecated syntax will be replaced with the recommended `expect` line statements.\n+\n+Usage:\n+```sh\n+go run ./promql/promqltest/cmd/migrate/main.go --mode=strict\n+```\n+\n+The --mode flag controls how annotation rules are applied during migration:\n+- strict: Adds all recommended expect lines (e.g., `expect no_warn`, `expect no_info`).\n+- basic: Only adds minimal expect lines for each command.\n+- tolerant: Only adds `expect fail` and `expect ordered` wherever needed.",
        "comment_created_at": "2025-06-14T04:14:17+00:00",
        "comment_author": "kapillamba4",
        "comment_body": "Updated",
        "pr_file_module": null
      }
    ]
  }
]