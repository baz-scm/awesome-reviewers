[
  {
    "discussion_id": "2169131446",
    "pr_number": 16777,
    "pr_file": "promql/promqltest/testdata/duration_expression.test",
    "created_at": "2025-06-26T13:52:19+00:00",
    "commented_code": "metric1_total{} 100\n \n eval instant at 1000s metric1_total offset (-2 ^ 2)\n-  metric1_total{} 100\n\\ No newline at end of file\n+  metric1_total{} 100\n+\n+clear\n+\n+load 1s\n+  metric1_total 0+1x100\n+\n+eval range from 50s to 60s step 10s count_over_time(metric1_total[step()+1])",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "2169131446",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 16777,
        "pr_file": "promql/promqltest/testdata/duration_expression.test",
        "discussion_id": "2169131446",
        "commented_code": "@@ -145,4 +145,45 @@ eval instant at 1000s metric1_total offset -4\n   metric1_total{} 100\n \n eval instant at 1000s metric1_total offset (-2 ^ 2)\n-  metric1_total{} 100\n\\ No newline at end of file\n+  metric1_total{} 100\n+\n+clear\n+\n+load 1s\n+  metric1_total 0+1x100\n+\n+eval range from 50s to 60s step 10s count_over_time(metric1_total[step()+1])",
        "comment_created_at": "2025-06-26T13:52:19+00:00",
        "comment_author": "beorn7",
        "comment_body": "Let's also add something like `count_over_time(metric1_total[step()])` as the most common usage?",
        "pr_file_module": null
      },
      {
        "comment_id": "2171089935",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 16777,
        "pr_file": "promql/promqltest/testdata/duration_expression.test",
        "discussion_id": "2169131446",
        "commented_code": "@@ -145,4 +145,45 @@ eval instant at 1000s metric1_total offset -4\n   metric1_total{} 100\n \n eval instant at 1000s metric1_total offset (-2 ^ 2)\n-  metric1_total{} 100\n\\ No newline at end of file\n+  metric1_total{} 100\n+\n+clear\n+\n+load 1s\n+  metric1_total 0+1x100\n+\n+eval range from 50s to 60s step 10s count_over_time(metric1_total[step()+1])",
        "comment_created_at": "2025-06-27T07:49:36+00:00",
        "comment_author": "roidelapluie",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1909116866",
    "pr_number": 15783,
    "pr_file": "promql/promqltest/testdata/functions.test",
    "created_at": "2025-01-09T16:22:47+00:00",
    "commented_code": "eval range from 0 to 5m step 1m round(mixed_metric)\n \t{} _ 1 2 3\n+\n+clear\n+\n+# check vanish\n+load 1m\n+\tmetric{a=\"1\"} 0x100 _x100 0x100\n+\tmetric{a=\"2\"} 0x100 _x100 _x100\n+\n+eval instant at 100m vanish(metric[30m])",
    "repo_full_name": "prometheus/prometheus",
    "discussion_comments": [
      {
        "comment_id": "1909116866",
        "repo_full_name": "prometheus/prometheus",
        "pr_number": 15783,
        "pr_file": "promql/promqltest/testdata/functions.test",
        "discussion_id": "1909116866",
        "commented_code": "@@ -1452,3 +1452,22 @@ load 1m\n \n eval range from 0 to 5m step 1m round(mixed_metric)\n \t{} _ 1 2 3\n+\n+clear\n+\n+# check vanish\n+load 1m\n+\tmetric{a=\"1\"} 0x100 _x100 0x100\n+\tmetric{a=\"2\"} 0x100 _x100 _x100\n+\n+eval instant at 100m vanish(metric[30m])",
        "comment_created_at": "2025-01-09T16:22:47+00:00",
        "comment_author": "beorn7",
        "comment_body": "This can be replaced by `present_over_time(metric[30m])-1 and metric or present_over_time(metric[30m])` (and correspondingly below). It might be a bit wordy, but we are also addressing a niche use case here.\r\n\r\nFurthermore, I don't think that a function returning 0 or 1 is good for alerting. If you want to alert on disappearing time series, you want an expression that contains exactly the disappearing series and nothing else, something like `present_over_time(some_metric[1h]) unless present_over_time`, see also my comment on the proposal.",
        "pr_file_module": null
      }
    ]
  }
]