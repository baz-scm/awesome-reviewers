[
  {
    "discussion_id": "2138111767",
    "pr_number": 7988,
    "pr_file": "ui/hooks/use-credentials-form.ts",
    "created_at": "2025-06-10T14:50:18+00:00",
    "commented_code": "+import { zodResolver } from \"@hookform/resolvers/zod\";\n+import { useRouter, useSearchParams } from \"next/navigation\";\n+import { useForm } from \"react-hook-form\";\n+\n+import { useFormServerErrors } from \"@/hooks/use-form-server-errors\";\n+import { PROVIDER_CREDENTIALS_ERROR_MAPPING } from \"@/lib/error-mappings\";\n+import { addCredentialsFormSchema, ProviderType } from \"@/types\";\n+\n+type CredentialsFormData = {\n+  providerId: string;\n+  providerType: ProviderType;\n+  [key: string]: any;\n+};\n+\n+type UseCredentialsFormProps = {\n+  providerType: ProviderType;\n+  providerId: string;\n+  onSubmit: (formData: FormData) => Promise<any>;\n+  successNavigationUrl: string;\n+};\n+\n+export const useCredentialsForm = ({\n+  providerType,\n+  providerId,\n+  onSubmit,\n+  successNavigationUrl,\n+}: UseCredentialsFormProps) => {\n+  const router = useRouter();\n+  const searchParamsObj = useSearchParams();\n+  const formSchema = addCredentialsFormSchema(providerType);\n+\n+  // Get default values based on provider type\n+  const getDefaultValues = (): CredentialsFormData => {\n+    const baseDefaults = {\n+      providerId,\n+      providerType,\n+    };\n+\n+    switch (providerType) {\n+      case \"aws\":\n+        return {\n+          ...baseDefaults,\n+          aws_access_key_id: \"\",",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2138111767",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7988,
        "pr_file": "ui/hooks/use-credentials-form.ts",
        "discussion_id": "2138111767",
        "commented_code": "@@ -0,0 +1,120 @@\n+import { zodResolver } from \"@hookform/resolvers/zod\";\n+import { useRouter, useSearchParams } from \"next/navigation\";\n+import { useForm } from \"react-hook-form\";\n+\n+import { useFormServerErrors } from \"@/hooks/use-form-server-errors\";\n+import { PROVIDER_CREDENTIALS_ERROR_MAPPING } from \"@/lib/error-mappings\";\n+import { addCredentialsFormSchema, ProviderType } from \"@/types\";\n+\n+type CredentialsFormData = {\n+  providerId: string;\n+  providerType: ProviderType;\n+  [key: string]: any;\n+};\n+\n+type UseCredentialsFormProps = {\n+  providerType: ProviderType;\n+  providerId: string;\n+  onSubmit: (formData: FormData) => Promise<any>;\n+  successNavigationUrl: string;\n+};\n+\n+export const useCredentialsForm = ({\n+  providerType,\n+  providerId,\n+  onSubmit,\n+  successNavigationUrl,\n+}: UseCredentialsFormProps) => {\n+  const router = useRouter();\n+  const searchParamsObj = useSearchParams();\n+  const formSchema = addCredentialsFormSchema(providerType);\n+\n+  // Get default values based on provider type\n+  const getDefaultValues = (): CredentialsFormData => {\n+    const baseDefaults = {\n+      providerId,\n+      providerType,\n+    };\n+\n+    switch (providerType) {\n+      case \"aws\":\n+        return {\n+          ...baseDefaults,\n+          aws_access_key_id: \"\",",
        "comment_created_at": "2025-06-10T14:50:18+00:00",
        "comment_author": "alejandrobailo",
        "comment_body": "I think a nice practice to type all these keys, we could create an enum with them or something similar",
        "pr_file_module": null
      },
      {
        "comment_id": "2139735168",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7988,
        "pr_file": "ui/hooks/use-credentials-form.ts",
        "discussion_id": "2138111767",
        "commented_code": "@@ -0,0 +1,120 @@\n+import { zodResolver } from \"@hookform/resolvers/zod\";\n+import { useRouter, useSearchParams } from \"next/navigation\";\n+import { useForm } from \"react-hook-form\";\n+\n+import { useFormServerErrors } from \"@/hooks/use-form-server-errors\";\n+import { PROVIDER_CREDENTIALS_ERROR_MAPPING } from \"@/lib/error-mappings\";\n+import { addCredentialsFormSchema, ProviderType } from \"@/types\";\n+\n+type CredentialsFormData = {\n+  providerId: string;\n+  providerType: ProviderType;\n+  [key: string]: any;\n+};\n+\n+type UseCredentialsFormProps = {\n+  providerType: ProviderType;\n+  providerId: string;\n+  onSubmit: (formData: FormData) => Promise<any>;\n+  successNavigationUrl: string;\n+};\n+\n+export const useCredentialsForm = ({\n+  providerType,\n+  providerId,\n+  onSubmit,\n+  successNavigationUrl,\n+}: UseCredentialsFormProps) => {\n+  const router = useRouter();\n+  const searchParamsObj = useSearchParams();\n+  const formSchema = addCredentialsFormSchema(providerType);\n+\n+  // Get default values based on provider type\n+  const getDefaultValues = (): CredentialsFormData => {\n+    const baseDefaults = {\n+      providerId,\n+      providerType,\n+    };\n+\n+    switch (providerType) {\n+      case \"aws\":\n+        return {\n+          ...baseDefaults,\n+          aws_access_key_id: \"\",",
        "comment_created_at": "2025-06-11T10:02:14+00:00",
        "comment_author": "paabloLC",
        "comment_body": "good one! it's done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2096982598",
    "pr_number": 7780,
    "pr_file": "ui/types/users/users.ts",
    "created_at": "2025-05-20T05:54:20+00:00",
    "commented_code": "export interface SignInResponse {\n   data: TokenData;\n }\n+\n+export interface Role {",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2096982598",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7780,
        "pr_file": "ui/types/users/users.ts",
        "discussion_id": "2096982598",
        "commented_code": "@@ -50,3 +50,69 @@ export interface TokenData {\n export interface SignInResponse {\n   data: TokenData;\n }\n+\n+export interface Role {",
        "comment_created_at": "2025-05-20T05:54:20+00:00",
        "comment_author": "paabloLC",
        "comment_body": "We should consider renaming `Role` to `RoleData` to follow a consistent naming convention across the codebase:\r\n\r\n- `*Data`: full API models (including `id`, `type`, `attributes`, `relationships`)\r\n- `*Attributes`: only the `attributes` section of the object\r\n- `*Props`: for React component props\r\n- `*FormValues`, `*Params`, etc.: for form schemas or helper types\r\n\r\nThis naming makes it easier to quickly distinguish between API models and component-level types when reading or searching through the code.\r\n\r\nNo need to rename everything in this PR, just pointing it out so we can align going forward. \r\n\r\nI know this is something we should\u2019ve done from the start, but since that didn\u2019t happen, I\u2019d like to slowly bring more consistency to the way we name things across the project.\r\n\r\nLet me know what you think!\r\n\r\n### \ud83d\udd01 Suggested refactor for naming consistency\r\n\r\n```ts\r\n\r\n// \u2705 Short reference for related roles\r\nexport interface RoleRef {\r\n  type: \"roles\";\r\n  id: string;\r\n}\r\n\r\n// \u2705 Role model\r\nexport interface RoleAttributes {\r\n  name: string;\r\n  manage_users: boolean;\r\n  manage_account: boolean;\r\n  manage_providers: boolean;\r\n  manage_scans: boolean;\r\n  manage_integrations: boolean;\r\n  unlimited_visibility: boolean;\r\n  permission_state?: string;\r\n  inserted_at?: string;\r\n  updated_at?: string;\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface RoleData {\r\n  id: string;\r\n  type: \"roles\";\r\n  attributes: RoleAttributes;\r\n}\r\n\r\n// \u2705 Membership model\r\nexport interface MembershipAttributes {\r\n  role: string;\r\n  date_joined: string;\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface MembershipRelationships {\r\n  tenant: {\r\n    data: {\r\n      type: string;\r\n      id: string;\r\n    };\r\n  };\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface MembershipData {\r\n  id: string;\r\n  type: \"memberships\";\r\n  attributes: MembershipAttributes;\r\n  relationships: MembershipRelationships;\r\n}\r\n\r\n// \u2705 User with roles\r\nexport interface UserDataWithRoles\r\n  extends Omit<UserData, \"attributes\" | \"relationships\"> {\r\n  attributes: UserAttributes & {\r\n    role?: {\r\n      name: string;\r\n    };\r\n  };\r\n  relationships: {\r\n    memberships: UserRelationships[\"memberships\"];\r\n    roles?: {\r\n      meta: {\r\n        count: number;\r\n      };\r\n      data: RoleRef[];\r\n    };\r\n  };\r\n}\r\n\r\n// \u2705 Component props\r\nexport interface UserInfoProps {\r\n  user: UserDataWithRoles | null;\r\n  roleDetails?: RoleData[];\r\n  membershipDetails?: MembershipData[];\r\n}\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2097164749",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7780,
        "pr_file": "ui/types/users/users.ts",
        "discussion_id": "2096982598",
        "commented_code": "@@ -50,3 +50,69 @@ export interface TokenData {\n export interface SignInResponse {\n   data: TokenData;\n }\n+\n+export interface Role {",
        "comment_created_at": "2025-05-20T07:15:28+00:00",
        "comment_author": "alejandrobailo",
        "comment_body": "I had RoleData and then I changed it because of this:\r\n```\r\nexport interface Membership {\r\n  type: string;\r\n  id: string;\r\n}\r\n```\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2052086824",
    "pr_number": 7508,
    "pr_file": "ui/actions/lighthouse/compliances.ts",
    "created_at": "2025-04-21T07:43:21+00:00",
    "commented_code": "+import { apiBaseUrl, getAuthHeaders, parseStringify } from \"@/lib/helper\";\n+\n+export const aiGetCompliancesOverview = async ({",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2052086824",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/actions/lighthouse/compliances.ts",
        "discussion_id": "2052086824",
        "commented_code": "@@ -0,0 +1,87 @@\n+import { apiBaseUrl, getAuthHeaders, parseStringify } from \"@/lib/helper\";\n+\n+export const aiGetCompliancesOverview = async ({",
        "comment_created_at": "2025-04-21T07:43:21+00:00",
        "comment_author": "paabloLC",
        "comment_body": "@Chan9390 could we keep the `app` folder just for routing purposes?\r\n\r\nIf this is an action (a call to the API), it should go inside the actions/lighthouse/compliances folder.\r\n\r\nhttps://nextjs.org/docs/14/app/building-your-application",
        "pr_file_module": null
      },
      {
        "comment_id": "2052130428",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/actions/lighthouse/compliances.ts",
        "discussion_id": "2052086824",
        "commented_code": "@@ -0,0 +1,87 @@\n+import { apiBaseUrl, getAuthHeaders, parseStringify } from \"@/lib/helper\";\n+\n+export const aiGetCompliancesOverview = async ({",
        "comment_created_at": "2025-04-21T08:30:20+00:00",
        "comment_author": "Chan9390",
        "comment_body": "This file is at \"ui/actions/lighthouse/compliances.ts\" and does make calls to `/compliance-overviews` and `/compliance-overviews/${complianceId}`. \r\nShould this be a folder instead (like `ui/actions/lighthouse/complainces/compliances.ts`?",
        "pr_file_module": null
      },
      {
        "comment_id": "2059751783",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/actions/lighthouse/compliances.ts",
        "discussion_id": "2052086824",
        "commented_code": "@@ -0,0 +1,87 @@\n+import { apiBaseUrl, getAuthHeaders, parseStringify } from \"@/lib/helper\";\n+\n+export const aiGetCompliancesOverview = async ({",
        "comment_created_at": "2025-04-25T07:57:44+00:00",
        "comment_author": "paabloLC",
        "comment_body": "The path `/prowler/ui/actions/lighthouse/compliances.ts` looks good enough because there is only 1 file related to compliance.\r\n\r\nAside from that, I would suggest starting the function name with `get`, something like `getLighthouseComplianceOverview` , to keep it consistent with our naming conventions. What do you think about that?\r\n\r\nBy doing that, we're also removing the `ai` from the name.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2059893254",
    "pr_number": 7508,
    "pr_file": "ui/actions/lighthouse/lighthouse.ts",
    "created_at": "2025-04-25T09:28:35+00:00",
    "commented_code": "+\"use server\";\n+\n+import { apiBaseUrl, getAuthHeaders } from \"@/lib/helper\";\n+\n+const getAIConfigurationId = async (): Promise<string> => {",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2059893254",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/actions/lighthouse/lighthouse.ts",
        "discussion_id": "2059893254",
        "commented_code": "@@ -0,0 +1,142 @@\n+\"use server\";\n+\n+import { apiBaseUrl, getAuthHeaders } from \"@/lib/helper\";\n+\n+const getAIConfigurationId = async (): Promise<string> => {",
        "comment_created_at": "2025-04-25T09:28:35+00:00",
        "comment_author": "paabloLC",
        "comment_body": "also here, for consistency, what about `getLighthouseConfigId` ?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2091430992",
    "pr_number": 7756,
    "pr_file": "ui/actions/findings/findings.ts",
    "created_at": "2025-05-15T15:15:49+00:00",
    "commented_code": "}\n };\n \n+export const getFindingsLatest = async ({",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2091430992",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7756,
        "pr_file": "ui/actions/findings/findings.ts",
        "discussion_id": "2091430992",
        "commented_code": "@@ -44,6 +44,47 @@ export const getFindings = async ({\n   }\n };\n \n+export const getFindingsLatest = async ({",
        "comment_created_at": "2025-05-15T15:15:49+00:00",
        "comment_author": "alejandrobailo",
        "comment_body": "How about \"getLatestFindings\"",
        "pr_file_module": null
      },
      {
        "comment_id": "2092316979",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7756,
        "pr_file": "ui/actions/findings/findings.ts",
        "discussion_id": "2091430992",
        "commented_code": "@@ -44,6 +44,47 @@ export const getFindings = async ({\n   }\n };\n \n+export const getFindingsLatest = async ({",
        "comment_created_at": "2025-05-16T04:52:18+00:00",
        "comment_author": "paabloLC",
        "comment_body": "totally agree, for consistency, I also changed `getLatestMetadataInfo`",
        "pr_file_module": null
      }
    ]
  }
]