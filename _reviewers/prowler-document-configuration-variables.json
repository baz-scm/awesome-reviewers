[
  {
    "discussion_id": "1751740853",
    "pr_number": 4892,
    "pr_file": "prowler/lib/persistence/README.md",
    "created_at": "2024-09-10T11:03:43+00:00",
    "commented_code": "+# Persistence data structures\n+\n+This package contains the data structures that wraps standard Python data structures to provide persistence.\n+\n+**Table of Contents**\n+\n+<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n+<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n+\n+- [Purpose](#purpose)\n+- [How it works](#how-it-works)\n+- [How to use](#how-to-use)\n+  - [Basic usage](#basic-usage)\n+  - [Using the non-memory based data structures](#using-the-non-memory-based-data-structures)\n+  - [Advanced usage for SQLite](#advanced-usage-for-sqlite)\n+- [Performance](#performance)\n+\n+<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n+\n+## Purpose\n+\n+The purpose of this package is to provide a way to persist memory data structures, like list or dict, to disk.\n+\n+## How it works\n+\n+This package provides a builder pattern to create a new instance of a persistence data structure. \n+\n+Instead of storing the data in memory, it stores it in a file on disk. To be more specific, it stores in a database, but the behavior is the same that the original Python data structure.\n+\n+Currently, the following data structures are supported:\n+\n+- List\n+- Dict\n+\n+What databases are supported? Currently, only SQLite is supported.\n+\n+## How to use\n+\n+### Basic usage\n+\n+Usage is pretty simple. When you want to use a non-memory based data structure, you need to create a new instance of the data structure builder.\n+\n+```python\n+\n+from prowler.lib.persistence import mklist, mkdict\n+\n+# Create a new list\n+a = mklist()\n+a.append(\"item1\")\n+a.append(\"item2\")\n+\n+print(a)\n+print(a[0])\n+\n+del a[0]\n+\n+# Creating a new dict\n+b = mkdict()\n+b[\"key1\"] = \"value1\"\n+b[\"key2\"] = \"value2\"\n+\n+print(b)\n+print(b[\"key1\"])\n+\n+del b[\"key1\"]   \n+\n+print(\"key1\" in b)\n+```\n+\n+> Note: The above code is NOT using the SQLite database. By default, it uses native Python data structures.\n+\n+### Using the non-memory based data structures\n+\n+When you want to use a non-memory, this is SQLite, you need to set the `PROWLER_DB_CONNECTION` environment variable to `sqlite://`.\n+\n+For example:\n+\n+```bash\n+> export PROWLER_DB_CONNECTION=sqlite://",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "1751740853",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 4892,
        "pr_file": "prowler/lib/persistence/README.md",
        "discussion_id": "1751740853",
        "commented_code": "@@ -0,0 +1,104 @@\n+# Persistence data structures\n+\n+This package contains the data structures that wraps standard Python data structures to provide persistence.\n+\n+**Table of Contents**\n+\n+<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n+<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n+\n+- [Purpose](#purpose)\n+- [How it works](#how-it-works)\n+- [How to use](#how-to-use)\n+  - [Basic usage](#basic-usage)\n+  - [Using the non-memory based data structures](#using-the-non-memory-based-data-structures)\n+  - [Advanced usage for SQLite](#advanced-usage-for-sqlite)\n+- [Performance](#performance)\n+\n+<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n+\n+## Purpose\n+\n+The purpose of this package is to provide a way to persist memory data structures, like list or dict, to disk.\n+\n+## How it works\n+\n+This package provides a builder pattern to create a new instance of a persistence data structure. \n+\n+Instead of storing the data in memory, it stores it in a file on disk. To be more specific, it stores in a database, but the behavior is the same that the original Python data structure.\n+\n+Currently, the following data structures are supported:\n+\n+- List\n+- Dict\n+\n+What databases are supported? Currently, only SQLite is supported.\n+\n+## How to use\n+\n+### Basic usage\n+\n+Usage is pretty simple. When you want to use a non-memory based data structure, you need to create a new instance of the data structure builder.\n+\n+```python\n+\n+from prowler.lib.persistence import mklist, mkdict\n+\n+# Create a new list\n+a = mklist()\n+a.append(\"item1\")\n+a.append(\"item2\")\n+\n+print(a)\n+print(a[0])\n+\n+del a[0]\n+\n+# Creating a new dict\n+b = mkdict()\n+b[\"key1\"] = \"value1\"\n+b[\"key2\"] = \"value2\"\n+\n+print(b)\n+print(b[\"key1\"])\n+\n+del b[\"key1\"]   \n+\n+print(\"key1\" in b)\n+```\n+\n+> Note: The above code is NOT using the SQLite database. By default, it uses native Python data structures.\n+\n+### Using the non-memory based data structures\n+\n+When you want to use a non-memory, this is SQLite, you need to set the `PROWLER_DB_CONNECTION` environment variable to `sqlite://`.\n+\n+For example:\n+\n+```bash\n+> export PROWLER_DB_CONNECTION=sqlite://",
        "comment_created_at": "2024-09-10T11:03:43+00:00",
        "comment_author": "jfagoagas",
        "comment_body": "Is there any real intention of having the SQLite connection chain in the environment variable? If not I think we can just set `sqlite` because it may lead to confusion, seems that the string needs to be completed.",
        "pr_file_module": null
      },
      {
        "comment_id": "1751924528",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 4892,
        "pr_file": "prowler/lib/persistence/README.md",
        "discussion_id": "1751740853",
        "commented_code": "@@ -0,0 +1,104 @@\n+# Persistence data structures\n+\n+This package contains the data structures that wraps standard Python data structures to provide persistence.\n+\n+**Table of Contents**\n+\n+<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n+<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n+\n+- [Purpose](#purpose)\n+- [How it works](#how-it-works)\n+- [How to use](#how-to-use)\n+  - [Basic usage](#basic-usage)\n+  - [Using the non-memory based data structures](#using-the-non-memory-based-data-structures)\n+  - [Advanced usage for SQLite](#advanced-usage-for-sqlite)\n+- [Performance](#performance)\n+\n+<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n+\n+## Purpose\n+\n+The purpose of this package is to provide a way to persist memory data structures, like list or dict, to disk.\n+\n+## How it works\n+\n+This package provides a builder pattern to create a new instance of a persistence data structure. \n+\n+Instead of storing the data in memory, it stores it in a file on disk. To be more specific, it stores in a database, but the behavior is the same that the original Python data structure.\n+\n+Currently, the following data structures are supported:\n+\n+- List\n+- Dict\n+\n+What databases are supported? Currently, only SQLite is supported.\n+\n+## How to use\n+\n+### Basic usage\n+\n+Usage is pretty simple. When you want to use a non-memory based data structure, you need to create a new instance of the data structure builder.\n+\n+```python\n+\n+from prowler.lib.persistence import mklist, mkdict\n+\n+# Create a new list\n+a = mklist()\n+a.append(\"item1\")\n+a.append(\"item2\")\n+\n+print(a)\n+print(a[0])\n+\n+del a[0]\n+\n+# Creating a new dict\n+b = mkdict()\n+b[\"key1\"] = \"value1\"\n+b[\"key2\"] = \"value2\"\n+\n+print(b)\n+print(b[\"key1\"])\n+\n+del b[\"key1\"]   \n+\n+print(\"key1\" in b)\n+```\n+\n+> Note: The above code is NOT using the SQLite database. By default, it uses native Python data structures.\n+\n+### Using the non-memory based data structures\n+\n+When you want to use a non-memory, this is SQLite, you need to set the `PROWLER_DB_CONNECTION` environment variable to `sqlite://`.\n+\n+For example:\n+\n+```bash\n+> export PROWLER_DB_CONNECTION=sqlite://",
        "comment_created_at": "2024-09-10T13:12:46+00:00",
        "comment_author": "cr0hn",
        "comment_body": "Imagine this scenario:\r\n\r\nIf the local run has only a few resources in AWS, the user may not need the SQLite feature (which works nice, but it is a bit slower than memory). \r\n\r\nImagine this second scenario:\r\n\r\nIf you want to add a distributed DB, like MongoDB or Redis, by using the connection string, nothing will change on configuring Prowler.\r\n\r\nThe idea behind it is to prepare Prowler for future new DB (or other data stores) integrations.",
        "pr_file_module": null
      },
      {
        "comment_id": "1753992779",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 4892,
        "pr_file": "prowler/lib/persistence/README.md",
        "discussion_id": "1751740853",
        "commented_code": "@@ -0,0 +1,104 @@\n+# Persistence data structures\n+\n+This package contains the data structures that wraps standard Python data structures to provide persistence.\n+\n+**Table of Contents**\n+\n+<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n+<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n+\n+- [Purpose](#purpose)\n+- [How it works](#how-it-works)\n+- [How to use](#how-to-use)\n+  - [Basic usage](#basic-usage)\n+  - [Using the non-memory based data structures](#using-the-non-memory-based-data-structures)\n+  - [Advanced usage for SQLite](#advanced-usage-for-sqlite)\n+- [Performance](#performance)\n+\n+<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n+\n+## Purpose\n+\n+The purpose of this package is to provide a way to persist memory data structures, like list or dict, to disk.\n+\n+## How it works\n+\n+This package provides a builder pattern to create a new instance of a persistence data structure. \n+\n+Instead of storing the data in memory, it stores it in a file on disk. To be more specific, it stores in a database, but the behavior is the same that the original Python data structure.\n+\n+Currently, the following data structures are supported:\n+\n+- List\n+- Dict\n+\n+What databases are supported? Currently, only SQLite is supported.\n+\n+## How to use\n+\n+### Basic usage\n+\n+Usage is pretty simple. When you want to use a non-memory based data structure, you need to create a new instance of the data structure builder.\n+\n+```python\n+\n+from prowler.lib.persistence import mklist, mkdict\n+\n+# Create a new list\n+a = mklist()\n+a.append(\"item1\")\n+a.append(\"item2\")\n+\n+print(a)\n+print(a[0])\n+\n+del a[0]\n+\n+# Creating a new dict\n+b = mkdict()\n+b[\"key1\"] = \"value1\"\n+b[\"key2\"] = \"value2\"\n+\n+print(b)\n+print(b[\"key1\"])\n+\n+del b[\"key1\"]   \n+\n+print(\"key1\" in b)\n+```\n+\n+> Note: The above code is NOT using the SQLite database. By default, it uses native Python data structures.\n+\n+### Using the non-memory based data structures\n+\n+When you want to use a non-memory, this is SQLite, you need to set the `PROWLER_DB_CONNECTION` environment variable to `sqlite://`.\n+\n+For example:\n+\n+```bash\n+> export PROWLER_DB_CONNECTION=sqlite://",
        "comment_created_at": "2024-09-11T10:35:56+00:00",
        "comment_author": "jfagoagas",
        "comment_body": "Thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2086889749",
    "pr_number": 6116,
    "pr_file": "docs/tutorials/github/authentication.md",
    "created_at": "2025-05-13T13:53:34+00:00",
    "commented_code": "+# GitHub Authentication\n+\n+Prowler supports multiple methods to [authenticate with GitHub](https://docs.github.com/en/rest/authentication/authenticating-to-the-rest-api). These include:\n+\n+- **Personal Access Token (PAT)**\n+- **OAuth App Token**\n+- **GitHub App Credentials**\n+\n+This flexibility allows you to scan and analyze your GitHub account, including repositories, organizations, and applications, using the method that best suits your use case.\n+\n+## Supported Login Methods\n+\n+Here are the available login methods and their respective flags:\n+\n+### Personal Access Token (PAT)\n+Use this method by providing your personal access token directly.\n+\n+```console\n+prowler github --personal-access-token pat\n+```\n+\n+### OAuth App Token\n+Authenticate using an OAuth app token.\n+\n+```console\n+prowler github --oauth-app-token oauth_token\n+```\n+\n+### GitHub App Credentials\n+Use GitHub App credentials by specifying the App ID and the private key.\n+\n+```console\n+prowler github --github-app-id app_id --github-app-key app_key\n+```\n+\n+### Automatic Token Detection\n+If no token is explicitly provided, Prowler will automatically attempt to authenticate using environment variables in the following order of precedence:\n+\n+1. `GITHUB_PERSONAL_ACCESS_TOKEN`\n+2. `OAUTH_APP_TOKEN`\n+3. `GITHUB_APP_ID` and `GITHUB_APP_KEY`\n+\n+???+ note Ensure the corresponding environment variables are set up before running Prowler for automatic detection if you don't plan to provide any credentials.",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2086889749",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 6116,
        "pr_file": "docs/tutorials/github/authentication.md",
        "discussion_id": "2086889749",
        "commented_code": "@@ -0,0 +1,43 @@\n+# GitHub Authentication\n+\n+Prowler supports multiple methods to [authenticate with GitHub](https://docs.github.com/en/rest/authentication/authenticating-to-the-rest-api). These include:\n+\n+- **Personal Access Token (PAT)**\n+- **OAuth App Token**\n+- **GitHub App Credentials**\n+\n+This flexibility allows you to scan and analyze your GitHub account, including repositories, organizations, and applications, using the method that best suits your use case.\n+\n+## Supported Login Methods\n+\n+Here are the available login methods and their respective flags:\n+\n+### Personal Access Token (PAT)\n+Use this method by providing your personal access token directly.\n+\n+```console\n+prowler github --personal-access-token pat\n+```\n+\n+### OAuth App Token\n+Authenticate using an OAuth app token.\n+\n+```console\n+prowler github --oauth-app-token oauth_token\n+```\n+\n+### GitHub App Credentials\n+Use GitHub App credentials by specifying the App ID and the private key.\n+\n+```console\n+prowler github --github-app-id app_id --github-app-key app_key\n+```\n+\n+### Automatic Token Detection\n+If no token is explicitly provided, Prowler will automatically attempt to authenticate using environment variables in the following order of precedence:\n+\n+1. `GITHUB_PERSONAL_ACCESS_TOKEN`\n+2. `OAUTH_APP_TOKEN`\n+3. `GITHUB_APP_ID` and `GITHUB_APP_KEY`\n+\n+???+ note Ensure the corresponding environment variables are set up before running Prowler for automatic detection if you don't plan to provide any credentials.",
        "comment_created_at": "2025-05-13T13:53:34+00:00",
        "comment_author": "andoniaf",
        "comment_body": "```suggestion\r\n???+ note Ensure the corresponding environment variables are set up before running Prowler for automatic detection if you don't plan to specify the login method.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2068313270",
    "pr_number": 7622,
    "pr_file": "docs/tutorials/microsoft365/use-of-powershell.md",
    "created_at": "2025-04-30T09:36:41+00:00",
    "commented_code": "+PowerShell is required by this provider because it is the only way to retrieve data from certain Microsoft 365 services.\n+\n+## Installing PowerShell\n+\n+If you are using Prowler Cloud, you don't need to worry about PowerShell \u2014 it is already installed in our infrastructure.\n+However, if you want to run Prowler on your own, you must have PowerShell installed to execute the full M365 provider and retrieve all findings.\n+To learn more about how to install PowerShell and which versions are supported, click [here](../../getting-started/requirements.md#supported-powershell-versions).\n+\n+## Required Modules\n+\n+The necessary modules will be installed automatically by Prowler.",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2068313270",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7622,
        "pr_file": "docs/tutorials/microsoft365/use-of-powershell.md",
        "discussion_id": "2068313270",
        "commented_code": "@@ -0,0 +1,12 @@\n+PowerShell is required by this provider because it is the only way to retrieve data from certain Microsoft 365 services.\n+\n+## Installing PowerShell\n+\n+If you are using Prowler Cloud, you don't need to worry about PowerShell \u2014 it is already installed in our infrastructure.\n+However, if you want to run Prowler on your own, you must have PowerShell installed to execute the full M365 provider and retrieve all findings.\n+To learn more about how to install PowerShell and which versions are supported, click [here](../../getting-started/requirements.md#supported-powershell-versions).\n+\n+## Required Modules\n+\n+The necessary modules will be installed automatically by Prowler.",
        "comment_created_at": "2025-04-30T09:36:41+00:00",
        "comment_author": "HugoPBrito",
        "comment_body": "```suggestion\r\nThe necessary modules will not be installed automatically by Prowler. Nevertheless, if you want Prowler to install them for you, you can execute the provider with the flag `--init-modules`, which will run the script to install and import them.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2191546004",
    "pr_number": 8201,
    "pr_file": "docs/tutorials/prowler-app-mute-findings.md",
    "created_at": "2025-07-08T05:54:11+00:00",
    "commented_code": "+# Mute Findings (Mutelist)\n+\n+Prowler App allows users to mute specific findings to focus on the most critical security issues. This comprehensive guide demonstrates how to effectively use the mutelist feature to manage and prioritize security findings.\n+\n+## What Is the Mutelist Feature?\n+\n+The mutelist feature enables users to:\n+* **Suppress specific findings** from appearing in future scans\n+* **Focus on critical issues** by hiding resolved or accepted risks\n+* **Maintain audit trails** of muted findings for compliance purposes\n+* **Streamline security workflows** by reducing noise from non-critical findings\n+\n+## Prerequisites\n+\n+Before muting findings, ensure:\n+* Valid access to Prowler App with appropriate permissions\n+* A provider added to the Prowler App\n+* Understanding of the security implications of muting specific findings\n+\n+**Warning:** Muting findings does not resolve underlying security issues. Review each finding carefully before muting to ensure it represents an acceptable risk or has been properly addressed.\n+\n+## Step 1: Add a provider\n+\n+To configure mutelist:\n+\n+1. Log into Prowler App\n+2. Navigate to the providers page\n+![Add provider](../img/mutelist-ui-1.png)\n+3. Add a provider, then \"Configure Muted Findings\" button will be enabled in providers page and scans page\n+![Button enabled in providers page](../img/mutelist-ui-2.png)\n+![Button enabled in scans pages](../img/mutelist-ui-3.png)\n+\n+\n+## Step 2: Configure Muting Parameters\n+\n+1. Open the modal by clicking \"Configure Muted Findings\" button\n+![Open modal](../img/mutelist-ui-4.png)\n+2. Provide a valid YAML configuration (more information in [Mutelist](../tutorials/mutelist.md))\n+![Valid YAML configuration](../img/mutelist-ui-5.png)\n+If the YAML configuration is invalid, an error message will be displayed\n+![Wrong YAML configuration](../img/mutelist-ui-7.png)\n+![Wrong YAML configuration 2](../img/mutelist-ui-8.png)\n+\n+## Step 3: Review the muted findings\n+\n+1. Once added, the configuration can be removed or updated\n+![Remove or update configuration](../img/mutelist-ui-6.png)\n+\n+## Step 4: Check muted findings in the scan results\n+",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2191546004",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 8201,
        "pr_file": "docs/tutorials/prowler-app-mute-findings.md",
        "discussion_id": "2191546004",
        "commented_code": "@@ -0,0 +1,53 @@\n+# Mute Findings (Mutelist)\n+\n+Prowler App allows users to mute specific findings to focus on the most critical security issues. This comprehensive guide demonstrates how to effectively use the mutelist feature to manage and prioritize security findings.\n+\n+## What Is the Mutelist Feature?\n+\n+The mutelist feature enables users to:\n+* **Suppress specific findings** from appearing in future scans\n+* **Focus on critical issues** by hiding resolved or accepted risks\n+* **Maintain audit trails** of muted findings for compliance purposes\n+* **Streamline security workflows** by reducing noise from non-critical findings\n+\n+## Prerequisites\n+\n+Before muting findings, ensure:\n+* Valid access to Prowler App with appropriate permissions\n+* A provider added to the Prowler App\n+* Understanding of the security implications of muting specific findings\n+\n+**Warning:** Muting findings does not resolve underlying security issues. Review each finding carefully before muting to ensure it represents an acceptable risk or has been properly addressed.\n+\n+## Step 1: Add a provider\n+\n+To configure mutelist:\n+\n+1. Log into Prowler App\n+2. Navigate to the providers page\n+![Add provider](../img/mutelist-ui-1.png)\n+3. Add a provider, then \"Configure Muted Findings\" button will be enabled in providers page and scans page\n+![Button enabled in providers page](../img/mutelist-ui-2.png)\n+![Button enabled in scans pages](../img/mutelist-ui-3.png)\n+\n+\n+## Step 2: Configure Muting Parameters\n+\n+1. Open the modal by clicking \"Configure Muted Findings\" button\n+![Open modal](../img/mutelist-ui-4.png)\n+2. Provide a valid YAML configuration (more information in [Mutelist](../tutorials/mutelist.md))\n+![Valid YAML configuration](../img/mutelist-ui-5.png)\n+If the YAML configuration is invalid, an error message will be displayed\n+![Wrong YAML configuration](../img/mutelist-ui-7.png)\n+![Wrong YAML configuration 2](../img/mutelist-ui-8.png)\n+\n+## Step 3: Review the muted findings\n+\n+1. Once added, the configuration can be removed or updated\n+![Remove or update configuration](../img/mutelist-ui-6.png)\n+\n+## Step 4: Check muted findings in the scan results\n+",
        "comment_created_at": "2025-07-08T05:54:11+00:00",
        "comment_author": "jfagoagas",
        "comment_body": "```suggestion\n???+ note\n    The Mutelist configuration takes effect on the next scans.\n```",
        "pr_file_module": null
      }
    ]
  }
]