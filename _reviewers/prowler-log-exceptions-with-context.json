[
  {
    "discussion_id": "1989658828",
    "pr_number": 7183,
    "pr_file": "api/src/backend/api/v1/views.py",
    "created_at": "2025-03-11T16:12:48+00:00",
    "commented_code": "filename = os.path.basename(output_location.split(\"/\")[-1])\n         else:\n             zip_files = glob.glob(output_location)\n-            file_path = zip_files[0]\n+            try:\n+                file_path = zip_files[0]\n+            except IndexError:\n+                return Response(",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "1989658828",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7183,
        "pr_file": "api/src/backend/api/v1/views.py",
        "discussion_id": "1989658828",
        "commented_code": "@@ -1280,7 +1280,13 @@ def report(self, request, pk=None):\n             filename = os.path.basename(output_location.split(\"/\")[-1])\n         else:\n             zip_files = glob.glob(output_location)\n-            file_path = zip_files[0]\n+            try:\n+                file_path = zip_files[0]\n+            except IndexError:\n+                return Response(",
        "comment_created_at": "2025-03-11T16:12:48+00:00",
        "comment_author": "jfagoagas",
        "comment_body": "You can also log this in Sentry with\r\n```python\r\nimport sentry_sdk\r\n\r\nsentry_sdk.capture_exception(exception)\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1989706915",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7183,
        "pr_file": "api/src/backend/api/v1/views.py",
        "discussion_id": "1989658828",
        "commented_code": "@@ -1280,7 +1280,13 @@ def report(self, request, pk=None):\n             filename = os.path.basename(output_location.split(\"/\")[-1])\n         else:\n             zip_files = glob.glob(output_location)\n-            file_path = zip_files[0]\n+            try:\n+                file_path = zip_files[0]\n+            except IndexError:\n+                return Response(",
        "comment_created_at": "2025-03-11T16:36:35+00:00",
        "comment_author": "AdriiiPRodri",
        "comment_body": "Thanks! Added",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1935256676",
    "pr_number": 6738,
    "pr_file": "prowler/__main__.py",
    "created_at": "2025-01-30T09:10:47+00:00",
    "commented_code": "# Outputs\n     # TODO: this part is needed since the checks generates a Check_Report_XXX and the output uses Finding\n     # This will be refactored for the outputs generate directly the Finding\n-    finding_outputs = [\n-        Finding.generate_output(global_provider, finding, output_options)\n-        for finding in findings\n-    ]\n+    finding_outputs = []\n+    for finding in findings:\n+        try:\n+            finding_outputs.append(\n+                Finding.generate_output(global_provider, finding, output_options)\n+            )\n+        except Exception:\n+            continue",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "1935256676",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 6738,
        "pr_file": "prowler/__main__.py",
        "discussion_id": "1935256676",
        "commented_code": "@@ -332,18 +332,21 @@ def prowler():\n     # Outputs\n     # TODO: this part is needed since the checks generates a Check_Report_XXX and the output uses Finding\n     # This will be refactored for the outputs generate directly the Finding\n-    finding_outputs = [\n-        Finding.generate_output(global_provider, finding, output_options)\n-        for finding in findings\n-    ]\n+    finding_outputs = []\n+    for finding in findings:\n+        try:\n+            finding_outputs.append(\n+                Finding.generate_output(global_provider, finding, output_options)\n+            )\n+        except Exception:\n+            continue",
        "comment_created_at": "2025-01-30T09:10:47+00:00",
        "comment_author": "AdriiiPRodri",
        "comment_body": "Maybe we can add some information, and remove the `continue`. What do you think?\r\n\r\n```\r\nlogger.warning(f\"Failed to generate output for finding '{finding}': {exc}\")\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1935303055",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 6738,
        "pr_file": "prowler/__main__.py",
        "discussion_id": "1935256676",
        "commented_code": "@@ -332,18 +332,21 @@ def prowler():\n     # Outputs\n     # TODO: this part is needed since the checks generates a Check_Report_XXX and the output uses Finding\n     # This will be refactored for the outputs generate directly the Finding\n-    finding_outputs = [\n-        Finding.generate_output(global_provider, finding, output_options)\n-        for finding in findings\n-    ]\n+    finding_outputs = []\n+    for finding in findings:\n+        try:\n+            finding_outputs.append(\n+                Finding.generate_output(global_provider, finding, output_options)\n+            )\n+        except Exception:\n+            continue",
        "comment_created_at": "2025-01-30T09:42:50+00:00",
        "comment_author": "jfagoagas",
        "comment_body": "I added that log line within the `generate_output` `try/except` clause, if it is not enough I can add another one here.",
        "pr_file_module": null
      },
      {
        "comment_id": "1935348870",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 6738,
        "pr_file": "prowler/__main__.py",
        "discussion_id": "1935256676",
        "commented_code": "@@ -332,18 +332,21 @@ def prowler():\n     # Outputs\n     # TODO: this part is needed since the checks generates a Check_Report_XXX and the output uses Finding\n     # This will be refactored for the outputs generate directly the Finding\n-    finding_outputs = [\n-        Finding.generate_output(global_provider, finding, output_options)\n-        for finding in findings\n-    ]\n+    finding_outputs = []\n+    for finding in findings:\n+        try:\n+            finding_outputs.append(\n+                Finding.generate_output(global_provider, finding, output_options)\n+            )\n+        except Exception:\n+            continue",
        "comment_created_at": "2025-01-30T10:13:46+00:00",
        "comment_author": "AdriiiPRodri",
        "comment_body": "I didn't notice, its ok for me",
        "pr_file_module": null
      }
    ]
  }
]