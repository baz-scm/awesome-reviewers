[
  {
    "discussion_id": "2189245424",
    "pr_number": 8195,
    "pr_file": "ui/components/manage-groups/manage-groups-button.tsx",
    "created_at": "2025-07-07T07:42:06+00:00",
    "commented_code": "import { SettingsIcon } from \"lucide-react\";\n \n-import { CustomButton } from \"../ui/custom\";\n+import { CustomLink } from \"@/components/ui/custom\";\n \n export const ManageGroupsButton = () => {\n   return (\n-    <CustomButton\n-      asLink=\"/manage-groups\"\n+    <CustomLink\n+      path={\"/manage-groups\"}\n       ariaLabel=\"Manage Groups\"\n       variant=\"dashed\"\n-      color=\"warning\"\n-      size=\"md\"\n+      color=\"secondary\"\n+      className=\"rounded-md px-4 py-2 !font-bold hover:border-solid hover:bg-default-100\"",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2189245424",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 8195,
        "pr_file": "ui/components/manage-groups/manage-groups-button.tsx",
        "discussion_id": "2189245424",
        "commented_code": "@@ -2,19 +2,19 @@\n \n import { SettingsIcon } from \"lucide-react\";\n \n-import { CustomButton } from \"../ui/custom\";\n+import { CustomLink } from \"@/components/ui/custom\";\n \n export const ManageGroupsButton = () => {\n   return (\n-    <CustomButton\n-      asLink=\"/manage-groups\"\n+    <CustomLink\n+      path={\"/manage-groups\"}\n       ariaLabel=\"Manage Groups\"\n       variant=\"dashed\"\n-      color=\"warning\"\n-      size=\"md\"\n+      color=\"secondary\"\n+      className=\"rounded-md px-4 py-2 !font-bold hover:border-solid hover:bg-default-100\"",
        "comment_created_at": "2025-07-07T07:42:06+00:00",
        "comment_author": "paabloLC",
        "comment_body": "The main reason we created this component was to avoid writing custom classes every time we use a link. The idea is to centralize styling using the color and variant props. This keeps the design consistent across the app and makes the code easier to maintain.\r\n\r\nIf we start adding custom classes alongside color and variant, we kind of defeat the purpose, it introduces two different ways to handle styling and can lead to unexpected results",
        "pr_file_module": null
      },
      {
        "comment_id": "2191984207",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 8195,
        "pr_file": "ui/components/manage-groups/manage-groups-button.tsx",
        "discussion_id": "2189245424",
        "commented_code": "@@ -2,19 +2,19 @@\n \n import { SettingsIcon } from \"lucide-react\";\n \n-import { CustomButton } from \"../ui/custom\";\n+import { CustomLink } from \"@/components/ui/custom\";\n \n export const ManageGroupsButton = () => {\n   return (\n-    <CustomButton\n-      asLink=\"/manage-groups\"\n+    <CustomLink\n+      path={\"/manage-groups\"}\n       ariaLabel=\"Manage Groups\"\n       variant=\"dashed\"\n-      color=\"warning\"\n-      size=\"md\"\n+      color=\"secondary\"\n+      className=\"rounded-md px-4 py-2 !font-bold hover:border-solid hover:bg-default-100\"",
        "comment_created_at": "2025-07-08T09:33:21+00:00",
        "comment_author": "sumit-tft",
        "comment_body": "Thanks for the review, I agree that relying on color and variant keeps things consistent and avoids style conflicts. I've updated the code accordingly\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2066012009",
    "pr_number": 7508,
    "pr_file": "ui/app/(prowler)/lighthouse/chat.tsx",
    "created_at": "2025-04-29T10:26:05+00:00",
    "commented_code": "+\"use client\";\n+\n+import { useChat } from \"@ai-sdk/react\";\n+\n+import { MemoizedMarkdown } from \"@/components/memoized-markdown\";\n+\n+// Add this interface above the Chat component\n+interface SuggestedAction {\n+  title: string;\n+  label: string;\n+  action: string;\n+}\n+\n+export default function Chat() {\n+  const { messages, input, handleSubmit, handleInputChange, append, status } =\n+    useChat({\n+      api: \"/api/lighthouse/analyst\",\n+      credentials: \"same-origin\",\n+      experimental_throttle: 100,\n+      sendExtraMessageFields: true,\n+      onFinish: () => {\n+        // Handle chat completion\n+      },\n+      onError: () => {\n+        console.log(\"An error occurred, please try again!\");\n+      },\n+    });\n+\n+  const suggestedActions: SuggestedAction[] = [\n+    {\n+      title: \"Are there any exposed S3\",\n+      label: \"buckets in my AWS accounts?\",\n+      action: \"List exposed S3 buckets in my AWS accounts\",\n+    },\n+    {\n+      title: \"What is the risk of having\",\n+      label: \"RDS databases unencrypted?\",\n+      action: \"What is the risk of having RDS databases unencrypted?\",\n+    },\n+    {\n+      title: \"What is the CIS 1.10 compliance status\",\n+      label: \"of my Kubernetes cluster?\",\n+      action:\n+        \"What is the CIS 1.10 compliance status of my Kubernetes cluster?\",\n+    },\n+    {\n+      title: \"List my highest privileged\",\n+      label: \"AWS IAM users with full admin access?\",\n+      action: \"List my highest privileged AWS IAM users with full admin access\",\n+    },\n+  ];\n+\n+  return (\n+    <div className=\"flex h-[calc(100vh-theme(spacing.16))] min-w-0 flex-col bg-background\">",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2066012009",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(prowler)/lighthouse/chat.tsx",
        "discussion_id": "2066012009",
        "commented_code": "@@ -0,0 +1,136 @@\n+\"use client\";\n+\n+import { useChat } from \"@ai-sdk/react\";\n+\n+import { MemoizedMarkdown } from \"@/components/memoized-markdown\";\n+\n+// Add this interface above the Chat component\n+interface SuggestedAction {\n+  title: string;\n+  label: string;\n+  action: string;\n+}\n+\n+export default function Chat() {\n+  const { messages, input, handleSubmit, handleInputChange, append, status } =\n+    useChat({\n+      api: \"/api/lighthouse/analyst\",\n+      credentials: \"same-origin\",\n+      experimental_throttle: 100,\n+      sendExtraMessageFields: true,\n+      onFinish: () => {\n+        // Handle chat completion\n+      },\n+      onError: () => {\n+        console.log(\"An error occurred, please try again!\");\n+      },\n+    });\n+\n+  const suggestedActions: SuggestedAction[] = [\n+    {\n+      title: \"Are there any exposed S3\",\n+      label: \"buckets in my AWS accounts?\",\n+      action: \"List exposed S3 buckets in my AWS accounts\",\n+    },\n+    {\n+      title: \"What is the risk of having\",\n+      label: \"RDS databases unencrypted?\",\n+      action: \"What is the risk of having RDS databases unencrypted?\",\n+    },\n+    {\n+      title: \"What is the CIS 1.10 compliance status\",\n+      label: \"of my Kubernetes cluster?\",\n+      action:\n+        \"What is the CIS 1.10 compliance status of my Kubernetes cluster?\",\n+    },\n+    {\n+      title: \"List my highest privileged\",\n+      label: \"AWS IAM users with full admin access?\",\n+      action: \"List my highest privileged AWS IAM users with full admin access\",\n+    },\n+  ];\n+\n+  return (\n+    <div className=\"flex h-[calc(100vh-theme(spacing.16))] min-w-0 flex-col bg-background\">",
        "comment_created_at": "2025-04-29T10:26:05+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Can you use the `<ContentLayout>` component? I don't think you need a new layout for this. Take a look at any other page.\r\n\r\n`<ContentLayout title=\"Configure Chatbot\" icon=\"lucide:settings\">`\r\n\r\nIf so, please, remove the `app/(prowler)/lighthouse/config/layout.tsx`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2096964843",
    "pr_number": 7780,
    "pr_file": "ui/components/users/profile/role-item.tsx",
    "created_at": "2025-05-20T05:39:02+00:00",
    "commented_code": "+\"use client\";\n+\n+import { Chip } from \"@nextui-org/react\";\n+import { Ban, Check } from \"lucide-react\";\n+import { useState } from \"react\";\n+\n+import { Role, RoleDetail } from \"@/types/users/users\";\n+\n+interface PermissionItemProps {\n+  enabled: boolean;\n+  label: string;\n+}\n+\n+export const PermissionIcon = ({ enabled }: { enabled: boolean }) => (\n+  <span\n+    className={`inline-flex h-4 w-4 items-center justify-center rounded-full ${enabled ? \"bg-green-100 text-green-700\" : \"bg-red-100 text-red-500\"}`}\n+  >\n+    {enabled ? <Check /> : <Ban />}\n+  </span>\n+);\n+\n+const PermissionItem = ({ enabled, label }: PermissionItemProps) => (\n+  <div className=\"flex items-center space-x-2 whitespace-nowrap\">\n+    <PermissionIcon enabled={enabled} />\n+    <span className=\"text-xs\">{label}</span>\n+  </div>\n+);\n+\n+export const RoleItem = ({\n+  role,\n+  roleDetail,\n+}: {\n+  role: Role;\n+  roleDetail?: RoleDetail;\n+}) => {\n+  const [isExpanded, setIsExpanded] = useState(false);\n+\n+  if (!roleDetail) {\n+    return (\n+      <Chip key={role.id} size=\"sm\" variant=\"flat\" color=\"primary\">\n+        {role.id}\n+      </Chip>\n+    );\n+  }\n+\n+  const { attributes } = roleDetail;\n+  const roleName = attributes?.name || role.id;\n+  const permissionState = attributes?.permission_state || \"\";\n+  const detailsId = `role-details-${role.id}`;\n+\n+  const permissions = [",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2096964843",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7780,
        "pr_file": "ui/components/users/profile/role-item.tsx",
        "discussion_id": "2096964843",
        "commented_code": "@@ -0,0 +1,123 @@\n+\"use client\";\n+\n+import { Chip } from \"@nextui-org/react\";\n+import { Ban, Check } from \"lucide-react\";\n+import { useState } from \"react\";\n+\n+import { Role, RoleDetail } from \"@/types/users/users\";\n+\n+interface PermissionItemProps {\n+  enabled: boolean;\n+  label: string;\n+}\n+\n+export const PermissionIcon = ({ enabled }: { enabled: boolean }) => (\n+  <span\n+    className={`inline-flex h-4 w-4 items-center justify-center rounded-full ${enabled ? \"bg-green-100 text-green-700\" : \"bg-red-100 text-red-500\"}`}\n+  >\n+    {enabled ? <Check /> : <Ban />}\n+  </span>\n+);\n+\n+const PermissionItem = ({ enabled, label }: PermissionItemProps) => (\n+  <div className=\"flex items-center space-x-2 whitespace-nowrap\">\n+    <PermissionIcon enabled={enabled} />\n+    <span className=\"text-xs\">{label}</span>\n+  </div>\n+);\n+\n+export const RoleItem = ({\n+  role,\n+  roleDetail,\n+}: {\n+  role: Role;\n+  roleDetail?: RoleDetail;\n+}) => {\n+  const [isExpanded, setIsExpanded] = useState(false);\n+\n+  if (!roleDetail) {\n+    return (\n+      <Chip key={role.id} size=\"sm\" variant=\"flat\" color=\"primary\">\n+        {role.id}\n+      </Chip>\n+    );\n+  }\n+\n+  const { attributes } = roleDetail;\n+  const roleName = attributes?.name || role.id;\n+  const permissionState = attributes?.permission_state || \"\";\n+  const detailsId = `role-details-${role.id}`;\n+\n+  const permissions = [",
        "comment_created_at": "2025-05-20T05:39:02+00:00",
        "comment_author": "paabloLC",
        "comment_body": "can we move this to a helper file? We can reuse it in both `add-role-form.tsx` and `edit-role-form.tsx`.\r\n\r\n No need to update those files in this PR, I'll create a follow-up ticket for that. Thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1862607679",
    "pr_number": 5939,
    "pr_file": "ui/components/ui/custom/custom-input.tsx",
    "created_at": "2024-11-28T19:02:40+00:00",
    "commented_code": "render={({ field }) => (\n         <>\n           <FormControl>\n-            <Input\n-              id={name}\n-              isRequired={inputIsRequired}\n-              label={inputLabel}\n-              labelPlacement={labelPlacement}\n-              placeholder={inputPlaceholder}\n-              type={inputType}\n-              variant={variant}\n-              size={size}\n-              isInvalid={isInvalid}\n-              defaultValue={defaultValue}\n-              endContent={endContent}\n-              {...field}\n-            />\n+            {type === \"textarea\" ? (",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "1862607679",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 5939,
        "pr_file": "ui/components/ui/custom/custom-input.tsx",
        "discussion_id": "1862607679",
        "commented_code": "@@ -91,20 +91,33 @@ export const CustomInput = <T extends FieldValues>({\n       render={({ field }) => (\n         <>\n           <FormControl>\n-            <Input\n-              id={name}\n-              isRequired={inputIsRequired}\n-              label={inputLabel}\n-              labelPlacement={labelPlacement}\n-              placeholder={inputPlaceholder}\n-              type={inputType}\n-              variant={variant}\n-              size={size}\n-              isInvalid={isInvalid}\n-              defaultValue={defaultValue}\n-              endContent={endContent}\n-              {...field}\n-            />\n+            {type === \"textarea\" ? (",
        "comment_created_at": "2024-11-28T19:02:40+00:00",
        "comment_author": "paabloLC",
        "comment_body": "@MrCloudSec Thanks for the contribution. \r\n\r\nWe're currently using this component 36 times across 15 different files. It's likely the most important component in Prowler v5 (it's present in every form we have). During our discussion today, I briefly explained how it works.\r\n\r\nThe `<input>` element is an HTML component, while `<textarea>` is a completely distinct HTML component. By making changes to CustomInput, you’re merging two separate components into one, which is not a viable approach.\r\n\r\nTo summarize, we would need to create a CustomTextArea component and customize it in the same way as CustomInput, including all the necessary props so it can be reused consistently without breaking anything.\r\n\r\nI'm happy to assist with any changes needed to move forward, but this will have to wait until the release is finished as there are higher priority items\r\n\r\nPlease ensure this file is not modified in this PR.\r\n\r\nThank you.",
        "pr_file_module": null
      }
    ]
  }
]