[
  {
    "discussion_id": "2060083813",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/analyst/(tools)/checks.ts",
    "created_at": "2025-04-25T11:42:29+00:00",
    "commented_code": "+import { tool } from \"@langchain/core/tools\";\n+\n+import { aiGetProviderChecks } from \"@/lib/lighthouse/helperChecks\";\n+import { checkSchema } from \"@/types/lighthouse\";\n+\n+export const getProviderChecksTool = tool(",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060083813",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/checks.ts",
        "discussion_id": "2060083813",
        "commented_code": "@@ -0,0 +1,17 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { aiGetProviderChecks } from \"@/lib/lighthouse/helperChecks\";\n+import { checkSchema } from \"@/types/lighthouse\";\n+\n+export const getProviderChecksTool = tool(",
        "comment_created_at": "2025-04-25T11:42:29+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "2062566123",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/checks.ts",
        "discussion_id": "2060083813",
        "commented_code": "@@ -0,0 +1,17 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { aiGetProviderChecks } from \"@/lib/lighthouse/helperChecks\";\n+import { checkSchema } from \"@/types/lighthouse\";\n+\n+export const getProviderChecksTool = tool(",
        "comment_created_at": "2025-04-27T08:47:24+00:00",
        "comment_author": "Chan9390",
        "comment_body": "Moved all tools code to `/lib/lighthouse/tools/` directory",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2060084426",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/analyst/(tools)/compliances.ts",
    "created_at": "2025-04-25T11:43:00+00:00",
    "commented_code": "+import { tool } from \"@langchain/core/tools\";\n+\n+import {\n+  aiGetComplianceOverview,\n+  aiGetCompliancesOverview,\n+} from \"@/actions/lighthouse/compliances\";\n+import { aiGetComplianceFrameworks } from \"@/lib/lighthouse/helperComplianceFrameworks\";\n+import {\n+  getComplianceFrameworksSchema,\n+  getComplianceOverviewSchema,\n+  getCompliancesOverviewSchema,\n+} from \"@/types/lighthouse\";\n+\n+export const getCompliancesOverviewTool = tool(",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060084426",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/compliances.ts",
        "discussion_id": "2060084426",
        "commented_code": "@@ -0,0 +1,55 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import {\n+  aiGetComplianceOverview,\n+  aiGetCompliancesOverview,\n+} from \"@/actions/lighthouse/compliances\";\n+import { aiGetComplianceFrameworks } from \"@/lib/lighthouse/helperComplianceFrameworks\";\n+import {\n+  getComplianceFrameworksSchema,\n+  getComplianceOverviewSchema,\n+  getCompliancesOverviewSchema,\n+} from \"@/types/lighthouse\";\n+\n+export const getCompliancesOverviewTool = tool(",
        "comment_created_at": "2025-04-25T11:43:00+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "2062566209",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/compliances.ts",
        "discussion_id": "2060084426",
        "commented_code": "@@ -0,0 +1,55 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import {\n+  aiGetComplianceOverview,\n+  aiGetCompliancesOverview,\n+} from \"@/actions/lighthouse/compliances\";\n+import { aiGetComplianceFrameworks } from \"@/lib/lighthouse/helperComplianceFrameworks\";\n+import {\n+  getComplianceFrameworksSchema,\n+  getComplianceOverviewSchema,\n+  getCompliancesOverviewSchema,\n+} from \"@/types/lighthouse\";\n+\n+export const getCompliancesOverviewTool = tool(",
        "comment_created_at": "2025-04-27T08:48:02+00:00",
        "comment_author": "Chan9390",
        "comment_body": "Moved all tools code to `/lib/lighthouse/tools/` directory",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2060084666",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/analyst/(tools)/findings.ts",
    "created_at": "2025-04-25T11:43:11+00:00",
    "commented_code": "+import { tool } from \"@langchain/core/tools\";\n+\n+import { getFindings, getMetadataInfo } from \"@/actions/findings\";\n+import { getFindingsSchema, getMetadataInfoSchema } from \"@/types/lighthouse\";\n+\n+export const getFindingsTool = tool(",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060084666",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/findings.ts",
        "discussion_id": "2060084666",
        "commented_code": "@@ -0,0 +1,28 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { getFindings, getMetadataInfo } from \"@/actions/findings\";\n+import { getFindingsSchema, getMetadataInfoSchema } from \"@/types/lighthouse\";\n+\n+export const getFindingsTool = tool(",
        "comment_created_at": "2025-04-25T11:43:11+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "2062566239",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/findings.ts",
        "discussion_id": "2060084666",
        "commented_code": "@@ -0,0 +1,28 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { getFindings, getMetadataInfo } from \"@/actions/findings\";\n+import { getFindingsSchema, getMetadataInfoSchema } from \"@/types/lighthouse\";\n+\n+export const getFindingsTool = tool(",
        "comment_created_at": "2025-04-27T08:48:09+00:00",
        "comment_author": "Chan9390",
        "comment_body": "Moved all tools code to `/lib/lighthouse/tools/` directory",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2060084831",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/analyst/(tools)/overview.ts",
    "created_at": "2025-04-25T11:43:20+00:00",
    "commented_code": "+import { tool } from \"@langchain/core/tools\";\n+\n+import {\n+  getFindingsBySeverity,\n+  getFindingsByStatus,\n+  getProvidersOverview,\n+} from \"@/actions/overview/overview\";\n+import {\n+  getFindingsBySeveritySchema,\n+  getFindingsByStatusSchema,\n+  getProvidersOverviewSchema,\n+} from \"@/types/lighthouse\";\n+\n+export const getProvidersOverviewTool = tool(",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060084831",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/overview.ts",
        "discussion_id": "2060084831",
        "commented_code": "@@ -0,0 +1,48 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import {\n+  getFindingsBySeverity,\n+  getFindingsByStatus,\n+  getProvidersOverview,\n+} from \"@/actions/overview/overview\";\n+import {\n+  getFindingsBySeveritySchema,\n+  getFindingsByStatusSchema,\n+  getProvidersOverviewSchema,\n+} from \"@/types/lighthouse\";\n+\n+export const getProvidersOverviewTool = tool(",
        "comment_created_at": "2025-04-25T11:43:20+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "2062566282",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/overview.ts",
        "discussion_id": "2060084831",
        "commented_code": "@@ -0,0 +1,48 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import {\n+  getFindingsBySeverity,\n+  getFindingsByStatus,\n+  getProvidersOverview,\n+} from \"@/actions/overview/overview\";\n+import {\n+  getFindingsBySeveritySchema,\n+  getFindingsByStatusSchema,\n+  getProvidersOverviewSchema,\n+} from \"@/types/lighthouse\";\n+\n+export const getProvidersOverviewTool = tool(",
        "comment_created_at": "2025-04-27T08:48:19+00:00",
        "comment_author": "Chan9390",
        "comment_body": "Moved all tools code to `/lib/lighthouse/tools/` directory",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2060084974",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/analyst/(tools)/providers.ts",
    "created_at": "2025-04-25T11:43:28+00:00",
    "commented_code": "+import { tool } from \"@langchain/core/tools\";\n+\n+import { getProvider, getProviders } from \"@/actions/providers\";\n+import { getProviderSchema, getProvidersSchema } from \"@/types/lighthouse\";\n+\n+export const getProvidersTool = tool(",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060084974",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/providers.ts",
        "discussion_id": "2060084974",
        "commented_code": "@@ -0,0 +1,35 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { getProvider, getProviders } from \"@/actions/providers\";\n+import { getProviderSchema, getProvidersSchema } from \"@/types/lighthouse\";\n+\n+export const getProvidersTool = tool(",
        "comment_created_at": "2025-04-25T11:43:28+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "2062566293",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/providers.ts",
        "discussion_id": "2060084974",
        "commented_code": "@@ -0,0 +1,35 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { getProvider, getProviders } from \"@/actions/providers\";\n+import { getProviderSchema, getProvidersSchema } from \"@/types/lighthouse\";\n+\n+export const getProvidersTool = tool(",
        "comment_created_at": "2025-04-27T08:48:25+00:00",
        "comment_author": "Chan9390",
        "comment_body": "Moved all tools code to `/lib/lighthouse/tools/` directory",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2060085155",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/analyst/(tools)/resources.ts",
    "created_at": "2025-04-25T11:43:36+00:00",
    "commented_code": "+import { tool } from \"@langchain/core/tools\";\n+\n+import { aiGetResource, aiGetResources } from \"@/actions/lighthouse/resources\";\n+import { getResourceSchema, getResourcesSchema } from \"@/types/lighthouse\";\n+\n+export const getResourcesTool = tool(",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060085155",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/resources.ts",
        "discussion_id": "2060085155",
        "commented_code": "@@ -0,0 +1,26 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { aiGetResource, aiGetResources } from \"@/actions/lighthouse/resources\";\n+import { getResourceSchema, getResourcesSchema } from \"@/types/lighthouse\";\n+\n+export const getResourcesTool = tool(",
        "comment_created_at": "2025-04-25T11:43:36+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "2062566336",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/resources.ts",
        "discussion_id": "2060085155",
        "commented_code": "@@ -0,0 +1,26 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { aiGetResource, aiGetResources } from \"@/actions/lighthouse/resources\";\n+import { getResourceSchema, getResourcesSchema } from \"@/types/lighthouse\";\n+\n+export const getResourcesTool = tool(",
        "comment_created_at": "2025-04-27T08:48:34+00:00",
        "comment_author": "Chan9390",
        "comment_body": "Moved all tools code to `/lib/lighthouse/tools/` directory",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2060085458",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/analyst/(tools)/users.ts",
    "created_at": "2025-04-25T11:43:53+00:00",
    "commented_code": "+import { tool } from \"@langchain/core/tools\";\n+import { z } from \"zod\";\n+\n+import { getProfileInfo, getUsers } from \"@/actions/users/users\";\n+import { getUsersSchema } from \"@/types/lighthouse\";\n+\n+export const getUsersTool = tool(",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060085458",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/users.ts",
        "discussion_id": "2060085458",
        "commented_code": "@@ -0,0 +1,29 @@\n+import { tool } from \"@langchain/core/tools\";\n+import { z } from \"zod\";\n+\n+import { getProfileInfo, getUsers } from \"@/actions/users/users\";\n+import { getUsersSchema } from \"@/types/lighthouse\";\n+\n+export const getUsersTool = tool(",
        "comment_created_at": "2025-04-25T11:43:53+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2060085668",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/analyst/(tools)/scans.ts",
    "created_at": "2025-04-25T11:44:03+00:00",
    "commented_code": "+import { tool } from \"@langchain/core/tools\";\n+\n+import { getScan, getScans } from \"@/actions/scans\";\n+import { getScanSchema, getScansSchema } from \"@/types/lighthouse\";\n+\n+export const getScansTool = tool(",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060085668",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/scans.ts",
        "discussion_id": "2060085668",
        "commented_code": "@@ -0,0 +1,30 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { getScan, getScans } from \"@/actions/scans\";\n+import { getScanSchema, getScansSchema } from \"@/types/lighthouse\";\n+\n+export const getScansTool = tool(",
        "comment_created_at": "2025-04-25T11:44:03+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "2062566353",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/(tools)/scans.ts",
        "discussion_id": "2060085668",
        "commented_code": "@@ -0,0 +1,30 @@\n+import { tool } from \"@langchain/core/tools\";\n+\n+import { getScan, getScans } from \"@/actions/scans\";\n+import { getScanSchema, getScansSchema } from \"@/types/lighthouse\";\n+\n+export const getScansTool = tool(",
        "comment_created_at": "2025-04-27T08:48:41+00:00",
        "comment_author": "Chan9390",
        "comment_body": "Moved all tools code to `/lib/lighthouse/tools/` directory",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2060089880",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/analyst/utils.ts",
    "created_at": "2025-04-25T11:47:34+00:00",
    "commented_code": "+import {\n+  AIMessage,\n+  BaseMessage,\n+  ChatMessage,\n+  HumanMessage,\n+} from \"@langchain/core/messages\";\n+import type { Message } from \"ai\";\n+\n+// https://stackoverflow.com/questions/79081298/how-to-stream-langchain-langgraphs-final-generation\n+/**\n+ * Converts a Vercel message to a LangChain message.\n+ * @param message - The message to convert.\n+ * @returns The converted LangChain message.\n+ */\n+export const convertVercelMessageToLangChainMessage = (",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060089880",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/utils.ts",
        "discussion_id": "2060089880",
        "commented_code": "@@ -0,0 +1,48 @@\n+import {\n+  AIMessage,\n+  BaseMessage,\n+  ChatMessage,\n+  HumanMessage,\n+} from \"@langchain/core/messages\";\n+import type { Message } from \"ai\";\n+\n+// https://stackoverflow.com/questions/79081298/how-to-stream-langchain-langgraphs-final-generation\n+/**\n+ * Converts a Vercel message to a LangChain message.\n+ * @param message - The message to convert.\n+ * @returns The converted LangChain message.\n+ */\n+export const convertVercelMessageToLangChainMessage = (",
        "comment_created_at": "2025-04-25T11:47:34+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "2062565799",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/analyst/utils.ts",
        "discussion_id": "2060089880",
        "commented_code": "@@ -0,0 +1,48 @@\n+import {\n+  AIMessage,\n+  BaseMessage,\n+  ChatMessage,\n+  HumanMessage,\n+} from \"@langchain/core/messages\";\n+import type { Message } from \"ai\";\n+\n+// https://stackoverflow.com/questions/79081298/how-to-stream-langchain-langgraphs-final-generation\n+/**\n+ * Converts a Vercel message to a LangChain message.\n+ * @param message - The message to convert.\n+ * @returns The converted LangChain message.\n+ */\n+export const convertVercelMessageToLangChainMessage = (",
        "comment_created_at": "2025-04-27T08:45:40+00:00",
        "comment_author": "Chan9390",
        "comment_body": "Moved code to `/lib/lighthouse/utils.ts`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2060092095",
    "pr_number": 7508,
    "pr_file": "ui/app/(ai)/cache/lib/cache.ts",
    "created_at": "2025-04-25T11:49:16+00:00",
    "commented_code": "+\"use server\";\n+\n+import { getProviders } from \"@/actions/providers/providers\";\n+import { getScans } from \"@/actions/scans/scans\";\n+import { getProfileInfo } from \"@/actions/users/users\";\n+\n+// Cache storage\n+type CacheStore = {\n+  [userId: string]: {\n+    data: CachedData;\n+    timestamp: number;\n+  };\n+};\n+\n+// In-memory cache store\n+const cacheStore: CacheStore = {};\n+\n+// We'll use this to track the cache metadata\n+let cacheVersion = Date.now();\n+let cacheCreatedAt = new Date().toISOString();\n+let cacheHits = 0;\n+let cacheMisses = 0;\n+\n+// Type definition for our cached data\n+interface CachedData {\n+  user: {\n+    name: string;\n+    email: string;\n+    company: string;\n+  };\n+  providers: Array<{\n+    name: string;\n+    provider_type: string;\n+    alias: string;\n+    id: string;\n+    last_checked_at: string;\n+    scan_id?: string;\n+    scan_duration?: string;\n+    resource_count?: number;\n+  }>;\n+}\n+\n+// Function to fetch all required data from APIs\n+const fetchDataFromAPIs = async (): Promise<CachedData> => {",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2060092095",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/cache/lib/cache.ts",
        "discussion_id": "2060092095",
        "commented_code": "@@ -0,0 +1,219 @@\n+\"use server\";\n+\n+import { getProviders } from \"@/actions/providers/providers\";\n+import { getScans } from \"@/actions/scans/scans\";\n+import { getProfileInfo } from \"@/actions/users/users\";\n+\n+// Cache storage\n+type CacheStore = {\n+  [userId: string]: {\n+    data: CachedData;\n+    timestamp: number;\n+  };\n+};\n+\n+// In-memory cache store\n+const cacheStore: CacheStore = {};\n+\n+// We'll use this to track the cache metadata\n+let cacheVersion = Date.now();\n+let cacheCreatedAt = new Date().toISOString();\n+let cacheHits = 0;\n+let cacheMisses = 0;\n+\n+// Type definition for our cached data\n+interface CachedData {\n+  user: {\n+    name: string;\n+    email: string;\n+    company: string;\n+  };\n+  providers: Array<{\n+    name: string;\n+    provider_type: string;\n+    alias: string;\n+    id: string;\n+    last_checked_at: string;\n+    scan_id?: string;\n+    scan_duration?: string;\n+    resource_count?: number;\n+  }>;\n+}\n+\n+// Function to fetch all required data from APIs\n+const fetchDataFromAPIs = async (): Promise<CachedData> => {",
        "comment_created_at": "2025-04-25T11:49:16+00:00",
        "comment_author": "paabloLC",
        "comment_body": "Following up on this comment: https://github.com/prowler-cloud/prowler/pull/7508#discussion_r2052086824 \r\n\r\nCould we please use the `/app` folder only for routing purposes?\r\n\r\nThank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "2062565567",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7508,
        "pr_file": "ui/app/(ai)/cache/lib/cache.ts",
        "discussion_id": "2060092095",
        "commented_code": "@@ -0,0 +1,219 @@\n+\"use server\";\n+\n+import { getProviders } from \"@/actions/providers/providers\";\n+import { getScans } from \"@/actions/scans/scans\";\n+import { getProfileInfo } from \"@/actions/users/users\";\n+\n+// Cache storage\n+type CacheStore = {\n+  [userId: string]: {\n+    data: CachedData;\n+    timestamp: number;\n+  };\n+};\n+\n+// In-memory cache store\n+const cacheStore: CacheStore = {};\n+\n+// We'll use this to track the cache metadata\n+let cacheVersion = Date.now();\n+let cacheCreatedAt = new Date().toISOString();\n+let cacheHits = 0;\n+let cacheMisses = 0;\n+\n+// Type definition for our cached data\n+interface CachedData {\n+  user: {\n+    name: string;\n+    email: string;\n+    company: string;\n+  };\n+  providers: Array<{\n+    name: string;\n+    provider_type: string;\n+    alias: string;\n+    id: string;\n+    last_checked_at: string;\n+    scan_id?: string;\n+    scan_duration?: string;\n+    resource_count?: number;\n+  }>;\n+}\n+\n+// Function to fetch all required data from APIs\n+const fetchDataFromAPIs = async (): Promise<CachedData> => {",
        "comment_created_at": "2025-04-27T08:44:41+00:00",
        "comment_author": "Chan9390",
        "comment_body": "Moved this code to `/lib/lighthouse/cache.ts`.",
        "pr_file_module": null
      }
    ]
  }
]