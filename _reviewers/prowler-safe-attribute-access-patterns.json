[
  {
    "discussion_id": "2171302764",
    "pr_number": 8120,
    "pr_file": "tests/providers/azure/services/defender/defender_ensure_notify_alerts_severity_is_high/defender_ensure_notify_alerts_severity_is_high_test.py",
    "created_at": "2025-06-27T08:57:13+00:00",
    "commented_code": "result[0].resource_id\n                 == f\"/subscriptions/{AZURE_SUBSCRIPTION_ID}/providers/Microsoft.Security/securityContacts/default\"\n             )\n+\n+    def test_defender_default_security_contact_not_found_empty_name(self):\n+        resource_id = f\"/subscriptions/{AZURE_SUBSCRIPTION_ID}/providers/Microsoft.Security/securityContacts/default\"\n+        defender_client = mock.MagicMock\n+        defender_client.security_contacts = {\n+            AZURE_SUBSCRIPTION_ID: {\n+                resource_id: SecurityContacts(\n+                    resource_id=resource_id,\n+                    name=\"\",\n+                    emails=\"\",\n+                    phone=\"\",\n+                    alert_notifications_minimal_severity=\"\",\n+                    alert_notifications_state=\"\",\n+                    notified_roles=[\"\"],\n+                    notified_roles_state=\"\",\n+                )\n+            }\n+        }\n+\n+        contact = defender_client.security_contacts[AZURE_SUBSCRIPTION_ID][resource_id]\n+        contact.name = contact.name or \"default\"",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2171302764",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 8120,
        "pr_file": "tests/providers/azure/services/defender/defender_ensure_notify_alerts_severity_is_high/defender_ensure_notify_alerts_severity_is_high_test.py",
        "discussion_id": "2171302764",
        "commented_code": "@@ -208,3 +208,50 @@ def test_defender_default_security_contact_not_found(self):\n                 result[0].resource_id\n                 == f\"/subscriptions/{AZURE_SUBSCRIPTION_ID}/providers/Microsoft.Security/securityContacts/default\"\n             )\n+\n+    def test_defender_default_security_contact_not_found_empty_name(self):\n+        resource_id = f\"/subscriptions/{AZURE_SUBSCRIPTION_ID}/providers/Microsoft.Security/securityContacts/default\"\n+        defender_client = mock.MagicMock\n+        defender_client.security_contacts = {\n+            AZURE_SUBSCRIPTION_ID: {\n+                resource_id: SecurityContacts(\n+                    resource_id=resource_id,\n+                    name=\"\",\n+                    emails=\"\",\n+                    phone=\"\",\n+                    alert_notifications_minimal_severity=\"\",\n+                    alert_notifications_state=\"\",\n+                    notified_roles=[\"\"],\n+                    notified_roles_state=\"\",\n+                )\n+            }\n+        }\n+\n+        contact = defender_client.security_contacts[AZURE_SUBSCRIPTION_ID][resource_id]\n+        contact.name = contact.name or \"default\"",
        "comment_created_at": "2025-06-27T08:57:13+00:00",
        "comment_author": "MrCloudSec",
        "comment_body": "I think we should remove these lines from the tests to ensure the checks does not leave an empty name\r\n```suggestion\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2171359160",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 8120,
        "pr_file": "tests/providers/azure/services/defender/defender_ensure_notify_alerts_severity_is_high/defender_ensure_notify_alerts_severity_is_high_test.py",
        "discussion_id": "2171302764",
        "commented_code": "@@ -208,3 +208,50 @@ def test_defender_default_security_contact_not_found(self):\n                 result[0].resource_id\n                 == f\"/subscriptions/{AZURE_SUBSCRIPTION_ID}/providers/Microsoft.Security/securityContacts/default\"\n             )\n+\n+    def test_defender_default_security_contact_not_found_empty_name(self):\n+        resource_id = f\"/subscriptions/{AZURE_SUBSCRIPTION_ID}/providers/Microsoft.Security/securityContacts/default\"\n+        defender_client = mock.MagicMock\n+        defender_client.security_contacts = {\n+            AZURE_SUBSCRIPTION_ID: {\n+                resource_id: SecurityContacts(\n+                    resource_id=resource_id,\n+                    name=\"\",\n+                    emails=\"\",\n+                    phone=\"\",\n+                    alert_notifications_minimal_severity=\"\",\n+                    alert_notifications_state=\"\",\n+                    notified_roles=[\"\"],\n+                    notified_roles_state=\"\",\n+                )\n+            }\n+        }\n+\n+        contact = defender_client.security_contacts[AZURE_SUBSCRIPTION_ID][resource_id]\n+        contact.name = contact.name or \"default\"",
        "comment_created_at": "2025-06-27T09:17:58+00:00",
        "comment_author": "danibarranqueroo",
        "comment_body": "I've changed it to `contact.name = getattr(contact, \"name\", \"default\") or \"default\"` so we can replicate better what the service do.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2010015890",
    "pr_number": 7221,
    "pr_file": "prowler/providers/azure/services/vm/vm_service.py",
    "created_at": "2025-03-24T11:44:58+00:00",
    "commented_code": "else None\n                                 ),\n                                 location=vm.location,\n-                                security_profile=vm.security_profile,\n+                                security_profile=vm.get(\"security_profile\", None),",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2010015890",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7221,
        "pr_file": "prowler/providers/azure/services/vm/vm_service.py",
        "discussion_id": "2010015890",
        "commented_code": "@@ -50,7 +50,7 @@ def _get_virtual_machines(self):\n                                     else None\n                                 ),\n                                 location=vm.location,\n-                                security_profile=vm.security_profile,\n+                                security_profile=vm.get(\"security_profile\", None),",
        "comment_created_at": "2025-03-24T11:44:58+00:00",
        "comment_author": "MrCloudSec",
        "comment_body": "Is not `.get` only for dictionaries? I think you should use `getattr`.",
        "pr_file_module": null
      },
      {
        "comment_id": "2010287114",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7221,
        "pr_file": "prowler/providers/azure/services/vm/vm_service.py",
        "discussion_id": "2010015890",
        "commented_code": "@@ -50,7 +50,7 @@ def _get_virtual_machines(self):\n                                     else None\n                                 ),\n                                 location=vm.location,\n-                                security_profile=vm.security_profile,\n+                                security_profile=vm.get(\"security_profile\", None),",
        "comment_created_at": "2025-03-24T14:23:26+00:00",
        "comment_author": "andoniaf",
        "comment_body": "You're right, fixed.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2099602771",
    "pr_number": 7734,
    "pr_file": "prowler/providers/m365/services/entra/entra_service.py",
    "created_at": "2025-05-21T07:47:16+00:00",
    "commented_code": "True if (user.on_premises_sync_enabled) else False\n                     ),\n                     directory_roles_ids=user_roles_map.get(user.id, []),\n+                    is_mfa_capable=(\n+                        registration_details.get(user.id, {}).is_mfa_capable\n+                        if registration_details.get(user.id, {}) is not None\n+                        else False\n+                    ),",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "2099602771",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7734,
        "pr_file": "prowler/providers/m365/services/entra/entra_service.py",
        "discussion_id": "2099602771",
        "commented_code": "@@ -385,6 +398,11 @@ async def fetch_role_members(directory_role):\n                         True if (user.on_premises_sync_enabled) else False\n                     ),\n                     directory_roles_ids=user_roles_map.get(user.id, []),\n+                    is_mfa_capable=(\n+                        registration_details.get(user.id, {}).is_mfa_capable\n+                        if registration_details.get(user.id, {}) is not None\n+                        else False\n+                    ),",
        "comment_created_at": "2025-05-21T07:47:16+00:00",
        "comment_author": "andoniaf",
        "comment_body": "```suggestion\r\n                    is_mfa_capable=getattr(registration_details.get(user.id), \"is_mfa_capable\", False)\r\n```\r\n\r\n`{}` is not None, so if the user is not on `registration_details` (not sure if that's possible) it would return `{}` and `.is_mfa_capable` would fail.",
        "pr_file_module": null
      },
      {
        "comment_id": "2099662253",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 7734,
        "pr_file": "prowler/providers/m365/services/entra/entra_service.py",
        "discussion_id": "2099602771",
        "commented_code": "@@ -385,6 +398,11 @@ async def fetch_role_members(directory_role):\n                         True if (user.on_premises_sync_enabled) else False\n                     ),\n                     directory_roles_ids=user_roles_map.get(user.id, []),\n+                    is_mfa_capable=(\n+                        registration_details.get(user.id, {}).is_mfa_capable\n+                        if registration_details.get(user.id, {}) is not None\n+                        else False\n+                    ),",
        "comment_created_at": "2025-05-21T08:16:16+00:00",
        "comment_author": "HugoPBrito",
        "comment_body": "I believe that information is always available.\nOnce said that, setting it to `None` instead of `{}` should produce the desired result. If we can\u2019t retrieve `registration_details`, we set it to `None`, and as a result, `is_mfa_capable` ends up being set to `False` (non compliant).",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1954555310",
    "pr_number": 6919,
    "pr_file": "prowler/providers/aws/services/codebuild/codebuild_service.py",
    "created_at": "2025-02-13T14:00:35+00:00",
    "commented_code": "if project_info[\"source\"][\"type\"] != \"NO_SOURCE\":\n                 project.source = Source(\n                     type=project_info[\"source\"][\"type\"],\n-                    location=project_info[\"source\"][\"location\"],\n+                    location=(\n+                        project_info[\"source\"][\"location\"]\n+                        if project_info[\"source\"].get(\"location\") is not None\n+                        else \"\"\n+                    ),",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "1954555310",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 6919,
        "pr_file": "prowler/providers/aws/services/codebuild/codebuild_service.py",
        "discussion_id": "1954555310",
        "commented_code": "@@ -84,12 +84,21 @@ def _batch_get_projects(self, project):\n             if project_info[\"source\"][\"type\"] != \"NO_SOURCE\":\n                 project.source = Source(\n                     type=project_info[\"source\"][\"type\"],\n-                    location=project_info[\"source\"][\"location\"],\n+                    location=(\n+                        project_info[\"source\"][\"location\"]\n+                        if project_info[\"source\"].get(\"location\") is not None\n+                        else \"\"\n+                    ),",
        "comment_created_at": "2025-02-13T14:00:35+00:00",
        "comment_author": "jfagoagas",
        "comment_body": "You can also do `project_info[\"source\"].get(\"location\",\"\") to have it in one line without the `if/else`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1916841733",
    "pr_number": 6500,
    "pr_file": "prowler/lib/check/models.py",
    "created_at": "2025-01-15T15:18:39+00:00",
    "commented_code": "project_id: str\n     location: str\n \n-    def __init__(self, metadata):\n-        super().__init__(metadata)\n-        self.resource_name = \"\"\n-        self.resource_id = \"\"\n-        self.project_id = \"\"\n-        self.location = \"\"\n+    def __init__(\n+        self,\n+        metadata,\n+        resource_metadata,\n+        location=None,\n+        resource_name=None,\n+        resource_id=None,\n+        project_id=None,\n+    ):\n+        super().__init__(metadata, resource_metadata)\n+        self.resource_id = (\n+            resource_id\n+            or getattr(resource_metadata, \"id\", None)\n+            or getattr(resource_metadata, \"name\", None)\n+            or \"\"\n+        )\n+        self.resource_name = resource_name or getattr(resource_metadata, \"name\", \"\")\n+        self.project_id = project_id or (\n+            resource_metadata\n+            if isinstance(resource_metadata, str)\n+            else getattr(resource_metadata, \"project_id\", \"\")\n+        )",
    "repo_full_name": "prowler-cloud/prowler",
    "discussion_comments": [
      {
        "comment_id": "1916841733",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 6500,
        "pr_file": "prowler/lib/check/models.py",
        "discussion_id": "1916841733",
        "commented_code": "@@ -511,12 +511,33 @@ class Check_Report_GCP(Check_Report):\n     project_id: str\n     location: str\n \n-    def __init__(self, metadata):\n-        super().__init__(metadata)\n-        self.resource_name = \"\"\n-        self.resource_id = \"\"\n-        self.project_id = \"\"\n-        self.location = \"\"\n+    def __init__(\n+        self,\n+        metadata,\n+        resource_metadata,\n+        location=None,\n+        resource_name=None,\n+        resource_id=None,\n+        project_id=None,\n+    ):\n+        super().__init__(metadata, resource_metadata)\n+        self.resource_id = (\n+            resource_id\n+            or getattr(resource_metadata, \"id\", None)\n+            or getattr(resource_metadata, \"name\", None)\n+            or \"\"\n+        )\n+        self.resource_name = resource_name or getattr(resource_metadata, \"name\", \"\")\n+        self.project_id = project_id or (\n+            resource_metadata\n+            if isinstance(resource_metadata, str)\n+            else getattr(resource_metadata, \"project_id\", \"\")\n+        )",
        "comment_created_at": "2025-01-15T15:18:39+00:00",
        "comment_author": "MrCloudSec",
        "comment_body": "```suggestion\r\n        self.project_id = project_id or getattr(resource_metadata, \"project_id\", \"\")\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1916917198",
        "repo_full_name": "prowler-cloud/prowler",
        "pr_number": 6500,
        "pr_file": "prowler/lib/check/models.py",
        "discussion_id": "1916841733",
        "commented_code": "@@ -511,12 +511,33 @@ class Check_Report_GCP(Check_Report):\n     project_id: str\n     location: str\n \n-    def __init__(self, metadata):\n-        super().__init__(metadata)\n-        self.resource_name = \"\"\n-        self.resource_id = \"\"\n-        self.project_id = \"\"\n-        self.location = \"\"\n+    def __init__(\n+        self,\n+        metadata,\n+        resource_metadata,\n+        location=None,\n+        resource_name=None,\n+        resource_id=None,\n+        project_id=None,\n+    ):\n+        super().__init__(metadata, resource_metadata)\n+        self.resource_id = (\n+            resource_id\n+            or getattr(resource_metadata, \"id\", None)\n+            or getattr(resource_metadata, \"name\", None)\n+            or \"\"\n+        )\n+        self.resource_name = resource_name or getattr(resource_metadata, \"name\", \"\")\n+        self.project_id = project_id or (\n+            resource_metadata\n+            if isinstance(resource_metadata, str)\n+            else getattr(resource_metadata, \"project_id\", \"\")\n+        )",
        "comment_created_at": "2025-01-15T15:56:31+00:00",
        "comment_author": "pedrooot",
        "comment_body": "Done",
        "pr_file_module": null
      }
    ]
  }
]