[
  {
    "discussion_id": "1838604492",
    "pr_number": 10823,
    "pr_file": ".github/workflows/ci.yml",
    "created_at": "2024-11-12T18:47:24+00:00",
    "commented_code": "steps:\n     - uses: actions/checkout@v4\n \n-    - name: Setup uv\n-      uses: astral-sh/setup-uv@v3\n+    - uses: astral-sh/setup-uv@v3\n       with:\n         enable-cache: true\n \n-    - name: install deps\n-      run: uv sync\n+    - name: Install dependencies\n+      run: uv sync --extra timezone\n \n     - run: 'uv run python -c \"import pydantic.version; print(pydantic.version.version_info())\"'\n \n     - run: mkdir coverage\n \n-    - name: test without deps\n+    - name: Test without email-validator",
    "repo_full_name": "pydantic/pydantic",
    "discussion_comments": [
      {
        "comment_id": "1838604492",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10823,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1838604492",
        "commented_code": "@@ -123,36 +122,35 @@ jobs:\n     steps:\n     - uses: actions/checkout@v4\n \n-    - name: Setup uv\n-      uses: astral-sh/setup-uv@v3\n+    - uses: astral-sh/setup-uv@v3\n       with:\n         enable-cache: true\n \n-    - name: install deps\n-      run: uv sync\n+    - name: Install dependencies\n+      run: uv sync --extra timezone\n \n     - run: 'uv run python -c \"import pydantic.version; print(pydantic.version.version_info())\"'\n \n     - run: mkdir coverage\n \n-    - name: test without deps\n+    - name: Test without email-validator",
        "comment_created_at": "2024-11-12T18:47:24+00:00",
        "comment_author": "Viicos",
        "comment_body": "Previously, this was a bit weird because even though we did not install any extra, `tzdata` (which is installed through the `timezone` extra) was still included in the `dev` dependency group. I've tried changing the pytest skip marker for these tests to check for the presence of the `tzdata` library but it's tricky as at the module level, some `ZoneInfo` instances are created so it still fails.\r\n\r\nIn the future, if we include new extras, we should change the name to `Test only with 'timezone' extra`",
        "pr_file_module": null
      },
      {
        "comment_id": "1839332395",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10823,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1838604492",
        "commented_code": "@@ -123,36 +122,35 @@ jobs:\n     steps:\n     - uses: actions/checkout@v4\n \n-    - name: Setup uv\n-      uses: astral-sh/setup-uv@v3\n+    - uses: astral-sh/setup-uv@v3\n       with:\n         enable-cache: true\n \n-    - name: install deps\n-      run: uv sync\n+    - name: Install dependencies\n+      run: uv sync --extra timezone\n \n     - run: 'uv run python -c \"import pydantic.version; print(pydantic.version.version_info())\"'\n \n     - run: mkdir coverage\n \n-    - name: test without deps\n+    - name: Test without email-validator",
        "comment_created_at": "2024-11-13T03:20:16+00:00",
        "comment_author": "sydney-runkle",
        "comment_body": "This feels cleaner to me than the way we had it before, I wasn't a fan of having `tzdata` in `dev`. Thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1829900227",
    "pr_number": 10727,
    "pr_file": ".github/workflows/ci.yml",
    "created_at": "2024-11-05T19:31:19+00:00",
    "commented_code": "steps:\n     - uses: actions/checkout@v4\n \n-    - uses: pdm-project/setup-pdm@v4\n+    - name: Setup uv\n+      uses: astral-sh/setup-uv@v3\n       with:\n-        # cloudflare pages build uses python 3.12, see `/.python-version`\n-        python-version: '3.12'\n+        enable-cache: true\n+\n+    - name: Set up Python 3.12\n+      run: uv python install 3.12\n \n     - name: install dependencies\n       # Unlike the docs build, we don't use mkdocs_material-insiders\n       # Because the secret for accessing the library is not accessible from forks, but we still want to run\n       # this job on public CI runs.\n-      run: |\n-        pdm venv create --with-pip --force $PYTHON\n-        pdm install -G docs\n+      run: uv sync --python 3.12 --group docs",
    "repo_full_name": "pydantic/pydantic",
    "discussion_comments": [
      {
        "comment_id": "1829900227",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10727,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1829900227",
        "commented_code": "@@ -44,20 +44,21 @@ jobs:\n     steps:\n     - uses: actions/checkout@v4\n \n-    - uses: pdm-project/setup-pdm@v4\n+    - name: Setup uv\n+      uses: astral-sh/setup-uv@v3\n       with:\n-        # cloudflare pages build uses python 3.12, see `/.python-version`\n-        python-version: '3.12'\n+        enable-cache: true\n+\n+    - name: Set up Python 3.12\n+      run: uv python install 3.12\n \n     - name: install dependencies\n       # Unlike the docs build, we don't use mkdocs_material-insiders\n       # Because the secret for accessing the library is not accessible from forks, but we still want to run\n       # this job on public CI runs.\n-      run: |\n-        pdm venv create --with-pip --force $PYTHON\n-        pdm install -G docs\n+      run: uv sync --python 3.12 --group docs",
        "comment_created_at": "2024-11-05T19:31:19+00:00",
        "comment_author": "frfahim",
        "comment_body": "uv automatically checks `requires-python` constraints and use that python version. Is it necessary to mention the python version again here?",
        "pr_file_module": null
      },
      {
        "comment_id": "1830088866",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10727,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1829900227",
        "commented_code": "@@ -44,20 +44,21 @@ jobs:\n     steps:\n     - uses: actions/checkout@v4\n \n-    - uses: pdm-project/setup-pdm@v4\n+    - name: Setup uv\n+      uses: astral-sh/setup-uv@v3\n       with:\n-        # cloudflare pages build uses python 3.12, see `/.python-version`\n-        python-version: '3.12'\n+        enable-cache: true\n+\n+    - name: Set up Python 3.12\n+      run: uv python install 3.12\n \n     - name: install dependencies\n       # Unlike the docs build, we don't use mkdocs_material-insiders\n       # Because the secret for accessing the library is not accessible from forks, but we still want to run\n       # this job on public CI runs.\n-      run: |\n-        pdm venv create --with-pip --force $PYTHON\n-        pdm install -G docs\n+      run: uv sync --python 3.12 --group docs",
        "comment_created_at": "2024-11-05T22:35:24+00:00",
        "comment_author": "sydney-runkle",
        "comment_body": "It does seem redundant...",
        "pr_file_module": null
      },
      {
        "comment_id": "1832931437",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10727,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1829900227",
        "commented_code": "@@ -44,20 +44,21 @@ jobs:\n     steps:\n     - uses: actions/checkout@v4\n \n-    - uses: pdm-project/setup-pdm@v4\n+    - name: Setup uv\n+      uses: astral-sh/setup-uv@v3\n       with:\n-        # cloudflare pages build uses python 3.12, see `/.python-version`\n-        python-version: '3.12'\n+        enable-cache: true\n+\n+    - name: Set up Python 3.12\n+      run: uv python install 3.12\n \n     - name: install dependencies\n       # Unlike the docs build, we don't use mkdocs_material-insiders\n       # Because the secret for accessing the library is not accessible from forks, but we still want to run\n       # this job on public CI runs.\n-      run: |\n-        pdm venv create --with-pip --force $PYTHON\n-        pdm install -G docs\n+      run: uv sync --python 3.12 --group docs",
        "comment_created_at": "2024-11-07T15:57:35+00:00",
        "comment_author": "Viicos",
        "comment_body": "So the thing is `uv` will prefer the specified version in the `.python-version` file if present, no matter the previously installed version. We currently don't have such a file, but it could be pretty bad if we end up creating one at some point, especially for the jobs with a Python version matrix: CI will only run on the version from `.python-version`, and we won't notice anything.\r\n\r\nIt's a bit unfortunate, probably using tox (and tox-uv) could help. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1833120425",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10727,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1829900227",
        "commented_code": "@@ -44,20 +44,21 @@ jobs:\n     steps:\n     - uses: actions/checkout@v4\n \n-    - uses: pdm-project/setup-pdm@v4\n+    - name: Setup uv\n+      uses: astral-sh/setup-uv@v3\n       with:\n-        # cloudflare pages build uses python 3.12, see `/.python-version`\n-        python-version: '3.12'\n+        enable-cache: true\n+\n+    - name: Set up Python 3.12\n+      run: uv python install 3.12\n \n     - name: install dependencies\n       # Unlike the docs build, we don't use mkdocs_material-insiders\n       # Because the secret for accessing the library is not accessible from forks, but we still want to run\n       # this job on public CI runs.\n-      run: |\n-        pdm venv create --with-pip --force $PYTHON\n-        pdm install -G docs\n+      run: uv sync --python 3.12 --group docs",
        "comment_created_at": "2024-11-07T17:44:57+00:00",
        "comment_author": "frfahim",
        "comment_body": "when a python version matrix exists, then python version is specified with the sync command\r\n`uv sync --python ${{ matrix.python-version }}`\r\n\r\nSo it will use the requested python version from matrix even the `.python-version` file exist",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1829904894",
    "pr_number": 10727,
    "pr_file": ".github/workflows/docs-update.yml",
    "created_at": "2024-11-05T19:35:29+00:00",
    "commented_code": "steps:\n       - uses: actions/checkout@v4\n \n-      - uses: pdm-project/setup-pdm@v4\n+      - name: Setup uv\n+        uses: astral-sh/setup-uv@v3\n         with:\n-          python-version: '3.12'\n-          cache: true\n+          enable-cache: true\n+\n+      - name: Set up Python 3.12\n+        run: uv python install 3.12\n \n       - name: install\n-        run: pdm install -G linting -G email\n+        run: uv sync --python 3.12 --group linting --extra email",
    "repo_full_name": "pydantic/pydantic",
    "discussion_comments": [
      {
        "comment_id": "1829904894",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10727,
        "pr_file": ".github/workflows/docs-update.yml",
        "discussion_id": "1829904894",
        "commented_code": "@@ -17,13 +17,16 @@ jobs:\n     steps:\n       - uses: actions/checkout@v4\n \n-      - uses: pdm-project/setup-pdm@v4\n+      - name: Setup uv\n+        uses: astral-sh/setup-uv@v3\n         with:\n-          python-version: '3.12'\n-          cache: true\n+          enable-cache: true\n+\n+      - name: Set up Python 3.12\n+        run: uv python install 3.12\n \n       - name: install\n-        run: pdm install -G linting -G email\n+        run: uv sync --python 3.12 --group linting --extra email",
        "comment_created_at": "2024-11-05T19:35:29+00:00",
        "comment_author": "frfahim",
        "comment_body": "```suggestion\r\n        run: uv sync --python 3.12 --group linting \r\n```",
        "pr_file_module": null
      }
    ]
  }
]