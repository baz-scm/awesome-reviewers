[
  {
    "discussion_id": "1965504165",
    "pr_number": 11474,
    "pr_file": ".github/workflows/third-party.yml",
    "created_at": "2025-02-21T13:48:17+00:00",
    "commented_code": "working-directory: ./python\n         run: uv run --frozen pytest ./tests/unit\n \n+  test-langchain:\n+    name: Test LangChain (main branch) on Python ${{ matrix.python-version }}\n+    # If 'schedule' was the trigger, don't run it on contributors' forks\n+    if: |\n+      github.event_name == 'workflow_dispatch' ||\n+      (github.event_name == 'schedule' && github.repository == 'pydantic/pydantic') ||\n+      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'third-party-tests'))\n+    runs-on: ubuntu-latest\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        python-version: ['3.9', '3.10', '3.11', '3.12']\n+\n+    steps:\n+      - name: Checkout Langchain\n+        uses: actions/checkout@v4\n+        with:\n+          repository: langchain-ai/langchain\n+\n+      - name: Checkout Pydantic\n+        uses: actions/checkout@v4\n+        with:\n+          path: pydantic-latest\n+\n+      - name: Install UV\n+        uses: astral-sh/setup-uv@v5\n+\n+      - name: Set up Python ${{ matrix.python-version }}\n+        uses: actions/setup-python@v5\n+        with:\n+          python-version: ${{ matrix.python-version }}",
    "repo_full_name": "pydantic/pydantic",
    "discussion_comments": [
      {
        "comment_id": "1965504165",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 11474,
        "pr_file": ".github/workflows/third-party.yml",
        "discussion_id": "1965504165",
        "commented_code": "@@ -502,6 +502,52 @@ jobs:\n         working-directory: ./python\n         run: uv run --frozen pytest ./tests/unit\n \n+  test-langchain:\n+    name: Test LangChain (main branch) on Python ${{ matrix.python-version }}\n+    # If 'schedule' was the trigger, don't run it on contributors' forks\n+    if: |\n+      github.event_name == 'workflow_dispatch' ||\n+      (github.event_name == 'schedule' && github.repository == 'pydantic/pydantic') ||\n+      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'third-party-tests'))\n+    runs-on: ubuntu-latest\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        python-version: ['3.9', '3.10', '3.11', '3.12']\n+\n+    steps:\n+      - name: Checkout Langchain\n+        uses: actions/checkout@v4\n+        with:\n+          repository: langchain-ai/langchain\n+\n+      - name: Checkout Pydantic\n+        uses: actions/checkout@v4\n+        with:\n+          path: pydantic-latest\n+\n+      - name: Install UV\n+        uses: astral-sh/setup-uv@v5\n+\n+      - name: Set up Python ${{ matrix.python-version }}\n+        uses: actions/setup-python@v5\n+        with:\n+          python-version: ${{ matrix.python-version }}",
        "comment_created_at": "2025-02-21T13:48:17+00:00",
        "comment_author": "Viicos",
        "comment_body": "```suggestion\r\n      - name: Install UV\r\n        uses: astral-sh/setup-uv@v5\r\n        with:\r\n            python-version: ${{ matrix.python-version }}\r\n```\r\n\r\nThe reason I had to use the setup-python action in the previous third-party test is because of the comment I added regarding the uv action. In normal circumstances (i.e. when the project isn't nested under a specific repository folder) you can just let uv setup the Python version.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1896722317",
    "pr_number": 11177,
    "pr_file": ".github/workflows/third-party.yml",
    "created_at": "2024-12-24T12:43:20+00:00",
    "commented_code": "- name: Run SQLModel tests\n       run: uv run --no-project pytest tests\n \n+  test-beanie:\n+    name: Test Beanie (main branch) on Python ${{ matrix.python-version }}\n+    # If 'schedule' was the trigger, don't run it on contributors' forks\n+    if: |\n+      github.event_name == 'workflow_dispatch' ||\n+      (github.event_name == 'schedule' && github.repository == 'pydantic/pydantic') ||\n+      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'third-party-tests'))\n+\n+    runs-on: ubuntu-latest\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        python-version: [ \"3.8\", \"3.9\", \"3.10\", \"3.11\", \"3.12\", \"3.13\" ]\n+        mongodb-version: [4.4, 5.0, 6.0, 7.0, 8.0 ]\n+    steps:\n+    - name: Checkout beanie\n+      uses: actions/checkout@v4\n+      with:\n+        repository: BeanieODM/beanie\n+\n+    - name: Checkout Pydantic\n+      uses: actions/checkout@v4\n+      with:\n+        path: pydantic-latest\n+\n+    - uses: astral-sh/setup-uv@v4\n+      with:\n+        enable-cache: true\n+        python-version: ${{ matrix.python-version }}",
    "repo_full_name": "pydantic/pydantic",
    "discussion_comments": [
      {
        "comment_id": "1896722317",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 11177,
        "pr_file": ".github/workflows/third-party.yml",
        "discussion_id": "1896722317",
        "commented_code": "@@ -113,18 +113,82 @@ jobs:\n     - name: Run SQLModel tests\n       run: uv run --no-project pytest tests\n \n+  test-beanie:\n+    name: Test Beanie (main branch) on Python ${{ matrix.python-version }}\n+    # If 'schedule' was the trigger, don't run it on contributors' forks\n+    if: |\n+      github.event_name == 'workflow_dispatch' ||\n+      (github.event_name == 'schedule' && github.repository == 'pydantic/pydantic') ||\n+      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'third-party-tests'))\n+\n+    runs-on: ubuntu-latest\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        python-version: [ \"3.8\", \"3.9\", \"3.10\", \"3.11\", \"3.12\", \"3.13\" ]\n+        mongodb-version: [4.4, 5.0, 6.0, 7.0, 8.0 ]\n+    steps:\n+    - name: Checkout beanie\n+      uses: actions/checkout@v4\n+      with:\n+        repository: BeanieODM/beanie\n+\n+    - name: Checkout Pydantic\n+      uses: actions/checkout@v4\n+      with:\n+        path: pydantic-latest\n+\n+    - uses: astral-sh/setup-uv@v4\n+      with:\n+        enable-cache: true\n+        python-version: ${{ matrix.python-version }}",
        "comment_created_at": "2024-12-24T12:43:20+00:00",
        "comment_author": "Viicos",
        "comment_body": "```suggestion\r\n    - uses: actions/setup-python@v5\r\n      with:\r\n        python-version: ${{ matrix.python-version }}\r\n```\r\n\r\nBest to be as close to the project's CI.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1829672348",
    "pr_number": 10727,
    "pr_file": ".github/workflows/codspeed.yml",
    "created_at": "2024-11-05T16:36:40+00:00",
    "commented_code": "steps:\n       - uses: actions/checkout@v4\n \n-      - uses: pdm-project/setup-pdm@v4\n+      - name: Setup uv\n+        uses: astral-sh/setup-uv@v3\n         with:\n-          python-version: '3.12'\n-          cache: true\n+          enable-cache: true",
    "repo_full_name": "pydantic/pydantic",
    "discussion_comments": [
      {
        "comment_id": "1829672348",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10727,
        "pr_file": ".github/workflows/codspeed.yml",
        "discussion_id": "1829672348",
        "commented_code": "@@ -16,17 +16,15 @@ jobs:\n     steps:\n       - uses: actions/checkout@v4\n \n-      - uses: pdm-project/setup-pdm@v4\n+      - name: Setup uv\n+        uses: astral-sh/setup-uv@v3\n         with:\n-          python-version: '3.12'\n-          cache: true\n+          enable-cache: true",
        "comment_created_at": "2024-11-05T16:36:40+00:00",
        "comment_author": "sydney-runkle",
        "comment_body": "```suggestion\r\n          enable-cache: true\r\n          python-version: '3.12'\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1829888824",
    "pr_number": 10727,
    "pr_file": ".github/workflows/ci.yml",
    "created_at": "2024-11-05T19:21:50+00:00",
    "commented_code": "steps:\n       - uses: actions/checkout@v4\n \n-      - uses: pdm-project/setup-pdm@v4\n+      - name: Setup uv\n+        uses: astral-sh/setup-uv@v3\n         with:\n-          python-version: ${{ matrix.python-version }}\n-          cache: true\n-          allow-python-prereleases: true\n+          enable-cache: true\n+\n+      - name: Set up Python ${{ matrix.python-version }}\n+        run: uv python install ${{ matrix.python-version }}\n \n       - name: install\n-        run: |\n-          pdm venv create --with-pip --force $PYTHON\n-          pdm install -G linting -G email\n+        run: uv sync --python ${{ matrix.python-version }} --group linting --extra email",
    "repo_full_name": "pydantic/pydantic",
    "discussion_comments": [
      {
        "comment_id": "1829888824",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10727,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1829888824",
        "commented_code": "@@ -22,16 +22,16 @@ jobs:\n     steps:\n       - uses: actions/checkout@v4\n \n-      - uses: pdm-project/setup-pdm@v4\n+      - name: Setup uv\n+        uses: astral-sh/setup-uv@v3\n         with:\n-          python-version: ${{ matrix.python-version }}\n-          cache: true\n-          allow-python-prereleases: true\n+          enable-cache: true\n+\n+      - name: Set up Python ${{ matrix.python-version }}\n+        run: uv python install ${{ matrix.python-version }}\n \n       - name: install\n-        run: |\n-          pdm venv create --with-pip --force $PYTHON\n-          pdm install -G linting -G email\n+        run: uv sync --python ${{ matrix.python-version }} --group linting --extra email",
        "comment_created_at": "2024-11-05T19:21:50+00:00",
        "comment_author": "frfahim",
        "comment_body": "```suggestion\r\n        run: uv sync --python ${{ matrix.python-version }} --group linting\r\n```\r\nDon't need to specify email from extra dependency, it's added in `dev` group and dev group automatically installed with uv sync",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1829901757",
    "pr_number": 10727,
    "pr_file": ".github/workflows/ci.yml",
    "created_at": "2024-11-05T19:32:36+00:00",
    "commented_code": "steps:\n     - uses: actions/checkout@v4\n \n-    - uses: pdm-project/setup-pdm@v4\n+    - name: Setup uv\n+      uses: astral-sh/setup-uv@v3\n       with:\n-        python-version: ${{ matrix.python-version }}\n-        cache: true\n-        allow-python-prereleases: true\n+        enable-cache: true\n \n-    - name: install deps\n-      run: |\n-        pdm venv create --with-pip --force $PYTHON\n-        pdm install -G testing -G email -G timezone\n+    - name: Set up Python ${{ matrix.python-version }}\n+      run: uv python install ${{ matrix.python-version }}\n \n-    - run: pdm info && pdm list\n+    - name: install deps\n+      run: uv sync --python ${{ matrix.python-version }} --group testing --extra timezone --extra email",
    "repo_full_name": "pydantic/pydantic",
    "discussion_comments": [
      {
        "comment_id": "1829901757",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10727,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1829901757",
        "commented_code": "@@ -130,20 +133,18 @@ jobs:\n     steps:\n     - uses: actions/checkout@v4\n \n-    - uses: pdm-project/setup-pdm@v4\n+    - name: Setup uv\n+      uses: astral-sh/setup-uv@v3\n       with:\n-        python-version: ${{ matrix.python-version }}\n-        cache: true\n-        allow-python-prereleases: true\n+        enable-cache: true\n \n-    - name: install deps\n-      run: |\n-        pdm venv create --with-pip --force $PYTHON\n-        pdm install -G testing -G email -G timezone\n+    - name: Set up Python ${{ matrix.python-version }}\n+      run: uv python install ${{ matrix.python-version }}\n \n-    - run: pdm info && pdm list\n+    - name: install deps\n+      run: uv sync --python ${{ matrix.python-version }} --group testing --extra timezone --extra email",
        "comment_created_at": "2024-11-05T19:32:36+00:00",
        "comment_author": "frfahim",
        "comment_body": "```suggestion\r\n      run: uv sync --python ${{ matrix.python-version }} --group testing --extra timezone\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1829902219",
    "pr_number": 10727,
    "pr_file": ".github/workflows/ci.yml",
    "created_at": "2024-11-05T19:32:59+00:00",
    "commented_code": "CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}-without-deps\n \n     - name: install extra deps\n-      run: pdm install -G testing-extra -G email -G timezone\n+      run: uv sync --group testing --group testing-extra --extra timezone --extra email",
    "repo_full_name": "pydantic/pydantic",
    "discussion_comments": [
      {
        "comment_id": "1829902219",
        "repo_full_name": "pydantic/pydantic",
        "pr_number": 10727,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1829902219",
        "commented_code": "@@ -156,7 +157,7 @@ jobs:\n         CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}-without-deps\n \n     - name: install extra deps\n-      run: pdm install -G testing-extra -G email -G timezone\n+      run: uv sync --group testing --group testing-extra --extra timezone --extra email",
        "comment_created_at": "2024-11-05T19:32:59+00:00",
        "comment_author": "frfahim",
        "comment_body": "```suggestion\r\n      run: uv sync --group testing --group testing-extra --extra timezone\r\n```",
        "pr_file_module": null
      }
    ]
  }
]