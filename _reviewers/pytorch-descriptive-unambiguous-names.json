[
  {
    "discussion_id": "2178599052",
    "pr_number": 157290,
    "pr_file": "torch/nativert/executor/memory/LayoutManager.cpp",
    "created_at": "2025-07-01T21:50:28+00:00",
    "commented_code": "}\n }\n \n+#ifndef NDEBUG\n+void LayoutManager::assert_no_overlapping_storages(const Node& node, size_t t)",
    "repo_full_name": "pytorch/pytorch",
    "discussion_comments": [
      {
        "comment_id": "2178599052",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157290,
        "pr_file": "torch/nativert/executor/memory/LayoutManager.cpp",
        "discussion_id": "2178599052",
        "commented_code": "@@ -157,6 +160,121 @@ void LayoutManager::populate_tensor_values() {\n   }\n }\n \n+#ifndef NDEBUG\n+void LayoutManager::assert_no_overlapping_storages(const Node& node, size_t t)",
        "comment_created_at": "2025-07-01T21:50:28+00:00",
        "comment_author": "SherlockNoMad",
        "comment_body": "man... what's the meaning of size_t t?\r\n\r\nI have to check the call site, it says nodeIdx? \r\n\r\nPlease give meaningful names to variable. \r\n\r\nreadability really matters, especially when this code is now is OSS",
        "pr_file_module": null
      },
      {
        "comment_id": "2178747280",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157290,
        "pr_file": "torch/nativert/executor/memory/LayoutManager.cpp",
        "discussion_id": "2178599052",
        "commented_code": "@@ -157,6 +160,121 @@ void LayoutManager::populate_tensor_values() {\n   }\n }\n \n+#ifndef NDEBUG\n+void LayoutManager::assert_no_overlapping_storages(const Node& node, size_t t)",
        "comment_created_at": "2025-07-02T00:05:19+00:00",
        "comment_author": "dolpm",
        "comment_body": "t for time. this is bad naming, i agree.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2181094946",
    "pr_number": 157290,
    "pr_file": "torch/nativert/executor/memory/AliasAnalyzer.cpp",
    "created_at": "2025-07-02T22:37:10+00:00",
    "commented_code": "VLOG(1) << \"extended EOL of value \" << src->id() << \" to \" << eol;\n \n-          extended.insert(src);\n+          extended.emplace(src);\n \n-          if (eol == graph.nodes().size() - 1 /* aliases output */) {\n-            values_associated_with_outputs_.insert(src);\n+          if (aliases_.find(src) == aliases_.end() &&",
    "repo_full_name": "pytorch/pytorch",
    "discussion_comments": [
      {
        "comment_id": "2181094946",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157290,
        "pr_file": "torch/nativert/executor/memory/AliasAnalyzer.cpp",
        "discussion_id": "2181094946",
        "commented_code": "@@ -129,10 +204,11 @@ void AliasAnalyzer::maybe_extend_lifetimes(const Graph& graph) {\n \n           VLOG(1) << \"extended EOL of value \" << src->id() << \" to \" << eol;\n \n-          extended.insert(src);\n+          extended.emplace(src);\n \n-          if (eol == graph.nodes().size() - 1 /* aliases output */) {\n-            values_associated_with_outputs_.insert(src);\n+          if (aliases_.find(src) == aliases_.end() &&",
        "comment_created_at": "2025-07-02T22:37:10+00:00",
        "comment_author": "SherlockNoMad",
        "comment_body": "aliases_ is not initialized at this point. \r\ndo you meant to use aliases? ",
        "pr_file_module": null
      },
      {
        "comment_id": "2181101976",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157290,
        "pr_file": "torch/nativert/executor/memory/AliasAnalyzer.cpp",
        "discussion_id": "2181094946",
        "commented_code": "@@ -129,10 +204,11 @@ void AliasAnalyzer::maybe_extend_lifetimes(const Graph& graph) {\n \n           VLOG(1) << \"extended EOL of value \" << src->id() << \" to \" << eol;\n \n-          extended.insert(src);\n+          extended.emplace(src);\n \n-          if (eol == graph.nodes().size() - 1 /* aliases output */) {\n-            values_associated_with_outputs_.insert(src);\n+          if (aliases_.find(src) == aliases_.end() &&",
        "comment_created_at": "2025-07-02T22:44:06+00:00",
        "comment_author": "SherlockNoMad",
        "comment_body": "for sanity, please rename aliases_ to finalized_aliases_ or something to avoid miss use. \r\n\r\nTBH, it's an anti-pattern to have both `aliases_` and local variable `aliases`. \r\n\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2181738449",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157290,
        "pr_file": "torch/nativert/executor/memory/AliasAnalyzer.cpp",
        "discussion_id": "2181094946",
        "commented_code": "@@ -129,10 +204,11 @@ void AliasAnalyzer::maybe_extend_lifetimes(const Graph& graph) {\n \n           VLOG(1) << \"extended EOL of value \" << src->id() << \" to \" << eol;\n \n-          extended.insert(src);\n+          extended.emplace(src);\n \n-          if (eol == graph.nodes().size() - 1 /* aliases output */) {\n-            values_associated_with_outputs_.insert(src);\n+          if (aliases_.find(src) == aliases_.end() &&",
        "comment_created_at": "2025-07-03T05:09:38+00:00",
        "comment_author": "dolpm",
        "comment_body": "yeah, i updated to mutate aliases_ directly everywhere. i had the two copies back when they had two different structures (aliases_ didn't have the set)....",
        "pr_file_module": null
      }
    ]
  }
]