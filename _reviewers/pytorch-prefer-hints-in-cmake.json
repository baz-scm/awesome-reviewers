[
  {
    "discussion_id": "2190407532",
    "pr_number": 157695,
    "pr_file": "caffe2/CMakeLists.txt",
    "created_at": "2025-07-07T15:28:28+00:00",
    "commented_code": "# location, e.g.\n     # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n     # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n-    find_path(NVSHMEM_LIB_DIR\n+    find_library(NVSHMEM_HOST_LIB\n       # In pip install case, the lib suffix is `.so.3` instead of `.so`\n-      NAMES libnvshmem_host.so libnvshmem_host.so.3\n+      NAMES nvshmem_host nvshmem_host.so.3\n       PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib\n-      DOC \"The location of NVSHMEM library.\")\n+      DOC \"The location of NVSHMEM host library.\")\n+    find_library(NVSHMEM_DEVICE_LIB\n+      # Device lib is a `.a` file\n+      NAMES nvshmem_device\n+      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib",
    "repo_full_name": "pytorch/pytorch",
    "discussion_comments": [
      {
        "comment_id": "2190407532",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157695,
        "pr_file": "caffe2/CMakeLists.txt",
        "discussion_id": "2190407532",
        "commented_code": "@@ -999,20 +999,28 @@ elseif(USE_CUDA)\n     # location, e.g.\n     # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n     # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n-    find_path(NVSHMEM_LIB_DIR\n+    find_library(NVSHMEM_HOST_LIB\n       # In pip install case, the lib suffix is `.so.3` instead of `.so`\n-      NAMES libnvshmem_host.so libnvshmem_host.so.3\n+      NAMES nvshmem_host nvshmem_host.so.3\n       PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib\n-      DOC \"The location of NVSHMEM library.\")\n+      DOC \"The location of NVSHMEM host library.\")\n+    find_library(NVSHMEM_DEVICE_LIB\n+      # Device lib is a `.a` file\n+      NAMES nvshmem_device\n+      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib",
        "comment_created_at": "2025-07-07T15:28:28+00:00",
        "comment_author": "Skylion007",
        "comment_body": "```suggestion\r\n      HINTS $ENV{NVSHMEM_HOME} ${NVSHMEM_PY_DIR}\r\n      PATH_SUFFIXES lib lib64 cuda/lib cuda/lib64 lib/x64)\r\n```\r\n[Borrowed from cudnn: ](https://github.com/pytorch/pytorch/blob/eda0a9cc90b9a63127a49d617329f98b6404e90d/cmake/Modules_CUDA_fix/FindCUDNN.cmake#L46)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2191159815",
    "pr_number": 157695,
    "pr_file": "caffe2/CMakeLists.txt",
    "created_at": "2025-07-07T23:09:58+00:00",
    "commented_code": "# location, e.g.\n     # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n     # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n-    find_path(NVSHMEM_LIB_DIR\n+    find_library(NVSHMEM_HOST_LIB\n       # In pip install case, the lib suffix is `.so.3` instead of `.so`\n-      NAMES libnvshmem_host.so libnvshmem_host.so.3\n-      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib\n-      DOC \"The location of NVSHMEM library.\")\n+      NAMES nvshmem_host nvshmem_host.so.3\n+      HINTS $ENV{NVSHMEM_HOME} ${NVSHMEM_PY_DIR}\n+      PATH_SUFFIXES lib lib64 cuda/lib cuda/lib64 lib/x64\n+      DOC \"The location of NVSHMEM host library.\")\n+    find_library(NVSHMEM_DEVICE_LIB\n+      # Device lib is a `.a` file\n+      NAMES nvshmem_device\n+      HINTS $ENV{NVSHMEM_HOME} ${NVSHMEM_PY_DIR}\n+      PATH_SUFFIXES lib lib64 cuda/lib cuda/lib64 lib/x64\n+      DOC \"The location of NVSHMEM device library.\")\n     find_path(NVSHMEM_INCLUDE_DIR\n       NAMES nvshmem.h\n-      PATHS $ENV{NVSHMEM_HOME}/include ${NVSHMEM_PY_DIR}/include\n+      HINTS $ENV{NVSHMEM_HOME}/include ${NVSHMEM_PY_DIR}/include",
    "repo_full_name": "pytorch/pytorch",
    "discussion_comments": [
      {
        "comment_id": "2191159815",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157695,
        "pr_file": "caffe2/CMakeLists.txt",
        "discussion_id": "2191159815",
        "commented_code": "@@ -999,20 +999,30 @@ elseif(USE_CUDA)\n     # location, e.g.\n     # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n     # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n-    find_path(NVSHMEM_LIB_DIR\n+    find_library(NVSHMEM_HOST_LIB\n       # In pip install case, the lib suffix is `.so.3` instead of `.so`\n-      NAMES libnvshmem_host.so libnvshmem_host.so.3\n-      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib\n-      DOC \"The location of NVSHMEM library.\")\n+      NAMES nvshmem_host nvshmem_host.so.3\n+      HINTS $ENV{NVSHMEM_HOME} ${NVSHMEM_PY_DIR}\n+      PATH_SUFFIXES lib lib64 cuda/lib cuda/lib64 lib/x64\n+      DOC \"The location of NVSHMEM host library.\")\n+    find_library(NVSHMEM_DEVICE_LIB\n+      # Device lib is a `.a` file\n+      NAMES nvshmem_device\n+      HINTS $ENV{NVSHMEM_HOME} ${NVSHMEM_PY_DIR}\n+      PATH_SUFFIXES lib lib64 cuda/lib cuda/lib64 lib/x64\n+      DOC \"The location of NVSHMEM device library.\")\n     find_path(NVSHMEM_INCLUDE_DIR\n       NAMES nvshmem.h\n-      PATHS $ENV{NVSHMEM_HOME}/include ${NVSHMEM_PY_DIR}/include\n+      HINTS $ENV{NVSHMEM_HOME}/include ${NVSHMEM_PY_DIR}/include",
        "comment_created_at": "2025-07-07T23:09:58+00:00",
        "comment_author": "kwen2501",
        "comment_body": "We missed one replacement of PATHS -> HINTS previously. \r\nHINTS: searched before default paths.\r\nPATHS: searched after default paths. \r\nNow it should be good. (I tested it locally)",
        "pr_file_module": null
      },
      {
        "comment_id": "2191161466",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157695,
        "pr_file": "caffe2/CMakeLists.txt",
        "discussion_id": "2191159815",
        "commented_code": "@@ -999,20 +999,30 @@ elseif(USE_CUDA)\n     # location, e.g.\n     # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n     # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n-    find_path(NVSHMEM_LIB_DIR\n+    find_library(NVSHMEM_HOST_LIB\n       # In pip install case, the lib suffix is `.so.3` instead of `.so`\n-      NAMES libnvshmem_host.so libnvshmem_host.so.3\n-      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib\n-      DOC \"The location of NVSHMEM library.\")\n+      NAMES nvshmem_host nvshmem_host.so.3\n+      HINTS $ENV{NVSHMEM_HOME} ${NVSHMEM_PY_DIR}\n+      PATH_SUFFIXES lib lib64 cuda/lib cuda/lib64 lib/x64\n+      DOC \"The location of NVSHMEM host library.\")\n+    find_library(NVSHMEM_DEVICE_LIB\n+      # Device lib is a `.a` file\n+      NAMES nvshmem_device\n+      HINTS $ENV{NVSHMEM_HOME} ${NVSHMEM_PY_DIR}\n+      PATH_SUFFIXES lib lib64 cuda/lib cuda/lib64 lib/x64\n+      DOC \"The location of NVSHMEM device library.\")\n     find_path(NVSHMEM_INCLUDE_DIR\n       NAMES nvshmem.h\n-      PATHS $ENV{NVSHMEM_HOME}/include ${NVSHMEM_PY_DIR}/include\n+      HINTS $ENV{NVSHMEM_HOME}/include ${NVSHMEM_PY_DIR}/include",
        "comment_created_at": "2025-07-07T23:11:08+00:00",
        "comment_author": "kwen2501",
        "comment_body": "@Skylion007 ^^",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2185478935",
    "pr_number": 157513,
    "pr_file": "caffe2/CMakeLists.txt",
    "created_at": "2025-07-04T14:13:39+00:00",
    "commented_code": "# Compile with NVSHMEM\n   # Default value of `USE_NVSHMEM` is set in CMakeLists.txt under root, to ON.\n-  # If user has specified NVSHMEM_HOME, we use it;\n-  # Otherwise, NVSHMEM_HOME is auto detected in tools/setup_helpers/cmake.py\n-  if($ENV{NVSHMEM_HOME})\n-    set(NVSHMEM_HOME $ENV{NVSHMEM_HOME} CACHE PATH \"Path to NVSHMEM build dir\")\n-  endif()\n-\n-  if(NOT DEFINED NVSHMEM_HOME)\n-    message(WARNING \"NVSHMEM_HOME not found. Please run `pip install nvidia-nvshmem-<version>`, or set NVSHMEM_HOME to its location.\")\n-    # Disable nvshmem if NVSHMEM_HOME is not found\n-    set(USE_NVSHMEM FALSE)\n-  endif()\n-\n   if(USE_NVSHMEM)\n-    message(STATUS \"Building with NVSHMEM support:  '${NVSHMEM_HOME}'\")\n-    set(NVSHMEM_INCLUDE_DIR \"${NVSHMEM_HOME}/include\")\n-    set(NVSHMEM_LIB_DIR \"${NVSHMEM_HOME}/lib\")\n-\n+    message(STATUS \"NVSHMEM_HOME set to:  '$ENV{NVSHMEM_HOME}'\")\n+    message(STATUS \"NVSHMEM wheel installed at:  '${NVSHMEM_PY_DIR}'\")\n+    # Search order:\n+    # 1. If user has specified `NVSHMEM_HOME`, we use it;\n+    # 2. If NVSHMEM wheel has been installed, we use it, see\n+    # tools/setup_helpers/cmake.py, where we set `NVSHMEM_PY_DIR` to the wheel\n+    # location, e.g.\n+    # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n+    # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n+    find_path(NVSHMEM_LIB_DIR\n+      # In pip install case, the lib suffix is `.so.3` instead of `.so`\n+      NAMES libnvshmem_host.so libnvshmem_host.so.3\n+      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib",
    "repo_full_name": "pytorch/pytorch",
    "discussion_comments": [
      {
        "comment_id": "2185478935",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157513,
        "pr_file": "caffe2/CMakeLists.txt",
        "discussion_id": "2185478935",
        "commented_code": "@@ -989,23 +989,30 @@ elseif(USE_CUDA)\n \n   # Compile with NVSHMEM\n   # Default value of `USE_NVSHMEM` is set in CMakeLists.txt under root, to ON.\n-  # If user has specified NVSHMEM_HOME, we use it;\n-  # Otherwise, NVSHMEM_HOME is auto detected in tools/setup_helpers/cmake.py\n-  if($ENV{NVSHMEM_HOME})\n-    set(NVSHMEM_HOME $ENV{NVSHMEM_HOME} CACHE PATH \"Path to NVSHMEM build dir\")\n-  endif()\n-\n-  if(NOT DEFINED NVSHMEM_HOME)\n-    message(WARNING \"NVSHMEM_HOME not found. Please run `pip install nvidia-nvshmem-<version>`, or set NVSHMEM_HOME to its location.\")\n-    # Disable nvshmem if NVSHMEM_HOME is not found\n-    set(USE_NVSHMEM FALSE)\n-  endif()\n-\n   if(USE_NVSHMEM)\n-    message(STATUS \"Building with NVSHMEM support:  '${NVSHMEM_HOME}'\")\n-    set(NVSHMEM_INCLUDE_DIR \"${NVSHMEM_HOME}/include\")\n-    set(NVSHMEM_LIB_DIR \"${NVSHMEM_HOME}/lib\")\n-\n+    message(STATUS \"NVSHMEM_HOME set to:  '$ENV{NVSHMEM_HOME}'\")\n+    message(STATUS \"NVSHMEM wheel installed at:  '${NVSHMEM_PY_DIR}'\")\n+    # Search order:\n+    # 1. If user has specified `NVSHMEM_HOME`, we use it;\n+    # 2. If NVSHMEM wheel has been installed, we use it, see\n+    # tools/setup_helpers/cmake.py, where we set `NVSHMEM_PY_DIR` to the wheel\n+    # location, e.g.\n+    # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n+    # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n+    find_path(NVSHMEM_LIB_DIR\n+      # In pip install case, the lib suffix is `.so.3` instead of `.so`\n+      NAMES libnvshmem_host.so libnvshmem_host.so.3\n+      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib",
        "comment_created_at": "2025-07-04T14:13:39+00:00",
        "comment_author": "Skylion007",
        "comment_body": "We never specify NVSHMEM_HOME so it's not building with it...",
        "pr_file_module": null
      },
      {
        "comment_id": "2186211408",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157513,
        "pr_file": "caffe2/CMakeLists.txt",
        "discussion_id": "2185478935",
        "commented_code": "@@ -989,23 +989,30 @@ elseif(USE_CUDA)\n \n   # Compile with NVSHMEM\n   # Default value of `USE_NVSHMEM` is set in CMakeLists.txt under root, to ON.\n-  # If user has specified NVSHMEM_HOME, we use it;\n-  # Otherwise, NVSHMEM_HOME is auto detected in tools/setup_helpers/cmake.py\n-  if($ENV{NVSHMEM_HOME})\n-    set(NVSHMEM_HOME $ENV{NVSHMEM_HOME} CACHE PATH \"Path to NVSHMEM build dir\")\n-  endif()\n-\n-  if(NOT DEFINED NVSHMEM_HOME)\n-    message(WARNING \"NVSHMEM_HOME not found. Please run `pip install nvidia-nvshmem-<version>`, or set NVSHMEM_HOME to its location.\")\n-    # Disable nvshmem if NVSHMEM_HOME is not found\n-    set(USE_NVSHMEM FALSE)\n-  endif()\n-\n   if(USE_NVSHMEM)\n-    message(STATUS \"Building with NVSHMEM support:  '${NVSHMEM_HOME}'\")\n-    set(NVSHMEM_INCLUDE_DIR \"${NVSHMEM_HOME}/include\")\n-    set(NVSHMEM_LIB_DIR \"${NVSHMEM_HOME}/lib\")\n-\n+    message(STATUS \"NVSHMEM_HOME set to:  '$ENV{NVSHMEM_HOME}'\")\n+    message(STATUS \"NVSHMEM wheel installed at:  '${NVSHMEM_PY_DIR}'\")\n+    # Search order:\n+    # 1. If user has specified `NVSHMEM_HOME`, we use it;\n+    # 2. If NVSHMEM wheel has been installed, we use it, see\n+    # tools/setup_helpers/cmake.py, where we set `NVSHMEM_PY_DIR` to the wheel\n+    # location, e.g.\n+    # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n+    # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n+    find_path(NVSHMEM_LIB_DIR\n+      # In pip install case, the lib suffix is `.so.3` instead of `.so`\n+      NAMES libnvshmem_host.so libnvshmem_host.so.3\n+      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib",
        "comment_created_at": "2025-07-04T23:42:25+00:00",
        "comment_author": "kwen2501",
        "comment_body": "arg, I thought `find_path` would search for default paths if the file is not found from the specified paths. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2188636528",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157513,
        "pr_file": "caffe2/CMakeLists.txt",
        "discussion_id": "2185478935",
        "commented_code": "@@ -989,23 +989,30 @@ elseif(USE_CUDA)\n \n   # Compile with NVSHMEM\n   # Default value of `USE_NVSHMEM` is set in CMakeLists.txt under root, to ON.\n-  # If user has specified NVSHMEM_HOME, we use it;\n-  # Otherwise, NVSHMEM_HOME is auto detected in tools/setup_helpers/cmake.py\n-  if($ENV{NVSHMEM_HOME})\n-    set(NVSHMEM_HOME $ENV{NVSHMEM_HOME} CACHE PATH \"Path to NVSHMEM build dir\")\n-  endif()\n-\n-  if(NOT DEFINED NVSHMEM_HOME)\n-    message(WARNING \"NVSHMEM_HOME not found. Please run `pip install nvidia-nvshmem-<version>`, or set NVSHMEM_HOME to its location.\")\n-    # Disable nvshmem if NVSHMEM_HOME is not found\n-    set(USE_NVSHMEM FALSE)\n-  endif()\n-\n   if(USE_NVSHMEM)\n-    message(STATUS \"Building with NVSHMEM support:  '${NVSHMEM_HOME}'\")\n-    set(NVSHMEM_INCLUDE_DIR \"${NVSHMEM_HOME}/include\")\n-    set(NVSHMEM_LIB_DIR \"${NVSHMEM_HOME}/lib\")\n-\n+    message(STATUS \"NVSHMEM_HOME set to:  '$ENV{NVSHMEM_HOME}'\")\n+    message(STATUS \"NVSHMEM wheel installed at:  '${NVSHMEM_PY_DIR}'\")\n+    # Search order:\n+    # 1. If user has specified `NVSHMEM_HOME`, we use it;\n+    # 2. If NVSHMEM wheel has been installed, we use it, see\n+    # tools/setup_helpers/cmake.py, where we set `NVSHMEM_PY_DIR` to the wheel\n+    # location, e.g.\n+    # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n+    # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n+    find_path(NVSHMEM_LIB_DIR\n+      # In pip install case, the lib suffix is `.so.3` instead of `.so`\n+      NAMES libnvshmem_host.so libnvshmem_host.so.3\n+      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib",
        "comment_created_at": "2025-07-06T21:31:47+00:00",
        "comment_author": "vinjn",
        "comment_body": "I have a question: why did the the original impl fail to extrat NVSHMEM from system installation? Thanks",
        "pr_file_module": null
      },
      {
        "comment_id": "2189125933",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 157513,
        "pr_file": "caffe2/CMakeLists.txt",
        "discussion_id": "2185478935",
        "commented_code": "@@ -989,23 +989,30 @@ elseif(USE_CUDA)\n \n   # Compile with NVSHMEM\n   # Default value of `USE_NVSHMEM` is set in CMakeLists.txt under root, to ON.\n-  # If user has specified NVSHMEM_HOME, we use it;\n-  # Otherwise, NVSHMEM_HOME is auto detected in tools/setup_helpers/cmake.py\n-  if($ENV{NVSHMEM_HOME})\n-    set(NVSHMEM_HOME $ENV{NVSHMEM_HOME} CACHE PATH \"Path to NVSHMEM build dir\")\n-  endif()\n-\n-  if(NOT DEFINED NVSHMEM_HOME)\n-    message(WARNING \"NVSHMEM_HOME not found. Please run `pip install nvidia-nvshmem-<version>`, or set NVSHMEM_HOME to its location.\")\n-    # Disable nvshmem if NVSHMEM_HOME is not found\n-    set(USE_NVSHMEM FALSE)\n-  endif()\n-\n   if(USE_NVSHMEM)\n-    message(STATUS \"Building with NVSHMEM support:  '${NVSHMEM_HOME}'\")\n-    set(NVSHMEM_INCLUDE_DIR \"${NVSHMEM_HOME}/include\")\n-    set(NVSHMEM_LIB_DIR \"${NVSHMEM_HOME}/lib\")\n-\n+    message(STATUS \"NVSHMEM_HOME set to:  '$ENV{NVSHMEM_HOME}'\")\n+    message(STATUS \"NVSHMEM wheel installed at:  '${NVSHMEM_PY_DIR}'\")\n+    # Search order:\n+    # 1. If user has specified `NVSHMEM_HOME`, we use it;\n+    # 2. If NVSHMEM wheel has been installed, we use it, see\n+    # tools/setup_helpers/cmake.py, where we set `NVSHMEM_PY_DIR` to the wheel\n+    # location, e.g.\n+    # `/path/to/conda/lib/python3.10/site-packages/nvidia/nvshmem`,\n+    # 3. Let CMake find it in the default system paths, e.g. /usr/local.\n+    find_path(NVSHMEM_LIB_DIR\n+      # In pip install case, the lib suffix is `.so.3` instead of `.so`\n+      NAMES libnvshmem_host.so libnvshmem_host.so.3\n+      PATHS $ENV{NVSHMEM_HOME}/lib ${NVSHMEM_PY_DIR}/lib",
        "comment_created_at": "2025-07-07T06:51:11+00:00",
        "comment_author": "kwen2501",
        "comment_body": "@vinjn because `NVSHMEM_HOME` wasn't set to system install location unless user sets it. The PR uses CMake's `find_...` to search for it. ",
        "pr_file_module": null
      }
    ]
  }
]