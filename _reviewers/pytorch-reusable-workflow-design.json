[
  {
    "discussion_id": "2127762079",
    "pr_number": 155170,
    "pr_file": ".github/workflows/trunk-tagging.yml",
    "created_at": "2025-06-05T01:16:35+00:00",
    "commented_code": "+name: trunk-tagging\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  workflow_dispatch:\n+    inputs:\n+      commit_sha:\n+        description: 'Commit SHA to tag (leave empty for current HEAD)'\n+        required: false\n+        type: string\n+\n+concurrency:\n+  group: trunk-tagging-${{ github.event.inputs.commit_sha || github.sha }}\n+  cancel-in-progress: false\n+\n+permissions:\n+  contents: write\n+\n+jobs:\n+  tag-trunk-commit:\n+    name: Tag trunk commit\n+    runs-on: ubuntu-latest\n+    if: github.repository_owner == 'pytorch'\n+\n+    steps:\n+      - name: Pre-checkout validation\n+        run: |\n+          # For workflow_dispatch, validate SHA format before checkout\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+\n+            # Verify it's a well-formed SHA (40 hex characters)\n+            if ! echo \"${COMMIT_SHA}\" | grep -qE '^[a-f0-9]{40}$'; then\n+              echo \"Error: Invalid commit SHA format. Expected 40 hexadecimal characters, got: ${COMMIT_SHA}\"\n+              exit 1\n+            fi\n+\n+            echo \"\u2705 Pre-checkout validation passed for: ${COMMIT_SHA}\"\n+          else\n+            echo \"\u2705 Using current commit SHA - no pre-checkout validation needed\"\n+          fi\n+\n+      - name: Checkout repository\n+        uses: actions/checkout@v4\n+        with:\n+          # Fetch full history to ensure we have all commits\n+          fetch-depth: 0\n+          # For workflow_dispatch, checkout the specified commit\n+          ref: ${{ github.event.inputs.commit_sha || github.sha }}\n+\n+      - name: Set commit SHA\n+        id: commit\n+        run: |\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+          else\n+            COMMIT_SHA=\"${{ github.sha }}\"\n+          fi\n+          echo \"sha=${COMMIT_SHA}\" >> $GITHUB_OUTPUT\n+          echo \"tag_name=trunk/${COMMIT_SHA}\" >> $GITHUB_OUTPUT",
    "repo_full_name": "pytorch/pytorch",
    "discussion_comments": [
      {
        "comment_id": "2127762079",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 155170,
        "pr_file": ".github/workflows/trunk-tagging.yml",
        "discussion_id": "2127762079",
        "commented_code": "@@ -0,0 +1,224 @@\n+name: trunk-tagging\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  workflow_dispatch:\n+    inputs:\n+      commit_sha:\n+        description: 'Commit SHA to tag (leave empty for current HEAD)'\n+        required: false\n+        type: string\n+\n+concurrency:\n+  group: trunk-tagging-${{ github.event.inputs.commit_sha || github.sha }}\n+  cancel-in-progress: false\n+\n+permissions:\n+  contents: write\n+\n+jobs:\n+  tag-trunk-commit:\n+    name: Tag trunk commit\n+    runs-on: ubuntu-latest\n+    if: github.repository_owner == 'pytorch'\n+\n+    steps:\n+      - name: Pre-checkout validation\n+        run: |\n+          # For workflow_dispatch, validate SHA format before checkout\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+\n+            # Verify it's a well-formed SHA (40 hex characters)\n+            if ! echo \"${COMMIT_SHA}\" | grep -qE '^[a-f0-9]{40}$'; then\n+              echo \"Error: Invalid commit SHA format. Expected 40 hexadecimal characters, got: ${COMMIT_SHA}\"\n+              exit 1\n+            fi\n+\n+            echo \"\u2705 Pre-checkout validation passed for: ${COMMIT_SHA}\"\n+          else\n+            echo \"\u2705 Using current commit SHA - no pre-checkout validation needed\"\n+          fi\n+\n+      - name: Checkout repository\n+        uses: actions/checkout@v4\n+        with:\n+          # Fetch full history to ensure we have all commits\n+          fetch-depth: 0\n+          # For workflow_dispatch, checkout the specified commit\n+          ref: ${{ github.event.inputs.commit_sha || github.sha }}\n+\n+      - name: Set commit SHA\n+        id: commit\n+        run: |\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+          else\n+            COMMIT_SHA=\"${{ github.sha }}\"\n+          fi\n+          echo \"sha=${COMMIT_SHA}\" >> $GITHUB_OUTPUT\n+          echo \"tag_name=trunk/${COMMIT_SHA}\" >> $GITHUB_OUTPUT",
        "comment_created_at": "2025-06-05T01:16:35+00:00",
        "comment_author": "huydhn",
        "comment_body": "Do you plan to have another workflows here besides `trunk`?  If yes, I think it's better not to hardcode `trunk` prefix here but rather have it as an input parameter so that we could use matrix strategy to extend the list later on",
        "pr_file_module": null
      },
      {
        "comment_id": "2127771905",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 155170,
        "pr_file": ".github/workflows/trunk-tagging.yml",
        "discussion_id": "2127762079",
        "commented_code": "@@ -0,0 +1,224 @@\n+name: trunk-tagging\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  workflow_dispatch:\n+    inputs:\n+      commit_sha:\n+        description: 'Commit SHA to tag (leave empty for current HEAD)'\n+        required: false\n+        type: string\n+\n+concurrency:\n+  group: trunk-tagging-${{ github.event.inputs.commit_sha || github.sha }}\n+  cancel-in-progress: false\n+\n+permissions:\n+  contents: write\n+\n+jobs:\n+  tag-trunk-commit:\n+    name: Tag trunk commit\n+    runs-on: ubuntu-latest\n+    if: github.repository_owner == 'pytorch'\n+\n+    steps:\n+      - name: Pre-checkout validation\n+        run: |\n+          # For workflow_dispatch, validate SHA format before checkout\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+\n+            # Verify it's a well-formed SHA (40 hex characters)\n+            if ! echo \"${COMMIT_SHA}\" | grep -qE '^[a-f0-9]{40}$'; then\n+              echo \"Error: Invalid commit SHA format. Expected 40 hexadecimal characters, got: ${COMMIT_SHA}\"\n+              exit 1\n+            fi\n+\n+            echo \"\u2705 Pre-checkout validation passed for: ${COMMIT_SHA}\"\n+          else\n+            echo \"\u2705 Using current commit SHA - no pre-checkout validation needed\"\n+          fi\n+\n+      - name: Checkout repository\n+        uses: actions/checkout@v4\n+        with:\n+          # Fetch full history to ensure we have all commits\n+          fetch-depth: 0\n+          # For workflow_dispatch, checkout the specified commit\n+          ref: ${{ github.event.inputs.commit_sha || github.sha }}\n+\n+      - name: Set commit SHA\n+        id: commit\n+        run: |\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+          else\n+            COMMIT_SHA=\"${{ github.sha }}\"\n+          fi\n+          echo \"sha=${COMMIT_SHA}\" >> $GITHUB_OUTPUT\n+          echo \"tag_name=trunk/${COMMIT_SHA}\" >> $GITHUB_OUTPUT",
        "comment_created_at": "2025-06-05T01:27:24+00:00",
        "comment_author": "izaitsevfb",
        "comment_body": "`trunk` here doesn't refer to a specific workflow, but rather to the [original concept of \"trunk\"](https://www.atlassian.com/continuous-delivery/continuous-integration/trunk-based-development), i.e. the \"main\" branch, which the \"trunk\" workflow derives it's name from too",
        "pr_file_module": null
      },
      {
        "comment_id": "2127772669",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 155170,
        "pr_file": ".github/workflows/trunk-tagging.yml",
        "discussion_id": "2127762079",
        "commented_code": "@@ -0,0 +1,224 @@\n+name: trunk-tagging\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  workflow_dispatch:\n+    inputs:\n+      commit_sha:\n+        description: 'Commit SHA to tag (leave empty for current HEAD)'\n+        required: false\n+        type: string\n+\n+concurrency:\n+  group: trunk-tagging-${{ github.event.inputs.commit_sha || github.sha }}\n+  cancel-in-progress: false\n+\n+permissions:\n+  contents: write\n+\n+jobs:\n+  tag-trunk-commit:\n+    name: Tag trunk commit\n+    runs-on: ubuntu-latest\n+    if: github.repository_owner == 'pytorch'\n+\n+    steps:\n+      - name: Pre-checkout validation\n+        run: |\n+          # For workflow_dispatch, validate SHA format before checkout\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+\n+            # Verify it's a well-formed SHA (40 hex characters)\n+            if ! echo \"${COMMIT_SHA}\" | grep -qE '^[a-f0-9]{40}$'; then\n+              echo \"Error: Invalid commit SHA format. Expected 40 hexadecimal characters, got: ${COMMIT_SHA}\"\n+              exit 1\n+            fi\n+\n+            echo \"\u2705 Pre-checkout validation passed for: ${COMMIT_SHA}\"\n+          else\n+            echo \"\u2705 Using current commit SHA - no pre-checkout validation needed\"\n+          fi\n+\n+      - name: Checkout repository\n+        uses: actions/checkout@v4\n+        with:\n+          # Fetch full history to ensure we have all commits\n+          fetch-depth: 0\n+          # For workflow_dispatch, checkout the specified commit\n+          ref: ${{ github.event.inputs.commit_sha || github.sha }}\n+\n+      - name: Set commit SHA\n+        id: commit\n+        run: |\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+          else\n+            COMMIT_SHA=\"${{ github.sha }}\"\n+          fi\n+          echo \"sha=${COMMIT_SHA}\" >> $GITHUB_OUTPUT\n+          echo \"tag_name=trunk/${COMMIT_SHA}\" >> $GITHUB_OUTPUT",
        "comment_created_at": "2025-06-05T01:28:24+00:00",
        "comment_author": "izaitsevfb",
        "comment_body": "but to answer your question, no, I don't plan on using multiple names for the tags\r\n\r\nplease let me know if you think I should use another name pattern, like `main/{sha}`",
        "pr_file_module": null
      },
      {
        "comment_id": "2127777026",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 155170,
        "pr_file": ".github/workflows/trunk-tagging.yml",
        "discussion_id": "2127762079",
        "commented_code": "@@ -0,0 +1,224 @@\n+name: trunk-tagging\n+\n+on:\n+  push:\n+    branches:\n+      - main\n+  workflow_dispatch:\n+    inputs:\n+      commit_sha:\n+        description: 'Commit SHA to tag (leave empty for current HEAD)'\n+        required: false\n+        type: string\n+\n+concurrency:\n+  group: trunk-tagging-${{ github.event.inputs.commit_sha || github.sha }}\n+  cancel-in-progress: false\n+\n+permissions:\n+  contents: write\n+\n+jobs:\n+  tag-trunk-commit:\n+    name: Tag trunk commit\n+    runs-on: ubuntu-latest\n+    if: github.repository_owner == 'pytorch'\n+\n+    steps:\n+      - name: Pre-checkout validation\n+        run: |\n+          # For workflow_dispatch, validate SHA format before checkout\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+\n+            # Verify it's a well-formed SHA (40 hex characters)\n+            if ! echo \"${COMMIT_SHA}\" | grep -qE '^[a-f0-9]{40}$'; then\n+              echo \"Error: Invalid commit SHA format. Expected 40 hexadecimal characters, got: ${COMMIT_SHA}\"\n+              exit 1\n+            fi\n+\n+            echo \"\u2705 Pre-checkout validation passed for: ${COMMIT_SHA}\"\n+          else\n+            echo \"\u2705 Using current commit SHA - no pre-checkout validation needed\"\n+          fi\n+\n+      - name: Checkout repository\n+        uses: actions/checkout@v4\n+        with:\n+          # Fetch full history to ensure we have all commits\n+          fetch-depth: 0\n+          # For workflow_dispatch, checkout the specified commit\n+          ref: ${{ github.event.inputs.commit_sha || github.sha }}\n+\n+      - name: Set commit SHA\n+        id: commit\n+        run: |\n+          if [ -n \"${{ github.event.inputs.commit_sha }}\" ]; then\n+            COMMIT_SHA=\"${{ github.event.inputs.commit_sha }}\"\n+          else\n+            COMMIT_SHA=\"${{ github.sha }}\"\n+          fi\n+          echo \"sha=${COMMIT_SHA}\" >> $GITHUB_OUTPUT\n+          echo \"tag_name=trunk/${COMMIT_SHA}\" >> $GITHUB_OUTPUT",
        "comment_created_at": "2025-06-05T01:33:40+00:00",
        "comment_author": "huydhn",
        "comment_body": "Got it, `main` is the name of a protected branch, so I don't want to use it.  `trunk` is a good prefix to keep IMO",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2127772973",
    "pr_number": 155170,
    "pr_file": ".github/workflows/trunk-tagging.yml",
    "created_at": "2025-06-05T01:28:48+00:00",
    "commented_code": "+name: trunk-tagging",
    "repo_full_name": "pytorch/pytorch",
    "discussion_comments": [
      {
        "comment_id": "2127772973",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 155170,
        "pr_file": ".github/workflows/trunk-tagging.yml",
        "discussion_id": "2127772973",
        "commented_code": "@@ -0,0 +1,224 @@\n+name: trunk-tagging",
        "comment_created_at": "2025-06-05T01:28:48+00:00",
        "comment_author": "huydhn",
        "comment_body": "Have you considered wrapping the logic in this workflow into a GHA and find a home for it outside of PyTorch?  The input to that GHA can be the ~~trio~~ duo `repo_name`, `commit_sha`~~, and `workflow_names` with more than one workflow~~.  The benefit is that other repos could use it too.  This could come later if there is a need, for now, we can keep this in mind.",
        "pr_file_module": null
      },
      {
        "comment_id": "2127774028",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 155170,
        "pr_file": ".github/workflows/trunk-tagging.yml",
        "discussion_id": "2127772973",
        "commented_code": "@@ -0,0 +1,224 @@\n+name: trunk-tagging",
        "comment_created_at": "2025-06-05T01:30:17+00:00",
        "comment_author": "izaitsevfb",
        "comment_body": "good idea, but I'd prefer to do it later if there is a demand",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2114903472",
    "pr_number": 153117,
    "pr_file": ".github/workflows/build-triton-wheel.yml",
    "created_at": "2025-05-29T23:49:08+00:00",
    "commented_code": "docker exec -t \"${container_name}\" yum install -y zlib-devel zip\n           docker exec -t \"${container_name}\" \"${PYTHON_EXECUTABLE}\"  -m pip install -U setuptools==78.1.0 pybind11==2.13.1 auditwheel wheel\n-          docker exec -t \"${container_name}\" conda install cmake\\>=3.20 -c conda-forge -y\n+          docker exec -t \"${container_name}\" pip install cmake",
    "repo_full_name": "pytorch/pytorch",
    "discussion_comments": [
      {
        "comment_id": "2114903472",
        "repo_full_name": "pytorch/pytorch",
        "pr_number": 153117,
        "pr_file": ".github/workflows/build-triton-wheel.yml",
        "discussion_id": "2114903472",
        "commented_code": "@@ -139,7 +139,9 @@ jobs:\n \n           docker exec -t \"${container_name}\" yum install -y zlib-devel zip\n           docker exec -t \"${container_name}\" \"${PYTHON_EXECUTABLE}\"  -m pip install -U setuptools==78.1.0 pybind11==2.13.1 auditwheel wheel\n-          docker exec -t \"${container_name}\" conda install cmake\\>=3.20 -c conda-forge -y\n+          docker exec -t \"${container_name}\" pip install cmake",
        "comment_created_at": "2025-05-29T23:49:08+00:00",
        "comment_author": "atalman",
        "comment_body": "```suggestion\r\n          docker exec -t \"${container_name}\" pip install cmake --force-reinstall\r\n```",
        "pr_file_module": null
      }
    ]
  }
]