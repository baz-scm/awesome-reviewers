[
  {
    "discussion_id": "1945325833",
    "pr_number": 45986,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
    "created_at": "2025-02-06T19:43:56+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+To use a custom Dockerfile, add the file in the `src/main/docker` directory or anywhere inside the module, and set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.\n+* You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Set the container runtime:\n++\n+[source,properties]\n+----\n+quarkus.native.container-build=true\n+----\n+. Optional: Set the following properties in the `application.properties` file, as required by your environment:\n+.. If you are using an untrusted certificate, configure the `KubernetesClient` property:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+.. Expose the service to create an {openshift} route:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+.. Set the path to your custom Dockerfile:\n++\n+[source,properties,subs=\"attributes+,+quotes\"]\n+----\n+quarkus.openshift.native-dockerfile=<path_to_your_dockerfile>\n+----\n+The following example shows the path to the `Dockerfile.custom-native`:\n++\n+[source,properties]\n+----\n+quarkus.openshift.jvm-dockerfile=src/main/docker/Dockerfile.custom-native\n+----\n+.. Specify the container engine:\n+** To build a native executable with Podman:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=podman\n+----\n+** To build a native executable with Docker:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=docker\n+----\n+\n+. Finally, build a native executable, package, and deploy your application to {openshift}:\n++\n+[source,shell,subs=\"attributes+,+quotes\"]\n+----\n+./mvnw clean package -Pnative -Dquarkus.openshift.deploy=true\n+----\n+\n+== Verification\n+\n+. Verify that an image stream and a service resource is created and the application is deployed by using the OpenShift web console.",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "1945325833",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45986,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "1945325833",
        "commented_code": "@@ -0,0 +1,112 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+To use a custom Dockerfile, add the file in the `src/main/docker` directory or anywhere inside the module, and set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.\n+* You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Set the container runtime:\n++\n+[source,properties]\n+----\n+quarkus.native.container-build=true\n+----\n+. Optional: Set the following properties in the `application.properties` file, as required by your environment:\n+.. If you are using an untrusted certificate, configure the `KubernetesClient` property:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+.. Expose the service to create an {openshift} route:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+.. Set the path to your custom Dockerfile:\n++\n+[source,properties,subs=\"attributes+,+quotes\"]\n+----\n+quarkus.openshift.native-dockerfile=<path_to_your_dockerfile>\n+----\n+The following example shows the path to the `Dockerfile.custom-native`:\n++\n+[source,properties]\n+----\n+quarkus.openshift.jvm-dockerfile=src/main/docker/Dockerfile.custom-native\n+----\n+.. Specify the container engine:\n+** To build a native executable with Podman:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=podman\n+----\n+** To build a native executable with Docker:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=docker\n+----\n+\n+. Finally, build a native executable, package, and deploy your application to {openshift}:\n++\n+[source,shell,subs=\"attributes+,+quotes\"]\n+----\n+./mvnw clean package -Pnative -Dquarkus.openshift.deploy=true\n+----\n+\n+== Verification\n+\n+. Verify that an image stream and a service resource is created and the application is deployed by using the OpenShift web console.",
        "comment_created_at": "2025-02-06T19:43:56+00:00",
        "comment_author": "rolfedh",
        "comment_body": "```suggestion\r\n. Verify that an image stream and a service resource are created, and that the application is deployed.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1947062235",
    "pr_number": 45954,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-S2I-howto.adoc",
    "created_at": "2025-02-07T19:20:07+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-S2I-howto\"]\n+= Using S2I to deploy {project-name} applications to OpenShift\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on OpenShift by using Source-to-Image (S2I).\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your {project-name} applications to {openshift-long} by using the Source-to-Image (S2I) method.\n+With S2I, you must provide the source code to the build container through a Git repository or by uploading the source at build time.\n+\n+\n+[IMPORTANT]\n+====\n+S2I is not supported for native deployments.\n+For deploying {project-name} applications compiled to native executables, use the Docker build strategy.",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "1947062235",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45954,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-S2I-howto.adoc",
        "discussion_id": "1947062235",
        "commented_code": "@@ -0,0 +1,239 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-S2I-howto\"]\n+= Using S2I to deploy {project-name} applications to OpenShift\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on OpenShift by using Source-to-Image (S2I).\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your {project-name} applications to {openshift-long} by using the Source-to-Image (S2I) method.\n+With S2I, you must provide the source code to the build container through a Git repository or by uploading the source at build time.\n+\n+\n+[IMPORTANT]\n+====\n+S2I is not supported for native deployments.\n+For deploying {project-name} applications compiled to native executables, use the Docker build strategy.",
        "comment_created_at": "2025-02-07T19:20:07+00:00",
        "comment_author": "rolfedh",
        "comment_body": "```suggestion\r\nTo deploy {project-name} applications compiled as native executables, use the Docker build strategy.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1950954862",
    "pr_number": 45918,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-docker-howto.adoc",
    "created_at": "2025-02-11T14:27:29+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-docker-howto\"]\n+= Deploy {project-name} Java applications to {openshift} by using a Docker build strategy\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on {openshift} by using the Docker build strategy.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+As an application developer, you can deploy your applications to {openshift} by using the Docker build strategy as a deployment option.",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "1950954862",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45918,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-docker-howto.adoc",
        "discussion_id": "1950954862",
        "commented_code": "@@ -0,0 +1,150 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-docker-howto\"]\n+= Deploy {project-name} Java applications to {openshift} by using a Docker build strategy\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on {openshift} by using the Docker build strategy.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+As an application developer, you can deploy your applications to {openshift} by using the Docker build strategy as a deployment option.",
        "comment_created_at": "2025-02-11T14:27:29+00:00",
        "comment_author": "iocanel",
        "comment_body": "Maybe add a quick explanation on what the `docker build strategy` is.\r\n\r\nI think that we need to let them know that its actually a docker build taking place inside openshift using the artifact that was build locally. In other words a more customizable version of the binary build that is the default option.",
        "pr_file_module": null
      },
      {
        "comment_id": "1983143045",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45918,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-docker-howto.adoc",
        "discussion_id": "1950954862",
        "commented_code": "@@ -0,0 +1,150 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-docker-howto\"]\n+= Deploy {project-name} Java applications to {openshift} by using a Docker build strategy\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on {openshift} by using the Docker build strategy.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+As an application developer, you can deploy your applications to {openshift} by using the Docker build strategy as a deployment option.",
        "comment_created_at": "2025-03-06T10:56:49+00:00",
        "comment_author": "sheilamjones",
        "comment_body": "@iocanel, I have completed all required updates from SME and peer reviews. Can you please advise if this is ready to merge?",
        "pr_file_module": null
      }
    ]
  }
]