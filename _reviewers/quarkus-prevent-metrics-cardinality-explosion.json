[
  {
    "discussion_id": "2091559673",
    "pr_number": 47887,
    "pr_file": "integration-tests/micrometer-prometheus/src/main/java/io/quarkus/it/micrometer/prometheus/PathTemplateResource.java",
    "created_at": "2025-05-15T16:20:53+00:00",
    "commented_code": "import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n \n+import io.smallrye.common.vertx.ContextLocals;\n+\n @Path(\"template/path/{value}\")\n public class PathTemplateResource {\n     @GET\n     public String get(@PathParam(\"value\") String value) {\n+        ContextLocals.put(\"context-local\", \"val-\" + value);",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "2091559673",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47887,
        "pr_file": "integration-tests/micrometer-prometheus/src/main/java/io/quarkus/it/micrometer/prometheus/PathTemplateResource.java",
        "discussion_id": "2091559673",
        "commented_code": "@@ -4,10 +4,13 @@\n import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n \n+import io.smallrye.common.vertx.ContextLocals;\n+\n @Path(\"template/path/{value}\")\n public class PathTemplateResource {\n     @GET\n     public String get(@PathParam(\"value\") String value) {\n+        ContextLocals.put(\"context-local\", \"val-\" + value);",
        "comment_created_at": "2025-05-15T16:20:53+00:00",
        "comment_author": "brunobat",
        "comment_body": "This is a bad practice. We should not encourage ppl to add tags from path params. Even if they think the nr of different values are limited, they cannot really control it. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2091566271",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47887,
        "pr_file": "integration-tests/micrometer-prometheus/src/main/java/io/quarkus/it/micrometer/prometheus/PathTemplateResource.java",
        "discussion_id": "2091559673",
        "commented_code": "@@ -4,10 +4,13 @@\n import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n \n+import io.smallrye.common.vertx.ContextLocals;\n+\n @Path(\"template/path/{value}\")\n public class PathTemplateResource {\n     @GET\n     public String get(@PathParam(\"value\") String value) {\n+        ContextLocals.put(\"context-local\", \"val-\" + value);",
        "comment_created_at": "2025-05-15T16:24:53+00:00",
        "comment_author": "geoand",
        "comment_body": "It might be bad practice,  but people shouldn't be limited by accidental technically reasons from doing it.\n\nThreadLocals should not be used generally,  but that doesn't mean we should prevent their use.",
        "pr_file_module": null
      },
      {
        "comment_id": "2091576176",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47887,
        "pr_file": "integration-tests/micrometer-prometheus/src/main/java/io/quarkus/it/micrometer/prometheus/PathTemplateResource.java",
        "discussion_id": "2091559673",
        "commented_code": "@@ -4,10 +4,13 @@\n import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n \n+import io.smallrye.common.vertx.ContextLocals;\n+\n @Path(\"template/path/{value}\")\n public class PathTemplateResource {\n     @GET\n     public String get(@PathParam(\"value\") String value) {\n+        ContextLocals.put(\"context-local\", \"val-\" + value);",
        "comment_created_at": "2025-05-15T16:29:56+00:00",
        "comment_author": "brunobat",
        "comment_body": "Fair, but this should come with a big warning that they will shoot themselves in the foot if they don't consider cardinatility.\r\nSee for example: [#users > Are you using path parameters? (metrics)](https://quarkusio.zulipchat.com/#narrow/channel/187030-users/topic/Are.20you.20using.20path.20parameters.3F.20.28metrics.29/with/518040545)\r\n\r\nI think a warning should be placed in the docs and a in the test.",
        "pr_file_module": null
      },
      {
        "comment_id": "2091578448",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47887,
        "pr_file": "integration-tests/micrometer-prometheus/src/main/java/io/quarkus/it/micrometer/prometheus/PathTemplateResource.java",
        "discussion_id": "2091559673",
        "commented_code": "@@ -4,10 +4,13 @@\n import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n \n+import io.smallrye.common.vertx.ContextLocals;\n+\n @Path(\"template/path/{value}\")\n public class PathTemplateResource {\n     @GET\n     public String get(@PathParam(\"value\") String value) {\n+        ContextLocals.put(\"context-local\", \"val-\" + value);",
        "comment_created_at": "2025-05-15T16:31:24+00:00",
        "comment_author": "brunobat",
        "comment_body": "Because in the end, ppl will complain and we will spend time debugging this stuff. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2091585845",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47887,
        "pr_file": "integration-tests/micrometer-prometheus/src/main/java/io/quarkus/it/micrometer/prometheus/PathTemplateResource.java",
        "discussion_id": "2091559673",
        "commented_code": "@@ -4,10 +4,13 @@\n import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n \n+import io.smallrye.common.vertx.ContextLocals;\n+\n @Path(\"template/path/{value}\")\n public class PathTemplateResource {\n     @GET\n     public String get(@PathParam(\"value\") String value) {\n+        ContextLocals.put(\"context-local\", \"val-\" + value);",
        "comment_created_at": "2025-05-15T16:35:36+00:00",
        "comment_author": "geoand",
        "comment_body": "I would add we should also place a warning in the Javadoc",
        "pr_file_module": null
      },
      {
        "comment_id": "2091587502",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47887,
        "pr_file": "integration-tests/micrometer-prometheus/src/main/java/io/quarkus/it/micrometer/prometheus/PathTemplateResource.java",
        "discussion_id": "2091559673",
        "commented_code": "@@ -4,10 +4,13 @@\n import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n \n+import io.smallrye.common.vertx.ContextLocals;\n+\n @Path(\"template/path/{value}\")\n public class PathTemplateResource {\n     @GET\n     public String get(@PathParam(\"value\") String value) {\n+        ContextLocals.put(\"context-local\", \"val-\" + value);",
        "comment_created_at": "2025-05-15T16:36:45+00:00",
        "comment_author": "geoand",
        "comment_body": "If you want to add something in the various places, I'll gladly approve ",
        "pr_file_module": null
      },
      {
        "comment_id": "2091657019",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47887,
        "pr_file": "integration-tests/micrometer-prometheus/src/main/java/io/quarkus/it/micrometer/prometheus/PathTemplateResource.java",
        "discussion_id": "2091559673",
        "commented_code": "@@ -4,10 +4,13 @@\n import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n \n+import io.smallrye.common.vertx.ContextLocals;\n+\n @Path(\"template/path/{value}\")\n public class PathTemplateResource {\n     @GET\n     public String get(@PathParam(\"value\") String value) {\n+        ContextLocals.put(\"context-local\", \"val-\" + value);",
        "comment_created_at": "2025-05-15T17:21:59+00:00",
        "comment_author": "adutra",
        "comment_body": "For context: my initial use case is not related to path params, it's related to capturing the tenant ID associated with the request. And tenant IDs are guaranteed to form a finite set, although they could be like a thousand or so. Are you saying that even this use case is bad practice?",
        "pr_file_module": null
      },
      {
        "comment_id": "2091700454",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47887,
        "pr_file": "integration-tests/micrometer-prometheus/src/main/java/io/quarkus/it/micrometer/prometheus/PathTemplateResource.java",
        "discussion_id": "2091559673",
        "commented_code": "@@ -4,10 +4,13 @@\n import jakarta.ws.rs.Path;\n import jakarta.ws.rs.PathParam;\n \n+import io.smallrye.common.vertx.ContextLocals;\n+\n @Path(\"template/path/{value}\")\n public class PathTemplateResource {\n     @GET\n     public String get(@PathParam(\"value\") String value) {\n+        ContextLocals.put(\"context-local\", \"val-\" + value);",
        "comment_created_at": "2025-05-15T17:51:32+00:00",
        "comment_author": "brunobat",
        "comment_body": "Yes. It must not be used like that. \r\nIt will blow the dimensions exponentially. Remember that for each tenant id you will have also different metrics per endpoint, response status and method.\r\nPlace that data in the span and later query the APM's span attributes and/or correlate with exemplars.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2063302700",
    "pr_number": 45522,
    "pr_file": "extensions/websockets-next/runtime/src/main/java/io/quarkus/websockets/next/runtime/telemetry/TelemetryWebSocketEndpointContext.java",
    "created_at": "2025-04-28T09:40:33+00:00",
    "commented_code": "import java.util.Map;\n \n+import io.quarkus.websockets.next.WebSocketClientConnection;\n+import io.quarkus.websockets.next.WebSocketConnection;\n import io.quarkus.websockets.next.runtime.WebSocketConnectionBase;\n import io.quarkus.websockets.next.runtime.WebSocketEndpoint;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.EndpointKind;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.WebSocketEndpointContext;\n \n /**\n  * Data carrier used to instantiate {@link TelemetrySupport}.\n  */\n record TelemetryWebSocketEndpointContext(WebSocketEndpoint endpoint, WebSocketConnectionBase connection, String path,\n         Map<String, Object> contextData) {\n+\n+    WebSocketEndpointContext forClient() {\n+        WebSocketClientConnection clientConnection = (WebSocketClientConnection) connection;\n+        return new WebSocketEndpointContext(path, EndpointKind.CLIENT, contextData, connection.id(),",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "2063302700",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45522,
        "pr_file": "extensions/websockets-next/runtime/src/main/java/io/quarkus/websockets/next/runtime/telemetry/TelemetryWebSocketEndpointContext.java",
        "discussion_id": "2063302700",
        "commented_code": "@@ -2,12 +2,28 @@\n \n import java.util.Map;\n \n+import io.quarkus.websockets.next.WebSocketClientConnection;\n+import io.quarkus.websockets.next.WebSocketConnection;\n import io.quarkus.websockets.next.runtime.WebSocketConnectionBase;\n import io.quarkus.websockets.next.runtime.WebSocketEndpoint;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.EndpointKind;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.WebSocketEndpointContext;\n \n /**\n  * Data carrier used to instantiate {@link TelemetrySupport}.\n  */\n record TelemetryWebSocketEndpointContext(WebSocketEndpoint endpoint, WebSocketConnectionBase connection, String path,\n         Map<String, Object> contextData) {\n+\n+    WebSocketEndpointContext forClient() {\n+        WebSocketClientConnection clientConnection = (WebSocketClientConnection) connection;\n+        return new WebSocketEndpointContext(path, EndpointKind.CLIENT, contextData, connection.id(),",
        "comment_created_at": "2025-04-28T09:40:33+00:00",
        "comment_author": "brunobat",
        "comment_body": "@cescoffier is right. This will cause cardinality explosion.\r\nthe `uri` must be the route and not the path. \r\nSee: https://github.com/quarkusio/quarkus/blob/7c3c88df75702bd196f4ba3ea3ff2f3fd9807609/extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/RestClientMetricsFilter.java#L71\r\n\r\nThe `UrlPathTemplate` property is used to set the route in the context of the request, when a particular lib doesn't provide it out of the box.\r\n\r\nThat header is set on many different frameworks. Here is an example for the resteasy client: https://github.com/quarkusio/quarkus/blob/9f918b5d8f4571e4b24e57234a86d5517c58895c/extensions/resteasy-classic/resteasy-client/runtime/src/main/java/io/quarkus/restclient/runtime/PathFeatureHandler.java#L17\r\n\r\nAnd another one for the `quarkus-rest` server: \r\nhttps://github.com/quarkusio/quarkus/blob/5884c2b124b43166f84f1d7ecca2870af61673cd/extensions/resteasy-reactive/rest/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/observability/ObservabilityIntegrationRecorder.java#L113",
        "pr_file_module": null
      },
      {
        "comment_id": "2063973460",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45522,
        "pr_file": "extensions/websockets-next/runtime/src/main/java/io/quarkus/websockets/next/runtime/telemetry/TelemetryWebSocketEndpointContext.java",
        "discussion_id": "2063302700",
        "commented_code": "@@ -2,12 +2,28 @@\n \n import java.util.Map;\n \n+import io.quarkus.websockets.next.WebSocketClientConnection;\n+import io.quarkus.websockets.next.WebSocketConnection;\n import io.quarkus.websockets.next.runtime.WebSocketConnectionBase;\n import io.quarkus.websockets.next.runtime.WebSocketEndpoint;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.EndpointKind;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.WebSocketEndpointContext;\n \n /**\n  * Data carrier used to instantiate {@link TelemetrySupport}.\n  */\n record TelemetryWebSocketEndpointContext(WebSocketEndpoint endpoint, WebSocketConnectionBase connection, String path,\n         Map<String, Object> contextData) {\n+\n+    WebSocketEndpointContext forClient() {\n+        WebSocketClientConnection clientConnection = (WebSocketClientConnection) connection;\n+        return new WebSocketEndpointContext(path, EndpointKind.CLIENT, contextData, connection.id(),",
        "comment_created_at": "2025-04-28T15:48:33+00:00",
        "comment_author": "michalvavrik",
        "comment_body": "You need metrics per WebSocket endpoint which is represented by the path (were we use template path variable). You only have that many endpoints. If you won't provide users information how many messages and data are transferred for one WebSocket endpoint, metrics become less useful.\r\n\r\nRight now, both on the main branch and in this PR, here is a test that asserts code you are commenting on @brunobat :\r\n\r\n- assertion: https://github.com/quarkusio/quarkus/blob/ecfd5855bd563a5e68dcc5668404f78150ad9eea/extensions/websockets-next/deployment/src/test/java/io/quarkus/websockets/next/test/telemetry/MicrometerWebSocketsOnTextMessageTest.java#L139\r\n- endpoint looks like this: https://github.com/quarkusio/quarkus/blob/ecfd5855bd563a5e68dcc5668404f78150ad9eea/extensions/websockets-next/deployment/src/test/java/io/quarkus/websockets/next/test/telemetry/endpoints/ontextmessage/ClientEndpointWithPathParams.java#L6\r\n\r\nI don't think there is a cardinality explosion due to the path tag, but please give me an example, I may be missing something.",
        "pr_file_module": null
      },
      {
        "comment_id": "2066846115",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45522,
        "pr_file": "extensions/websockets-next/runtime/src/main/java/io/quarkus/websockets/next/runtime/telemetry/TelemetryWebSocketEndpointContext.java",
        "discussion_id": "2063302700",
        "commented_code": "@@ -2,12 +2,28 @@\n \n import java.util.Map;\n \n+import io.quarkus.websockets.next.WebSocketClientConnection;\n+import io.quarkus.websockets.next.WebSocketConnection;\n import io.quarkus.websockets.next.runtime.WebSocketConnectionBase;\n import io.quarkus.websockets.next.runtime.WebSocketEndpoint;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.EndpointKind;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.WebSocketEndpointContext;\n \n /**\n  * Data carrier used to instantiate {@link TelemetrySupport}.\n  */\n record TelemetryWebSocketEndpointContext(WebSocketEndpoint endpoint, WebSocketConnectionBase connection, String path,\n         Map<String, Object> contextData) {\n+\n+    WebSocketEndpointContext forClient() {\n+        WebSocketClientConnection clientConnection = (WebSocketClientConnection) connection;\n+        return new WebSocketEndpointContext(path, EndpointKind.CLIENT, contextData, connection.id(),",
        "comment_created_at": "2025-04-29T15:37:19+00:00",
        "comment_author": "brunobat",
        "comment_body": "That's actually the `route` and the test is totally fine. \r\nI think we are having a communication misunderstanding because all method arguments and the annotation mention `path` and I could't figure out the code that resolves it, however, the test actually evaluates a route.\r\nRoute: `/client-endpoint-with-path-param/{name}`\r\nPath: `/client-endpoint-with-path-param/123`\r\n\r\nThe problem is if the tags contain things like `/client-endpoint-with-path-param/123`",
        "pr_file_module": null
      },
      {
        "comment_id": "2066854557",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45522,
        "pr_file": "extensions/websockets-next/runtime/src/main/java/io/quarkus/websockets/next/runtime/telemetry/TelemetryWebSocketEndpointContext.java",
        "discussion_id": "2063302700",
        "commented_code": "@@ -2,12 +2,28 @@\n \n import java.util.Map;\n \n+import io.quarkus.websockets.next.WebSocketClientConnection;\n+import io.quarkus.websockets.next.WebSocketConnection;\n import io.quarkus.websockets.next.runtime.WebSocketConnectionBase;\n import io.quarkus.websockets.next.runtime.WebSocketEndpoint;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.EndpointKind;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.WebSocketEndpointContext;\n \n /**\n  * Data carrier used to instantiate {@link TelemetrySupport}.\n  */\n record TelemetryWebSocketEndpointContext(WebSocketEndpoint endpoint, WebSocketConnectionBase connection, String path,\n         Map<String, Object> contextData) {\n+\n+    WebSocketEndpointContext forClient() {\n+        WebSocketClientConnection clientConnection = (WebSocketClientConnection) connection;\n+        return new WebSocketEndpointContext(path, EndpointKind.CLIENT, contextData, connection.id(),",
        "comment_created_at": "2025-04-29T15:41:41+00:00",
        "comment_author": "michalvavrik",
        "comment_body": "Ah, I didn't know what `route` is in this context @brunobat , ok, they are routes, not paths. I'll rename these arguments to avoid confusion. Thanks",
        "pr_file_module": null
      },
      {
        "comment_id": "2068506009",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45522,
        "pr_file": "extensions/websockets-next/runtime/src/main/java/io/quarkus/websockets/next/runtime/telemetry/TelemetryWebSocketEndpointContext.java",
        "discussion_id": "2063302700",
        "commented_code": "@@ -2,12 +2,28 @@\n \n import java.util.Map;\n \n+import io.quarkus.websockets.next.WebSocketClientConnection;\n+import io.quarkus.websockets.next.WebSocketConnection;\n import io.quarkus.websockets.next.runtime.WebSocketConnectionBase;\n import io.quarkus.websockets.next.runtime.WebSocketEndpoint;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.EndpointKind;\n+import io.quarkus.websockets.next.runtime.spi.telemetry.WebSocketEndpointContext;\n \n /**\n  * Data carrier used to instantiate {@link TelemetrySupport}.\n  */\n record TelemetryWebSocketEndpointContext(WebSocketEndpoint endpoint, WebSocketConnectionBase connection, String path,\n         Map<String, Object> contextData) {\n+\n+    WebSocketEndpointContext forClient() {\n+        WebSocketClientConnection clientConnection = (WebSocketClientConnection) connection;\n+        return new WebSocketEndpointContext(path, EndpointKind.CLIENT, contextData, connection.id(),",
        "comment_created_at": "2025-04-30T11:50:30+00:00",
        "comment_author": "michalvavrik",
        "comment_body": "Done. No pressure, but I am preparing one WS Next PR for a refresh token that will also need runtime SPI module, so I am looking forward to see this PR merged.",
        "pr_file_module": null
      }
    ]
  }
]