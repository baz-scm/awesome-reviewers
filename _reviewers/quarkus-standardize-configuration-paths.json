[
  {
    "discussion_id": "2068152008",
    "pr_number": 47608,
    "pr_file": "docs/src/main/asciidoc/building-native-image.adoc",
    "created_at": "2025-04-30T08:25:28+00:00",
    "commented_code": "* Mandrel is recommended for building native executables that target Linux containerized environments.\n This means that Mandrel users are encouraged to use containers to build their native executables.\n-If you are building native executables for macOS,\n-you should consider using Oracle GraalVM instead,\n-because Mandrel does not currently target this platform.\n-Building native executables directly on bare metal Linux or Windows is possible,\n+Building native executables directly on bare metal Linux, MacOS, or Windows is possible,",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "2068152008",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47608,
        "pr_file": "docs/src/main/asciidoc/building-native-image.adoc",
        "discussion_id": "2068152008",
        "commented_code": "@@ -75,10 +75,7 @@ This is particularly important when it comes to conformance and security.\n \n * Mandrel is recommended for building native executables that target Linux containerized environments.\n This means that Mandrel users are encouraged to use containers to build their native executables.\n-If you are building native executables for macOS,\n-you should consider using Oracle GraalVM instead,\n-because Mandrel does not currently target this platform.\n-Building native executables directly on bare metal Linux or Windows is possible,\n+Building native executables directly on bare metal Linux, MacOS, or Windows is possible,",
        "comment_created_at": "2025-04-30T08:25:28+00:00",
        "comment_author": "zakkak",
        "comment_body": "That's fine, but we are still missing MacOS x86 binaries, so I suggest changing it as follows:\r\n\r\n```suggestion\r\nIf you are building native executables for macOS on amd64/x86,\r\nyou should consider using Oracle GraalVM instead,\r\nbecause Mandrel does not currently target this platform.\r\nBuilding native executables directly on bare metal Linux, MacOS (on M processors), or Windows is possible,\r\n```\r\n\r\nor similar",
        "pr_file_module": null
      },
      {
        "comment_id": "2068436632",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47608,
        "pr_file": "docs/src/main/asciidoc/building-native-image.adoc",
        "discussion_id": "2068152008",
        "commented_code": "@@ -75,10 +75,7 @@ This is particularly important when it comes to conformance and security.\n \n * Mandrel is recommended for building native executables that target Linux containerized environments.\n This means that Mandrel users are encouraged to use containers to build their native executables.\n-If you are building native executables for macOS,\n-you should consider using Oracle GraalVM instead,\n-because Mandrel does not currently target this platform.\n-Building native executables directly on bare metal Linux or Windows is possible,\n+Building native executables directly on bare metal Linux, MacOS, or Windows is possible,",
        "comment_created_at": "2025-04-30T10:59:09+00:00",
        "comment_author": "holly-cummins",
        "comment_body": "Thanks! I wasn't sure of exactly what worked, but I totally forgot about intel Mac. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2016979025",
    "pr_number": 47039,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
    "created_at": "2025-03-27T15:44:05+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+If you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module.\n+Additionally, set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "2016979025",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47039,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "2016979025",
        "commented_code": "@@ -0,0 +1,118 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+If you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module.\n+Additionally, set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.",
        "comment_created_at": "2025-03-27T15:44:05+00:00",
        "comment_author": "michalvavrik",
        "comment_body": "Why should I have Linux AMD64 and not Aarch64?",
        "pr_file_module": null
      },
      {
        "comment_id": "2059747859",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47039,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "2016979025",
        "commented_code": "@@ -0,0 +1,118 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+If you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module.\n+Additionally, set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.",
        "comment_created_at": "2025-04-25T07:55:18+00:00",
        "comment_author": "sheilamjones",
        "comment_body": "Discussed with Thomas and advised to not mention AMD64 (or Aarch64), but to keep the statement more generic as system references are covered in the tested and verified configurations.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2017000615",
    "pr_number": 47039,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
    "created_at": "2025-03-27T15:53:53+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "2017000615",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47039,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "2017000615",
        "commented_code": "@@ -0,0 +1,118 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.",
        "comment_created_at": "2025-03-27T15:53:53+00:00",
        "comment_author": "michalvavrik",
        "comment_body": "_from this_ you mean from Linux AMD64? I think what you want to say is that target OCP architecture must match architecture of the OS where the native executable were built. this needs to be rewritten",
        "pr_file_module": null
      },
      {
        "comment_id": "2059756969",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47039,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "2017000615",
        "commented_code": "@@ -0,0 +1,118 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.",
        "comment_created_at": "2025-04-25T08:01:17+00:00",
        "comment_author": "sheilamjones",
        "comment_body": "Updated per your feedback.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2017005248",
    "pr_number": 47039,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
    "created_at": "2025-03-27T15:56:11+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+If you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module.\n+Additionally, set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "2017005248",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47039,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "2017005248",
        "commented_code": "@@ -0,0 +1,118 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+If you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module.\n+Additionally, set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.",
        "comment_created_at": "2025-03-27T15:56:11+00:00",
        "comment_author": "michalvavrik",
        "comment_body": "If I want to use custom Dockerfile, I can simply replace the original one and  don't set any property. Maybe you should advise to set `quarkus.openshift.native-dockerfile` if you want to have multiple docker files and switch between them using this configuration property? I think it is confusing to keep the original file if it is not used as when someone else come to my project, they won't realize that is the dead file.",
        "pr_file_module": null
      },
      {
        "comment_id": "2059757292",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47039,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "2017005248",
        "commented_code": "@@ -0,0 +1,118 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+If you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module.\n+Additionally, set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.",
        "comment_created_at": "2025-04-25T08:01:34+00:00",
        "comment_author": "sheilamjones",
        "comment_body": "Updated per your feedback.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2017013230",
    "pr_number": 47039,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
    "created_at": "2025-03-27T16:00:34+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+If you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module.\n+Additionally, set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.\n+* You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Enable container-based native builds:\n++\n+[source,properties]\n+----\n+quarkus.native.container-build=true\n+----\n+. Optional: Set the following properties in the `application.properties` file based on your environment:\n+** If you are using an untrusted certificate, enable certificate trust for the `KubernetesClient`:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+** To expose the service and create an {openshift} route, set the following property:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+** To use a custom Dockerfile instead of the pregenerated Dockerfiles, set the path to your custom Dockerfile:\n++\n+[source,properties,subs=\"attributes+,+quotes\"]\n+----\n+quarkus.openshift.native-dockerfile=<path_to_your_dockerfile>\n+----\n+For example, to specify a custom Dockerfile named `Dockerfile.custom-native`:\n++\n+[source,properties]\n+----\n+quarkus.openshift.native-dockerfile=src/main/docker/Dockerfile.custom-native\n+----\n+\n+** Specify the container engine:\n+***  To build a native executable with Podman:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=podman\n+----\n+*** To build a native executable with Docker:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=docker\n+----\n+\n+. Finally, build the native executable, package, and deploy your application to {openshift}:\n++\n+[source,shell,subs=\"attributes+,+quotes\"]\n+----\n+./mvnw clean package -Pnative -Dquarkus.openshift.deploy=true\n+----\n+\n+== Verification\n+\n+. Verify that an image stream and a service resource are created, and that the application is deployed.\n+Use the {openshift} web console or the following {openshift} command-line interface (CLI) commands:\n++\n+[source,shell,subs=\"attributes+,+quotes\"]\n+----\n+oc get is <1>",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "2017013230",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47039,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "2017013230",
        "commented_code": "@@ -0,0 +1,118 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+If you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module.\n+Additionally, set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.\n+* You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Enable container-based native builds:\n++\n+[source,properties]\n+----\n+quarkus.native.container-build=true\n+----\n+. Optional: Set the following properties in the `application.properties` file based on your environment:\n+** If you are using an untrusted certificate, enable certificate trust for the `KubernetesClient`:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+** To expose the service and create an {openshift} route, set the following property:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+** To use a custom Dockerfile instead of the pregenerated Dockerfiles, set the path to your custom Dockerfile:\n++\n+[source,properties,subs=\"attributes+,+quotes\"]\n+----\n+quarkus.openshift.native-dockerfile=<path_to_your_dockerfile>\n+----\n+For example, to specify a custom Dockerfile named `Dockerfile.custom-native`:\n++\n+[source,properties]\n+----\n+quarkus.openshift.native-dockerfile=src/main/docker/Dockerfile.custom-native\n+----\n+\n+** Specify the container engine:\n+***  To build a native executable with Podman:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=podman\n+----\n+*** To build a native executable with Docker:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=docker\n+----\n+\n+. Finally, build the native executable, package, and deploy your application to {openshift}:\n++\n+[source,shell,subs=\"attributes+,+quotes\"]\n+----\n+./mvnw clean package -Pnative -Dquarkus.openshift.deploy=true\n+----\n+\n+== Verification\n+\n+. Verify that an image stream and a service resource are created, and that the application is deployed.\n+Use the {openshift} web console or the following {openshift} command-line interface (CLI) commands:\n++\n+[source,shell,subs=\"attributes+,+quotes\"]\n+----\n+oc get is <1>",
        "comment_created_at": "2025-03-27T16:00:34+00:00",
        "comment_author": "michalvavrik",
        "comment_body": "OC tool is not among prerequisities? You can use kubectl for certain OCP tasks I think as well, I think you should mention that OC tool is a prerequisity (optional if they don't use UI)",
        "pr_file_module": null
      },
      {
        "comment_id": "2059757601",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 47039,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "2017013230",
        "commented_code": "@@ -0,0 +1,118 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application to {openshift} compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+If you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module.\n+Additionally, set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.\n+* You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Enable container-based native builds:\n++\n+[source,properties]\n+----\n+quarkus.native.container-build=true\n+----\n+. Optional: Set the following properties in the `application.properties` file based on your environment:\n+** If you are using an untrusted certificate, enable certificate trust for the `KubernetesClient`:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+** To expose the service and create an {openshift} route, set the following property:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+** To use a custom Dockerfile instead of the pregenerated Dockerfiles, set the path to your custom Dockerfile:\n++\n+[source,properties,subs=\"attributes+,+quotes\"]\n+----\n+quarkus.openshift.native-dockerfile=<path_to_your_dockerfile>\n+----\n+For example, to specify a custom Dockerfile named `Dockerfile.custom-native`:\n++\n+[source,properties]\n+----\n+quarkus.openshift.native-dockerfile=src/main/docker/Dockerfile.custom-native\n+----\n+\n+** Specify the container engine:\n+***  To build a native executable with Podman:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=podman\n+----\n+*** To build a native executable with Docker:\n++\n+[source,properties]\n+----\n+quarkus.native.container-runtime=docker\n+----\n+\n+. Finally, build the native executable, package, and deploy your application to {openshift}:\n++\n+[source,shell,subs=\"attributes+,+quotes\"]\n+----\n+./mvnw clean package -Pnative -Dquarkus.openshift.deploy=true\n+----\n+\n+== Verification\n+\n+. Verify that an image stream and a service resource are created, and that the application is deployed.\n+Use the {openshift} web console or the following {openshift} command-line interface (CLI) commands:\n++\n+[source,shell,subs=\"attributes+,+quotes\"]\n+----\n+oc get is <1>",
        "comment_created_at": "2025-04-25T08:01:46+00:00",
        "comment_author": "sheilamjones",
        "comment_body": "Updated per your feedback.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1945311776",
    "pr_number": 45986,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
    "created_at": "2025-02-06T19:33:53+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+To use a custom Dockerfile, add the file in the `src/main/docker` directory or anywhere inside the module, and set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.\n+* You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Set the container runtime:\n++\n+[source,properties]\n+----\n+quarkus.native.container-build=true\n+----\n+. Optional: Set the following properties in the `application.properties` file, as required by your environment:\n+.. If you are using an untrusted certificate, configure the `KubernetesClient` property:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+.. Expose the service to create an {openshift} route:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+.. Set the path to your custom Dockerfile:\n++\n+[source,properties,subs=\"attributes+,+quotes\"]\n+----\n+quarkus.openshift.native-dockerfile=<path_to_your_dockerfile>\n+----\n+The following example shows the path to the `Dockerfile.custom-native`:\n++\n+[source,properties]\n+----\n+quarkus.openshift.jvm-dockerfile=src/main/docker/Dockerfile.custom-native",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "1945311776",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45986,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "1945311776",
        "commented_code": "@@ -0,0 +1,112 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+To use a custom Dockerfile, add the file in the `src/main/docker` directory or anywhere inside the module, and set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.\n+* You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Set the container runtime:\n++\n+[source,properties]\n+----\n+quarkus.native.container-build=true\n+----\n+. Optional: Set the following properties in the `application.properties` file, as required by your environment:\n+.. If you are using an untrusted certificate, configure the `KubernetesClient` property:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+.. Expose the service to create an {openshift} route:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+.. Set the path to your custom Dockerfile:\n++\n+[source,properties,subs=\"attributes+,+quotes\"]\n+----\n+quarkus.openshift.native-dockerfile=<path_to_your_dockerfile>\n+----\n+The following example shows the path to the `Dockerfile.custom-native`:\n++\n+[source,properties]\n+----\n+quarkus.openshift.jvm-dockerfile=src/main/docker/Dockerfile.custom-native",
        "comment_created_at": "2025-02-06T19:33:53+00:00",
        "comment_author": "rolfedh",
        "comment_body": "Why does this example show `jvm-dockerfile` instead of `native-dockerfile`? Is `native-dockerfile` a placeholder and `jvm-dockerfile` an actual value?",
        "pr_file_module": null
      },
      {
        "comment_id": "1947332058",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45986,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-native-howto.adoc",
        "discussion_id": "1945311776",
        "commented_code": "@@ -0,0 +1,112 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-native-howto\"]\n+= Deploy {project-name} applications compiled to native executables\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to deploy a Quarkus application compiled to native executables.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your native {project-name} applications to {openshift} compiled to native executables by using the Docker build strategy.\n+\n+You must create a native executable for your application that targets the Linux AMD64 operating system.\n+If your host operating system is different from this, create a native Linux executable by using a container runtime, for example, Docker or Podman.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+To use a custom Dockerfile, add the file in the `src/main/docker` directory or anywhere inside the module, and set the path to your Dockerfile by using the `quarkus.openshift.native-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have a Linux AMD64 system or an Open Container Initiative (OCI) compatible container runtime, such as Podman or Docker.\n+* You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Set the container runtime:\n++\n+[source,properties]\n+----\n+quarkus.native.container-build=true\n+----\n+. Optional: Set the following properties in the `application.properties` file, as required by your environment:\n+.. If you are using an untrusted certificate, configure the `KubernetesClient` property:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+.. Expose the service to create an {openshift} route:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+.. Set the path to your custom Dockerfile:\n++\n+[source,properties,subs=\"attributes+,+quotes\"]\n+----\n+quarkus.openshift.native-dockerfile=<path_to_your_dockerfile>\n+----\n+The following example shows the path to the `Dockerfile.custom-native`:\n++\n+[source,properties]\n+----\n+quarkus.openshift.jvm-dockerfile=src/main/docker/Dockerfile.custom-native",
        "comment_created_at": "2025-02-07T23:47:54+00:00",
        "comment_author": "sheilamjones",
        "comment_body": "Good catch. Think this should be _quarkus.openshift.native-dockerfile_=src/main/docker/Dockerfile.custom-native. @iocanel, can you please confirm this?\r\n ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1947080057",
    "pr_number": 45954,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-S2I-howto.adoc",
    "created_at": "2025-02-07T19:30:50+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-S2I-howto\"]\n+= Using S2I to deploy {project-name} applications to OpenShift\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on OpenShift by using Source-to-Image (S2I).\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your {project-name} applications to {openshift-long} by using the Source-to-Image (S2I) method.\n+With S2I, you must provide the source code to the build container through a Git repository or by uploading the source at build time.\n+\n+\n+[IMPORTANT]\n+====\n+S2I is not supported for native deployments.\n+For deploying {project-name} applications compiled to native executables, use the Docker build strategy.\n+====\n+\n+The procedure for deploying your Quarkus applications to {openshift} by using S2I differs depending on the Java version you are using.\n+\n+[[using-the-S2I-Java-17]]\n+== Using S2I to deploy Quarkus applications to {openshift} with Java {JDK-version-other}\n+\n+You can deploy your {project-name} applications running on Java {JDK-version-other} to {openshift} by using the Source-to-Image (S2I) method.\n+\n+=== Prerequisites\n+\n+* You have a Quarkus application built with Java {JDK-ver-other}.\n+* Optional: You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace\n+* Your project is hosted in a Git repository.\n+\n+\n+=== Procedure\n+\n+. Open the `pom.xml` file, and change the Java configuration to version {JDK-ver-other}, as follows:\n+\n+\n+[source,xml]\n+----\n+<maven.compiler.source>17</maven.compiler.source>\n+<maven.compiler.target>17</maven.compiler.target>\n+----",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "1947080057",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45954,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-S2I-howto.adoc",
        "discussion_id": "1947080057",
        "commented_code": "@@ -0,0 +1,239 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-S2I-howto\"]\n+= Using S2I to deploy {project-name} applications to OpenShift\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on OpenShift by using Source-to-Image (S2I).\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your {project-name} applications to {openshift-long} by using the Source-to-Image (S2I) method.\n+With S2I, you must provide the source code to the build container through a Git repository or by uploading the source at build time.\n+\n+\n+[IMPORTANT]\n+====\n+S2I is not supported for native deployments.\n+For deploying {project-name} applications compiled to native executables, use the Docker build strategy.\n+====\n+\n+The procedure for deploying your Quarkus applications to {openshift} by using S2I differs depending on the Java version you are using.\n+\n+[[using-the-S2I-Java-17]]\n+== Using S2I to deploy Quarkus applications to {openshift} with Java {JDK-version-other}\n+\n+You can deploy your {project-name} applications running on Java {JDK-version-other} to {openshift} by using the Source-to-Image (S2I) method.\n+\n+=== Prerequisites\n+\n+* You have a Quarkus application built with Java {JDK-ver-other}.\n+* Optional: You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace\n+* Your project is hosted in a Git repository.\n+\n+\n+=== Procedure\n+\n+. Open the `pom.xml` file, and change the Java configuration to version {JDK-ver-other}, as follows:\n+\n+\n+[source,xml]\n+----\n+<maven.compiler.source>17</maven.compiler.source>\n+<maven.compiler.target>17</maven.compiler.target>\n+----",
        "comment_created_at": "2025-02-07T19:30:50+00:00",
        "comment_author": "rolfedh",
        "comment_body": "```suggestion\r\n[source,xml,subs=attributes+]\r\n----\r\n<maven.compiler.source>{jdk-version-other}</maven.compiler.source>\r\n<maven.compiler.target>{jdk-version-other}</maven.compiler.target>\r\n----\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1947088904",
    "pr_number": 45954,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-S2I-howto.adoc",
    "created_at": "2025-02-07T19:38:23+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-S2I-howto\"]\n+= Using S2I to deploy {project-name} applications to OpenShift\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on OpenShift by using Source-to-Image (S2I).\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your {project-name} applications to {openshift-long} by using the Source-to-Image (S2I) method.\n+With S2I, you must provide the source code to the build container through a Git repository or by uploading the source at build time.\n+\n+\n+[IMPORTANT]\n+====\n+S2I is not supported for native deployments.\n+For deploying {project-name} applications compiled to native executables, use the Docker build strategy.\n+====\n+\n+The procedure for deploying your Quarkus applications to {openshift} by using S2I differs depending on the Java version you are using.\n+\n+[[using-the-S2I-Java-17]]\n+== Using S2I to deploy Quarkus applications to {openshift} with Java {JDK-version-other}\n+\n+You can deploy your {project-name} applications running on Java {JDK-version-other} to {openshift} by using the Source-to-Image (S2I) method.\n+\n+=== Prerequisites\n+\n+* You have a Quarkus application built with Java {JDK-ver-other}.\n+* Optional: You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace\n+* Your project is hosted in a Git repository.\n+\n+\n+=== Procedure\n+\n+. Open the `pom.xml` file, and change the Java configuration to version {JDK-ver-other}, as follows:\n+\n+\n+[source,xml]\n+----\n+<maven.compiler.source>17</maven.compiler.source>\n+<maven.compiler.target>17</maven.compiler.target>\n+----\n++\n+. To package your Java {JDK-ver-other} application, enter the following command:\n++\n+[source]\n+----\n+./mvnw clean package\n+----\n+. Create a directory called `.s2i` at the same level as the `pom.xml` file.\n+. Create a file called `environment` in the `.s2i` directory and add the following content:\n++\n+[source]\n+----\n+MAVEN_S2I_ARTIFACT_DIRS=target/quarkus-app\n+S2I_SOURCE_DEPLOYMENTS_FILTER=app lib quarkus quarkus-run.jar\n+JAVA_OPTIONS=-Dquarkus.http.host=0.0.0.0\n+AB_JOLOKIA_OFF=true\n+JAVA_APP_JAR=/deployments/quarkus-run.jar\n+----\n++\n+. Commit and push your changes to the remote Git repository.\n+\n+. To import the supported {openshift} image, enter the following command:\n++\n+[source,subs=\"attributes+,+quotes\"]\n+----\n+oc import-image {name-image-ubi8-open-jdk-17-short} --from={name-image-ubi8-open-jdk-17} --confirm\n+----\n++\n+[NOTE]\n+====\n+* If you are using the OpenShift image registry and pulling from image streams in the same project, your pod service account should already have the correct permissions.",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "1947088904",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45954,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-S2I-howto.adoc",
        "discussion_id": "1947088904",
        "commented_code": "@@ -0,0 +1,239 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-S2I-howto\"]\n+= Using S2I to deploy {project-name} applications to OpenShift\n+\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on OpenShift by using Source-to-Image (S2I).\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+You can deploy your {project-name} applications to {openshift-long} by using the Source-to-Image (S2I) method.\n+With S2I, you must provide the source code to the build container through a Git repository or by uploading the source at build time.\n+\n+\n+[IMPORTANT]\n+====\n+S2I is not supported for native deployments.\n+For deploying {project-name} applications compiled to native executables, use the Docker build strategy.\n+====\n+\n+The procedure for deploying your Quarkus applications to {openshift} by using S2I differs depending on the Java version you are using.\n+\n+[[using-the-S2I-Java-17]]\n+== Using S2I to deploy Quarkus applications to {openshift} with Java {JDK-version-other}\n+\n+You can deploy your {project-name} applications running on Java {JDK-version-other} to {openshift} by using the Source-to-Image (S2I) method.\n+\n+=== Prerequisites\n+\n+* You have a Quarkus application built with Java {JDK-ver-other}.\n+* Optional: You have a Quarkus Maven project that includes the `quarkus-openshift` extension.\n+* You are working in the correct OpenShift project namespace\n+* Your project is hosted in a Git repository.\n+\n+\n+=== Procedure\n+\n+. Open the `pom.xml` file, and change the Java configuration to version {JDK-ver-other}, as follows:\n+\n+\n+[source,xml]\n+----\n+<maven.compiler.source>17</maven.compiler.source>\n+<maven.compiler.target>17</maven.compiler.target>\n+----\n++\n+. To package your Java {JDK-ver-other} application, enter the following command:\n++\n+[source]\n+----\n+./mvnw clean package\n+----\n+. Create a directory called `.s2i` at the same level as the `pom.xml` file.\n+. Create a file called `environment` in the `.s2i` directory and add the following content:\n++\n+[source]\n+----\n+MAVEN_S2I_ARTIFACT_DIRS=target/quarkus-app\n+S2I_SOURCE_DEPLOYMENTS_FILTER=app lib quarkus quarkus-run.jar\n+JAVA_OPTIONS=-Dquarkus.http.host=0.0.0.0\n+AB_JOLOKIA_OFF=true\n+JAVA_APP_JAR=/deployments/quarkus-run.jar\n+----\n++\n+. Commit and push your changes to the remote Git repository.\n+\n+. To import the supported {openshift} image, enter the following command:\n++\n+[source,subs=\"attributes+,+quotes\"]\n+----\n+oc import-image {name-image-ubi8-open-jdk-17-short} --from={name-image-ubi8-open-jdk-17} --confirm\n+----\n++\n+[NOTE]\n+====\n+* If you are using the OpenShift image registry and pulling from image streams in the same project, your pod service account should already have the correct permissions.",
        "comment_created_at": "2025-02-07T19:38:23+00:00",
        "comment_author": "rolfedh",
        "comment_body": "```suggestion\r\n* If you are using the OpenShift image registry and pulling from image streams in the same project, your pod service account must already have the correct permissions.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1946802633",
    "pr_number": 45918,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-docker-howto.adoc",
    "created_at": "2025-02-07T16:19:50+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-docker-howto\"]\n+= Deploy {project-name} Java applications to {openshift} by using a Docker build strategy\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on {openshift} by using the Docker build strategy.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+As an application developer, you can deploy your applications to {openshift} by using the Docker build strategy as a deployment option.\n+This functionality is provided by the `quarkus-openshift` extension.\n+\n+The container gets built inside the {openshift} cluster and is provided as an image stream.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+When you want to use a custom Dockerfile, you must add the file in the `src/main/docker` directory or anywhere inside the module. Additionally, you must set the path to your Dockerfile by using the `quarkus.openshift.jvm-dockerfile` property.",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "1946802633",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45918,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-docker-howto.adoc",
        "discussion_id": "1946802633",
        "commented_code": "@@ -0,0 +1,154 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-docker-howto\"]\n+= Deploy {project-name} Java applications to {openshift} by using a Docker build strategy\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on {openshift} by using the Docker build strategy.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+As an application developer, you can deploy your applications to {openshift} by using the Docker build strategy as a deployment option.\n+This functionality is provided by the `quarkus-openshift` extension.\n+\n+The container gets built inside the {openshift} cluster and is provided as an image stream.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+When you want to use a custom Dockerfile, you must add the file in the `src/main/docker` directory or anywhere inside the module. Additionally, you must set the path to your Dockerfile by using the `quarkus.openshift.jvm-dockerfile` property.",
        "comment_created_at": "2025-02-07T16:19:50+00:00",
        "comment_author": "rolfedh",
        "comment_body": "```suggestion\r\nIf you want to use a custom Dockerfile, add the file to the `src/main/docker` directory or any location inside the module. Additionally, set the path to your Dockerfile by using the `quarkus.openshift.jvm-dockerfile` property.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1946840740",
    "pr_number": 45918,
    "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-docker-howto.adoc",
    "created_at": "2025-02-07T16:43:01+00:00",
    "commented_code": "+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-docker-howto\"]\n+= Deploy {project-name} Java applications to {openshift} by using a Docker build strategy\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on {openshift} by using the Docker build strategy.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+As an application developer, you can deploy your applications to {openshift} by using the Docker build strategy as a deployment option.\n+This functionality is provided by the `quarkus-openshift` extension.\n+\n+The container gets built inside the {openshift} cluster and is provided as an image stream.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+When you want to use a custom Dockerfile, you must add the file in the `src/main/docker` directory or anywhere inside the module. Additionally, you must set the path to your Dockerfile by using the `quarkus.openshift.jvm-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have OpenJDK {JDK-ver-all} installed.\n+* You have set the `JAVA_HOME` environment variable to the location of the Java SDK.\n+* You have Apache Maven {maven-version} installed.\n+* You have a Quarkus project that includes the `quarkus-openshift` extension.\n+* You have access to a {openshift} cluster and the latest compatible version of the `oc` tool installed.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Optional: Set the following properties in the `application.properties` file, as required by your environment:\n+.. If you are using an untrusted certificate, configure the `KubernetesClient`:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+.. Expose the service to create an {openshift} route:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+.. Set the path to your custom Dockerfile:",
    "repo_full_name": "quarkusio/quarkus",
    "discussion_comments": [
      {
        "comment_id": "1946840740",
        "repo_full_name": "quarkusio/quarkus",
        "pr_number": 45918,
        "pr_file": "docs/src/main/asciidoc/deploying-to-openshift-docker-howto.adoc",
        "discussion_id": "1946840740",
        "commented_code": "@@ -0,0 +1,154 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc\n+////\n+[id=\"deploying-to-openshift-docker-howto\"]\n+= Deploy {project-name} Java applications to {openshift} by using a Docker build strategy\n+include::_attributes.adoc[]\n+:diataxis-type: howto\n+:categories: cloud, native\n+:summary: This guide describes how to build and deploy a Quarkus application on {openshift} by using the Docker build strategy.\n+:topics: devops,kubernetes,openshift,cloud,deployment\n+:extensions: io.quarkus:quarkus-openshift\n+\n+As an application developer, you can deploy your applications to {openshift} by using the Docker build strategy as a deployment option.\n+This functionality is provided by the `quarkus-openshift` extension.\n+\n+The container gets built inside the {openshift} cluster and is provided as an image stream.\n+\n+Your Quarkus project includes pregenerated Dockerfiles with instructions.\n+When you want to use a custom Dockerfile, you must add the file in the `src/main/docker` directory or anywhere inside the module. Additionally, you must set the path to your Dockerfile by using the `quarkus.openshift.jvm-dockerfile` property.\n+\n+== Prerequisites\n+\n+* You have OpenJDK {JDK-ver-all} installed.\n+* You have set the `JAVA_HOME` environment variable to the location of the Java SDK.\n+* You have Apache Maven {maven-version} installed.\n+* You have a Quarkus project that includes the `quarkus-openshift` extension.\n+* You have access to a {openshift} cluster and the latest compatible version of the `oc` tool installed.\n+* You are working in the correct OpenShift project namespace.\n+\n+== Procedure\n+\n+. Set the Docker build strategy in your `application.properties` configuration file:\n++\n+[source, properties]\n+----\n+quarkus.openshift.build-strategy=docker\n+----\n+. Optional: Set the following properties in the `application.properties` file, as required by your environment:\n+.. If you are using an untrusted certificate, configure the `KubernetesClient`:\n++\n+[source,properties]\n+----\n+quarkus.kubernetes-client.trust-certs=true\n+----\n+.. Expose the service to create an {openshift} route:\n++\n+[source,properties]\n+----\n+quarkus.openshift.route.expose=true\n+----\n+.. Set the path to your custom Dockerfile:",
        "comment_created_at": "2025-02-07T16:43:01+00:00",
        "comment_author": "rolfedh",
        "comment_body": "```suggestion\r\n** To use a custom Dockerfile instead of the pregenerated Dockerfiles, set the path to your Dockerfile:\r\n```",
        "pr_file_module": null
      }
    ]
  }
]