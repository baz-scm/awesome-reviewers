[
  {
    "discussion_id": "517464838",
    "pr_number": 40525,
    "pr_file": "actionpack/lib/action_controller/metal/content_security_policy.rb",
    "created_at": "2020-11-04T16:19:34+00:00",
    "commented_code": "end\n      end\n\n      def content_security_policy_report_only(report_only = true, **options)\n      def content_security_policy_report_only(enabled = true, **options, &block)\n        before_action(options) do\n          request.content_security_policy_report_only = report_only\n          if block_given?\n            policy = current_content_security_policy\n            yield policy\n            request.content_security_policy_report_only = policy\n          else\n            request.content_security_policy_report_only = true",
    "repo_full_name": "rails/rails",
    "discussion_comments": [
      {
        "comment_id": "517464838",
        "repo_full_name": "rails/rails",
        "pr_number": 40525,
        "pr_file": "actionpack/lib/action_controller/metal/content_security_policy.rb",
        "discussion_id": "517464838",
        "commented_code": "@@ -28,9 +28,19 @@ def content_security_policy(enabled = true, **options, &block)\n         end\n       end\n \n-      def content_security_policy_report_only(report_only = true, **options)\n+      def content_security_policy_report_only(enabled = true, **options, &block)\n         before_action(options) do\n-          request.content_security_policy_report_only = report_only\n+          if block_given?\n+            policy = current_content_security_policy\n+            yield policy\n+            request.content_security_policy_report_only = policy\n+          else\n+            request.content_security_policy_report_only = true",
        "comment_created_at": "2020-11-04T16:19:34+00:00",
        "comment_author": "pragmaticsc",
        "comment_body": "This is for backward support of usage in a controller without a block or assignment. It will promote the `content_security_policy` to `content_security_policy_report_only`. \r\n\r\n```\r\ncontent_security_policy_report_only only: :action\r\n\r\ndef action\r\nend\r\n```\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "538632594",
        "repo_full_name": "rails/rails",
        "pr_number": 40525,
        "pr_file": "actionpack/lib/action_controller/metal/content_security_policy.rb",
        "discussion_id": "517464838",
        "commented_code": "@@ -28,9 +28,19 @@ def content_security_policy(enabled = true, **options, &block)\n         end\n       end\n \n-      def content_security_policy_report_only(report_only = true, **options)\n+      def content_security_policy_report_only(enabled = true, **options, &block)\n         before_action(options) do\n-          request.content_security_policy_report_only = report_only\n+          if block_given?\n+            policy = current_content_security_policy\n+            yield policy\n+            request.content_security_policy_report_only = policy\n+          else\n+            request.content_security_policy_report_only = true",
        "comment_created_at": "2020-12-08T17:26:47+00:00",
        "comment_author": "sd-trailhead-james",
        "comment_body": "This support is useful! Is there a test that demonstrates it exists?",
        "pr_file_module": null
      },
      {
        "comment_id": "559184317",
        "repo_full_name": "rails/rails",
        "pr_number": 40525,
        "pr_file": "actionpack/lib/action_controller/metal/content_security_policy.rb",
        "discussion_id": "517464838",
        "commented_code": "@@ -28,9 +28,19 @@ def content_security_policy(enabled = true, **options, &block)\n         end\n       end\n \n-      def content_security_policy_report_only(report_only = true, **options)\n+      def content_security_policy_report_only(enabled = true, **options, &block)\n         before_action(options) do\n-          request.content_security_policy_report_only = report_only\n+          if block_given?\n+            policy = current_content_security_policy\n+            yield policy\n+            request.content_security_policy_report_only = policy\n+          else\n+            request.content_security_policy_report_only = true",
        "comment_created_at": "2021-01-17T13:50:28+00:00",
        "comment_author": "pragmaticsc",
        "comment_body": "Yep, it is existing functionality covered here: https://github.com/rails/rails/blob/9292db856969283eff82509f0ea0537cc039c382/actionpack/test/dispatch/content_security_policy_test.rb#L362",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "519314247",
    "pr_number": 40525,
    "pr_file": "railties/lib/rails/mailers_controller.rb",
    "created_at": "2020-11-08T09:23:59+00:00",
    "commented_code": "helper_method :part_query, :locale_query\n\n  content_security_policy(false)\n  content_security_policy_report_only(false)",
    "repo_full_name": "rails/rails",
    "discussion_comments": [
      {
        "comment_id": "519314247",
        "repo_full_name": "rails/rails",
        "pr_number": 40525,
        "pr_file": "railties/lib/rails/mailers_controller.rb",
        "discussion_id": "519314247",
        "commented_code": "@@ -12,6 +12,7 @@ class Rails::MailersController < Rails::ApplicationController # :nodoc:\n   helper_method :part_query, :locale_query\n \n   content_security_policy(false)\n+  content_security_policy_report_only(false)",
        "comment_created_at": "2020-11-08T09:23:59+00:00",
        "comment_author": "pixeltrix",
        "comment_body": "This suggests that upgrading apps will need to add this method to disable CSP-Report-Only?",
        "pr_file_module": null
      },
      {
        "comment_id": "522559918",
        "repo_full_name": "rails/rails",
        "pr_number": 40525,
        "pr_file": "railties/lib/rails/mailers_controller.rb",
        "discussion_id": "519314247",
        "commented_code": "@@ -12,6 +12,7 @@ class Rails::MailersController < Rails::ApplicationController # :nodoc:\n   helper_method :part_query, :locale_query\n \n   content_security_policy(false)\n+  content_security_policy_report_only(false)",
        "comment_created_at": "2020-11-13T01:57:12+00:00",
        "comment_author": "pragmaticsc",
        "comment_body": "Good call. This isn't necessary. There is no default report only policy.",
        "pr_file_module": null
      },
      {
        "comment_id": "559234428",
        "repo_full_name": "rails/rails",
        "pr_number": 40525,
        "pr_file": "railties/lib/rails/mailers_controller.rb",
        "discussion_id": "519314247",
        "commented_code": "@@ -12,6 +12,7 @@ class Rails::MailersController < Rails::ApplicationController # :nodoc:\n   helper_method :part_query, :locale_query\n \n   content_security_policy(false)\n+  content_security_policy_report_only(false)",
        "comment_created_at": "2021-01-17T20:32:22+00:00",
        "comment_author": "shaundr",
        "comment_body": "Removed.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "711233561",
    "pr_number": 39398,
    "pr_file": "actionpack/test/dispatch/content_security_policy_test.rb",
    "created_at": "2021-09-17T17:30:20+00:00",
    "commented_code": "content_security_policy_report_only only: :report_only\n\n    content_security_policy only: :api do |format|\n      format.json do |p|\n        p.default_src :none\n        p.frame_ancestors :none",
    "repo_full_name": "rails/rails",
    "discussion_comments": [
      {
        "comment_id": "711233561",
        "repo_full_name": "rails/rails",
        "pr_number": 39398,
        "pr_file": "actionpack/test/dispatch/content_security_policy_test.rb",
        "discussion_id": "711233561",
        "commented_code": "@@ -377,6 +377,24 @@ class PolicyController < ActionController::Base\n \n     content_security_policy_report_only only: :report_only\n \n+    content_security_policy only: :api do |format|\n+      format.json do |p|\n+        p.default_src :none\n+        p.frame_ancestors :none",
        "comment_created_at": "2021-09-17T17:30:20+00:00",
        "comment_author": "oreoshake",
        "comment_body": "I suggest including [`sandbox`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/sandbox) in the default policy for API requests as well. It's a few more bytes and provides a little more protection against hypothetical situations.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1912761507",
    "pr_number": 54207,
    "pr_file": "actionpack/lib/action_dispatch/http/content_security_policy.rb",
    "created_at": "2025-01-13T07:24:53+00:00",
    "commented_code": "def nonce_directive?(directive, nonce_directives)\n        nonce_directives.include?(directive)\n      end\n\n      def hash_source?(source)\n        source.start_with?(*HASH_SOURCE_ALGORITHMS.values)",
    "repo_full_name": "rails/rails",
    "discussion_comments": [
      {
        "comment_id": "1912761507",
        "repo_full_name": "rails/rails",
        "pr_number": 54207,
        "pr_file": "actionpack/lib/action_dispatch/http/content_security_policy.rb",
        "discussion_id": "1912761507",
        "commented_code": "@@ -374,5 +386,9 @@ def resolve_source(source, context)\n       def nonce_directive?(directive, nonce_directives)\n         nonce_directives.include?(directive)\n       end\n+\n+      def hash_source?(source)\n+        source.start_with?(*HASH_SOURCE_ALGORITHMS.values)",
        "comment_created_at": "2025-01-13T07:24:53+00:00",
        "comment_author": "flavorjones",
        "comment_body": "... then this just becomes\r\n\r\n```\r\nsource.start_with?(*HASH_SOURCE_ALGORITHMS)\r\n```",
        "pr_file_module": null
      }
    ]
  }
]