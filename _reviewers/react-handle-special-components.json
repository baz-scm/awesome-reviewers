[
  {
    "discussion_id": "2029180224",
    "pr_number": 32722,
    "pr_file": "packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js",
    "created_at": "2025-04-04T17:20:06+00:00",
    "commented_code": "",
    "repo_full_name": "facebook/react",
    "discussion_comments": [
      {
        "comment_id": "2029180224",
        "repo_full_name": "facebook/react",
        "pr_number": 32722,
        "pr_file": "packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js",
        "discussion_id": "2029180224",
        "commented_code": "@@ -2503,6 +2524,74 @@ FragmentInstance.prototype.getRootNode = function (\n     (parentHostInstance.getRootNode(getRootNodeOptions): Document | ShadowRoot);\n   return rootNode;\n };\n+// $FlowFixMe[prop-missing]\n+FragmentInstance.prototype.compareDocumentPosition = function (\n+  this: FragmentInstanceType,\n+  otherNode: Instance,\n+): number {\n+  const parentHostInstance = getFragmentParentHostInstance(this._fragmentFiber);\n+  if (parentHostInstance === null) {\n+    return Node.DOCUMENT_POSITION_DISCONNECTED;\n+  }",
        "comment_created_at": "2025-04-04T17:20:06+00:00",
        "comment_author": "jackpope",
        "comment_body": "Added check for unmounted to return `DISCONNECTED`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2029182545",
    "pr_number": 32722,
    "pr_file": "packages/react-reconciler/src/ReactFiberTreeReflection.js",
    "created_at": "2025-04-04T17:22:06+00:00",
    "commented_code": "",
    "repo_full_name": "facebook/react",
    "discussion_comments": [
      {
        "comment_id": "2029182545",
        "repo_full_name": "facebook/react",
        "pr_number": 32722,
        "pr_file": "packages/react-reconciler/src/ReactFiberTreeReflection.js",
        "discussion_id": "2029182545",
        "commented_code": "@@ -346,8 +355,10 @@ function traverseFragmentInstanceChildren<A, B, C>(\n       child.memoizedState !== null\n     ) {\n       // Skip hidden subtrees\n+    } else if (skipPortals && child.tag === HostPortal) {\n+      // Skip portals",
        "comment_created_at": "2025-04-04T17:22:06+00:00",
        "comment_author": "jackpope",
        "comment_body": "Optionally skip portal components during child traversal.\r\nIdea being that for layout related instance methods, we don't want to special case their children as child host targets for the fragment. But for event registration we would.",
        "pr_file_module": null
      }
    ]
  }
]