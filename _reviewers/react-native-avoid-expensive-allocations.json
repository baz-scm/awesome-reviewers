[
  {
    "discussion_id": "1858262911",
    "pr_number": 47634,
    "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewGroup.java",
    "created_at": "2024-11-26T10:56:49+00:00",
    "commented_code": "mAllChildren[i] = child;\n         child.addOnLayoutChangeListener(mChildrenLayoutChangeListener);\n       }\n+      mChildrenRemovedWhileTransitioning = new HashSet<>();",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1858262911",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47634,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewGroup.java",
        "discussion_id": "1858262911",
        "commented_code": "@@ -360,12 +365,14 @@ public void setRemoveClippedSubviews(boolean removeClippedSubviews) {\n         mAllChildren[i] = child;\n         child.addOnLayoutChangeListener(mChildrenLayoutChangeListener);\n       }\n+      mChildrenRemovedWhileTransitioning = new HashSet<>();",
        "comment_created_at": "2024-11-26T10:56:49+00:00",
        "comment_author": "javache",
        "comment_body": "Let's allocate this lazily? Most apps won't have transitioning views and shouldn't pay for this.",
        "pr_file_module": null
      },
      {
        "comment_id": "1858626229",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47634,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewGroup.java",
        "discussion_id": "1858262911",
        "commented_code": "@@ -360,12 +365,14 @@ public void setRemoveClippedSubviews(boolean removeClippedSubviews) {\n         mAllChildren[i] = child;\n         child.addOnLayoutChangeListener(mChildrenLayoutChangeListener);\n       }\n+      mChildrenRemovedWhileTransitioning = new HashSet<>();",
        "comment_created_at": "2024-11-26T14:18:31+00:00",
        "comment_author": "kkafar",
        "comment_body": "https://github.com/facebook/react-native/pull/47634/commits/c3da8d0987ce97bc5bb21915c25b43c3d4f76d3f -> now we allocate the hash set only in case a view has been removed while transitioning.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1831692244",
    "pr_number": 47082,
    "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManager.java",
    "created_at": "2024-11-06T20:50:43+00:00",
    "commented_code": "text.getSpanFlags(span));\n         text.removeSpan(span);\n       }\n+      boring = BoringLayout.isBoring(text, paint);",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1831692244",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47082,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManager.java",
        "discussion_id": "1831692244",
        "commented_code": "@@ -600,6 +601,7 @@ private static Layout createLayout(\n             text.getSpanFlags(span));\n         text.removeSpan(span);\n       }\n+      boring = BoringLayout.isBoring(text, paint);",
        "comment_created_at": "2024-11-06T20:50:43+00:00",
        "comment_author": "cortinico",
        "comment_body": "Quoting @javache:\r\n\r\n> This is quite of an expensive call\r\n\r\nAlso we call this just above at the beginning of the `adjustSpannableFontToFit` function. Why do you need call this again?",
        "pr_file_module": null
      },
      {
        "comment_id": "1832505288",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47082,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManager.java",
        "discussion_id": "1831692244",
        "commented_code": "@@ -600,6 +601,7 @@ private static Layout createLayout(\n             text.getSpanFlags(span));\n         text.removeSpan(span);\n       }\n+      boring = BoringLayout.isBoring(text, paint);",
        "comment_created_at": "2024-11-07T11:17:35+00:00",
        "comment_author": "j-piasecki",
        "comment_body": "It updates the font metrics after applying the smaller font size. In this exact case, the layout height is larger than the available height and without the update to `boring` it ends up shrinking the text to the smallest allowed value:\r\n\r\n<img width=\"348\" alt=\"image\" src=\"https://github.com/user-attachments/assets/02ee8dfb-303b-4ac5-b4b9-4c38103416ef\">\r\n\r\nThe other two numbers end up as a `StaticLayout` so they aren't affected.",
        "pr_file_module": null
      },
      {
        "comment_id": "1870468639",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47082,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManager.java",
        "discussion_id": "1831692244",
        "commented_code": "@@ -600,6 +601,7 @@ private static Layout createLayout(\n             text.getSpanFlags(span));\n         text.removeSpan(span);\n       }\n+      boring = BoringLayout.isBoring(text, paint);",
        "comment_created_at": "2024-12-05T00:51:29+00:00",
        "comment_author": "NickGerleman",
        "comment_body": "We could probably guard this with a check to only recalculate BoringLayout metics if existing text was boring (adjusting font size won't change boringness, but will change the layout result). But I think needing to recreate it makes sense.",
        "pr_file_module": null
      },
      {
        "comment_id": "1870972097",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47082,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/text/TextLayoutManager.java",
        "discussion_id": "1831692244",
        "commented_code": "@@ -600,6 +601,7 @@ private static Layout createLayout(\n             text.getSpanFlags(span));\n         text.removeSpan(span);\n       }\n+      boring = BoringLayout.isBoring(text, paint);",
        "comment_created_at": "2024-12-05T09:19:25+00:00",
        "comment_author": "j-piasecki",
        "comment_body": "Added a check in https://github.com/facebook/react-native/pull/47082/commits/fb3f1f0ac755007fcddf805a03cea02d878df2f2",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "451899009",
    "pr_number": 29099,
    "pr_file": "ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java",
    "created_at": "2020-07-09T00:36:20+00:00",
    "commented_code": "int bottom = bounds.bottom;\n \n           mPaint.setColor(fastBorderColor);\n+          mPaint.setStyle(Paint.Style.STROKE);\n           if (borderLeft > 0) {\n             int leftInset = left + borderLeft;\n-            canvas.drawRect(left, top, leftInset, bottom - borderBottom, mPaint);\n+            Path path = new Path();",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "451899009",
        "repo_full_name": "facebook/react-native",
        "pr_number": 29099,
        "pr_file": "ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java",
        "discussion_id": "451899009",
        "commented_code": "@@ -1099,21 +1107,43 @@ private void drawRectangularBackgroundWithBorders(Canvas canvas) {\n           int bottom = bounds.bottom;\n \n           mPaint.setColor(fastBorderColor);\n+          mPaint.setStyle(Paint.Style.STROKE);\n           if (borderLeft > 0) {\n             int leftInset = left + borderLeft;\n-            canvas.drawRect(left, top, leftInset, bottom - borderBottom, mPaint);\n+            Path path = new Path();",
        "comment_created_at": "2020-07-09T00:36:20+00:00",
        "comment_author": "benoitdion",
        "comment_body": "It is generally recommended against creating new instances in functions called in `onDraw`. You may want to consider creating the `Path` where `mPaint` is created and reset it before using it here.",
        "pr_file_module": null
      },
      {
        "comment_id": "452310587",
        "repo_full_name": "facebook/react-native",
        "pr_number": 29099,
        "pr_file": "ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java",
        "discussion_id": "451899009",
        "commented_code": "@@ -1099,21 +1107,43 @@ private void drawRectangularBackgroundWithBorders(Canvas canvas) {\n           int bottom = bounds.bottom;\n \n           mPaint.setColor(fastBorderColor);\n+          mPaint.setStyle(Paint.Style.STROKE);\n           if (borderLeft > 0) {\n             int leftInset = left + borderLeft;\n-            canvas.drawRect(left, top, leftInset, bottom - borderBottom, mPaint);\n+            Path path = new Path();",
        "comment_created_at": "2020-07-09T15:38:35+00:00",
        "comment_author": "fabOnReact",
        "comment_body": "I am just putting this pull request out there as as Quickfix for https://github.com/facebook/react-native/issues/24224 and 25+ issues with this bug https://github.com/facebook/react-native/issues/24224 https://github.com/facebook/react-native/issues/28695 https://github.com/facebook/react-native/issues/23651 https://github.com/facebook/react-native/issues/23475 https://github.com/facebook/react-native/issues/22256 https://github.com/facebook/react-native/issues/22226 https://github.com/facebook/react-native/issues/19234 https://github.com/facebook/react-native/issues/18285 https://github.com/facebook/react-native/issues/17344 https://github.com/facebook/react-native/issues/17343 https://github.com/facebook/react-native/issues/17251 https://github.com/facebook/react-native/issues/12817 https://github.com/facebook/react-native/issues/12403 https://github.com/facebook/react-native/issues/11042 https://github.com/facebook/react-native/issues/9343 https://github.com/facebook/react-native/issues/8236 https://github.com/facebook/react-native/issues/8105 https://github.com/facebook/react-native/issues/7838 https://github.com/facebook/react-native/issues/6721 https://github.com/facebook/react-native/issues/5411 https://github.com/facebook/react-native/issues/3159 https://github.com/facebook/react-native/issues/2335 https://github.com/facebook/react-native/issues/840 https://github.com/facebook/react-native/issues/27133 https://github.com/facebook/react-native/issues/28695 \r\n\r\nAll those issues have been closed, but actually never fixed. \r\n\r\nAdditionally I wanted to point you out to the + button in the comment section, which allows you to propose a code changes to this pull request, or if you want you can write a pull request for my branch [fabriziobertoglio/react-native](https://github.com/fabriziobertoglio1987/react-native/tree/fix-dotted-borderLeft)\r\n\r\n![image](https://user-images.githubusercontent.com/24992535/87010818-6bd51200-c1c7-11ea-9d51-3881ec54ce22.png)\r\n\r\n**POINT 1**\r\n>It is generally recommended against creating new instances in functions called in onDraw\r\n\r\nYou are right, makes perfect sense what you are saying, as probably onDraw is called many times and creating a new instance every time may have an effect on memory ([garbage collection](https://stackify.com/what-is-java-garbage-collection/))\r\n\r\n\r\nMy superficial understanding is that the existing/previous logic was built by creating new instances of `Path` in `onDraw`, my **ambitions** with this Pull Request was providing a **QuickFix**.\r\n\r\nhttps://github.com/facebook/react-native/blob/40e940ad87c6d2ff70e76807c9ead85d158d2a1b/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java#L128-L136\r\n\r\nhttps://github.com/facebook/react-native/blob/40e940ad87c6d2ff70e76807c9ead85d158d2a1b/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java#L488\r\n\r\n**POINT 2**\r\n>You may want to consider creating the Path where mPaint is created and reset it before using it here.\r\n\r\nAbout this, `mPaint` is the color, `mPath` is the shape to be drawn. \r\n\r\nYou propose to move the local variable `path` to a new instance variable of [ReactViewBackgroundDrawable](https://github.com/facebook/react-native/blob/03489539146556ec5ba6ba07ac338ce200f5b0f4/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java) `mPathSingleBorder`.\r\n\r\nInstead of storing the drawn `Path` value in 4 separate local variables named `pathTop`, `pathLeft`, `pathBottom` and `pathRight`, you propose to store the value in a `mPath` instance variable and [reset](https://developer.android.com/reference/kotlin/android/graphics/Path#reset()) it after `draw`. \r\n\r\nI allways prefer recursion over 1 instance variable, instead of writing 4 subroutines with 4 instance variables (like in this pull request)\r\n\r\nhttps://github.com/facebook/react-native/blob/40e940ad87c6d2ff70e76807c9ead85d158d2a1b/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java#L1113-L1119\r\n\r\nI allways prefer recursion over 1 instance variable, instead of writing 4 subroutines with 4 instance variables (like in this pull request).\r\n\r\nI'll add a fix once I have more time. \r\n\r\nThanks a lot for your feedback\r\nI wish you a good day\r\nBest Regards\r\nFabrizio Bertoglio\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "452342760",
        "repo_full_name": "facebook/react-native",
        "pr_number": 29099,
        "pr_file": "ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java",
        "discussion_id": "451899009",
        "commented_code": "@@ -1099,21 +1107,43 @@ private void drawRectangularBackgroundWithBorders(Canvas canvas) {\n           int bottom = bounds.bottom;\n \n           mPaint.setColor(fastBorderColor);\n+          mPaint.setStyle(Paint.Style.STROKE);\n           if (borderLeft > 0) {\n             int leftInset = left + borderLeft;\n-            canvas.drawRect(left, top, leftInset, bottom - borderBottom, mPaint);\n+            Path path = new Path();",
        "comment_created_at": "2020-07-09T16:28:58+00:00",
        "comment_author": "fabOnReact",
        "comment_body": "@benoitdion I added the changes you required. I don't believe this changes improve the pull request https://github.com/facebook/react-native/pull/29099/commits/cbc9f4503e580da15461dbaae5317a94f9b4e77a because I would rather have 4 local variables then 1 instance variable.\r\n\r\nApplying recursion to this logic to avoid 4 if statements and instead grouping that logic in 1 function, requires a re-writing the exisiting logic included `drawRectangularBackgroundWithBorders` (extensive work):\r\n\r\n1) Converting other local variables (left, top..etc.) to instance variables\r\n2) Grouping the existing logic in methods that hold a single reponsability (setBorderLeft, setPath, setPaint...) \r\n\r\nI did not write that logic, I can apply temporary fixes, but my policy with open-source is to not re-write other developers code. I just write fixes for functionalities that do not work. I can only assign myself issues from their board and fix them.\r\n\r\nI believe the code in this pull request is fine considering the design of the Class.\r\n\r\nhttps://github.com/facebook/react-native/blob/cbc9f4503e580da15461dbaae5317a94f9b4e77a/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java#L1025-L1218\r\n\r\nPlease review this code and let me know how you would like to improve it.\r\n\r\nThanks a lot\r\nBest Regards\r\nFabrizio Bertoglio",
        "pr_file_module": null
      },
      {
        "comment_id": "459439934",
        "repo_full_name": "facebook/react-native",
        "pr_number": 29099,
        "pr_file": "ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java",
        "discussion_id": "451899009",
        "commented_code": "@@ -1099,21 +1107,43 @@ private void drawRectangularBackgroundWithBorders(Canvas canvas) {\n           int bottom = bounds.bottom;\n \n           mPaint.setColor(fastBorderColor);\n+          mPaint.setStyle(Paint.Style.STROKE);\n           if (borderLeft > 0) {\n             int leftInset = left + borderLeft;\n-            canvas.drawRect(left, top, leftInset, bottom - borderBottom, mPaint);\n+            Path path = new Path();",
        "comment_created_at": "2020-07-23T13:15:56+00:00",
        "comment_author": "fabOnReact",
        "comment_body": "@benoitdion I will try to implement your suggestions and improve this solution. Thanks",
        "pr_file_module": null
      },
      {
        "comment_id": "459957308",
        "repo_full_name": "facebook/react-native",
        "pr_number": 29099,
        "pr_file": "ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java",
        "discussion_id": "451899009",
        "commented_code": "@@ -1099,21 +1107,43 @@ private void drawRectangularBackgroundWithBorders(Canvas canvas) {\n           int bottom = bounds.bottom;\n \n           mPaint.setColor(fastBorderColor);\n+          mPaint.setStyle(Paint.Style.STROKE);\n           if (borderLeft > 0) {\n             int leftInset = left + borderLeft;\n-            canvas.drawRect(left, top, leftInset, bottom - borderBottom, mPaint);\n+            Path path = new Path();",
        "comment_created_at": "2020-07-24T09:50:12+00:00",
        "comment_author": "fabOnReact",
        "comment_body": "Thanks a lot @benoitdion\r\n>It is generally recommended against creating new instances in functions called in onDraw. You may want to consider creating the Path where mPaint is created and reset it before using it here.\r\n\r\nI just noticed that the changes required in your message are included in commit https://github.com/facebook/react-native/pull/29099/commits/cbc9f4503e580da15461dbaae5317a94f9b4e77a \r\n\r\n1) > creating the Path where mPaint is created \r\n\r\nThe Path `mPathForSingleBorder` is created where `mPaint` is created\r\n\r\nhttps://github.com/facebook/react-native/blob/cbc9f4503e580da15461dbaae5317a94f9b4e77a/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java#L92\r\nhttps://github.com/facebook/react-native/blob/cbc9f4503e580da15461dbaae5317a94f9b4e77a/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java#L106\r\n\r\n2) >and reset it before using it here.\r\n\r\n`mPathForSingleBorder` is resetted before drawing the border\r\n\r\nhttps://github.com/facebook/react-native/blob/cbc9f4503e580da15461dbaae5317a94f9b4e77a/ReactAndroid/src/main/java/com/facebook/react/views/view/ReactViewBackgroundDrawable.java#L1114\r\n\r\n3) I tried to replace `moveTo` and `lineTo` with `drawLine`, but the `dotted` style is not applied\r\n4) I tried moving this logic to a separate function as displayed in https://github.com/fabriziobertoglio1987/react-native/commit/ed3230c983211da0351e576894926551871e5722 and then apply recursion using [invoke](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Method.html#invoke-java.lang.Object-java.lang.Object...-) and [lambda](https://www.w3schools.com/java/java_lambda.asp). \r\n\r\nI decided to not commit those changes as they do not make the code more readable, more clear and easier to search. Moving the logic to a separate function requires other developers to read/memorize an additional function.\r\n\r\nThe only reason to have a `drawSide` function below would be:\r\n\r\n1) It would be easier to write a unit test. I would unit test this function with a mocking library and I would invoke the function `drawSide(width, start, end, spy)` and set an expectation on the `spy` canvas parameter.\r\n\r\nI would expect that `spy` received method `:drawPath` with parameters `mPathForSingleBorder` and `mPaint` ([test-spy](https://github.com/rspec/rspec-mocks#test-spies)). I would verify `mPathForSingleBorder` and that `mPaint` is dotted.\r\n\r\n```java\r\n  private void drawSide(int width, PointF start, PointF end, Canvas canvas) {\r\n    mPathForSingleBorder.reset();\r\n    updatePathEffect(width);\r\n    mPaint.setStrokeWidth(width);\r\n    mPathForSingleBorder.moveTo(start.x, start.y);\r\n    mPathForSingleBorder.lineTo(end.x, end.y);\r\n    canvas.drawPath(mPathForSingleBorder, mPaint);\r\n  }\r\n```\r\n\r\n2)  The below logic is repeated 4 times (`left`, `top`, `right`, `bottom`). The below code repetition could be avoided with a fifth parameter in `drawSide`. The fifth parameter would be a [`lambda`](https://www.w3schools.com/java/java_lambda.asp), the lambda would use [`invoke`](https://docs.oracle.com/javase/8/docs/api/java/lang/reflect/Method.html#invoke-java.lang.Object-java.lang.Object...-) to send a message (`:left`, `:top`, `:right`, `:bottom`) to `borderWidth` and `return` from the `drawSide` method if the result is 0. The same could be done to calculate `start` and `end` Point.  \r\n\r\n```java\r\n          if (borderWidth.left > 0) {\r\n            int width = Math.round(borderWidth.left);\r\n            PointF start = new PointF(left, top - borderWidth.top/2);\r\n            PointF end = new PointF(left, bottom + borderWidth.bottom/2);\r\n            drawSide(width, start, end, canvas);\r\n          }\r\n```\r\n\r\nBut I would not use reflection with this class as it would make the code less readable and harder to search.\r\nI would prefer to write those changes in a separate Pull Request and give clear explanation of those changes.\r\n\r\nI also believe that I should focus on fixing existing issues in react-native, for this reason I did not persist on the above changes.\r\n\r\nThis afternoon I will test further this functionality to detect any other potential issues\r\nI remain available for further changes\r\nThanks a lot\r\nFabrizio Bertoglio",
        "pr_file_module": null
      }
    ]
  }
]