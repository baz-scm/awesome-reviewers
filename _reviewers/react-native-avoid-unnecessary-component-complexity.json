[
  {
    "discussion_id": "1844271604",
    "pr_number": 47554,
    "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/WindowUtil.kt",
    "created_at": "2024-11-15T18:07:32+00:00",
    "commented_code": "}\n \n @Suppress(\"DEPRECATION\")\n-public fun Window.setSystemBarsTranslucency(isTranslucent: Boolean) {\n-  WindowCompat.setDecorFitsSystemWindows(this, !isTranslucent)\n+public fun Window.enableEdgeToEdge() {\n+  val isDarkMode = ContextUtils.isDarkMode(context)\n \n-  if (isTranslucent) {\n-    val isDarkMode =\n-        context.resources.configuration.uiMode and Configuration.UI_MODE_NIGHT_MASK ==\n-            Configuration.UI_MODE_NIGHT_YES\n-\n-    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n-      isStatusBarContrastEnforced = false\n-      isNavigationBarContrastEnforced = true\n-    }\n+  WindowCompat.setDecorFitsSystemWindows(this, false)\n \n-    statusBarColor = Color.TRANSPARENT\n-    navigationBarColor =\n-        when {\n-          Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q -> Color.TRANSPARENT\n-          Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1 && !isDarkMode ->\n-              Color.argb(0xe6, 0xFF, 0xFF, 0xFF)\n-          else -> Color.argb(0x80, 0x1b, 0x1b, 0x1b)\n-        }\n+  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n+    isStatusBarContrastEnforced = false",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1844271604",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47554,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/WindowUtil.kt",
        "discussion_id": "1844271604",
        "commented_code": "@@ -67,39 +67,39 @@ private fun Window.statusBarShow() {\n }\n \n @Suppress(\"DEPRECATION\")\n-public fun Window.setSystemBarsTranslucency(isTranslucent: Boolean) {\n-  WindowCompat.setDecorFitsSystemWindows(this, !isTranslucent)\n+public fun Window.enableEdgeToEdge() {\n+  val isDarkMode = ContextUtils.isDarkMode(context)\n \n-  if (isTranslucent) {\n-    val isDarkMode =\n-        context.resources.configuration.uiMode and Configuration.UI_MODE_NIGHT_MASK ==\n-            Configuration.UI_MODE_NIGHT_YES\n-\n-    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n-      isStatusBarContrastEnforced = false\n-      isNavigationBarContrastEnforced = true\n-    }\n+  WindowCompat.setDecorFitsSystemWindows(this, false)\n \n-    statusBarColor = Color.TRANSPARENT\n-    navigationBarColor =\n-        when {\n-          Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q -> Color.TRANSPARENT\n-          Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1 && !isDarkMode ->\n-              Color.argb(0xe6, 0xFF, 0xFF, 0xFF)\n-          else -> Color.argb(0x80, 0x1b, 0x1b, 0x1b)\n-        }\n+  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n+    isStatusBarContrastEnforced = false",
        "comment_created_at": "2024-11-15T18:07:32+00:00",
        "comment_author": "kirillzyusko",
        "comment_body": "Also just a random thought in my head...\r\n\r\nWould it be possible to expose a new component (`NavigationBar`, similar to `StatusBar`) and add a possibility to customize properties of NavigationBar (backgroundColor/translucent/style (dark/light))?\r\n\r\nI know that there are libraries `react-native-bars` that were aiming to deliver this API. But since we add an ability to toggle `edge-to-edge` mode, maybe it would be reasonable to add other components as well, so that RN will have a full feature set of component out of the box?",
        "pr_file_module": null
      },
      {
        "comment_id": "1844955419",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47554,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/view/WindowUtil.kt",
        "discussion_id": "1844271604",
        "commented_code": "@@ -67,39 +67,39 @@ private fun Window.statusBarShow() {\n }\n \n @Suppress(\"DEPRECATION\")\n-public fun Window.setSystemBarsTranslucency(isTranslucent: Boolean) {\n-  WindowCompat.setDecorFitsSystemWindows(this, !isTranslucent)\n+public fun Window.enableEdgeToEdge() {\n+  val isDarkMode = ContextUtils.isDarkMode(context)\n \n-  if (isTranslucent) {\n-    val isDarkMode =\n-        context.resources.configuration.uiMode and Configuration.UI_MODE_NIGHT_MASK ==\n-            Configuration.UI_MODE_NIGHT_YES\n-\n-    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n-      isStatusBarContrastEnforced = false\n-      isNavigationBarContrastEnforced = true\n-    }\n+  WindowCompat.setDecorFitsSystemWindows(this, false)\n \n-    statusBarColor = Color.TRANSPARENT\n-    navigationBarColor =\n-        when {\n-          Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q -> Color.TRANSPARENT\n-          Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1 && !isDarkMode ->\n-              Color.argb(0xe6, 0xFF, 0xFF, 0xFF)\n-          else -> Color.argb(0x80, 0x1b, 0x1b, 0x1b)\n-        }\n+  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n+    isStatusBarContrastEnforced = false",
        "comment_created_at": "2024-11-16T10:49:58+00:00",
        "comment_author": "zoontek",
        "comment_body": "For me, having a `NavigationBar` component is a bit out-of-scope as a lot of these props will have no effect. `react-native-edge-to-edge` has a `SystemBars` component, which doesn't uses deprecated APIs and align to what is enforced on Android 15. And only `hidden` matters for navigation bar.\r\n\r\n- `backgroundColor` -> will have no effect with gesture navigation, only with buttons navigation\r\n- `barStyle` -> same, as gesture navigation style is automatic and based on contrast\r\n\r\nFor those two to be usable, we also need to set `setStatusBarContrastEnforced` to `false`, which doesn't align with what's enforced in Android 15 / what occurs when AndroidX core`enableEdgeToEdge` is used.\r\n\r\nBy default, they keep a semi opaque nav bar (white or black, dependending on the color scheme) for buttons nav and a transparent one for gesture nav. That avoids the additional burden to handle nav bar color / style only for Android users with buttons navigation on (not even the default anymore).\r\n\r\nI think it's not worth the developers extra work / the introduction of deprecated APIs, and that the Google choice is probably the good one here.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1930399155",
    "pr_number": 48942,
    "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultReactHost.kt",
    "created_at": "2025-01-27T11:47:25+00:00",
    "commented_code": "jsMainModulePath: String = \"index\",\n       jsBundleAssetPath: String = \"index\",\n       jsBundleFilePath: String? = null,\n-      isHermesEnabled: Boolean = true,\n+      jsRuntimeFactory: JSRuntimeFactory,",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1930399155",
        "repo_full_name": "facebook/react-native",
        "pr_number": 48942,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/defaults/DefaultReactHost.kt",
        "discussion_id": "1930399155",
        "commented_code": "@@ -60,7 +59,7 @@ public object DefaultReactHost {\n       jsMainModulePath: String = \"index\",\n       jsBundleAssetPath: String = \"index\",\n       jsBundleFilePath: String? = null,\n-      isHermesEnabled: Boolean = true,\n+      jsRuntimeFactory: JSRuntimeFactory,",
        "comment_created_at": "2025-01-27T11:47:25+00:00",
        "comment_author": "cortinico",
        "comment_body": "That's a breaking change that will impact all the apps in React Native and can't be shipped as it is.",
        "pr_file_module": null
      }
    ]
  }
]