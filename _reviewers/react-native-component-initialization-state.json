[
  {
    "discussion_id": "1998519881",
    "pr_number": 50049,
    "pr_file": "packages/react-native/React/Fabric/Mounting/ComponentViews/Switch/RCTSwitchComponentView.mm",
    "created_at": "2025-03-17T11:18:53+00:00",
    "commented_code": "{\n   [super prepareForRecycle];\n   _isInitialValueSet = NO;\n+\n+  const auto &switchProps = static_cast<const SwitchProps &>(*_props);\n+  _switchView.on = switchProps.value;",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1998519881",
        "repo_full_name": "facebook/react-native",
        "pr_number": 50049,
        "pr_file": "packages/react-native/React/Fabric/Mounting/ComponentViews/Switch/RCTSwitchComponentView.mm",
        "discussion_id": "1998519881",
        "commented_code": "@@ -47,6 +47,9 @@ - (void)prepareForRecycle\n {\n   [super prepareForRecycle];\n   _isInitialValueSet = NO;\n+\n+  const auto &switchProps = static_cast<const SwitchProps &>(*_props);\n+  _switchView.on = switchProps.value;",
        "comment_created_at": "2025-03-17T11:18:53+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "Hi @zhongwuzw I made some investigation and I don't think that this is the right fix.\r\n\r\nThe problem with this is that, after recycle, the default value for the UISwitch is `true`. While the oldProp is holding a value of `false`. The new prop is `false`, so the value is not set.\r\n\r\nI think that the right fix should be applied in the `updateProps:` function, like this:\r\n\r\n```diff\r\n-  if (oldSwitchProps.value != newSwitchProps.value) {\r\n+  if (!_isInitialValueSet || oldSwitchProps.value != newSwitchProps.value) {\r\n    BOOL shouldAnimate = _isInitialValueSet == YES;\r\n    [_switchView setOn:newSwitchProps.value animated:shouldAnimate];\r\n  }\r\n```\r\nThis will force ReactNative to set the initial value on the switch in the first rendering, which is the correct behavior, because that will be the first rendering for the recycled component.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2005251707",
    "pr_number": 50166,
    "pr_file": "packages/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm",
    "created_at": "2025-03-20T10:15:27+00:00",
    "commented_code": "// Updating the UITextView attributedText, for example changing the lineHeight, the color or adding\n   // a new paragraph with \n, causes the cursor to move to the end of the Text and scroll.\n   // This is fixed by restoring the cursor position and scrolling to that position (iOS issue 652653).\n-  if (selectedRange.empty) {\n-    // Maintaining a cursor position relative to the end of the old text.\n-    NSInteger offsetStart = [_backedTextInputView offsetFromPosition:_backedTextInputView.beginningOfDocument\n-                                                          toPosition:selectedRange.start];\n-    NSInteger offsetFromEnd = oldTextLength - offsetStart;\n-    NSInteger newOffset = attributedString.string.length - offsetFromEnd;\n-    UITextPosition *position = [_backedTextInputView positionFromPosition:_backedTextInputView.beginningOfDocument\n-                                                                   offset:newOffset];\n-    [_backedTextInputView setSelectedTextRange:[_backedTextInputView textRangeFromPosition:position toPosition:position]\n-                                notifyDelegate:YES];\n-    [_backedTextInputView scrollRangeToVisible:NSMakeRange(offsetStart, 0)];\n-  }\n+  // Maintaining a cursor position relative to the end of the old text.",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "2005251707",
        "repo_full_name": "facebook/react-native",
        "pr_number": 50166,
        "pr_file": "packages/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm",
        "discussion_id": "2005251707",
        "commented_code": "@@ -721,18 +725,17 @@ - (void)_setAttributedString:(NSAttributedString *)attributedString\n   // Updating the UITextView attributedText, for example changing the lineHeight, the color or adding\n   // a new paragraph with \\n, causes the cursor to move to the end of the Text and scroll.\n   // This is fixed by restoring the cursor position and scrolling to that position (iOS issue 652653).\n-  if (selectedRange.empty) {\n-    // Maintaining a cursor position relative to the end of the old text.\n-    NSInteger offsetStart = [_backedTextInputView offsetFromPosition:_backedTextInputView.beginningOfDocument\n-                                                          toPosition:selectedRange.start];\n-    NSInteger offsetFromEnd = oldTextLength - offsetStart;\n-    NSInteger newOffset = attributedString.string.length - offsetFromEnd;\n-    UITextPosition *position = [_backedTextInputView positionFromPosition:_backedTextInputView.beginningOfDocument\n-                                                                   offset:newOffset];\n-    [_backedTextInputView setSelectedTextRange:[_backedTextInputView textRangeFromPosition:position toPosition:position]\n-                                notifyDelegate:YES];\n-    [_backedTextInputView scrollRangeToVisible:NSMakeRange(offsetStart, 0)];\n-  }\n+  // Maintaining a cursor position relative to the end of the old text.",
        "comment_created_at": "2025-03-20T10:15:27+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "Can you explain why removing this was relevant? Is it necessary to remove it?",
        "pr_file_module": null
      },
      {
        "comment_id": "2005265620",
        "repo_full_name": "facebook/react-native",
        "pr_number": 50166,
        "pr_file": "packages/react-native/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm",
        "discussion_id": "2005251707",
        "commented_code": "@@ -721,18 +725,17 @@ - (void)_setAttributedString:(NSAttributedString *)attributedString\n   // Updating the UITextView attributedText, for example changing the lineHeight, the color or adding\n   // a new paragraph with \\n, causes the cursor to move to the end of the Text and scroll.\n   // This is fixed by restoring the cursor position and scrolling to that position (iOS issue 652653).\n-  if (selectedRange.empty) {\n-    // Maintaining a cursor position relative to the end of the old text.\n-    NSInteger offsetStart = [_backedTextInputView offsetFromPosition:_backedTextInputView.beginningOfDocument\n-                                                          toPosition:selectedRange.start];\n-    NSInteger offsetFromEnd = oldTextLength - offsetStart;\n-    NSInteger newOffset = attributedString.string.length - offsetFromEnd;\n-    UITextPosition *position = [_backedTextInputView positionFromPosition:_backedTextInputView.beginningOfDocument\n-                                                                   offset:newOffset];\n-    [_backedTextInputView setSelectedTextRange:[_backedTextInputView textRangeFromPosition:position toPosition:position]\n-                                notifyDelegate:YES];\n-    [_backedTextInputView scrollRangeToVisible:NSMakeRange(offsetStart, 0)];\n-  }\n+  // Maintaining a cursor position relative to the end of the old text.",
        "comment_created_at": "2025-03-20T10:23:12+00:00",
        "comment_author": "freeboub",
        "comment_body": "Yes this is relevant !\r\nThis code was here to keep cursor position, but we also want to maintain current selection when we change the text. I really wonder why this test was added... (I didn't check history)\r\n\r\nI am implementing a rich text editor, when user change style of a part of text I want to maintain its selection.",
        "pr_file_module": null
      }
    ]
  }
]