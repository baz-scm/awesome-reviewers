[
  {
    "discussion_id": "1937167838",
    "pr_number": 46884,
    "pr_file": "packages/react-native/Libraries/Text/Text/RCTTextView.mm",
    "created_at": "2025-01-31T12:31:28+00:00",
    "commented_code": "[self setNeedsDisplay];\n }\n \n+- (CGPoint)calculateDrawingPointWithTextStorage:(NSTextStorage *)textStorage",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1937167838",
        "repo_full_name": "facebook/react-native",
        "pr_number": 46884,
        "pr_file": "packages/react-native/Libraries/Text/Text/RCTTextView.mm",
        "discussion_id": "1937167838",
        "commented_code": "@@ -98,6 +99,42 @@ - (void)setTextStorage:(NSTextStorage *)textStorage\n   [self setNeedsDisplay];\n }\n \n+- (CGPoint)calculateDrawingPointWithTextStorage:(NSTextStorage *)textStorage",
        "comment_created_at": "2025-01-31T12:31:28+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "@NickGerleman \r\n> It would be best to keep the changes to the Fabric component instead of this one.",
        "pr_file_module": null
      },
      {
        "comment_id": "1939035384",
        "repo_full_name": "facebook/react-native",
        "pr_number": 46884,
        "pr_file": "packages/react-native/Libraries/Text/Text/RCTTextView.mm",
        "discussion_id": "1937167838",
        "commented_code": "@@ -98,6 +99,42 @@ - (void)setTextStorage:(NSTextStorage *)textStorage\n   [self setNeedsDisplay];\n }\n \n+- (CGPoint)calculateDrawingPointWithTextStorage:(NSTextStorage *)textStorage",
        "comment_created_at": "2025-02-03T09:14:38+00:00",
        "comment_author": "ArekChr",
        "comment_body": "Could you point me to the specific place in the Fabric component where I should move this change?",
        "pr_file_module": null
      },
      {
        "comment_id": "1939180761",
        "repo_full_name": "facebook/react-native",
        "pr_number": 46884,
        "pr_file": "packages/react-native/Libraries/Text/Text/RCTTextView.mm",
        "discussion_id": "1937167838",
        "commented_code": "@@ -98,6 +99,42 @@ - (void)setTextStorage:(NSTextStorage *)textStorage\n   [self setNeedsDisplay];\n }\n \n+- (CGPoint)calculateDrawingPointWithTextStorage:(NSTextStorage *)textStorage",
        "comment_created_at": "2025-02-03T10:54:17+00:00",
        "comment_author": "SimpleCreations",
        "comment_body": "Hi! I'm a developer following this thread. Does this suggestion mean that this fix will not be made for the old architecture? I've been following the original ticket for years, and such outcome would be quite disappointing \ud83d\ude15 My team is not considering upgrading to Fabric any time soon (due to many old arch dependencies, and also performance/bundle size/reliability concerns).",
        "pr_file_module": null
      },
      {
        "comment_id": "1939227451",
        "repo_full_name": "facebook/react-native",
        "pr_number": 46884,
        "pr_file": "packages/react-native/Libraries/Text/Text/RCTTextView.mm",
        "discussion_id": "1937167838",
        "commented_code": "@@ -98,6 +99,42 @@ - (void)setTextStorage:(NSTextStorage *)textStorage\n   [self setNeedsDisplay];\n }\n \n+- (CGPoint)calculateDrawingPointWithTextStorage:(NSTextStorage *)textStorage",
        "comment_created_at": "2025-02-03T11:31:10+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "@ArekChr I believe that the suggestion here was to not touch the files in the old architecture. The PR already updates the New Architecture, so we are good.\r\n---\r\n@SimpleCreations Thanks for the feedback, I believe that in this case we can keep the fix here. As a general thought, though.. Yes, in the future the Old Architecture will not be maintained. \r\n\r\nRight now, we already released 0.76 and 0.77 where the New Architecture is the default. We are already working on 0.78 and once that's out, 0.75 will go out of support. That is the last version where the Old Architecture is used by default.\r\n\r\nConsider that new features are only developed for the New Architecture and many libraries will be only compatible with the New Architecture, moving forward (reanimated and react-native-vision-camera to mention two of them). So we strongly advise to start migrating to the New Architecture.\r\n\r\nI'd be curious to know what is holding you back in more details. If you can replicate Performance and bundle issues in separate reproducers, we are more than happy to look into them as soon as possible.",
        "pr_file_module": null
      },
      {
        "comment_id": "1948792827",
        "repo_full_name": "facebook/react-native",
        "pr_number": 46884,
        "pr_file": "packages/react-native/Libraries/Text/Text/RCTTextView.mm",
        "discussion_id": "1937167838",
        "commented_code": "@@ -98,6 +99,42 @@ - (void)setTextStorage:(NSTextStorage *)textStorage\n   [self setNeedsDisplay];\n }\n \n+- (CGPoint)calculateDrawingPointWithTextStorage:(NSTextStorage *)textStorage",
        "comment_created_at": "2025-02-10T10:25:27+00:00",
        "comment_author": "SimpleCreations",
        "comment_body": "@cipolleschi Thank you for reconsidering! I appreciate the decision to keep the fix very much.\r\n\r\nI'll try to answer your question about what is holding my team back. The primary reason is we use quite a few SaaS solutions that provide their own React Native SDKs that are old arch only, and they have no timeline of adding new arch support. Also we have developed a few of our own React Native wrappers for other SaaS solutions, and they are shared between other apps in our company, which are also on old arch.\r\n\r\nPerformance and bundle size concerns come from me following this thread: https://github.com/facebook/react-native/issues/47490 where multiple people share negative experiences with new arch migration, but I'm not sure if this would affect us, because we haven't tried migrating yet (due to what I described above). So please disregard this part for now \ud83d\ude42\r\n\r\nI would like to also mention that the same fix for line height has been made for old arch on Android here: https://github.com/facebook/react-native/pull/46362, so it would make sense to include an old arch fix on iOS too.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1965115360",
    "pr_number": 49489,
    "pr_file": "packages/react-native/React/Runtime/RCTJscInstanceFactory.h",
    "created_at": "2025-02-21T09:00:52+00:00",
    "commented_code": "+/*",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1965115360",
        "repo_full_name": "facebook/react-native",
        "pr_number": 49489,
        "pr_file": "packages/react-native/React/Runtime/RCTJscInstanceFactory.h",
        "discussion_id": "1965115360",
        "commented_code": "@@ -0,0 +1,22 @@\n+/*",
        "comment_created_at": "2025-02-21T09:00:52+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "shouldn't this be in the external pod? Or are we keeping it here while we support the old JSC and the plan is to move it away or delete it when we only have hermes or the external jsc pod from community?",
        "pr_file_module": null
      },
      {
        "comment_id": "1965126060",
        "repo_full_name": "facebook/react-native",
        "pr_number": 49489,
        "pr_file": "packages/react-native/React/Runtime/RCTJscInstanceFactory.h",
        "discussion_id": "1965115360",
        "commented_code": "@@ -0,0 +1,22 @@\n+/*",
        "comment_created_at": "2025-02-21T09:08:21+00:00",
        "comment_author": "okwasniewski",
        "comment_body": "My idea was to keep it here until we fully extract it. The internal design is now relying on passing a C pointer: \r\n\r\nhttps://github.com/facebook/react-native/blob/af32fe878efd908d1f687bc23c5ae2529b7e32b5/packages/react-native/Libraries/AppDelegate/RCTRootViewFactory.mm#L267-L269\r\n\r\nOnce we fully remove JSC we can then leave only the hermes code",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1900076895",
    "pr_number": 48340,
    "pr_file": "packages/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake",
    "created_at": "2024-12-31T11:55:27+00:00",
    "commented_code": "# variable is defined if user need to access it.\n endif ()\n \n-file(GLOB input_SRC CONFIGURE_DEPENDS\n-        ${REACT_ANDROID_DIR}/cmake-utils/default-app-setup/*.cpp\n-        ${BUILD_DIR}/generated/autolinking/src/main/jni/*.cpp)\n+file(GLOB override_cpp_SRC CONFIGURE_DEPENDS *.cpp)\n+if(override_cpp_SRC)",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1900076895",
        "repo_full_name": "facebook/react-native",
        "pr_number": 48340,
        "pr_file": "packages/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake",
        "discussion_id": "1900076895",
        "commented_code": "@@ -39,9 +39,16 @@ if (PROJECT_ROOT_DIR)\n # variable is defined if user need to access it.\n endif ()\n \n-file(GLOB input_SRC CONFIGURE_DEPENDS\n-        ${REACT_ANDROID_DIR}/cmake-utils/default-app-setup/*.cpp\n-        ${BUILD_DIR}/generated/autolinking/src/main/jni/*.cpp)\n+file(GLOB override_cpp_SRC CONFIGURE_DEPENDS *.cpp)\n+if(override_cpp_SRC)",
        "comment_created_at": "2024-12-31T11:55:27+00:00",
        "comment_author": "cortinico",
        "comment_body": "```suggestion\r\n# We check if the user is providing a custom OnLoad.cpp file. If so, we pick that\r\n# for compilation. Otherwise we fallback to using the `default-app-setup/OnLoad.cpp` \r\n# file instead.\r\nif(override_cpp_SRC)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1845496217",
    "pr_number": 47641,
    "pr_file": "packages/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake",
    "created_at": "2024-11-17T15:55:06+00:00",
    "commented_code": "set(BUILD_DIR ${PROJECT_BUILD_DIR})\n if(CMAKE_HOST_WIN32)\n-        string(REPLACE \"\\\\\" \"/\" BUILD_DIR ${BUILD_DIR})\n+    string(REPLACE \"\\\\\" \"/\" BUILD_DIR ${BUILD_DIR})\n+    string(REPLACE \"\\\\\" \"/\" REACT_ANDROID_DIR ${REACT_ANDROID_DIR})",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1845496217",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47641,
        "pr_file": "packages/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake",
        "discussion_id": "1845496217",
        "commented_code": "@@ -32,7 +32,8 @@ endif(CCACHE_FOUND)\n \n set(BUILD_DIR ${PROJECT_BUILD_DIR})\n if(CMAKE_HOST_WIN32)\n-        string(REPLACE \"\\\\\" \"/\" BUILD_DIR ${BUILD_DIR})\n+    string(REPLACE \"\\\\\" \"/\" BUILD_DIR ${BUILD_DIR})\n+    string(REPLACE \"\\\\\" \"/\" REACT_ANDROID_DIR ${REACT_ANDROID_DIR})",
        "comment_created_at": "2024-11-17T15:55:06+00:00",
        "comment_author": "FouadMagdy01",
        "comment_body": "- Problem: The variables REACT_ANDROID_DIR and BUILD_DIR might also contain backslashes if they are set on a Windows system. These backslashes need to be replaced to avoid similar issues.\r\n\r\n- Solution: Check if the script is running on Windows using if(CMAKE_HOST_WIN32). If it is, replace backslashes with forward slashes for these variables as well:",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1845497885",
    "pr_number": 47641,
    "pr_file": "packages/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake",
    "created_at": "2024-11-17T15:56:37+00:00",
    "commented_code": "${REACT_ANDROID_DIR}/cmake-utils/default-app-setup/*.cpp\n         ${BUILD_DIR}/generated/autolinking/src/main/jni/*.cpp)\n \n+# Ensure that `input_SRC` paths use forward slashes\n+foreach(path IN LISTS input_SRC)\n+    string(REPLACE \"\\\\\" \"/\" path \"${path}\")\n+endforeach()\n+",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1845497885",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47641,
        "pr_file": "packages/react-native/ReactAndroid/cmake-utils/ReactNative-application.cmake",
        "discussion_id": "1845497885",
        "commented_code": "@@ -44,6 +45,11 @@ file(GLOB input_SRC CONFIGURE_DEPENDS\n         ${REACT_ANDROID_DIR}/cmake-utils/default-app-setup/*.cpp\n         ${BUILD_DIR}/generated/autolinking/src/main/jni/*.cpp)\n \n+# Ensure that `input_SRC` paths use forward slashes\n+foreach(path IN LISTS input_SRC)\n+    string(REPLACE \"\\\\\" \"/\" path \"${path}\")\n+endforeach()\n+",
        "comment_created_at": "2024-11-17T15:56:37+00:00",
        "comment_author": "FouadMagdy01",
        "comment_body": "- Problem: On Windows, backslashes (\\) in file paths are often interpreted by CMake as escape characters, which can lead to invalid sequences like \\S. CMake and many other tools can understand forward slashes (/) as directory separators, even on Windows.\r\n\r\n- Solution: Use string(REPLACE \"\\\\\" \"/\" path \"${path}\") to convert all backslashes in the input_SRC file paths to forward slashes. This ensures CMake correctly interprets the paths without treating them as escape sequences.",
        "pr_file_module": null
      }
    ]
  }
]