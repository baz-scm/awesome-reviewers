[
  {
    "discussion_id": "2156628416",
    "pr_number": 52109,
    "pr_file": "packages/react-native/scripts/cocoapods/rncore.rb",
    "created_at": "2025-06-19T10:01:52+00:00",
    "commented_code": "+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+require \"json\"\n+require 'net/http'\n+require 'rexml/document'\n+\n+require_relative './utils.rb'\n+\n+## - RCT_USE_PREBUILT_RNCORE: If set to 1, it will use the release tarball from Maven instead of building from source.\n+## - RCT_USE_LOCAL_RNCORE: **TEST ONLY** If set, it will use a local tarball of RNCore if it exists.\n+## - RCT_RNCORE_VERSION: **TEST ONLY** If set, it will override the version of RNCore to be used.\n+\n+class ReactNativeCoreUtils\n+    @@build_from_source = true\n+    @@react_native_path = \"\"\n+    @@react_native_version = \"\"\n+    @@use_nightly = false\n+\n+    ## Sets up wether ReactNative Core should be built from source or not.\n+    ## If RCT_USE_PREBUILT_RNCORE is set to 1 and the artifacts exists on Maven, it will\n+    ## not build from source. Otherwise, it will build from source.\n+    def self.setup_rncore(react_native_path, react_native_version)\n+        # We don't want setup to be called multiple times, so we check if the variables are already set.\n+        if @@react_native_version == \"\"\n+            rncore_log(\"Setting up ReactNativeCore...\")\n+            @@react_native_path = react_native_path\n+            @@react_native_version = ENV[\"RCT_RNCORE_VERSION\"] == nil ? react_native_version : ENV[\"RCT_RNCORE_VERSION\"]\n+\n+            if @@react_native_version.include? 'nightly'\n+                @@use_nightly = true\n+                if ENV[\"RCT_RNCORE_VERSION\"] == \"nightly\"\n+                    @@react_native_version = ReactNativeDependenciesUtils.get_nightly_npm_version()\n+                    rncore_log(\"Using nightly version from npm: #{@@react_native_version}\")\n+                else\n+                    rncore_log(\"Using nightly build #{@@react_native_version}\")\n+                end\n+            end\n+\n+            artifacts_exists = ENV[\"RCT_USE_PREBUILT_RNCORE\"] == \"1\" && (@@use_nightly ? nightly_artifact_exists(@@react_native_version) : release_artifact_exists(@@react_native_version))\n+            use_local_xcframework = ENV[\"RCT_USE_LOCAL_RNCORE\"] && File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+\n+            if ENV[\"RCT_USE_LOCAL_RNCORE\"]\n+                if !File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+                    abort(\"RCT_USE_LOCAL_RNCORE is set to #{ENV[\"RCT_USE_LOCAL_RNCORE\"]} but the file does not exist!\")\n+                end\n+            end\n+\n+            @@build_from_source = !use_local_xcframework && !artifacts_exists\n+\n+            if @@build_from_source && ENV[\"RCT_USE_LOCAL_RNCORE\"] && !use_local_xcframework\n+                rncore_log(\"No local xcframework found, reverting to building from source.\")\n+            end\n+            if @@build_from_source && ENV[\"RCT_USE_PREBUILT_RNCORE\"] && !artifacts_exists\n+                rncore_log(\"No prebuilt artifacts found, reverting to building from source.\")\n+            end\n+            rncore_log(\"Building from source: #{@@build_from_source}\")\n+            rncore_log(\"Source: #{self.resolve_podspec_source()}\")\n+        end\n+    end\n+\n+    def self.build_rncore_from_source()\n+        return @@build_from_source\n+    end\n+\n+    def self.resolve_podspec_source()\n+        if ENV[\"RCT_USE_LOCAL_RNCORE\"]\n+            if !File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+                abort(\"RCT_USE_LOCAL_RNCORE is set to #{ENV[\"RCT_USE_LOCAL_RNCORE\"]} but the file does not exist in the current directory (#{Dir.pwd}).\")\n+            end\n+            rncore_log(\"Using local xcframework at #{ENV[\"RCT_USE_LOCAL_RNCORE\"]}\")\n+            return {:http => \"file://#{ENV[\"RCT_USE_LOCAL_RNCORE\"]}\" }\n+        end\n+\n+        if ENV[\"RCT_USE_PREBUILT_RNCORE\"] && ENV[\"RCT_USE_PREBUILT_RNCORE\"] == \"1\"",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "2156628416",
        "repo_full_name": "facebook/react-native",
        "pr_number": 52109,
        "pr_file": "packages/react-native/scripts/cocoapods/rncore.rb",
        "discussion_id": "2156628416",
        "commented_code": "@@ -0,0 +1,219 @@\n+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+require \"json\"\n+require 'net/http'\n+require 'rexml/document'\n+\n+require_relative './utils.rb'\n+\n+## - RCT_USE_PREBUILT_RNCORE: If set to 1, it will use the release tarball from Maven instead of building from source.\n+## - RCT_USE_LOCAL_RNCORE: **TEST ONLY** If set, it will use a local tarball of RNCore if it exists.\n+## - RCT_RNCORE_VERSION: **TEST ONLY** If set, it will override the version of RNCore to be used.\n+\n+class ReactNativeCoreUtils\n+    @@build_from_source = true\n+    @@react_native_path = \"\"\n+    @@react_native_version = \"\"\n+    @@use_nightly = false\n+\n+    ## Sets up wether ReactNative Core should be built from source or not.\n+    ## If RCT_USE_PREBUILT_RNCORE is set to 1 and the artifacts exists on Maven, it will\n+    ## not build from source. Otherwise, it will build from source.\n+    def self.setup_rncore(react_native_path, react_native_version)\n+        # We don't want setup to be called multiple times, so we check if the variables are already set.\n+        if @@react_native_version == \"\"\n+            rncore_log(\"Setting up ReactNativeCore...\")\n+            @@react_native_path = react_native_path\n+            @@react_native_version = ENV[\"RCT_RNCORE_VERSION\"] == nil ? react_native_version : ENV[\"RCT_RNCORE_VERSION\"]\n+\n+            if @@react_native_version.include? 'nightly'\n+                @@use_nightly = true\n+                if ENV[\"RCT_RNCORE_VERSION\"] == \"nightly\"\n+                    @@react_native_version = ReactNativeDependenciesUtils.get_nightly_npm_version()\n+                    rncore_log(\"Using nightly version from npm: #{@@react_native_version}\")\n+                else\n+                    rncore_log(\"Using nightly build #{@@react_native_version}\")\n+                end\n+            end\n+\n+            artifacts_exists = ENV[\"RCT_USE_PREBUILT_RNCORE\"] == \"1\" && (@@use_nightly ? nightly_artifact_exists(@@react_native_version) : release_artifact_exists(@@react_native_version))\n+            use_local_xcframework = ENV[\"RCT_USE_LOCAL_RNCORE\"] && File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+\n+            if ENV[\"RCT_USE_LOCAL_RNCORE\"]\n+                if !File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+                    abort(\"RCT_USE_LOCAL_RNCORE is set to #{ENV[\"RCT_USE_LOCAL_RNCORE\"]} but the file does not exist!\")\n+                end\n+            end\n+\n+            @@build_from_source = !use_local_xcframework && !artifacts_exists\n+\n+            if @@build_from_source && ENV[\"RCT_USE_LOCAL_RNCORE\"] && !use_local_xcframework\n+                rncore_log(\"No local xcframework found, reverting to building from source.\")\n+            end\n+            if @@build_from_source && ENV[\"RCT_USE_PREBUILT_RNCORE\"] && !artifacts_exists\n+                rncore_log(\"No prebuilt artifacts found, reverting to building from source.\")\n+            end\n+            rncore_log(\"Building from source: #{@@build_from_source}\")\n+            rncore_log(\"Source: #{self.resolve_podspec_source()}\")\n+        end\n+    end\n+\n+    def self.build_rncore_from_source()\n+        return @@build_from_source\n+    end\n+\n+    def self.resolve_podspec_source()\n+        if ENV[\"RCT_USE_LOCAL_RNCORE\"]\n+            if !File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+                abort(\"RCT_USE_LOCAL_RNCORE is set to #{ENV[\"RCT_USE_LOCAL_RNCORE\"]} but the file does not exist in the current directory (#{Dir.pwd}).\")\n+            end\n+            rncore_log(\"Using local xcframework at #{ENV[\"RCT_USE_LOCAL_RNCORE\"]}\")\n+            return {:http => \"file://#{ENV[\"RCT_USE_LOCAL_RNCORE\"]}\" }\n+        end\n+\n+        if ENV[\"RCT_USE_PREBUILT_RNCORE\"] && ENV[\"RCT_USE_PREBUILT_RNCORE\"] == \"1\"",
        "comment_created_at": "2025-06-19T10:01:52+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "```suggestion\r\n        if ENV[\"RCT_USE_PREBUILT_RNCORE\"] == \"1\"\r\n```\r\nIf `RCT_USE_PREBUILT_RNCORE` is not set should not enter in the `if`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1923930396",
    "pr_number": 48755,
    "pr_file": "packages/react-native/scripts/cocoapods/new_architecture.rb",
    "created_at": "2025-01-21T15:25:40+00:00",
    "commented_code": "end\n \n     def self.new_arch_enabled\n-        return ENV[\"RCT_NEW_ARCH_ENABLED\"] == nil || ENV[\"RCT_NEW_ARCH_ENABLED\"] == \"1\"\n+        return ENV[\"RCT_NEW_ARCH_ENABLED\"] == 0 ? false : true",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1923930396",
        "repo_full_name": "facebook/react-native",
        "pr_number": 48755,
        "pr_file": "packages/react-native/scripts/cocoapods/new_architecture.rb",
        "discussion_id": "1923930396",
        "commented_code": "@@ -159,6 +159,6 @@ def self.extract_react_native_version(react_native_path, file_manager: File, jso\n     end\n \n     def self.new_arch_enabled\n-        return ENV[\"RCT_NEW_ARCH_ENABLED\"] == nil || ENV[\"RCT_NEW_ARCH_ENABLED\"] == \"1\"\n+        return ENV[\"RCT_NEW_ARCH_ENABLED\"] == 0 ? false : true",
        "comment_created_at": "2025-01-21T15:25:40+00:00",
        "comment_author": "kraenhansen",
        "comment_body": "```suggestion\r\n        return ENV[\"RCT_NEW_ARCH_ENABLED\"] == \"0\" ? false : true\r\n```\r\n\r\nOr perhaps even simpler\r\n\r\n```suggestion\r\n        return ENV[\"RCT_NEW_ARCH_ENABLED\"] != \"0\"\r\n```\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1927554332",
        "repo_full_name": "facebook/react-native",
        "pr_number": 48755,
        "pr_file": "packages/react-native/scripts/cocoapods/new_architecture.rb",
        "discussion_id": "1923930396",
        "commented_code": "@@ -159,6 +159,6 @@ def self.extract_react_native_version(react_native_path, file_manager: File, jso\n     end\n \n     def self.new_arch_enabled\n-        return ENV[\"RCT_NEW_ARCH_ENABLED\"] == nil || ENV[\"RCT_NEW_ARCH_ENABLED\"] == \"1\"\n+        return ENV[\"RCT_NEW_ARCH_ENABLED\"] == 0 ? false : true",
        "comment_created_at": "2025-01-23T19:11:10+00:00",
        "comment_author": "kraenhansen",
        "comment_body": "@cipolleschi \ud83e\udd1e",
        "pr_file_module": null
      }
    ]
  }
]