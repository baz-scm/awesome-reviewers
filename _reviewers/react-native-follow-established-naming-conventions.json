[
  {
    "discussion_id": "2156630131",
    "pr_number": 52109,
    "pr_file": "packages/react-native/scripts/cocoapods/rncore.rb",
    "created_at": "2025-06-19T10:02:46+00:00",
    "commented_code": "+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+require \"json\"\n+require 'net/http'\n+require 'rexml/document'\n+\n+require_relative './utils.rb'\n+\n+## - RCT_USE_PREBUILT_RNCORE: If set to 1, it will use the release tarball from Maven instead of building from source.\n+## - RCT_USE_LOCAL_RNCORE: **TEST ONLY** If set, it will use a local tarball of RNCore if it exists.\n+## - RCT_RNCORE_VERSION: **TEST ONLY** If set, it will override the version of RNCore to be used.\n+\n+class ReactNativeCoreUtils\n+    @@build_from_source = true\n+    @@react_native_path = \"\"\n+    @@react_native_version = \"\"\n+    @@use_nightly = false\n+\n+    ## Sets up wether ReactNative Core should be built from source or not.\n+    ## If RCT_USE_PREBUILT_RNCORE is set to 1 and the artifacts exists on Maven, it will\n+    ## not build from source. Otherwise, it will build from source.\n+    def self.setup_rncore(react_native_path, react_native_version)\n+        # We don't want setup to be called multiple times, so we check if the variables are already set.\n+        if @@react_native_version == \"\"\n+            rncore_log(\"Setting up ReactNativeCore...\")\n+            @@react_native_path = react_native_path\n+            @@react_native_version = ENV[\"RCT_RNCORE_VERSION\"] == nil ? react_native_version : ENV[\"RCT_RNCORE_VERSION\"]\n+\n+            if @@react_native_version.include? 'nightly'\n+                @@use_nightly = true\n+                if ENV[\"RCT_RNCORE_VERSION\"] == \"nightly\"\n+                    @@react_native_version = ReactNativeDependenciesUtils.get_nightly_npm_version()\n+                    rncore_log(\"Using nightly version from npm: #{@@react_native_version}\")\n+                else\n+                    rncore_log(\"Using nightly build #{@@react_native_version}\")\n+                end\n+            end\n+\n+            artifacts_exists = ENV[\"RCT_USE_PREBUILT_RNCORE\"] == \"1\" && (@@use_nightly ? nightly_artifact_exists(@@react_native_version) : release_artifact_exists(@@react_native_version))\n+            use_local_xcframework = ENV[\"RCT_USE_LOCAL_RNCORE\"] && File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+\n+            if ENV[\"RCT_USE_LOCAL_RNCORE\"]\n+                if !File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+                    abort(\"RCT_USE_LOCAL_RNCORE is set to #{ENV[\"RCT_USE_LOCAL_RNCORE\"]} but the file does not exist!\")\n+                end\n+            end\n+\n+            @@build_from_source = !use_local_xcframework && !artifacts_exists\n+\n+            if @@build_from_source && ENV[\"RCT_USE_LOCAL_RNCORE\"] && !use_local_xcframework\n+                rncore_log(\"No local xcframework found, reverting to building from source.\")\n+            end\n+            if @@build_from_source && ENV[\"RCT_USE_PREBUILT_RNCORE\"] && !artifacts_exists\n+                rncore_log(\"No prebuilt artifacts found, reverting to building from source.\")\n+            end\n+            rncore_log(\"Building from source: #{@@build_from_source}\")\n+            rncore_log(\"Source: #{self.resolve_podspec_source()}\")\n+        end\n+    end\n+\n+    def self.build_rncore_from_source()\n+        return @@build_from_source\n+    end\n+\n+    def self.resolve_podspec_source()\n+        if ENV[\"RCT_USE_LOCAL_RNCORE\"]\n+            if !File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+                abort(\"RCT_USE_LOCAL_RNCORE is set to #{ENV[\"RCT_USE_LOCAL_RNCORE\"]} but the file does not exist in the current directory (#{Dir.pwd}).\")\n+            end\n+            rncore_log(\"Using local xcframework at #{ENV[\"RCT_USE_LOCAL_RNCORE\"]}\")\n+            return {:http => \"file://#{ENV[\"RCT_USE_LOCAL_RNCORE\"]}\" }\n+        end\n+\n+        if ENV[\"RCT_USE_PREBUILT_RNCORE\"] && ENV[\"RCT_USE_PREBUILT_RNCORE\"] == \"1\"\n+            if @@use_nightly\n+                rncore_log(\"Using nightly tarball\")\n+                begin\n+                    return self.podspec_source_download_prebuilt_nightly_tarball(@@react_native_version)\n+                rescue => e\n+                    rncore_log(\"Failed to download nightly tarball: #{e.message}\", :error)\n+                    return\n+                end\n+            end\n+\n+            begin\n+                return self.podspec_source_download_prebuild_release_tarball()\n+            rescue => e\n+                rncore_log(\"Failed to download release tarball: #{e.message}\", :error)\n+                return\n+            end\n+        end\n+\n+    end\n+\n+    def self.podspec_source_download_prebuild_release_tarball()\n+        # Warn if @@react_native_path is not set\n+        if @@react_native_path == \"\"\n+            rncore_log(\"react_native_path is not set\", :error)\n+            return\n+        end\n+\n+        # Warn if @@react_native_version is not set\n+        if @@react_native_version == \"\"\n+            rncore_log(\"react_native_version is not set\", :error)\n+            return\n+        end\n+\n+        if @@build_from_source\n+            return\n+        end\n+\n+        url = release_tarball_url(@@react_native_version, :debug)",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "2156630131",
        "repo_full_name": "facebook/react-native",
        "pr_number": 52109,
        "pr_file": "packages/react-native/scripts/cocoapods/rncore.rb",
        "discussion_id": "2156630131",
        "commented_code": "@@ -0,0 +1,219 @@\n+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+require \"json\"\n+require 'net/http'\n+require 'rexml/document'\n+\n+require_relative './utils.rb'\n+\n+## - RCT_USE_PREBUILT_RNCORE: If set to 1, it will use the release tarball from Maven instead of building from source.\n+## - RCT_USE_LOCAL_RNCORE: **TEST ONLY** If set, it will use a local tarball of RNCore if it exists.\n+## - RCT_RNCORE_VERSION: **TEST ONLY** If set, it will override the version of RNCore to be used.\n+\n+class ReactNativeCoreUtils\n+    @@build_from_source = true\n+    @@react_native_path = \"\"\n+    @@react_native_version = \"\"\n+    @@use_nightly = false\n+\n+    ## Sets up wether ReactNative Core should be built from source or not.\n+    ## If RCT_USE_PREBUILT_RNCORE is set to 1 and the artifacts exists on Maven, it will\n+    ## not build from source. Otherwise, it will build from source.\n+    def self.setup_rncore(react_native_path, react_native_version)\n+        # We don't want setup to be called multiple times, so we check if the variables are already set.\n+        if @@react_native_version == \"\"\n+            rncore_log(\"Setting up ReactNativeCore...\")\n+            @@react_native_path = react_native_path\n+            @@react_native_version = ENV[\"RCT_RNCORE_VERSION\"] == nil ? react_native_version : ENV[\"RCT_RNCORE_VERSION\"]\n+\n+            if @@react_native_version.include? 'nightly'\n+                @@use_nightly = true\n+                if ENV[\"RCT_RNCORE_VERSION\"] == \"nightly\"\n+                    @@react_native_version = ReactNativeDependenciesUtils.get_nightly_npm_version()\n+                    rncore_log(\"Using nightly version from npm: #{@@react_native_version}\")\n+                else\n+                    rncore_log(\"Using nightly build #{@@react_native_version}\")\n+                end\n+            end\n+\n+            artifacts_exists = ENV[\"RCT_USE_PREBUILT_RNCORE\"] == \"1\" && (@@use_nightly ? nightly_artifact_exists(@@react_native_version) : release_artifact_exists(@@react_native_version))\n+            use_local_xcframework = ENV[\"RCT_USE_LOCAL_RNCORE\"] && File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+\n+            if ENV[\"RCT_USE_LOCAL_RNCORE\"]\n+                if !File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+                    abort(\"RCT_USE_LOCAL_RNCORE is set to #{ENV[\"RCT_USE_LOCAL_RNCORE\"]} but the file does not exist!\")\n+                end\n+            end\n+\n+            @@build_from_source = !use_local_xcframework && !artifacts_exists\n+\n+            if @@build_from_source && ENV[\"RCT_USE_LOCAL_RNCORE\"] && !use_local_xcframework\n+                rncore_log(\"No local xcframework found, reverting to building from source.\")\n+            end\n+            if @@build_from_source && ENV[\"RCT_USE_PREBUILT_RNCORE\"] && !artifacts_exists\n+                rncore_log(\"No prebuilt artifacts found, reverting to building from source.\")\n+            end\n+            rncore_log(\"Building from source: #{@@build_from_source}\")\n+            rncore_log(\"Source: #{self.resolve_podspec_source()}\")\n+        end\n+    end\n+\n+    def self.build_rncore_from_source()\n+        return @@build_from_source\n+    end\n+\n+    def self.resolve_podspec_source()\n+        if ENV[\"RCT_USE_LOCAL_RNCORE\"]\n+            if !File.exist?(ENV[\"RCT_USE_LOCAL_RNCORE\"])\n+                abort(\"RCT_USE_LOCAL_RNCORE is set to #{ENV[\"RCT_USE_LOCAL_RNCORE\"]} but the file does not exist in the current directory (#{Dir.pwd}).\")\n+            end\n+            rncore_log(\"Using local xcframework at #{ENV[\"RCT_USE_LOCAL_RNCORE\"]}\")\n+            return {:http => \"file://#{ENV[\"RCT_USE_LOCAL_RNCORE\"]}\" }\n+        end\n+\n+        if ENV[\"RCT_USE_PREBUILT_RNCORE\"] && ENV[\"RCT_USE_PREBUILT_RNCORE\"] == \"1\"\n+            if @@use_nightly\n+                rncore_log(\"Using nightly tarball\")\n+                begin\n+                    return self.podspec_source_download_prebuilt_nightly_tarball(@@react_native_version)\n+                rescue => e\n+                    rncore_log(\"Failed to download nightly tarball: #{e.message}\", :error)\n+                    return\n+                end\n+            end\n+\n+            begin\n+                return self.podspec_source_download_prebuild_release_tarball()\n+            rescue => e\n+                rncore_log(\"Failed to download release tarball: #{e.message}\", :error)\n+                return\n+            end\n+        end\n+\n+    end\n+\n+    def self.podspec_source_download_prebuild_release_tarball()\n+        # Warn if @@react_native_path is not set\n+        if @@react_native_path == \"\"\n+            rncore_log(\"react_native_path is not set\", :error)\n+            return\n+        end\n+\n+        # Warn if @@react_native_version is not set\n+        if @@react_native_version == \"\"\n+            rncore_log(\"react_native_version is not set\", :error)\n+            return\n+        end\n+\n+        if @@build_from_source\n+            return\n+        end\n+\n+        url = release_tarball_url(@@react_native_version, :debug)",
        "comment_created_at": "2025-06-19T10:02:46+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "Method says `download_prebuild_release_tarball`... should we call it `stable`?\r\n```suggestion\r\n        url = release_tarball_url(@@react_native_version, :release)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1989197375",
    "pr_number": 49812,
    "pr_file": "packages/react-native/scripts/cocoapods/rndependencies.rb",
    "created_at": "2025-03-11T12:51:33+00:00",
    "commented_code": "+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+require \"json\"\n+require 'net/http'\n+require 'rexml/document'\n+\n+require_relative './utils.rb'\n+\n+## There are two environment variables that is related to ReactNativeDependencies:\n+## - REACT_NATIVE_DEPS_BUILD_FROM_SOURCE: If set to 1, ReactNativeDependencies will be built from source.",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1989197375",
        "repo_full_name": "facebook/react-native",
        "pr_number": 49812,
        "pr_file": "packages/react-native/scripts/cocoapods/rndependencies.rb",
        "discussion_id": "1989197375",
        "commented_code": "@@ -0,0 +1,157 @@\n+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+require \"json\"\n+require 'net/http'\n+require 'rexml/document'\n+\n+require_relative './utils.rb'\n+\n+## There are two environment variables that is related to ReactNativeDependencies:\n+## - REACT_NATIVE_DEPS_BUILD_FROM_SOURCE: If set to 1, ReactNativeDependencies will be built from source.",
        "comment_created_at": "2025-03-11T12:51:33+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "The convention we are following is:\r\n- REACT_NATIVE is shortened to RCT\r\n- The default case, running just `bundle exec pod install` should not change. We want the dependecies to be an opt-in for now, not an opt out.\r\n\r\nI think we should use: `RCT_USE_DEP_PREBUILD` instead of `REACT_NATIVE_DEPS_BUILD_FROM_SOURCE`.",
        "pr_file_module": null
      }
    ]
  }
]