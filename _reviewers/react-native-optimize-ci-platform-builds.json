[
  {
    "discussion_id": "2108452481",
    "pr_number": 51595,
    "pr_file": "packages/react-native/scripts/ios-prebuild/swiftpackage.js",
    "created_at": "2025-05-27T07:45:15+00:00",
    "commented_code": "+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow\n+ * @format\n+ */\n+\n+const {createLogger} = require('./utils');\n+const {execSync} = require('child_process');\n+const fs = require('fs');\n+const glob = require('glob');\n+const path = require('path');\n+\n+const buildLog = createLogger('SPM');\n+\n+function buildSwiftPackage(\n+  rootFolder /*: string */,\n+  buildFolder /*: string */,\n+  buildType /*: 'debug' | 'release' */,\n+) /*: Array<string> */ {\n+  const outputFolder = path.join(buildFolder, 'output', 'spm', buildType);\n+  const buildPlatform = (platform /*:string*/) => {\n+    const buildCommand =\n+      `xcodebuild -scheme React -destination \"generic/platform=${platform}\" -derivedDataPath \"${outputFolder}\" ` +\n+      `-configuration \"${buildType}\" SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES OTHER_SWIFT_FLAGS=\"-no-verify-emitted-module-interface\"`;\n+    buildLog('Building Swift package for ' + 'debug');\n+    buildLog(buildCommand);\n+\n+    execSync(buildCommand, {\n+      cwd: rootFolder,\n+      stdio: 'inherit',\n+    });\n+  };\n+\n+  // TODO: Extend with platforms/targets\n+  buildPlatform('iOS simulator');\n+  buildPlatform('iOS');",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "2108452481",
        "repo_full_name": "facebook/react-native",
        "pr_number": 51595,
        "pr_file": "packages/react-native/scripts/ios-prebuild/swiftpackage.js",
        "discussion_id": "2108452481",
        "commented_code": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow\n+ * @format\n+ */\n+\n+const {createLogger} = require('./utils');\n+const {execSync} = require('child_process');\n+const fs = require('fs');\n+const glob = require('glob');\n+const path = require('path');\n+\n+const buildLog = createLogger('SPM');\n+\n+function buildSwiftPackage(\n+  rootFolder /*: string */,\n+  buildFolder /*: string */,\n+  buildType /*: 'debug' | 'release' */,\n+) /*: Array<string> */ {\n+  const outputFolder = path.join(buildFolder, 'output', 'spm', buildType);\n+  const buildPlatform = (platform /*:string*/) => {\n+    const buildCommand =\n+      `xcodebuild -scheme React -destination \"generic/platform=${platform}\" -derivedDataPath \"${outputFolder}\" ` +\n+      `-configuration \"${buildType}\" SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES OTHER_SWIFT_FLAGS=\"-no-verify-emitted-module-interface\"`;\n+    buildLog('Building Swift package for ' + 'debug');\n+    buildLog(buildCommand);\n+\n+    execSync(buildCommand, {\n+      cwd: rootFolder,\n+      stdio: 'inherit',\n+    });\n+  };\n+\n+  // TODO: Extend with platforms/targets\n+  buildPlatform('iOS simulator');\n+  buildPlatform('iOS');",
        "comment_created_at": "2025-05-27T07:45:15+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "we only need to add maccatalyst. We don't care about the others because they are OOT platform.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2108462189",
        "repo_full_name": "facebook/react-native",
        "pr_number": 51595,
        "pr_file": "packages/react-native/scripts/ios-prebuild/swiftpackage.js",
        "discussion_id": "2108452481",
        "commented_code": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow\n+ * @format\n+ */\n+\n+const {createLogger} = require('./utils');\n+const {execSync} = require('child_process');\n+const fs = require('fs');\n+const glob = require('glob');\n+const path = require('path');\n+\n+const buildLog = createLogger('SPM');\n+\n+function buildSwiftPackage(\n+  rootFolder /*: string */,\n+  buildFolder /*: string */,\n+  buildType /*: 'debug' | 'release' */,\n+) /*: Array<string> */ {\n+  const outputFolder = path.join(buildFolder, 'output', 'spm', buildType);\n+  const buildPlatform = (platform /*:string*/) => {\n+    const buildCommand =\n+      `xcodebuild -scheme React -destination \"generic/platform=${platform}\" -derivedDataPath \"${outputFolder}\" ` +\n+      `-configuration \"${buildType}\" SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES OTHER_SWIFT_FLAGS=\"-no-verify-emitted-module-interface\"`;\n+    buildLog('Building Swift package for ' + 'debug');\n+    buildLog(buildCommand);\n+\n+    execSync(buildCommand, {\n+      cwd: rootFolder,\n+      stdio: 'inherit',\n+    });\n+  };\n+\n+  // TODO: Extend with platforms/targets\n+  buildPlatform('iOS simulator');\n+  buildPlatform('iOS');",
        "comment_created_at": "2025-05-27T07:50:05+00:00",
        "comment_author": "chrfalch",
        "comment_body": "```suggestion\r\n  buildPlatform('iOS');\r\n  buildPlatform('macOS,variant=Mac Catalyst');\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2108462411",
        "repo_full_name": "facebook/react-native",
        "pr_number": 51595,
        "pr_file": "packages/react-native/scripts/ios-prebuild/swiftpackage.js",
        "discussion_id": "2108452481",
        "commented_code": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow\n+ * @format\n+ */\n+\n+const {createLogger} = require('./utils');\n+const {execSync} = require('child_process');\n+const fs = require('fs');\n+const glob = require('glob');\n+const path = require('path');\n+\n+const buildLog = createLogger('SPM');\n+\n+function buildSwiftPackage(\n+  rootFolder /*: string */,\n+  buildFolder /*: string */,\n+  buildType /*: 'debug' | 'release' */,\n+) /*: Array<string> */ {\n+  const outputFolder = path.join(buildFolder, 'output', 'spm', buildType);\n+  const buildPlatform = (platform /*:string*/) => {\n+    const buildCommand =\n+      `xcodebuild -scheme React -destination \"generic/platform=${platform}\" -derivedDataPath \"${outputFolder}\" ` +\n+      `-configuration \"${buildType}\" SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES OTHER_SWIFT_FLAGS=\"-no-verify-emitted-module-interface\"`;\n+    buildLog('Building Swift package for ' + 'debug');\n+    buildLog(buildCommand);\n+\n+    execSync(buildCommand, {\n+      cwd: rootFolder,\n+      stdio: 'inherit',\n+    });\n+  };\n+\n+  // TODO: Extend with platforms/targets\n+  buildPlatform('iOS simulator');\n+  buildPlatform('iOS');",
        "comment_created_at": "2025-05-27T07:50:11+00:00",
        "comment_author": "chrfalch",
        "comment_body": "Like this?",
        "pr_file_module": null
      },
      {
        "comment_id": "2108599502",
        "repo_full_name": "facebook/react-native",
        "pr_number": 51595,
        "pr_file": "packages/react-native/scripts/ios-prebuild/swiftpackage.js",
        "discussion_id": "2108452481",
        "commented_code": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow\n+ * @format\n+ */\n+\n+const {createLogger} = require('./utils');\n+const {execSync} = require('child_process');\n+const fs = require('fs');\n+const glob = require('glob');\n+const path = require('path');\n+\n+const buildLog = createLogger('SPM');\n+\n+function buildSwiftPackage(\n+  rootFolder /*: string */,\n+  buildFolder /*: string */,\n+  buildType /*: 'debug' | 'release' */,\n+) /*: Array<string> */ {\n+  const outputFolder = path.join(buildFolder, 'output', 'spm', buildType);\n+  const buildPlatform = (platform /*:string*/) => {\n+    const buildCommand =\n+      `xcodebuild -scheme React -destination \"generic/platform=${platform}\" -derivedDataPath \"${outputFolder}\" ` +\n+      `-configuration \"${buildType}\" SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES OTHER_SWIFT_FLAGS=\"-no-verify-emitted-module-interface\"`;\n+    buildLog('Building Swift package for ' + 'debug');\n+    buildLog(buildCommand);\n+\n+    execSync(buildCommand, {\n+      cwd: rootFolder,\n+      stdio: 'inherit',\n+    });\n+  };\n+\n+  // TODO: Extend with platforms/targets\n+  buildPlatform('iOS simulator');\n+  buildPlatform('iOS');",
        "comment_created_at": "2025-05-27T08:41:29+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "yep. But for building in CI, we still have to pass them as a separate param, so we can parallelize the build",
        "pr_file_module": null
      },
      {
        "comment_id": "2108615329",
        "repo_full_name": "facebook/react-native",
        "pr_number": 51595,
        "pr_file": "packages/react-native/scripts/ios-prebuild/swiftpackage.js",
        "discussion_id": "2108452481",
        "commented_code": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow\n+ * @format\n+ */\n+\n+const {createLogger} = require('./utils');\n+const {execSync} = require('child_process');\n+const fs = require('fs');\n+const glob = require('glob');\n+const path = require('path');\n+\n+const buildLog = createLogger('SPM');\n+\n+function buildSwiftPackage(\n+  rootFolder /*: string */,\n+  buildFolder /*: string */,\n+  buildType /*: 'debug' | 'release' */,\n+) /*: Array<string> */ {\n+  const outputFolder = path.join(buildFolder, 'output', 'spm', buildType);\n+  const buildPlatform = (platform /*:string*/) => {\n+    const buildCommand =\n+      `xcodebuild -scheme React -destination \"generic/platform=${platform}\" -derivedDataPath \"${outputFolder}\" ` +\n+      `-configuration \"${buildType}\" SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES OTHER_SWIFT_FLAGS=\"-no-verify-emitted-module-interface\"`;\n+    buildLog('Building Swift package for ' + 'debug');\n+    buildLog(buildCommand);\n+\n+    execSync(buildCommand, {\n+      cwd: rootFolder,\n+      stdio: 'inherit',\n+    });\n+  };\n+\n+  // TODO: Extend with platforms/targets\n+  buildPlatform('iOS simulator');\n+  buildPlatform('iOS');",
        "comment_created_at": "2025-05-27T08:48:33+00:00",
        "comment_author": "chrfalch",
        "comment_body": "It seems like my test project fails when adding building for Maccatalyst - I haven't had the time to investigate further. Would it be ok if we left the above todo for now and added support for this in another PR?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2066768269",
    "pr_number": 50766,
    "pr_file": "packages/react-native/scripts/ios-prebuild/cli.js",
    "created_at": "2025-04-29T15:00:55+00:00",
    "commented_code": "+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow\n+ * @format\n+ * @oncall react_native\n+ */\n+\n+const yargs = require('yargs');\n+\n+/*::\n+ */\n+\n+// CI can't use commas in cache keys, so 'macOS,variant=Mac Catalyst' was creating troubles\n+// This map that converts from platforms to valid Xcodebuild destinations.\n+const platformToDestination /*: $ReadOnly<{|[Platform]: Destination|}> */ = {\n+  ios: 'iOS',",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "2066768269",
        "repo_full_name": "facebook/react-native",
        "pr_number": 50766,
        "pr_file": "packages/react-native/scripts/ios-prebuild/cli.js",
        "discussion_id": "2066768269",
        "commented_code": "@@ -0,0 +1,111 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow\n+ * @format\n+ * @oncall react_native\n+ */\n+\n+const yargs = require('yargs');\n+\n+/*::\n+ */\n+\n+// CI can't use commas in cache keys, so 'macOS,variant=Mac Catalyst' was creating troubles\n+// This map that converts from platforms to valid Xcodebuild destinations.\n+const platformToDestination /*: $ReadOnly<{|[Platform]: Destination|}> */ = {\n+  ios: 'iOS',",
        "comment_created_at": "2025-04-29T15:00:55+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "we only need to build for ios, ios-simulator, mac catalyst. All the others are OOT platforms that have their own fork, so we can't really build for them.",
        "pr_file_module": null
      }
    ]
  }
]