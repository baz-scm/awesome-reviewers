[
  {
    "discussion_id": "2136584574",
    "pr_number": 47554,
    "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java",
    "created_at": "2025-06-09T22:14:38+00:00",
    "commented_code": "() -> {\n           String mainComponentName = getMainComponentName();\n           final Bundle launchOptions = composeLaunchOptions();\n+          if (ReactBuildConfig.IS_EDGE_TO_EDGE_ENABLED && mActivity != null) {\n+            WindowUtilKt.enableEdgeToEdge(mActivity.getWindow());",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "2136584574",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47554,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java",
        "discussion_id": "2136584574",
        "commented_code": "@@ -121,6 +123,9 @@ public void onCreate(Bundle savedInstanceState) {\n         () -> {\n           String mainComponentName = getMainComponentName();\n           final Bundle launchOptions = composeLaunchOptions();\n+          if (ReactBuildConfig.IS_EDGE_TO_EDGE_ENABLED && mActivity != null) {\n+            WindowUtilKt.enableEdgeToEdge(mActivity.getWindow());",
        "comment_created_at": "2025-06-09T22:14:38+00:00",
        "comment_author": "alanleedev",
        "comment_body": "@zoontek \r\nI know it probably is bit difficult to directly call this from here but have you considered using AndroidX [ComponentActivity.enableEdgeToEdge()](https://developer.android.com/reference/kotlin/androidx/activity/ComponentActivity#(androidx.activity.ComponentActivity).enableEdgeToEdge(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle)) as it also seems to have additional logic around handling status bar and navigation bar ([source code](https://cs.android.com/androidx/platform/frameworks/support/+/androidx-main:activity/activity/src/main/java/androidx/activity/EdgeToEdge.kt))?",
        "pr_file_module": null
      },
      {
        "comment_id": "2137218887",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47554,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java",
        "discussion_id": "2136584574",
        "commented_code": "@@ -121,6 +123,9 @@ public void onCreate(Bundle savedInstanceState) {\n         () -> {\n           String mainComponentName = getMainComponentName();\n           final Bundle launchOptions = composeLaunchOptions();\n+          if (ReactBuildConfig.IS_EDGE_TO_EDGE_ENABLED && mActivity != null) {\n+            WindowUtilKt.enableEdgeToEdge(mActivity.getWindow());",
        "comment_created_at": "2025-06-10T08:12:36+00:00",
        "comment_author": "zoontek",
        "comment_body": "That's would require migrating `Activity` to `ComponentActivity` in `ReactActivityDelegate` (and everywhere needed in the codebase), a bigger change. Are you good with this?\r\n\r\nAlso, as `enableEdgeToEdge` is not available on `Dialog`, `WindowUtilKt.enableEdgeToEdge` will still be needed for `Modal`. That's why I reused it.",
        "pr_file_module": null
      },
      {
        "comment_id": "2138988158",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47554,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/ReactActivityDelegate.java",
        "discussion_id": "2136584574",
        "commented_code": "@@ -121,6 +123,9 @@ public void onCreate(Bundle savedInstanceState) {\n         () -> {\n           String mainComponentName = getMainComponentName();\n           final Bundle launchOptions = composeLaunchOptions();\n+          if (ReactBuildConfig.IS_EDGE_TO_EDGE_ENABLED && mActivity != null) {\n+            WindowUtilKt.enableEdgeToEdge(mActivity.getWindow());",
        "comment_created_at": "2025-06-11T01:08:12+00:00",
        "comment_author": "alanleedev",
        "comment_body": "Seems like you already answer this here; https://github.com/facebook/react-native/pull/47554#issuecomment-2473017391",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1831390804",
    "pr_number": 45187,
    "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollViewManager.java",
    "created_at": "2024-11-06T16:47:32+00:00",
    "commented_code": "scrollView.abortAnimation();\n     if (data.mAnimated) {\n       scrollView.reactSmoothScrollTo(data.mDestX, data.mDestY);\n+      scrollView.handleSmoothScrollMomentumEvents();\n     } else {\n       scrollView.scrollTo(data.mDestX, data.mDestY);\n+      ReactScrollViewHelper.emitScrollMomentumEndEvent(scrollView);",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1831390804",
        "repo_full_name": "facebook/react-native",
        "pr_number": 45187,
        "pr_file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/views/scroll/ReactHorizontalScrollViewManager.java",
        "discussion_id": "1831390804",
        "commented_code": "@@ -214,8 +214,10 @@ public void scrollTo(\n     scrollView.abortAnimation();\n     if (data.mAnimated) {\n       scrollView.reactSmoothScrollTo(data.mDestX, data.mDestY);\n+      scrollView.handleSmoothScrollMomentumEvents();\n     } else {\n       scrollView.scrollTo(data.mDestX, data.mDestY);\n+      ReactScrollViewHelper.emitScrollMomentumEndEvent(scrollView);",
        "comment_created_at": "2024-11-06T16:47:32+00:00",
        "comment_author": "Abbondanzo",
        "comment_body": "While iOS does this for non-animated views, this is a bug on the iOS side that we should avoid introducing into Android for the sake of parity. The `onMomentumScrollEnd` event should only fire after `onMomentumScrollBegin`, driven by a user-activated fling or animated `scrollTo`",
        "pr_file_module": null
      }
    ]
  }
]