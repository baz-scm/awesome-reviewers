[
  {
    "discussion_id": "1848448523",
    "pr_number": 47671,
    "pr_file": "packages/react-native/ReactCommon/react/renderer/components/textinput/BaseTextInputProps.cpp",
    "created_at": "2024-11-19T14:17:24+00:00",
    "commented_code": "rawProps,\n           \"multiline\",\n           sourceProps.multiline,\n-          {false})) {}\n+          {false})),\n+      disableKeyboardShortcuts(convertRawProp(\n+          context,\n+          rawProps,\n+          \"disableKeyboardShortcuts\",\n+          sourceProps.disableKeyboardShortcuts,\n+          {})) {}",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1848448523",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47671,
        "pr_file": "packages/react-native/ReactCommon/react/renderer/components/textinput/BaseTextInputProps.cpp",
        "discussion_id": "1848448523",
        "commented_code": "@@ -126,7 +126,13 @@ BaseTextInputProps::BaseTextInputProps(\n           rawProps,\n           \"multiline\",\n           sourceProps.multiline,\n-          {false})) {}\n+          {false})),\n+      disableKeyboardShortcuts(convertRawProp(\n+          context,\n+          rawProps,\n+          \"disableKeyboardShortcuts\",\n+          sourceProps.disableKeyboardShortcuts,\n+          {})) {}",
        "comment_created_at": "2024-11-19T14:17:24+00:00",
        "comment_author": "okwasniewski",
        "comment_body": "nit: it's better to set the default value explicitly ",
        "pr_file_module": null
      },
      {
        "comment_id": "1848697089",
        "repo_full_name": "facebook/react-native",
        "pr_number": 47671,
        "pr_file": "packages/react-native/ReactCommon/react/renderer/components/textinput/BaseTextInputProps.cpp",
        "discussion_id": "1848448523",
        "commented_code": "@@ -126,7 +126,13 @@ BaseTextInputProps::BaseTextInputProps(\n           rawProps,\n           \"multiline\",\n           sourceProps.multiline,\n-          {false})) {}\n+          {false})),\n+      disableKeyboardShortcuts(convertRawProp(\n+          context,\n+          rawProps,\n+          \"disableKeyboardShortcuts\",\n+          sourceProps.disableKeyboardShortcuts,\n+          {})) {}",
        "comment_created_at": "2024-11-19T16:38:37+00:00",
        "comment_author": "rezkiy37",
        "comment_body": "Done - 5041880c6ca2264ef3362bdcd5e4b23be6403fcd.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1879837663",
    "pr_number": 48202,
    "pr_file": "packages/react-native/ReactCommon/react/renderer/core/RawProps.cpp",
    "created_at": "2024-12-11T10:49:23+00:00",
    "commented_code": "* The support for explicit conversion to `folly::dynamic` is deprecated and\n  * will be removed as soon Android implementation does not need it.\n  */\n-RawProps::operator folly::dynamic() const noexcept {\n+RawProps::operator folly::dynamic() const {\n+  return toDynamic();\n+}\n+\n+/*\n+ * Deprecated. Do not use.\n+ * The support for explicit conversion to `folly::dynamic` is deprecated and\n+ * will be removed as soon Android implementation does not need it.\n+ */\n+folly::dynamic RawProps::toDynamic(\n+    const std::function<bool(const std::string&)>& filterObjectKeys) const {\n   switch (mode_) {\n     case Mode::Empty:\n       return folly::dynamic::object();\n-    case Mode::JSI:\n-      return jsi::dynamicFromValue(\n-          *runtime_, value_, ignoreYogaStyleProps_ ? isYogaStyleProp : nullptr);\n+    case Mode::JSI: {\n+      const std::function<bool(const std::string&)> propFilterFunction =\n+          [&](const std::string& key) {\n+            if (ignoreYogaStyleProps_ && isYogaStyleProp(key)) {\n+              return false;\n+            }\n+            if (filterObjectKeys) {\n+              return filterObjectKeys(key);\n+            }\n+            return true;\n+          };\n+\n+      const std::function<bool(const std::string&)> filterFunctionOrNull =\n+          ignoreYogaStyleProps_ || filterObjectKeys != nullptr\n+          ? propFilterFunction\n+          : nullptr;\n+      return jsi::dynamicFromValue(*runtime_, value_, filterFunctionOrNull);",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1879837663",
        "repo_full_name": "facebook/react-native",
        "pr_number": 48202,
        "pr_file": "packages/react-native/ReactCommon/react/renderer/core/RawProps.cpp",
        "discussion_id": "1879837663",
        "commented_code": "@@ -172,13 +172,38 @@ void RawProps::parse(const RawPropsParser& parser) noexcept {\n  * The support for explicit conversion to `folly::dynamic` is deprecated and\n  * will be removed as soon Android implementation does not need it.\n  */\n-RawProps::operator folly::dynamic() const noexcept {\n+RawProps::operator folly::dynamic() const {\n+  return toDynamic();\n+}\n+\n+/*\n+ * Deprecated. Do not use.\n+ * The support for explicit conversion to `folly::dynamic` is deprecated and\n+ * will be removed as soon Android implementation does not need it.\n+ */\n+folly::dynamic RawProps::toDynamic(\n+    const std::function<bool(const std::string&)>& filterObjectKeys) const {\n   switch (mode_) {\n     case Mode::Empty:\n       return folly::dynamic::object();\n-    case Mode::JSI:\n-      return jsi::dynamicFromValue(\n-          *runtime_, value_, ignoreYogaStyleProps_ ? isYogaStyleProp : nullptr);\n+    case Mode::JSI: {\n+      const std::function<bool(const std::string&)> propFilterFunction =\n+          [&](const std::string& key) {\n+            if (ignoreYogaStyleProps_ && isYogaStyleProp(key)) {\n+              return false;\n+            }\n+            if (filterObjectKeys) {\n+              return filterObjectKeys(key);\n+            }\n+            return true;\n+          };\n+\n+      const std::function<bool(const std::string&)> filterFunctionOrNull =\n+          ignoreYogaStyleProps_ || filterObjectKeys != nullptr\n+          ? propFilterFunction\n+          : nullptr;\n+      return jsi::dynamicFromValue(*runtime_, value_, filterFunctionOrNull);",
        "comment_created_at": "2024-12-11T10:49:23+00:00",
        "comment_author": "mrousavy",
        "comment_body": "```suggestion\r\n      if (ignoreYogaStyleProps_ || filterObjectKeys != nullptr) {\r\n        // We need to filter props\r\n        return jsi::dynamicFromValue(*runtime_, value_, [&](const std::string& key) {\r\n          if (ignoreYogaStyleProps_ && isYogaStyleProp(key)) {\r\n            return false;\r\n          }\r\n          if (filterObjectKeys) {\r\n            return filterObjectKeys(key);\r\n          }\r\n          return true;\r\n        });\r\n      } else {\r\n        // We don't need to filter, just include all props by default\r\n        return jsi::dynamicFromValue(*runtime_, value_, nullptr);\r\n      }\r\n```\r\n\r\nsomething like this might be clearer intent?",
        "pr_file_module": null
      }
    ]
  }
]