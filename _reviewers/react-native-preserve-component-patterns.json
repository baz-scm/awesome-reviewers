[
  {
    "discussion_id": "2069235037",
    "pr_number": 51023,
    "pr_file": "packages/react-native/Libraries/Components/View/View.js",
    "created_at": "2025-04-30T18:28:16+00:00",
    "commented_code": "*\n  * @see https://reactnative.dev/docs/view\n  */\n-const View: component(\n-  ref?: React.RefSetter<React.ElementRef<typeof ViewNativeComponent>>,\n-  ...props: ViewProps\n-) = React.forwardRef(\n-  (\n-    {\n-      accessibilityElementsHidden,\n-      accessibilityLabel,\n-      accessibilityLabelledBy,\n-      accessibilityLiveRegion,\n-      accessibilityState,\n-      accessibilityValue,\n-      'aria-busy': ariaBusy,\n-      'aria-checked': ariaChecked,\n-      'aria-disabled': ariaDisabled,\n-      'aria-expanded': ariaExpanded,\n-      'aria-hidden': ariaHidden,\n-      'aria-label': ariaLabel,\n-      'aria-labelledby': ariaLabelledBy,\n-      'aria-live': ariaLive,\n-      'aria-selected': ariaSelected,\n-      'aria-valuemax': ariaValueMax,\n-      'aria-valuemin': ariaValueMin,\n-      'aria-valuenow': ariaValueNow,\n-      'aria-valuetext': ariaValueText,\n-      focusable,\n-      id,\n-      importantForAccessibility,\n-      nativeID,\n-      tabIndex,\n-      ...otherProps\n-    }: ViewProps,\n-    forwardedRef,\n-  ) => {\n-    const hasTextAncestor = React.useContext(TextAncestor);\n-    const _accessibilityLabelledBy =\n-      ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n+function View({\n+  accessibilityElementsHidden,\n+  accessibilityLabel,\n+  accessibilityLabelledBy,\n+  accessibilityLiveRegion,\n+  accessibilityState,\n+  accessibilityValue,\n+  'aria-busy': ariaBusy,\n+  'aria-checked': ariaChecked,\n+  'aria-disabled': ariaDisabled,\n+  'aria-expanded': ariaExpanded,\n+  'aria-hidden': ariaHidden,\n+  'aria-label': ariaLabel,\n+  'aria-labelledby': ariaLabelledBy,\n+  'aria-live': ariaLive,\n+  'aria-selected': ariaSelected,\n+  'aria-valuemax': ariaValueMax,\n+  'aria-valuemin': ariaValueMin,\n+  'aria-valuenow': ariaValueNow,\n+  'aria-valuetext': ariaValueText,\n+  focusable,\n+  id,\n+  importantForAccessibility,\n+  nativeID,\n+  tabIndex,\n+  ...otherProps\n+}: Props): React.Node {\n+  const hasTextAncestor = React.use(TextAncestor);\n+  const _accessibilityLabelledBy =\n+    ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n \n-    const _accessibilityState =\n-      accessibilityState != null ||\n-      ariaBusy != null ||\n-      ariaChecked != null ||\n-      ariaDisabled != null ||\n-      ariaExpanded != null ||\n-      ariaSelected != null\n-        ? {\n-            busy: ariaBusy ?? accessibilityState?.busy,\n-            checked: ariaChecked ?? accessibilityState?.checked,\n-            disabled: ariaDisabled ?? accessibilityState?.disabled,\n-            expanded: ariaExpanded ?? accessibilityState?.expanded,\n-            selected: ariaSelected ?? accessibilityState?.selected,\n-          }\n-        : undefined;\n-\n-    const _accessibilityValue =\n-      accessibilityValue != null ||\n-      ariaValueMax != null ||\n-      ariaValueMin != null ||\n-      ariaValueNow != null ||\n-      ariaValueText != null\n-        ? {\n-            max: ariaValueMax ?? accessibilityValue?.max,\n-            min: ariaValueMin ?? accessibilityValue?.min,\n-            now: ariaValueNow ?? accessibilityValue?.now,\n-            text: ariaValueText ?? accessibilityValue?.text,\n-          }\n-        : undefined;\n-\n-    const actualView = (\n-      <ViewNativeComponent\n-        {...otherProps}\n-        accessibilityLiveRegion={\n-          ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n+  const _accessibilityState =\n+    accessibilityState != null ||\n+    ariaBusy != null ||\n+    ariaChecked != null ||\n+    ariaDisabled != null ||\n+    ariaExpanded != null ||\n+    ariaSelected != null\n+      ? {\n+          busy: ariaBusy ?? accessibilityState?.busy,\n+          checked: ariaChecked ?? accessibilityState?.checked,\n+          disabled: ariaDisabled ?? accessibilityState?.disabled,\n+          expanded: ariaExpanded ?? accessibilityState?.expanded,\n+          selected: ariaSelected ?? accessibilityState?.selected,\n         }\n-        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n-        focusable={tabIndex !== undefined ? !tabIndex : focusable}\n-        accessibilityState={_accessibilityState}\n-        accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n-        accessibilityLabelledBy={_accessibilityLabelledBy}\n-        accessibilityValue={_accessibilityValue}\n-        importantForAccessibility={\n-          ariaHidden === true\n-            ? 'no-hide-descendants'\n-            : importantForAccessibility\n+      : undefined;\n+\n+  const _accessibilityValue =\n+    accessibilityValue != null ||\n+    ariaValueMax != null ||\n+    ariaValueMin != null ||\n+    ariaValueNow != null ||\n+    ariaValueText != null\n+      ? {\n+          max: ariaValueMax ?? accessibilityValue?.max,\n+          min: ariaValueMin ?? accessibilityValue?.min,\n+          now: ariaValueNow ?? accessibilityValue?.now,\n+          text: ariaValueText ?? accessibilityValue?.text,\n         }\n-        nativeID={id ?? nativeID}\n-        ref={forwardedRef}\n-      />\n-    );\n+      : undefined;\n \n-    if (hasTextAncestor) {\n-      return (\n-        <TextAncestor.Provider value={false}>\n-          {actualView}\n-        </TextAncestor.Provider>\n-      );\n-    }\n+  const actualView = (\n+    <ViewNativeComponent\n+      {...otherProps}\n+      accessibilityLiveRegion={\n+        ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n+      }\n+      accessibilityLabel={ariaLabel ?? accessibilityLabel}\n+      focusable={tabIndex !== undefined ? !tabIndex : focusable}\n+      accessibilityState={_accessibilityState}\n+      accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n+      accessibilityLabelledBy={_accessibilityLabelledBy}\n+      accessibilityValue={_accessibilityValue}\n+      importantForAccessibility={\n+        ariaHidden === true ? 'no-hide-descendants' : importantForAccessibility\n+      }\n+      nativeID={id ?? nativeID}\n+    />\n+  );\n \n-    return actualView;\n-  },\n-);\n+  if (hasTextAncestor) {\n+    return <TextAncestor value={false}>{actualView}</TextAncestor>;\n+  }\n \n-View.displayName = 'View';\n+  return actualView;\n+}\n \n export default View;",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "2069235037",
        "repo_full_name": "facebook/react-native",
        "pr_number": 51023,
        "pr_file": "packages/react-native/Libraries/Components/View/View.js",
        "discussion_id": "2069235037",
        "commented_code": "@@ -23,108 +26,91 @@ export type Props = ViewProps;\n  *\n  * @see https://reactnative.dev/docs/view\n  */\n-const View: component(\n-  ref?: React.RefSetter<React.ElementRef<typeof ViewNativeComponent>>,\n-  ...props: ViewProps\n-) = React.forwardRef(\n-  (\n-    {\n-      accessibilityElementsHidden,\n-      accessibilityLabel,\n-      accessibilityLabelledBy,\n-      accessibilityLiveRegion,\n-      accessibilityState,\n-      accessibilityValue,\n-      'aria-busy': ariaBusy,\n-      'aria-checked': ariaChecked,\n-      'aria-disabled': ariaDisabled,\n-      'aria-expanded': ariaExpanded,\n-      'aria-hidden': ariaHidden,\n-      'aria-label': ariaLabel,\n-      'aria-labelledby': ariaLabelledBy,\n-      'aria-live': ariaLive,\n-      'aria-selected': ariaSelected,\n-      'aria-valuemax': ariaValueMax,\n-      'aria-valuemin': ariaValueMin,\n-      'aria-valuenow': ariaValueNow,\n-      'aria-valuetext': ariaValueText,\n-      focusable,\n-      id,\n-      importantForAccessibility,\n-      nativeID,\n-      tabIndex,\n-      ...otherProps\n-    }: ViewProps,\n-    forwardedRef,\n-  ) => {\n-    const hasTextAncestor = React.useContext(TextAncestor);\n-    const _accessibilityLabelledBy =\n-      ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n+function View({\n+  accessibilityElementsHidden,\n+  accessibilityLabel,\n+  accessibilityLabelledBy,\n+  accessibilityLiveRegion,\n+  accessibilityState,\n+  accessibilityValue,\n+  'aria-busy': ariaBusy,\n+  'aria-checked': ariaChecked,\n+  'aria-disabled': ariaDisabled,\n+  'aria-expanded': ariaExpanded,\n+  'aria-hidden': ariaHidden,\n+  'aria-label': ariaLabel,\n+  'aria-labelledby': ariaLabelledBy,\n+  'aria-live': ariaLive,\n+  'aria-selected': ariaSelected,\n+  'aria-valuemax': ariaValueMax,\n+  'aria-valuemin': ariaValueMin,\n+  'aria-valuenow': ariaValueNow,\n+  'aria-valuetext': ariaValueText,\n+  focusable,\n+  id,\n+  importantForAccessibility,\n+  nativeID,\n+  tabIndex,\n+  ...otherProps\n+}: Props): React.Node {\n+  const hasTextAncestor = React.use(TextAncestor);\n+  const _accessibilityLabelledBy =\n+    ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n \n-    const _accessibilityState =\n-      accessibilityState != null ||\n-      ariaBusy != null ||\n-      ariaChecked != null ||\n-      ariaDisabled != null ||\n-      ariaExpanded != null ||\n-      ariaSelected != null\n-        ? {\n-            busy: ariaBusy ?? accessibilityState?.busy,\n-            checked: ariaChecked ?? accessibilityState?.checked,\n-            disabled: ariaDisabled ?? accessibilityState?.disabled,\n-            expanded: ariaExpanded ?? accessibilityState?.expanded,\n-            selected: ariaSelected ?? accessibilityState?.selected,\n-          }\n-        : undefined;\n-\n-    const _accessibilityValue =\n-      accessibilityValue != null ||\n-      ariaValueMax != null ||\n-      ariaValueMin != null ||\n-      ariaValueNow != null ||\n-      ariaValueText != null\n-        ? {\n-            max: ariaValueMax ?? accessibilityValue?.max,\n-            min: ariaValueMin ?? accessibilityValue?.min,\n-            now: ariaValueNow ?? accessibilityValue?.now,\n-            text: ariaValueText ?? accessibilityValue?.text,\n-          }\n-        : undefined;\n-\n-    const actualView = (\n-      <ViewNativeComponent\n-        {...otherProps}\n-        accessibilityLiveRegion={\n-          ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n+  const _accessibilityState =\n+    accessibilityState != null ||\n+    ariaBusy != null ||\n+    ariaChecked != null ||\n+    ariaDisabled != null ||\n+    ariaExpanded != null ||\n+    ariaSelected != null\n+      ? {\n+          busy: ariaBusy ?? accessibilityState?.busy,\n+          checked: ariaChecked ?? accessibilityState?.checked,\n+          disabled: ariaDisabled ?? accessibilityState?.disabled,\n+          expanded: ariaExpanded ?? accessibilityState?.expanded,\n+          selected: ariaSelected ?? accessibilityState?.selected,\n         }\n-        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n-        focusable={tabIndex !== undefined ? !tabIndex : focusable}\n-        accessibilityState={_accessibilityState}\n-        accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n-        accessibilityLabelledBy={_accessibilityLabelledBy}\n-        accessibilityValue={_accessibilityValue}\n-        importantForAccessibility={\n-          ariaHidden === true\n-            ? 'no-hide-descendants'\n-            : importantForAccessibility\n+      : undefined;\n+\n+  const _accessibilityValue =\n+    accessibilityValue != null ||\n+    ariaValueMax != null ||\n+    ariaValueMin != null ||\n+    ariaValueNow != null ||\n+    ariaValueText != null\n+      ? {\n+          max: ariaValueMax ?? accessibilityValue?.max,\n+          min: ariaValueMin ?? accessibilityValue?.min,\n+          now: ariaValueNow ?? accessibilityValue?.now,\n+          text: ariaValueText ?? accessibilityValue?.text,\n         }\n-        nativeID={id ?? nativeID}\n-        ref={forwardedRef}\n-      />\n-    );\n+      : undefined;\n \n-    if (hasTextAncestor) {\n-      return (\n-        <TextAncestor.Provider value={false}>\n-          {actualView}\n-        </TextAncestor.Provider>\n-      );\n-    }\n+  const actualView = (\n+    <ViewNativeComponent\n+      {...otherProps}\n+      accessibilityLiveRegion={\n+        ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n+      }\n+      accessibilityLabel={ariaLabel ?? accessibilityLabel}\n+      focusable={tabIndex !== undefined ? !tabIndex : focusable}\n+      accessibilityState={_accessibilityState}\n+      accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n+      accessibilityLabelledBy={_accessibilityLabelledBy}\n+      accessibilityValue={_accessibilityValue}\n+      importantForAccessibility={\n+        ariaHidden === true ? 'no-hide-descendants' : importantForAccessibility\n+      }\n+      nativeID={id ?? nativeID}\n+    />\n+  );\n \n-    return actualView;\n-  },\n-);\n+  if (hasTextAncestor) {\n+    return <TextAncestor value={false}>{actualView}</TextAncestor>;\n+  }\n \n-View.displayName = 'View';\n+  return actualView;\n+}\n \n export default View;",
        "comment_created_at": "2025-04-30T18:28:16+00:00",
        "comment_author": "yungsters",
        "comment_body": "You probably still want to preserve the `component` type.\r\n\r\n```suggestion\r\nexport default View as component(\r\n  ref?: React.RefSetter<React.ElementRef<typeof ViewNativeComponent>>,\r\n  ...props: ViewProps\r\n);\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1586296701",
    "pr_number": 43303,
    "pr_file": "packages/react-native/Libraries/Components/TextInput/InputAccessoryView.js",
    "created_at": "2024-05-01T13:28:59+00:00",
    "commented_code": "style={[props.style, styles.container]}\n         nativeID={props.nativeID}\n         backgroundColor={props.backgroundColor}>\n-        {props.children}\n+        <View style={{width}}>\n+          <SafeAreaView style={styles.safeAreaView}>",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1586296701",
        "repo_full_name": "facebook/react-native",
        "pr_number": 43303,
        "pr_file": "packages/react-native/Libraries/Components/TextInput/InputAccessoryView.js",
        "discussion_id": "1586296701",
        "commented_code": "@@ -96,7 +101,11 @@ const InputAccessoryView: React.AbstractComponent<Props> = (props: Props) => {\n         style={[props.style, styles.container]}\n         nativeID={props.nativeID}\n         backgroundColor={props.backgroundColor}>\n-        {props.children}\n+        <View style={{width}}>\n+          <SafeAreaView style={styles.safeAreaView}>",
        "comment_created_at": "2024-05-01T13:28:59+00:00",
        "comment_author": "cipolleschi",
        "comment_body": "shouldn't these two be inverted? or, putting it in another way, can `SafeAreView` work as `View` (and we can remove one indentation level)?",
        "pr_file_module": null
      },
      {
        "comment_id": "1586784591",
        "repo_full_name": "facebook/react-native",
        "pr_number": 43303,
        "pr_file": "packages/react-native/Libraries/Components/TextInput/InputAccessoryView.js",
        "discussion_id": "1586296701",
        "commented_code": "@@ -96,7 +101,11 @@ const InputAccessoryView: React.AbstractComponent<Props> = (props: Props) => {\n         style={[props.style, styles.container]}\n         nativeID={props.nativeID}\n         backgroundColor={props.backgroundColor}>\n-        {props.children}\n+        <View style={{width}}>\n+          <SafeAreaView style={styles.safeAreaView}>",
        "comment_created_at": "2024-05-01T20:21:51+00:00",
        "comment_author": "mauriciomeirelles",
        "comment_body": "Yeah, makes sense! I just pushed a fix adding the width to the SafeArea itself and changed the commit message / PR title to something that matches what the PR does now.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "780631853",
    "pr_number": 32853,
    "pr_file": "Libraries/LogBox/UI/LogBoxInspectorFooter.js",
    "created_at": "2022-01-08T04:47:23+00:00",
    "commented_code": "function LogBoxInspectorFooter(props: Props): React.Node {\n   if (props.level === 'syntax') {\n     return (\n-      <View style={styles.root}>\n+      <SafeAreaView style={styles.root}>\n         <View style={styles.button}>\n           <Text style={styles.syntaxErrorText}>\n             This error cannot be dismissed.\n           </Text>\n         </View>\n-      </View>\n+      </SafeAreaView>\n     );\n   }\n \n   return (\n-    <View style={styles.root}>\n+    <SafeAreaView style={styles.root}>",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "780631853",
        "repo_full_name": "facebook/react-native",
        "pr_number": 32853,
        "pr_file": "Libraries/LogBox/UI/LogBoxInspectorFooter.js",
        "discussion_id": "780631853",
        "commented_code": "@@ -27,21 +27,21 @@ type Props = $ReadOnly<{|\n function LogBoxInspectorFooter(props: Props): React.Node {\n   if (props.level === 'syntax') {\n     return (\n-      <View style={styles.root}>\n+      <SafeAreaView style={styles.root}>\n         <View style={styles.button}>\n           <Text style={styles.syntaxErrorText}>\n             This error cannot be dismissed.\n           </Text>\n         </View>\n-      </View>\n+      </SafeAreaView>\n     );\n   }\n \n   return (\n-    <View style={styles.root}>\n+    <SafeAreaView style={styles.root}>",
        "comment_created_at": "2022-01-08T04:47:23+00:00",
        "comment_author": "ken0nek",
        "comment_body": "Comment for isIPhoneX\r\n\r\n>      // Note:\r\n>      // This prop is deprecated and will be removed in a future release.\r\n>      // Please use this only for a quick and temporary solution.\r\n>      // Use <SafeAreaView> instead.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1930749053",
    "pr_number": 48522,
    "pr_file": "packages/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js",
    "created_at": "2025-01-27T15:47:16+00:00",
    "commented_code": "}>;\n \n class TouchableNativeFeedback extends React.Component<Props, State> {\n+  hostRef: {current: React.ElementRef<typeof View> | null, ...};",
    "repo_full_name": "facebook/react-native",
    "discussion_comments": [
      {
        "comment_id": "1930749053",
        "repo_full_name": "facebook/react-native",
        "pr_number": 48522,
        "pr_file": "packages/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.js",
        "discussion_id": "1930749053",
        "commented_code": "@@ -96,6 +95,13 @@ type State = $ReadOnly<{\n }>;\n \n class TouchableNativeFeedback extends React.Component<Props, State> {\n+  hostRef: {current: React.ElementRef<typeof View> | null, ...};",
        "comment_created_at": "2025-01-27T15:47:16+00:00",
        "comment_author": "Abbondanzo",
        "comment_body": "This approach does not allow you to pass a ref from a parent via prop. Could you make changes to allow a ref to forward and merge these refs together? `TouchableOpacity` has a small example. Also, could you make these changes with `TouchableNativeFeedback.macos` as well?",
        "pr_file_module": null
      }
    ]
  }
]