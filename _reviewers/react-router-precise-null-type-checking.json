[
  {
    "discussion_id": "2223244348",
    "pr_number": 14043,
    "pr_file": "packages/react-router/lib/router/utils.ts",
    "created_at": "2025-07-22T16:58:58+00:00",
    "commented_code": "export function generatePath<Path extends string>(\n   originalPath: Path,\n   params: {\n-    [key in PathParam<Path>]: string | null;\n+    [key in RequiredPathParam<Path>]: string;\n+  } & {\n+    [key in OptionalPathParam<Path>]?: string | null | undefined;",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "2223244348",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 14043,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "2223244348",
        "commented_code": "@@ -1114,7 +1171,9 @@ function matchRouteBranch<\n export function generatePath<Path extends string>(\n   originalPath: Path,\n   params: {\n-    [key in PathParam<Path>]: string | null;\n+    [key in RequiredPathParam<Path>]: string;\n+  } & {\n+    [key in OptionalPathParam<Path>]?: string | null | undefined;",
        "comment_created_at": "2025-07-22T16:58:58+00:00",
        "comment_author": "brophdawg11",
        "comment_body": "Adjust types based on whether the param is required/optional",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1878863490",
    "pr_number": 12515,
    "pr_file": "packages/react-router/lib/router/utils.ts",
    "created_at": "2024-12-10T21:12:17+00:00",
    "commented_code": "interface DataFunctionArgs<Context> {\n   request: Request;\n   params: Params;\n-  context?: Context;\n+  context: Context;",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "1878863490",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12515,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "1878863490",
        "commented_code": "@@ -118,19 +125,19 @@ export type Submission =\n interface DataFunctionArgs<Context> {\n   request: Request;\n   params: Params;\n-  context?: Context;\n+  context: Context;",
        "comment_created_at": "2024-12-10T21:12:17+00:00",
        "comment_author": "brophdawg11",
        "comment_body": "No longer optional - still maintains a default type of `any` though",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1649400025",
    "pr_number": 11708,
    "pr_file": "packages/react-router/lib/router/define-route.ts",
    "created_at": "2024-06-21T20:26:03+00:00",
    "commented_code": "& {[K in Param as K extends `${infer P}?` ? P : never]?: string}\n >\n \n-type IsDefined<T> = undefined extends T ? false : true;\n+type IsDefined<T> = Equal<T, undefined> extends true ? false : true;",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "1649400025",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 11708,
        "pr_file": "packages/react-router/lib/router/define-route.ts",
        "discussion_id": "1649400025",
        "commented_code": "@@ -66,7 +64,7 @@ type Params<Param extends string> = Pretty<\n   & {[K in Param as K extends `${infer P}?` ? P : never]?: string}\n >\n \n-type IsDefined<T> = undefined extends T ? false : true;\n+type IsDefined<T> = Equal<T, undefined> extends true ? false : true;",
        "comment_created_at": "2024-06-21T20:26:03+00:00",
        "comment_author": "pcattori",
        "comment_body": "Before we checked if `undefined` extended `T`, which is true for unions containing `undefined`. Now we check if `T` is _exactly_ `undefined`. This works since we now default all of the data types in `defineRoute` and `defineRootRoute` generics to be `undefined` (`Data | undefined = undefined`)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1649402470",
    "pr_number": 11708,
    "pr_file": "packages/react-router/lib/router/define-route.ts",
    "created_at": "2024-06-21T20:29:24+00:00",
    "commented_code": "ClientLoaderHydrate extends boolean,\n   HydrateFallback,\n > = Awaited<\n-  [IsDefined<HydrateFallback>, ClientLoaderHydrate]  extends [true, true] ?\n+  [undefined extends HydrateFallback ? false : true, ClientLoaderHydrate]  extends [true, true] ?",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "1649402470",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 11708,
        "pr_file": "packages/react-router/lib/router/define-route.ts",
        "discussion_id": "1649402470",
        "commented_code": "@@ -75,13 +73,13 @@ type _LoaderData<\n   ClientLoaderHydrate extends boolean,\n   HydrateFallback,\n > = Awaited<\n-  [IsDefined<HydrateFallback>, ClientLoaderHydrate]  extends [true, true] ?\n+  [undefined extends HydrateFallback ? false : true, ClientLoaderHydrate]  extends [true, true] ?",
        "comment_created_at": "2024-06-21T20:29:24+00:00",
        "comment_author": "pcattori",
        "comment_body": "Unlike for `Data` types (e.g. `ServerLoaderData`), its correct to check for `undefined extends` for `HydrateFallback` since `HydrateFallback` is a top-level value of `defineRoute` whereas the things like `ServerLoaderData` are inferred from the return type of a top-level value like `serverLoader`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1649403175",
    "pr_number": 11708,
    "pr_file": "packages/react-router/lib/router/define-route.ts",
    "created_at": "2024-06-21T20:30:25+00:00",
    "commented_code": "ClientLoaderHydrate extends boolean,\n   HydrateFallback,\n > = Awaited<\n-  [IsDefined<HydrateFallback>, ClientLoaderHydrate]  extends [true, true] ?\n+  [undefined extends HydrateFallback ? false : true, ClientLoaderHydrate]  extends [true, true] ?\n     IsDefined<ClientLoaderData> extends true ? ClientLoaderData :\n     undefined\n   :\n   [IsDefined<ClientLoaderData>, IsDefined<ServerLoaderData>] extends [true, true] ? ServerLoaderData | ClientLoaderData :\n   IsDefined<ClientLoaderData> extends true ?\n-    IsDefined<ClientLoaderHydrate> extends true ? ClientLoaderData :\n+    ClientLoaderHydrate extends true ? ClientLoaderData :",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "1649403175",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 11708,
        "pr_file": "packages/react-router/lib/router/define-route.ts",
        "discussion_id": "1649403175",
        "commented_code": "@@ -75,13 +73,13 @@ type _LoaderData<\n   ClientLoaderHydrate extends boolean,\n   HydrateFallback,\n > = Awaited<\n-  [IsDefined<HydrateFallback>, ClientLoaderHydrate]  extends [true, true] ?\n+  [undefined extends HydrateFallback ? false : true, ClientLoaderHydrate]  extends [true, true] ?\n     IsDefined<ClientLoaderData> extends true ? ClientLoaderData :\n     undefined\n   :\n   [IsDefined<ClientLoaderData>, IsDefined<ServerLoaderData>] extends [true, true] ? ServerLoaderData | ClientLoaderData :\n   IsDefined<ClientLoaderData> extends true ?\n-    IsDefined<ClientLoaderHydrate> extends true ? ClientLoaderData :\n+    ClientLoaderHydrate extends true ? ClientLoaderData :",
        "comment_created_at": "2024-06-21T20:30:25+00:00",
        "comment_author": "pcattori",
        "comment_body": "This was a bug that didn't show up until I added tests for returning `undefined`. In short `ClientLoaderHydrate` is a `boolean` not a data type, so it should be checked directly.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1364171200",
    "pr_number": 10945,
    "pr_file": "packages/router/router.ts",
    "created_at": "2023-10-18T16:23:25+00:00",
    "commented_code": "* Get/create a fetcher for the given key\n    * @param key\n    */\n-  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n+  getFetcher<TData = any>(key: string): Fetcher<TData>;",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "1364171200",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 10945,
        "pr_file": "packages/router/router.ts",
        "discussion_id": "1364171200",
        "commented_code": "@@ -193,7 +193,7 @@ export interface Router {\n    * Get/create a fetcher for the given key\n    * @param key\n    */\n-  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n+  getFetcher<TData = any>(key: string): Fetcher<TData>;",
        "comment_created_at": "2023-10-18T16:23:25+00:00",
        "comment_author": "brophdawg11",
        "comment_body": "This is a type definition bug - key is not optional in the implementations of `getFetcher`/`deleteFetcher`",
        "pr_file_module": null
      }
    ]
  }
]