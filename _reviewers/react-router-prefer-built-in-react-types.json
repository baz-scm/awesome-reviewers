[
  {
    "discussion_id": "1884571440",
    "pr_number": 12543,
    "pr_file": "packages/react-router/lib/router/utils.ts",
    "created_at": "2024-12-13T21:40:09+00:00",
    "commented_code": "(args: ShouldRevalidateFunctionArgs): boolean;\n }\n \n+export interface LayoutComponentProps {\n+  children: ReactNode\n+}",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "1884571440",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12543,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "1884571440",
        "commented_code": "@@ -192,6 +193,10 @@ export interface ShouldRevalidateFunction {\n   (args: ShouldRevalidateFunctionArgs): boolean;\n }\n \n+export interface LayoutComponentProps {\n+  children: ReactNode\n+}",
        "comment_created_at": "2024-12-13T21:40:09+00:00",
        "comment_author": "MichaelDeBoey",
        "comment_body": "Using `PropsWithChildren` would be more correct I think.\r\n\r\n```suggestion\r\nexport type LayoutComponentProps = PropsWithChildren;\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1884584756",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12543,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "1884571440",
        "commented_code": "@@ -192,6 +193,10 @@ export interface ShouldRevalidateFunction {\n   (args: ShouldRevalidateFunctionArgs): boolean;\n }\n \n+export interface LayoutComponentProps {\n+  children: ReactNode\n+}",
        "comment_created_at": "2024-12-13T21:55:09+00:00",
        "comment_author": "AlemTuzlak",
        "comment_body": "I was thinking of leaving it as this in case the team decides in the future to add more props, I can change it as well, no problem.\n\nWhat do you think?",
        "pr_file_module": null
      },
      {
        "comment_id": "1884592066",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12543,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "1884571440",
        "commented_code": "@@ -192,6 +193,10 @@ export interface ShouldRevalidateFunction {\n   (args: ShouldRevalidateFunctionArgs): boolean;\n }\n \n+export interface LayoutComponentProps {\n+  children: ReactNode\n+}",
        "comment_created_at": "2024-12-13T22:04:37+00:00",
        "comment_author": "MichaelDeBoey",
        "comment_body": "If the team want to add more props, they can still do\r\n\r\n```ts\r\nexport type LayoutComponentProps = PropsWithChildren<{\r\n  extraProp: type;\r\n}>;\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1885105673",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12543,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "1884571440",
        "commented_code": "@@ -192,6 +193,10 @@ export interface ShouldRevalidateFunction {\n   (args: ShouldRevalidateFunctionArgs): boolean;\n }\n \n+export interface LayoutComponentProps {\n+  children: ReactNode\n+}",
        "comment_created_at": "2024-12-14T15:59:09+00:00",
        "comment_author": "timdorr",
        "comment_body": "PropsWithChildren also takes a generic to add extra props. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1888106592",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12543,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "1884571440",
        "commented_code": "@@ -192,6 +193,10 @@ export interface ShouldRevalidateFunction {\n   (args: ShouldRevalidateFunctionArgs): boolean;\n }\n \n+export interface LayoutComponentProps {\n+  children: ReactNode\n+}",
        "comment_created_at": "2024-12-17T08:37:14+00:00",
        "comment_author": "AlemTuzlak",
        "comment_body": "Thanks, it's rare that I have a TIL in react. Added the changes!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1811250228",
    "pr_number": 12177,
    "pr_file": "packages/react-router/lib/router/utils.ts",
    "created_at": "2024-10-22T19:08:55+00:00",
    "commented_code": "| AgnosticDataIndexRouteObject\n   | AgnosticDataNonIndexRouteObject;\n \n-export type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n+export type RouteManifest<R = AgnosticDataRouteObject> = Record<\n+  string,\n+  R | undefined\n+>;",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "1811250228",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12177,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "1811250228",
        "commented_code": "@@ -337,7 +337,10 @@ export type AgnosticDataRouteObject =\n   | AgnosticDataIndexRouteObject\n   | AgnosticDataNonIndexRouteObject;\n \n-export type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n+export type RouteManifest<R = AgnosticDataRouteObject> = Record<\n+  string,\n+  R | undefined\n+>;",
        "comment_created_at": "2024-10-22T19:08:55+00:00",
        "comment_author": "brophdawg11",
        "comment_body": "Added a generic here so the remix layers could pass in their route type",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1811251083",
    "pr_number": 12177,
    "pr_file": "packages/react-router/lib/server-runtime/routeModules.ts",
    "created_at": "2024-10-22T19:09:47+00:00",
    "commented_code": "-import type { Location } from \"../router/history\";\n+import type { ActionFunction, LoaderFunction } from \"../router/utils\";\n import type {\n-  ActionFunction as RRActionFunction,\n-  ActionFunctionArgs as RRActionFunctionArgs,\n-  AgnosticRouteMatch,\n-  LoaderFunction as RRLoaderFunction,\n-  LoaderFunctionArgs as RRLoaderFunctionArgs,\n-  Params,\n-} from \"../router/utils\";\n-import type { AppData, AppLoadContext } from \"./data\";\n-import type { SerializeFrom } from \"../dom/ssr/components\";\n-import type { LinkDescriptor } from \"../router/links\";\n+  ClientActionFunction,\n+  ClientLoaderFunction,\n+  LinksFunction,\n+  MetaFunction,\n+} from \"../dom/ssr/routeModules\";\n \n export interface RouteModules<RouteModule> {\n   [routeId: string]: RouteModule | undefined;\n }\n \n-/**\n- * @deprecated Use `LoaderFunctionArgs`/`ActionFunctionArgs` instead\n- */\n-export type DataFunctionArgs = RRActionFunctionArgs<AppLoadContext> &",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "1811251083",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12177,
        "pr_file": "packages/react-router/lib/server-runtime/routeModules.ts",
        "discussion_id": "1811251083",
        "commented_code": "@@ -1,95 +1,15 @@\n-import type { Location } from \"../router/history\";\n+import type { ActionFunction, LoaderFunction } from \"../router/utils\";\n import type {\n-  ActionFunction as RRActionFunction,\n-  ActionFunctionArgs as RRActionFunctionArgs,\n-  AgnosticRouteMatch,\n-  LoaderFunction as RRLoaderFunction,\n-  LoaderFunctionArgs as RRLoaderFunctionArgs,\n-  Params,\n-} from \"../router/utils\";\n-import type { AppData, AppLoadContext } from \"./data\";\n-import type { SerializeFrom } from \"../dom/ssr/components\";\n-import type { LinkDescriptor } from \"../router/links\";\n+  ClientActionFunction,\n+  ClientLoaderFunction,\n+  LinksFunction,\n+  MetaFunction,\n+} from \"../dom/ssr/routeModules\";\n \n export interface RouteModules<RouteModule> {\n   [routeId: string]: RouteModule | undefined;\n }\n \n-/**\n- * @deprecated Use `LoaderFunctionArgs`/`ActionFunctionArgs` instead\n- */\n-export type DataFunctionArgs = RRActionFunctionArgs<AppLoadContext> &",
        "comment_created_at": "2024-10-22T19:09:47+00:00",
        "comment_author": "brophdawg11",
        "comment_body": "All these can go away and we just use the RR types - and users will add `context: appLoadContext` via module augmentation: https://reactrouter.com/dev/guides/upgrading/remix#step-7---update-types-for-apploadcontext",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1846908212",
    "pr_number": 12308,
    "pr_file": "packages/react-router/lib/router/utils.ts",
    "created_at": "2024-11-18T16:32:37+00:00",
    "commented_code": "return matches;\n }\n \n+/**\n+ * Route match information from `useMatches()`\n+ *\n+ * @deprecated Use type safe `matches` named argument for route module exports or the `Info['loaderData']` type from generated `+types/<route>`",
    "repo_full_name": "remix-run/react-router",
    "discussion_comments": [
      {
        "comment_id": "1846908212",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12308,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "1846908212",
        "commented_code": "@@ -552,6 +562,11 @@ export function matchRoutesImpl<\n   return matches;\n }\n \n+/**\n+ * Route match information from `useMatches()`\n+ *\n+ * @deprecated Use type safe `matches` named argument for route module exports or the `Info['loaderData']` type from generated `+types/<route>`",
        "comment_created_at": "2024-11-18T16:32:37+00:00",
        "comment_author": "brookslybrand",
        "comment_body": "Just wanted to flag that `useMatches` right now can't be completely replaced by the type safe autogenerated matches, so it's possible the same goes fro `UIMatch`\r\n\r\nAn example is where you might use `useMatches` about an `<Outlet>`, so you need it in the parent, but the data you want loading is in the child. On reactrouter.com we do exactly this to get the mobile title for the dropdown (\"Feature Overview\") in this case. This match data can't come from the parent's route component, even though it's used there.\r\n\r\nAgain, not sure if that means `UIMatch` shouldn't be deprecated yet, but it makes me a bit nervous about removing it just yet\r\n\r\n\r\n<img width=\"689\" alt=\"image\" src=\"https://github.com/user-attachments/assets/1fb637d2-b314-4751-bf6e-1e344f59472b\">\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1846937312",
        "repo_full_name": "remix-run/react-router",
        "pr_number": 12308,
        "pr_file": "packages/react-router/lib/router/utils.ts",
        "discussion_id": "1846908212",
        "commented_code": "@@ -552,6 +562,11 @@ export function matchRoutesImpl<\n   return matches;\n }\n \n+/**\n+ * Route match information from `useMatches()`\n+ *\n+ * @deprecated Use type safe `matches` named argument for route module exports or the `Info['loaderData']` type from generated `+types/<route>`",
        "comment_created_at": "2024-11-18T16:52:00+00:00",
        "comment_author": "pcattori",
        "comment_body": "> Again, not sure if that means UIMatch shouldn't be deprecated yet, but it makes me a bit nervous about removing it just yet\r\n\r\nTo be clear, `UIMatch` isn't removed, just deprecated. You can keep using it without any breaking changes until v8.",
        "pr_file_module": null
      }
    ]
  }
]