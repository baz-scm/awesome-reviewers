[
  {
    "discussion_id": "2216732088",
    "pr_number": 5918,
    "pr_file": "webview-ui/src/components/chat/ChatTextArea.tsx",
    "created_at": "2025-07-18T18:59:17+00:00",
    "commented_code": "setCursorPosition(newCursorPosition)\n \n \t\t\t\tconst showMenu = shouldShowContextMenu(newValue, newCursorPosition)\n+\t\t\t\tconst wasMenuVisible = showContextMenu\n \t\t\t\tsetShowContextMenu(showMenu)\n \n+\t\t\t\t// Announce menu state changes for screen readers\n+\t\t\t\tif (showMenu && !wasMenuVisible) {\n+\t\t\t\t\tsetScreenReaderAnnouncement(\"File insertion menu opened\")",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2216732088",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5918,
        "pr_file": "webview-ui/src/components/chat/ChatTextArea.tsx",
        "discussion_id": "2216732088",
        "commented_code": "@@ -500,8 +501,16 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(\n \t\t\t\tsetCursorPosition(newCursorPosition)\n \n \t\t\t\tconst showMenu = shouldShowContextMenu(newValue, newCursorPosition)\n+\t\t\t\tconst wasMenuVisible = showContextMenu\n \t\t\t\tsetShowContextMenu(showMenu)\n \n+\t\t\t\t// Announce menu state changes for screen readers\n+\t\t\t\tif (showMenu && !wasMenuVisible) {\n+\t\t\t\t\tsetScreenReaderAnnouncement(\"File insertion menu opened\")",
        "comment_created_at": "2025-07-18T18:59:17+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Consider localizing the screen reader announcement strings (e.g., \"File insertion menu opened\" and \"closed\") using the translation function instead of hardcoding English messages.\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2216732102",
    "pr_number": 5918,
    "pr_file": "webview-ui/src/components/chat/ChatTextArea.tsx",
    "created_at": "2025-07-18T18:59:17+00:00",
    "commented_code": "}\n \t\t}, [showContextMenu])\n \n+\t\t// Announce selected menu item for screen readers\n+\t\tuseEffect(() => {",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2216732102",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5918,
        "pr_file": "webview-ui/src/components/chat/ChatTextArea.tsx",
        "discussion_id": "2216732102",
        "commented_code": "@@ -559,6 +568,48 @@\n \t\t\t}\n \t\t}, [showContextMenu])\n \n+\t\t// Announce selected menu item for screen readers\n+\t\tuseEffect(() => {",
        "comment_created_at": "2025-07-18T18:59:17+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "The useEffect that announces the selected menu item builds its messages with hardcoded strings. Consider using the translation function (t) to ensure these announcements are localized.\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2223256261",
    "pr_number": 5918,
    "pr_file": "webview-ui/src/components/chat/ChatTextArea.tsx",
    "created_at": "2025-07-22T17:05:02+00:00",
    "commented_code": "}\n \t\t}, [showContextMenu])\n \n+\t\t// Announce selected menu item for screen readers\n+\t\tuseEffect(() => {\n+\t\t\tif (showContextMenu && selectedMenuIndex >= 0) {\n+\t\t\t\tconst options = getContextMenuOptions(\n+\t\t\t\t\tsearchQuery,\n+\t\t\t\t\tinputValue,\n+\t\t\t\t\tselectedType,\n+\t\t\t\t\tqueryItems,\n+\t\t\t\t\tfileSearchResults,\n+\t\t\t\t\tallModes,\n+\t\t\t\t)\n+\t\t\t\tconst selectedOption = options[selectedMenuIndex]\n+\t\t\t\tif (selectedOption && selectedOption.type !== ContextMenuOptionType.NoResults) {\n+\t\t\t\t\tlet announcement = \"\"\n+\t\t\t\t\tswitch (selectedOption.type) {\n+\t\t\t\t\t\tcase ContextMenuOptionType.File:\n+\t\t\t\t\t\tcase ContextMenuOptionType.OpenedFile:\n+\t\t\t\t\t\t\tannouncement = `File: ${selectedOption.value || selectedOption.label}, ${selectedMenuIndex + 1} of ${options.length}`",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2223256261",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5918,
        "pr_file": "webview-ui/src/components/chat/ChatTextArea.tsx",
        "discussion_id": "2223256261",
        "commented_code": "@@ -559,6 +568,48 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(\n \t\t\t}\n \t\t}, [showContextMenu])\n \n+\t\t// Announce selected menu item for screen readers\n+\t\tuseEffect(() => {\n+\t\t\tif (showContextMenu && selectedMenuIndex >= 0) {\n+\t\t\t\tconst options = getContextMenuOptions(\n+\t\t\t\t\tsearchQuery,\n+\t\t\t\t\tinputValue,\n+\t\t\t\t\tselectedType,\n+\t\t\t\t\tqueryItems,\n+\t\t\t\t\tfileSearchResults,\n+\t\t\t\t\tallModes,\n+\t\t\t\t)\n+\t\t\t\tconst selectedOption = options[selectedMenuIndex]\n+\t\t\t\tif (selectedOption && selectedOption.type !== ContextMenuOptionType.NoResults) {\n+\t\t\t\t\tlet announcement = \"\"\n+\t\t\t\t\tswitch (selectedOption.type) {\n+\t\t\t\t\t\tcase ContextMenuOptionType.File:\n+\t\t\t\t\t\tcase ContextMenuOptionType.OpenedFile:\n+\t\t\t\t\t\t\tannouncement = `File: ${selectedOption.value || selectedOption.label}, ${selectedMenuIndex + 1} of ${options.length}`",
        "comment_created_at": "2025-07-22T17:05:02+00:00",
        "comment_author": "daniel-lxs",
        "comment_body": "All these announcement strings need to be translated. Consider creating a helper function that uses the translation system:\n\n```typescript\nconst getAnnouncementText = (option: ContextMenuQueryItem, index: number, total: number) => {\n  const position = t(\"chat:contextMenu.position\", { current: index + 1, total });\n  \n  switch (option.type) {\n    case ContextMenuOptionType.File:\n    case ContextMenuOptionType.OpenedFile:\n      return t(\"chat:contextMenu.announceFile\", { \n        name: option.value || option.label, \n        position \n      });\n    // ... other cases\n  }\n};\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2223256491",
    "pr_number": 5918,
    "pr_file": "webview-ui/src/components/chat/ChatTextArea.tsx",
    "created_at": "2025-07-22T17:05:10+00:00",
    "commented_code": "</div>\n \t\t\t\t\t\t)}\n \n+\t\t\t\t\t\t{/* Live region for screen reader announcements */}\n+\t\t\t\t\t\t<div\n+\t\t\t\t\t\t\taria-live=\"polite\"\n+\t\t\t\t\t\t\taria-atomic=\"true\"\n+\t\t\t\t\t\t\tclassName=\"sr-only\"\n+\t\t\t\t\t\t\tstyle={{\n+\t\t\t\t\t\t\t\tposition: \"absolute\",\n+\t\t\t\t\t\t\t\tleft: \"-10000px\",\n+\t\t\t\t\t\t\t\twidth: \"1px\",\n+\t\t\t\t\t\t\t\theight: \"1px\",\n+\t\t\t\t\t\t\t\toverflow: \"hidden\",\n+\t\t\t\t\t\t\t}}>\n+\t\t\t\t\t\t\t{screenReaderAnnouncement}\n+\t\t\t\t\t\t</div>\n+\n+\t\t\t\t\t\t{/* Instructions for screen readers */}\n+\t\t\t\t\t\t<div id=\"context-menu-instructions\" className=\"sr-only\">\n+\t\t\t\t\t\t\tType @ to open file insertion menu. Use arrow keys to navigate, Enter to select, Escape to close.",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2223256491",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5918,
        "pr_file": "webview-ui/src/components/chat/ChatTextArea.tsx",
        "discussion_id": "2223256491",
        "commented_code": "@@ -1249,6 +1304,26 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(\n \t\t\t\t\t\t\t</div>\n \t\t\t\t\t\t)}\n \n+\t\t\t\t\t\t{/* Live region for screen reader announcements */}\n+\t\t\t\t\t\t<div\n+\t\t\t\t\t\t\taria-live=\"polite\"\n+\t\t\t\t\t\t\taria-atomic=\"true\"\n+\t\t\t\t\t\t\tclassName=\"sr-only\"\n+\t\t\t\t\t\t\tstyle={{\n+\t\t\t\t\t\t\t\tposition: \"absolute\",\n+\t\t\t\t\t\t\t\tleft: \"-10000px\",\n+\t\t\t\t\t\t\t\twidth: \"1px\",\n+\t\t\t\t\t\t\t\theight: \"1px\",\n+\t\t\t\t\t\t\t\toverflow: \"hidden\",\n+\t\t\t\t\t\t\t}}>\n+\t\t\t\t\t\t\t{screenReaderAnnouncement}\n+\t\t\t\t\t\t</div>\n+\n+\t\t\t\t\t\t{/* Instructions for screen readers */}\n+\t\t\t\t\t\t<div id=\"context-menu-instructions\" className=\"sr-only\">\n+\t\t\t\t\t\t\tType @ to open file insertion menu. Use arrow keys to navigate, Enter to select, Escape to close.",
        "comment_created_at": "2025-07-22T17:05:10+00:00",
        "comment_author": "daniel-lxs",
        "comment_body": "This instruction text should also be translated:\n\n```typescript\n<div id=\"context-menu-instructions\" className=\"sr-only\">\n  {t(\"chat:contextMenu.instructions\")}\n</div>\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2217526408",
    "pr_number": 5965,
    "pr_file": "webview-ui/src/components/chat/AIDeepResearchBlock.tsx",
    "created_at": "2025-07-20T01:31:24+00:00",
    "commented_code": "+import React, { useState, useEffect } from \"react\"\n+import { useTranslation } from \"react-i18next\"\n+import { MagnifyingGlassIcon, ReaderIcon, LightningBoltIcon, CheckCircledIcon } from \"@radix-ui/react-icons\"\n+import MarkdownBlock from \"../common/MarkdownBlock\"\n+\n+interface AIDeepResearchBlockProps {\n+\tquery: string\n+\tstatus?: \"thinking\" | \"searching\" | \"reading\" | \"analyzing\" | \"completed\"\n+\tcontent?: string\n+\tresult?: string\n+}\n+\n+const AIDeepResearchBlock: React.FC<AIDeepResearchBlockProps> = ({ query, status, content, result }) => {\n+\tconst { t } = useTranslation(\"chat\")\n+\tconst [isExpanded, setIsExpanded] = useState(true)\n+\tconst [displayContent, setDisplayContent] = useState(\"\")\n+\n+\tuseEffect(() => {\n+\t\tif (content) {\n+\t\t\tsetDisplayContent(content)\n+\t\t}\n+\t}, [content])\n+\n+\tconst getStatusIcon = () => {\n+\t\tswitch (status) {\n+\t\t\tcase \"thinking\":\n+\t\t\t\treturn <LightningBoltIcon className=\"w-4 h-4 animate-pulse\" />\n+\t\t\tcase \"searching\":\n+\t\t\t\treturn <MagnifyingGlassIcon className=\"w-4 h-4 animate-spin\" />\n+\t\t\tcase \"reading\":\n+\t\t\t\treturn <ReaderIcon className=\"w-4 h-4 animate-pulse\" />\n+\t\t\tcase \"analyzing\":\n+\t\t\t\treturn <LightningBoltIcon className=\"w-4 h-4 animate-pulse\" />\n+\t\t\tcase \"completed\":\n+\t\t\t\treturn <CheckCircledIcon className=\"w-4 h-4 text-green-500\" />\n+\t\t\tdefault:\n+\t\t\t\treturn null\n+\t\t}\n+\t}\n+\n+\tconst getStatusText = () => {\n+\t\tswitch (status) {\n+\t\t\tcase \"thinking\":\n+\t\t\t\treturn t(\"aiDeepResearch.thinking\", \"Thinking...\")\n+\t\t\tcase \"searching\":\n+\t\t\t\treturn t(\"aiDeepResearch.searching\", \"Searching the web...\")\n+\t\t\tcase \"reading\":\n+\t\t\t\treturn t(\"aiDeepResearch.reading\", \"Reading sources...\")\n+\t\t\tcase \"analyzing\":\n+\t\t\t\treturn t(\"aiDeepResearch.analyzing\", \"Analyzing information...\")\n+\t\t\tcase \"completed\":\n+\t\t\t\treturn t(\"aiDeepResearch.completed\", \"Research completed\")\n+\t\t\tdefault:\n+\t\t\t\treturn t(\"aiDeepResearch.initializing\", \"Initializing research...\")\n+\t\t}\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"flex flex-col gap-2 my-2\">\n+\t\t\t<div className=\"bg-vscode-editor-background border border-vscode-border rounded-xs overflow-hidden\">\n+\t\t\t\t<div\n+\t\t\t\t\tclassName=\"flex items-center justify-between gap-2 px-3 py-2 cursor-pointer hover:bg-vscode-list-hoverBackground\"\n+\t\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}>\n+\t\t\t\t\t<div className=\"flex items-center gap-2 flex-1\">\n+\t\t\t\t\t\t{getStatusIcon()}\n+\t\t\t\t\t\t<span className=\"font-medium text-vscode-foreground\">\n+\t\t\t\t\t\t\t{t(\"aiDeepResearch.title\", \"AI Deep Research\")}",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2217526408",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5965,
        "pr_file": "webview-ui/src/components/chat/AIDeepResearchBlock.tsx",
        "discussion_id": "2217526408",
        "commented_code": "@@ -0,0 +1,134 @@\n+import React, { useState, useEffect } from \"react\"\n+import { useTranslation } from \"react-i18next\"\n+import { MagnifyingGlassIcon, ReaderIcon, LightningBoltIcon, CheckCircledIcon } from \"@radix-ui/react-icons\"\n+import MarkdownBlock from \"../common/MarkdownBlock\"\n+\n+interface AIDeepResearchBlockProps {\n+\tquery: string\n+\tstatus?: \"thinking\" | \"searching\" | \"reading\" | \"analyzing\" | \"completed\"\n+\tcontent?: string\n+\tresult?: string\n+}\n+\n+const AIDeepResearchBlock: React.FC<AIDeepResearchBlockProps> = ({ query, status, content, result }) => {\n+\tconst { t } = useTranslation(\"chat\")\n+\tconst [isExpanded, setIsExpanded] = useState(true)\n+\tconst [displayContent, setDisplayContent] = useState(\"\")\n+\n+\tuseEffect(() => {\n+\t\tif (content) {\n+\t\t\tsetDisplayContent(content)\n+\t\t}\n+\t}, [content])\n+\n+\tconst getStatusIcon = () => {\n+\t\tswitch (status) {\n+\t\t\tcase \"thinking\":\n+\t\t\t\treturn <LightningBoltIcon className=\"w-4 h-4 animate-pulse\" />\n+\t\t\tcase \"searching\":\n+\t\t\t\treturn <MagnifyingGlassIcon className=\"w-4 h-4 animate-spin\" />\n+\t\t\tcase \"reading\":\n+\t\t\t\treturn <ReaderIcon className=\"w-4 h-4 animate-pulse\" />\n+\t\t\tcase \"analyzing\":\n+\t\t\t\treturn <LightningBoltIcon className=\"w-4 h-4 animate-pulse\" />\n+\t\t\tcase \"completed\":\n+\t\t\t\treturn <CheckCircledIcon className=\"w-4 h-4 text-green-500\" />\n+\t\t\tdefault:\n+\t\t\t\treturn null\n+\t\t}\n+\t}\n+\n+\tconst getStatusText = () => {\n+\t\tswitch (status) {\n+\t\t\tcase \"thinking\":\n+\t\t\t\treturn t(\"aiDeepResearch.thinking\", \"Thinking...\")\n+\t\t\tcase \"searching\":\n+\t\t\t\treturn t(\"aiDeepResearch.searching\", \"Searching the web...\")\n+\t\t\tcase \"reading\":\n+\t\t\t\treturn t(\"aiDeepResearch.reading\", \"Reading sources...\")\n+\t\t\tcase \"analyzing\":\n+\t\t\t\treturn t(\"aiDeepResearch.analyzing\", \"Analyzing information...\")\n+\t\t\tcase \"completed\":\n+\t\t\t\treturn t(\"aiDeepResearch.completed\", \"Research completed\")\n+\t\t\tdefault:\n+\t\t\t\treturn t(\"aiDeepResearch.initializing\", \"Initializing research...\")\n+\t\t}\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"flex flex-col gap-2 my-2\">\n+\t\t\t<div className=\"bg-vscode-editor-background border border-vscode-border rounded-xs overflow-hidden\">\n+\t\t\t\t<div\n+\t\t\t\t\tclassName=\"flex items-center justify-between gap-2 px-3 py-2 cursor-pointer hover:bg-vscode-list-hoverBackground\"\n+\t\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}>\n+\t\t\t\t\t<div className=\"flex items-center gap-2 flex-1\">\n+\t\t\t\t\t\t{getStatusIcon()}\n+\t\t\t\t\t\t<span className=\"font-medium text-vscode-foreground\">\n+\t\t\t\t\t\t\t{t(\"aiDeepResearch.title\", \"AI Deep Research\")}",
        "comment_created_at": "2025-07-20T01:31:24+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Avoid using inline default fallback strings in translation calls. Remove the second argument (e.g. 'AI Deep Research' for t('aiDeepResearch.title', 'AI Deep Research')) so translations rely solely on the language files.\n```suggestion\n\t\t\t\t\t\t\t{t(\"aiDeepResearch.title\")}\n```\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2216390555",
    "pr_number": 5900,
    "pr_file": "webview-ui/src/components/chat/checkpoints/CheckpointSaved.tsx",
    "created_at": "2025-07-18T15:55:13+00:00",
    "commented_code": "const metadata = useMemo(() => {\n \t\tif (!checkpoint) {\n+\t\t\tconsole.warn(\"[CheckpointSaved] No checkpoint metadata provided\", { ts: props.ts, commitHash: props.commitHash })\n \t\t\treturn undefined\n \t\t}\n \n \t\tconst result = checkpointSchema.safeParse(checkpoint)\n \n \t\tif (!result.success) {\n+\t\t\tconsole.warn(\"[CheckpointSaved] Invalid checkpoint metadata\", {\n+\t\t\t\tcheckpoint,\n+\t\t\t\terrors: result.error.errors,\n+\t\t\t\tts: props.ts,\n+\t\t\t\tcommitHash: props.commitHash\n+\t\t\t})\n \t\t\treturn undefined\n \t\t}\n \n \t\treturn result.data\n-\t}, [checkpoint])\n+\t}, [checkpoint, props.ts, props.commitHash])\n \n-\tif (!metadata) {\n-\t\treturn null\n-\t}\n+\t// Always show the checkpoint, even if metadata is invalid\n+\t// This ensures users can see that checkpoints are being created\n+\tconst fallbackMetadata = useMemo(() => {\n+\t\tif (metadata) {\n+\t\t\treturn metadata\n+\t\t}\n+\t\t\n+\t\t// Create fallback metadata when the original is invalid\n+\t\treturn {\n+\t\t\tisFirst: false, // Default to regular checkpoint\n+\t\t\tfrom: \"\", // Empty string as fallback\n+\t\t\tto: props.commitHash, // Use the commit hash we have\n+\t\t}\n+\t}, [metadata, props.commitHash])\n \n \treturn (\n \t\t<div className=\"flex items-center justify-between\">\n \t\t\t<div className=\"flex gap-2\">\n \t\t\t\t<span className=\"codicon codicon-git-commit text-blue-400\" />\n \t\t\t\t<span className=\"font-bold\">\n-\t\t\t\t\t{metadata.isFirst ? t(\"chat:checkpoint.initial\") : t(\"chat:checkpoint.regular\")}\n+\t\t\t\t\t{fallbackMetadata.isFirst ? t(\"chat:checkpoint.initial\") : t(\"chat:checkpoint.regular\")}\n \t\t\t\t</span>\n \t\t\t\t{isCurrent && <span className=\"text-muted text-sm\">{t(\"chat:checkpoint.current\")}</span>}\n+\t\t\t\t{!metadata && (\n+\t\t\t\t\t<span className=\"text-muted text-xs italic\">\n+\t\t\t\t\t\t{t(\"chat:checkpoint.metadataUnavailable\", \"metadata unavailable\")}",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2216390555",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5900,
        "pr_file": "webview-ui/src/components/chat/checkpoints/CheckpointSaved.tsx",
        "discussion_id": "2216390555",
        "commented_code": "@@ -17,32 +17,55 @@ export const CheckpointSaved = ({ checkpoint, ...props }: CheckpointSavedProps)\n \n \tconst metadata = useMemo(() => {\n \t\tif (!checkpoint) {\n+\t\t\tconsole.warn(\"[CheckpointSaved] No checkpoint metadata provided\", { ts: props.ts, commitHash: props.commitHash })\n \t\t\treturn undefined\n \t\t}\n \n \t\tconst result = checkpointSchema.safeParse(checkpoint)\n \n \t\tif (!result.success) {\n+\t\t\tconsole.warn(\"[CheckpointSaved] Invalid checkpoint metadata\", {\n+\t\t\t\tcheckpoint,\n+\t\t\t\terrors: result.error.errors,\n+\t\t\t\tts: props.ts,\n+\t\t\t\tcommitHash: props.commitHash\n+\t\t\t})\n \t\t\treturn undefined\n \t\t}\n \n \t\treturn result.data\n-\t}, [checkpoint])\n+\t}, [checkpoint, props.ts, props.commitHash])\n \n-\tif (!metadata) {\n-\t\treturn null\n-\t}\n+\t// Always show the checkpoint, even if metadata is invalid\n+\t// This ensures users can see that checkpoints are being created\n+\tconst fallbackMetadata = useMemo(() => {\n+\t\tif (metadata) {\n+\t\t\treturn metadata\n+\t\t}\n+\t\t\n+\t\t// Create fallback metadata when the original is invalid\n+\t\treturn {\n+\t\t\tisFirst: false, // Default to regular checkpoint\n+\t\t\tfrom: \"\", // Empty string as fallback\n+\t\t\tto: props.commitHash, // Use the commit hash we have\n+\t\t}\n+\t}, [metadata, props.commitHash])\n \n \treturn (\n \t\t<div className=\"flex items-center justify-between\">\n \t\t\t<div className=\"flex gap-2\">\n \t\t\t\t<span className=\"codicon codicon-git-commit text-blue-400\" />\n \t\t\t\t<span className=\"font-bold\">\n-\t\t\t\t\t{metadata.isFirst ? t(\"chat:checkpoint.initial\") : t(\"chat:checkpoint.regular\")}\n+\t\t\t\t\t{fallbackMetadata.isFirst ? t(\"chat:checkpoint.initial\") : t(\"chat:checkpoint.regular\")}\n \t\t\t\t</span>\n \t\t\t\t{isCurrent && <span className=\"text-muted text-sm\">{t(\"chat:checkpoint.current\")}</span>}\n+\t\t\t\t{!metadata && (\n+\t\t\t\t\t<span className=\"text-muted text-xs italic\">\n+\t\t\t\t\t\t{t(\"chat:checkpoint.metadataUnavailable\", \"metadata unavailable\")}",
        "comment_created_at": "2025-07-18T15:55:13+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Avoid providing an inline English fallback string in the translation call. Remove the second argument from t('chat:checkpoint.metadataUnavailable') and manage defaults via the translation JSON files.\n```suggestion\n\t\t\t\t\t\t{t(\"chat:checkpoint.metadataUnavailable\")}\n```\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2193968961",
    "pr_number": 5491,
    "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
    "created_at": "2025-07-09T04:12:33+00:00",
    "commented_code": "+import { useState } from \"react\"\n+import { ChevronDown } from \"lucide-react\"\n+import { VSCodeCheckbox } from \"@vscode/webview-ui-toolkit/react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tonPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({ patterns, allowedCommands, onPatternChange }: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse allowed commands section\" : \"Expand allowed commands section\"}",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2193968961",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5491,
        "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
        "discussion_id": "2193968961",
        "commented_code": "@@ -0,0 +1,60 @@\n+import { useState } from \"react\"\n+import { ChevronDown } from \"lucide-react\"\n+import { VSCodeCheckbox } from \"@vscode/webview-ui-toolkit/react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tonPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({ patterns, allowedCommands, onPatternChange }: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse allowed commands section\" : \"Expand allowed commands section\"}",
        "comment_created_at": "2025-07-09T04:12:33+00:00",
        "comment_author": "Copilot",
        "comment_body": "The aria-label for the expand/collapse button is hardcoded in English; use a localized string via the translation hook to support internationalization.\n```suggestion\n\t\t\t\taria-label={isExpanded ? t(\"chat:commandExecution.collapseAllowedCommands\", \"Collapse allowed commands section\") : t(\"chat:commandExecution.expandAllowedCommands\", \"Expand allowed commands section\")}\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2193968971",
    "pr_number": 5491,
    "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
    "created_at": "2025-07-09T04:12:33+00:00",
    "commented_code": "+import { useState } from \"react\"\n+import { ChevronDown } from \"lucide-react\"\n+import { VSCodeCheckbox } from \"@vscode/webview-ui-toolkit/react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tonPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({ patterns, allowedCommands, onPatternChange }: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse allowed commands section\" : \"Expand allowed commands section\"}\n+\t\t\t\taria-expanded={isExpanded}>\n+\t\t\t\t<ChevronDown\n+\t\t\t\t\tclassName={cn(\"size-3 transition-transform duration-200\", {\n+\t\t\t\t\t\t\"rotate-0\": isExpanded,\n+\t\t\t\t\t\t\"-rotate-90\": !isExpanded,\n+\t\t\t\t\t})}\n+\t\t\t\t/>\n+\t\t\t\t<span className=\"font-medium\">{t(\"chat:commandExecution.addToAllowedCommands\")}</span>\n+\t\t\t</button>\n+\t\t\t{isExpanded && (\n+\t\t\t\t<div className=\"px-3 pb-3 space-y-1.5\">\n+\t\t\t\t\t{patterns.map((item, index) => (\n+\t\t\t\t\t\t<div key={`${item.pattern}-${index}`} className=\"ml-5\">\n+\t\t\t\t\t\t\t<VSCodeCheckbox\n+\t\t\t\t\t\t\t\tchecked={allowedCommands.includes(item.pattern)}\n+\t\t\t\t\t\t\t\tonChange={() => onPatternChange(item.pattern)}\n+\t\t\t\t\t\t\t\tclassName=\"text-xs\"\n+\t\t\t\t\t\t\t\taria-label={`Allow command pattern: ${item.pattern}`}>",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2193968971",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5491,
        "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
        "discussion_id": "2193968971",
        "commented_code": "@@ -0,0 +1,60 @@\n+import { useState } from \"react\"\n+import { ChevronDown } from \"lucide-react\"\n+import { VSCodeCheckbox } from \"@vscode/webview-ui-toolkit/react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tonPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({ patterns, allowedCommands, onPatternChange }: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse allowed commands section\" : \"Expand allowed commands section\"}\n+\t\t\t\taria-expanded={isExpanded}>\n+\t\t\t\t<ChevronDown\n+\t\t\t\t\tclassName={cn(\"size-3 transition-transform duration-200\", {\n+\t\t\t\t\t\t\"rotate-0\": isExpanded,\n+\t\t\t\t\t\t\"-rotate-90\": !isExpanded,\n+\t\t\t\t\t})}\n+\t\t\t\t/>\n+\t\t\t\t<span className=\"font-medium\">{t(\"chat:commandExecution.addToAllowedCommands\")}</span>\n+\t\t\t</button>\n+\t\t\t{isExpanded && (\n+\t\t\t\t<div className=\"px-3 pb-3 space-y-1.5\">\n+\t\t\t\t\t{patterns.map((item, index) => (\n+\t\t\t\t\t\t<div key={`${item.pattern}-${index}`} className=\"ml-5\">\n+\t\t\t\t\t\t\t<VSCodeCheckbox\n+\t\t\t\t\t\t\t\tchecked={allowedCommands.includes(item.pattern)}\n+\t\t\t\t\t\t\t\tonChange={() => onPatternChange(item.pattern)}\n+\t\t\t\t\t\t\t\tclassName=\"text-xs\"\n+\t\t\t\t\t\t\t\taria-label={`Allow command pattern: ${item.pattern}`}>",
        "comment_created_at": "2025-07-09T04:12:33+00:00",
        "comment_author": "Copilot",
        "comment_body": "The checkbox aria-label is hardcoded in English; wrap this in a translation function or use i18n to ensure accessibility for localized users.\n```suggestion\n\t\t\t\t\t\t\t\taria-label={t(\"chat:commandExecution.allowCommandPattern\", { pattern: item.pattern })}>\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2205858083",
    "pr_number": 5491,
    "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
    "created_at": "2025-07-14T21:26:13+00:00",
    "commented_code": "+import { useState } from \"react\"\n+import { ChevronDown, Check, X } from \"lucide-react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tdeniedCommands: string[]\n+\tonAllowPatternChange: (pattern: string) => void\n+\tonDenyPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({\n+\tpatterns,\n+\tallowedCommands,\n+\tdeniedCommands,\n+\tonAllowPatternChange,\n+\tonDenyPatternChange,\n+}: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\tconst getPatternStatus = (pattern: string): \"allowed\" | \"denied\" | \"none\" => {\n+\t\tif (allowedCommands.includes(pattern)) return \"allowed\"\n+\t\tif (deniedCommands.includes(pattern)) return \"denied\"\n+\t\treturn \"none\"\n+\t}\n+\n+\tconst handleAllowClick = (pattern: string) => {\n+\t\tconst status = getPatternStatus(pattern)\n+\t\tif (status === \"denied\") {\n+\t\t\t// Remove from denied list first\n+\t\t\tonDenyPatternChange(pattern)\n+\t\t}\n+\t\t// Toggle allow status\n+\t\tonAllowPatternChange(pattern)\n+\t}\n+\n+\tconst handleDenyClick = (pattern: string) => {\n+\t\tconst status = getPatternStatus(pattern)\n+\t\tif (status === \"allowed\") {\n+\t\t\t// Remove from allowed list first\n+\t\t\tonAllowPatternChange(pattern)\n+\t\t}\n+\t\t// Toggle deny status\n+\t\tonDenyPatternChange(pattern)\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse command management section\" : \"Expand command management section\"}\n+\t\t\t\taria-expanded={isExpanded}>\n+\t\t\t\t<ChevronDown\n+\t\t\t\t\tclassName={cn(\"size-3 transition-transform duration-200\", {\n+\t\t\t\t\t\t\"rotate-0\": isExpanded,\n+\t\t\t\t\t\t\"-rotate-90\": !isExpanded,\n+\t\t\t\t\t})}\n+\t\t\t\t/>\n+\t\t\t\t<span className=\"font-medium\">{t(\"chat:commandExecution.manageCommands\")}</span>\n+\t\t\t</button>\n+\t\t\t{isExpanded && (\n+\t\t\t\t<div className=\"px-3 pb-3 space-y-2\">\n+\t\t\t\t\t<div className=\"text-xs text-vscode-descriptionForeground mb-2 ml-5\">\n+\t\t\t\t\t\t{t(\"chat:commandExecution.commandManagementDescription\")}\n+\t\t\t\t\t</div>\n+\t\t\t\t\t{patterns.map((item, index) => {\n+\t\t\t\t\t\tconst status = getPatternStatus(item.pattern)\n+\t\t\t\t\t\treturn (\n+\t\t\t\t\t\t\t<div key={`${item.pattern}-${index}`} className=\"ml-5 flex items-center gap-2\">\n+\t\t\t\t\t\t\t\t<div className=\"flex-1\">\n+\t\t\t\t\t\t\t\t\t<span className=\"font-mono text-xs text-vscode-foreground\">{item.pattern}</span>\n+\t\t\t\t\t\t\t\t\t{item.description && (\n+\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs text-vscode-descriptionForeground ml-2\">\n+\t\t\t\t\t\t\t\t\t\t\t- {item.description}\n+\t\t\t\t\t\t\t\t\t\t</span>\n+\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t</div>\n+\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1\">\n+\t\t\t\t\t\t\t\t\t<button\n+\t\t\t\t\t\t\t\t\t\tonClick={() => handleAllowClick(item.pattern)}\n+\t\t\t\t\t\t\t\t\t\tclassName={cn(\n+\t\t\t\t\t\t\t\t\t\t\t\"p-1 rounded transition-all\",\n+\t\t\t\t\t\t\t\t\t\t\tstatus === \"allowed\"\n+\t\t\t\t\t\t\t\t\t\t\t\t? \"bg-green-500/20 text-green-500 hover:bg-green-500/30\"\n+\t\t\t\t\t\t\t\t\t\t\t\t: \"text-vscode-descriptionForeground hover:text-green-500 hover:bg-green-500/10\",\n+\t\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t\t\taria-label={\n+\t\t\t\t\t\t\t\t\t\t\tstatus === \"allowed\"",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2205858083",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5491,
        "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
        "discussion_id": "2205858083",
        "commented_code": "@@ -0,0 +1,134 @@\n+import { useState } from \"react\"\n+import { ChevronDown, Check, X } from \"lucide-react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tdeniedCommands: string[]\n+\tonAllowPatternChange: (pattern: string) => void\n+\tonDenyPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({\n+\tpatterns,\n+\tallowedCommands,\n+\tdeniedCommands,\n+\tonAllowPatternChange,\n+\tonDenyPatternChange,\n+}: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\tconst getPatternStatus = (pattern: string): \"allowed\" | \"denied\" | \"none\" => {\n+\t\tif (allowedCommands.includes(pattern)) return \"allowed\"\n+\t\tif (deniedCommands.includes(pattern)) return \"denied\"\n+\t\treturn \"none\"\n+\t}\n+\n+\tconst handleAllowClick = (pattern: string) => {\n+\t\tconst status = getPatternStatus(pattern)\n+\t\tif (status === \"denied\") {\n+\t\t\t// Remove from denied list first\n+\t\t\tonDenyPatternChange(pattern)\n+\t\t}\n+\t\t// Toggle allow status\n+\t\tonAllowPatternChange(pattern)\n+\t}\n+\n+\tconst handleDenyClick = (pattern: string) => {\n+\t\tconst status = getPatternStatus(pattern)\n+\t\tif (status === \"allowed\") {\n+\t\t\t// Remove from allowed list first\n+\t\t\tonAllowPatternChange(pattern)\n+\t\t}\n+\t\t// Toggle deny status\n+\t\tonDenyPatternChange(pattern)\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse command management section\" : \"Expand command management section\"}\n+\t\t\t\taria-expanded={isExpanded}>\n+\t\t\t\t<ChevronDown\n+\t\t\t\t\tclassName={cn(\"size-3 transition-transform duration-200\", {\n+\t\t\t\t\t\t\"rotate-0\": isExpanded,\n+\t\t\t\t\t\t\"-rotate-90\": !isExpanded,\n+\t\t\t\t\t})}\n+\t\t\t\t/>\n+\t\t\t\t<span className=\"font-medium\">{t(\"chat:commandExecution.manageCommands\")}</span>\n+\t\t\t</button>\n+\t\t\t{isExpanded && (\n+\t\t\t\t<div className=\"px-3 pb-3 space-y-2\">\n+\t\t\t\t\t<div className=\"text-xs text-vscode-descriptionForeground mb-2 ml-5\">\n+\t\t\t\t\t\t{t(\"chat:commandExecution.commandManagementDescription\")}\n+\t\t\t\t\t</div>\n+\t\t\t\t\t{patterns.map((item, index) => {\n+\t\t\t\t\t\tconst status = getPatternStatus(item.pattern)\n+\t\t\t\t\t\treturn (\n+\t\t\t\t\t\t\t<div key={`${item.pattern}-${index}`} className=\"ml-5 flex items-center gap-2\">\n+\t\t\t\t\t\t\t\t<div className=\"flex-1\">\n+\t\t\t\t\t\t\t\t\t<span className=\"font-mono text-xs text-vscode-foreground\">{item.pattern}</span>\n+\t\t\t\t\t\t\t\t\t{item.description && (\n+\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs text-vscode-descriptionForeground ml-2\">\n+\t\t\t\t\t\t\t\t\t\t\t- {item.description}\n+\t\t\t\t\t\t\t\t\t\t</span>\n+\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t</div>\n+\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1\">\n+\t\t\t\t\t\t\t\t\t<button\n+\t\t\t\t\t\t\t\t\t\tonClick={() => handleAllowClick(item.pattern)}\n+\t\t\t\t\t\t\t\t\t\tclassName={cn(\n+\t\t\t\t\t\t\t\t\t\t\t\"p-1 rounded transition-all\",\n+\t\t\t\t\t\t\t\t\t\t\tstatus === \"allowed\"\n+\t\t\t\t\t\t\t\t\t\t\t\t? \"bg-green-500/20 text-green-500 hover:bg-green-500/30\"\n+\t\t\t\t\t\t\t\t\t\t\t\t: \"text-vscode-descriptionForeground hover:text-green-500 hover:bg-green-500/10\",\n+\t\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t\t\taria-label={\n+\t\t\t\t\t\t\t\t\t\t\tstatus === \"allowed\"",
        "comment_created_at": "2025-07-14T21:26:13+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "The aria-labels for the allow/deny buttons are hardcoded (e.g., 'Remove ${item.pattern} from allowed list'). For consistency with localization best practices, consider extracting these labels into translation keys using the t() function.\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2205886644",
    "pr_number": 5491,
    "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
    "created_at": "2025-07-14T21:49:32+00:00",
    "commented_code": "+import { useState } from \"react\"\n+import { ChevronDown, Check, X } from \"lucide-react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+import { StandardTooltip } from \"@src/components/ui/standard-tooltip\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tdeniedCommands: string[]\n+\tonAllowPatternChange: (pattern: string) => void\n+\tonDenyPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({\n+\tpatterns,\n+\tallowedCommands,\n+\tdeniedCommands,\n+\tonAllowPatternChange,\n+\tonDenyPatternChange,\n+}: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\tconst getPatternStatus = (pattern: string): \"allowed\" | \"denied\" | \"none\" => {\n+\t\tif (allowedCommands.includes(pattern)) return \"allowed\"\n+\t\tif (deniedCommands.includes(pattern)) return \"denied\"\n+\t\treturn \"none\"\n+\t}\n+\n+\tconst handleAllowClick = (pattern: string) => {\n+\t\t// The handler in CommandExecution will take care of mutual exclusivity\n+\t\tonAllowPatternChange(pattern)\n+\t}\n+\n+\tconst handleDenyClick = (pattern: string) => {\n+\t\t// The handler in CommandExecution will take care of mutual exclusivity\n+\t\tonDenyPatternChange(pattern)\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse command management section\" : \"Expand command management section\"}\n+\t\t\t\taria-expanded={isExpanded}>\n+\t\t\t\t<ChevronDown\n+\t\t\t\t\tclassName={cn(\"size-3 transition-transform duration-200\", {\n+\t\t\t\t\t\t\"rotate-0\": isExpanded,\n+\t\t\t\t\t\t\"-rotate-90\": !isExpanded,\n+\t\t\t\t\t})}\n+\t\t\t\t/>\n+\t\t\t\t<span className=\"font-medium\">{t(\"chat:commandExecution.manageCommands\")}</span>\n+\t\t\t\t{isExpanded && (\n+\t\t\t\t\t<StandardTooltip content={t(\"chat:commandExecution.commandManagementDescription\")}>\n+\t\t\t\t\t\t<i\n+\t\t\t\t\t\t\tclassName=\"codicon codicon-info text-vscode-descriptionForeground ml-1\"\n+\t\t\t\t\t\t\tstyle={{ fontSize: \"12px\" }}\n+\t\t\t\t\t\t/>\n+\t\t\t\t\t</StandardTooltip>\n+\t\t\t\t)}\n+\t\t\t</button>\n+\t\t\t{isExpanded && (\n+\t\t\t\t<div className=\"px-3 pb-3 space-y-2\">\n+\t\t\t\t\t{patterns.map((item, index) => {\n+\t\t\t\t\t\tconst status = getPatternStatus(item.pattern)\n+\t\t\t\t\t\treturn (\n+\t\t\t\t\t\t\t<div key={`${item.pattern}-${index}`} className=\"ml-5 flex items-center gap-2\">\n+\t\t\t\t\t\t\t\t<div className=\"flex-1\">\n+\t\t\t\t\t\t\t\t\t<span className=\"font-mono text-xs text-vscode-foreground\">{item.pattern}</span>\n+\t\t\t\t\t\t\t\t\t{item.description && (\n+\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs text-vscode-descriptionForeground ml-2\">\n+\t\t\t\t\t\t\t\t\t\t\t- {item.description}\n+\t\t\t\t\t\t\t\t\t\t</span>\n+\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t</div>\n+\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1\">\n+\t\t\t\t\t\t\t\t\t<StandardTooltip\n+\t\t\t\t\t\t\t\t\t\tcontent={status === \"allowed\" ? \"Remove from allowed\" : \"Add to allowed\"}>",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2205886644",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5491,
        "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
        "discussion_id": "2205886644",
        "commented_code": "@@ -0,0 +1,134 @@\n+import { useState } from \"react\"\n+import { ChevronDown, Check, X } from \"lucide-react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+import { StandardTooltip } from \"@src/components/ui/standard-tooltip\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tdeniedCommands: string[]\n+\tonAllowPatternChange: (pattern: string) => void\n+\tonDenyPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({\n+\tpatterns,\n+\tallowedCommands,\n+\tdeniedCommands,\n+\tonAllowPatternChange,\n+\tonDenyPatternChange,\n+}: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\tconst getPatternStatus = (pattern: string): \"allowed\" | \"denied\" | \"none\" => {\n+\t\tif (allowedCommands.includes(pattern)) return \"allowed\"\n+\t\tif (deniedCommands.includes(pattern)) return \"denied\"\n+\t\treturn \"none\"\n+\t}\n+\n+\tconst handleAllowClick = (pattern: string) => {\n+\t\t// The handler in CommandExecution will take care of mutual exclusivity\n+\t\tonAllowPatternChange(pattern)\n+\t}\n+\n+\tconst handleDenyClick = (pattern: string) => {\n+\t\t// The handler in CommandExecution will take care of mutual exclusivity\n+\t\tonDenyPatternChange(pattern)\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse command management section\" : \"Expand command management section\"}\n+\t\t\t\taria-expanded={isExpanded}>\n+\t\t\t\t<ChevronDown\n+\t\t\t\t\tclassName={cn(\"size-3 transition-transform duration-200\", {\n+\t\t\t\t\t\t\"rotate-0\": isExpanded,\n+\t\t\t\t\t\t\"-rotate-90\": !isExpanded,\n+\t\t\t\t\t})}\n+\t\t\t\t/>\n+\t\t\t\t<span className=\"font-medium\">{t(\"chat:commandExecution.manageCommands\")}</span>\n+\t\t\t\t{isExpanded && (\n+\t\t\t\t\t<StandardTooltip content={t(\"chat:commandExecution.commandManagementDescription\")}>\n+\t\t\t\t\t\t<i\n+\t\t\t\t\t\t\tclassName=\"codicon codicon-info text-vscode-descriptionForeground ml-1\"\n+\t\t\t\t\t\t\tstyle={{ fontSize: \"12px\" }}\n+\t\t\t\t\t\t/>\n+\t\t\t\t\t</StandardTooltip>\n+\t\t\t\t)}\n+\t\t\t</button>\n+\t\t\t{isExpanded && (\n+\t\t\t\t<div className=\"px-3 pb-3 space-y-2\">\n+\t\t\t\t\t{patterns.map((item, index) => {\n+\t\t\t\t\t\tconst status = getPatternStatus(item.pattern)\n+\t\t\t\t\t\treturn (\n+\t\t\t\t\t\t\t<div key={`${item.pattern}-${index}`} className=\"ml-5 flex items-center gap-2\">\n+\t\t\t\t\t\t\t\t<div className=\"flex-1\">\n+\t\t\t\t\t\t\t\t\t<span className=\"font-mono text-xs text-vscode-foreground\">{item.pattern}</span>\n+\t\t\t\t\t\t\t\t\t{item.description && (\n+\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs text-vscode-descriptionForeground ml-2\">\n+\t\t\t\t\t\t\t\t\t\t\t- {item.description}\n+\t\t\t\t\t\t\t\t\t\t</span>\n+\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t</div>\n+\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1\">\n+\t\t\t\t\t\t\t\t\t<StandardTooltip\n+\t\t\t\t\t\t\t\t\t\tcontent={status === \"allowed\" ? \"Remove from allowed\" : \"Add to allowed\"}>",
        "comment_created_at": "2025-07-14T21:49:32+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Consider using translation keys via the t() function for the tooltip content on the allow button instead of inline English strings. For example, replace the literal strings \"Remove from allowed\" and \"Add to allowed\" with corresponding translation keys for consistency and internationalization.\n```suggestion\n\t\t\t\t\t\t\t\t\t\tcontent={status === \"allowed\" ? t(\"chat:commandExecution.removeFromAllowed\") : t(\"chat:commandExecution.addToAllowed\")}>\n```\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2205886647",
    "pr_number": 5491,
    "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
    "created_at": "2025-07-14T21:49:32+00:00",
    "commented_code": "+import { useState } from \"react\"\n+import { ChevronDown, Check, X } from \"lucide-react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+import { StandardTooltip } from \"@src/components/ui/standard-tooltip\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tdeniedCommands: string[]\n+\tonAllowPatternChange: (pattern: string) => void\n+\tonDenyPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({\n+\tpatterns,\n+\tallowedCommands,\n+\tdeniedCommands,\n+\tonAllowPatternChange,\n+\tonDenyPatternChange,\n+}: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\tconst getPatternStatus = (pattern: string): \"allowed\" | \"denied\" | \"none\" => {\n+\t\tif (allowedCommands.includes(pattern)) return \"allowed\"\n+\t\tif (deniedCommands.includes(pattern)) return \"denied\"\n+\t\treturn \"none\"\n+\t}\n+\n+\tconst handleAllowClick = (pattern: string) => {\n+\t\t// The handler in CommandExecution will take care of mutual exclusivity\n+\t\tonAllowPatternChange(pattern)\n+\t}\n+\n+\tconst handleDenyClick = (pattern: string) => {\n+\t\t// The handler in CommandExecution will take care of mutual exclusivity\n+\t\tonDenyPatternChange(pattern)\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse command management section\" : \"Expand command management section\"}\n+\t\t\t\taria-expanded={isExpanded}>\n+\t\t\t\t<ChevronDown\n+\t\t\t\t\tclassName={cn(\"size-3 transition-transform duration-200\", {\n+\t\t\t\t\t\t\"rotate-0\": isExpanded,\n+\t\t\t\t\t\t\"-rotate-90\": !isExpanded,\n+\t\t\t\t\t})}\n+\t\t\t\t/>\n+\t\t\t\t<span className=\"font-medium\">{t(\"chat:commandExecution.manageCommands\")}</span>\n+\t\t\t\t{isExpanded && (\n+\t\t\t\t\t<StandardTooltip content={t(\"chat:commandExecution.commandManagementDescription\")}>\n+\t\t\t\t\t\t<i\n+\t\t\t\t\t\t\tclassName=\"codicon codicon-info text-vscode-descriptionForeground ml-1\"\n+\t\t\t\t\t\t\tstyle={{ fontSize: \"12px\" }}\n+\t\t\t\t\t\t/>\n+\t\t\t\t\t</StandardTooltip>\n+\t\t\t\t)}\n+\t\t\t</button>\n+\t\t\t{isExpanded && (\n+\t\t\t\t<div className=\"px-3 pb-3 space-y-2\">\n+\t\t\t\t\t{patterns.map((item, index) => {\n+\t\t\t\t\t\tconst status = getPatternStatus(item.pattern)\n+\t\t\t\t\t\treturn (\n+\t\t\t\t\t\t\t<div key={`${item.pattern}-${index}`} className=\"ml-5 flex items-center gap-2\">\n+\t\t\t\t\t\t\t\t<div className=\"flex-1\">\n+\t\t\t\t\t\t\t\t\t<span className=\"font-mono text-xs text-vscode-foreground\">{item.pattern}</span>\n+\t\t\t\t\t\t\t\t\t{item.description && (\n+\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs text-vscode-descriptionForeground ml-2\">\n+\t\t\t\t\t\t\t\t\t\t\t- {item.description}\n+\t\t\t\t\t\t\t\t\t\t</span>\n+\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t</div>\n+\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1\">\n+\t\t\t\t\t\t\t\t\t<StandardTooltip\n+\t\t\t\t\t\t\t\t\t\tcontent={status === \"allowed\" ? \"Remove from allowed\" : \"Add to allowed\"}>\n+\t\t\t\t\t\t\t\t\t\t<button\n+\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleAllowClick(item.pattern)}\n+\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n+\t\t\t\t\t\t\t\t\t\t\t\t\"p-1 rounded transition-all\",\n+\t\t\t\t\t\t\t\t\t\t\t\tstatus === \"allowed\"\n+\t\t\t\t\t\t\t\t\t\t\t\t\t? \"bg-green-500/20 text-green-500 hover:bg-green-500/30\"\n+\t\t\t\t\t\t\t\t\t\t\t\t\t: \"text-vscode-descriptionForeground hover:text-green-500 hover:bg-green-500/10\",\n+\t\t\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t\t\t\taria-label={\n+\t\t\t\t\t\t\t\t\t\t\t\tstatus === \"allowed\"\n+\t\t\t\t\t\t\t\t\t\t\t\t\t? `Remove ${item.pattern} from allowed list`\n+\t\t\t\t\t\t\t\t\t\t\t\t\t: `Add ${item.pattern} to allowed list`\n+\t\t\t\t\t\t\t\t\t\t\t}>\n+\t\t\t\t\t\t\t\t\t\t\t<Check className=\"size-3.5\" />\n+\t\t\t\t\t\t\t\t\t\t</button>\n+\t\t\t\t\t\t\t\t\t</StandardTooltip>\n+\t\t\t\t\t\t\t\t\t<StandardTooltip\n+\t\t\t\t\t\t\t\t\t\tcontent={status === \"denied\" ? \"Remove from denied\" : \"Add to denied\"}>",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2205886647",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5491,
        "pr_file": "webview-ui/src/components/chat/CommandPatternSelector.tsx",
        "discussion_id": "2205886647",
        "commented_code": "@@ -0,0 +1,134 @@\n+import { useState } from \"react\"\n+import { ChevronDown, Check, X } from \"lucide-react\"\n+import { useAppTranslation } from \"@src/i18n/TranslationContext\"\n+import { cn } from \"@src/lib/utils\"\n+import { StandardTooltip } from \"@src/components/ui/standard-tooltip\"\n+\n+interface CommandPattern {\n+\tpattern: string\n+\tdescription: string\n+}\n+\n+interface CommandPatternSelectorProps {\n+\tpatterns: CommandPattern[]\n+\tallowedCommands: string[]\n+\tdeniedCommands: string[]\n+\tonAllowPatternChange: (pattern: string) => void\n+\tonDenyPatternChange: (pattern: string) => void\n+}\n+\n+export const CommandPatternSelector = ({\n+\tpatterns,\n+\tallowedCommands,\n+\tdeniedCommands,\n+\tonAllowPatternChange,\n+\tonDenyPatternChange,\n+}: CommandPatternSelectorProps) => {\n+\tconst { t } = useAppTranslation()\n+\tconst [isExpanded, setIsExpanded] = useState(false)\n+\n+\tif (patterns.length === 0) {\n+\t\treturn null\n+\t}\n+\n+\tconst getPatternStatus = (pattern: string): \"allowed\" | \"denied\" | \"none\" => {\n+\t\tif (allowedCommands.includes(pattern)) return \"allowed\"\n+\t\tif (deniedCommands.includes(pattern)) return \"denied\"\n+\t\treturn \"none\"\n+\t}\n+\n+\tconst handleAllowClick = (pattern: string) => {\n+\t\t// The handler in CommandExecution will take care of mutual exclusivity\n+\t\tonAllowPatternChange(pattern)\n+\t}\n+\n+\tconst handleDenyClick = (pattern: string) => {\n+\t\t// The handler in CommandExecution will take care of mutual exclusivity\n+\t\tonDenyPatternChange(pattern)\n+\t}\n+\n+\treturn (\n+\t\t<div className=\"border-t border-vscode-panel-border bg-vscode-sideBar-background/30\">\n+\t\t\t<button\n+\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\n+\t\t\t\tclassName=\"flex items-center gap-2 w-full px-3 py-2 text-xs text-vscode-descriptionForeground hover:text-vscode-foreground hover:bg-vscode-list-hoverBackground transition-all\"\n+\t\t\t\taria-label={isExpanded ? \"Collapse command management section\" : \"Expand command management section\"}\n+\t\t\t\taria-expanded={isExpanded}>\n+\t\t\t\t<ChevronDown\n+\t\t\t\t\tclassName={cn(\"size-3 transition-transform duration-200\", {\n+\t\t\t\t\t\t\"rotate-0\": isExpanded,\n+\t\t\t\t\t\t\"-rotate-90\": !isExpanded,\n+\t\t\t\t\t})}\n+\t\t\t\t/>\n+\t\t\t\t<span className=\"font-medium\">{t(\"chat:commandExecution.manageCommands\")}</span>\n+\t\t\t\t{isExpanded && (\n+\t\t\t\t\t<StandardTooltip content={t(\"chat:commandExecution.commandManagementDescription\")}>\n+\t\t\t\t\t\t<i\n+\t\t\t\t\t\t\tclassName=\"codicon codicon-info text-vscode-descriptionForeground ml-1\"\n+\t\t\t\t\t\t\tstyle={{ fontSize: \"12px\" }}\n+\t\t\t\t\t\t/>\n+\t\t\t\t\t</StandardTooltip>\n+\t\t\t\t)}\n+\t\t\t</button>\n+\t\t\t{isExpanded && (\n+\t\t\t\t<div className=\"px-3 pb-3 space-y-2\">\n+\t\t\t\t\t{patterns.map((item, index) => {\n+\t\t\t\t\t\tconst status = getPatternStatus(item.pattern)\n+\t\t\t\t\t\treturn (\n+\t\t\t\t\t\t\t<div key={`${item.pattern}-${index}`} className=\"ml-5 flex items-center gap-2\">\n+\t\t\t\t\t\t\t\t<div className=\"flex-1\">\n+\t\t\t\t\t\t\t\t\t<span className=\"font-mono text-xs text-vscode-foreground\">{item.pattern}</span>\n+\t\t\t\t\t\t\t\t\t{item.description && (\n+\t\t\t\t\t\t\t\t\t\t<span className=\"text-xs text-vscode-descriptionForeground ml-2\">\n+\t\t\t\t\t\t\t\t\t\t\t- {item.description}\n+\t\t\t\t\t\t\t\t\t\t</span>\n+\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t</div>\n+\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1\">\n+\t\t\t\t\t\t\t\t\t<StandardTooltip\n+\t\t\t\t\t\t\t\t\t\tcontent={status === \"allowed\" ? \"Remove from allowed\" : \"Add to allowed\"}>\n+\t\t\t\t\t\t\t\t\t\t<button\n+\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleAllowClick(item.pattern)}\n+\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n+\t\t\t\t\t\t\t\t\t\t\t\t\"p-1 rounded transition-all\",\n+\t\t\t\t\t\t\t\t\t\t\t\tstatus === \"allowed\"\n+\t\t\t\t\t\t\t\t\t\t\t\t\t? \"bg-green-500/20 text-green-500 hover:bg-green-500/30\"\n+\t\t\t\t\t\t\t\t\t\t\t\t\t: \"text-vscode-descriptionForeground hover:text-green-500 hover:bg-green-500/10\",\n+\t\t\t\t\t\t\t\t\t\t\t)}\n+\t\t\t\t\t\t\t\t\t\t\taria-label={\n+\t\t\t\t\t\t\t\t\t\t\t\tstatus === \"allowed\"\n+\t\t\t\t\t\t\t\t\t\t\t\t\t? `Remove ${item.pattern} from allowed list`\n+\t\t\t\t\t\t\t\t\t\t\t\t\t: `Add ${item.pattern} to allowed list`\n+\t\t\t\t\t\t\t\t\t\t\t}>\n+\t\t\t\t\t\t\t\t\t\t\t<Check className=\"size-3.5\" />\n+\t\t\t\t\t\t\t\t\t\t</button>\n+\t\t\t\t\t\t\t\t\t</StandardTooltip>\n+\t\t\t\t\t\t\t\t\t<StandardTooltip\n+\t\t\t\t\t\t\t\t\t\tcontent={status === \"denied\" ? \"Remove from denied\" : \"Add to denied\"}>",
        "comment_created_at": "2025-07-14T21:49:32+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Similarly, use translated tooltip content for the deny button instead of inline English strings. Replace \"Remove from denied\" and \"Add to denied\" with translation keys to support multiple languages.\n```suggestion\n\t\t\t\t\t\t\t\t\t\tcontent={status === \"denied\" ? t(\"chat:commandExecution.removeFromDenied\") : t(\"chat:commandExecution.addToDenied\")}>\n```\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2207225399",
    "pr_number": 5732,
    "pr_file": "webview-ui/src/components/common/ErrorBoundary.tsx",
    "created_at": "2025-07-15T11:28:02+00:00",
    "commented_code": "+import React from \"react\"\n+import { ErrorBoundary as ReactErrorBoundary, FallbackProps } from \"react-error-boundary\"\n+import { VSCodeButton } from \"@vscode/webview-ui-toolkit/react\"\n+import { useTranslation } from \"react-i18next\"\n+import { errorReporter } from \"../../utils/errorReporting\"\n+\n+interface ErrorFallbackProps extends FallbackProps {\n+\tcomponentName?: string\n+}\n+\n+function ErrorFallback({ error, resetErrorBoundary, componentName }: ErrorFallbackProps) {\n+\tconst { t } = useTranslation(\"common\")\n+\n+\treturn (\n+\t\t<div className=\"flex flex-col items-center justify-center p-6 bg-vscode-editor-background border border-vscode-widget-border rounded-md m-4\">\n+\t\t\t<div className=\"flex items-center mb-4\">\n+\t\t\t\t<span className=\"codicon codicon-error text-vscode-errorForeground text-2xl mr-3\" />\n+\t\t\t\t<h2 className=\"text-lg font-semibold text-vscode-editor-foreground\">\n+\t\t\t\t\t{t(\"errorBoundary.title\", \"Something went wrong\")}",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2207225399",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5732,
        "pr_file": "webview-ui/src/components/common/ErrorBoundary.tsx",
        "discussion_id": "2207225399",
        "commented_code": "@@ -0,0 +1,82 @@\n+import React from \"react\"\n+import { ErrorBoundary as ReactErrorBoundary, FallbackProps } from \"react-error-boundary\"\n+import { VSCodeButton } from \"@vscode/webview-ui-toolkit/react\"\n+import { useTranslation } from \"react-i18next\"\n+import { errorReporter } from \"../../utils/errorReporting\"\n+\n+interface ErrorFallbackProps extends FallbackProps {\n+\tcomponentName?: string\n+}\n+\n+function ErrorFallback({ error, resetErrorBoundary, componentName }: ErrorFallbackProps) {\n+\tconst { t } = useTranslation(\"common\")\n+\n+\treturn (\n+\t\t<div className=\"flex flex-col items-center justify-center p-6 bg-vscode-editor-background border border-vscode-widget-border rounded-md m-4\">\n+\t\t\t<div className=\"flex items-center mb-4\">\n+\t\t\t\t<span className=\"codicon codicon-error text-vscode-errorForeground text-2xl mr-3\" />\n+\t\t\t\t<h2 className=\"text-lg font-semibold text-vscode-editor-foreground\">\n+\t\t\t\t\t{t(\"errorBoundary.title\", \"Something went wrong\")}",
        "comment_created_at": "2025-07-15T11:28:02+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Avoid using inline fallback strings in translation calls. Remove the second argument in t() (e.g. in t('errorBoundary.title', 'Something went wrong')) and rely solely on translations defined in the JSON files per our guidelines.\n```suggestion\n\t\t\t\t\t{t(\"errorBoundary.title\")}\n```\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2174717546",
    "pr_number": 5268,
    "pr_file": "webview-ui/src/components/chat/SystemPromptWarning.tsx",
    "created_at": "2025-06-30T10:09:37+00:00",
    "commented_code": "import React from \"react\"\n import { useAppTranslation } from \"@/i18n/TranslationContext\"\n+import { useExtensionState } from \"@/context/ExtensionStateContext\"\n \n export const SystemPromptWarning: React.FC = () => {\n \tconst { t } = useAppTranslation()\n+\tconst { setSystemPromptWarningDismissed } = useExtensionState()\n+\n+\tconst handleDismiss = () => {\n+\t\tsetSystemPromptWarningDismissed(true)\n+\t}\n \n \treturn (\n \t\t<div className=\"flex items-center px-4 py-2 mb-2 text-sm rounded bg-vscode-editorWarning-foreground text-vscode-editor-background\">\n \t\t\t<div className=\"flex items-center justify-center w-5 h-5 mr-2\">\n \t\t\t\t<span className=\"codicon codicon-warning\" />\n \t\t\t</div>\n-\t\t\t<span>{t(\"chat:systemPromptWarning\")}</span>\n+\t\t\t<span className=\"flex-1\">{t(\"chat:systemPromptWarning\")}</span>\n+\t\t\t<button\n+\t\t\t\tonClick={handleDismiss}\n+\t\t\t\tclassName=\"flex items-center justify-center w-5 h-5 ml-2 hover:bg-vscode-editor-background hover:bg-opacity-20 rounded\"\n+\t\t\t\ttitle=\"Dismiss warning\">",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2174717546",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5268,
        "pr_file": "webview-ui/src/components/chat/SystemPromptWarning.tsx",
        "discussion_id": "2174717546",
        "commented_code": "@@ -1,15 +1,27 @@\n import React from \"react\"\n import { useAppTranslation } from \"@/i18n/TranslationContext\"\n+import { useExtensionState } from \"@/context/ExtensionStateContext\"\n \n export const SystemPromptWarning: React.FC = () => {\n \tconst { t } = useAppTranslation()\n+\tconst { setSystemPromptWarningDismissed } = useExtensionState()\n+\n+\tconst handleDismiss = () => {\n+\t\tsetSystemPromptWarningDismissed(true)\n+\t}\n \n \treturn (\n \t\t<div className=\"flex items-center px-4 py-2 mb-2 text-sm rounded bg-vscode-editorWarning-foreground text-vscode-editor-background\">\n \t\t\t<div className=\"flex items-center justify-center w-5 h-5 mr-2\">\n \t\t\t\t<span className=\"codicon codicon-warning\" />\n \t\t\t</div>\n-\t\t\t<span>{t(\"chat:systemPromptWarning\")}</span>\n+\t\t\t<span className=\"flex-1\">{t(\"chat:systemPromptWarning\")}</span>\n+\t\t\t<button\n+\t\t\t\tonClick={handleDismiss}\n+\t\t\t\tclassName=\"flex items-center justify-center w-5 h-5 ml-2 hover:bg-vscode-editor-background hover:bg-opacity-20 rounded\"\n+\t\t\t\ttitle=\"Dismiss warning\">",
        "comment_created_at": "2025-06-30T10:09:37+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Consider using a translatable label for the dismiss button title (e.g., t('chat:dismissWarning')) instead of the hardcoded string.\n```suggestion\n\t\t\t\ttitle={t(\"chat:dismissWarning\")}>\n```\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2175819369",
    "pr_number": 5291,
    "pr_file": "webview-ui/src/components/chat/EmojiReactions.tsx",
    "created_at": "2025-06-30T20:15:48+00:00",
    "commented_code": "+import React, { useState, useRef, useEffect } from \"react\"\n+import { Button } from \"@src/components/ui\"\n+import { cn } from \"@src/lib/utils\"\n+\n+interface EmojiReactionsProps {\n+\tmessageTs: number\n+\treactions?: Record<string, number>\n+\tonAddReaction: (emoji: string) => void\n+\tonRemoveReaction: (emoji: string) => void\n+\tclassName?: string\n+}\n+\n+const COMMON_EMOJIS = [\n+\t\"\ud83d\udc4d\", \"\ud83d\udc4e\", \"\u2764\ufe0f\", \"\ud83d\ude02\", \"\ud83d\ude2e\", \"\ud83d\ude22\", \"\ud83d\ude21\", \"\ud83c\udf89\", \n+\t\"\ud83d\ude80\", \"\ud83d\udc40\", \"\ud83d\udcaf\", \"\ud83d\udd25\", \"\u2b50\", \"\u2705\", \"\u274c\", \"\ud83e\udd14\"\n+]\n+\n+export const EmojiReactions = ({\n+\tmessageTs,\n+\treactions = {},\n+\tonAddReaction,\n+\tonRemoveReaction,\n+\tclassName,\n+}) => {\n+\tconst [showPicker, setShowPicker] = useState(false)\n+\tconst pickerRef = useRef<HTMLDivElement>(null)\n+\n+\t// Close picker when clicking outside\n+\tuseEffect(() => {\n+\t\tconst handleClickOutside = (event: MouseEvent) => {\n+\t\t\tif (pickerRef.current && !pickerRef.current.contains(event.target as Node)) {\n+\t\t\t\tsetShowPicker(false)\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (showPicker) {\n+\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside)\n+\t\t}\n+\n+\t\treturn () => {\n+\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside)\n+\t\t}\n+\t}, [showPicker])\n+\n+\tconst handleEmojiClick = (emoji: string) => {\n+\t\tif (reactions && reactions[emoji] && reactions[emoji] > 0) {\n+\t\t\tonRemoveReaction(emoji)\n+\t\t} else {\n+\t\t\tonAddReaction(emoji)\n+\t\t}\n+\t\tsetShowPicker(false)\n+\t}\n+\n+\tconst hasReactions = Object.keys(reactions).some(emoji => reactions[emoji] > 0)\n+\n+\treturn (\n+\t\t<div className={cn(\"relative flex items-center gap-1 mt-2\", className)}>\n+\t\t\t{/* Existing reactions */}\n+\t\t\t{reactions && Object.entries(reactions)\n+\t\t\t\t.filter(([_, count]) => (count as number) > 0)\n+\t\t\t\t.map(([emoji, count]) => (\n+\t\t\t\t\t<Button\n+\t\t\t\t\t\tkey={emoji}\n+\t\t\t\t\t\tvariant=\"outline\"\n+\t\t\t\t\t\tsize=\"sm\"\n+\t\t\t\t\t\tclassName=\"h-6 px-2 py-0 text-xs bg-vscode-button-secondaryBackground hover:bg-vscode-button-secondaryHoverBackground border-vscode-button-border\"\n+\t\t\t\t\t\tonClick={() => handleEmojiClick(emoji)}\n+\t\t\t\t\t>\n+\t\t\t\t\t\t<span className=\"mr-1\">{emoji}</span>\n+\t\t\t\t\t\t<span>{count as number}</span>\n+\t\t\t\t\t</Button>\n+\t\t\t\t))}\n+\n+\t\t\t{/* Add reaction button */}\n+\t\t\t<div className=\"relative\" ref={pickerRef}>\n+\t\t\t\t<Button\n+\t\t\t\t\tvariant=\"ghost\"\n+\t\t\t\t\tsize=\"sm\"\n+\t\t\t\t\tclassName=\"h-6 w-6 p-0 text-xs hover:bg-vscode-button-secondaryHoverBackground\"\n+\t\t\t\t\tonClick={() => setShowPicker(!showPicker)}\n+\t\t\t\t\ttitle=\"Add reaction\"",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2175819369",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5291,
        "pr_file": "webview-ui/src/components/chat/EmojiReactions.tsx",
        "discussion_id": "2175819369",
        "commented_code": "@@ -0,0 +1,107 @@\n+import React, { useState, useRef, useEffect } from \"react\"\n+import { Button } from \"@src/components/ui\"\n+import { cn } from \"@src/lib/utils\"\n+\n+interface EmojiReactionsProps {\n+\tmessageTs: number\n+\treactions?: Record<string, number>\n+\tonAddReaction: (emoji: string) => void\n+\tonRemoveReaction: (emoji: string) => void\n+\tclassName?: string\n+}\n+\n+const COMMON_EMOJIS = [\n+\t\"\ud83d\udc4d\", \"\ud83d\udc4e\", \"\u2764\ufe0f\", \"\ud83d\ude02\", \"\ud83d\ude2e\", \"\ud83d\ude22\", \"\ud83d\ude21\", \"\ud83c\udf89\", \n+\t\"\ud83d\ude80\", \"\ud83d\udc40\", \"\ud83d\udcaf\", \"\ud83d\udd25\", \"\u2b50\", \"\u2705\", \"\u274c\", \"\ud83e\udd14\"\n+]\n+\n+export const EmojiReactions = ({\n+\tmessageTs,\n+\treactions = {},\n+\tonAddReaction,\n+\tonRemoveReaction,\n+\tclassName,\n+}) => {\n+\tconst [showPicker, setShowPicker] = useState(false)\n+\tconst pickerRef = useRef<HTMLDivElement>(null)\n+\n+\t// Close picker when clicking outside\n+\tuseEffect(() => {\n+\t\tconst handleClickOutside = (event: MouseEvent) => {\n+\t\t\tif (pickerRef.current && !pickerRef.current.contains(event.target as Node)) {\n+\t\t\t\tsetShowPicker(false)\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (showPicker) {\n+\t\t\tdocument.addEventListener(\"mousedown\", handleClickOutside)\n+\t\t}\n+\n+\t\treturn () => {\n+\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside)\n+\t\t}\n+\t}, [showPicker])\n+\n+\tconst handleEmojiClick = (emoji: string) => {\n+\t\tif (reactions && reactions[emoji] && reactions[emoji] > 0) {\n+\t\t\tonRemoveReaction(emoji)\n+\t\t} else {\n+\t\t\tonAddReaction(emoji)\n+\t\t}\n+\t\tsetShowPicker(false)\n+\t}\n+\n+\tconst hasReactions = Object.keys(reactions).some(emoji => reactions[emoji] > 0)\n+\n+\treturn (\n+\t\t<div className={cn(\"relative flex items-center gap-1 mt-2\", className)}>\n+\t\t\t{/* Existing reactions */}\n+\t\t\t{reactions && Object.entries(reactions)\n+\t\t\t\t.filter(([_, count]) => (count as number) > 0)\n+\t\t\t\t.map(([emoji, count]) => (\n+\t\t\t\t\t<Button\n+\t\t\t\t\t\tkey={emoji}\n+\t\t\t\t\t\tvariant=\"outline\"\n+\t\t\t\t\t\tsize=\"sm\"\n+\t\t\t\t\t\tclassName=\"h-6 px-2 py-0 text-xs bg-vscode-button-secondaryBackground hover:bg-vscode-button-secondaryHoverBackground border-vscode-button-border\"\n+\t\t\t\t\t\tonClick={() => handleEmojiClick(emoji)}\n+\t\t\t\t\t>\n+\t\t\t\t\t\t<span className=\"mr-1\">{emoji}</span>\n+\t\t\t\t\t\t<span>{count as number}</span>\n+\t\t\t\t\t</Button>\n+\t\t\t\t))}\n+\n+\t\t\t{/* Add reaction button */}\n+\t\t\t<div className=\"relative\" ref={pickerRef}>\n+\t\t\t\t<Button\n+\t\t\t\t\tvariant=\"ghost\"\n+\t\t\t\t\tsize=\"sm\"\n+\t\t\t\t\tclassName=\"h-6 w-6 p-0 text-xs hover:bg-vscode-button-secondaryHoverBackground\"\n+\t\t\t\t\tonClick={() => setShowPicker(!showPicker)}\n+\t\t\t\t\ttitle=\"Add reaction\"",
        "comment_created_at": "2025-06-30T20:15:48+00:00",
        "comment_author": "ellipsis-dev[bot]",
        "comment_body": "Consider localizing the 'Add reaction' button title instead of hardcoding it. Use a translation function (e.g., t('emojiReactions.add')) to support multiple languages.\n```suggestion\n\t\t\t\t\ttitle={t('emojiReactions.add')}\n```\n\n<sup>This comment was generated because it violated a code review rule: [irule_C0ez7Rji6ANcGkkX](https://app.ellipsis.dev/RooCodeInc/code-review/rules?id=irule_C0ez7Rji6ANcGkkX).</sup>",
        "pr_file_module": null
      }
    ]
  }
]