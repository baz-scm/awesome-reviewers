[
  {
    "discussion_id": "2217578918",
    "pr_number": 5981,
    "pr_file": "src/core/webview/preview/preview.js",
    "created_at": "2025-07-20T05:40:57+00:00",
    "commented_code": "+/* eslint-env browser */\n+/* global acquireVsCodeApi */\n+\n+;(function () {\n+\tconst vscode = acquireVsCodeApi()\n+\n+\tlet isInspectorMode = false\n+\tlet currentHighlight = null\n+\tlet iframe = null\n+\tlet overlay = null\n+\n+\t// Device presets for responsive preview\n+\tconst devicePresets = {\n+\t\tdesktop: { width: \"100%\", height: \"100%\", name: \"Desktop\" },\n+\t\t\"iphone-14\": { width: 390, height: 844, name: \"iPhone 14\" },\n+\t\t\"iphone-se\": { width: 375, height: 667, name: \"iPhone SE\" },\n+\t\tipad: { width: 820, height: 1180, name: \"iPad\" },\n+\t\t\"pixel-7\": { width: 412, height: 915, name: \"Pixel 7\" },\n+\t\t\"galaxy-s21\": { width: 360, height: 800, name: \"Galaxy S21\" },\n+\t}\n+\n+\t// Initialize when DOM is ready\n+\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n+\t\tiframe = document.getElementById(\"preview\")\n+\t\toverlay = document.getElementById(\"elementOverlay\")\n+\n+\t\tsetupControls()\n+\t\tsetupMessageHandlers()\n+\n+\t\t// Send ready message\n+\t\tvscode.postMessage({ type: \"previewReady\" })\n+\t})\n+\n+\tfunction setupControls() {\n+\t\t// URL input and go button\n+\t\tconst urlInput = document.getElementById(\"urlInput\")\n+\t\tconst goButton = document.getElementById(\"goButton\")\n+\n+\t\tgoButton.addEventListener(\"click\", () => {\n+\t\t\tconst url = urlInput.value.trim()\n+\t\t\tif (url) {\n+\t\t\t\tloadUrl(url)\n+\t\t\t}\n+\t\t})\n+\n+\t\turlInput.addEventListener(\"keypress\", (e) => {\n+\t\t\tif (e.key === \"Enter\") {\n+\t\t\t\tconst url = urlInput.value.trim()\n+\t\t\t\tif (url) {\n+\t\t\t\t\tloadUrl(url)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t})\n+\n+\t\t// Device selector\n+\t\tconst deviceSelector = document.getElementById(\"deviceSelector\")\n+\t\tdeviceSelector.addEventListener(\"change\", (e) => {\n+\t\t\tconst value = e.target.value\n+\t\t\tif (value === \"responsive\") {\n+\t\t\t\tiframe.style.width = \"100%\"\n+\t\t\t\tiframe.style.height = \"100%\"\n+\t\t\t} else {\n+\t\t\t\tconst [width, height] = value.split(\"x\")\n+\t\t\t\tsetViewport(parseInt(width), parseInt(height))\n+\t\t\t}\n+\t\t})\n+\n+\t\t// Inspector toggle\n+\t\tconst toggleInspector = document.getElementById(\"toggleInspector\")\n+\t\ttoggleInspector.addEventListener(\"click\", () => {\n+\t\t\tisInspectorMode = !isInspectorMode\n+\t\t\ttoggleInspector.classList.toggle(\"active\", isInspectorMode)\n+\n+\t\t\tif (isInspectorMode) {\n+\t\t\t\tenableInspectorMode()\n+\t\t\t} else {\n+\t\t\t\tdisableInspectorMode()\n+\t\t\t}\n+\t\t})\n+\t}\n+\n+\tfunction setupMessageHandlers() {\n+\t\twindow.addEventListener(\"message\", (event) => {\n+\t\t\tconst message = event.data\n+\n+\t\t\tswitch (message.type) {\n+\t\t\t\tcase \"loadUrl\":\n+\t\t\t\t\tloadUrl(message.url)\n+\t\t\t\t\tbreak\n+\t\t\t\tcase \"setViewport\":\n+\t\t\t\t\tsetViewport(message.width, message.height)\n+\t\t\t\t\tbreak\n+\t\t\t}\n+\t\t})\n+\t}\n+\n+\tfunction applyDevicePreset(deviceKey, deviceFrame, iframe) {\n+\t\tconst preset = devicePresets[deviceKey]\n+\n+\t\tif (deviceKey === \"desktop\") {\n+\t\t\tdeviceFrame.className = \"device-frame desktop\"\n+\t\t\tdeviceFrame.style.width = \"\"\n+\t\t\tdeviceFrame.style.height = \"\"\n+\t\t\tiframe.style.width = \"100%\"\n+\t\t\tiframe.style.height = \"100%\"\n+\t\t} else {\n+\t\t\tdeviceFrame.className = \"device-frame mobile\"\n+\t\t\tdeviceFrame.style.width = preset.width + \"px\"\n+\t\t\tdeviceFrame.style.height = preset.height + \"px\"\n+\t\t\tiframe.style.width = \"100%\"\n+\t\t\tiframe.style.height = \"100%\"\n+\t\t}\n+\t}\n+\n+\tfunction loadUrl(url) {\n+\t\t// Ensure URL has protocol\n+\t\tif (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n+\t\t\turl = \"http://\" + url\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tiframe.src = url",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2217578918",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5981,
        "pr_file": "src/core/webview/preview/preview.js",
        "discussion_id": "2217578918",
        "commented_code": "@@ -0,0 +1,440 @@\n+/* eslint-env browser */\n+/* global acquireVsCodeApi */\n+\n+;(function () {\n+\tconst vscode = acquireVsCodeApi()\n+\n+\tlet isInspectorMode = false\n+\tlet currentHighlight = null\n+\tlet iframe = null\n+\tlet overlay = null\n+\n+\t// Device presets for responsive preview\n+\tconst devicePresets = {\n+\t\tdesktop: { width: \"100%\", height: \"100%\", name: \"Desktop\" },\n+\t\t\"iphone-14\": { width: 390, height: 844, name: \"iPhone 14\" },\n+\t\t\"iphone-se\": { width: 375, height: 667, name: \"iPhone SE\" },\n+\t\tipad: { width: 820, height: 1180, name: \"iPad\" },\n+\t\t\"pixel-7\": { width: 412, height: 915, name: \"Pixel 7\" },\n+\t\t\"galaxy-s21\": { width: 360, height: 800, name: \"Galaxy S21\" },\n+\t}\n+\n+\t// Initialize when DOM is ready\n+\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n+\t\tiframe = document.getElementById(\"preview\")\n+\t\toverlay = document.getElementById(\"elementOverlay\")\n+\n+\t\tsetupControls()\n+\t\tsetupMessageHandlers()\n+\n+\t\t// Send ready message\n+\t\tvscode.postMessage({ type: \"previewReady\" })\n+\t})\n+\n+\tfunction setupControls() {\n+\t\t// URL input and go button\n+\t\tconst urlInput = document.getElementById(\"urlInput\")\n+\t\tconst goButton = document.getElementById(\"goButton\")\n+\n+\t\tgoButton.addEventListener(\"click\", () => {\n+\t\t\tconst url = urlInput.value.trim()\n+\t\t\tif (url) {\n+\t\t\t\tloadUrl(url)\n+\t\t\t}\n+\t\t})\n+\n+\t\turlInput.addEventListener(\"keypress\", (e) => {\n+\t\t\tif (e.key === \"Enter\") {\n+\t\t\t\tconst url = urlInput.value.trim()\n+\t\t\t\tif (url) {\n+\t\t\t\t\tloadUrl(url)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t})\n+\n+\t\t// Device selector\n+\t\tconst deviceSelector = document.getElementById(\"deviceSelector\")\n+\t\tdeviceSelector.addEventListener(\"change\", (e) => {\n+\t\t\tconst value = e.target.value\n+\t\t\tif (value === \"responsive\") {\n+\t\t\t\tiframe.style.width = \"100%\"\n+\t\t\t\tiframe.style.height = \"100%\"\n+\t\t\t} else {\n+\t\t\t\tconst [width, height] = value.split(\"x\")\n+\t\t\t\tsetViewport(parseInt(width), parseInt(height))\n+\t\t\t}\n+\t\t})\n+\n+\t\t// Inspector toggle\n+\t\tconst toggleInspector = document.getElementById(\"toggleInspector\")\n+\t\ttoggleInspector.addEventListener(\"click\", () => {\n+\t\t\tisInspectorMode = !isInspectorMode\n+\t\t\ttoggleInspector.classList.toggle(\"active\", isInspectorMode)\n+\n+\t\t\tif (isInspectorMode) {\n+\t\t\t\tenableInspectorMode()\n+\t\t\t} else {\n+\t\t\t\tdisableInspectorMode()\n+\t\t\t}\n+\t\t})\n+\t}\n+\n+\tfunction setupMessageHandlers() {\n+\t\twindow.addEventListener(\"message\", (event) => {\n+\t\t\tconst message = event.data\n+\n+\t\t\tswitch (message.type) {\n+\t\t\t\tcase \"loadUrl\":\n+\t\t\t\t\tloadUrl(message.url)\n+\t\t\t\t\tbreak\n+\t\t\t\tcase \"setViewport\":\n+\t\t\t\t\tsetViewport(message.width, message.height)\n+\t\t\t\t\tbreak\n+\t\t\t}\n+\t\t})\n+\t}\n+\n+\tfunction applyDevicePreset(deviceKey, deviceFrame, iframe) {\n+\t\tconst preset = devicePresets[deviceKey]\n+\n+\t\tif (deviceKey === \"desktop\") {\n+\t\t\tdeviceFrame.className = \"device-frame desktop\"\n+\t\t\tdeviceFrame.style.width = \"\"\n+\t\t\tdeviceFrame.style.height = \"\"\n+\t\t\tiframe.style.width = \"100%\"\n+\t\t\tiframe.style.height = \"100%\"\n+\t\t} else {\n+\t\t\tdeviceFrame.className = \"device-frame mobile\"\n+\t\t\tdeviceFrame.style.width = preset.width + \"px\"\n+\t\t\tdeviceFrame.style.height = preset.height + \"px\"\n+\t\t\tiframe.style.width = \"100%\"\n+\t\t\tiframe.style.height = \"100%\"\n+\t\t}\n+\t}\n+\n+\tfunction loadUrl(url) {\n+\t\t// Ensure URL has protocol\n+\t\tif (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n+\t\t\turl = \"http://\" + url\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tiframe.src = url",
        "comment_created_at": "2025-07-20T05:40:57+00:00",
        "comment_author": "github-advanced-security[bot]",
        "comment_body": "## Client-side URL redirect\n\nUntrusted URL redirection depends on a [user-provided value](1).\n\n[Show more details](https://github.com/RooCodeInc/Roo-Code/security/code-scanning/131)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2217578919",
    "pr_number": 5981,
    "pr_file": "src/core/webview/preview/preview.js",
    "created_at": "2025-07-20T05:40:57+00:00",
    "commented_code": "+/* eslint-env browser */\n+/* global acquireVsCodeApi */\n+\n+;(function () {\n+\tconst vscode = acquireVsCodeApi()\n+\n+\tlet isInspectorMode = false\n+\tlet currentHighlight = null\n+\tlet iframe = null\n+\tlet overlay = null\n+\n+\t// Device presets for responsive preview\n+\tconst devicePresets = {\n+\t\tdesktop: { width: \"100%\", height: \"100%\", name: \"Desktop\" },\n+\t\t\"iphone-14\": { width: 390, height: 844, name: \"iPhone 14\" },\n+\t\t\"iphone-se\": { width: 375, height: 667, name: \"iPhone SE\" },\n+\t\tipad: { width: 820, height: 1180, name: \"iPad\" },\n+\t\t\"pixel-7\": { width: 412, height: 915, name: \"Pixel 7\" },\n+\t\t\"galaxy-s21\": { width: 360, height: 800, name: \"Galaxy S21\" },\n+\t}\n+\n+\t// Initialize when DOM is ready\n+\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n+\t\tiframe = document.getElementById(\"preview\")\n+\t\toverlay = document.getElementById(\"elementOverlay\")\n+\n+\t\tsetupControls()\n+\t\tsetupMessageHandlers()\n+\n+\t\t// Send ready message\n+\t\tvscode.postMessage({ type: \"previewReady\" })\n+\t})\n+\n+\tfunction setupControls() {\n+\t\t// URL input and go button\n+\t\tconst urlInput = document.getElementById(\"urlInput\")\n+\t\tconst goButton = document.getElementById(\"goButton\")\n+\n+\t\tgoButton.addEventListener(\"click\", () => {\n+\t\t\tconst url = urlInput.value.trim()\n+\t\t\tif (url) {\n+\t\t\t\tloadUrl(url)\n+\t\t\t}\n+\t\t})\n+\n+\t\turlInput.addEventListener(\"keypress\", (e) => {\n+\t\t\tif (e.key === \"Enter\") {\n+\t\t\t\tconst url = urlInput.value.trim()\n+\t\t\t\tif (url) {\n+\t\t\t\t\tloadUrl(url)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t})\n+\n+\t\t// Device selector\n+\t\tconst deviceSelector = document.getElementById(\"deviceSelector\")\n+\t\tdeviceSelector.addEventListener(\"change\", (e) => {\n+\t\t\tconst value = e.target.value\n+\t\t\tif (value === \"responsive\") {\n+\t\t\t\tiframe.style.width = \"100%\"\n+\t\t\t\tiframe.style.height = \"100%\"\n+\t\t\t} else {\n+\t\t\t\tconst [width, height] = value.split(\"x\")\n+\t\t\t\tsetViewport(parseInt(width), parseInt(height))\n+\t\t\t}\n+\t\t})\n+\n+\t\t// Inspector toggle\n+\t\tconst toggleInspector = document.getElementById(\"toggleInspector\")\n+\t\ttoggleInspector.addEventListener(\"click\", () => {\n+\t\t\tisInspectorMode = !isInspectorMode\n+\t\t\ttoggleInspector.classList.toggle(\"active\", isInspectorMode)\n+\n+\t\t\tif (isInspectorMode) {\n+\t\t\t\tenableInspectorMode()\n+\t\t\t} else {\n+\t\t\t\tdisableInspectorMode()\n+\t\t\t}\n+\t\t})\n+\t}\n+\n+\tfunction setupMessageHandlers() {\n+\t\twindow.addEventListener(\"message\", (event) => {\n+\t\t\tconst message = event.data\n+\n+\t\t\tswitch (message.type) {\n+\t\t\t\tcase \"loadUrl\":\n+\t\t\t\t\tloadUrl(message.url)\n+\t\t\t\t\tbreak\n+\t\t\t\tcase \"setViewport\":\n+\t\t\t\t\tsetViewport(message.width, message.height)\n+\t\t\t\t\tbreak\n+\t\t\t}\n+\t\t})\n+\t}\n+\n+\tfunction applyDevicePreset(deviceKey, deviceFrame, iframe) {\n+\t\tconst preset = devicePresets[deviceKey]\n+\n+\t\tif (deviceKey === \"desktop\") {\n+\t\t\tdeviceFrame.className = \"device-frame desktop\"\n+\t\t\tdeviceFrame.style.width = \"\"\n+\t\t\tdeviceFrame.style.height = \"\"\n+\t\t\tiframe.style.width = \"100%\"\n+\t\t\tiframe.style.height = \"100%\"\n+\t\t} else {\n+\t\t\tdeviceFrame.className = \"device-frame mobile\"\n+\t\t\tdeviceFrame.style.width = preset.width + \"px\"\n+\t\t\tdeviceFrame.style.height = preset.height + \"px\"\n+\t\t\tiframe.style.width = \"100%\"\n+\t\t\tiframe.style.height = \"100%\"\n+\t\t}\n+\t}\n+\n+\tfunction loadUrl(url) {\n+\t\t// Ensure URL has protocol\n+\t\tif (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n+\t\t\turl = \"http://\" + url\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tiframe.src = url",
    "repo_full_name": "RooCodeInc/Roo-Code",
    "discussion_comments": [
      {
        "comment_id": "2217578919",
        "repo_full_name": "RooCodeInc/Roo-Code",
        "pr_number": 5981,
        "pr_file": "src/core/webview/preview/preview.js",
        "discussion_id": "2217578919",
        "commented_code": "@@ -0,0 +1,440 @@\n+/* eslint-env browser */\n+/* global acquireVsCodeApi */\n+\n+;(function () {\n+\tconst vscode = acquireVsCodeApi()\n+\n+\tlet isInspectorMode = false\n+\tlet currentHighlight = null\n+\tlet iframe = null\n+\tlet overlay = null\n+\n+\t// Device presets for responsive preview\n+\tconst devicePresets = {\n+\t\tdesktop: { width: \"100%\", height: \"100%\", name: \"Desktop\" },\n+\t\t\"iphone-14\": { width: 390, height: 844, name: \"iPhone 14\" },\n+\t\t\"iphone-se\": { width: 375, height: 667, name: \"iPhone SE\" },\n+\t\tipad: { width: 820, height: 1180, name: \"iPad\" },\n+\t\t\"pixel-7\": { width: 412, height: 915, name: \"Pixel 7\" },\n+\t\t\"galaxy-s21\": { width: 360, height: 800, name: \"Galaxy S21\" },\n+\t}\n+\n+\t// Initialize when DOM is ready\n+\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n+\t\tiframe = document.getElementById(\"preview\")\n+\t\toverlay = document.getElementById(\"elementOverlay\")\n+\n+\t\tsetupControls()\n+\t\tsetupMessageHandlers()\n+\n+\t\t// Send ready message\n+\t\tvscode.postMessage({ type: \"previewReady\" })\n+\t})\n+\n+\tfunction setupControls() {\n+\t\t// URL input and go button\n+\t\tconst urlInput = document.getElementById(\"urlInput\")\n+\t\tconst goButton = document.getElementById(\"goButton\")\n+\n+\t\tgoButton.addEventListener(\"click\", () => {\n+\t\t\tconst url = urlInput.value.trim()\n+\t\t\tif (url) {\n+\t\t\t\tloadUrl(url)\n+\t\t\t}\n+\t\t})\n+\n+\t\turlInput.addEventListener(\"keypress\", (e) => {\n+\t\t\tif (e.key === \"Enter\") {\n+\t\t\t\tconst url = urlInput.value.trim()\n+\t\t\t\tif (url) {\n+\t\t\t\t\tloadUrl(url)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t})\n+\n+\t\t// Device selector\n+\t\tconst deviceSelector = document.getElementById(\"deviceSelector\")\n+\t\tdeviceSelector.addEventListener(\"change\", (e) => {\n+\t\t\tconst value = e.target.value\n+\t\t\tif (value === \"responsive\") {\n+\t\t\t\tiframe.style.width = \"100%\"\n+\t\t\t\tiframe.style.height = \"100%\"\n+\t\t\t} else {\n+\t\t\t\tconst [width, height] = value.split(\"x\")\n+\t\t\t\tsetViewport(parseInt(width), parseInt(height))\n+\t\t\t}\n+\t\t})\n+\n+\t\t// Inspector toggle\n+\t\tconst toggleInspector = document.getElementById(\"toggleInspector\")\n+\t\ttoggleInspector.addEventListener(\"click\", () => {\n+\t\t\tisInspectorMode = !isInspectorMode\n+\t\t\ttoggleInspector.classList.toggle(\"active\", isInspectorMode)\n+\n+\t\t\tif (isInspectorMode) {\n+\t\t\t\tenableInspectorMode()\n+\t\t\t} else {\n+\t\t\t\tdisableInspectorMode()\n+\t\t\t}\n+\t\t})\n+\t}\n+\n+\tfunction setupMessageHandlers() {\n+\t\twindow.addEventListener(\"message\", (event) => {\n+\t\t\tconst message = event.data\n+\n+\t\t\tswitch (message.type) {\n+\t\t\t\tcase \"loadUrl\":\n+\t\t\t\t\tloadUrl(message.url)\n+\t\t\t\t\tbreak\n+\t\t\t\tcase \"setViewport\":\n+\t\t\t\t\tsetViewport(message.width, message.height)\n+\t\t\t\t\tbreak\n+\t\t\t}\n+\t\t})\n+\t}\n+\n+\tfunction applyDevicePreset(deviceKey, deviceFrame, iframe) {\n+\t\tconst preset = devicePresets[deviceKey]\n+\n+\t\tif (deviceKey === \"desktop\") {\n+\t\t\tdeviceFrame.className = \"device-frame desktop\"\n+\t\t\tdeviceFrame.style.width = \"\"\n+\t\t\tdeviceFrame.style.height = \"\"\n+\t\t\tiframe.style.width = \"100%\"\n+\t\t\tiframe.style.height = \"100%\"\n+\t\t} else {\n+\t\t\tdeviceFrame.className = \"device-frame mobile\"\n+\t\t\tdeviceFrame.style.width = preset.width + \"px\"\n+\t\t\tdeviceFrame.style.height = preset.height + \"px\"\n+\t\t\tiframe.style.width = \"100%\"\n+\t\t\tiframe.style.height = \"100%\"\n+\t\t}\n+\t}\n+\n+\tfunction loadUrl(url) {\n+\t\t// Ensure URL has protocol\n+\t\tif (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n+\t\t\turl = \"http://\" + url\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tiframe.src = url",
        "comment_created_at": "2025-07-20T05:40:57+00:00",
        "comment_author": "github-advanced-security[bot]",
        "comment_body": "## DOM text reinterpreted as HTML\n\n[DOM text](1) is reinterpreted as HTML without escaping meta-characters.\n[DOM text](2) is reinterpreted as HTML without escaping meta-characters.\n\n[Show more details](https://github.com/RooCodeInc/Roo-Code/security/code-scanning/132)",
        "pr_file_module": null
      }
    ]
  }
]