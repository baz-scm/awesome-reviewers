[
  {
    "discussion_id": "1724143047",
    "pr_number": 2160,
    "pr_file": "docs/framework/react/guide/router-context.md",
    "created_at": "2024-08-21T00:50:03+00:00",
    "commented_code": "// src/routes/__root.tsx\n export const Route = createRootRoute({\n   component: () => {\n-    const router = useRouter()\n-\n-    const breadcrumbs = router.state.matches.map((match) => {\n-      const { context } = match\n-      return {\n-        title: context.getTitle(),\n-        path: match.path,\n-      }\n-    })\n-\n+    const matches = useRouterState({ select: (s) => s.matches })\n+\n+    const breadcrumbs = matches.map(({ pathname, routeContext }) => {\n+        if (!routeContext) return null",
    "repo_full_name": "TanStack/router",
    "discussion_comments": [
      {
        "comment_id": "1724143047",
        "repo_full_name": "TanStack/router",
        "pr_number": 2160,
        "pr_file": "docs/framework/react/guide/router-context.md",
        "discussion_id": "1724143047",
        "commented_code": "@@ -303,16 +303,19 @@ Context, especially the isolated route `context` objects, make it trivial to acc\n // src/routes/__root.tsx\n export const Route = createRootRoute({\n   component: () => {\n-    const router = useRouter()\n-\n-    const breadcrumbs = router.state.matches.map((match) => {\n-      const { context } = match\n-      return {\n-        title: context.getTitle(),\n-        path: match.path,\n-      }\n-    })\n-\n+    const matches = useRouterState({ select: (s) => s.matches })\n+\n+    const breadcrumbs = matches.map(({ pathname, routeContext }) => {\n+        if (!routeContext) return null",
        "comment_created_at": "2024-08-21T00:50:03+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "```suggestion\r\n        if (!context) return null\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1724143179",
    "pr_number": 2160,
    "pr_file": "docs/framework/react/guide/router-context.md",
    "created_at": "2024-08-21T00:50:21+00:00",
    "commented_code": "// src/routes/__root.tsx\n export const Route = createRootRoute({\n   component: () => {\n-    const router = useRouter()\n-\n-    const breadcrumbs = router.state.matches.map((match) => {\n-      const { context } = match\n-      return {\n-        title: context.getTitle(),\n-        path: match.path,\n-      }\n-    })\n-\n+    const matches = useRouterState({ select: (s) => s.matches })\n+\n+    const breadcrumbs = matches.map(({ pathname, routeContext }) => {\n+        if (!routeContext) return null\n+        if (!('getTitle' in routeContext)) return null\n+        if (!routeContext.getTitle) return null",
    "repo_full_name": "TanStack/router",
    "discussion_comments": [
      {
        "comment_id": "1724143179",
        "repo_full_name": "TanStack/router",
        "pr_number": 2160,
        "pr_file": "docs/framework/react/guide/router-context.md",
        "discussion_id": "1724143179",
        "commented_code": "@@ -303,16 +303,19 @@ Context, especially the isolated route `context` objects, make it trivial to acc\n // src/routes/__root.tsx\n export const Route = createRootRoute({\n   component: () => {\n-    const router = useRouter()\n-\n-    const breadcrumbs = router.state.matches.map((match) => {\n-      const { context } = match\n-      return {\n-        title: context.getTitle(),\n-        path: match.path,\n-      }\n-    })\n-\n+    const matches = useRouterState({ select: (s) => s.matches })\n+\n+    const breadcrumbs = matches.map(({ pathname, routeContext }) => {\n+        if (!routeContext) return null\n+        if (!('getTitle' in routeContext)) return null\n+        if (!routeContext.getTitle) return null",
        "comment_created_at": "2024-08-21T00:50:21+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "```suggestion\r\n        if (!context.getTitle) return null\r\n```",
        "pr_file_module": null
      }
    ]
  }
]