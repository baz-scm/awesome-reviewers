[
  {
    "discussion_id": "1985923901",
    "pr_number": 3636,
    "pr_file": "packages/router-devtools/src/index.tsx",
    "created_at": "2025-03-08T01:45:15+00:00",
    "commented_code": "-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
    "repo_full_name": "TanStack/router",
    "discussion_comments": [
      {
        "comment_id": "1985923901",
        "repo_full_name": "TanStack/router",
        "pr_number": 3636,
        "pr_file": "packages/router-devtools/src/index.tsx",
        "discussion_id": "1985923901",
        "commented_code": "@@ -1,2 +1,5 @@\n-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
        "comment_created_at": "2025-03-08T01:45:15+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "There should be separate Panel export as well yes?",
        "pr_file_module": null
      },
      {
        "comment_id": "1985927465",
        "repo_full_name": "TanStack/router",
        "pr_number": 3636,
        "pr_file": "packages/router-devtools/src/index.tsx",
        "discussion_id": "1985923901",
        "commented_code": "@@ -1,2 +1,5 @@\n-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
        "comment_created_at": "2025-03-08T01:54:42+00:00",
        "comment_author": "birkskyum",
        "comment_body": "I'm not sure. What is it used for? I couldn't find any examples of usage, and the query devtools doesn't export a separate Panel for the framework adapters after the agnostic refactor.",
        "pr_file_module": null
      },
      {
        "comment_id": "1985930183",
        "repo_full_name": "TanStack/router",
        "pr_number": 3636,
        "pr_file": "packages/router-devtools/src/index.tsx",
        "discussion_id": "1985923901",
        "commented_code": "@@ -1,2 +1,5 @@\n-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
        "comment_created_at": "2025-03-08T02:05:06+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "Not too sure, I think it was something about portalling it or something \ud83e\udd37\ud83c\udffc\u200d\u2642\ufe0f.\r\n\r\nJust don't want to break anything for anyone who upgrades.",
        "pr_file_module": null
      },
      {
        "comment_id": "1985941800",
        "repo_full_name": "TanStack/router",
        "pr_number": 3636,
        "pr_file": "packages/router-devtools/src/index.tsx",
        "discussion_id": "1985923901",
        "commented_code": "@@ -1,2 +1,5 @@\n-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
        "comment_created_at": "2025-03-08T02:27:07+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "Just checked the source, it's to do with portalling the devtools into a shadowDOM target.\r\n\r\nRelated issues:\r\n- https://github.com/TanStack/router/issues/1065\r\n- https://github.com/TanStack/router/issues/1246\r\n- https://github.com/TanStack/router/issues/1247",
        "pr_file_module": null
      },
      {
        "comment_id": "1985970565",
        "repo_full_name": "TanStack/router",
        "pr_number": 3636,
        "pr_file": "packages/router-devtools/src/index.tsx",
        "discussion_id": "1985923901",
        "commented_code": "@@ -1,2 +1,5 @@\n-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
        "comment_created_at": "2025-03-08T03:59:20+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "Did a bit more investigation into the Panel component.\r\n\r\nIt's essentially, the devtools component itself, without the floating component aspect to it. So the panel component won't have resize functionality or the concept of being anchored to a position (\"bottom-right\" | \"top-left\" | \"...\").\r\n\r\nThe idea is to be able to portal/attach the devtools component onto a ShadowDOM node.",
        "pr_file_module": null
      },
      {
        "comment_id": "1986035348",
        "repo_full_name": "TanStack/router",
        "pr_number": 3636,
        "pr_file": "packages/router-devtools/src/index.tsx",
        "discussion_id": "1985923901",
        "commented_code": "@@ -1,2 +1,5 @@\n-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
        "comment_created_at": "2025-03-08T09:06:40+00:00",
        "comment_author": "birkskyum",
        "comment_body": "Can you help setup an example of this, that I can work up against?\r\n\r\nI've added examples for solid/react of non-nested usage (/examples/framework/basic-non-nested-devtools), where the devtools are outside of the RouterProvided and are passed the router.",
        "pr_file_module": null
      },
      {
        "comment_id": "1986040691",
        "repo_full_name": "TanStack/router",
        "pr_number": 3636,
        "pr_file": "packages/router-devtools/src/index.tsx",
        "discussion_id": "1985923901",
        "commented_code": "@@ -1,2 +1,5 @@\n-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
        "comment_created_at": "2025-03-08T09:44:17+00:00",
        "comment_author": "birkskyum",
        "comment_body": "To the best of my efforts have a I added a Panel to the core, and added wrappers in the framework packages, and a forward from `@tanstack/router-devtools`\r\n\r\nI'd just haven't been able to find/make an example that can properly verify this Panel is working as expected.",
        "pr_file_module": null
      },
      {
        "comment_id": "1986045247",
        "repo_full_name": "TanStack/router",
        "pr_number": 3636,
        "pr_file": "packages/router-devtools/src/index.tsx",
        "discussion_id": "1985923901",
        "commented_code": "@@ -1,2 +1,5 @@\n-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
        "comment_created_at": "2025-03-08T10:02:03+00:00",
        "comment_author": "birkskyum",
        "comment_body": "An option we have to avoid breaking anyones conde, is to \"soft-launch\" the new devtools packages, so that the existing `@tanstack/router-devtools` stay untouched apart from a message to migrate over, so we can see how that goes before removing this working implementation in `@tanstack/router-devtools`? It would allow anyone hitting a migration issue to stay on `@tanstack/router-devtools` while we mature the new packages.",
        "pr_file_module": null
      },
      {
        "comment_id": "1986049832",
        "repo_full_name": "TanStack/router",
        "pr_number": 3636,
        "pr_file": "packages/router-devtools/src/index.tsx",
        "discussion_id": "1985923901",
        "commented_code": "@@ -1,2 +1,5 @@\n-export { TanStackRouterDevtools } from './TanStackRouterDevtools'\n-export { TanStackRouterDevtoolsPanel } from './TanStackRouterDevtoolsPanel'\n+console.warn(\n+  '[@tanstack/router-devtools] This package has moved to @tanstack/react-router-devtools. Please switch to the new package at your earliest convenience, as this package will be dropped in the next major version release.',\n+)\n+\n+export { TanStackRouterDevtoolsInProd as TanStackRouterDevtools } from '@tanstack/react-router-devtools'",
        "comment_created_at": "2025-03-08T10:32:42+00:00",
        "comment_author": "birkskyum",
        "comment_body": "Examples of injecting the panel into shadowdom can be found at router/examples/(solid|react)/basic-devtools-panel \r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1610839293",
    "pr_number": 1649,
    "pr_file": "packages/react-router/src/useBlocker.tsx",
    "created_at": "2024-05-23T01:19:28+00:00",
    "commented_code": "import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n-export function useBlocker(\n-  blockerFn: BlockerFn,\n-  condition: boolean | any = true,\n-): void {\n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+export function useBlocker(opts?: {",
    "repo_full_name": "TanStack/router",
    "discussion_comments": [
      {
        "comment_id": "1610839293",
        "repo_full_name": "TanStack/router",
        "pr_number": 1649,
        "pr_file": "packages/react-router/src/useBlocker.tsx",
        "discussion_id": "1610839293",
        "commented_code": "@@ -3,25 +3,70 @@ import { useRouter } from './useRouter'\n import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n-export function useBlocker(\n-  blockerFn: BlockerFn,\n-  condition: boolean | any = true,\n-): void {\n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+export function useBlocker(opts?: {",
        "comment_created_at": "2024-05-23T01:19:28+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "\ud83d\udea8 Switching to object syntax, makes this a breaking change. I think we may have to stick with the existing API surfaces.",
        "pr_file_module": null
      },
      {
        "comment_id": "1611068540",
        "repo_full_name": "TanStack/router",
        "pr_number": 1649,
        "pr_file": "packages/react-router/src/useBlocker.tsx",
        "discussion_id": "1610839293",
        "commented_code": "@@ -3,25 +3,70 @@ import { useRouter } from './useRouter'\n import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n-export function useBlocker(\n-  blockerFn: BlockerFn,\n-  condition: boolean | any = true,\n-): void {\n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+export function useBlocker(opts?: {",
        "comment_created_at": "2024-05-23T06:25:53+00:00",
        "comment_author": "Balastrong",
        "comment_body": "That's right, but this also makes it consistent with the other hooks. I'm not yet familiar with the breaking changes policies but if for example we follow semver makes sense to avoid changing the API here.\r\n\r\nWhat other options do we have? If we keep it as is, in cases you don't need `blockerFn` you might end up calling the hook as `useBlocker(() => {}, value)` or if we make it optional `useBlocker(undefined, value)`.\r\nNot ideal, but avoids the breaking change.",
        "pr_file_module": null
      },
      {
        "comment_id": "1611100182",
        "repo_full_name": "TanStack/router",
        "pr_number": 1649,
        "pr_file": "packages/react-router/src/useBlocker.tsx",
        "discussion_id": "1610839293",
        "commented_code": "@@ -3,25 +3,70 @@ import { useRouter } from './useRouter'\n import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n-export function useBlocker(\n-  blockerFn: BlockerFn,\n-  condition: boolean | any = true,\n-): void {\n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+export function useBlocker(opts?: {",
        "comment_created_at": "2024-05-23T06:52:26+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "We follow semver and this'd be a breaking change to the user.\r\n\r\nConsidering we don't want to introduce compexity with function overloads, I think we'd have to go with the alternatives here (like `useBlocker(() => void, value)`), or simply export a new useBlocker hook altogether (with a new name) and preserve the old hook as-is but mark it as deprecated.\r\n\r\n@schiller-manuel thoughts on this?",
        "pr_file_module": null
      },
      {
        "comment_id": "1612007276",
        "repo_full_name": "TanStack/router",
        "pr_number": 1649,
        "pr_file": "packages/react-router/src/useBlocker.tsx",
        "discussion_id": "1610839293",
        "commented_code": "@@ -3,25 +3,70 @@ import { useRouter } from './useRouter'\n import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n-export function useBlocker(\n-  blockerFn: BlockerFn,\n-  condition: boolean | any = true,\n-): void {\n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+export function useBlocker(opts?: {",
        "comment_created_at": "2024-05-23T16:32:52+00:00",
        "comment_author": "schiller-manuel",
        "comment_body": "we must avoid breaking changes.\r\ninstead, I suggest supporting both signatures like this (pseudocode):\r\n\r\n```tsx\r\nfunction useBlocker(\r\nblockerFnOrOpts: BlockerFn | BlockerOpts,\r\ncondition?: boolean | any)\r\n{\r\nif (typeof blockerFnOrOpts === 'function') {\r\n// function was passed\r\n}\r\nelse {\r\n// opts were passed\r\n}\r\n}\r\n```\r\n\r\nthen deprecate the old syntax and get rid of it with v2",
        "pr_file_module": null
      },
      {
        "comment_id": "1612187222",
        "repo_full_name": "TanStack/router",
        "pr_number": 1649,
        "pr_file": "packages/react-router/src/useBlocker.tsx",
        "discussion_id": "1610839293",
        "commented_code": "@@ -3,25 +3,70 @@ import { useRouter } from './useRouter'\n import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n-export function useBlocker(\n-  blockerFn: BlockerFn,\n-  condition: boolean | any = true,\n-): void {\n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+export function useBlocker(opts?: {",
        "comment_created_at": "2024-05-23T19:11:14+00:00",
        "comment_author": "Balastrong",
        "comment_body": "I updated the API, I don't know why now tests are failing on the start package though... on local tsc doesn't complain",
        "pr_file_module": null
      },
      {
        "comment_id": "1613237177",
        "repo_full_name": "TanStack/router",
        "pr_number": 1649,
        "pr_file": "packages/react-router/src/useBlocker.tsx",
        "discussion_id": "1610839293",
        "commented_code": "@@ -3,25 +3,70 @@ import { useRouter } from './useRouter'\n import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n-export function useBlocker(\n-  blockerFn: BlockerFn,\n-  condition: boolean | any = true,\n-): void {\n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+export function useBlocker(opts?: {",
        "comment_created_at": "2024-05-24T10:13:57+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "Rebasing with main should fix this now.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1613295882",
    "pr_number": 1649,
    "pr_file": "packages/react-router/src/useBlocker.tsx",
    "created_at": "2024-05-24T11:03:10+00:00",
    "commented_code": "import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+type BlockerOpts = {\n+  blockerFn?: BlockerFn\n+  condition?: boolean | any\n+}\n+\n export function useBlocker(",
    "repo_full_name": "TanStack/router",
    "discussion_comments": [
      {
        "comment_id": "1613295882",
        "repo_full_name": "TanStack/router",
        "pr_number": 1649,
        "pr_file": "packages/react-router/src/useBlocker.tsx",
        "discussion_id": "1613295882",
        "commented_code": "@@ -3,25 +3,83 @@ import { useRouter } from './useRouter'\n import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+type BlockerOpts = {\n+  blockerFn?: BlockerFn\n+  condition?: boolean | any\n+}\n+\n export function useBlocker(",
        "comment_created_at": "2024-05-24T11:03:10+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "Maybe this needs to be a function overload?\r\n\r\n```tsx\r\nexport function useBlocker(blockerFn: BlockerFn, condition?: boolean | any): BlockerResolver;\r\nexport function useBlocker(blockerOpts: BlockerOpts): BlockerResolver {\r\n  // ...\r\n}\r\n```\r\n\r\nAnd probably should depreciate the old syntax.",
        "pr_file_module": null
      },
      {
        "comment_id": "1613453475",
        "repo_full_name": "TanStack/router",
        "pr_number": 1649,
        "pr_file": "packages/react-router/src/useBlocker.tsx",
        "discussion_id": "1613295882",
        "commented_code": "@@ -3,25 +3,83 @@ import { useRouter } from './useRouter'\n import type { BlockerFn } from '@tanstack/history'\n import type { ReactNode } from './route'\n \n+type BlockerResolver = {\n+  status: 'idle' | 'blocked'\n+  proceed: () => void\n+  reset: () => void\n+}\n+\n+type BlockerOpts = {\n+  blockerFn?: BlockerFn\n+  condition?: boolean | any\n+}\n+\n export function useBlocker(",
        "comment_created_at": "2024-05-24T13:03:30+00:00",
        "comment_author": "Balastrong",
        "comment_body": "Done! I also updated the docs with the new API",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1509657472",
    "pr_number": 1248,
    "pr_file": "packages/react-router/src/not-found.tsx",
    "created_at": "2024-03-01T23:09:56+00:00",
    "commented_code": "import { RegisteredRouter, RouteIds } from '.'\n \n export type NotFoundError = {\n-  global?: boolean\n+  _global?: boolean",
    "repo_full_name": "TanStack/router",
    "discussion_comments": [
      {
        "comment_id": "1509657472",
        "repo_full_name": "TanStack/router",
        "pr_number": 1248,
        "pr_file": "packages/react-router/src/not-found.tsx",
        "discussion_id": "1509657472",
        "commented_code": "@@ -4,7 +4,7 @@ import { useRouterState } from './useRouterState'\n import { RegisteredRouter, RouteIds } from '.'\n \n export type NotFoundError = {\n-  global?: boolean\n+  _global?: boolean",
        "comment_created_at": "2024-03-01T23:09:56+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "Is there a reason for this api surface to change?\r\nThis'll be a breaking change for anyone currently calling `notFound({ global: true })` yes?",
        "pr_file_module": null
      },
      {
        "comment_id": "1509879805",
        "repo_full_name": "TanStack/router",
        "pr_number": 1248,
        "pr_file": "packages/react-router/src/not-found.tsx",
        "discussion_id": "1509657472",
        "commented_code": "@@ -4,7 +4,7 @@ import { useRouterState } from './useRouterState'\n import { RegisteredRouter, RouteIds } from '.'\n \n export type NotFoundError = {\n-  global?: boolean\n+  _global?: boolean",
        "comment_created_at": "2024-03-02T04:00:17+00:00",
        "comment_author": "tannerlinsley",
        "comment_body": "Hmmm yeah. But I thought I left in a backwards compatibility layer\u2026",
        "pr_file_module": null
      },
      {
        "comment_id": "1509880974",
        "repo_full_name": "TanStack/router",
        "pr_number": 1248,
        "pr_file": "packages/react-router/src/not-found.tsx",
        "discussion_id": "1509657472",
        "commented_code": "@@ -4,7 +4,7 @@ import { useRouterState } from './useRouterState'\n import { RegisteredRouter, RouteIds } from '.'\n \n export type NotFoundError = {\n-  global?: boolean\n+  _global?: boolean",
        "comment_created_at": "2024-03-02T04:09:58+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "Not sure if that'd help this though, as this is a user input type.\r\nSince the type `NotFoundError` is the same user input used when throwing a `notFound()`, changing it makes it so now you'd have to `throw notFound({ _global:true })` instead of just `throw notFound({ global: true })`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1509881286",
        "repo_full_name": "TanStack/router",
        "pr_number": 1248,
        "pr_file": "packages/react-router/src/not-found.tsx",
        "discussion_id": "1509657472",
        "commented_code": "@@ -4,7 +4,7 @@ import { useRouterState } from './useRouterState'\n import { RegisteredRouter, RouteIds } from '.'\n \n export type NotFoundError = {\n-  global?: boolean\n+  _global?: boolean",
        "comment_created_at": "2024-03-02T04:12:39+00:00",
        "comment_author": "tannerlinsley",
        "comment_body": "I\u2019ll fix this or at the very least support both officially with a deprecation notice. ",
        "pr_file_module": null
      }
    ]
  }
]