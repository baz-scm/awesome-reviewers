[
  {
    "discussion_id": "2186331198",
    "pr_number": 4565,
    "pr_file": "packages/router-plugin/src/core/code-splitter/compilers.ts",
    "created_at": "2025-07-05T01:23:19+00:00",
    "commented_code": "if (\n               !(\n-                path.node.callee.name === 'createRoute' ||\n-                path.node.callee.name === 'createFileRoute'\n+                path.node.callee.name === 'createFileRoute' ||\n+                path.node.callee.name === 'createRootRoute' ||\n+                path.node.callee.name === 'createRootRouteWithContext'\n               )\n             ) {\n               return\n             }\n \n+            createRouteFn = path.node.callee.name\n+\n             function babelHandleReference(routeOptions: t.Node | undefined) {\n               const hasImportedOrDefinedIdentifier = (name: string) => {\n                 return programPath.scope.hasBinding(name)\n               }\n \n               if (t.isObjectExpression(routeOptions)) {\n+                if (opts.deleteNodes && opts.deleteNodes.size > 0) {\n+                  routeOptions.properties = routeOptions.properties.filter(\n+                    (prop) => {\n+                      if (t.isObjectProperty(prop)) {\n+                        if (t.isIdentifier(prop.key)) {\n+                          if (opts.deleteNodes?.has(prop.key.name as any)) {\n+                            return false\n+                          }\n+                        }\n+                      }\n+                      return true\n+                    },\n+                  )\n+                }\n+                if (createRouteFn !== 'createFileRoute') {",
    "repo_full_name": "TanStack/router",
    "discussion_comments": [
      {
        "comment_id": "2186331198",
        "repo_full_name": "TanStack/router",
        "pr_number": 4565,
        "pr_file": "packages/router-plugin/src/core/code-splitter/compilers.ts",
        "discussion_id": "2186331198",
        "commented_code": "@@ -138,27 +143,51 @@ export function compileCodeSplitReferenceRoute(\n \n             if (\n               !(\n-                path.node.callee.name === 'createRoute' ||\n-                path.node.callee.name === 'createFileRoute'\n+                path.node.callee.name === 'createFileRoute' ||\n+                path.node.callee.name === 'createRootRoute' ||\n+                path.node.callee.name === 'createRootRouteWithContext'\n               )\n             ) {\n               return\n             }\n \n+            createRouteFn = path.node.callee.name\n+\n             function babelHandleReference(routeOptions: t.Node | undefined) {\n               const hasImportedOrDefinedIdentifier = (name: string) => {\n                 return programPath.scope.hasBinding(name)\n               }\n \n               if (t.isObjectExpression(routeOptions)) {\n+                if (opts.deleteNodes && opts.deleteNodes.size > 0) {\n+                  routeOptions.properties = routeOptions.properties.filter(\n+                    (prop) => {\n+                      if (t.isObjectProperty(prop)) {\n+                        if (t.isIdentifier(prop.key)) {\n+                          if (opts.deleteNodes?.has(prop.key.name as any)) {\n+                            return false\n+                          }\n+                        }\n+                      }\n+                      return true\n+                    },\n+                  )\n+                }\n+                if (createRouteFn !== 'createFileRoute') {",
        "comment_created_at": "2025-07-05T01:23:19+00:00",
        "comment_author": "SeanCassiere",
        "comment_body": "I think its worth adding a comment here for future adventurers stating that the code-splitting we're exiting early here since the `rootRoute` is never code-split.\n\nPerhaps the exit condition should just check for `createRootRoute` or `createRootRouteWithContext`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1740199806",
    "pr_number": 2243,
    "pr_file": "packages/react-router/src/routeInfo.ts",
    "created_at": "2024-09-01T21:49:03+00:00",
    "commented_code": "? '.'\n     : './' | '.'\n \n-export type CatchAllPaths<TOption> =\n-  | CurrentPath<TOption>\n-  | ParentPath<TOption>\n-  | ''\n+export type CatchAllPaths<TOption> = CurrentPath<TOption> | ParentPath<TOption>\n \n-export type RoutesByPath<TRouteTree extends AnyRoute> = {\n-  [K in ParseRoute<TRouteTree> as K['fullPath']]: K\n-}\n+export type CodeRoutesByPath<TRouteTree extends AnyRoute> =\n+  ParseRoute<TRouteTree> extends infer TRoutes extends AnyRoute",
    "repo_full_name": "TanStack/router",
    "discussion_comments": [
      {
        "comment_id": "1740199806",
        "repo_full_name": "TanStack/router",
        "pr_number": 2243,
        "pr_file": "packages/react-router/src/routeInfo.ts",
        "discussion_id": "1740199806",
        "commented_code": "@@ -53,22 +55,34 @@ export type CurrentPath<TOption> = 'always' extends TOption\n     ? '.'\n     : './' | '.'\n \n-export type CatchAllPaths<TOption> =\n-  | CurrentPath<TOption>\n-  | ParentPath<TOption>\n-  | ''\n+export type CatchAllPaths<TOption> = CurrentPath<TOption> | ParentPath<TOption>\n \n-export type RoutesByPath<TRouteTree extends AnyRoute> = {\n-  [K in ParseRoute<TRouteTree> as K['fullPath']]: K\n-}\n+export type CodeRoutesByPath<TRouteTree extends AnyRoute> =\n+  ParseRoute<TRouteTree> extends infer TRoutes extends AnyRoute",
        "comment_created_at": "2024-09-01T21:49:03+00:00",
        "comment_author": "chorobin",
        "comment_body": "You'll see this trick used a lot. It basically makes `ParseRoutes` lazily instantiated so that when we go down the file based routing path, the route tree is not parsed at all",
        "pr_file_module": null
      }
    ]
  }
]