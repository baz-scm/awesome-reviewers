[
  {
    "discussion_id": "2159231857",
    "pr_number": 18400,
    "pr_file": "crates/ruff_linter/resources/test/fixtures/pylint/import_aliasing_2/__init__.py",
    "created_at": "2025-06-20T15:22:42+00:00",
    "commented_code": "+# pylint: disable=unused-import, missing-docstring, invalid-name, reimported, import-error, wrong-import-order, no-name-in-module, shadowed-import\n+# Functional tests for import aliasing\n+# 1. useless-import-alias",
    "repo_full_name": "astral-sh/ruff",
    "discussion_comments": [
      {
        "comment_id": "2159231857",
        "repo_full_name": "astral-sh/ruff",
        "pr_number": 18400,
        "pr_file": "crates/ruff_linter/resources/test/fixtures/pylint/import_aliasing_2/__init__.py",
        "discussion_id": "2159231857",
        "commented_code": "@@ -0,0 +1,8 @@\n+# pylint: disable=unused-import, missing-docstring, invalid-name, reimported, import-error, wrong-import-order, no-name-in-module, shadowed-import\n+# Functional tests for import aliasing\n+# 1. useless-import-alias",
        "comment_created_at": "2025-06-20T15:22:42+00:00",
        "comment_author": "dylwil3",
        "comment_body": "I'm not sure what these comments mean - could we remove them?",
        "pr_file_module": null
      },
      {
        "comment_id": "2159278965",
        "repo_full_name": "astral-sh/ruff",
        "pr_number": 18400,
        "pr_file": "crates/ruff_linter/resources/test/fixtures/pylint/import_aliasing_2/__init__.py",
        "discussion_id": "2159231857",
        "commented_code": "@@ -0,0 +1,8 @@\n+# pylint: disable=unused-import, missing-docstring, invalid-name, reimported, import-error, wrong-import-order, no-name-in-module, shadowed-import\n+# Functional tests for import aliasing\n+# 1. useless-import-alias",
        "comment_created_at": "2025-06-20T15:43:49+00:00",
        "comment_author": "GideonBear",
        "comment_body": "I copied these from another useless-import-alias test. The ignores are (I assume) to make sure the snapshot test only contains the messages we want to be testing.\r\nLines 2 and 3 I thought were standard? I can remove them if you want.",
        "pr_file_module": null
      },
      {
        "comment_id": "2159295289",
        "repo_full_name": "astral-sh/ruff",
        "pr_number": 18400,
        "pr_file": "crates/ruff_linter/resources/test/fixtures/pylint/import_aliasing_2/__init__.py",
        "discussion_id": "2159231857",
        "commented_code": "@@ -0,0 +1,8 @@\n+# pylint: disable=unused-import, missing-docstring, invalid-name, reimported, import-error, wrong-import-order, no-name-in-module, shadowed-import\n+# Functional tests for import aliasing\n+# 1. useless-import-alias",
        "comment_created_at": "2025-06-20T15:55:04+00:00",
        "comment_author": "dylwil3",
        "comment_body": "I think probably the fixture was over-eagerly copied from pylint? those ignores do nothing for ruff :) let's remove these",
        "pr_file_module": null
      },
      {
        "comment_id": "2159349926",
        "repo_full_name": "astral-sh/ruff",
        "pr_number": 18400,
        "pr_file": "crates/ruff_linter/resources/test/fixtures/pylint/import_aliasing_2/__init__.py",
        "discussion_id": "2159231857",
        "commented_code": "@@ -0,0 +1,8 @@\n+# pylint: disable=unused-import, missing-docstring, invalid-name, reimported, import-error, wrong-import-order, no-name-in-module, shadowed-import\n+# Functional tests for import aliasing\n+# 1. useless-import-alias",
        "comment_created_at": "2025-06-20T16:34:02+00:00",
        "comment_author": "GideonBear",
        "comment_body": "Shoot, I completely overlooked that; I thought these were normal ruff ignores! I'll remove them here; but should they be removed from other tests as well?",
        "pr_file_module": null
      },
      {
        "comment_id": "2159463347",
        "repo_full_name": "astral-sh/ruff",
        "pr_number": 18400,
        "pr_file": "crates/ruff_linter/resources/test/fixtures/pylint/import_aliasing_2/__init__.py",
        "discussion_id": "2159231857",
        "commented_code": "@@ -0,0 +1,8 @@\n+# pylint: disable=unused-import, missing-docstring, invalid-name, reimported, import-error, wrong-import-order, no-name-in-module, shadowed-import\n+# Functional tests for import aliasing\n+# 1. useless-import-alias",
        "comment_created_at": "2025-06-20T18:02:28+00:00",
        "comment_author": "dylwil3",
        "comment_body": "No worries; we don't have to cleanup all the other comments in fixtures in this PR. It would be a big undertaking!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2127202273",
    "pr_number": 18233,
    "pr_file": "crates/ruff_linter/resources/test/fixtures/ruff/RUF061.py",
    "created_at": "2025-06-04T18:31:22+00:00",
    "commented_code": "+# RUF061\n+# Cases that should trigger the violation\n+\n+foo.__dict__.get(\"__annotations__\")  # RUF061\n+foo.__dict__.get(\"__annotations__\", None)  # RUF061\n+foo.__dict__.get(\"__annotations__\", {})  # RUF061\n+\n+# Cases that should NOT trigger the violation\n+\n+foo.__dict__.get(\"not__annotations__\")  # RUF061\n+foo.__dict__.get(\"not__annotations__\", None)  # RUF061\n+foo.__dict__.get(\"not__annotations__\", {})  # RUF061\n+foo.__annotations__  # RUF061\n+foo.get(\"__annotations__\")  # RUF061\n+foo.get(\"__annotations__\", None)  # RUF061\n+foo.get(\"__annotations__\", {})  # RUF061",
    "repo_full_name": "astral-sh/ruff",
    "discussion_comments": [
      {
        "comment_id": "2127202273",
        "repo_full_name": "astral-sh/ruff",
        "pr_number": 18233,
        "pr_file": "crates/ruff_linter/resources/test/fixtures/ruff/RUF061.py",
        "discussion_id": "2127202273",
        "commented_code": "@@ -0,0 +1,16 @@\n+# RUF061\n+# Cases that should trigger the violation\n+\n+foo.__dict__.get(\"__annotations__\")  # RUF061\n+foo.__dict__.get(\"__annotations__\", None)  # RUF061\n+foo.__dict__.get(\"__annotations__\", {})  # RUF061\n+\n+# Cases that should NOT trigger the violation\n+\n+foo.__dict__.get(\"not__annotations__\")  # RUF061\n+foo.__dict__.get(\"not__annotations__\", None)  # RUF061\n+foo.__dict__.get(\"not__annotations__\", {})  # RUF061\n+foo.__annotations__  # RUF061\n+foo.get(\"__annotations__\")  # RUF061\n+foo.get(\"__annotations__\", None)  # RUF061\n+foo.get(\"__annotations__\", {})  # RUF061",
        "comment_created_at": "2025-06-04T18:31:22+00:00",
        "comment_author": "ntBre",
        "comment_body": "nit: I don't think the trailing `# RUF061` comments are helpful here. To me that suggests that these *should* trigger a warning.",
        "pr_file_module": null
      },
      {
        "comment_id": "2134806973",
        "repo_full_name": "astral-sh/ruff",
        "pr_number": 18233,
        "pr_file": "crates/ruff_linter/resources/test/fixtures/ruff/RUF061.py",
        "discussion_id": "2127202273",
        "commented_code": "@@ -0,0 +1,16 @@\n+# RUF061\n+# Cases that should trigger the violation\n+\n+foo.__dict__.get(\"__annotations__\")  # RUF061\n+foo.__dict__.get(\"__annotations__\", None)  # RUF061\n+foo.__dict__.get(\"__annotations__\", {})  # RUF061\n+\n+# Cases that should NOT trigger the violation\n+\n+foo.__dict__.get(\"not__annotations__\")  # RUF061\n+foo.__dict__.get(\"not__annotations__\", None)  # RUF061\n+foo.__dict__.get(\"not__annotations__\", {})  # RUF061\n+foo.__annotations__  # RUF061\n+foo.get(\"__annotations__\")  # RUF061\n+foo.get(\"__annotations__\", None)  # RUF061\n+foo.get(\"__annotations__\", {})  # RUF061",
        "comment_created_at": "2025-06-08T19:34:43+00:00",
        "comment_author": "dericcrago",
        "comment_body": "removed trailing comments on ones that should not trigger",
        "pr_file_module": null
      }
    ]
  }
]