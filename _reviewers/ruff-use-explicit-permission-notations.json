[
  {
    "discussion_id": "2136159546",
    "pr_number": 18541,
    "pr_file": "crates/ruff_linter/src/rules/ruff/rules/chmod_non_octal.rs",
    "created_at": "2025-06-09T17:31:01+00:00",
    "commented_code": "+use ruff_diagnostics::{Applicability, Edit, Fix};\n+use ruff_macros::{ViolationMetadata, derive_message_formats};\n+use ruff_python_ast::{self as ast, Expr, ExprCall};\n+use ruff_python_semantic::{SemanticModel, analyze};\n+use ruff_text_size::Ranged;\n+\n+use crate::checkers::ast::Checker;\n+use crate::{FixAvailability, Violation};\n+\n+/// ## What it does\n+/// Checks for `chmod` calls which use non-octal integer literals.\n+///\n+/// ## Why is this bad?\n+///\n+/// Numeric modes are made up of one to four octal digits. Converting a non-octal\n+/// integer to octal may not be the mode the author intended.\n+///\n+/// ## Example\n+///\n+/// ```python\n+/// os.chmod(\"foo\", 644)\n+/// ```\n+///\n+/// Use instead:\n+///\n+/// ```python\n+/// os.chmod(\"foo\", 0o644)\n+/// ```\n+///\n+/// ## Fix safety\n+///\n+/// This rule's fix is marked as unsafe because it changes runtime behavior.\n+///\n+/// ## Fix availability\n+///\n+/// A fix is only available if the existing digits could make up a valid octal literal.\n+#[derive(ViolationMetadata)]\n+pub(crate) struct ChmodNonOctal {\n+    reason: Reason,\n+}\n+\n+#[derive(Debug, Clone, Copy)]\n+enum Reason {\n+    Decimal { found: u16, suggested: u16 },\n+    Invalid,\n+}\n+\n+impl Violation for ChmodNonOctal {\n+    const FIX_AVAILABILITY: FixAvailability = FixAvailability::Sometimes;\n+\n+    #[derive_message_formats]\n+    fn message(&self) -> String {\n+        match self.reason {\n+            Reason::Decimal { found, suggested } => {\n+                format!(\"Non-octal mode `{found}`, did you mean `{suggested:#o}`?\")",
    "repo_full_name": "astral-sh/ruff",
    "discussion_comments": [
      {
        "comment_id": "2136159546",
        "repo_full_name": "astral-sh/ruff",
        "pr_number": 18541,
        "pr_file": "crates/ruff_linter/src/rules/ruff/rules/chmod_non_octal.rs",
        "discussion_id": "2136159546",
        "commented_code": "@@ -0,0 +1,177 @@\n+use ruff_diagnostics::{Applicability, Edit, Fix};\n+use ruff_macros::{ViolationMetadata, derive_message_formats};\n+use ruff_python_ast::{self as ast, Expr, ExprCall};\n+use ruff_python_semantic::{SemanticModel, analyze};\n+use ruff_text_size::Ranged;\n+\n+use crate::checkers::ast::Checker;\n+use crate::{FixAvailability, Violation};\n+\n+/// ## What it does\n+/// Checks for `chmod` calls which use non-octal integer literals.\n+///\n+/// ## Why is this bad?\n+///\n+/// Numeric modes are made up of one to four octal digits. Converting a non-octal\n+/// integer to octal may not be the mode the author intended.\n+///\n+/// ## Example\n+///\n+/// ```python\n+/// os.chmod(\"foo\", 644)\n+/// ```\n+///\n+/// Use instead:\n+///\n+/// ```python\n+/// os.chmod(\"foo\", 0o644)\n+/// ```\n+///\n+/// ## Fix safety\n+///\n+/// This rule's fix is marked as unsafe because it changes runtime behavior.\n+///\n+/// ## Fix availability\n+///\n+/// A fix is only available if the existing digits could make up a valid octal literal.\n+#[derive(ViolationMetadata)]\n+pub(crate) struct ChmodNonOctal {\n+    reason: Reason,\n+}\n+\n+#[derive(Debug, Clone, Copy)]\n+enum Reason {\n+    Decimal { found: u16, suggested: u16 },\n+    Invalid,\n+}\n+\n+impl Violation for ChmodNonOctal {\n+    const FIX_AVAILABILITY: FixAvailability = FixAvailability::Sometimes;\n+\n+    #[derive_message_formats]\n+    fn message(&self) -> String {\n+        match self.reason {\n+            Reason::Decimal { found, suggested } => {\n+                format!(\"Non-octal mode `{found}`, did you mean `{suggested:#o}`?\")",
        "comment_created_at": "2025-06-09T17:31:01+00:00",
        "comment_author": "MichaReiser",
        "comment_body": "See my comment below. I don't think we should offer a suggestion here because the promise of the rule is that we believe that the used decimal permissions are actually wrong and simply rewriting to octal doesn't fix that.",
        "pr_file_module": null
      }
    ]
  }
]