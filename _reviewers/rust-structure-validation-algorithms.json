[
  {
    "discussion_id": "2205515828",
    "pr_number": 143897,
    "pr_file": "tests/ui/attributes/key-value-expansion-scope.stderr",
    "created_at": "2025-07-14T18:07:04+00:00",
    "commented_code": "|\n    = help: have you added the `#[macro_use]` on the module/import?\n \n-warning: cannot find macro `in_root` in the current scope when looking from the crate root",
    "repo_full_name": "rust-lang/rust",
    "discussion_comments": [
      {
        "comment_id": "2205515828",
        "repo_full_name": "rust-lang/rust",
        "pr_number": 143897,
        "pr_file": "tests/ui/attributes/key-value-expansion-scope.stderr",
        "discussion_id": "2205515828",
        "commented_code": "@@ -126,27 +126,6 @@ LL |     #![doc = in_block!()]\n    |\n    = help: have you added the `#[macro_use]` on the module/import?\n \n-warning: cannot find macro `in_root` in the current scope when looking from the crate root",
        "comment_created_at": "2025-07-14T18:07:04+00:00",
        "comment_author": "petrochenkov",
        "comment_body": "I'd rather reorder some fields in AST to keep the old visiting order and keep the tests unchanged.\r\nIn some cases, like in macro scoping, the order is actually important, and it's a bit worrying to see it changing without seeing why.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2052654718",
    "pr_number": 138554,
    "pr_file": "tests/ui/macros/issue-102878.stderr",
    "created_at": "2025-04-21T16:02:28+00:00",
    "commented_code": "--> $DIR/issue-102878.rs:1:35\n    |\n LL | macro_rules!test{($l:expr,$_:r)=>({const:y y)}\n-   |                                  -^         ^ mismatched closing delimiter\n+   |                                  -^         ^ mismatched closing delimiter, may missing open `(`\n    |                                  ||",
    "repo_full_name": "rust-lang/rust",
    "discussion_comments": [
      {
        "comment_id": "2052654718",
        "repo_full_name": "rust-lang/rust",
        "pr_number": 138554,
        "pr_file": "tests/ui/macros/issue-102878.stderr",
        "discussion_id": "2052654718",
        "commented_code": "@@ -2,7 +2,7 @@ error: mismatched closing delimiter: `)`\n   --> $DIR/issue-102878.rs:1:35\n    |\n LL | macro_rules!test{($l:expr,$_:r)=>({const:y y)}\n-   |                                  -^         ^ mismatched closing delimiter\n+   |                                  -^         ^ mismatched closing delimiter, may missing open `(`\n    |                                  ||",
        "comment_created_at": "2025-04-21T16:02:28+00:00",
        "comment_author": "chenyukang",
        "comment_body": "this is worse too, we are not sure we should replace the left `{` to `(` or replace the right `)` to `}`.\r\n\r\nso, the better way is do not suggest any direction.\r\n\r\nI think we should only suggest missing a open(or closing) delimiter in the scenario that if we added a open(or closing) delimiter, there will be no error.\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2052655684",
    "pr_number": 138554,
    "pr_file": "tests/ui/parser/deli-ident-issue-2.stderr",
    "created_at": "2025-04-21T16:03:28+00:00",
    "commented_code": "LL |     if 1 < 2 {\n    |              ^ unclosed delimiter\n LL |         let _a = vec!];\n-   |                      ^ mismatched closing delimiter\n+   |                      ^ mismatched closing delimiter, may missing open `[`",
    "repo_full_name": "rust-lang/rust",
    "discussion_comments": [
      {
        "comment_id": "2052655684",
        "repo_full_name": "rust-lang/rust",
        "pr_number": 138554,
        "pr_file": "tests/ui/parser/deli-ident-issue-2.stderr",
        "discussion_id": "2052655684",
        "commented_code": "@@ -4,16 +4,7 @@ error: mismatched closing delimiter: `]`\n LL |     if 1 < 2 {\n    |              ^ unclosed delimiter\n LL |         let _a = vec!];\n-   |                      ^ mismatched closing delimiter\n+   |                      ^ mismatched closing delimiter, may missing open `[`",
        "comment_created_at": "2025-04-21T16:03:28+00:00",
        "comment_author": "chenyukang",
        "comment_body": "for example, this is the scenario we should report missing open `[`, because except for this `]` is lefted unmistached, all the other outer delimiter are matched correctly.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2169437076",
    "pr_number": 138554,
    "pr_file": "tests/ui/parser/issues/issue-68987-unmatch-issue-2.stderr",
    "created_at": "2025-06-26T16:20:12+00:00",
    "commented_code": "-error: mismatched closing delimiter: `)`\n-  --> $DIR/issue-68987-unmatch-issue-2.rs:3:32\n-   |\n-LL | async fn obstest() -> Result<> {\n-   |                                ^ unclosed delimiter\n-LL |     let obs_connect = || -> Result<(), MyError) {\n-   |                                               ^ mismatched closing delimiter",
    "repo_full_name": "rust-lang/rust",
    "discussion_comments": [
      {
        "comment_id": "2169437076",
        "repo_full_name": "rust-lang/rust",
        "pr_number": 138554,
        "pr_file": "tests/ui/parser/issues/issue-68987-unmatch-issue-2.stderr",
        "discussion_id": "2169437076",
        "commented_code": "@@ -1,11 +1,3 @@\n-error: mismatched closing delimiter: `)`\n-  --> $DIR/issue-68987-unmatch-issue-2.rs:3:32\n-   |\n-LL | async fn obstest() -> Result<> {\n-   |                                ^ unclosed delimiter\n-LL |     let obs_connect = || -> Result<(), MyError) {\n-   |                                               ^ mismatched closing delimiter",
        "comment_created_at": "2025-06-26T16:20:12+00:00",
        "comment_author": "estebank",
        "comment_body": "It might make sense to also collect the unclosed opening delimiter to be included in the later error:\r\n\r\n```\r\nerror: unexpected closing delimiter: `}`\r\n  --> $DIR/issue-68987-unmatch-issue-2.rs:14:1\r\n   |\r\nLL | async fn obstest() -> Result<> {\r\n   |                                ^ the mismatched closing `)` matches this `{`\r\nLL |     let obs_connect = || -> Result<(), MyError) {\r\n   |                                               - missing open `(` for this delimiter\r\n...\r\nLL | }\r\n   | ^ unexpected closing delimiter\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2197092125",
    "pr_number": 138554,
    "pr_file": "tests/ui/parser/issues/issue-104367.stderr",
    "created_at": "2025-07-10T09:16:43+00:00",
    "commented_code": "-error: mismatched closing delimiter: `)`\n-  --> $DIR/issue-104367.rs:5:15\n-   |\n-LL |             #![w,)\n-   |               ^  ^ mismatched closing delimiter\n-   |               |\n-   |               unclosed delimiter",
    "repo_full_name": "rust-lang/rust",
    "discussion_comments": [
      {
        "comment_id": "2197092125",
        "repo_full_name": "rust-lang/rust",
        "pr_number": 138554,
        "pr_file": "tests/ui/parser/issues/issue-104367.stderr",
        "discussion_id": "2197092125",
        "commented_code": "@@ -1,11 +1,3 @@\n-error: mismatched closing delimiter: `)`\n-  --> $DIR/issue-104367.rs:5:15\n-   |\n-LL |             #![w,)\n-   |               ^  ^ mismatched closing delimiter\n-   |               |\n-   |               unclosed delimiter",
        "comment_created_at": "2025-07-10T09:16:43+00:00",
        "comment_author": "chenyukang",
        "comment_body": "this is a typical mismatched one, \r\nthe right fix maybe `[w,]` or `(w,)`, \r\nit depends on the specific scenario.\r\nbut the new current hint is suggesting the second fix or adding another extra `(`?\r\nseems the old diagnostics is better.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2214863922",
    "pr_number": 138554,
    "pr_file": "tests/ui/parser/deli-ident-issue-2.stderr",
    "created_at": "2025-07-18T04:27:14+00:00",
    "commented_code": "-error: mismatched closing delimiter: `]`\n-  --> $DIR/deli-ident-issue-2.rs:2:14\n-   |\n-LL |     if 1 < 2 {\n-   |              ^ unclosed delimiter\n-LL |         let _a = vec!];\n-   |                      ^ mismatched closing delimiter\n-\n error: unexpected closing delimiter: `}`\n   --> $DIR/deli-ident-issue-2.rs:5:1\n    |\n+LL |     if 1 < 2 {\n+   |              - unclosed delimiter before unmatched delimiter",
    "repo_full_name": "rust-lang/rust",
    "discussion_comments": [
      {
        "comment_id": "2214863922",
        "repo_full_name": "rust-lang/rust",
        "pr_number": 138554,
        "pr_file": "tests/ui/parser/deli-ident-issue-2.stderr",
        "discussion_id": "2214863922",
        "commented_code": "@@ -1,19 +1,13 @@\n-error: mismatched closing delimiter: `]`\n-  --> $DIR/deli-ident-issue-2.rs:2:14\n-   |\n-LL |     if 1 < 2 {\n-   |              ^ unclosed delimiter\n-LL |         let _a = vec!];\n-   |                      ^ mismatched closing delimiter\n-\n error: unexpected closing delimiter: `}`\n   --> $DIR/deli-ident-issue-2.rs:5:1\n    |\n+LL |     if 1 < 2 {\n+   |              - unclosed delimiter before unmatched delimiter",
        "comment_created_at": "2025-07-18T04:27:14+00:00",
        "comment_author": "chenyukang",
        "comment_body": "```suggestion\r\n   |              - the nearest delimiter before unmatched delimiter\r\n```\r\nsince actually it's not unclosed, it's closed to the `}' at line of 8.\r\nwe point it only for help user narrow the span to missing open `[`.",
        "pr_file_module": null
      }
    ]
  }
]