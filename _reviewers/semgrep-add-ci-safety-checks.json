[
  {
    "discussion_id": "1610419378",
    "pr_number": 10270,
    "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
    "created_at": "2024-05-22T17:55:00+00:00",
    "commented_code": "local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1610419378",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610419378",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||",
        "comment_created_at": "2024-05-22T17:55:00+00:00",
        "comment_author": "IagoAbal",
        "comment_body": "It would be safer to add a check `git show --stat HEAD | grep -q \"synced from Pro\"` to abort in case the commit already comes from Pro.",
        "pr_file_module": null
      },
      {
        "comment_id": "1610421350",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610419378",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||",
        "comment_created_at": "2024-05-22T17:56:41+00:00",
        "comment_author": "IagoAbal",
        "comment_body": "```bash\r\nif git show --stat HEAD | grep -q \"synced from\"; then\r\n    echo \"error: HEAD commit already comes from Pro and cannot be synced\"\r\n    exit 1\r\nfi\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1610423256",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610419378",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||",
        "comment_created_at": "2024-05-22T17:58:19+00:00",
        "comment_author": "aryx",
        "comment_body": "if the commit already comes from pro, patch will fail later.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1610429494",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610419378",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||",
        "comment_created_at": "2024-05-22T18:04:02+00:00",
        "comment_author": "aryx",
        "comment_body": "ok, will add\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1610424949",
    "pr_number": 10270,
    "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
    "created_at": "2024-05-22T17:59:47+00:00",
    "commented_code": "local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||\n+         # will generate a 0001-xxx patch\n+         git format-patch develop^\n+         cd PRO\n+         git config --global user.name \"GitHub Actions Bot\"\n+         git config --global user.email \"<>\"\n+         git checkout -b $BRANCHNAME\n+         #TODO: apply patch from OSS HEAD to this branch\n+         cd OSS\n+         # note that this can fail if develop^ is already in Pro\n+         # in fact patch will propose to use -R to revert the patch instead\n+         patch -p1 < ../../0001-*\n+         # TODO: use git am to keep the subject/author/etc of the 0001-xxx",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1610424949",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610424949",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||\n+         # will generate a 0001-xxx patch\n+         git format-patch develop^\n+         cd PRO\n+         git config --global user.name \"GitHub Actions Bot\"\n+         git config --global user.email \"<>\"\n+         git checkout -b $BRANCHNAME\n+         #TODO: apply patch from OSS HEAD to this branch\n+         cd OSS\n+         # note that this can fail if develop^ is already in Pro\n+         # in fact patch will propose to use -R to revert the patch instead\n+         patch -p1 < ../../0001-*\n+         # TODO: use git am to keep the subject/author/etc of the 0001-xxx",
        "comment_created_at": "2024-05-22T17:59:47+00:00",
        "comment_author": "IagoAbal",
        "comment_body": "Why making this a TODO? It's pretty easy and it's not nice to loose author info in Pro.\r\n\r\n```bash\r\nsed -E 's:( a| b)/:\\1OSS/:g' 0001-*.patch >pro.patch\r\ngit am pro.patch\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1610428486",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610424949",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||\n+         # will generate a 0001-xxx patch\n+         git format-patch develop^\n+         cd PRO\n+         git config --global user.name \"GitHub Actions Bot\"\n+         git config --global user.email \"<>\"\n+         git checkout -b $BRANCHNAME\n+         #TODO: apply patch from OSS HEAD to this branch\n+         cd OSS\n+         # note that this can fail if develop^ is already in Pro\n+         # in fact patch will propose to use -R to revert the patch instead\n+         patch -p1 < ../../0001-*\n+         # TODO: use git am to keep the subject/author/etc of the 0001-xxx",
        "comment_created_at": "2024-05-22T18:03:02+00:00",
        "comment_author": "IagoAbal",
        "comment_body": "I haven't tried but GPT suggests `git am --directory=OSS 0001-*.patch`",
        "pr_file_module": null
      },
      {
        "comment_id": "1610429619",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610424949",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||\n+         # will generate a 0001-xxx patch\n+         git format-patch develop^\n+         cd PRO\n+         git config --global user.name \"GitHub Actions Bot\"\n+         git config --global user.email \"<>\"\n+         git checkout -b $BRANCHNAME\n+         #TODO: apply patch from OSS HEAD to this branch\n+         cd OSS\n+         # note that this can fail if develop^ is already in Pro\n+         # in fact patch will propose to use -R to revert the patch instead\n+         patch -p1 < ../../0001-*\n+         # TODO: use git am to keep the subject/author/etc of the 0001-xxx",
        "comment_created_at": "2024-05-22T18:04:09+00:00",
        "comment_author": "aryx",
        "comment_body": "ok will add, thx",
        "pr_file_module": null
      },
      {
        "comment_id": "1610430525",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610424949",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||\n+         # will generate a 0001-xxx patch\n+         git format-patch develop^\n+         cd PRO\n+         git config --global user.name \"GitHub Actions Bot\"\n+         git config --global user.email \"<>\"\n+         git checkout -b $BRANCHNAME\n+         #TODO: apply patch from OSS HEAD to this branch\n+         cd OSS\n+         # note that this can fail if develop^ is already in Pro\n+         # in fact patch will propose to use -R to revert the patch instead\n+         patch -p1 < ../../0001-*\n+         # TODO: use git am to keep the subject/author/etc of the 0001-xxx",
        "comment_created_at": "2024-05-22T18:04:57+00:00",
        "comment_author": "aryx",
        "comment_body": "when I have something working in GHA, even if it's not perfect, I want to commit it ASAP because you never know what little change can affect the thing and suddenly make the workflow fail ...\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1610431463",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610424949",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||\n+         # will generate a 0001-xxx patch\n+         git format-patch develop^\n+         cd PRO\n+         git config --global user.name \"GitHub Actions Bot\"\n+         git config --global user.email \"<>\"\n+         git checkout -b $BRANCHNAME\n+         #TODO: apply patch from OSS HEAD to this branch\n+         cd OSS\n+         # note that this can fail if develop^ is already in Pro\n+         # in fact patch will propose to use -R to revert the patch instead\n+         patch -p1 < ../../0001-*\n+         # TODO: use git am to keep the subject/author/etc of the 0001-xxx",
        "comment_created_at": "2024-05-22T18:05:49+00:00",
        "comment_author": "IagoAbal",
        "comment_body": "Tried it and it works!",
        "pr_file_module": null
      },
      {
        "comment_id": "1610435227",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610424949",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||\n+         # will generate a 0001-xxx patch\n+         git format-patch develop^\n+         cd PRO\n+         git config --global user.name \"GitHub Actions Bot\"\n+         git config --global user.email \"<>\"\n+         git checkout -b $BRANCHNAME\n+         #TODO: apply patch from OSS HEAD to this branch\n+         cd OSS\n+         # note that this can fail if develop^ is already in Pro\n+         # in fact patch will propose to use -R to revert the patch instead\n+         patch -p1 < ../../0001-*\n+         # TODO: use git am to keep the subject/author/etc of the 0001-xxx",
        "comment_created_at": "2024-05-22T18:08:42+00:00",
        "comment_author": "aryx",
        "comment_body": "Nice :)",
        "pr_file_module": null
      },
      {
        "comment_id": "1610435445",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10270,
        "pr_file": ".github/workflows/sync-with-PRO.jsonnet",
        "discussion_id": "1610424949",
        "commented_code": "@@ -13,10 +15,63 @@ local gha = import 'libs/gha.libsonnet';\n \n local job = {\n   'runs-on': 'ubuntu-latest',\n-  steps: [\n+  permissions: gha.write_permissions,\n+  steps: semgrep.github_bot.get_token_steps + [\n      {\n-       run: 'echo TODO'\n+      name: 'Checkout OSS',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        ref: '${{ github.event.repository.default_branch }}',\n+        // fetch all history\n+        'fetch-depth': 0,\n+        // Use the token provided by the JWT token getter above\n+        token: semgrep.github_bot.token_ref,\n+      },\n      },\n+     {\n+      name: 'Checkout PRO',\n+      uses: 'actions/checkout@v3',\n+      with: {\n+        repository: 'semgrep/semgrep-proprietary',\n+        path: 'PRO',\n+        token: semgrep.github_bot.token_ref,\n+       },\n+     },\n+     {\n+      name: 'Creating the branch and commiting to it',\n+      env: {\n+        BRANCHNAME: 'sync-with-PRO-x3-${{ github.run_id }}-${{ github.run_attempt }}',\n+        GITHUB_TOKEN: semgrep.github_bot.token_ref,\n+      },\n+       run: |||\n+         # will generate a 0001-xxx patch\n+         git format-patch develop^\n+         cd PRO\n+         git config --global user.name \"GitHub Actions Bot\"\n+         git config --global user.email \"<>\"\n+         git checkout -b $BRANCHNAME\n+         #TODO: apply patch from OSS HEAD to this branch\n+         cd OSS\n+         # note that this can fail if develop^ is already in Pro\n+         # in fact patch will propose to use -R to revert the patch instead\n+         patch -p1 < ../../0001-*\n+         # TODO: use git am to keep the subject/author/etc of the 0001-xxx",
        "comment_created_at": "2024-05-22T18:08:50+00:00",
        "comment_author": "aryx",
        "comment_body": "You're getting addicted!\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1531191788",
    "pr_number": 9971,
    "pr_file": "dune-project",
    "created_at": "2024-03-19T22:20:26+00:00",
    "commented_code": "uuidm\n     (timedesc (>= 2.0.0)) ; used via git-wrapper\n     (lsp (= 1.15.1-5.0))\n+    git\n+    git-unix",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1531191788",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9971,
        "pr_file": "dune-project",
        "discussion_id": "1531191788",
        "commented_code": "@@ -476,6 +476,8 @@ For more information see https://semgrep.dev\n     uuidm\n     (timedesc (>= 2.0.0)) ; used via git-wrapper\n     (lsp (= 1.15.1-5.0))\n+    git\n+    git-unix",
        "comment_created_at": "2024-03-19T22:20:26+00:00",
        "comment_author": "kopecs",
        "comment_body": "Will this be alright for Windows support?",
        "pr_file_module": null
      },
      {
        "comment_id": "1531222204",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9971,
        "pr_file": "dune-project",
        "discussion_id": "1531191788",
        "commented_code": "@@ -476,6 +476,8 @@ For more information see https://semgrep.dev\n     uuidm\n     (timedesc (>= 2.0.0)) ; used via git-wrapper\n     (lsp (= 1.15.1-5.0))\n+    git\n+    git-unix",
        "comment_created_at": "2024-03-19T22:54:04+00:00",
        "comment_author": "ajbt200128",
        "comment_body": "\ud83e\udd37 there's a mirage version that I *think* has js_of_ocaml support. We can do some virtual modules stuff if this gets in the way",
        "pr_file_module": null
      },
      {
        "comment_id": "1531223701",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9971,
        "pr_file": "dune-project",
        "discussion_id": "1531191788",
        "commented_code": "@@ -476,6 +476,8 @@ For more information see https://semgrep.dev\n     uuidm\n     (timedesc (>= 2.0.0)) ; used via git-wrapper\n     (lsp (= 1.15.1-5.0))\n+    git\n+    git-unix",
        "comment_created_at": "2024-03-19T22:56:15+00:00",
        "comment_author": "kopecs",
        "comment_body": "ok",
        "pr_file_module": null
      },
      {
        "comment_id": "1533875001",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9971,
        "pr_file": "dune-project",
        "discussion_id": "1531191788",
        "commented_code": "@@ -476,6 +476,8 @@ For more information see https://semgrep.dev\n     uuidm\n     (timedesc (>= 2.0.0)) ; used via git-wrapper\n     (lsp (= 1.15.1-5.0))\n+    git\n+    git-unix",
        "comment_created_at": "2024-03-21T13:08:22+00:00",
        "comment_author": "aryx",
        "comment_body": "One of our CI job is checking whether semgrep is building on windows.",
        "pr_file_module": null
      },
      {
        "comment_id": "1533876454",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9971,
        "pr_file": "dune-project",
        "discussion_id": "1531191788",
        "commented_code": "@@ -476,6 +476,8 @@ For more information see https://semgrep.dev\n     uuidm\n     (timedesc (>= 2.0.0)) ; used via git-wrapper\n     (lsp (= 1.15.1-5.0))\n+    git\n+    git-unix",
        "comment_created_at": "2024-03-21T13:09:20+00:00",
        "comment_author": "aryx",
        "comment_body": "build-test-windows-x86.yml, so if the workflow pass that means we're fine using git and git-unix\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1515195217",
    "pr_number": 9880,
    "pr_file": ".github/workflows/check-semgrep-pro.jsonnet",
    "created_at": "2024-03-06T21:44:08+00:00",
    "commented_code": "local actions = import 'libs/actions.libsonnet';\n local semgrep = import 'libs/semgrep.libsonnet';\n \n+// exported for other workflows",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1515195217",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9880,
        "pr_file": ".github/workflows/check-semgrep-pro.jsonnet",
        "discussion_id": "1515195217",
        "commented_code": "@@ -7,53 +7,60 @@ local gha = import 'libs/gha.libsonnet';\n local actions = import 'libs/actions.libsonnet';\n local semgrep = import 'libs/semgrep.libsonnet';\n \n+// exported for other workflows",
        "comment_created_at": "2024-03-06T21:44:08+00:00",
        "comment_author": "IagoAbal",
        "comment_body": "Why not just porting the tests that we want to run to the Pro repo? We need to do that in preparation for the monorepo. I haven't reviewed this carefully, but if you're just extending `check-semgrep-pro`, then I'm guessing that this won't work for PRs that require updates to Pro, which are many.",
        "pr_file_module": null
      },
      {
        "comment_id": "1515213539",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9880,
        "pr_file": ".github/workflows/check-semgrep-pro.jsonnet",
        "discussion_id": "1515195217",
        "commented_code": "@@ -7,53 +7,60 @@ local gha = import 'libs/gha.libsonnet';\n local actions = import 'libs/actions.libsonnet';\n local semgrep = import 'libs/semgrep.libsonnet';\n \n+// exported for other workflows",
        "comment_created_at": "2024-03-06T22:02:41+00:00",
        "comment_author": "emjin",
        "comment_body": "I did that in the past, but I'm not a fan of duplicating the pytest test infrastructure. Since `--pro-intrafile` will be default, I want all the semgrep ci tests to be run using `--pro-intrafile`. If someone adds a `semgrep ci` test, I don't want them to have to go to a different repo to make it use the correct binary. @kopecs also had some tests he wanted to add that made more sense in the semgrep repo.\r\n\r\n> This will not work when the PR requires another PR in Pro\r\n\r\nThat's true, but when that happens CI is red anyway usually",
        "pr_file_module": null
      },
      {
        "comment_id": "1515230623",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9880,
        "pr_file": ".github/workflows/check-semgrep-pro.jsonnet",
        "discussion_id": "1515195217",
        "commented_code": "@@ -7,53 +7,60 @@ local gha = import 'libs/gha.libsonnet';\n local actions = import 'libs/actions.libsonnet';\n local semgrep = import 'libs/semgrep.libsonnet';\n \n+// exported for other workflows",
        "comment_created_at": "2024-03-06T22:21:06+00:00",
        "comment_author": "amchiclet",
        "comment_body": "Sounds like the bottom line is that there are definitely some tests that make sense to be in the semgrep repo.\r\n\r\nBut the contention is that we are moving to monorepo soon (IIUC?), and we are worried about doing work that we will eventually throw away or make the migration harder. For this point, I still this PR is still the right thing to do now. I feel like mono repo may take a while. I'm being pessimistic here though.\r\n\r\nI don't understand the issue about a semgrep PR requiring a PR from Pro. I'm only familiar with the other way around. What's an example?",
        "pr_file_module": null
      },
      {
        "comment_id": "1516077863",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9880,
        "pr_file": ".github/workflows/check-semgrep-pro.jsonnet",
        "discussion_id": "1515195217",
        "commented_code": "@@ -7,53 +7,60 @@ local gha = import 'libs/gha.libsonnet';\n local actions = import 'libs/actions.libsonnet';\n local semgrep = import 'libs/semgrep.libsonnet';\n \n+// exported for other workflows",
        "comment_created_at": "2024-03-07T12:32:27+00:00",
        "comment_author": "IagoAbal",
        "comment_body": "> That's true, but when that happens CI is red anyway usually\r\n\r\nYes, but then we merge the PR regardless of the CI being red.\r\n\r\nHow much do we need to duplicate? Nowadays we use Jsonnet to generate the CI workflows `.yml` files. Couldn't we use Jsonnet to reduce duplication to the minimum? Also, if we set this up, it won't be duplicated for too long, both @aryx and I really want to switch to the monorepo ASAP. And the CI workflows are the main blocker, if we move them, we could switch to a monorepo fairly soon I think.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1516642126",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9880,
        "pr_file": ".github/workflows/check-semgrep-pro.jsonnet",
        "discussion_id": "1515195217",
        "commented_code": "@@ -7,53 +7,60 @@ local gha = import 'libs/gha.libsonnet';\n local actions = import 'libs/actions.libsonnet';\n local semgrep = import 'libs/semgrep.libsonnet';\n \n+// exported for other workflows",
        "comment_created_at": "2024-03-07T18:38:19+00:00",
        "comment_author": "emjin",
        "comment_body": "> How much do we need to duplicate?\r\n\r\nI'm not quite sure, actually. Is your vision that the pytests are all entirely duplicated on the semgrep-proprietary side? And that we add new pytests for pro in the semgrep repo? I think that wouldn't be too much effort, if it's just a mirror, and I could be convinced to support that. My main concern is that sometimes you might not want to add a pytest on the semgrep side for various reasons (e.g. testing a new rule format SR wants to keep quiet)",
        "pr_file_module": null
      },
      {
        "comment_id": "1517481599",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9880,
        "pr_file": ".github/workflows/check-semgrep-pro.jsonnet",
        "discussion_id": "1515195217",
        "commented_code": "@@ -7,53 +7,60 @@ local gha = import 'libs/gha.libsonnet';\n local actions = import 'libs/actions.libsonnet';\n local semgrep = import 'libs/semgrep.libsonnet';\n \n+// exported for other workflows",
        "comment_created_at": "2024-03-08T09:39:57+00:00",
        "comment_author": "IagoAbal",
        "comment_body": "If we want to do things well, I think there is no choice than to run for each Pro PR all the checks we run for OSS PRs. (This is actually regardless of having a monorepo or not having it.) If we disagree on this point we should have a video call Um, you and I, because I would like to understand your point of view, I could be wrong.",
        "pr_file_module": null
      },
      {
        "comment_id": "1517962637",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9880,
        "pr_file": ".github/workflows/check-semgrep-pro.jsonnet",
        "discussion_id": "1515195217",
        "commented_code": "@@ -7,53 +7,60 @@ local gha = import 'libs/gha.libsonnet';\n local actions = import 'libs/actions.libsonnet';\n local semgrep = import 'libs/semgrep.libsonnet';\n \n+// exported for other workflows",
        "comment_created_at": "2024-03-08T16:35:57+00:00",
        "comment_author": "amchiclet",
        "comment_body": "> run for each Pro PR all the checks we run for OSS PRs\r\n\r\nI agree with this direction.\r\n\r\nRegarding this PR in particular, what do you think is a good way to test changes like [making pro-intrafile turned on by default](https://github.com/semgrep/semgrep/pull/9872)?\r\n\r\nShould it be a manual trigger from the pro repo instead, where the dev can insert a PR to test?",
        "pr_file_module": null
      }
    ]
  }
]