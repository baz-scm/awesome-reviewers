[
  {
    "discussion_id": "1513740291",
    "pr_number": 9880,
    "pr_file": ".github/workflows/tests.yml",
    "created_at": "2024-03-06T02:39:01+00:00",
    "commented_code": "test-cli:\n     name: test semgrep-cli\n     needs:\n-      - build-test-core-x86\n+      - check-semgrep-pro",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1513740291",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9880,
        "pr_file": ".github/workflows/tests.yml",
        "discussion_id": "1513740291",
        "commented_code": "@@ -197,7 +200,7 @@ jobs:\n   test-cli:\n     name: test semgrep-cli\n     needs:\n-      - build-test-core-x86\n+      - check-semgrep-pro",
        "comment_created_at": "2024-03-06T02:39:01+00:00",
        "comment_author": "emjin",
        "comment_body": "I am curious how much time this adds to our test process, if you happen to know",
        "pr_file_module": null
      },
      {
        "comment_id": "1514817859",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9880,
        "pr_file": ".github/workflows/tests.yml",
        "discussion_id": "1513740291",
        "commented_code": "@@ -197,7 +200,7 @@ jobs:\n   test-cli:\n     name: test semgrep-cli\n     needs:\n-      - build-test-core-x86\n+      - check-semgrep-pro",
        "comment_created_at": "2024-03-06T16:40:40+00:00",
        "comment_author": "amchiclet",
        "comment_body": "The short answer is that the whole `tests` workflow takes the same amount of time compared to before.\r\n\r\nThe tests themselves take roughly the same time because it's just downloading a different artifact, and the scan still hits the OSS version. Once we also run pytest for e2e-pro in CI, maybe that will change.\r\n\r\nThe build takes longer (before 9m, now 11m) because it's built in a different environment (alpine vs ubuntu).\r\n\r\nRegardless, the `build-test-windows-x86` and the `test-semgrep-pro` jobs both [dominate the build time for this whole workflow](https://github.com/semgrep/semgrep/actions/runs/8173081223), so this pro build on x86 is masked, and the overall process takes the same amount of time.\r\n\r\nAt some point I feel like many workflows are doing similar things, and we may be able to consolidate. I just looked at `test-semgrep-pro` and `check-semgrep-pro` are similar but they're not exactly doing the same things. But maybe there are some similarities after all, and we can save some time.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1488417327",
    "pr_number": 9761,
    "pr_file": ".github/workflows/lint.yml",
    "created_at": "2024-02-13T18:48:54+00:00",
    "commented_code": "opam install -y ocamlformat.0.26.1\n           git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n           opam exec -- pre-commit run --verbose --all lint-ocaml\n+  check-workflows-up-to-date:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v3\n+      - name: Check GitHub workflow files are up to date\n+        working-directory: .github/workflows\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install jsonnet\n+          make",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1488417327",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9761,
        "pr_file": ".github/workflows/lint.yml",
        "discussion_id": "1488417327",
        "commented_code": "@@ -51,6 +51,18 @@ jobs:\n           opam install -y ocamlformat.0.26.1\n           git config --global --add safe.directory \"$GITHUB_WORKSPACE\"\n           opam exec -- pre-commit run --verbose --all lint-ocaml\n+  check-workflows-up-to-date:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v3\n+      - name: Check GitHub workflow files are up to date\n+        working-directory: .github/workflows\n+        run: |\n+          sudo apt-get update\n+          sudo apt-get install jsonnet\n+          make",
        "comment_created_at": "2024-02-13T18:48:54+00:00",
        "comment_author": "aryx",
        "comment_body": "please do 'make clean; make'\r\nbecause we don't handle dependencies right now so 'make' might be incorrect and forget\r\nto regenerate some files; make clean; make is a bit brute force, but for a CI check that's perfect.\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1464539696",
    "pr_number": 9650,
    "pr_file": ".github/workflows/check-submodule.yml",
    "created_at": "2024-01-24T08:54:09+00:00",
    "commented_code": "+name: check-submodule\n+\n+on: [pull_request]\n+\n+jobs:\n+  check-submodule:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout this repo\n+        uses: actions/checkout@v3\n+      # We need to explicitly check out the Semgrep interfaces submodule since",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1464539696",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9650,
        "pr_file": ".github/workflows/check-submodule.yml",
        "discussion_id": "1464539696",
        "commented_code": "@@ -0,0 +1,44 @@\n+name: check-submodule\n+\n+on: [pull_request]\n+\n+jobs:\n+  check-submodule:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout this repo\n+        uses: actions/checkout@v3\n+      # We need to explicitly check out the Semgrep interfaces submodule since",
        "comment_created_at": "2024-01-24T08:54:09+00:00",
        "comment_author": "aryx",
        "comment_body": "I think you can just use with: submodules: true\r\nso you don't need to do a separate checkout for semgrep-interfaces, and you can remove this comment about\r\nssh I don't really understand.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1465520570",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9650,
        "pr_file": ".github/workflows/check-submodule.yml",
        "discussion_id": "1464539696",
        "commented_code": "@@ -0,0 +1,44 @@\n+name: check-submodule\n+\n+on: [pull_request]\n+\n+jobs:\n+  check-submodule:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout this repo\n+        uses: actions/checkout@v3\n+      # We need to explicitly check out the Semgrep interfaces submodule since",
        "comment_created_at": "2024-01-24T20:48:49+00:00",
        "comment_author": "ihji",
        "comment_body": "Thanks for catching it. semgrep-pro is a private repo, but semgrep-interfaces is public, so a separate checkout should not be necessary.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1446649647",
    "pr_number": 9566,
    "pr_file": ".github/workflows/build-test-core-win64.yml",
    "created_at": "2024-01-09T21:46:45+00:00",
    "commented_code": "+# AUTOGENERATED FROM build-test-core-win64.jsonnet DO NOT MODIFY\n+name: build-test-core-win64\n+\"on\":\n+  workflow_dispatch:\n+  workflow_call:\n+jobs:\n+  job:\n+    runs-on: windows-latest\n+    defaults:\n+      run:\n+        shell: bash\n+        working-directory: checkout\n+    steps:\n+    - name: Configure git\n+      working-directory: \"\"\n+      run: |\n+        git config --system core.longpaths true\n+        git config --global fetch.parallel 50\n+    - uses: actions/checkout@v3\n+      with:\n+        submodules: true\n+        path: checkout\n+    - uses: ocaml/setup-ocaml@v2\n+      with:\n+        ocaml-compiler: \"4.14\"\n+        opam-pin: false\n+        allow-prerelease-opam: true\n+        opam-repositories: |\n+          opam-repository-mingw: https://github.com/ocaml-opam/opam-repository-mingw.git#sunset\n+          default: https://github.com/ocaml/opam-repository.git\n+    - name: Build tree-sitter\n+      env:\n+        CC: x86_64-w64-mingw32-gcc\n+      run: |\n+        cd libs/ocaml-tree-sitter-core\n+        ./configure\n+        ./scripts/download-tree-sitter --lazy\n+        prefix=\"$(pwd)/tree-sitter\"\n+        cd downloads/tree-sitter\n+        make PREFIX=\"$prefix\" CFLAGS=\"-O3 -Wall -Wextra\"\n+        make PREFIX=\"$prefix\" install\n+    - name: Install deps\n+      run: |\n+        export PATH=\"${CYGWIN_ROOT_BIN}:${PATH}\"\n+        opam depext conf-pkg-config conf-gmp conf-libpcre\n+        opam install -y ./ ./libs/ocaml-tree-sitter-core --deps-only\n+    - name: Build semgrep-core\n+      env:\n+        ARTIFACT_PATH: /tmp/ocaml-build-artifacts.tgz\n+      run: |\n+        export PATH=\"${CYGWIN_ROOT_BIN}:${PATH}\"\n+        export TREESITTER_INCDIR=$(pwd)/libs/ocaml-tree-sitter-core/tree-sitter/include\n+        export TREESITTER_LIBDIR=$(pwd)/libs/ocaml-tree-sitter-core/tree-sitter/lib\n+\n+        # cygwin cant handle rpath\n+        for filename in $(find ./languages/ -name dune); do\n+          grep -v rpath $filename > $filename.new\n+          mv $filename.new $filename\n+        done\n+        for filename in $(find ./libs/ocaml-tree-sitter-core/ -name dune); do\n+          grep -v rpath $filename > $filename.new\n+          mv $filename.new $filename\n+        done\n+\n+        # TODO: build everything once osemgrep_cli_interactive has been moved to pro\n+        opam exec -- dune build src/main\n+\n+        tar czvf ${ARTIFACT_PATH} _build/default/src/main/Main.exe \\",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1446649647",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9566,
        "pr_file": ".github/workflows/build-test-core-win64.yml",
        "discussion_id": "1446649647",
        "commented_code": "@@ -0,0 +1,81 @@\n+# AUTOGENERATED FROM build-test-core-win64.jsonnet DO NOT MODIFY\n+name: build-test-core-win64\n+\"on\":\n+  workflow_dispatch:\n+  workflow_call:\n+jobs:\n+  job:\n+    runs-on: windows-latest\n+    defaults:\n+      run:\n+        shell: bash\n+        working-directory: checkout\n+    steps:\n+    - name: Configure git\n+      working-directory: \"\"\n+      run: |\n+        git config --system core.longpaths true\n+        git config --global fetch.parallel 50\n+    - uses: actions/checkout@v3\n+      with:\n+        submodules: true\n+        path: checkout\n+    - uses: ocaml/setup-ocaml@v2\n+      with:\n+        ocaml-compiler: \"4.14\"\n+        opam-pin: false\n+        allow-prerelease-opam: true\n+        opam-repositories: |\n+          opam-repository-mingw: https://github.com/ocaml-opam/opam-repository-mingw.git#sunset\n+          default: https://github.com/ocaml/opam-repository.git\n+    - name: Build tree-sitter\n+      env:\n+        CC: x86_64-w64-mingw32-gcc\n+      run: |\n+        cd libs/ocaml-tree-sitter-core\n+        ./configure\n+        ./scripts/download-tree-sitter --lazy\n+        prefix=\"$(pwd)/tree-sitter\"\n+        cd downloads/tree-sitter\n+        make PREFIX=\"$prefix\" CFLAGS=\"-O3 -Wall -Wextra\"\n+        make PREFIX=\"$prefix\" install\n+    - name: Install deps\n+      run: |\n+        export PATH=\"${CYGWIN_ROOT_BIN}:${PATH}\"\n+        opam depext conf-pkg-config conf-gmp conf-libpcre\n+        opam install -y ./ ./libs/ocaml-tree-sitter-core --deps-only\n+    - name: Build semgrep-core\n+      env:\n+        ARTIFACT_PATH: /tmp/ocaml-build-artifacts.tgz\n+      run: |\n+        export PATH=\"${CYGWIN_ROOT_BIN}:${PATH}\"\n+        export TREESITTER_INCDIR=$(pwd)/libs/ocaml-tree-sitter-core/tree-sitter/include\n+        export TREESITTER_LIBDIR=$(pwd)/libs/ocaml-tree-sitter-core/tree-sitter/lib\n+\n+        # cygwin cant handle rpath\n+        for filename in $(find ./languages/ -name dune); do\n+          grep -v rpath $filename > $filename.new\n+          mv $filename.new $filename\n+        done\n+        for filename in $(find ./libs/ocaml-tree-sitter-core/ -name dune); do\n+          grep -v rpath $filename > $filename.new\n+          mv $filename.new $filename\n+        done\n+\n+        # TODO: build everything once osemgrep_cli_interactive has been moved to pro\n+        opam exec -- dune build src/main\n+\n+        tar czvf ${ARTIFACT_PATH} _build/default/src/main/Main.exe \\",
        "comment_created_at": "2024-01-09T21:46:45+00:00",
        "comment_author": "aryx",
        "comment_body": "maybe add a TODO saying we should find a way at some point to statically link semgrep for windows.\r\nThey managed to do it for the opam.exe binary for windows they distribute now.",
        "pr_file_module": null
      }
    ]
  }
]