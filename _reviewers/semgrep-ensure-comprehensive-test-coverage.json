[
  {
    "discussion_id": "1583357564",
    "pr_number": 10165,
    "pr_file": "tests/rules/severity_critical.yaml",
    "created_at": "2024-04-29T16:14:36+00:00",
    "commented_code": "+rules:\n+- id: critical\n+  languages:\n+  - python\n+  match: stuff($ARG);\n+  message: rule_template_message\n+  severity: CRITICAL",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1583357564",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 10165,
        "pr_file": "tests/rules/severity_critical.yaml",
        "discussion_id": "1583357564",
        "commented_code": "@@ -0,0 +1,7 @@\n+rules:\n+- id: critical\n+  languages:\n+  - python\n+  match: stuff($ARG);\n+  message: rule_template_message\n+  severity: CRITICAL  ",
        "comment_created_at": "2024-04-29T16:14:36+00:00",
        "comment_author": "emjin",
        "comment_body": "Should we add a test for each level so that we get a failure if the mappings fail?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1505546878",
    "pr_number": 9851,
    "pr_file": "tests/metachecks/explicit-regex-capture.rule.yaml",
    "created_at": "2024-02-28T08:32:57+00:00",
    "commented_code": "+rules:",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1505546878",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9851,
        "pr_file": "tests/metachecks/explicit-regex-capture.rule.yaml",
        "discussion_id": "1505546878",
        "commented_code": "@@ -0,0 +1,11 @@\n+rules:",
        "comment_created_at": "2024-02-28T08:32:57+00:00",
        "comment_author": "aryx",
        "comment_body": "I think you've inverted the use of the .rule.yaml vs .yaml.\r\nLook at the other test file in the directory (I have to admit it's a but confusing, so some renaming could be useful or\r\na README).\r\nAlso the other tests have some     # ruleid: semgrep-metacheck-builtin\r\nin the .rule.yaml to actually test the functionality but none of your test have one.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1506315137",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9851,
        "pr_file": "tests/metachecks/explicit-regex-capture.rule.yaml",
        "discussion_id": "1505546878",
        "commented_code": "@@ -0,0 +1,11 @@\n+rules:",
        "comment_created_at": "2024-02-28T17:18:33+00:00",
        "comment_author": "emjin",
        "comment_body": "I'm trying to test that the built-in metachecks don't fire. All of these test rules should be valid.",
        "pr_file_module": null
      },
      {
        "comment_id": "1506419172",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9851,
        "pr_file": "tests/metachecks/explicit-regex-capture.rule.yaml",
        "discussion_id": "1505546878",
        "commented_code": "@@ -0,0 +1,11 @@\n+rules:",
        "comment_created_at": "2024-02-28T18:46:01+00:00",
        "comment_author": "emjin",
        "comment_body": "Improved the comment for clarity",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1427813507",
    "pr_number": 9452,
    "pr_file": "tests/rules/string_vs_char_ptr_cpp.yaml",
    "created_at": "2023-12-15T10:27:49+00:00",
    "commented_code": "+rules:\n+  - patterns:\n+      - pattern: |\n+          $EXPR\n+      - metavariable-type:\n+          metavariable: $EXPR\n+          type: string",
    "repo_full_name": "semgrep/semgrep",
    "discussion_comments": [
      {
        "comment_id": "1427813507",
        "repo_full_name": "semgrep/semgrep",
        "pr_number": 9452,
        "pr_file": "tests/rules/string_vs_char_ptr_cpp.yaml",
        "discussion_id": "1427813507",
        "commented_code": "@@ -0,0 +1,13 @@\n+rules:\n+  - patterns:\n+      - pattern: |\n+          $EXPR\n+      - metavariable-type:\n+          metavariable: $EXPR\n+          type: string",
        "comment_created_at": "2023-12-15T10:27:49+00:00",
        "comment_author": "IagoAbal",
        "comment_body": "No test showing that we can match `type: char*`.",
        "pr_file_module": null
      }
    ]
  }
]