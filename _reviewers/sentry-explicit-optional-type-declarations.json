[
  {
    "discussion_id": "2172423290",
    "pr_number": 94536,
    "pr_file": "static/app/components/replays/breadcrumbs/breadcrumbCodeSnippet.tsx",
    "created_at": "2025-06-27T16:37:46+00:00",
    "commented_code": "+import styled from '@emotion/styled';\n+import beautify from 'js-beautify';\n+\n+import {CodeSnippet} from 'sentry/components/codeSnippet';\n+import Placeholder from 'sentry/components/placeholder';\n+import type {Extraction} from 'sentry/utils/replays/extractDomNodes';\n+import type {ReplayFrame} from 'sentry/utils/replays/types';\n+import {isSpanFrame, isWebVitalFrame} from 'sentry/utils/replays/types';\n+\n+interface Props {\n+  frame: ReplayFrame;\n+  isPending: boolean;\n+  showSnippet: boolean;\n+  extraction?: Extraction;",
    "repo_full_name": "getsentry/sentry",
    "discussion_comments": [
      {
        "comment_id": "2172423290",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 94536,
        "pr_file": "static/app/components/replays/breadcrumbs/breadcrumbCodeSnippet.tsx",
        "discussion_id": "2172423290",
        "commented_code": "@@ -0,0 +1,45 @@\n+import styled from '@emotion/styled';\n+import beautify from 'js-beautify';\n+\n+import {CodeSnippet} from 'sentry/components/codeSnippet';\n+import Placeholder from 'sentry/components/placeholder';\n+import type {Extraction} from 'sentry/utils/replays/extractDomNodes';\n+import type {ReplayFrame} from 'sentry/utils/replays/types';\n+import {isSpanFrame, isWebVitalFrame} from 'sentry/utils/replays/types';\n+\n+interface Props {\n+  frame: ReplayFrame;\n+  isPending: boolean;\n+  showSnippet: boolean;\n+  extraction?: Extraction;",
        "comment_created_at": "2025-06-27T16:37:46+00:00",
        "comment_author": "seer-by-sentry[bot]",
        "comment_body": "Consider adding proper TypeScript types instead of using optional chaining. The `extraction?.html` pattern suggests the function could receive undefined, but the interface doesn't reflect this. Either make `extraction` required or update the interface to reflect its optional nature.\n```suggestion\ninterface Props {\n  frame: ReplayFrame;\n  isPending: boolean;\n  showSnippet: boolean;\n  extraction?: Extraction; // Make this explicitly optional\n}\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2159344983",
    "pr_number": 93902,
    "pr_file": "static/app/views/dashboards/widgets/tableWidget/defaultTableCellRenderers.tsx",
    "created_at": "2025-06-20T16:30:07+00:00",
    "commented_code": "+import type {Theme} from '@emotion/react';\n+import styled from '@emotion/styled';\n+import type {Location} from 'history';\n+\n+import {Tooltip} from 'sentry/components/core/tooltip';\n+import type {GridColumnOrder} from 'sentry/components/gridEditable';\n+import SortLink from 'sentry/components/gridEditable/sortLink';\n+import type {Organization} from 'sentry/types/organization';\n+import {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\n+import type {ColumnValueType} from 'sentry/utils/discover/fields';\n+import {fieldAlignment} from 'sentry/utils/discover/fields';\n+import type {\n+  TabularColumn,\n+  TabularData,\n+  TabularRow,\n+} from 'sentry/views/dashboards/widgets/common/types';\n+\n+/**\n+ * Renderers that use any supplied renderer, but fallback to default rendering if none are provided\n+ */\n+interface DefaultHeadCellRenderProps {\n+  renderTableHeadCell?: (\n+    column: GridColumnOrder,\n+    columnIndex: number\n+  ) => React.ReactNode | undefined;\n+}\n+\n+interface DefaultBodyCellRenderProps {\n+  location: Location;\n+  organization: Organization;\n+  theme: Theme;\n+  renderTableBodyCell?: (\n+    column: GridColumnOrder,\n+    dataRow: Record<string, any>,",
    "repo_full_name": "getsentry/sentry",
    "discussion_comments": [
      {
        "comment_id": "2159344983",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 93902,
        "pr_file": "static/app/views/dashboards/widgets/tableWidget/defaultTableCellRenderers.tsx",
        "discussion_id": "2159344983",
        "commented_code": "@@ -0,0 +1,112 @@\n+import type {Theme} from '@emotion/react';\n+import styled from '@emotion/styled';\n+import type {Location} from 'history';\n+\n+import {Tooltip} from 'sentry/components/core/tooltip';\n+import type {GridColumnOrder} from 'sentry/components/gridEditable';\n+import SortLink from 'sentry/components/gridEditable/sortLink';\n+import type {Organization} from 'sentry/types/organization';\n+import {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\n+import type {ColumnValueType} from 'sentry/utils/discover/fields';\n+import {fieldAlignment} from 'sentry/utils/discover/fields';\n+import type {\n+  TabularColumn,\n+  TabularData,\n+  TabularRow,\n+} from 'sentry/views/dashboards/widgets/common/types';\n+\n+/**\n+ * Renderers that use any supplied renderer, but fallback to default rendering if none are provided\n+ */\n+interface DefaultHeadCellRenderProps {\n+  renderTableHeadCell?: (\n+    column: GridColumnOrder,\n+    columnIndex: number\n+  ) => React.ReactNode | undefined;\n+}\n+\n+interface DefaultBodyCellRenderProps {\n+  location: Location;\n+  organization: Organization;\n+  theme: Theme;\n+  renderTableBodyCell?: (\n+    column: GridColumnOrder,\n+    dataRow: Record<string, any>,",
        "comment_created_at": "2025-06-20T16:30:07+00:00",
        "comment_author": "gggritso",
        "comment_body": "\ud83d\udc40 can this be `TabularRow`? Avoids the `any`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2018028448",
    "pr_number": 87702,
    "pr_file": "static/app/components/events/interfaces/sourceMapsDebuggerModal.tsx",
    "created_at": "2025-03-28T07:00:33+00:00",
    "commented_code": "return (\n     <CheckListItem status=\"alert\" title={errorMessage}>\n       <CheckListInstruction type=\"muted\">\n-        <h6>{t('No Artifacts With Debug IDs Uploaded')}</h6>\n         <p>\n-          {tct(\n-            \"You didn't upload any artifacts with debug IDs yet. Read the [link:Sentry Source Maps Documentation] to learn how to inject Debug IDs into your build artifacts and how to upload them to Sentry.\",\n-            {\n-              link: <ExternalLinkWithIcon href={sourceMapsDocLinks.sourcemaps} />,\n-            }\n-          )}\n+          {tct('You did not upload any artifacts with debug IDs yet.', {\n+            link: <ExternalLinkWithIcon href={sourceMapsDocLinks.sourcemaps} />,\n+          })}",
    "repo_full_name": "getsentry/sentry",
    "discussion_comments": [
      {
        "comment_id": "2018028448",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 87702,
        "pr_file": "static/app/components/events/interfaces/sourceMapsDebuggerModal.tsx",
        "discussion_id": "2018028448",
        "commented_code": "@@ -1146,15 +1162,32 @@ function UploadedSourceFileWithCorrectDebugIdChecklistItem({\n   return (\n     <CheckListItem status=\"alert\" title={errorMessage}>\n       <CheckListInstruction type=\"muted\">\n-        <h6>{t('No Artifacts With Debug IDs Uploaded')}</h6>\n         <p>\n-          {tct(\n-            \"You didn't upload any artifacts with debug IDs yet. Read the [link:Sentry Source Maps Documentation] to learn how to inject Debug IDs into your build artifacts and how to upload them to Sentry.\",\n-            {\n-              link: <ExternalLinkWithIcon href={sourceMapsDocLinks.sourcemaps} />,\n-            }\n-          )}\n+          {tct('You did not upload any artifacts with debug IDs yet.', {\n+            link: <ExternalLinkWithIcon href={sourceMapsDocLinks.sourcemaps} />,\n+          })}",
        "comment_created_at": "2025-03-28T07:00:33+00:00",
        "comment_author": "priscilawebdev",
        "comment_body": "```suggestion\r\n          {tct('You did not upload any artifacts with [link:Debug IDs] yet.', {\r\n            link: <ExternalLinkWithIcon href={sourceMapsDocLinks.debugIds} />,\r\n          })}\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2018028923",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 87702,
        "pr_file": "static/app/components/events/interfaces/sourceMapsDebuggerModal.tsx",
        "discussion_id": "2018028448",
        "commented_code": "@@ -1146,15 +1162,32 @@ function UploadedSourceFileWithCorrectDebugIdChecklistItem({\n   return (\n     <CheckListItem status=\"alert\" title={errorMessage}>\n       <CheckListInstruction type=\"muted\">\n-        <h6>{t('No Artifacts With Debug IDs Uploaded')}</h6>\n         <p>\n-          {tct(\n-            \"You didn't upload any artifacts with debug IDs yet. Read the [link:Sentry Source Maps Documentation] to learn how to inject Debug IDs into your build artifacts and how to upload them to Sentry.\",\n-            {\n-              link: <ExternalLinkWithIcon href={sourceMapsDocLinks.sourcemaps} />,\n-            }\n-          )}\n+          {tct('You did not upload any artifacts with debug IDs yet.', {\n+            link: <ExternalLinkWithIcon href={sourceMapsDocLinks.sourcemaps} />,\n+          })}",
        "comment_created_at": "2025-03-28T07:01:02+00:00",
        "comment_author": "priscilawebdev",
        "comment_body": "`sourceMapsDocLinks.debugIds` can be `undefined` and we have to check that",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2152965248",
    "pr_number": 93735,
    "pr_file": "static/app/views/explore/savedQueries/savedQueriesTable.tsx",
    "created_at": "2025-06-17T18:56:20+00:00",
    "commented_code": "<Tooltip title={'Sentry'}>\n                   <ActivityAvatar type=\"system\" size={20} />\n                 </Tooltip>\n-              ) : (\n-                <Avatar\n-                  user={query.createdBy}\n-                  tooltip={query.createdBy?.name}\n+              ) : query.createdBy ? (\n+                <ActorAvatar\n+                  actor={query.createdBy}\n+                  tooltip={query.createdBy.name}\n                   hasTooltip\n                 />\n-              )}\n+              ) : null}",
    "repo_full_name": "getsentry/sentry",
    "discussion_comments": [
      {
        "comment_id": "2152965248",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 93735,
        "pr_file": "static/app/views/explore/savedQueries/savedQueriesTable.tsx",
        "discussion_id": "2152965248",
        "commented_code": "@@ -221,13 +221,13 @@ export function SavedQueriesTable({\n                 <Tooltip title={'Sentry'}>\n                   <ActivityAvatar type=\"system\" size={20} />\n                 </Tooltip>\n-              ) : (\n-                <Avatar\n-                  user={query.createdBy}\n-                  tooltip={query.createdBy?.name}\n+              ) : query.createdBy ? (\n+                <ActorAvatar\n+                  actor={query.createdBy}\n+                  tooltip={query.createdBy.name}\n                   hasTooltip\n                 />\n-              )}\n+              ) : null}",
        "comment_created_at": "2025-06-17T18:56:20+00:00",
        "comment_author": "evanpurkhiser",
        "comment_body": "It was passing undefined to the `UserAvatar` before, which would just render `null`. See https://github.com/getsentry/sentry/blob/34372aaeb000a6a95601e80dafc088c0c621eee6/static/app/components/core/avatar/userAvatar.tsx#L28-L31",
        "pr_file_module": null
      }
    ]
  }
]