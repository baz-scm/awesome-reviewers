[
  {
    "discussion_id": "2159331976",
    "pr_number": 93902,
    "pr_file": "static/app/views/dashboards/widgets/tableWidget/fixtures/tabularColumn.ts",
    "created_at": "2025-06-20T16:20:35+00:00",
    "commented_code": null,
    "repo_full_name": "getsentry/sentry",
    "discussion_comments": [
      {
        "comment_id": "2159331976",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 93902,
        "pr_file": "static/app/views/dashboards/widgets/tableWidget/fixtures/tabularColumn.ts",
        "discussion_id": "2159331976",
        "commented_code": null,
        "comment_created_at": "2025-06-20T16:20:35+00:00",
        "comment_author": "gggritso",
        "comment_body": "I didn't clarify this before, sorry, I meant this should go into `tests/js/fixtures/tabularColumn.ts`, with the rest of the fixtures. You'll also need to restructure _just a bit_\r\n\r\n1. Export `TabularColumnFixture` that returns a single `TabularColumn`, and it should accept `params: Partial<TabularColumn>` which it merges into the fixture. Check out `organization.ts` for an example\r\n2. Add a second fixture file called `tabularColumns.ts` which exports `TabularColumn[]`, and then you can use `TabularColumnFixture` to make an array of two columns with the key, name, and type you want",
        "pr_file_module": null
      }
    ]
  }
]