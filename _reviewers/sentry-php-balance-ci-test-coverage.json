[
  {
    "discussion_id": "1387014110",
    "pr_number": 1633,
    "pr_file": ".github/workflows/ci.yml",
    "created_at": "2023-11-08T18:02:43+00:00",
    "commented_code": "run: composer update --no-progress --no-interaction --prefer-dist --prefer-lowest\n         if: ${{ matrix.dependencies == 'lowest' }}\n \n-      - name: Run tests\n-        run: vendor/bin/phpunit --coverage-clover=coverage.xml\n+      - name: Run unit tests\n+        run: vendor/bin/phpunit --testsuite unit --coverage-clover=coverage.xml\n+      - name: Run phpt tests\n+        run: vendor/bin/phpunit --testsuite phpt --no-coverage",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "1387014110",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1633,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1387014110",
        "commented_code": "@@ -69,8 +69,10 @@ jobs:\n         run: composer update --no-progress --no-interaction --prefer-dist --prefer-lowest\n         if: ${{ matrix.dependencies == 'lowest' }}\n \n-      - name: Run tests\n-        run: vendor/bin/phpunit --coverage-clover=coverage.xml\n+      - name: Run unit tests\n+        run: vendor/bin/phpunit --testsuite unit --coverage-clover=coverage.xml\n+      - name: Run phpt tests\n+        run: vendor/bin/phpunit --testsuite phpt --no-coverage",
        "comment_created_at": "2023-11-08T18:02:43+00:00",
        "comment_author": "ste93cry",
        "comment_body": "Why are you running PHPT tests without code coverage? As far as I remember, it worked fine and in fact Codecov now complains that the `ErrorHandler` is untested",
        "pr_file_module": null
      },
      {
        "comment_id": "1387017850",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1633,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "1387014110",
        "commented_code": "@@ -69,8 +69,10 @@ jobs:\n         run: composer update --no-progress --no-interaction --prefer-dist --prefer-lowest\n         if: ${{ matrix.dependencies == 'lowest' }}\n \n-      - name: Run tests\n-        run: vendor/bin/phpunit --coverage-clover=coverage.xml\n+      - name: Run unit tests\n+        run: vendor/bin/phpunit --testsuite unit --coverage-clover=coverage.xml\n+      - name: Run phpt tests\n+        run: vendor/bin/phpunit --testsuite phpt --no-coverage",
        "comment_created_at": "2023-11-08T18:06:24+00:00",
        "comment_author": "stayallive",
        "comment_body": "The reason is that the OOM tests OOM because of the coverage information being collected. I'm working on moving the OOM tests to their own folder to only run those without coverage.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "783529119",
    "pr_number": 1274,
    "pr_file": ".github/workflows/ci.yaml",
    "created_at": "2022-01-12T23:53:34+00:00",
    "commented_code": "uses: codecov/codecov-action@v1\n         with:\n           file: build/coverage-report.xml\n+\n+      - name: Check benchmarks\n+        run: vendor/bin/phpbench run --revs=1 --iterations=1",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "783529119",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1274,
        "pr_file": ".github/workflows/ci.yaml",
        "discussion_id": "783529119",
        "commented_code": "@@ -75,3 +72,7 @@ jobs:\n         uses: codecov/codecov-action@v1\n         with:\n           file: build/coverage-report.xml\n+\n+      - name: Check benchmarks\n+        run: vendor/bin/phpbench run --revs=1 --iterations=1",
        "comment_created_at": "2022-01-12T23:53:34+00:00",
        "comment_author": "ste93cry",
        "comment_body": "If we don't want to run the bench except for ensuring that it still works (not sure why it should not though, even in the future), wouldn't make more sense to have a separate workflow that can run every now and then?",
        "pr_file_module": null
      },
      {
        "comment_id": "783669721",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1274,
        "pr_file": ".github/workflows/ci.yaml",
        "discussion_id": "783529119",
        "commented_code": "@@ -75,3 +72,7 @@ jobs:\n         uses: codecov/codecov-action@v1\n         with:\n           file: build/coverage-report.xml\n+\n+      - name: Check benchmarks\n+        run: vendor/bin/phpbench run --revs=1 --iterations=1",
        "comment_created_at": "2022-01-13T06:47:42+00:00",
        "comment_author": "Ocramius",
        "comment_body": "> not sure why it should not though, even in the future\r\n\r\nAll code that is not run regularly will rot and break",
        "pr_file_module": null
      },
      {
        "comment_id": "783821413",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1274,
        "pr_file": ".github/workflows/ci.yaml",
        "discussion_id": "783529119",
        "commented_code": "@@ -75,3 +72,7 @@ jobs:\n         uses: codecov/codecov-action@v1\n         with:\n           file: build/coverage-report.xml\n+\n+      - name: Check benchmarks\n+        run: vendor/bin/phpbench run --revs=1 --iterations=1",
        "comment_created_at": "2022-01-13T10:22:11+00:00",
        "comment_author": "Jean85",
        "comment_body": "> wouldn't make more sense to have a separate workflow that can run every now and then?\r\n\r\nThat would create a great overhead: separate CI job, separate setup, separate `composer install`... And for a step that [runs in less than a quarter of a second](https://github.com/getsentry/sentry-php/runs/4777675503?check_suite_focus=true#step:12:10), it seems an overkill.",
        "pr_file_module": null
      },
      {
        "comment_id": "783850501",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1274,
        "pr_file": ".github/workflows/ci.yaml",
        "discussion_id": "783529119",
        "commented_code": "@@ -75,3 +72,7 @@ jobs:\n         uses: codecov/codecov-action@v1\n         with:\n           file: build/coverage-report.xml\n+\n+      - name: Check benchmarks\n+        run: vendor/bin/phpbench run --revs=1 --iterations=1",
        "comment_created_at": "2022-01-13T10:59:03+00:00",
        "comment_author": "ste93cry",
        "comment_body": "My suggestion was not related to the time spent running the step, but rather to the fact that if this step is here just to ensure that it runs, then it doesn't make sense to have it as part of the CI workflow",
        "pr_file_module": null
      },
      {
        "comment_id": "783854403",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1274,
        "pr_file": ".github/workflows/ci.yaml",
        "discussion_id": "783529119",
        "commented_code": "@@ -75,3 +72,7 @@ jobs:\n         uses: codecov/codecov-action@v1\n         with:\n           file: build/coverage-report.xml\n+\n+      - name: Check benchmarks\n+        run: vendor/bin/phpbench run --revs=1 --iterations=1",
        "comment_created_at": "2022-01-13T11:04:14+00:00",
        "comment_author": "Ocramius",
        "comment_body": " > then it doesn't make sense to have it as part of the CI workflow\r\n\r\nIt's to make sure that upgrades to PHP, dependencies, etc. do not break it.\r\n\r\nIf we don't have it in CI to prevent rot, then having the benchmarks as part of the repository doesn't make sense either, as they will just become abandonware in a random directory ;-) ",
        "pr_file_module": null
      },
      {
        "comment_id": "783857441",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1274,
        "pr_file": ".github/workflows/ci.yaml",
        "discussion_id": "783529119",
        "commented_code": "@@ -75,3 +72,7 @@ jobs:\n         uses: codecov/codecov-action@v1\n         with:\n           file: build/coverage-report.xml\n+\n+      - name: Check benchmarks\n+        run: vendor/bin/phpbench run --revs=1 --iterations=1",
        "comment_created_at": "2022-01-13T11:08:28+00:00",
        "comment_author": "ste93cry",
        "comment_body": "With \"CI workflow\" I meant the workflow that runs for every push or for every PR. Do you think that running it once per week (just as an example) would still not be enough?",
        "pr_file_module": null
      },
      {
        "comment_id": "783865091",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1274,
        "pr_file": ".github/workflows/ci.yaml",
        "discussion_id": "783529119",
        "commented_code": "@@ -75,3 +72,7 @@ jobs:\n         uses: codecov/codecov-action@v1\n         with:\n           file: build/coverage-report.xml\n+\n+      - name: Check benchmarks\n+        run: vendor/bin/phpbench run --revs=1 --iterations=1",
        "comment_created_at": "2022-01-13T11:19:29+00:00",
        "comment_author": "Ocramius",
        "comment_body": ":shrug: it's 0.25s, just let it run \r\n\r\nIf it was a long process (that takes 30~40 minutes) then I understand running it on weekly basis, but running with every PR (especially when considering @dependabot) is necessary",
        "pr_file_module": null
      },
      {
        "comment_id": "783865651",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1274,
        "pr_file": ".github/workflows/ci.yaml",
        "discussion_id": "783529119",
        "commented_code": "@@ -75,3 +72,7 @@ jobs:\n         uses: codecov/codecov-action@v1\n         with:\n           file: build/coverage-report.xml\n+\n+      - name: Check benchmarks\n+        run: vendor/bin/phpbench run --revs=1 --iterations=1",
        "comment_created_at": "2022-01-13T11:20:14+00:00",
        "comment_author": "ste93cry",
        "comment_body": "Ok then, let's keep it as-is",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "251750251",
    "pr_number": 758,
    "pr_file": ".appveyor.yml",
    "created_at": "2019-01-29T09:25:42+00:00",
    "commented_code": "+clone_depth: 2\n+clone_folder: c:\\projects\\sentry-php\n+\n+cache:\n+  - composer.phar\n+\n+init:\n+  - SET PATH=c:\\php;%PATH%\n+  - SET COMPOSER_NO_INTERACTION=1\n+  - SET SYMFONY_DEPRECATIONS_HELPER=strict\n+  - SET ANSICON=121x90 (121x90)\n+\n+install:\n+  - mkdir c:\\php && cd c:\\php\n+  - appveyor DownloadFile https://github.com/symfony/binary-utils/releases/download/v0.1/php-7.1.3-Win32-VC14-x86.zip",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "251750251",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 758,
        "pr_file": ".appveyor.yml",
        "discussion_id": "251750251",
        "commented_code": "@@ -0,0 +1,29 @@\n+clone_depth: 2\n+clone_folder: c:\\projects\\sentry-php\n+\n+cache:\n+  - composer.phar\n+\n+init:\n+  - SET PATH=c:\\php;%PATH%\n+  - SET COMPOSER_NO_INTERACTION=1\n+  - SET SYMFONY_DEPRECATIONS_HELPER=strict\n+  - SET ANSICON=121x90 (121x90)\n+\n+install:\n+  - mkdir c:\\php && cd c:\\php\n+  - appveyor DownloadFile https://github.com/symfony/binary-utils/releases/download/v0.1/php-7.1.3-Win32-VC14-x86.zip",
        "comment_created_at": "2019-01-29T09:25:42+00:00",
        "comment_author": "ste93cry",
        "comment_body": "Instead of installing a specific version of PHP we should use the `matrix` feature of AppVeyor (similar to the one of Travis CI) to test multiple versions and fail as early as possible using `fast_finish`",
        "pr_file_module": null
      },
      {
        "comment_id": "251806983",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 758,
        "pr_file": ".appveyor.yml",
        "discussion_id": "251750251",
        "commented_code": "@@ -0,0 +1,29 @@\n+clone_depth: 2\n+clone_folder: c:\\projects\\sentry-php\n+\n+cache:\n+  - composer.phar\n+\n+init:\n+  - SET PATH=c:\\php;%PATH%\n+  - SET COMPOSER_NO_INTERACTION=1\n+  - SET SYMFONY_DEPRECATIONS_HELPER=strict\n+  - SET ANSICON=121x90 (121x90)\n+\n+install:\n+  - mkdir c:\\php && cd c:\\php\n+  - appveyor DownloadFile https://github.com/symfony/binary-utils/releases/download/v0.1/php-7.1.3-Win32-VC14-x86.zip",
        "comment_created_at": "2019-01-29T12:13:13+00:00",
        "comment_author": "Jean85",
        "comment_body": "That would be really slow. I wouldn't burden AppVeyor with a full matrix, we're already testing every version on Travis (which is faster due to the fact that PHP is preinstalled).\r\n\r\nNot even Symfony builds for multiple versions under windows! It seems an overkill to me.",
        "pr_file_module": null
      },
      {
        "comment_id": "252162978",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 758,
        "pr_file": ".appveyor.yml",
        "discussion_id": "251750251",
        "commented_code": "@@ -0,0 +1,29 @@\n+clone_depth: 2\n+clone_folder: c:\\projects\\sentry-php\n+\n+cache:\n+  - composer.phar\n+\n+init:\n+  - SET PATH=c:\\php;%PATH%\n+  - SET COMPOSER_NO_INTERACTION=1\n+  - SET SYMFONY_DEPRECATIONS_HELPER=strict\n+  - SET ANSICON=121x90 (121x90)\n+\n+install:\n+  - mkdir c:\\php && cd c:\\php\n+  - appveyor DownloadFile https://github.com/symfony/binary-utils/releases/download/v0.1/php-7.1.3-Win32-VC14-x86.zip",
        "comment_created_at": "2019-01-30T08:54:07+00:00",
        "comment_author": "ste93cry",
        "comment_body": ">That would be really slow\r\n\r\nSince Travis CI would run in parallel with AppVeyor it would not be much slower imho. The point in testing all versions is that you may have a bug in a specific version of PHP for Windows which may not exists in Linux",
        "pr_file_module": null
      },
      {
        "comment_id": "253551235",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 758,
        "pr_file": ".appveyor.yml",
        "discussion_id": "251750251",
        "commented_code": "@@ -0,0 +1,29 @@\n+clone_depth: 2\n+clone_folder: c:\\projects\\sentry-php\n+\n+cache:\n+  - composer.phar\n+\n+init:\n+  - SET PATH=c:\\php;%PATH%\n+  - SET COMPOSER_NO_INTERACTION=1\n+  - SET SYMFONY_DEPRECATIONS_HELPER=strict\n+  - SET ANSICON=121x90 (121x90)\n+\n+install:\n+  - mkdir c:\\php && cd c:\\php\n+  - appveyor DownloadFile https://github.com/symfony/binary-utils/releases/download/v0.1/php-7.1.3-Win32-VC14-x86.zip",
        "comment_created_at": "2019-02-04T16:52:38+00:00",
        "comment_author": "Jean85",
        "comment_body": "Matrix is a bit hard for now to put up, we need to handle the PHP installation manually in each instance.\r\n\r\nSkipping for now, we can cover that in a separate PR if we want.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "253551476",
    "pr_number": 758,
    "pr_file": ".appveyor.yml",
    "created_at": "2019-02-04T16:53:14+00:00",
    "commented_code": "+version: 2.x-{build}\n+build: false\n+clone_depth: 2\n+clone_folder: c:\\projects\\sentry-php\n+skip_branch_with_pr: true",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "253551476",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 758,
        "pr_file": ".appveyor.yml",
        "discussion_id": "253551476",
        "commented_code": "@@ -0,0 +1,35 @@\n+version: 2.x-{build}\n+build: false\n+clone_depth: 2\n+clone_folder: c:\\projects\\sentry-php\n+skip_branch_with_pr: true",
        "comment_created_at": "2019-02-04T16:53:14+00:00",
        "comment_author": "Jean85",
        "comment_body": "I've disabled builds on branch where there's an open PR. This way you can always see a build, even before opening the PR.",
        "pr_file_module": null
      }
    ]
  }
]