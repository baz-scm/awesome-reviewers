[
  {
    "discussion_id": "524436101",
    "pr_number": 1134,
    "pr_file": "src/Tracing/SamplingContext.php",
    "created_at": "2020-11-16T17:14:38+00:00",
    "commented_code": "{\n         $this->parentSampled = $parentSampled;\n     }\n+\n+    /**\n+     * @param array<string, mixed>|null $additionalContext",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "524436101",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1134,
        "pr_file": "src/Tracing/SamplingContext.php",
        "discussion_id": "524436101",
        "commented_code": "@@ -48,4 +54,20 @@ public function setParentSampled(?bool $parentSampled): void\n     {\n         $this->parentSampled = $parentSampled;\n     }\n+\n+    /**\n+     * @param array<string, mixed>|null $additionalContext",
        "comment_created_at": "2020-11-16T17:14:38+00:00",
        "comment_author": "ste93cry",
        "comment_body": "Can you please add a little description of what this function does, e.g. `Sets additional optional context data.`?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "524436166",
    "pr_number": 1134,
    "pr_file": "src/Tracing/SamplingContext.php",
    "created_at": "2020-11-16T17:14:45+00:00",
    "commented_code": "{\n         $this->parentSampled = $parentSampled;\n     }\n+\n+    /**\n+     * @param array<string, mixed>|null $additionalContext\n+     */\n+    public function setAdditionalContext(?array $additionalContext): void\n+    {\n+        $this->additionalContext = $additionalContext;\n+    }\n+\n+    /**\n+     * @return array<string, mixed>|null",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "524436166",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1134,
        "pr_file": "src/Tracing/SamplingContext.php",
        "discussion_id": "524436166",
        "commented_code": "@@ -48,4 +54,20 @@ public function setParentSampled(?bool $parentSampled): void\n     {\n         $this->parentSampled = $parentSampled;\n     }\n+\n+    /**\n+     * @param array<string, mixed>|null $additionalContext\n+     */\n+    public function setAdditionalContext(?array $additionalContext): void\n+    {\n+        $this->additionalContext = $additionalContext;\n+    }\n+\n+    /**\n+     * @return array<string, mixed>|null",
        "comment_created_at": "2020-11-16T17:14:45+00:00",
        "comment_author": "ste93cry",
        "comment_body": "Can you please add a little description of what this function does, e.g. `Gets additional optional context data.`?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "494133431",
    "pr_number": 1094,
    "pr_file": "src/ClientInterface.php",
    "created_at": "2020-09-24T08:29:29+00:00",
    "commented_code": "/**\n      * Captures a new event using the provided data.\n      *\n-     * @param array<string, mixed>|Event $payload The data of the event being captured\n-     * @param Scope|null                 $scope   An optional scope keeping the state\n+     * @param Event          $event The event being captured\n+     * @param EventHint|null $hint  May contain additional information about the original exception",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "494133431",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1094,
        "pr_file": "src/ClientInterface.php",
        "discussion_id": "494133431",
        "commented_code": "@@ -47,10 +47,11 @@ public function captureLastError(?Scope $scope = null): ?EventId;\n     /**\n      * Captures a new event using the provided data.\n      *\n-     * @param array<string, mixed>|Event $payload The data of the event being captured\n-     * @param Scope|null                 $scope   An optional scope keeping the state\n+     * @param Event          $event The event being captured\n+     * @param EventHint|null $hint  May contain additional information about the original exception",
        "comment_created_at": "2020-09-24T08:29:29+00:00",
        "comment_author": "ste93cry",
        "comment_body": "The description is not accurate, the fact that this object may contain the original exception is just a detail, we should describe what the `$hint` is and not what it contains",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "484372168",
    "pr_number": 1083,
    "pr_file": "src/Tracing/SamplingContext.php",
    "created_at": "2020-09-07T11:27:27+00:00",
    "commented_code": "+<?php\n+\n+namespace Sentry\\Tracing;\n+\n+class SamplingContext\n+{\n+    /**\n+     * @var TransactionContext|null TransactionContext\n+     */\n+    private $transactionContext;\n+\n+    /**\n+     * Returns the default instance of for the SamplingContext\n+     *\n+     * @param TransactionContext $transactionContext\n+     * @return self\n+     */\n+    public static function getDefault(TransactionContext $transactionContext): self\n+    {\n+        $context = new SamplingContext();\n+        $context->setTransactionContext($transactionContext);\n+\n+        return $context;\n+    }\n+\n+    /**\n+     * @return TransactionContext|null\n+     */\n+    public function getTransactionContext(): ?TransactionContext\n+    {\n+        return $this->transactionContext;\n+    }\n+\n+    /**\n+     * @param TransactionContext|null $transactionContext\n+     */\n+    public function setTransactionContext(?TransactionContext $transactionContext): void",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "484372168",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 1083,
        "pr_file": "src/Tracing/SamplingContext.php",
        "discussion_id": "484372168",
        "commented_code": "@@ -0,0 +1,42 @@\n+<?php\n+\n+namespace Sentry\\Tracing;\n+\n+class SamplingContext\n+{\n+    /**\n+     * @var TransactionContext|null TransactionContext\n+     */\n+    private $transactionContext;\n+\n+    /**\n+     * Returns the default instance of for the SamplingContext\n+     *\n+     * @param TransactionContext $transactionContext\n+     * @return self\n+     */\n+    public static function getDefault(TransactionContext $transactionContext): self\n+    {\n+        $context = new SamplingContext();\n+        $context->setTransactionContext($transactionContext);\n+\n+        return $context;\n+    }\n+\n+    /**\n+     * @return TransactionContext|null\n+     */\n+    public function getTransactionContext(): ?TransactionContext\n+    {\n+        return $this->transactionContext;\n+    }\n+\n+    /**\n+     * @param TransactionContext|null $transactionContext\n+     */\n+    public function setTransactionContext(?TransactionContext $transactionContext): void",
        "comment_created_at": "2020-09-07T11:27:27+00:00",
        "comment_author": "ste93cry",
        "comment_body": "There is no much value in having this annotation without a description of the parameter and of the function. Please either add them or drop the DocBlock altogether",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "384431737",
    "pr_number": 984,
    "pr_file": "src/Integration/RequestFetcher.php",
    "created_at": "2020-02-26T11:22:40+00:00",
    "commented_code": "+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Sentry\\Integration;\n+\n+use GuzzleHttp\\Psr7\\ServerRequest;\n+use Psr\\Http\\Message\\ServerRequestInterface;\n+\n+class RequestFetcher implements RequestFetcherInterface",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "384431737",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 984,
        "pr_file": "src/Integration/RequestFetcher.php",
        "discussion_id": "384431737",
        "commented_code": "@@ -0,0 +1,18 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Sentry\\Integration;\n+\n+use GuzzleHttp\\Psr7\\ServerRequest;\n+use Psr\\Http\\Message\\ServerRequestInterface;\n+\n+class RequestFetcher implements RequestFetcherInterface",
        "comment_created_at": "2020-02-26T11:22:40+00:00",
        "comment_author": "ste93cry",
        "comment_body": "Please mark this class as `final` and add a small DocBlock to explain what it does",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "327108542",
    "pr_number": 855,
    "pr_file": "src/HttpClient/HttpClientFactory.php",
    "created_at": "2019-09-23T13:18:41+00:00",
    "commented_code": "+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Sentry\\HttpClient;\n+\n+use Http\\Client\\Common\\Plugin\\AuthenticationPlugin;\n+use Http\\Client\\Common\\Plugin\\BaseUriPlugin;\n+use Http\\Client\\Common\\Plugin\\DecoderPlugin;\n+use Http\\Client\\Common\\Plugin\\ErrorPlugin;\n+use Http\\Client\\Common\\Plugin\\HeaderSetPlugin;\n+use Http\\Client\\Common\\Plugin\\RetryPlugin;\n+use Http\\Client\\Common\\PluginClient;\n+use Http\\Client\\Curl\\Client as HttpCurlClient;\n+use Http\\Client\\HttpAsyncClient as HttpAsyncClientInterface;\n+use Http\\Discovery\\HttpAsyncClientDiscovery;\n+use Http\\Message\\UriFactory as UriFactoryInterface;\n+use Sentry\\HttpClient\\Authentication\\SentryAuthentication;\n+use Sentry\\HttpClient\\Plugin\\GzipEncoderPlugin;\n+use Sentry\\Options;\n+\n+final class HttpClientFactory implements HttpClientFactoryInterface",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "327108542",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 855,
        "pr_file": "src/HttpClient/HttpClientFactory.php",
        "discussion_id": "327108542",
        "commented_code": "@@ -0,0 +1,92 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Sentry\\HttpClient;\n+\n+use Http\\Client\\Common\\Plugin\\AuthenticationPlugin;\n+use Http\\Client\\Common\\Plugin\\BaseUriPlugin;\n+use Http\\Client\\Common\\Plugin\\DecoderPlugin;\n+use Http\\Client\\Common\\Plugin\\ErrorPlugin;\n+use Http\\Client\\Common\\Plugin\\HeaderSetPlugin;\n+use Http\\Client\\Common\\Plugin\\RetryPlugin;\n+use Http\\Client\\Common\\PluginClient;\n+use Http\\Client\\Curl\\Client as HttpCurlClient;\n+use Http\\Client\\HttpAsyncClient as HttpAsyncClientInterface;\n+use Http\\Discovery\\HttpAsyncClientDiscovery;\n+use Http\\Message\\UriFactory as UriFactoryInterface;\n+use Sentry\\HttpClient\\Authentication\\SentryAuthentication;\n+use Sentry\\HttpClient\\Plugin\\GzipEncoderPlugin;\n+use Sentry\\Options;\n+\n+final class HttpClientFactory implements HttpClientFactoryInterface",
        "comment_created_at": "2019-09-23T13:18:41+00:00",
        "comment_author": "ste93cry",
        "comment_body": "Please add the docblock with the description of what this class does, e.g. `Default implementation of the {@HttpClientFactoryInterface} interface that uses Httplug to autodiscover the HTTP client if none is passed by the user.`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "283682394",
    "pr_number": 809,
    "pr_file": "src/Options.php",
    "created_at": "2019-05-14T08:29:28+00:00",
    "commented_code": "$this->options = $this->resolver->resolve($options);\n     }\n \n+    /**\n+     * Gets the type serializers.",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "283682394",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 809,
        "pr_file": "src/Options.php",
        "discussion_id": "283682394",
        "commented_code": "@@ -701,6 +701,28 @@ public function setMaxRequestBodySize(string $maxRequestBodySize): void\n         $this->options = $this->resolver->resolve($options);\n     }\n \n+    /**\n+     * Gets the type serializers.",
        "comment_created_at": "2019-05-14T08:29:28+00:00",
        "comment_author": "ste93cry",
        "comment_body": "Please change the description to: `Gets the callbacks used to customize how objects are serialized in the payload of the event.`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "283683813",
    "pr_number": 809,
    "pr_file": "src/Serializer/SerializableInterface.php",
    "created_at": "2019-05-14T08:32:49+00:00",
    "commented_code": "+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Sentry\\Serializer;\n+\n+interface SerializableInterface",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "283683813",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 809,
        "pr_file": "src/Serializer/SerializableInterface.php",
        "discussion_id": "283683813",
        "commented_code": "@@ -0,0 +1,15 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Sentry\\Serializer;\n+\n+interface SerializableInterface",
        "comment_created_at": "2019-05-14T08:32:49+00:00",
        "comment_author": "ste93cry",
        "comment_body": "Add a description to this interface: `This interface can be used to customize how an object is serialized in the payload of an event.`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "261189058",
    "pr_number": 785,
    "pr_file": "src/Options.php",
    "created_at": "2019-02-28T13:17:12+00:00",
    "commented_code": "$this->options = $this->resolver->resolve($options);\n     }\n \n+    /**\n+     * Return the capture_silenced_errors option.",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "261189058",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 785,
        "pr_file": "src/Options.php",
        "discussion_id": "261189058",
        "commented_code": "@@ -641,6 +641,30 @@ public function setHttpProxy(?string $httpProxy): void\n         $this->options = $this->resolver->resolve($options);\n     }\n \n+    /**\n+     * Return the capture_silenced_errors option.",
        "comment_created_at": "2019-02-28T13:17:12+00:00",
        "comment_author": "ste93cry",
        "comment_body": "This sentence should describe what the option does rather than just say what it returns. I would change it to something like `Gets whether the silenced errors should be captured or not`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "261189473",
    "pr_number": 785,
    "pr_file": "src/Options.php",
    "created_at": "2019-02-28T13:18:21+00:00",
    "commented_code": "$this->options = $this->resolver->resolve($options);\n     }\n \n+    /**\n+     * Return the capture_silenced_errors option.\n+     *\n+     * @return bool if true, errors silenced through the @ operator will be reported,\n+     *              ignored otherwise\n+     */\n+    public function shouldCaptureSilencedErrors(): bool\n+    {\n+        return $this->options['capture_silenced_errors'];\n+    }\n+\n+    /**\n+     * Sets the capture_silenced_errors option.",
    "repo_full_name": "getsentry/sentry-php",
    "discussion_comments": [
      {
        "comment_id": "261189473",
        "repo_full_name": "getsentry/sentry-php",
        "pr_number": 785,
        "pr_file": "src/Options.php",
        "discussion_id": "261189473",
        "commented_code": "@@ -641,6 +641,30 @@ public function setHttpProxy(?string $httpProxy): void\n         $this->options = $this->resolver->resolve($options);\n     }\n \n+    /**\n+     * Return the capture_silenced_errors option.\n+     *\n+     * @return bool if true, errors silenced through the @ operator will be reported,\n+     *              ignored otherwise\n+     */\n+    public function shouldCaptureSilencedErrors(): bool\n+    {\n+        return $this->options['capture_silenced_errors'];\n+    }\n+\n+    /**\n+     * Sets the capture_silenced_errors option.",
        "comment_created_at": "2019-02-28T13:18:21+00:00",
        "comment_author": "ste93cry",
        "comment_body": "This sentence should describe what the option does rather than just say that it sets the option named X. I would change it to something like `Sets whether the silenced errors should be captured or not`",
        "pr_file_module": null
      }
    ]
  }
]