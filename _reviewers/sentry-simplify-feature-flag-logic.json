[
  {
    "discussion_id": "2197969250",
    "pr_number": 95228,
    "pr_file": "static/app/views/insights/browser/webVitals/components/pageOverviewWebVitalsDetailPanel.tsx",
    "created_at": "2025-07-10T14:52:10+00:00",
    "commented_code": "const projectScore = getWebVitalScoresFromTableDataRow(projectScoresData?.[0]);\n \n-  const {data: transactionsTableData, isLoading: isTransactionWebVitalsQueryLoading} =\n-    useTransactionSamplesCategorizedQuery({\n-      transaction: transaction ?? '',\n-      webVital,\n-      enabled:\n-        Boolean(webVital) &&\n-        !useEap &&\n-        (!isInp || (!isSpansWebVital && useSpansWebVitals)),\n-      browserTypes,\n-      subregions,\n-    });\n-\n   const {data: spansTableData, isLoading: isSpansLoading} =\n     useSpanSamplesCategorizedQuery({\n       transaction: transaction ?? '',\n       webVital,\n-      enabled:\n-        Boolean(webVital) && (useEap || isInp || (isSpansWebVital && useSpansWebVitals)),\n+      enabled: Boolean(webVital) && (isInp || (isSpansWebVital && useSpansWebVitals)),",
    "repo_full_name": "getsentry/sentry",
    "discussion_comments": [
      {
        "comment_id": "2197969250",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 95228,
        "pr_file": "static/app/views/insights/browser/webVitals/components/pageOverviewWebVitalsDetailPanel.tsx",
        "discussion_id": "2197969250",
        "commented_code": "@@ -124,24 +121,11 @@ export function PageOverviewWebVitalsDetailPanel({\n \n   const projectScore = getWebVitalScoresFromTableDataRow(projectScoresData?.[0]);\n \n-  const {data: transactionsTableData, isLoading: isTransactionWebVitalsQueryLoading} =\n-    useTransactionSamplesCategorizedQuery({\n-      transaction: transaction ?? '',\n-      webVital,\n-      enabled:\n-        Boolean(webVital) &&\n-        !useEap &&\n-        (!isInp || (!isSpansWebVital && useSpansWebVitals)),\n-      browserTypes,\n-      subregions,\n-    });\n-\n   const {data: spansTableData, isLoading: isSpansLoading} =\n     useSpanSamplesCategorizedQuery({\n       transaction: transaction ?? '',\n       webVital,\n-      enabled:\n-        Boolean(webVital) && (useEap || isInp || (isSpansWebVital && useSpansWebVitals)),\n+      enabled: Boolean(webVital) && (isInp || (isSpansWebVital && useSpansWebVitals)),",
        "comment_created_at": "2025-07-10T14:52:10+00:00",
        "comment_author": "gggritso",
        "comment_body": "\ud83e\udd14 the old condition was `(useEap || isInp || (isSpansWebVital && useSpansWebVitals))` but now `useEap` is always true, so doesn't that mean the condition is moot? Seems like it should just be `Boolean(webVital)`",
        "pr_file_module": null
      },
      {
        "comment_id": "2198088714",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 95228,
        "pr_file": "static/app/views/insights/browser/webVitals/components/pageOverviewWebVitalsDetailPanel.tsx",
        "discussion_id": "2197969250",
        "commented_code": "@@ -124,24 +121,11 @@ export function PageOverviewWebVitalsDetailPanel({\n \n   const projectScore = getWebVitalScoresFromTableDataRow(projectScoresData?.[0]);\n \n-  const {data: transactionsTableData, isLoading: isTransactionWebVitalsQueryLoading} =\n-    useTransactionSamplesCategorizedQuery({\n-      transaction: transaction ?? '',\n-      webVital,\n-      enabled:\n-        Boolean(webVital) &&\n-        !useEap &&\n-        (!isInp || (!isSpansWebVital && useSpansWebVitals)),\n-      browserTypes,\n-      subregions,\n-    });\n-\n   const {data: spansTableData, isLoading: isSpansLoading} =\n     useSpanSamplesCategorizedQuery({\n       transaction: transaction ?? '',\n       webVital,\n-      enabled:\n-        Boolean(webVital) && (useEap || isInp || (isSpansWebVital && useSpansWebVitals)),\n+      enabled: Boolean(webVital) && (isInp || (isSpansWebVital && useSpansWebVitals)),",
        "comment_created_at": "2025-07-10T15:36:31+00:00",
        "comment_author": "DominikB2014",
        "comment_body": "Yeah, i think you're right, thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2159313840",
    "pr_number": 93935,
    "pr_file": "static/gsApp/views/amCheckout/utils.tsx",
    "created_at": "2025-06-20T16:07:40+00:00",
    "commented_code": "addSuccessMessage(t('Success'));\n     recordAnalytics(organization, subscription, data, isMigratingPartnerAccount);\n \n+    const justBoughtSeer = data.seer;",
    "repo_full_name": "getsentry/sentry",
    "discussion_comments": [
      {
        "comment_id": "2159313840",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 93935,
        "pr_file": "static/gsApp/views/amCheckout/utils.tsx",
        "discussion_id": "2159313840",
        "commented_code": "@@ -625,14 +625,18 @@ export async function submitCheckout(\n     addSuccessMessage(t('Success'));\n     recordAnalytics(organization, subscription, data, isMigratingPartnerAccount);\n \n+    const justBoughtSeer = data.seer;",
        "comment_created_at": "2025-06-20T16:07:40+00:00",
        "comment_author": "isabellaenriquez",
        "comment_body": "the only thing with this is that this would set `showSeerAutomationAlert=true` everytime a user went through checkout and either just bought Seer or already had it purchased\r\n\r\n```suggestion\r\n    const alreadyHadSeer = !isTrialPlan && (subscription.reservedBudgets?.some(budget => (budget.apiName as string as SelectableProduct) ===\r\n                SelectableProduct.SEER && budget.reservedBudget > 0));\r\n    const justBoughtSeer = data.seer && !alreadyHadSeer;\r\n```\r\n\r\nwhat `alreadyHadSeer` does is checks that the customer already had Seer enabled by looking at the current state of `subscription` (which is not yet refreshed); if they were on a trial plan at checkout time they had a seer budget > 0 but we don't count that as having purchased Seer already",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2151000509",
    "pr_number": 93567,
    "pr_file": "static/app/views/feedback/feedbackListPage.tsx",
    "created_at": "2025-06-16T22:28:50+00:00",
    "commented_code": "<FeedbackFilters style={{gridArea: 'filters'}} />\n                   {hasSetupOneFeedback || hasSlug ? (\n                     <Fragment>\n-                      <Container style={{gridArea: 'list'}}>\n-                        <FeedbackList />\n-                      </Container>\n+                      <SummaryListContainer style={{gridArea: 'list'}}>\n+                        <Feature features=\"organizations:user-feedback-ai-summaries\">",
    "repo_full_name": "getsentry/sentry",
    "discussion_comments": [
      {
        "comment_id": "2151000509",
        "repo_full_name": "getsentry/sentry",
        "pr_number": 93567,
        "pr_file": "static/app/views/feedback/feedbackListPage.tsx",
        "discussion_id": "2151000509",
        "commented_code": "@@ -84,9 +86,17 @@ export default function FeedbackListPage() {\n                   <FeedbackFilters style={{gridArea: 'filters'}} />\n                   {hasSetupOneFeedback || hasSlug ? (\n                     <Fragment>\n-                      <Container style={{gridArea: 'list'}}>\n-                        <FeedbackList />\n-                      </Container>\n+                      <SummaryListContainer style={{gridArea: 'list'}}>\n+                        <Feature features=\"organizations:user-feedback-ai-summaries\">",
        "comment_created_at": "2025-06-16T22:28:50+00:00",
        "comment_author": "billyvg",
        "comment_body": "I think this component is on its way to being deprecated, let's avoid using it and check `organization.features` directly.",
        "pr_file_module": null
      }
    ]
  }
]