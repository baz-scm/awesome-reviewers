[
  {
    "discussion_id": "2439342292",
    "pr_number": 682,
    "pr_file": "src/solidlsp/ls_utils.py",
    "created_at": "2025-10-17T10:58:28+00:00",
    "commented_code": "from pathlib import Path, PurePath\n \n import requests\n+from charset_normalizer import from_path",
    "repo_full_name": "oraios/serena",
    "discussion_comments": [
      {
        "comment_id": "2439342292",
        "repo_full_name": "oraios/serena",
        "pr_number": 682,
        "pr_file": "src/solidlsp/ls_utils.py",
        "discussion_id": "2439342292",
        "commented_code": "@@ -14,6 +14,7 @@\n from pathlib import Path, PurePath\n \n import requests\n+from charset_normalizer import from_path",
        "comment_created_at": "2025-10-17T10:58:28+00:00",
        "comment_author": "opcode81",
        "comment_body": "Let's import `charset_normalizer` instead of directly `from_path`, such that we have the more semantically meaningful `charset_normalizer.from_path` below.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2228958726",
    "pr_number": 347,
    "pr_file": "src/solidlsp/ls_types.py",
    "created_at": "2025-07-24T16:11:23+00:00",
    "commented_code": "range: NotRequired[Range]\n     \"\"\" An optional range inside the text document that is used to\n     visualize the hover, e.g. by changing the background color. \"\"\"\n+\n+class Diagnostic(TypedDict):\n+    \"\"\"Diagnostic information for a text document.\"\"\"\n+\n+    uri: DocumentUri\n+    \"\"\" The URI of the text document to which the diagnostics apply. \"\"\"\n+    range: Range\n+    \"\"\" The range of the text document to which the diagnostics apply. \"\"\"\n+    severity: NotRequired[int]",
    "repo_full_name": "oraios/serena",
    "discussion_comments": [
      {
        "comment_id": "2228958726",
        "repo_full_name": "oraios/serena",
        "pr_number": 347,
        "pr_file": "src/solidlsp/ls_types.py",
        "discussion_id": "2228958726",
        "commented_code": "@@ -317,3 +317,19 @@ class Hover(TypedDict):\n     range: NotRequired[Range]\n     \"\"\" An optional range inside the text document that is used to\n     visualize the hover, e.g. by changing the background color. \"\"\"\n+\n+class Diagnostic(TypedDict):\n+    \"\"\"Diagnostic information for a text document.\"\"\"\n+\n+    uri: DocumentUri\n+    \"\"\" The URI of the text document to which the diagnostics apply. \"\"\"\n+    range: Range\n+    \"\"\" The range of the text document to which the diagnostics apply. \"\"\"\n+    severity: NotRequired[int]",
        "comment_created_at": "2025-07-24T16:11:23+00:00",
        "comment_author": "MischaPanch",
        "comment_body": "Shouldn't it be an IntEnum rather than an int? We should have some interpretation of the severity level backed in (through the enum name)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2035797709",
    "pr_number": 45,
    "pr_file": "src/serena/text_utils.py",
    "created_at": "2025-04-09T17:12:21+00:00",
    "commented_code": "matches.append(MatchedConsecutiveLines(lines=context_lines, source_file_path=source_file_path))\n \n     return matches\n+\n+\n+def default_content_reader(file_path: str) -> str:\n+    with open(file_path) as f:\n+        return f.read()\n+\n+\n+def search_files(\n+    file_paths: list[str],\n+    pattern: re.Pattern | str,\n+    content_reader: Callable[[str], str] = default_content_reader,",
    "repo_full_name": "oraios/serena",
    "discussion_comments": [
      {
        "comment_id": "2035797709",
        "repo_full_name": "oraios/serena",
        "pr_number": 45,
        "pr_file": "src/serena/text_utils.py",
        "discussion_id": "2035797709",
        "commented_code": "@@ -205,3 +210,48 @@ def search_text(\n                 matches.append(MatchedConsecutiveLines(lines=context_lines, source_file_path=source_file_path))\n \n     return matches\n+\n+\n+def default_content_reader(file_path: str) -> str:\n+    with open(file_path) as f:\n+        return f.read()\n+\n+\n+def search_files(\n+    file_paths: list[str],\n+    pattern: re.Pattern | str,\n+    content_reader: Callable[[str], str] = default_content_reader,",
        "comment_created_at": "2025-04-09T17:12:21+00:00",
        "comment_author": "opcode81",
        "comment_body": "Name is imprecise; `file_reader` would be more to the point",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2029999379",
    "pr_number": 30,
    "pr_file": "src/serena/agent.py",
    "created_at": "2025-04-06T00:17:13+00:00",
    "commented_code": "return self._limit_length(result, max_answer_chars)\n \n \n+class GetReferencingCodeExtractsTool(Tool):",
    "repo_full_name": "oraios/serena",
    "discussion_comments": [
      {
        "comment_id": "2029999379",
        "repo_full_name": "oraios/serena",
        "pr_number": 30,
        "pr_file": "src/serena/agent.py",
        "discussion_id": "2029999379",
        "commented_code": "@@ -536,6 +536,49 @@ def apply(\n         return self._limit_length(result, max_answer_chars)\n \n \n+class GetReferencingCodeExtractsTool(Tool):",
        "comment_created_at": "2025-04-06T00:17:13+00:00",
        "comment_author": "opcode81",
        "comment_body": "I think I would prefer the term \"excerpt\" or even \"snippet\" over \"extract\".\r\nAlso, I think we should prefer the verb \"find\" over \"get\".\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2030120093",
        "repo_full_name": "oraios/serena",
        "pr_number": 30,
        "pr_file": "src/serena/agent.py",
        "discussion_id": "2029999379",
        "commented_code": "@@ -536,6 +536,49 @@ def apply(\n         return self._limit_length(result, max_answer_chars)\n \n \n+class GetReferencingCodeExtractsTool(Tool):",
        "comment_created_at": "2025-04-06T11:17:14+00:00",
        "comment_author": "MischaPanch",
        "comment_body": "Done",
        "pr_file_module": null
      }
    ]
  }
]