[
  {
    "discussion_id": "856146217",
    "pr_number": 10963,
    "pr_file": "docs/providers/aws/guide/serverless.yml.md",
    "created_at": "2022-04-22T11:39:46+00:00",
    "commented_code": "# Endpoint type for API Gateway REST API: edge or regional (default: edge)\n   endpointType: regional\n   # Use a custom name for the websockets API\n-  websocketsApiName: custom-websockets-api-name\n-  # custom route selection expression\n-  websocketsApiRouteSelectionExpression: $request.body.route\n-  # Use a custom description for the websockets API\n-  websocketsDescription: Custom Serverless Websockets\n+  websockets:\n+    apiName: custom-websockets-api-name\n+    # custom route selection expression\n+    apiRouteSelectionExpression: $request.body.route\n+    # Use a custom description for the websockets API\n+    description: Custom Serverless Websockets",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "856146217",
        "repo_full_name": "serverless/serverless",
        "pr_number": 10963,
        "pr_file": "docs/providers/aws/guide/serverless.yml.md",
        "discussion_id": "856146217",
        "commented_code": "@@ -238,11 +238,12 @@ provider:\n   # Endpoint type for API Gateway REST API: edge or regional (default: edge)\n   endpointType: regional\n   # Use a custom name for the websockets API\n-  websocketsApiName: custom-websockets-api-name\n-  # custom route selection expression\n-  websocketsApiRouteSelectionExpression: $request.body.route\n-  # Use a custom description for the websockets API\n-  websocketsDescription: Custom Serverless Websockets\n+  websockets:\n+    apiName: custom-websockets-api-name\n+    # custom route selection expression\n+    apiRouteSelectionExpression: $request.body.route\n+    # Use a custom description for the websockets API\n+    description: Custom Serverless Websockets",
        "comment_created_at": "2022-04-22T11:39:46+00:00",
        "comment_author": "mnapoli",
        "comment_body": "Could you move `websockets` below `apiGateway`? (I think `apiGateway` is used by more people, we should make it a bit more visible)\r\n\r\nAlso there's the `websocketApiId` property that isn't moved to `websockets`, is that intentional?",
        "pr_file_module": null
      },
      {
        "comment_id": "861880829",
        "repo_full_name": "serverless/serverless",
        "pr_number": 10963,
        "pr_file": "docs/providers/aws/guide/serverless.yml.md",
        "discussion_id": "856146217",
        "commented_code": "@@ -238,11 +238,12 @@ provider:\n   # Endpoint type for API Gateway REST API: edge or regional (default: edge)\n   endpointType: regional\n   # Use a custom name for the websockets API\n-  websocketsApiName: custom-websockets-api-name\n-  # custom route selection expression\n-  websocketsApiRouteSelectionExpression: $request.body.route\n-  # Use a custom description for the websockets API\n-  websocketsDescription: Custom Serverless Websockets\n+  websockets:\n+    apiName: custom-websockets-api-name\n+    # custom route selection expression\n+    apiRouteSelectionExpression: $request.body.route\n+    # Use a custom description for the websockets API\n+    description: Custom Serverless Websockets",
        "comment_created_at": "2022-04-29T14:51:28+00:00",
        "comment_author": "BillConley01",
        "comment_body": "Matthieu, I will move Websockets after APIGateway. I didn't group websocketApiID with Websockets because it was already a property of APIGateway?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1188343646",
    "pr_number": 11907,
    "pr_file": "docs/providers/aws/guide/functions.md",
    "created_at": "2023-05-09T08:59:36+00:00",
    "commented_code": "allowedHeaders: null\n ```\n \n+The `invoke` property can be set to `response_stream` to enable streaming response. If not specified, `buffered` invoke mode is assumed.",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "1188343646",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11907,
        "pr_file": "docs/providers/aws/guide/functions.md",
        "discussion_id": "1188343646",
        "commented_code": "@@ -287,6 +289,16 @@ functions:\n         allowedHeaders: null\n ```\n \n+The `invoke` property can be set to `response_stream` to enable streaming response. If not specified, `buffered` invoke mode is assumed.",
        "comment_created_at": "2023-05-09T08:59:36+00:00",
        "comment_author": "medikoo",
        "comment_body": "As outlined in issue, let's stick to `invokeMode`.\r\n\r\nLet's also support AWS values literally so `RESPONSE_STREAM` and `BUFFERED`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "863793866",
    "pr_number": 11029,
    "pr_file": "docs/getting-started.md",
    "created_at": "2022-05-03T13:44:05+00:00",
    "commented_code": "cd your-service-name\n ```\n \n-The `serverless` command will guide you to create a new project, [configure your AWS credentials](https://serverless.com/framework/docs/providers/aws/guide/credentials/), and optionally set up a free [Serverless Dashboard](https://www.serverless.com/monitoring) account to monitor, troubleshoot, and test your new service.\n+The `serverless` command will guide you to:\n+\n+1. create a new project\n+2. configure [AWS credentials](https://serverless.com/framework/docs/providers/aws/guide/credentials/)\n+3. optionally set up a free [Serverless Dashboard](https://www.serverless.com/monitoring) account to monitor and troubleshoot your project\n \n-_Note: Users in China are presented with a setup centered around the chinese [Tencent](https://intl.cloud.tencent.com/) provider. If you are based in China and prefer to use AWS, set the following environment variable: `SERVERLESS_PLATFORM_VENDOR=aws`._\n+_Note: users based in China get a setup centered around the chinese [Tencent](https://intl.cloud.tencent.com/) provider. To use AWS instead, set the following environment variable: `SERVERLESS_PLATFORM_VENDOR=aws`._\n \n-The newly created project should contain a `serverless.yml` file. This file defines everything that should be deployed to AWS: functions, events, resources and more. You can learn more about this in the [Core Concepts documentation](./providers/aws/guide/intro.md).\n+Your new serverless project should contain a `serverless.yml` file. This file defines what will be deployed to AWS: functions, events, resources and more. You can learn more about this in the [Core Concepts documentation](./providers/aws/guide/intro.md).\n \n-If the templates proposed by the `serverless` command do not fit your needs, you can also explore the [project examples from Serverless Inc. and our community](https://www.serverless.com/examples/). You can install any example with the `create` command:\n+If the templates proposed by `serverless` do not fit your needs, check out the [project examples from Serverless Inc. and our community](https://www.serverless.com/examples/). You can install any example by passing a GitHub URL using the `--template-url` option:\n \n ```sh\n-# replace folder-name below with the folder name of the example you want to use\n-$ serverless create \\\n-  -u https://github.com/serverless/examples/tree/master/folder-name \\\n-  -n my-project",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "863793866",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11029,
        "pr_file": "docs/getting-started.md",
        "discussion_id": "863793866",
        "commented_code": "@@ -87,19 +35,20 @@ serverless\n cd your-service-name\n ```\n \n-The `serverless` command will guide you to create a new project, [configure your AWS credentials](https://serverless.com/framework/docs/providers/aws/guide/credentials/), and optionally set up a free [Serverless Dashboard](https://www.serverless.com/monitoring) account to monitor, troubleshoot, and test your new service.\n+The `serverless` command will guide you to:\n+\n+1. create a new project\n+2. configure [AWS credentials](https://serverless.com/framework/docs/providers/aws/guide/credentials/)\n+3. optionally set up a free [Serverless Dashboard](https://www.serverless.com/monitoring) account to monitor and troubleshoot your project\n \n-_Note: Users in China are presented with a setup centered around the chinese [Tencent](https://intl.cloud.tencent.com/) provider. If you are based in China and prefer to use AWS, set the following environment variable: `SERVERLESS_PLATFORM_VENDOR=aws`._\n+_Note: users based in China get a setup centered around the chinese [Tencent](https://intl.cloud.tencent.com/) provider. To use AWS instead, set the following environment variable: `SERVERLESS_PLATFORM_VENDOR=aws`._\n \n-The newly created project should contain a `serverless.yml` file. This file defines everything that should be deployed to AWS: functions, events, resources and more. You can learn more about this in the [Core Concepts documentation](./providers/aws/guide/intro.md).\n+Your new serverless project should contain a `serverless.yml` file. This file defines what will be deployed to AWS: functions, events, resources and more. You can learn more about this in the [Core Concepts documentation](./providers/aws/guide/intro.md).\n \n-If the templates proposed by the `serverless` command do not fit your needs, you can also explore the [project examples from Serverless Inc. and our community](https://www.serverless.com/examples/). You can install any example with the `create` command:\n+If the templates proposed by `serverless` do not fit your needs, check out the [project examples from Serverless Inc. and our community](https://www.serverless.com/examples/). You can install any example by passing a GitHub URL using the `--template-url` option:\n \n ```sh\n-# replace folder-name below with the folder name of the example you want to use\n-$ serverless create \\\n-  -u https://github.com/serverless/examples/tree/master/folder-name \\\n-  -n my-project",
        "comment_created_at": "2022-05-03T13:44:05+00:00",
        "comment_author": "mnapoli",
        "comment_body": "Moved from `serverless create` to `serverless`:\r\n\r\n- more consistent, less confusion as to why there's a different command here\r\n- will now let the user onboard Dashboard without running extra commands",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "860822315",
    "pr_number": 10915,
    "pr_file": "docs/tutorial.md",
    "created_at": "2022-04-28T12:20:28+00:00",
    "commented_code": "+<!--\n+title: Tutorial: Your First Serverless Framework Project\n+menuText: Your First Project\n+-->\n+\n+# Tutorial: Your First Serverless Framework Project\n+\n+<iframe width=\"700\" height=\"394\" src=\"https://www.youtube.com/embed/dMVfqCTzuwk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n+\n+This guide helps you create and deploy a REST API with Serverless Framework and AWS.",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "860822315",
        "repo_full_name": "serverless/serverless",
        "pr_number": 10915,
        "pr_file": "docs/tutorial.md",
        "discussion_id": "860822315",
        "commented_code": "@@ -0,0 +1,285 @@\n+<!--\n+title: Tutorial: Your First Serverless Framework Project\n+menuText: Your First Project\n+-->\n+\n+# Tutorial: Your First Serverless Framework Project\n+\n+<iframe width=\"700\" height=\"394\" src=\"https://www.youtube.com/embed/dMVfqCTzuwk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n+\n+This guide helps you create and deploy a REST API with Serverless Framework and AWS.",
        "comment_created_at": "2022-04-28T12:20:28+00:00",
        "comment_author": "pgrzesik",
        "comment_body": "Let's not confuse users with `REST` where we're using `httpApi` event type - maybe it should say HTTP API instead of REST API?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "818729648",
    "pr_number": 10795,
    "pr_file": "docs/providers/aws/events/event-bridge.md",
    "created_at": "2022-03-03T14:48:20+00:00",
    "commented_code": "- cloudformation.amazonaws.com\n ```\n \n+You can build a more robust pattern matching thanks to [content filtering](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns-content-based-filtering.html).\n+\n+For example, if you defined a s3 bucket with EventBridge notification enabled, you can handle the same event as the default s3 from serverless:\n+\n+```yml\n+functions:\n+  myFunction:\n+    handler: index.handler\n+    events:\n+      - eventBridge:\n+          pattern:\n+            source:\n+              - aws.s3\n+            detail-type:\n+              - Object Created\n+            detail:\n+              bucket:\n+                name:\n+                  - photos\n+              object:\n+                key:\n+                  - prefix: 'uploads/'\n+```",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "818729648",
        "repo_full_name": "serverless/serverless",
        "pr_number": 10795,
        "pr_file": "docs/providers/aws/events/event-bridge.md",
        "discussion_id": "818729648",
        "commented_code": "@@ -65,6 +65,30 @@ functions:\n                 - cloudformation.amazonaws.com\n ```\n \n+You can build a more robust pattern matching thanks to [content filtering](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns-content-based-filtering.html).\n+\n+For example, if you defined a s3 bucket with EventBridge notification enabled, you can handle the same event as the default s3 from serverless:\n+\n+```yml\n+functions:\n+  myFunction:\n+    handler: index.handler\n+    events:\n+      - eventBridge:\n+          pattern:\n+            source:\n+              - aws.s3\n+            detail-type:\n+              - Object Created\n+            detail:\n+              bucket:\n+                name:\n+                  - photos\n+              object:\n+                key:\n+                  - prefix: 'uploads/'\n+```",
        "comment_created_at": "2022-03-03T14:48:20+00:00",
        "comment_author": "mnapoli",
        "comment_body": "TBH I'm not sure it would make sense to add another example specifically about the `prefix` operator (there are multiple operators available).\r\n\r\nI would keep the first sentence with link to the documentation however, that way users can learn about all the content filtering available?",
        "pr_file_module": null
      },
      {
        "comment_id": "818735473",
        "repo_full_name": "serverless/serverless",
        "pr_number": 10795,
        "pr_file": "docs/providers/aws/events/event-bridge.md",
        "discussion_id": "818729648",
        "commented_code": "@@ -65,6 +65,30 @@ functions:\n                 - cloudformation.amazonaws.com\n ```\n \n+You can build a more robust pattern matching thanks to [content filtering](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns-content-based-filtering.html).\n+\n+For example, if you defined a s3 bucket with EventBridge notification enabled, you can handle the same event as the default s3 from serverless:\n+\n+```yml\n+functions:\n+  myFunction:\n+    handler: index.handler\n+    events:\n+      - eventBridge:\n+          pattern:\n+            source:\n+              - aws.s3\n+            detail-type:\n+              - Object Created\n+            detail:\n+              bucket:\n+                name:\n+                  - photos\n+              object:\n+                key:\n+                  - prefix: 'uploads/'\n+```",
        "comment_created_at": "2022-03-03T14:54:03+00:00",
        "comment_author": "j0k3r",
        "comment_body": "I agree about the documentation link.\r\n\r\nAbout the `prefix`, it was just an example of the content filtering. IMHO it's interesting to have at least one example.",
        "pr_file_module": null
      },
      {
        "comment_id": "818830166",
        "repo_full_name": "serverless/serverless",
        "pr_number": 10795,
        "pr_file": "docs/providers/aws/events/event-bridge.md",
        "discussion_id": "818729648",
        "commented_code": "@@ -65,6 +65,30 @@ functions:\n                 - cloudformation.amazonaws.com\n ```\n \n+You can build a more robust pattern matching thanks to [content filtering](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns-content-based-filtering.html).\n+\n+For example, if you defined a s3 bucket with EventBridge notification enabled, you can handle the same event as the default s3 from serverless:\n+\n+```yml\n+functions:\n+  myFunction:\n+    handler: index.handler\n+    events:\n+      - eventBridge:\n+          pattern:\n+            source:\n+              - aws.s3\n+            detail-type:\n+              - Object Created\n+            detail:\n+              bucket:\n+                name:\n+                  - photos\n+              object:\n+                key:\n+                  - prefix: 'uploads/'\n+```",
        "comment_created_at": "2022-03-03T16:27:06+00:00",
        "comment_author": "mnapoli",
        "comment_body": "Right, but I was really confused by the example, maybe this is just me. I couldn't understand if there was anything particular about S3 here, like why was it mentioned.\r\n\r\nActually, re-looking at the page (https://www.serverless.com/framework/docs/providers/aws/events/event-bridge#setting-up-event-pattern-matching) I realize it's not that long, so why not add an extra example. Especially since filtering is a huge feature of EventBridge events. I'd suggest then rephrasing the sentence to make it clearer?\r\n\r\nE.g. something like:\r\n\r\n> Here is an example that uses \"[prefix matching](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns-content-based-filtering.html#eb-filtering-prefix-matching)\" to filter EventBridge events produced by S3:",
        "pr_file_module": null
      },
      {
        "comment_id": "821535693",
        "repo_full_name": "serverless/serverless",
        "pr_number": 10795,
        "pr_file": "docs/providers/aws/events/event-bridge.md",
        "discussion_id": "818729648",
        "commented_code": "@@ -65,6 +65,30 @@ functions:\n                 - cloudformation.amazonaws.com\n ```\n \n+You can build a more robust pattern matching thanks to [content filtering](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns-content-based-filtering.html).\n+\n+For example, if you defined a s3 bucket with EventBridge notification enabled, you can handle the same event as the default s3 from serverless:\n+\n+```yml\n+functions:\n+  myFunction:\n+    handler: index.handler\n+    events:\n+      - eventBridge:\n+          pattern:\n+            source:\n+              - aws.s3\n+            detail-type:\n+              - Object Created\n+            detail:\n+              bucket:\n+                name:\n+                  - photos\n+              object:\n+                key:\n+                  - prefix: 'uploads/'\n+```",
        "comment_created_at": "2022-03-08T10:36:40+00:00",
        "comment_author": "j0k3r",
        "comment_body": "I rephrased the sentence",
        "pr_file_module": null
      },
      {
        "comment_id": "821571768",
        "repo_full_name": "serverless/serverless",
        "pr_number": 10795,
        "pr_file": "docs/providers/aws/events/event-bridge.md",
        "discussion_id": "818729648",
        "commented_code": "@@ -65,6 +65,30 @@ functions:\n                 - cloudformation.amazonaws.com\n ```\n \n+You can build a more robust pattern matching thanks to [content filtering](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns-content-based-filtering.html).\n+\n+For example, if you defined a s3 bucket with EventBridge notification enabled, you can handle the same event as the default s3 from serverless:\n+\n+```yml\n+functions:\n+  myFunction:\n+    handler: index.handler\n+    events:\n+      - eventBridge:\n+          pattern:\n+            source:\n+              - aws.s3\n+            detail-type:\n+              - Object Created\n+            detail:\n+              bucket:\n+                name:\n+                  - photos\n+              object:\n+                key:\n+                  - prefix: 'uploads/'\n+```",
        "comment_created_at": "2022-03-08T11:25:04+00:00",
        "comment_author": "mnapoli",
        "comment_body": "Thanks!",
        "pr_file_module": null
      }
    ]
  }
]