[
  {
    "discussion_id": "1622898231",
    "pr_number": 12568,
    "pr_file": "docs/guides/dashboard/monitoring/README.md",
    "created_at": "2024-05-31T19:58:34+00:00",
    "commented_code": "### Disabling A Service\n \n-If you wish to disable Serverless Framework's Monitoring & Observability features within a specific Serverless Framework Service, you can do so with the YAML configuration below. Doing this will prevent an AWS account from being integrated, and prevent your AWS Lambda functions from being instrumented:\n+To disable Serverless Framework's Monitoring & Observability features within a specific Serverless Framework Service, you can remove the `app` property from your `serverless.yml` file. This action will prevent your AWS account from being integrated and your AWS Lambda functions from being instrumented. If you prefer to disable only the service function instrumentation while retaining other dashboard features, you can do so under the `stages` property:",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "1622898231",
        "repo_full_name": "serverless/serverless",
        "pr_number": 12568,
        "pr_file": "docs/guides/dashboard/monitoring/README.md",
        "discussion_id": "1622898231",
        "commented_code": "@@ -147,11 +162,15 @@ Please note that if you remove an Integration, if you immediately create a new I\n \n ### Disabling A Service\n \n-If you wish to disable Serverless Framework's Monitoring & Observability features within a specific Serverless Framework Service, you can do so with the YAML configuration below. Doing this will prevent an AWS account from being integrated, and prevent your AWS Lambda functions from being instrumented:\n+To disable Serverless Framework's Monitoring & Observability features within a specific Serverless Framework Service, you can remove the `app` property from your `serverless.yml` file. This action will prevent your AWS account from being integrated and your AWS Lambda functions from being instrumented. If you prefer to disable only the service function instrumentation while retaining other dashboard features, you can do so under the `stages` property:",
        "comment_created_at": "2024-05-31T19:58:34+00:00",
        "comment_author": "austencollins",
        "comment_body": "let's not propose removing `app` since that will remove all Dashboard features. Let's change to:\r\n\r\n\r\n\r\nTo disable Serverless Framework's Monitoring & Observability features within a specific Serverless Framework Service, you can do so under the `stages` property. This action will prevent your AWS Lambda functions from being instrumented, and un-instrument them if they are already instrumented.\r\n\r\nPlease note, if you have an Observability Integration already established with one or multiple AWS accounts, you will have to delete those via the [Serverless Framework Dashboard)[https://app.serverless.com]",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1622904070",
    "pr_number": 12568,
    "pr_file": "docs/guides/dashboard/README.md",
    "created_at": "2024-05-31T20:05:29+00:00",
    "commented_code": "```\n \n-You must deploy your Service to have it show in the Dashboard with the following configuration in your YAML file. Run `serverless deploy` to do this.\n-\n-By default, Deployment history and Observability will be set up automatically. To enable Observability, Serverless Framework will automatically create an AWS IAM Role within the AWS account you deployed to, giving Serverless Inc permission to AWS Cloudwatch and more. [You can transparently see the permissions this role requires in Github](https://github.com/serverless/console/blob/main/instrumentation/aws/iam-role-cfn-template.yaml).\n+You must deploy your Service with the above configuration in your YAML file to have it show in the Dashboard. Run `serverless deploy` to do this. The Serverless Framework will automatically create an AWS IAM Role within the AWS account you deployed to, giving Serverless Inc permission to AWS Cloudwatch and more. [You can transparently see the permissions this role requires in Github](https://github.com/serverless/console/blob/main/instrumentation/aws/iam-role-cfn-template.yaml). By default, Deployment history will be set up automatically.",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "1622904070",
        "repo_full_name": "serverless/serverless",
        "pr_number": 12568,
        "pr_file": "docs/guides/dashboard/README.md",
        "discussion_id": "1622904070",
        "commented_code": "@@ -53,6 +53,4 @@ app: # A parent namespce for this Service and related Services App name (e.g. mo\n \n ```\n \n-You must deploy your Service to have it show in the Dashboard with the following configuration in your YAML file. Run `serverless deploy` to do this.\n-\n-By default, Deployment history and Observability will be set up automatically. To enable Observability, Serverless Framework will automatically create an AWS IAM Role within the AWS account you deployed to, giving Serverless Inc permission to AWS Cloudwatch and more. [You can transparently see the permissions this role requires in Github](https://github.com/serverless/console/blob/main/instrumentation/aws/iam-role-cfn-template.yaml).\n+You must deploy your Service with the above configuration in your YAML file to have it show in the Dashboard. Run `serverless deploy` to do this. The Serverless Framework will automatically create an AWS IAM Role within the AWS account you deployed to, giving Serverless Inc permission to AWS Cloudwatch and more. [You can transparently see the permissions this role requires in Github](https://github.com/serverless/console/blob/main/instrumentation/aws/iam-role-cfn-template.yaml). By default, Deployment history will be set up automatically.",
        "comment_created_at": "2024-05-31T20:05:29+00:00",
        "comment_author": "austencollins",
        "comment_body": "This doesn't make sense anymore. It was clear in the previous version about observability being set up by default. Now, it randomly talks about creating IAM Roles in their AWS account.\r\n\r\n**Let's change to this:**\r\n\r\nYou must deploy your Service with the above configuration in your YAML file to have it show in the Dashboard. Run `serverless deploy` to do this. \r\n\r\nIf you want to enable Observability (metrics, traces, logs) for your AWS Lambda functions within Serverless Framework Dashboard, you will have to add the following in the `stages` block of your `serverless.yml`:\r\n\r\n```yaml\r\nstages:\r\n  prod:\r\n    observability: true # turn on observability in the \"prod\" Stage.\r\n  dev:\r\n    observability: true # turn on observability in the \"dev\" Stage.\r\n  default:\r\n    observability: false # turn off observability for all other Stages.\r\n```\r\n\r\nTo set up Observability, Serverless Framework will automatically create an AWS IAM Role within the AWS account you deployed to, giving Serverless Inc permission to AWS Cloudwatch and more. [You can transparently see the permissions this role requires in Github](https://github.com/serverless/console/blob/main/instrumentation/aws/iam-role-cfn-template.yaml).",
        "pr_file_module": null
      }
    ]
  }
]