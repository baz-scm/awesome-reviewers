[
  {
    "discussion_id": "1132278881",
    "pr_number": 11789,
    "pr_file": "lib/plugins/aws/package/lib/strip-null-props-from-template-resources.js",
    "created_at": "2023-03-10T11:53:10+00:00",
    "commented_code": "const resources = this.serverless.service.provider.compiledCloudFormationTemplate.Resources;\n \n     for (const resource of Object.values(resources)) {\n+      if (resource.Properties !== undefined && resource.Properties === null) {",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "1132278881",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11789,
        "pr_file": "lib/plugins/aws/package/lib/strip-null-props-from-template-resources.js",
        "discussion_id": "1132278881",
        "commented_code": "@@ -15,6 +15,9 @@ module.exports = {\n     const resources = this.serverless.service.provider.compiledCloudFormationTemplate.Resources;\n \n     for (const resource of Object.values(resources)) {\n+      if (resource.Properties !== undefined && resource.Properties === null) {",
        "comment_created_at": "2023-03-10T11:53:10+00:00",
        "comment_author": "medikoo",
        "comment_body": "Let's simplify to `resource.Properties == null` (there's no valid reason to treat `null` and `undefined` differently)",
        "pr_file_module": null
      },
      {
        "comment_id": "1132288570",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11789,
        "pr_file": "lib/plugins/aws/package/lib/strip-null-props-from-template-resources.js",
        "discussion_id": "1132278881",
        "commented_code": "@@ -15,6 +15,9 @@ module.exports = {\n     const resources = this.serverless.service.provider.compiledCloudFormationTemplate.Resources;\n \n     for (const resource of Object.values(resources)) {\n+      if (resource.Properties !== undefined && resource.Properties === null) {",
        "comment_created_at": "2023-03-10T12:04:53+00:00",
        "comment_author": "sleepwithcoffee",
        "comment_body": "There can be different scenarios:\r\n\r\nParentObject: \r\n-> no Properties defined -> undefined\r\n\r\nParentObject:\r\n  Properties:\r\n-> Properties defined but = null\r\n\r\nI am trying to catch the second one, and skip the 1st one\r\nfrom the top of my head, `resource.Properties == null` will fall into both\r\n\r\nAnother way to write the condition would be:\r\n```\r\nif ('Properties' in resource && resource.Properties === null) {\r\n```\r\nor\r\n```\r\nif (resource.hasOwnProperty('Properties') && resource.Properties === null) {\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1132339289",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11789,
        "pr_file": "lib/plugins/aws/package/lib/strip-null-props-from-template-resources.js",
        "discussion_id": "1132278881",
        "commented_code": "@@ -15,6 +15,9 @@ module.exports = {\n     const resources = this.serverless.service.provider.compiledCloudFormationTemplate.Resources;\n \n     for (const resource of Object.values(resources)) {\n+      if (resource.Properties !== undefined && resource.Properties === null) {",
        "comment_created_at": "2023-03-10T12:56:56+00:00",
        "comment_author": "medikoo",
        "comment_body": "`resource.Properties == null` will catch all of those scenarios, and that's wanted",
        "pr_file_module": null
      },
      {
        "comment_id": "1132554093",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11789,
        "pr_file": "lib/plugins/aws/package/lib/strip-null-props-from-template-resources.js",
        "discussion_id": "1132278881",
        "commented_code": "@@ -15,6 +15,9 @@ module.exports = {\n     const resources = this.serverless.service.provider.compiledCloudFormationTemplate.Resources;\n \n     for (const resource of Object.values(resources)) {\n+      if (resource.Properties !== undefined && resource.Properties === null) {",
        "comment_created_at": "2023-03-10T15:53:56+00:00",
        "comment_author": "sleepwithcoffee",
        "comment_body": "hi @medikoo \r\n\r\nAdded one test case for Properties not declared. Updated my code to follow accordingly. Can verify using\r\n`npx mocha test/unit/lib/plugins/aws/package/lib/strip-null-props-from-template-resources.test.js`\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1004099664",
    "pr_number": 11460,
    "pr_file": "lib/configuration/variables/sources/env.js",
    "created_at": "2022-10-25T07:24:57+00:00",
    "commented_code": "errorCode: 'INVALID_ENV_SOURCE_ADDRESS',\n     });\n \n-    if (!process.env[address]) missingEnvVariables.add(address);\n+    if (typeof process.env[address] === 'undefined') missingEnvVariables.add(address);\n     return { value: process.env[address] || null, isPending: !isSourceFulfilled };",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "1004099664",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11460,
        "pr_file": "lib/configuration/variables/sources/env.js",
        "discussion_id": "1004099664",
        "commented_code": "@@ -21,7 +21,7 @@ module.exports = {\n       errorCode: 'INVALID_ENV_SOURCE_ADDRESS',\n     });\n \n-    if (!process.env[address]) missingEnvVariables.add(address);\n+    if (typeof process.env[address] === 'undefined') missingEnvVariables.add(address);\n     return { value: process.env[address] || null, isPending: !isSourceFulfilled };",
        "comment_created_at": "2022-10-25T07:24:57+00:00",
        "comment_author": "medikoo",
        "comment_body": "Let's use `process.env[address] == null` check instead. Also we need to update it below so `''` is not overridden with null",
        "pr_file_module": null
      },
      {
        "comment_id": "1004864982",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11460,
        "pr_file": "lib/configuration/variables/sources/env.js",
        "discussion_id": "1004099664",
        "commented_code": "@@ -21,7 +21,7 @@ module.exports = {\n       errorCode: 'INVALID_ENV_SOURCE_ADDRESS',\n     });\n \n-    if (!process.env[address]) missingEnvVariables.add(address);\n+    if (typeof process.env[address] === 'undefined') missingEnvVariables.add(address);\n     return { value: process.env[address] || null, isPending: !isSourceFulfilled };",
        "comment_created_at": "2022-10-25T19:02:56+00:00",
        "comment_author": "alanneves",
        "comment_body": "> Let's use `process.env[address] == null` check instead. Also we need to update it below so `''` is not overridden with null\r\n\r\nSuggestions applied, is that correct?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1004878419",
    "pr_number": 11460,
    "pr_file": "lib/configuration/variables/sources/env.js",
    "created_at": "2022-10-25T19:19:26+00:00",
    "commented_code": "errorCode: 'INVALID_ENV_SOURCE_ADDRESS',\n     });\n \n-    if (!process.env[address]) missingEnvVariables.add(address);\n-    return { value: process.env[address] || null, isPending: !isSourceFulfilled };\n+    if (process.env[address] == null) missingEnvVariables.add(address);\n+    return { value: process.env[address], isPending: !isSourceFulfilled };",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "1004878419",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11460,
        "pr_file": "lib/configuration/variables/sources/env.js",
        "discussion_id": "1004878419",
        "commented_code": "@@ -21,8 +21,8 @@ module.exports = {\n       errorCode: 'INVALID_ENV_SOURCE_ADDRESS',\n     });\n \n-    if (!process.env[address]) missingEnvVariables.add(address);\n-    return { value: process.env[address] || null, isPending: !isSourceFulfilled };\n+    if (process.env[address] == null) missingEnvVariables.add(address);\n+    return { value: process.env[address], isPending: !isSourceFulfilled };",
        "comment_created_at": "2022-10-25T19:19:26+00:00",
        "comment_author": "medikoo",
        "comment_body": "It should be: `value: process.env[address] == null ? null : process.env[address]`",
        "pr_file_module": null
      },
      {
        "comment_id": "1005728154",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11460,
        "pr_file": "lib/configuration/variables/sources/env.js",
        "discussion_id": "1004878419",
        "commented_code": "@@ -21,8 +21,8 @@ module.exports = {\n       errorCode: 'INVALID_ENV_SOURCE_ADDRESS',\n     });\n \n-    if (!process.env[address]) missingEnvVariables.add(address);\n-    return { value: process.env[address] || null, isPending: !isSourceFulfilled };\n+    if (process.env[address] == null) missingEnvVariables.add(address);\n+    return { value: process.env[address], isPending: !isSourceFulfilled };",
        "comment_created_at": "2022-10-26T14:03:03+00:00",
        "comment_author": "alanneves",
        "comment_body": "@medikoo fixed",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1011964268",
    "pr_number": 11479,
    "pr_file": "lib/plugins/aws/package/compile/events/kafka.js",
    "created_at": "2022-11-02T15:41:57+00:00",
    "commented_code": "};\n         }\n \n+        if (startingPositionTimestamp !== undefined) {",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "1011964268",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11479,
        "pr_file": "lib/plugins/aws/package/compile/events/kafka.js",
        "discussion_id": "1011964268",
        "commented_code": "@@ -243,6 +254,10 @@ class AwsCompileKafkaEvents {\n           };\n         }\n \n+        if (startingPositionTimestamp !== undefined) {",
        "comment_created_at": "2022-11-02T15:41:57+00:00",
        "comment_author": "medikoo",
        "comment_body": "We should treat `null` in the same way. So let's update the condition to `!= null`",
        "pr_file_module": null
      },
      {
        "comment_id": "1013416285",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11479,
        "pr_file": "lib/plugins/aws/package/compile/events/kafka.js",
        "discussion_id": "1011964268",
        "commented_code": "@@ -243,6 +254,10 @@ class AwsCompileKafkaEvents {\n           };\n         }\n \n+        if (startingPositionTimestamp !== undefined) {",
        "comment_created_at": "2022-11-03T21:32:26+00:00",
        "comment_author": "overbit",
        "comment_body": "yep, sorry I did m previous commit from my mobile and I did not realised these 2 guys where still not consistent",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1014051280",
    "pr_number": 11479,
    "pr_file": "lib/plugins/aws/package/compile/events/kafka.js",
    "created_at": "2022-11-04T13:56:01+00:00",
    "commented_code": "hasKafkaEvent = true;\n         const { topic, batchSize, maximumBatchingWindow, enabled, consumerGroupId } = event.kafka;\n         const startingPosition = event.kafka.startingPosition || 'TRIM_HORIZON';\n+        const startingPositionTimestamp = event.kafka.startingPositionTimestamp;\n+\n+        if (\n+          startingPosition === 'AT_TIMESTAMP' &&\n+          !(startingPositionTimestamp !== undefined && startingPositionTimestamp !== null)",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "1014051280",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11479,
        "pr_file": "lib/plugins/aws/package/compile/events/kafka.js",
        "discussion_id": "1014051280",
        "commented_code": "@@ -149,6 +152,17 @@ class AwsCompileKafkaEvents {\n         hasKafkaEvent = true;\n         const { topic, batchSize, maximumBatchingWindow, enabled, consumerGroupId } = event.kafka;\n         const startingPosition = event.kafka.startingPosition || 'TRIM_HORIZON';\n+        const startingPositionTimestamp = event.kafka.startingPositionTimestamp;\n+\n+        if (\n+          startingPosition === 'AT_TIMESTAMP' &&\n+          !(startingPositionTimestamp !== undefined && startingPositionTimestamp !== null)",
        "comment_created_at": "2022-11-04T13:56:01+00:00",
        "comment_author": "medikoo",
        "comment_body": "Let's keep it simple as `startingPosition === 'AT_TIMESTAMP' && startingPositionTimestamp == null`",
        "pr_file_module": null
      },
      {
        "comment_id": "1014077826",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11479,
        "pr_file": "lib/plugins/aws/package/compile/events/kafka.js",
        "discussion_id": "1014051280",
        "commented_code": "@@ -149,6 +152,17 @@ class AwsCompileKafkaEvents {\n         hasKafkaEvent = true;\n         const { topic, batchSize, maximumBatchingWindow, enabled, consumerGroupId } = event.kafka;\n         const startingPosition = event.kafka.startingPosition || 'TRIM_HORIZON';\n+        const startingPositionTimestamp = event.kafka.startingPositionTimestamp;\n+\n+        if (\n+          startingPosition === 'AT_TIMESTAMP' &&\n+          !(startingPositionTimestamp !== undefined && startingPositionTimestamp !== null)",
        "comment_created_at": "2022-11-04T14:19:19+00:00",
        "comment_author": "overbit",
        "comment_body": "nice",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "982545651",
    "pr_number": 11411,
    "pr_file": "lib/plugins/aws/package/compile/events/cloud-front.js",
    "created_at": "2022-09-28T15:20:25+00:00",
    "commented_code": "shouldAssignCachePolicy = false;\n             }\n \n+            if (\n+              event.cloudFront.behavior &&\n+              (event.cloudFront.behavior.ForwardedValues !== undefined ||\n+                event.cloudFront.behavior.MaxTTL !== undefined ||\n+                event.cloudFront.behavior.MinTTL !== undefined ||\n+                event.cloudFront.behavior.DefaultTTL !== undefined)",
    "repo_full_name": "serverless/serverless",
    "discussion_comments": [
      {
        "comment_id": "982545651",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11411,
        "pr_file": "lib/plugins/aws/package/compile/events/cloud-front.js",
        "discussion_id": "982545651",
        "commented_code": "@@ -391,6 +425,16 @@ class AwsCompileCloudFrontEvents {\n               shouldAssignCachePolicy = false;\n             }\n \n+            if (\n+              event.cloudFront.behavior &&\n+              (event.cloudFront.behavior.ForwardedValues !== undefined ||\n+                event.cloudFront.behavior.MaxTTL !== undefined ||\n+                event.cloudFront.behavior.MinTTL !== undefined ||\n+                event.cloudFront.behavior.DefaultTTL !== undefined)",
        "comment_created_at": "2022-09-28T15:20:25+00:00",
        "comment_author": "medikoo",
        "comment_body": "Let's construct it more naturally as:\r\n\r\n```javascript\r\nevent.cloudFront.behavior.ForwardedValues ||\r\n                event.cloudFront.behavior.MaxTTL !=null ||\r\n                event.cloudFront.behavior.MinTTL != null ||\r\n                event.cloudFront.behavior.DefaultTTL !=null\r\n```\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "983295652",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11411,
        "pr_file": "lib/plugins/aws/package/compile/events/cloud-front.js",
        "discussion_id": "982545651",
        "commented_code": "@@ -391,6 +425,16 @@ class AwsCompileCloudFrontEvents {\n               shouldAssignCachePolicy = false;\n             }\n \n+            if (\n+              event.cloudFront.behavior &&\n+              (event.cloudFront.behavior.ForwardedValues !== undefined ||\n+                event.cloudFront.behavior.MaxTTL !== undefined ||\n+                event.cloudFront.behavior.MinTTL !== undefined ||\n+                event.cloudFront.behavior.DefaultTTL !== undefined)",
        "comment_created_at": "2022-09-29T09:23:34+00:00",
        "comment_author": "godu",
        "comment_body": "Prettier transforms it to\r\n```js\r\nif (\r\n  (event.cloudFront.behavior &&\r\n  event.cloudFront.behavior.ForwardedValues !== undefined) ||\r\n    event.cloudFront.behavior.MaxTTL !== undefined ||\r\n    event.cloudFront.behavior.MinTTL !== undefined ||\r\n    event.cloudFront.behavior.DefaultTTL !== undefined\r\n)\r\n```\r\nand breaks the logic",
        "pr_file_module": null
      },
      {
        "comment_id": "983667442",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11411,
        "pr_file": "lib/plugins/aws/package/compile/events/cloud-front.js",
        "discussion_id": "982545651",
        "commented_code": "@@ -391,6 +425,16 @@ class AwsCompileCloudFrontEvents {\n               shouldAssignCachePolicy = false;\n             }\n \n+            if (\n+              event.cloudFront.behavior &&\n+              (event.cloudFront.behavior.ForwardedValues !== undefined ||\n+                event.cloudFront.behavior.MaxTTL !== undefined ||\n+                event.cloudFront.behavior.MinTTL !== undefined ||\n+                event.cloudFront.behavior.DefaultTTL !== undefined)",
        "comment_created_at": "2022-09-29T15:03:29+00:00",
        "comment_author": "medikoo",
        "comment_body": "Prettier doesn't do that for sure: https://prettier.io/playground/#N4Igxg9gdgLgprEAuEBLAZgAgBSYDpSZHEklwBuCMAdGADYQCuAJgGIBO0NARnABYBDcqgjtMAMnEFSM4tgpVaDFhy7Veg4aOqtRAdwHtmcZgDUBdRnADOmAD53ps5wthKmbTm41CR7agCyAgAeACqhADKYAIQAvFCMdHT2joTOsq409B6q3vy+2gGoUOFRcZgJSSlO6aSZ7ipePPla-gAicOgCiTClMfGJdACUQ5jAAL4gADQgEAAOMCJQ1sighpx6AAqGCCsoFgYAnisz3OwCYADWcDAAygIAtnARxXDIXXTWcKfnVze3cwuxQA5sgYOwrDM4A9eMxjMwIgIoMDGAJgXBdOwHgIYItkcgQN0YBBpiA+DAHnQAOp8VDwayAsBwW67OmoYQwQ4EsDWE5oZZwdgwTbnYHY94WL4zABW1mCtxBdDgAEVGBB4BLPt8QID2F92ATuAJeHRSXN2MUYFTUMwYHxkAAOAAMM3NEC+VPOcwJ5psgsopIAjmr4CL5ntCdYALRQOAmEyk9hwYOoJMitHipAfKUgL4PVBgiHa6yKlUht5ZyXamDG622+1IABMM3BAlQdBBAGEIA9MyAbABWUmML6hY17bPa8hWACSUGMsFuYAtCwAgvPbpylZqvuNxkA\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "984353946",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11411,
        "pr_file": "lib/plugins/aws/package/compile/events/cloud-front.js",
        "discussion_id": "982545651",
        "commented_code": "@@ -391,6 +425,16 @@ class AwsCompileCloudFrontEvents {\n               shouldAssignCachePolicy = false;\n             }\n \n+            if (\n+              event.cloudFront.behavior &&\n+              (event.cloudFront.behavior.ForwardedValues !== undefined ||\n+                event.cloudFront.behavior.MaxTTL !== undefined ||\n+                event.cloudFront.behavior.MinTTL !== undefined ||\n+                event.cloudFront.behavior.DefaultTTL !== undefined)",
        "comment_created_at": "2022-09-30T08:36:36+00:00",
        "comment_author": "godu",
        "comment_body": "Oh ok, I just realized my mistake which is I have to check if `event.cloudFront.behavior` is defined before every `event.cloudFront.behavior.XXX !== undefined` so as not throw `Uncaught TypeError: event.cloudFront.behavior is undefined` Error.\r\n\r\n```js\r\n  if (\r\n    event.cloudFront.behavior &&\r\n    event.cloudFront.behavior.ForwardedValues !== undefined ||\r\n    event.cloudFront.behavior &&\r\n    event.cloudFront.behavior.MaxTTL !== undefined ||\r\n    event.cloudFront.behavior &&\r\n    event.cloudFront.behavior.MinTTL !== undefined ||\r\n    event.cloudFront.behavior &&\r\n    event.cloudFront.behavior.DefaultTTL !== undefined\r\n  ) {}\r\n```\r\n\r\nAre you sure you prefer this instead of my first solution ?\r\n\r\n```js\r\nif (\r\n    event.cloudFront.behavior &&\r\n    (event.cloudFront.behavior.ForwardedValues !== undefined ||\r\n      event.cloudFront.behavior.MaxTTL !== undefined ||\r\n      event.cloudFront.behavior.MinTTL !== undefined ||\r\n      event.cloudFront.behavior.DefaultTTL !== undefined)\r\n  ) {\r\n    console.error(\"should not throw after apply prettier\");\r\n  }\r\n```\r\n\r\nhttps://prettier.io/playground/#N4Igxg9gdgLgprEAuEAKVBKABAXgHxbAA6UWWkUAzjFnAG4I06ElllgA2EArgCYBiAJ2gwkLUmzIAjOAAsAhnQCWEQWO5RecAGZKocXqzYBfI8YDcRowHprWfvKUcjS7VlRGy9RgDpOPAWFYHxkFZVUsADJIz1oGYP8+IREQuUUVQR9+VQB3eUEtXgA1eQ5uOEosAEIcZg0tXX1eLAAfFtjvBK4koJhUsIyfAFl5AA8AFXGAGWrarHqdPQNW9okveL7EwJTQ9NVhvUmZmrrNRaaVjo2-bu3g3fDMgBEdeW4OGCPZ04alwwlsMBTFAbHYAArySiUFxuDxrOK+LbJe5pR5RGLwzqbW7IvoPQbZQR5AoGEplCrfeZnRrLNpXRE43r9PaCdH0roBXHMx7DMZfE5U34XOmY65Ipn4iLRdnYzkS1GDIaHaaUhY05oiyRYm5ynYKqUYrVixl6gb7F7aN4fflzNV-IyA4GgrAQqEw9wynU9U0stnw1Da8U+nmE4mFMnlSoCu3C1aSdYM3Uos2ZEYTFXR6l-S7whMc73JlkHKA2n7nWlx+OBk2FnkWq2fDO2rNNDAOwjA4wYTAgAA0IAgAAcYCoqMhQPlhDkIYIEJRkCBSnkAJ7z-tSQTyMAAazgMAAyvIALZwKZLZCWjiUODrzc7vf7wdbvQAc2QMEE5X7cCPMl4hSmeQoBfbh5BfOBCSPeQYBHYCFzeGAID7EBZBgI8OAAdVkJR4EoJ8wDgfc5xwpRlBgZcFzAKFkL0a9BBgMFNxfKCL1Ka9+wAK0oUZ91fDg4AARW4CB4FYq8bxAJ9BDohcpHkGQOGQwdBD0GAMKUXgYFkZAAA4AAZ+2UiBrwwzdBwXZSKjgQQGGQgBHYT4EYod5xQSEAFp9AMAxkNnBylFnRiwJYpBL3YkBryPJR30-CTKD4wTHLgMTwpgeT1M07SkAAJn7D9HA4V8AGEICPEKQAqABWZDuGvcZ5NcsKJLocoAEkzlgfcwBU4cAEFNH3cj+JSuBjGMIA",
        "pr_file_module": null
      },
      {
        "comment_id": "984444478",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11411,
        "pr_file": "lib/plugins/aws/package/compile/events/cloud-front.js",
        "discussion_id": "982545651",
        "commented_code": "@@ -391,6 +425,16 @@ class AwsCompileCloudFrontEvents {\n               shouldAssignCachePolicy = false;\n             }\n \n+            if (\n+              event.cloudFront.behavior &&\n+              (event.cloudFront.behavior.ForwardedValues !== undefined ||\n+                event.cloudFront.behavior.MaxTTL !== undefined ||\n+                event.cloudFront.behavior.MinTTL !== undefined ||\n+                event.cloudFront.behavior.DefaultTTL !== undefined)",
        "comment_created_at": "2022-09-30T10:19:43+00:00",
        "comment_author": "medikoo",
        "comment_body": "@godu as mentioned above, following will work perfectlly, and resembles best JS standard:\r\n\r\n```javascript\r\nif ( \r\n              event.cloudFront.behavior &&\r\n              (event.cloudFront.behavior.ForwardedValues ||\r\n                event.cloudFront.behavior.MaxTTL !=null ||\r\n                event.cloudFront.behavior.MinTTL != null ||\r\n                event.cloudFront.behavior.DefaultTTL !=null)) {\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "984522545",
        "repo_full_name": "serverless/serverless",
        "pr_number": 11411,
        "pr_file": "lib/plugins/aws/package/compile/events/cloud-front.js",
        "discussion_id": "982545651",
        "commented_code": "@@ -391,6 +425,16 @@ class AwsCompileCloudFrontEvents {\n               shouldAssignCachePolicy = false;\n             }\n \n+            if (\n+              event.cloudFront.behavior &&\n+              (event.cloudFront.behavior.ForwardedValues !== undefined ||\n+                event.cloudFront.behavior.MaxTTL !== undefined ||\n+                event.cloudFront.behavior.MinTTL !== undefined ||\n+                event.cloudFront.behavior.DefaultTTL !== undefined)",
        "comment_created_at": "2022-09-30T12:08:20+00:00",
        "comment_author": "godu",
        "comment_body": "@medikoo I'm sorry, I misread... It's done !",
        "pr_file_module": null
      }
    ]
  }
]