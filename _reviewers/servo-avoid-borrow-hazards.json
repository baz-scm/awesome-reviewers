[
  {
    "discussion_id": "2426231261",
    "pr_number": 39671,
    "pr_file": "components/script/dom/workers/dedicatedworkerglobalscope.rs",
    "created_at": "2025-10-13T12:39:38+00:00",
    "commented_code": ")\n     }\n \n+    pub(crate) fn fire_queued_messages(&self, can_gc: CanGc) {\n+        for msg in self.queued_worker_tasks.borrow_mut().drain(..) {",
    "repo_full_name": "servo/servo",
    "discussion_comments": [
      {
        "comment_id": "2426231261",
        "repo_full_name": "servo/servo",
        "pr_number": 39671,
        "pr_file": "components/script/dom/workers/dedicatedworkerglobalscope.rs",
        "discussion_id": "2426231261",
        "commented_code": "@@ -704,27 +626,42 @@ impl DedicatedWorkerGlobalScope {\n         )\n     }\n \n+    pub(crate) fn fire_queued_messages(&self, can_gc: CanGc) {\n+        for msg in self.queued_worker_tasks.borrow_mut().drain(..) {",
        "comment_created_at": "2025-10-13T12:39:38+00:00",
        "comment_author": "jdm",
        "comment_body": "Let's collect a vector before starting this loop. I think the borrow_mut is still active when we call the method with the CanGc argument, which is a borrow hazard.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2427964026",
    "pr_number": 39854,
    "pr_file": "components/script/script_thread.rs",
    "created_at": "2025-10-14T05:38:56+00:00",
    "commented_code": "WebDriverScriptCommand::RemoveLoadStatusSender(_) => {\n                 webdriver_handlers::handle_remove_load_status_sender(&documents, pipeline_id)\n             },\n-            _ => (),\n+            // https://github.com/servo/servo/issues/23535\n+            // These two Script messages need different treatment since the JS script might mutate\n+            // `self.documents`, which would conflict with the immutable borrow of it that\n+            // occurs for the rest of the messages.\n+            // We manually drop the immutable borrow first, and quickly\n+            // end the borrow of documents to avoid runtime error.\n+            WebDriverScriptCommand::ExecuteScript(script, reply) => {\n+                let window = documents.find_window(pipeline_id);\n+                drop(documents);",
    "repo_full_name": "servo/servo",
    "discussion_comments": [
      {
        "comment_id": "2427964026",
        "repo_full_name": "servo/servo",
        "pr_number": 39854,
        "pr_file": "components/script/script_thread.rs",
        "discussion_id": "2427964026",
        "commented_code": "@@ -2461,7 +2443,22 @@ impl ScriptThread {\n             WebDriverScriptCommand::RemoveLoadStatusSender(_) => {\n                 webdriver_handlers::handle_remove_load_status_sender(&documents, pipeline_id)\n             },\n-            _ => (),\n+            // https://github.com/servo/servo/issues/23535\n+            // These two Script messages need different treatment since the JS script might mutate\n+            // `self.documents`, which would conflict with the immutable borrow of it that\n+            // occurs for the rest of the messages.\n+            // We manually drop the immutable borrow first, and quickly\n+            // end the borrow of documents to avoid runtime error.\n+            WebDriverScriptCommand::ExecuteScript(script, reply) => {\n+                let window = documents.find_window(pipeline_id);\n+                drop(documents);",
        "comment_created_at": "2025-10-14T05:38:56+00:00",
        "comment_author": "yezhizhen",
        "comment_body": "Another way is to replace `documents` with `self.documents.borrow()` for every other `WebDriverScriptCommand`, so as to avoid explicit `drop`. Each line would then look longer.\n\nLet me know your thoughts...",
        "pr_file_module": null
      },
      {
        "comment_id": "2428491871",
        "repo_full_name": "servo/servo",
        "pr_number": 39854,
        "pr_file": "components/script/script_thread.rs",
        "discussion_id": "2427964026",
        "commented_code": "@@ -2461,7 +2443,22 @@ impl ScriptThread {\n             WebDriverScriptCommand::RemoveLoadStatusSender(_) => {\n                 webdriver_handlers::handle_remove_load_status_sender(&documents, pipeline_id)\n             },\n-            _ => (),\n+            // https://github.com/servo/servo/issues/23535\n+            // These two Script messages need different treatment since the JS script might mutate\n+            // `self.documents`, which would conflict with the immutable borrow of it that\n+            // occurs for the rest of the messages.\n+            // We manually drop the immutable borrow first, and quickly\n+            // end the borrow of documents to avoid runtime error.\n+            WebDriverScriptCommand::ExecuteScript(script, reply) => {\n+                let window = documents.find_window(pipeline_id);\n+                drop(documents);",
        "comment_created_at": "2025-10-14T09:22:50+00:00",
        "comment_author": "jdm",
        "comment_body": "I think this solution makes sense. It would be too easy for someone to come along and helpfully refactor the repeated borrow into a shared binding again in the future.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2418338731",
    "pr_number": 39647,
    "pr_file": "components/script/dom/window.rs",
    "created_at": "2025-10-10T02:08:28+00:00",
    "commented_code": "}\n     }\n \n-    fn WebdriverCallback(&self, cx: JSContext, val: HandleValue, realm: InRealm, can_gc: CanGc) {\n-        let rv = jsval_to_webdriver(cx, &self.globalscope, val, realm, can_gc);\n-        let opt_chan = self.webdriver_script_chan.borrow_mut().take();\n-        if let Some(chan) = opt_chan {\n-            let _ = chan.send(rv);\n+    fn WebdriverCallback(&self, cx: JSContext, value: HandleValue, realm: InRealm, can_gc: CanGc) {\n+        if let Some(chan) = self.webdriver_script_chan.borrow_mut().take() {\n+            let result = jsval_to_webdriver(cx, &self.globalscope, value, realm, can_gc);",
    "repo_full_name": "servo/servo",
    "discussion_comments": [
      {
        "comment_id": "2418338731",
        "repo_full_name": "servo/servo",
        "pr_number": 39647,
        "pr_file": "components/script/dom/window.rs",
        "discussion_id": "2418338731",
        "commented_code": "@@ -1599,23 +1601,18 @@ impl WindowMethods<crate::DomTypeHolder> for Window {\n         }\n     }\n \n-    fn WebdriverCallback(&self, cx: JSContext, val: HandleValue, realm: InRealm, can_gc: CanGc) {\n-        let rv = jsval_to_webdriver(cx, &self.globalscope, val, realm, can_gc);\n-        let opt_chan = self.webdriver_script_chan.borrow_mut().take();\n-        if let Some(chan) = opt_chan {\n-            let _ = chan.send(rv);\n+    fn WebdriverCallback(&self, cx: JSContext, value: HandleValue, realm: InRealm, can_gc: CanGc) {\n+        if let Some(chan) = self.webdriver_script_chan.borrow_mut().take() {\n+            let result = jsval_to_webdriver(cx, &self.globalscope, value, realm, can_gc);",
        "comment_created_at": "2025-10-10T02:08:28+00:00",
        "comment_author": "jdm",
        "comment_body": "This introduces a borrow hazard\u2014`self.webdriver_script_chan.borrow_mut()` is still outstanding when we call `jsval_to_webdriver` which can trigger a GC.",
        "pr_file_module": null
      },
      {
        "comment_id": "2418977164",
        "repo_full_name": "servo/servo",
        "pr_number": 39647,
        "pr_file": "components/script/dom/window.rs",
        "discussion_id": "2418338731",
        "commented_code": "@@ -1599,23 +1601,18 @@ impl WindowMethods<crate::DomTypeHolder> for Window {\n         }\n     }\n \n-    fn WebdriverCallback(&self, cx: JSContext, val: HandleValue, realm: InRealm, can_gc: CanGc) {\n-        let rv = jsval_to_webdriver(cx, &self.globalscope, val, realm, can_gc);\n-        let opt_chan = self.webdriver_script_chan.borrow_mut().take();\n-        if let Some(chan) = opt_chan {\n-            let _ = chan.send(rv);\n+    fn WebdriverCallback(&self, cx: JSContext, value: HandleValue, realm: InRealm, can_gc: CanGc) {\n+        if let Some(chan) = self.webdriver_script_chan.borrow_mut().take() {\n+            let result = jsval_to_webdriver(cx, &self.globalscope, value, realm, can_gc);",
        "comment_created_at": "2025-10-10T08:51:05+00:00",
        "comment_author": "mrobinson",
        "comment_body": "I've addressed this.  Thanks.",
        "pr_file_module": null
      }
    ]
  }
]