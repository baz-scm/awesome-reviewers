[
  {
    "discussion_id": "2433317789",
    "pr_number": 39897,
    "pr_file": "python/servo/testing_commands.py",
    "created_at": "2025-10-15T16:47:33+00:00",
    "commented_code": ")\n     @CommandArgument(\"--code-coverage\", default=False, action=\"store_true\", help=\"Run in code coverage mode\")\n     @CommandArgument(\"--llvm-cov-option\", default=None, action=\"append\", help=\"Additional options for llvm-cov\")\n+    @CommandArgument(\"--nextest-profile\", default=None, help=\"Specify the Nextest profile to use\")\n+    @CommandArgument(\"params\", nargs=\"...\", help=\"Command-line arguments to be passed through to Cargo nextest\")",
    "repo_full_name": "servo/servo",
    "discussion_comments": [
      {
        "comment_id": "2433317789",
        "repo_full_name": "servo/servo",
        "pr_number": 39897,
        "pr_file": "python/servo/testing_commands.py",
        "discussion_id": "2433317789",
        "commented_code": "@@ -164,16 +164,20 @@ def test_perf(self, base: str | None = None, date: str | None = None, submit: bo\n     )\n     @CommandArgument(\"--code-coverage\", default=False, action=\"store_true\", help=\"Run in code coverage mode\")\n     @CommandArgument(\"--llvm-cov-option\", default=None, action=\"append\", help=\"Additional options for llvm-cov\")\n+    @CommandArgument(\"--nextest-profile\", default=None, help=\"Specify the Nextest profile to use\")\n+    @CommandArgument(\"params\", nargs=\"...\", help=\"Command-line arguments to be passed through to Cargo nextest\")",
        "comment_created_at": "2025-10-15T16:47:33+00:00",
        "comment_author": "jschwe",
        "comment_body": "`params` is not strictly related to this PR, but it allows passing through parameters to nextest, like `--stress-count` to rerun tests x amount of time, which is quite useful when trying to reproduce flaky tests. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2425244641",
    "pr_number": 39789,
    "pr_file": "python/servo/try_parser.py",
    "created_at": "2025-10-13T05:26:52+00:00",
    "commented_code": "return JobConfig(\"Android\", Workflow.ANDROID)\n     elif any(word in s for word in [\"ohos\", \"openharmony\"]):\n         return JobConfig(\"OpenHarmony\", Workflow.OHOS)\n+    elif any(word in s for word in [\"coverage\", \"test-coverage\"]):",
    "repo_full_name": "servo/servo",
    "discussion_comments": [
      {
        "comment_id": "2425244641",
        "repo_full_name": "servo/servo",
        "pr_number": 39789,
        "pr_file": "python/servo/try_parser.py",
        "discussion_id": "2425244641",
        "commented_code": "@@ -100,6 +103,8 @@ def handle_preset(s: str) -> Optional[JobConfig]:\n         return JobConfig(\"Android\", Workflow.ANDROID)\n     elif any(word in s for word in [\"ohos\", \"openharmony\"]):\n         return JobConfig(\"OpenHarmony\", Workflow.OHOS)\n+    elif any(word in s for word in [\"coverage\", \"test-coverage\"]):",
        "comment_created_at": "2025-10-13T05:26:52+00:00",
        "comment_author": "sagudev",
        "comment_body": "```suggestion\n    elif any(word in s for word in [\"cov\", \"coverage\", \"test-coverage\"]):\n```",
        "pr_file_module": null
      }
    ]
  }
]