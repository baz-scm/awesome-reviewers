[
  {
    "discussion_id": "2432976119",
    "pr_number": 39900,
    "pr_file": ".github/actions/runner-select/action.yml",
    "created_at": "2025-10-15T15:14:56+00:00",
    "commented_code": "# <https://github.com/servo/servo/settings/variables/actions>\n         if [ -n '${{ inputs.NO_SELF_HOSTED_RUNNERS }}' ]; then\n           echo 'NO_SELF_HOSTED_RUNNERS is set!'\n-          fall_back_to_github_hosted\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n         fi\n \n         if [ '${{ inputs.force-github-hosted-runner }}' = true ]; then\n           echo 'inputs.force-github-hosted-runner is set!'\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n+        fi\n+\n+        artifact_path=$(mktemp)\n+        echo \"fall_back_to_github_hosted=false\" | tee -a $GITHUB_OUTPUT\n+        echo \"artifact_path=$artifact_path\" | tee -a $GITHUB_OUTPUT\n+\n+        echo \"unique_id=$unique_id\" | tee -a \"$artifact_path\"\n+        echo \"self_hosted_image_name=$self_hosted_image_name\" | tee -a \"$artifact_path\"\n+        echo \"qualified_repo=${{ github.repository }}\" | tee -a \"$artifact_path\"",
    "repo_full_name": "servo/servo",
    "discussion_comments": [
      {
        "comment_id": "2432976119",
        "repo_full_name": "servo/servo",
        "pr_number": 39900,
        "pr_file": ".github/actions/runner-select/action.yml",
        "discussion_id": "2432976119",
        "commented_code": "@@ -67,11 +50,55 @@ runs:\n         # <https://github.com/servo/servo/settings/variables/actions>\n         if [ -n '${{ inputs.NO_SELF_HOSTED_RUNNERS }}' ]; then\n           echo 'NO_SELF_HOSTED_RUNNERS is set!'\n-          fall_back_to_github_hosted\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n         fi\n \n         if [ '${{ inputs.force-github-hosted-runner }}' = true ]; then\n           echo 'inputs.force-github-hosted-runner is set!'\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n+        fi\n+\n+        artifact_path=$(mktemp)\n+        echo \"fall_back_to_github_hosted=false\" | tee -a $GITHUB_OUTPUT\n+        echo \"artifact_path=$artifact_path\" | tee -a $GITHUB_OUTPUT\n+\n+        echo \"unique_id=$unique_id\" | tee -a \"$artifact_path\"\n+        echo \"self_hosted_image_name=$self_hosted_image_name\" | tee -a \"$artifact_path\"\n+        echo \"qualified_repo=${{ github.repository }}\" | tee -a \"$artifact_path\"",
        "comment_created_at": "2025-10-15T15:14:56+00:00",
        "comment_author": "jschwe",
        "comment_body": "I'm a bit concerned about this. Why is the action code telling the monitor the org + repository? Couldn't an attacker abuse this to use our runners from their fork to run arbitrary jobs (e.g. bitcoin mining) without needing to open a pull request? \r\nIs there any validation on the monitor side, constraining it to repos from the servo org (Maybe I missed it)?",
        "pr_file_module": null
      },
      {
        "comment_id": "2433475737",
        "repo_full_name": "servo/servo",
        "pr_number": 39900,
        "pr_file": ".github/actions/runner-select/action.yml",
        "discussion_id": "2432976119",
        "commented_code": "@@ -67,11 +50,55 @@ runs:\n         # <https://github.com/servo/servo/settings/variables/actions>\n         if [ -n '${{ inputs.NO_SELF_HOSTED_RUNNERS }}' ]; then\n           echo 'NO_SELF_HOSTED_RUNNERS is set!'\n-          fall_back_to_github_hosted\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n         fi\n \n         if [ '${{ inputs.force-github-hosted-runner }}' = true ]; then\n           echo 'inputs.force-github-hosted-runner is set!'\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n+        fi\n+\n+        artifact_path=$(mktemp)\n+        echo \"fall_back_to_github_hosted=false\" | tee -a $GITHUB_OUTPUT\n+        echo \"artifact_path=$artifact_path\" | tee -a $GITHUB_OUTPUT\n+\n+        echo \"unique_id=$unique_id\" | tee -a \"$artifact_path\"\n+        echo \"self_hosted_image_name=$self_hosted_image_name\" | tee -a \"$artifact_path\"\n+        echo \"qualified_repo=${{ github.repository }}\" | tee -a \"$artifact_path\"",
        "comment_created_at": "2025-10-15T17:49:47+00:00",
        "comment_author": "sagudev",
        "comment_body": "> Couldn't an attacker abuse this to use our runners from their fork to run arbitrary jobs (e.g. bitcoin mining) without needing to open a pull request?\r\n\r\nRunners are only available in servo org, so that is not possible. But I think one could reserve runner with old artifact (reservation is for 30 min IIRC), but we can solve this by removing artifacts, after being used (assuming we also check artifact links that they are constrained to servo org urls). ",
        "pr_file_module": null
      },
      {
        "comment_id": "2434329424",
        "repo_full_name": "servo/servo",
        "pr_number": 39900,
        "pr_file": ".github/actions/runner-select/action.yml",
        "discussion_id": "2432976119",
        "commented_code": "@@ -67,11 +50,55 @@ runs:\n         # <https://github.com/servo/servo/settings/variables/actions>\n         if [ -n '${{ inputs.NO_SELF_HOSTED_RUNNERS }}' ]; then\n           echo 'NO_SELF_HOSTED_RUNNERS is set!'\n-          fall_back_to_github_hosted\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n         fi\n \n         if [ '${{ inputs.force-github-hosted-runner }}' = true ]; then\n           echo 'inputs.force-github-hosted-runner is set!'\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n+        fi\n+\n+        artifact_path=$(mktemp)\n+        echo \"fall_back_to_github_hosted=false\" | tee -a $GITHUB_OUTPUT\n+        echo \"artifact_path=$artifact_path\" | tee -a $GITHUB_OUTPUT\n+\n+        echo \"unique_id=$unique_id\" | tee -a \"$artifact_path\"\n+        echo \"self_hosted_image_name=$self_hosted_image_name\" | tee -a \"$artifact_path\"\n+        echo \"qualified_repo=${{ github.repository }}\" | tee -a \"$artifact_path\"",
        "comment_created_at": "2025-10-16T01:29:39+00:00",
        "comment_author": "delan",
        "comment_body": "reservation is only for 60 seconds, and we have to tell the monitor the repo so it can [list workflow run artifacts](https://docs.github.com/en/rest/actions/artifacts?apiVersion=2022-11-28#list-workflow-run-artifacts). while it\u2019s true that only repos in our org can run code on the runners, validating the repo on the monitor side would be good. i\u2019ll see what i can do",
        "pr_file_module": null
      },
      {
        "comment_id": "2434404276",
        "repo_full_name": "servo/servo",
        "pr_number": 39900,
        "pr_file": ".github/actions/runner-select/action.yml",
        "discussion_id": "2432976119",
        "commented_code": "@@ -67,11 +50,55 @@ runs:\n         # <https://github.com/servo/servo/settings/variables/actions>\n         if [ -n '${{ inputs.NO_SELF_HOSTED_RUNNERS }}' ]; then\n           echo 'NO_SELF_HOSTED_RUNNERS is set!'\n-          fall_back_to_github_hosted\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n         fi\n \n         if [ '${{ inputs.force-github-hosted-runner }}' = true ]; then\n           echo 'inputs.force-github-hosted-runner is set!'\n+          echo \"fall_back_to_github_hosted=true\" | tee -a $GITHUB_OUTPUT\n+        fi\n+\n+        artifact_path=$(mktemp)\n+        echo \"fall_back_to_github_hosted=false\" | tee -a $GITHUB_OUTPUT\n+        echo \"artifact_path=$artifact_path\" | tee -a $GITHUB_OUTPUT\n+\n+        echo \"unique_id=$unique_id\" | tee -a \"$artifact_path\"\n+        echo \"self_hosted_image_name=$self_hosted_image_name\" | tee -a \"$artifact_path\"\n+        echo \"qualified_repo=${{ github.repository }}\" | tee -a \"$artifact_path\"",
        "comment_created_at": "2025-10-16T02:40:47+00:00",
        "comment_author": "delan",
        "comment_body": "done in ci-runners [08012084d0f1b](https://github.com/servo/ci-runners/commit/08012084d0f1b3df31d84e3182c9c63390abc869)",
        "pr_file_module": null
      }
    ]
  }
]