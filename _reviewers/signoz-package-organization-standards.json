[
  {
    "discussion_id": "2307267207",
    "pr_number": 8936,
    "pr_file": "ee/query-service/app/api/export.go",
    "created_at": "2025-08-28T12:29:55+00:00",
    "commented_code": "+package api",
    "repo_full_name": "SigNoz/signoz",
    "discussion_comments": [
      {
        "comment_id": "2307267207",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 8936,
        "pr_file": "ee/query-service/app/api/export.go",
        "discussion_id": "2307267207",
        "commented_code": "@@ -0,0 +1,429 @@\n+package api",
        "comment_created_at": "2025-08-28T12:29:55+00:00",
        "comment_author": "nityanandagohain",
        "comment_body": "please move this package api and logic to `pkg/modules` we are refactoring and moving things there. You can check the example package `pkg/modules/user`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2315709854",
    "pr_number": 8982,
    "pr_file": "pkg/authz/openfgaschema/schema.go",
    "created_at": "2025-09-02T10:49:08+00:00",
    "commented_code": "+package openfgaschema\n+\n+import (\n+\t\"context\"\n+\t_ \"embed\"\n+\n+\topenfgapkgtransformer \"github.com/openfga/language/pkg/go/transformer\"\n+)\n+\n+var (\n+\t//go:embed base.fga\n+\tbaseDSL string\n+)\n+\n+type Schema interface {",
    "repo_full_name": "SigNoz/signoz",
    "discussion_comments": [
      {
        "comment_id": "2315709854",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 8982,
        "pr_file": "pkg/authz/openfgaschema/schema.go",
        "discussion_id": "2315709854",
        "commented_code": "@@ -0,0 +1,32 @@\n+package openfgaschema\n+\n+import (\n+\t\"context\"\n+\t_ \"embed\"\n+\n+\topenfgapkgtransformer \"github.com/openfga/language/pkg/go/transformer\"\n+)\n+\n+var (\n+\t//go:embed base.fga\n+\tbaseDSL string\n+)\n+\n+type Schema interface {",
        "comment_created_at": "2025-09-02T10:49:08+00:00",
        "comment_author": "grandwizard28",
        "comment_body": "Move this to `pkg/authz/schema.go`. The interface needs to be decoupled from the implemention.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2053567704",
    "pr_number": 7690,
    "pr_file": "pkg/query-service/app/integrations/traceFunnels/model.go",
    "created_at": "2025-04-22T08:04:12+00:00",
    "commented_code": "+package traceFunnels\n+\n+import v3 \"github.com/SigNoz/signoz/pkg/query-service/model/v3\"\n+\n+type Funnel struct {\n+\tID        string       `json:\"id\"`\n+\tName      string       `json:\"funnel_name\"`\n+\tCreatedAt int64        `json:\"creation_timestamp\"`\n+\tCreatedBy string       `json:\"user_id\"`\n+\tOrgID     string       `json:\"org_id\"`\n+\tUpdatedAt int64        `json:\"updated_timestamp,omitempty\"`\n+\tUpdatedBy string       `json:\"updated_by,omitempty\"`\n+\tSteps     []FunnelStep `json:\"steps\"`\n+}\n+\n+// FunnelStep Models\n+type FunnelStep struct {\n+\tStepOrder      int64         `json:\"step_order\"`      // Order of the step in the funnel (1-based)\n+\tServiceName    string        `json:\"service_name\"`    // Service name for the span",
    "repo_full_name": "SigNoz/signoz",
    "discussion_comments": [
      {
        "comment_id": "2053567704",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7690,
        "pr_file": "pkg/query-service/app/integrations/traceFunnels/model.go",
        "discussion_id": "2053567704",
        "commented_code": "@@ -0,0 +1,128 @@\n+package traceFunnels\n+\n+import v3 \"github.com/SigNoz/signoz/pkg/query-service/model/v3\"\n+\n+type Funnel struct {\n+\tID        string       `json:\"id\"`\n+\tName      string       `json:\"funnel_name\"`\n+\tCreatedAt int64        `json:\"creation_timestamp\"`\n+\tCreatedBy string       `json:\"user_id\"`\n+\tOrgID     string       `json:\"org_id\"`\n+\tUpdatedAt int64        `json:\"updated_timestamp,omitempty\"`\n+\tUpdatedBy string       `json:\"updated_by,omitempty\"`\n+\tSteps     []FunnelStep `json:\"steps\"`\n+}\n+\n+// FunnelStep Models\n+type FunnelStep struct {\n+\tStepOrder      int64         `json:\"step_order\"`      // Order of the step in the funnel (1-based)\n+\tServiceName    string        `json:\"service_name\"`    // Service name for the span",
        "comment_created_at": "2025-04-22T08:04:12+00:00",
        "comment_author": "vikrantgupta25",
        "comment_body": "integrations folder is not meant to put the modules. It is for all the external adapters that we are using ",
        "pr_file_module": null
      },
      {
        "comment_id": "2053582134",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7690,
        "pr_file": "pkg/query-service/app/integrations/traceFunnels/model.go",
        "discussion_id": "2053567704",
        "commented_code": "@@ -0,0 +1,128 @@\n+package traceFunnels\n+\n+import v3 \"github.com/SigNoz/signoz/pkg/query-service/model/v3\"\n+\n+type Funnel struct {\n+\tID        string       `json:\"id\"`\n+\tName      string       `json:\"funnel_name\"`\n+\tCreatedAt int64        `json:\"creation_timestamp\"`\n+\tCreatedBy string       `json:\"user_id\"`\n+\tOrgID     string       `json:\"org_id\"`\n+\tUpdatedAt int64        `json:\"updated_timestamp,omitempty\"`\n+\tUpdatedBy string       `json:\"updated_by,omitempty\"`\n+\tSteps     []FunnelStep `json:\"steps\"`\n+}\n+\n+// FunnelStep Models\n+type FunnelStep struct {\n+\tStepOrder      int64         `json:\"step_order\"`      // Order of the step in the funnel (1-based)\n+\tServiceName    string        `json:\"service_name\"`    // Service name for the span",
        "comment_created_at": "2025-04-22T08:12:49+00:00",
        "comment_author": "shivanshuraj1333",
        "comment_body": "the other integrations are also here in this folder atm",
        "pr_file_module": null
      },
      {
        "comment_id": "2053584578",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7690,
        "pr_file": "pkg/query-service/app/integrations/traceFunnels/model.go",
        "discussion_id": "2053567704",
        "commented_code": "@@ -0,0 +1,128 @@\n+package traceFunnels\n+\n+import v3 \"github.com/SigNoz/signoz/pkg/query-service/model/v3\"\n+\n+type Funnel struct {\n+\tID        string       `json:\"id\"`\n+\tName      string       `json:\"funnel_name\"`\n+\tCreatedAt int64        `json:\"creation_timestamp\"`\n+\tCreatedBy string       `json:\"user_id\"`\n+\tOrgID     string       `json:\"org_id\"`\n+\tUpdatedAt int64        `json:\"updated_timestamp,omitempty\"`\n+\tUpdatedBy string       `json:\"updated_by,omitempty\"`\n+\tSteps     []FunnelStep `json:\"steps\"`\n+}\n+\n+// FunnelStep Models\n+type FunnelStep struct {\n+\tStepOrder      int64         `json:\"step_order\"`      // Order of the step in the funnel (1-based)\n+\tServiceName    string        `json:\"service_name\"`    // Service name for the span",
        "comment_created_at": "2025-04-22T08:13:52+00:00",
        "comment_author": "shivanshuraj1333",
        "comment_body": "what is the ideal place to put it? maybe I'll do that in a followup PR, need to move thirdPartyAPI, messagingQueues and traceFunnels",
        "pr_file_module": null
      },
      {
        "comment_id": "2054002306",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7690,
        "pr_file": "pkg/query-service/app/integrations/traceFunnels/model.go",
        "discussion_id": "2053567704",
        "commented_code": "@@ -0,0 +1,128 @@\n+package traceFunnels\n+\n+import v3 \"github.com/SigNoz/signoz/pkg/query-service/model/v3\"\n+\n+type Funnel struct {\n+\tID        string       `json:\"id\"`\n+\tName      string       `json:\"funnel_name\"`\n+\tCreatedAt int64        `json:\"creation_timestamp\"`\n+\tCreatedBy string       `json:\"user_id\"`\n+\tOrgID     string       `json:\"org_id\"`\n+\tUpdatedAt int64        `json:\"updated_timestamp,omitempty\"`\n+\tUpdatedBy string       `json:\"updated_by,omitempty\"`\n+\tSteps     []FunnelStep `json:\"steps\"`\n+}\n+\n+// FunnelStep Models\n+type FunnelStep struct {\n+\tStepOrder      int64         `json:\"step_order\"`      // Order of the step in the funnel (1-based)\n+\tServiceName    string        `json:\"service_name\"`    // Service name for the span",
        "comment_created_at": "2025-04-22T12:22:36+00:00",
        "comment_author": "nityanandagohain",
        "comment_body": "the structs should ideally be in types package, check https://github.com/SigNoz/signoz/blob/main/pkg/types/user.go",
        "pr_file_module": null
      },
      {
        "comment_id": "2054418399",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7690,
        "pr_file": "pkg/query-service/app/integrations/traceFunnels/model.go",
        "discussion_id": "2053567704",
        "commented_code": "@@ -0,0 +1,128 @@\n+package traceFunnels\n+\n+import v3 \"github.com/SigNoz/signoz/pkg/query-service/model/v3\"\n+\n+type Funnel struct {\n+\tID        string       `json:\"id\"`\n+\tName      string       `json:\"funnel_name\"`\n+\tCreatedAt int64        `json:\"creation_timestamp\"`\n+\tCreatedBy string       `json:\"user_id\"`\n+\tOrgID     string       `json:\"org_id\"`\n+\tUpdatedAt int64        `json:\"updated_timestamp,omitempty\"`\n+\tUpdatedBy string       `json:\"updated_by,omitempty\"`\n+\tSteps     []FunnelStep `json:\"steps\"`\n+}\n+\n+// FunnelStep Models\n+type FunnelStep struct {\n+\tStepOrder      int64         `json:\"step_order\"`      // Order of the step in the funnel (1-based)\n+\tServiceName    string        `json:\"service_name\"`    // Service name for the span",
        "comment_created_at": "2025-04-22T16:01:47+00:00",
        "comment_author": "nityanandagohain",
        "comment_body": "@vikrantgupta25  are you suggestion to move it to modules i.e `pkg/modules` ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2067046574",
    "pr_number": 7763,
    "pr_file": "pkg/modules/tracefunnel/impltracefunnel/module_test.go",
    "created_at": "2025-04-29T17:43:46+00:00",
    "commented_code": "+package impltracefunnel",
    "repo_full_name": "SigNoz/signoz",
    "discussion_comments": [
      {
        "comment_id": "2067046574",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7763,
        "pr_file": "pkg/modules/tracefunnel/impltracefunnel/module_test.go",
        "discussion_id": "2067046574",
        "commented_code": "@@ -0,0 +1,213 @@\n+package impltracefunnel",
        "comment_created_at": "2025-04-29T17:43:46+00:00",
        "comment_author": "grandwizard28",
        "comment_body": "Please create a `tracefunneltest` package and move mocks there. This is ripe for circular dependency.\r\nAs a thumb rule, interface declaration, interface implementation and interface mocks need to be in three separate packages.\r\n\r\nAppreciate the effort here. Use mockery to do this automagically if possible otherwise we will replace it later.",
        "pr_file_module": null
      },
      {
        "comment_id": "2101986010",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7763,
        "pr_file": "pkg/modules/tracefunnel/impltracefunnel/module_test.go",
        "discussion_id": "2067046574",
        "commented_code": "@@ -0,0 +1,213 @@\n+package impltracefunnel",
        "comment_created_at": "2025-05-22T08:42:12+00:00",
        "comment_author": "shivanshuraj1333",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2067072103",
    "pr_number": 7763,
    "pr_file": "pkg/modules/tracefunnel/impltracefunnel/module.go",
    "created_at": "2025-04-29T18:01:50+00:00",
    "commented_code": "+package impltracefunnel\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"time\"\n+\n+\t\"github.com/SigNoz/signoz/pkg/modules/tracefunnel\"\n+\t\"github.com/SigNoz/signoz/pkg/types\"\n+\ttraceFunnels \"github.com/SigNoz/signoz/pkg/types/tracefunnel\"\n+\t\"github.com/SigNoz/signoz/pkg/valuer\"\n+)\n+\n+type module struct {\n+\tstore traceFunnels.FunnelStore\n+}\n+\n+func NewModule(store traceFunnels.FunnelStore) tracefunnel.Module {\n+\treturn &module{\n+\t\tstore: store,\n+\t}\n+}\n+\n+func (module *module) Create(ctx context.Context, timestamp int64, name string, userID string, orgID string) (*traceFunnels.Funnel, error) {\n+\torgUUID, err := valuer.NewUUID(orgID)\n+\tif err != nil {\n+\t\treturn nil, fmt.Errorf(\"invalid org ID: %v\", err)\n+\t}\n+\n+\tfunnel := &traceFunnels.Funnel{\n+\t\tBaseMetadata: traceFunnels.BaseMetadata{\n+\t\t\tName:  name,\n+\t\t\tOrgID: orgUUID,\n+\t\t},\n+\t}\n+\tfunnel.CreatedAt = time.Unix(0, timestamp*1000000) // Convert to nanoseconds\n+\tfunnel.CreatedBy = userID\n+\n+\t// Set up the user relationship\n+\tfunnel.CreatedByUser = &types.User{\n+\t\tID: userID,\n+\t}",
    "repo_full_name": "SigNoz/signoz",
    "discussion_comments": [
      {
        "comment_id": "2067072103",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7763,
        "pr_file": "pkg/modules/tracefunnel/impltracefunnel/module.go",
        "discussion_id": "2067072103",
        "commented_code": "@@ -0,0 +1,115 @@\n+package impltracefunnel\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"time\"\n+\n+\t\"github.com/SigNoz/signoz/pkg/modules/tracefunnel\"\n+\t\"github.com/SigNoz/signoz/pkg/types\"\n+\ttraceFunnels \"github.com/SigNoz/signoz/pkg/types/tracefunnel\"\n+\t\"github.com/SigNoz/signoz/pkg/valuer\"\n+)\n+\n+type module struct {\n+\tstore traceFunnels.FunnelStore\n+}\n+\n+func NewModule(store traceFunnels.FunnelStore) tracefunnel.Module {\n+\treturn &module{\n+\t\tstore: store,\n+\t}\n+}\n+\n+func (module *module) Create(ctx context.Context, timestamp int64, name string, userID string, orgID string) (*traceFunnels.Funnel, error) {\n+\torgUUID, err := valuer.NewUUID(orgID)\n+\tif err != nil {\n+\t\treturn nil, fmt.Errorf(\"invalid org ID: %v\", err)\n+\t}\n+\n+\tfunnel := &traceFunnels.Funnel{\n+\t\tBaseMetadata: traceFunnels.BaseMetadata{\n+\t\t\tName:  name,\n+\t\t\tOrgID: orgUUID,\n+\t\t},\n+\t}\n+\tfunnel.CreatedAt = time.Unix(0, timestamp*1000000) // Convert to nanoseconds\n+\tfunnel.CreatedBy = userID\n+\n+\t// Set up the user relationship\n+\tfunnel.CreatedByUser = &types.User{\n+\t\tID: userID,\n+\t}",
        "comment_created_at": "2025-04-29T18:01:50+00:00",
        "comment_author": "grandwizard28",
        "comment_body": "```suggestion\r\n\torgUUID, err := valuer.NewUUID(orgID)\r\n\tif err != nil {\r\n\t\treturn nil, fmt.Errorf(\"invalid org ID: %v\", err)\r\n\t}\r\n\r\n\tfunnel := &traceFunnels.Funnel{\r\n\t\tBaseMetadata: traceFunnels.BaseMetadata{\r\n\t\t\tName:  name,\r\n\t\t\tOrgID: orgUUID,\r\n\t\t},\r\n\t}\r\n\tfunnel.CreatedAt = time.Unix(0, timestamp*1000000) // Convert to nanoseconds\r\n\tfunnel.CreatedBy = userID\r\n\r\n\t// Set up the user relationship\r\n\tfunnel.CreatedByUser = &types.User{\r\n\t\tID: userID,\r\n\t}\r\n```\r\n\r\nAll of this needs to be a New function in types. In the types package, you get various inputs, do the validations as required and return a completed types struct.",
        "pr_file_module": null
      },
      {
        "comment_id": "2102051365",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7763,
        "pr_file": "pkg/modules/tracefunnel/impltracefunnel/module.go",
        "discussion_id": "2067072103",
        "commented_code": "@@ -0,0 +1,115 @@\n+package impltracefunnel\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"time\"\n+\n+\t\"github.com/SigNoz/signoz/pkg/modules/tracefunnel\"\n+\t\"github.com/SigNoz/signoz/pkg/types\"\n+\ttraceFunnels \"github.com/SigNoz/signoz/pkg/types/tracefunnel\"\n+\t\"github.com/SigNoz/signoz/pkg/valuer\"\n+)\n+\n+type module struct {\n+\tstore traceFunnels.FunnelStore\n+}\n+\n+func NewModule(store traceFunnels.FunnelStore) tracefunnel.Module {\n+\treturn &module{\n+\t\tstore: store,\n+\t}\n+}\n+\n+func (module *module) Create(ctx context.Context, timestamp int64, name string, userID string, orgID string) (*traceFunnels.Funnel, error) {\n+\torgUUID, err := valuer.NewUUID(orgID)\n+\tif err != nil {\n+\t\treturn nil, fmt.Errorf(\"invalid org ID: %v\", err)\n+\t}\n+\n+\tfunnel := &traceFunnels.Funnel{\n+\t\tBaseMetadata: traceFunnels.BaseMetadata{\n+\t\t\tName:  name,\n+\t\t\tOrgID: orgUUID,\n+\t\t},\n+\t}\n+\tfunnel.CreatedAt = time.Unix(0, timestamp*1000000) // Convert to nanoseconds\n+\tfunnel.CreatedBy = userID\n+\n+\t// Set up the user relationship\n+\tfunnel.CreatedByUser = &types.User{\n+\t\tID: userID,\n+\t}",
        "comment_created_at": "2025-05-22T09:12:52+00:00",
        "comment_author": "shivanshuraj1333",
        "comment_body": "if needed would do this in a followup",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2115746131",
    "pr_number": 7763,
    "pr_file": "pkg/sqlmigration/036_add_trace_funnels.go",
    "created_at": "2025-05-30T11:29:01+00:00",
    "commented_code": "+package sqlmigration\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\n+\t\"github.com/SigNoz/signoz/pkg/factory\"\n+\t\"github.com/SigNoz/signoz/pkg/sqlstore\"\n+\t\"github.com/SigNoz/signoz/pkg/types\"\n+\t\"github.com/SigNoz/signoz/pkg/valuer\"\n+\t\"github.com/uptrace/bun\"\n+\t\"github.com/uptrace/bun/migrate\"\n+)\n+\n+// Funnel Core Data Structure (Funnel and FunnelStep)\n+type Funnel struct {",
    "repo_full_name": "SigNoz/signoz",
    "discussion_comments": [
      {
        "comment_id": "2115746131",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7763,
        "pr_file": "pkg/sqlmigration/036_add_trace_funnels.go",
        "discussion_id": "2115746131",
        "commented_code": "@@ -0,0 +1,89 @@\n+package sqlmigration\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\n+\t\"github.com/SigNoz/signoz/pkg/factory\"\n+\t\"github.com/SigNoz/signoz/pkg/sqlstore\"\n+\t\"github.com/SigNoz/signoz/pkg/types\"\n+\t\"github.com/SigNoz/signoz/pkg/valuer\"\n+\t\"github.com/uptrace/bun\"\n+\t\"github.com/uptrace/bun/migrate\"\n+)\n+\n+// Funnel Core Data Structure (Funnel and FunnelStep)\n+type Funnel struct {",
        "comment_created_at": "2025-05-30T11:29:01+00:00",
        "comment_author": "vikrantgupta25",
        "comment_body": "make this `funnel` we do not want to export this from this package ",
        "pr_file_module": null
      },
      {
        "comment_id": "2119023928",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7763,
        "pr_file": "pkg/sqlmigration/036_add_trace_funnels.go",
        "discussion_id": "2115746131",
        "commented_code": "@@ -0,0 +1,89 @@\n+package sqlmigration\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\n+\t\"github.com/SigNoz/signoz/pkg/factory\"\n+\t\"github.com/SigNoz/signoz/pkg/sqlstore\"\n+\t\"github.com/SigNoz/signoz/pkg/types\"\n+\t\"github.com/SigNoz/signoz/pkg/valuer\"\n+\t\"github.com/uptrace/bun\"\n+\t\"github.com/uptrace/bun/migrate\"\n+)\n+\n+// Funnel Core Data Structure (Funnel and FunnelStep)\n+type Funnel struct {",
        "comment_created_at": "2025-06-01T11:00:16+00:00",
        "comment_author": "shivanshuraj1333",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2070933995",
    "pr_number": 7805,
    "pr_file": "pkg/cache/cache.go",
    "created_at": "2025-05-01T23:44:42+00:00",
    "commented_code": "}\n }\n \n-// cache interface",
    "repo_full_name": "SigNoz/signoz",
    "discussion_comments": [
      {
        "comment_id": "2070933995",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7805,
        "pr_file": "pkg/cache/cache.go",
        "discussion_id": "2070933995",
        "commented_code": "@@ -59,13 +60,19 @@ func (s RetrieveStatus) String() string {\n \t}\n }\n \n-// cache interface",
        "comment_created_at": "2025-05-01T23:44:42+00:00",
        "comment_author": "grandwizard28",
        "comment_body": "The above structs should be moved to the `types` package under `cachetypes`. And we should get rid of RetreiveStatus. It's just some fancy code which was copy pasted from somewhere which doesn't make sense.",
        "pr_file_module": null
      },
      {
        "comment_id": "2071387590",
        "repo_full_name": "SigNoz/signoz",
        "pr_number": 7805,
        "pr_file": "pkg/cache/cache.go",
        "discussion_id": "2070933995",
        "commented_code": "@@ -59,13 +60,19 @@ func (s RetrieveStatus) String() string {\n \t}\n }\n \n-// cache interface",
        "comment_created_at": "2025-05-02T09:59:47+00:00",
        "comment_author": "vikrantgupta25",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  }
]