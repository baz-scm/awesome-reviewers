[
  {
    "discussion_id": "2226046811",
    "pr_number": 51577,
    "pr_file": "sql/catalyst/src/main/java/org/apache/spark/sql/connector/catalog/constraints/Constraint.java",
    "created_at": "2025-07-23T16:00:20+00:00",
    "commented_code": "*/\n   String toDDL();\n \n+  /**\n+   * Similar to {@link #toDDL()}, but returns the description of this constraint for describing",
    "repo_full_name": "apache/spark",
    "discussion_comments": [
      {
        "comment_id": "2226046811",
        "repo_full_name": "apache/spark",
        "pr_number": 51577,
        "pr_file": "sql/catalyst/src/main/java/org/apache/spark/sql/connector/catalog/constraints/Constraint.java",
        "discussion_id": "2226046811",
        "commented_code": "@@ -58,6 +58,12 @@ public interface Constraint {\n    */\n   String toDDL();\n \n+  /**\n+   * Similar to {@link #toDDL()}, but returns the description of this constraint for describing",
        "comment_created_at": "2025-07-23T16:00:20+00:00",
        "comment_author": "gengliangwang",
        "comment_body": "Let's make it more clear\r\n`Returns the constraint description for DESCRIBE TABLE output, excluding the constraint name (shown separately).`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2126605121",
    "pr_number": 50921,
    "pr_file": "sql/catalyst/src/main/java/org/apache/spark/sql/connector/read/SupportsPushDownJoin.java",
    "created_at": "2025-06-04T13:27:17+00:00",
    "commented_code": "+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.connector.read;\n+\n+import java.util.Optional;\n+\n+import org.apache.spark.annotation.Evolving;\n+import org.apache.spark.sql.connector.expressions.filter.Predicate;\n+import org.apache.spark.sql.connector.join.JoinType;\n+import org.apache.spark.sql.types.StructType;\n+\n+/**\n+ * A mix-in interface for {@link ScanBuilder}. Data sources can implement this interface to\n+ * push down join operators.\n+ *\n+ * @since 4.0.0\n+ */\n+@Evolving\n+public interface SupportsPushDownJoin extends ScanBuilder {\n+  boolean isRightSideCompatibleForJoin(SupportsPushDownJoin other);\n+\n+  boolean pushJoin(\n+    SupportsPushDownJoin other,\n+    JoinType joinType,\n+    Optional<Predicate> condition,\n+    StructType leftRequiredSchema,\n+    StructType rightRequiredSchema\n+    );\n+\n+  // When join is pushed down, the output schema can be changed in case of duplicate column names.",
    "repo_full_name": "apache/spark",
    "discussion_comments": [
      {
        "comment_id": "2126605121",
        "repo_full_name": "apache/spark",
        "pr_number": 50921,
        "pr_file": "sql/catalyst/src/main/java/org/apache/spark/sql/connector/read/SupportsPushDownJoin.java",
        "discussion_id": "2126605121",
        "commented_code": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.connector.read;\n+\n+import java.util.Optional;\n+\n+import org.apache.spark.annotation.Evolving;\n+import org.apache.spark.sql.connector.expressions.filter.Predicate;\n+import org.apache.spark.sql.connector.join.JoinType;\n+import org.apache.spark.sql.types.StructType;\n+\n+/**\n+ * A mix-in interface for {@link ScanBuilder}. Data sources can implement this interface to\n+ * push down join operators.\n+ *\n+ * @since 4.0.0\n+ */\n+@Evolving\n+public interface SupportsPushDownJoin extends ScanBuilder {\n+  boolean isRightSideCompatibleForJoin(SupportsPushDownJoin other);\n+\n+  boolean pushJoin(\n+    SupportsPushDownJoin other,\n+    JoinType joinType,\n+    Optional<Predicate> condition,\n+    StructType leftRequiredSchema,\n+    StructType rightRequiredSchema\n+    );\n+\n+  // When join is pushed down, the output schema can be changed in case of duplicate column names.",
        "comment_created_at": "2025-06-04T13:27:17+00:00",
        "comment_author": "urosstan-db",
        "comment_body": "We should define java docs here to describe what is output of method, comments are not visible without source code (compiler JAR, etc).",
        "pr_file_module": null
      }
    ]
  }
]