[
  {
    "discussion_id": "2210536813",
    "pr_number": 51498,
    "pr_file": "pom.xml",
    "created_at": "2025-07-16T14:02:18+00:00",
    "commented_code": "<avro.version>1.12.0</avro.version>\n     <aws.kinesis.client.version>1.12.0</aws.kinesis.client.version>\n     <!-- Should be consistent with Kinesis client dependency -->\n-    <aws.java.sdk.version>1.11.655</aws.java.sdk.version>\n+    <aws.java.sdk.version>1.12.720</aws.java.sdk.version>",
    "repo_full_name": "apache/spark",
    "discussion_comments": [
      {
        "comment_id": "2210536813",
        "repo_full_name": "apache/spark",
        "pr_number": 51498,
        "pr_file": "pom.xml",
        "discussion_id": "2210536813",
        "commented_code": "@@ -158,7 +158,7 @@\n     <avro.version>1.12.0</avro.version>\n     <aws.kinesis.client.version>1.12.0</aws.kinesis.client.version>\n     <!-- Should be consistent with Kinesis client dependency -->\n-    <aws.java.sdk.version>1.11.655</aws.java.sdk.version>\n+    <aws.java.sdk.version>1.12.720</aws.java.sdk.version>",
        "comment_created_at": "2025-07-16T14:02:18+00:00",
        "comment_author": "dongjoon-hyun",
        "comment_body": "Oh, could you double-check that this is consistent with `Kinesis` client dependency? The line 160 show a requirement for `kinesis-asl` module.",
        "pr_file_module": null
      },
      {
        "comment_id": "2210640053",
        "repo_full_name": "apache/spark",
        "pr_number": 51498,
        "pr_file": "pom.xml",
        "discussion_id": "2210536813",
        "commented_code": "@@ -158,7 +158,7 @@\n     <avro.version>1.12.0</avro.version>\n     <aws.kinesis.client.version>1.12.0</aws.kinesis.client.version>\n     <!-- Should be consistent with Kinesis client dependency -->\n-    <aws.java.sdk.version>1.11.655</aws.java.sdk.version>\n+    <aws.java.sdk.version>1.12.720</aws.java.sdk.version>",
        "comment_created_at": "2025-07-16T14:42:56+00:00",
        "comment_author": "eschcam",
        "comment_body": "Version 1.15.3 of amazon-kinesis-client seems to use version 1.12.681 of the aws-java-sdk libs https://mvnrepository.com/artifact/com.amazonaws/amazon-kinesis-client/1.15.3",
        "pr_file_module": null
      },
      {
        "comment_id": "2210642791",
        "repo_full_name": "apache/spark",
        "pr_number": 51498,
        "pr_file": "pom.xml",
        "discussion_id": "2210536813",
        "commented_code": "@@ -158,7 +158,7 @@\n     <avro.version>1.12.0</avro.version>\n     <aws.kinesis.client.version>1.12.0</aws.kinesis.client.version>\n     <!-- Should be consistent with Kinesis client dependency -->\n-    <aws.java.sdk.version>1.11.655</aws.java.sdk.version>\n+    <aws.java.sdk.version>1.12.720</aws.java.sdk.version>",
        "comment_created_at": "2025-07-16T14:43:58+00:00",
        "comment_author": "eschcam",
        "comment_body": "The more recent versions of the client appear to use the V2 versions of the SDK https://mvnrepository.com/artifact/software.amazon.kinesis/amazon-kinesis-client/3.1.1\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2210884449",
        "repo_full_name": "apache/spark",
        "pr_number": 51498,
        "pr_file": "pom.xml",
        "discussion_id": "2210536813",
        "commented_code": "@@ -158,7 +158,7 @@\n     <avro.version>1.12.0</avro.version>\n     <aws.kinesis.client.version>1.12.0</aws.kinesis.client.version>\n     <!-- Should be consistent with Kinesis client dependency -->\n-    <aws.java.sdk.version>1.11.655</aws.java.sdk.version>\n+    <aws.java.sdk.version>1.12.720</aws.java.sdk.version>",
        "comment_created_at": "2025-07-16T16:15:10+00:00",
        "comment_author": "dongjoon-hyun",
        "comment_body": "I double-checked the pom file. Unfortunately, it seems that we cannot change this dependency while we are using aws-kinesis-client 1.12.0.\r\n> <aws.kinesis.client.version>1.12.0</aws.kinesis.client.version>",
        "pr_file_module": null
      },
      {
        "comment_id": "2213273842",
        "repo_full_name": "apache/spark",
        "pr_number": 51498,
        "pr_file": "pom.xml",
        "discussion_id": "2210536813",
        "commented_code": "@@ -158,7 +158,7 @@\n     <avro.version>1.12.0</avro.version>\n     <aws.kinesis.client.version>1.12.0</aws.kinesis.client.version>\n     <!-- Should be consistent with Kinesis client dependency -->\n-    <aws.java.sdk.version>1.11.655</aws.java.sdk.version>\n+    <aws.java.sdk.version>1.12.720</aws.java.sdk.version>",
        "comment_created_at": "2025-07-17T12:56:22+00:00",
        "comment_author": "eschcam",
        "comment_body": "Would updating aws-kinesis-client to 1.15.3 and aws-java-sdk-sts to 1.12.681 be okay?",
        "pr_file_module": null
      },
      {
        "comment_id": "2213505780",
        "repo_full_name": "apache/spark",
        "pr_number": 51498,
        "pr_file": "pom.xml",
        "discussion_id": "2210536813",
        "commented_code": "@@ -158,7 +158,7 @@\n     <avro.version>1.12.0</avro.version>\n     <aws.kinesis.client.version>1.12.0</aws.kinesis.client.version>\n     <!-- Should be consistent with Kinesis client dependency -->\n-    <aws.java.sdk.version>1.11.655</aws.java.sdk.version>\n+    <aws.java.sdk.version>1.12.720</aws.java.sdk.version>",
        "comment_created_at": "2025-07-17T14:25:06+00:00",
        "comment_author": "dongjoon-hyun",
        "comment_body": "AFAIK, it requires a manual testing for this module. Can you verify it with the real AWS Kinesis? Unfortunately, there were a few attempts on this module but nobody verified their updates with the real AWS Kinesis. That's the reason why this module is sitting on AWS SKD v1 exceptionally.",
        "pr_file_module": null
      },
      {
        "comment_id": "2225785003",
        "repo_full_name": "apache/spark",
        "pr_number": 51498,
        "pr_file": "pom.xml",
        "discussion_id": "2210536813",
        "commented_code": "@@ -158,7 +158,7 @@\n     <avro.version>1.12.0</avro.version>\n     <aws.kinesis.client.version>1.12.0</aws.kinesis.client.version>\n     <!-- Should be consistent with Kinesis client dependency -->\n-    <aws.java.sdk.version>1.11.655</aws.java.sdk.version>\n+    <aws.java.sdk.version>1.12.720</aws.java.sdk.version>",
        "comment_created_at": "2025-07-23T14:26:59+00:00",
        "comment_author": "eschcam",
        "comment_body": "Sorry that I'm only seeing your comment now.\r\nI'm honestly not sure how I would manually test this apart from updating the dependencies and seeing if the exists tests pass.\r\nI'm guessing I'm missing something",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2132551993",
    "pr_number": 50933,
    "pr_file": "common/sketch/pom.xml",
    "created_at": "2025-06-06T17:01:20+00:00",
    "commented_code": "<scope>test</scope>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.junit-pioneer</groupId>\n+      <artifactId>junit-pioneer</artifactId>\n+      <version>2.3.0</version>",
    "repo_full_name": "apache/spark",
    "discussion_comments": [
      {
        "comment_id": "2132551993",
        "repo_full_name": "apache/spark",
        "pr_number": 50933,
        "pr_file": "common/sketch/pom.xml",
        "discussion_id": "2132551993",
        "commented_code": "@@ -51,6 +51,13 @@\n       <scope>test</scope>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.junit-pioneer</groupId>\n+      <artifactId>junit-pioneer</artifactId>\n+      <version>2.3.0</version>",
        "comment_created_at": "2025-06-06T17:01:20+00:00",
        "comment_author": "LuciferYang",
        "comment_body": "For the management of dependency versions, they should be placed in the parent `pom.xml`. However, if `TestSparkBloomFilter` can be removed from the current pr, then it seems that this dependency is no longer needed either.",
        "pr_file_module": null
      },
      {
        "comment_id": "2149916207",
        "repo_full_name": "apache/spark",
        "pr_number": 50933,
        "pr_file": "common/sketch/pom.xml",
        "discussion_id": "2132551993",
        "commented_code": "@@ -51,6 +51,13 @@\n       <scope>test</scope>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.junit-pioneer</groupId>\n+      <artifactId>junit-pioneer</artifactId>\n+      <version>2.3.0</version>",
        "comment_created_at": "2025-06-16T12:40:17+00:00",
        "comment_author": "ishnagy",
        "comment_body": "I'll defer addressing this, until we decide what should happen with `TestSparkBloomFilter`.\r\n(remove & move the versions under managed dependencies)",
        "pr_file_module": null
      },
      {
        "comment_id": "2206896246",
        "repo_full_name": "apache/spark",
        "pr_number": 50933,
        "pr_file": "common/sketch/pom.xml",
        "discussion_id": "2132551993",
        "commented_code": "@@ -51,6 +51,13 @@\n       <scope>test</scope>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.junit-pioneer</groupId>\n+      <artifactId>junit-pioneer</artifactId>\n+      <version>2.3.0</version>",
        "comment_created_at": "2025-07-15T08:56:47+00:00",
        "comment_author": "peter-toth",
        "comment_body": "If we keep the dependency then please move the version to the main pom.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2220269686",
    "pr_number": 51600,
    "pr_file": "pom.xml",
    "created_at": "2025-07-21T20:38:29+00:00",
    "commented_code": "<arg>-feature</arg>\n               <arg>-explaintypes</arg>\n               <arg>-release</arg>\n-              <arg>17</arg>\n+              <arg>${maven.compiler.release}</arg>",
    "repo_full_name": "apache/spark",
    "discussion_comments": [
      {
        "comment_id": "2220269686",
        "repo_full_name": "apache/spark",
        "pr_number": 51600,
        "pr_file": "pom.xml",
        "discussion_id": "2220269686",
        "commented_code": "@@ -2754,7 +2754,7 @@\n               <arg>-feature</arg>\n               <arg>-explaintypes</arg>\n               <arg>-release</arg>\n-              <arg>17</arg>\n+              <arg>${maven.compiler.release}</arg>",
        "comment_created_at": "2025-07-21T20:38:29+00:00",
        "comment_author": "dongjoon-hyun",
        "comment_body": "Do we need this change to address the original reported issue `17.0.0` issue? This looks irrelevant somehow to me because we stick to Java 17 always here before.",
        "pr_file_module": null
      },
      {
        "comment_id": "2220274727",
        "repo_full_name": "apache/spark",
        "pr_number": 51600,
        "pr_file": "pom.xml",
        "discussion_id": "2220269686",
        "commented_code": "@@ -2754,7 +2754,7 @@\n               <arg>-feature</arg>\n               <arg>-explaintypes</arg>\n               <arg>-release</arg>\n-              <arg>17</arg>\n+              <arg>${maven.compiler.release}</arg>",
        "comment_created_at": "2025-07-21T20:40:35+00:00",
        "comment_author": "dongjoon-hyun",
        "comment_body": "IIUC, we use `Java 21` in order to build `Java 17`-compatible binary with this, don't we?",
        "pr_file_module": null
      },
      {
        "comment_id": "2220682783",
        "repo_full_name": "apache/spark",
        "pr_number": 51600,
        "pr_file": "pom.xml",
        "discussion_id": "2220269686",
        "commented_code": "@@ -2754,7 +2754,7 @@\n               <arg>-feature</arg>\n               <arg>-explaintypes</arg>\n               <arg>-release</arg>\n-              <arg>17</arg>\n+              <arg>${maven.compiler.release}</arg>",
        "comment_created_at": "2025-07-22T00:39:14+00:00",
        "comment_author": "LuciferYang",
        "comment_body": "reverted",
        "pr_file_module": null
      },
      {
        "comment_id": "2221259505",
        "repo_full_name": "apache/spark",
        "pr_number": 51600,
        "pr_file": "pom.xml",
        "discussion_id": "2220269686",
        "commented_code": "@@ -2754,7 +2754,7 @@\n               <arg>-feature</arg>\n               <arg>-explaintypes</arg>\n               <arg>-release</arg>\n-              <arg>17</arg>\n+              <arg>${maven.compiler.release}</arg>",
        "comment_created_at": "2025-07-22T05:41:39+00:00",
        "comment_author": "LuciferYang",
        "comment_body": "Here, if `-Djava.version=21` is not specified, the compilation result using Java 21 will be compatible with Java 17. However, once `-Djava.version=21` is specified, the compilation result will no longer be compatible with Java 17, regardless of whether it is hardcoded as 17 in this context.",
        "pr_file_module": null
      }
    ]
  }
]