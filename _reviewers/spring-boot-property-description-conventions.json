[
  {
    "discussion_id": "1749794629",
    "pr_number": 42180,
    "pr_file": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarProperties.java",
    "created_at": "2024-09-09T08:19:31+00:00",
    "commented_code": "this.readCompacted = readCompacted;\n \t\t}\n \n+\t\tpublic Startup getStartup() {\n+\t\t\treturn this.startup;\n+\t\t}\n+\n+\t}\n+\n+\tpublic static class Startup {\n+\n+\t\t/**\n+\t\t * The max time to wait for the container to start.",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "1749794629",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 42180,
        "pr_file": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/pulsar/PulsarProperties.java",
        "discussion_id": "1749794629",
        "commented_code": "@@ -916,6 +930,53 @@ public void setReadCompacted(boolean readCompacted) {\n \t\t\tthis.readCompacted = readCompacted;\n \t\t}\n \n+\t\tpublic Startup getStartup() {\n+\t\t\treturn this.startup;\n+\t\t}\n+\n+\t}\n+\n+\tpublic static class Startup {\n+\n+\t\t/**\n+\t\t * The max time to wait for the container to start.",
        "comment_created_at": "2024-09-09T08:19:31+00:00",
        "comment_author": "snicoll",
        "comment_body": "Description of configuration properties do not start with `the`, `a`, etc. I suggest `Time to wait for the container to start.`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1182183606",
    "pr_number": 35165,
    "pr_file": "spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/TracingProperties.java",
    "created_at": "2023-05-02T07:26:55+00:00",
    "commented_code": "}\n \n+\tpublic static class Brave {\n+\n+\t\t/**\n+\t\t * This signals to Brave (tracing library) that the propagation type and the",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "1182183606",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 35165,
        "pr_file": "spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/TracingProperties.java",
        "discussion_id": "1182183606",
        "commented_code": "@@ -194,4 +203,26 @@ enum PropagationType {\n \n \t}\n \n+\tpublic static class Brave {\n+\n+\t\t/**\n+\t\t * This signals to Brave (tracing library) that the propagation type and the",
        "comment_created_at": "2023-05-02T07:26:55+00:00",
        "comment_author": "wilkinsona",
        "comment_body": "Given that the property's prefix is `management.tracing.brave` do we need `(tracing library)` in the description? Put another way, is there another Brave that could cause confusion?",
        "pr_file_module": null
      },
      {
        "comment_id": "1182191427",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 35165,
        "pr_file": "spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/TracingProperties.java",
        "discussion_id": "1182183606",
        "commented_code": "@@ -194,4 +203,26 @@ enum PropagationType {\n \n \t}\n \n+\tpublic static class Brave {\n+\n+\t\t/**\n+\t\t * This signals to Brave (tracing library) that the propagation type and the",
        "comment_created_at": "2023-05-02T07:35:59+00:00",
        "comment_author": "wilkinsona",
        "comment_body": "We try to have `boolean` properties start with `Whether the\u2026`. Perhaps this could be something like this instead:\r\n\r\n> Whether the propagation type and tracing backend support sharing the span ID between client and server spans. Requires B3 propagation and a compatible backend.",
        "pr_file_module": null
      },
      {
        "comment_id": "1182701805",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 35165,
        "pr_file": "spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/tracing/TracingProperties.java",
        "discussion_id": "1182183606",
        "commented_code": "@@ -194,4 +203,26 @@ enum PropagationType {\n \n \t}\n \n+\tpublic static class Brave {\n+\n+\t\t/**\n+\t\t * This signals to Brave (tracing library) that the propagation type and the",
        "comment_created_at": "2023-05-02T15:20:48+00:00",
        "comment_author": "jonatan-ivanov",
        "comment_body": "I only know about the browser and there is a video editor too. I don't think it is confusing without \"(tracing library)\" in the description especially you need to add the Micrometer Tracing Brave Bridge.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "795455187",
    "pr_number": 29567,
    "pr_file": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketProperties.java",
    "created_at": "2022-01-31T09:00:17+00:00",
    "commented_code": "this.ssl = ssl;\n \t\t}\n \n+\t\tpublic Spec getSpec() {\n+\t\t\treturn this.spec;\n+\t\t}\n+\n+\t\tpublic void setSpec(Spec spec) {\n+\t\t\tthis.spec = spec;\n+\t\t}\n+\n+\t\tpublic static class Spec {\n+\n+\t\t\t/**\n+\t\t\t * Sub-protocol to use in websocket handshake signature. Null by default.",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "795455187",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 29567,
        "pr_file": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/rsocket/RSocketProperties.java",
        "discussion_id": "795455187",
        "commented_code": "@@ -121,6 +123,74 @@ public void setSsl(Ssl ssl) {\n \t\t\tthis.ssl = ssl;\n \t\t}\n \n+\t\tpublic Spec getSpec() {\n+\t\t\treturn this.spec;\n+\t\t}\n+\n+\t\tpublic void setSpec(Spec spec) {\n+\t\t\tthis.spec = spec;\n+\t\t}\n+\n+\t\tpublic static class Spec {\n+\n+\t\t\t/**\n+\t\t\t * Sub-protocol to use in websocket handshake signature. Null by default.",
        "comment_created_at": "2022-01-31T09:00:17+00:00",
        "comment_author": "snicoll",
        "comment_body": "There's no need to write \"by default\" in the description as we harvest defaults and process them separately. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "806541331",
    "pr_number": 29812,
    "pr_file": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java",
    "created_at": "2022-02-15T07:50:53+00:00",
    "commented_code": "}\n \n+\tpublic static class RetryTopic {\n+\n+\t\tprivate Integer attempts;",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "806541331",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 29812,
        "pr_file": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/kafka/KafkaProperties.java",
        "discussion_id": "806541331",
        "commented_code": "@@ -1314,6 +1321,82 @@ public void setOptions(Map<String, String> options) {\n \n \t}\n \n+\tpublic static class RetryTopic {\n+\n+\t\tprivate Integer attempts;",
        "comment_created_at": "2022-02-15T07:50:53+00:00",
        "comment_author": "snicoll",
        "comment_body": "This should have field Javadoc like other properties in this class. Please review those to phrase it consistently. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "684122513",
    "pr_number": 27584,
    "pr_file": "spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.java",
    "created_at": "2021-08-06T10:14:54+00:00",
    "commented_code": "*/\n \t\tprivate final Map<String, String> maximumExpectedValue = new LinkedHashMap<>();\n \n+\t\tprivate final Map<String, Duration> expiry = new LinkedHashMap<>();",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "684122513",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 27584,
        "pr_file": "spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.java",
        "discussion_id": "684122513",
        "commented_code": "@@ -296,6 +297,10 @@ public AutoTimeProperties getAutotime() {\n \t\t */\n \t\tprivate final Map<String, String> maximumExpectedValue = new LinkedHashMap<>();\n \n+\t\tprivate final Map<String, Duration> expiry = new LinkedHashMap<>();",
        "comment_created_at": "2021-08-06T10:14:54+00:00",
        "comment_author": "snicoll",
        "comment_body": "This should have a description like the other fields. ",
        "pr_file_module": null
      },
      {
        "comment_id": "684879946",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 27584,
        "pr_file": "spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.java",
        "discussion_id": "684122513",
        "commented_code": "@@ -296,6 +297,10 @@ public AutoTimeProperties getAutotime() {\n \t\t */\n \t\tprivate final Map<String, String> maximumExpectedValue = new LinkedHashMap<>();\n \n+\t\tprivate final Map<String, Duration> expiry = new LinkedHashMap<>();",
        "comment_created_at": "2021-08-09T03:05:39+00:00",
        "comment_author": "polarbear567",
        "comment_body": "Please review the description.",
        "pr_file_module": null
      }
    ]
  }
]