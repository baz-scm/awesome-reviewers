[
  {
    "discussion_id": "1130277334",
    "pr_number": 34518,
    "pr_file": "spring-boot-project/spring-boot-dependencies/build.gradle",
    "created_at": "2023-03-09T01:37:12+00:00",
    "commented_code": "]\n \t\t}\n \t}\n-\tlibrary(\"OpenTelemetry\", \"1.19.0\") {\n+\tlibrary(\"OpenTelemetry\", \"1.23.1-alpha\") {\n \t\tgroup(\"io.opentelemetry\") {\n \t\t\timports = [\n-\t\t\t\t\"opentelemetry-bom\"\n+\t\t\t\t\"opentelemetry-bom-alpha\"",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "1130277334",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 34518,
        "pr_file": "spring-boot-project/spring-boot-dependencies/build.gradle",
        "discussion_id": "1130277334",
        "commented_code": "@@ -1025,10 +1025,10 @@ bom {\n \t\t\t]\n \t\t}\n \t}\n-\tlibrary(\"OpenTelemetry\", \"1.19.0\") {\n+\tlibrary(\"OpenTelemetry\", \"1.23.1-alpha\") {\n \t\tgroup(\"io.opentelemetry\") {\n \t\t\timports = [\n-\t\t\t\t\"opentelemetry-bom\"\n+\t\t\t\t\"opentelemetry-bom-alpha\"",
        "comment_created_at": "2023-03-09T01:37:12+00:00",
        "comment_author": "jonatan-ivanov",
        "comment_body": "I'm not sure a stable version of Boot should depend on something that is unstable.\r\nAlso, right now upgrading OTel to anything higher than 1.20.1 will break baggage propagation in Micrometer Tracing.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "838325944",
    "pr_number": 30472,
    "pr_file": "spring-boot-project/spring-boot-docs/src/docs/asciidoc/actuator/metrics.adoc",
    "created_at": "2022-03-30T09:27:43+00:00",
    "commented_code": "- targets: [\"HOST:PORT\"]\n ----\n \n+https://prometheus.io/docs/prometheus/latest/feature_flags/#exemplars-storage[Prometheus Exemplars] are also supported. To enable this feature, a `SpanContextSupplier` bean should present. If you use https://spring.io/projects/spring-cloud-sleuth[Spring Cloud Sleuth], this will be auto-configured for you, but you can always create your own if you want. +\n+Please check the https://prometheus.io/docs/prometheus/latest/feature_flags/#exemplars-storage[Prometheus Docs], since this feature needs to be explicitly enabled on Prometheus' side, and it is only supported using the https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md#exemplars[OpenMetrics] format.",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "838325944",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 30472,
        "pr_file": "spring-boot-project/spring-boot-docs/src/docs/asciidoc/actuator/metrics.adoc",
        "discussion_id": "838325944",
        "commented_code": "@@ -455,6 +455,9 @@ The following example `scrape_config` adds to `prometheus.yml`:\n \t\t  - targets: [\"HOST:PORT\"]\n ----\n \n+https://prometheus.io/docs/prometheus/latest/feature_flags/#exemplars-storage[Prometheus Exemplars] are also supported. To enable this feature, a `SpanContextSupplier` bean should present. If you use https://spring.io/projects/spring-cloud-sleuth[Spring Cloud Sleuth], this will be auto-configured for you, but you can always create your own if you want. +\n+Please check the https://prometheus.io/docs/prometheus/latest/feature_flags/#exemplars-storage[Prometheus Docs], since this feature needs to be explicitly enabled on Prometheus' side, and it is only supported using the https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md#exemplars[OpenMetrics] format.",
        "comment_created_at": "2022-03-30T09:27:43+00:00",
        "comment_author": "wilkinsona",
        "comment_body": "Should we link to something stable (a tag or specific SHA) here? Perhaps https://github.com/OpenObservability/OpenMetrics/blob/v1.0.0/specification/OpenMetrics.md#exemplars.",
        "pr_file_module": null
      },
      {
        "comment_id": "838868483",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 30472,
        "pr_file": "spring-boot-project/spring-boot-docs/src/docs/asciidoc/actuator/metrics.adoc",
        "discussion_id": "838325944",
        "commented_code": "@@ -455,6 +455,9 @@ The following example `scrape_config` adds to `prometheus.yml`:\n \t\t  - targets: [\"HOST:PORT\"]\n ----\n \n+https://prometheus.io/docs/prometheus/latest/feature_flags/#exemplars-storage[Prometheus Exemplars] are also supported. To enable this feature, a `SpanContextSupplier` bean should present. If you use https://spring.io/projects/spring-cloud-sleuth[Spring Cloud Sleuth], this will be auto-configured for you, but you can always create your own if you want. +\n+Please check the https://prometheus.io/docs/prometheus/latest/feature_flags/#exemplars-storage[Prometheus Docs], since this feature needs to be explicitly enabled on Prometheus' side, and it is only supported using the https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md#exemplars[OpenMetrics] format.",
        "comment_created_at": "2022-03-30T18:56:54+00:00",
        "comment_author": "jonatan-ivanov",
        "comment_body": "\ud83d\udc4d\ud83c\udffc fixed",
        "pr_file_module": null
      }
    ]
  }
]