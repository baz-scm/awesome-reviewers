[
  {
    "discussion_id": "1868352608",
    "pr_number": 43176,
    "pr_file": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/StandardConfigDataLocationResolver.java",
    "created_at": "2024-12-03T20:52:14+00:00",
    "commented_code": "return references;\n \t}\n \n+\tprivate void validateProfiles(Profiles profiles) {\n+\t\tfor (String profile : profiles) {\n+\t\t\tvalidateProfile(profile);\n+\t\t}\n+\t}\n+\n+\tprivate void validateProfile(String profile) {\n+\t\tAssert.notNull(profile, \"Profile must not be null\");",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "1868352608",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 43176,
        "pr_file": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/StandardConfigDataLocationResolver.java",
        "discussion_id": "1868352608",
        "commented_code": "@@ -163,6 +165,27 @@ private Set<StandardConfigDataReference> getProfileSpecificReferences(ConfigData\n \t\treturn references;\n \t}\n \n+\tprivate void validateProfiles(Profiles profiles) {\n+\t\tfor (String profile : profiles) {\n+\t\t\tvalidateProfile(profile);\n+\t\t}\n+\t}\n+\n+\tprivate void validateProfile(String profile) {\n+\t\tAssert.notNull(profile, \"Profile must not be null\");",
        "comment_created_at": "2024-12-03T20:52:14+00:00",
        "comment_author": "akashpawar6474",
        "comment_body": "maybe we can combine null and empty checks in the single line with `Assert.state(!profile.isNullOrBlank())`",
        "pr_file_module": null
      },
      {
        "comment_id": "1868485383",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 43176,
        "pr_file": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/StandardConfigDataLocationResolver.java",
        "discussion_id": "1868352608",
        "commented_code": "@@ -163,6 +165,27 @@ private Set<StandardConfigDataReference> getProfileSpecificReferences(ConfigData\n \t\treturn references;\n \t}\n \n+\tprivate void validateProfiles(Profiles profiles) {\n+\t\tfor (String profile : profiles) {\n+\t\t\tvalidateProfile(profile);\n+\t\t}\n+\t}\n+\n+\tprivate void validateProfile(String profile) {\n+\t\tAssert.notNull(profile, \"Profile must not be null\");",
        "comment_created_at": "2024-12-03T23:10:48+00:00",
        "comment_author": "philwebb",
        "comment_body": "Java has no such `isNullOrBlank` method, however, `Assert.hasText(...)` deals with `null` and empty strings. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1868699361",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 43176,
        "pr_file": "spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/StandardConfigDataLocationResolver.java",
        "discussion_id": "1868352608",
        "commented_code": "@@ -163,6 +165,27 @@ private Set<StandardConfigDataReference> getProfileSpecificReferences(ConfigData\n \t\treturn references;\n \t}\n \n+\tprivate void validateProfiles(Profiles profiles) {\n+\t\tfor (String profile : profiles) {\n+\t\t\tvalidateProfile(profile);\n+\t\t}\n+\t}\n+\n+\tprivate void validateProfile(String profile) {\n+\t\tAssert.notNull(profile, \"Profile must not be null\");",
        "comment_created_at": "2024-12-04T04:24:08+00:00",
        "comment_author": "YangSiJun528",
        "comment_body": "I removed `Assert.notNull()` and updated error message in `Assert.hasText()`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1048485303",
    "pr_number": 33522,
    "pr_file": "spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/filter/AnnotationCustomizableTypeExcludeFilter.java",
    "created_at": "2022-12-14T13:43:01+00:00",
    "commented_code": "if (this == obj) {\n \t\t\treturn true;\n \t\t}\n-\t\tif (getClass() != obj.getClass()) {\n+\t\tif (obj == null || getClass() != obj.getClass()) {",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "1048485303",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 33522,
        "pr_file": "spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/filter/AnnotationCustomizableTypeExcludeFilter.java",
        "discussion_id": "1048485303",
        "commented_code": "@@ -115,12 +115,11 @@ public boolean equals(Object obj) {\n \t\tif (this == obj) {\n \t\t\treturn true;\n \t\t}\n-\t\tif (getClass() != obj.getClass()) {\n+\t\tif (obj == null || getClass() != obj.getClass()) {",
        "comment_created_at": "2022-12-14T13:43:01+00:00",
        "comment_author": "mhalbritter",
        "comment_body": "`.equals(null)` throws a NPE without this change.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "779259160",
    "pr_number": 29274,
    "pr_file": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/AbstractErrorController.java",
    "created_at": "2022-01-06T02:24:03+00:00",
    "commented_code": "private List<ErrorViewResolver> sortErrorViewResolvers(List<ErrorViewResolver> resolvers) {\n \t\tList<ErrorViewResolver> sorted = new ArrayList<>();\n-\t\tif (resolvers != null) {",
    "repo_full_name": "spring-projects/spring-boot",
    "discussion_comments": [
      {
        "comment_id": "779259160",
        "repo_full_name": "spring-projects/spring-boot",
        "pr_number": 29274,
        "pr_file": "spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/servlet/error/AbstractErrorController.java",
        "discussion_id": "779259160",
        "commented_code": "@@ -62,7 +63,7 @@ public AbstractErrorController(ErrorAttributes errorAttributes, List<ErrorViewRe\n \n \tprivate List<ErrorViewResolver> sortErrorViewResolvers(List<ErrorViewResolver> resolvers) {\n \t\tList<ErrorViewResolver> sorted = new ArrayList<>();\n-\t\tif (resolvers != null) {",
        "comment_created_at": "2022-01-06T02:24:03+00:00",
        "comment_author": "spencergibb",
        "comment_body": "There's no guarantee that resolvers is not null since there is no assertion in the constructor.",
        "pr_file_module": null
      }
    ]
  }
]