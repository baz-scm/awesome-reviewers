[
  {
    "discussion_id": "1411876311",
    "pr_number": 31723,
    "pr_file": "framework-docs/modules/ROOT/pages/testing/testcontext-framework/tel-config.adoc",
    "created_at": "2023-12-01T10:01:48+00:00",
    "commented_code": "Specifically, the `spring-test` module declares all core default `TestExecutionListener`\n implementations under the `org.springframework.test.context.TestExecutionListener` key in\n-its `META-INF/spring.factories` properties file. Third-party frameworks and developers\n-can contribute their own `TestExecutionListener` implementations to the list of default\n-listeners in the same manner through their own `META-INF/spring.factories` properties\n-file.\n+[its `META-INF/spring.factories` properties file](https://github.com/spring-projects/spring-framework/blob/main/spring-test/src/main/resources/META-INF/spring.factories).",
    "repo_full_name": "spring-projects/spring-framework",
    "discussion_comments": [
      {
        "comment_id": "1411876311",
        "repo_full_name": "spring-projects/spring-framework",
        "pr_number": 31723,
        "pr_file": "framework-docs/modules/ROOT/pages/testing/testcontext-framework/tel-config.adoc",
        "discussion_id": "1411876311",
        "commented_code": "@@ -82,10 +82,10 @@ issue is addressed through support for automatic discovery of default\n \n Specifically, the `spring-test` module declares all core default `TestExecutionListener`\n implementations under the `org.springframework.test.context.TestExecutionListener` key in\n-its `META-INF/spring.factories` properties file. Third-party frameworks and developers\n-can contribute their own `TestExecutionListener` implementations to the list of default\n-listeners in the same manner through their own `META-INF/spring.factories` properties\n-file.\n+[its `META-INF/spring.factories` properties file](https://github.com/spring-projects/spring-framework/blob/main/spring-test/src/main/resources/META-INF/spring.factories). ",
        "comment_created_at": "2023-12-01T10:01:48+00:00",
        "comment_author": "snicoll",
        "comment_body": "This has a `spring-framework-code` attribute that should be used rather than the hardcoded link. See `antora.yml`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1413545279",
        "repo_full_name": "spring-projects/spring-framework",
        "pr_number": 31723,
        "pr_file": "framework-docs/modules/ROOT/pages/testing/testcontext-framework/tel-config.adoc",
        "discussion_id": "1411876311",
        "commented_code": "@@ -82,10 +82,10 @@ issue is addressed through support for automatic discovery of default\n \n Specifically, the `spring-test` module declares all core default `TestExecutionListener`\n implementations under the `org.springframework.test.context.TestExecutionListener` key in\n-its `META-INF/spring.factories` properties file. Third-party frameworks and developers\n-can contribute their own `TestExecutionListener` implementations to the list of default\n-listeners in the same manner through their own `META-INF/spring.factories` properties\n-file.\n+[its `META-INF/spring.factories` properties file](https://github.com/spring-projects/spring-framework/blob/main/spring-test/src/main/resources/META-INF/spring.factories). ",
        "comment_created_at": "2023-12-04T08:50:53+00:00",
        "comment_author": "perlun",
        "comment_body": "Thanks for your feedback @snicoll, makes sense. :+1: Nice to learn about some of the Asciidoc features, seems like a nice usage of it in this case.\r\n\r\nI adjusted both this and incorporated the suggestion from @sbrannen, please re-check. (Sam - it did perhaps not make as much sense in the https://docs.spring.io/spring-framework/reference/testing/testcontext-framework/ctx-management/context-customizers.html#testcontext-context-customizers-automatic-discovery case, since it referred to both \"Spring Framework and Spring Boot\", but the link only refers to the Spring Framework one.. but, possibly still a step in the right direction. :thinking:)",
        "pr_file_module": null
      },
      {
        "comment_id": "1413872816",
        "repo_full_name": "spring-projects/spring-framework",
        "pr_number": 31723,
        "pr_file": "framework-docs/modules/ROOT/pages/testing/testcontext-framework/tel-config.adoc",
        "discussion_id": "1411876311",
        "commented_code": "@@ -82,10 +82,10 @@ issue is addressed through support for automatic discovery of default\n \n Specifically, the `spring-test` module declares all core default `TestExecutionListener`\n implementations under the `org.springframework.test.context.TestExecutionListener` key in\n-its `META-INF/spring.factories` properties file. Third-party frameworks and developers\n-can contribute their own `TestExecutionListener` implementations to the list of default\n-listeners in the same manner through their own `META-INF/spring.factories` properties\n-file.\n+[its `META-INF/spring.factories` properties file](https://github.com/spring-projects/spring-framework/blob/main/spring-test/src/main/resources/META-INF/spring.factories). ",
        "comment_created_at": "2023-12-04T13:28:27+00:00",
        "comment_author": "sbrannen",
        "comment_body": "Yes, indeed. That's a step in the right direction. I'll rework the wording locally after merging the PR.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1027090655",
    "pr_number": 29525,
    "pr_file": "framework-docs/src/docs/asciidoc/web-reactive.adoc",
    "created_at": "2022-11-19T13:33:26+00:00",
    "commented_code": "This part of the documentation covers support for reactive-stack web applications built\n on a https://www.reactive-streams.org/[Reactive Streams] API to run on non-blocking\n servers, such as Netty, Undertow, and Servlet containers. Individual chapters cover\n-the <<webflux.adoc#webflux, Spring WebFlux>> framework,\n+the <<web/webflux.adoc#webflux, Spring WebFlux>> framework,",
    "repo_full_name": "spring-projects/spring-framework",
    "discussion_comments": [
      {
        "comment_id": "1027090655",
        "repo_full_name": "spring-projects/spring-framework",
        "pr_number": 29525,
        "pr_file": "framework-docs/src/docs/asciidoc/web-reactive.adoc",
        "discussion_id": "1027090655",
        "commented_code": "@@ -6,7 +6,7 @@ include::page-layout.adoc[]\n This part of the documentation covers support for reactive-stack web applications built\n on a https://www.reactive-streams.org/[Reactive Streams] API to run on non-blocking\n servers, such as Netty, Undertow, and Servlet containers. Individual chapters cover\n-the <<webflux.adoc#webflux, Spring WebFlux>> framework,\n+the <<web/webflux.adoc#webflux, Spring WebFlux>> framework,",
        "comment_created_at": "2022-11-19T13:33:26+00:00",
        "comment_author": "sbrannen",
        "comment_body": "```suggestion\r\nthe <<webflux, Spring WebFlux>> framework,\r\n```\r\n\r\nYour fix works; however, when cross referencing a section within the current file (after includes have been applied), there is no need to use the folder and file name.\r\n\r\nI'll simplify that when merging the PR.",
        "pr_file_module": null
      },
      {
        "comment_id": "1027093429",
        "repo_full_name": "spring-projects/spring-framework",
        "pr_number": 29525,
        "pr_file": "framework-docs/src/docs/asciidoc/web-reactive.adoc",
        "discussion_id": "1027090655",
        "commented_code": "@@ -6,7 +6,7 @@ include::page-layout.adoc[]\n This part of the documentation covers support for reactive-stack web applications built\n on a https://www.reactive-streams.org/[Reactive Streams] API to run on non-blocking\n servers, such as Netty, Undertow, and Servlet containers. Individual chapters cover\n-the <<webflux.adoc#webflux, Spring WebFlux>> framework,\n+the <<web/webflux.adoc#webflux, Spring WebFlux>> framework,",
        "comment_created_at": "2022-11-19T13:59:26+00:00",
        "comment_author": "divcon",
        "comment_body": "Thanks for your review.",
        "pr_file_module": null
      }
    ]
  }
]