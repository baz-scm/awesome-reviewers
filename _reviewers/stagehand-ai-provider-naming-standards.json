[
  {
    "discussion_id": "1888099043",
    "pr_number": 317,
    "pr_file": "README.md",
    "created_at": "2024-12-17T08:31:23+00:00",
    "commented_code": "You'll need to provide your API Key for the model provider you'd like to use. The default model provider is OpenAI, but you can also use Anthropic or others. More information on supported models can be found in the [API Reference](#api-reference).\n \n-Ensure that an OpenAI API Key or Anthropic API key is accessible in your local environment.\n+Ensure that an OpenAI API Key or Anthropic API key is accessible in your local environment (only one is required).\n \n ```\n export OPENAI_API_KEY=sk-...\n export ANTHROPIC_API_KEY=sk-...\n ```\n \n+NOTE: Stagehand client will default to openai if these are not specified",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1888099043",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 317,
        "pr_file": "README.md",
        "discussion_id": "1888099043",
        "commented_code": "@@ -63,13 +63,15 @@ npm install @browserbasehq/stagehand zod\n \n You'll need to provide your API Key for the model provider you'd like to use. The default model provider is OpenAI, but you can also use Anthropic or others. More information on supported models can be found in the [API Reference](#api-reference).\n \n-Ensure that an OpenAI API Key or Anthropic API key is accessible in your local environment.\n+Ensure that an OpenAI API Key or Anthropic API key is accessible in your local environment (only one is required).\n \n ```\n export OPENAI_API_KEY=sk-...\n export ANTHROPIC_API_KEY=sk-...\n ```\n \n+NOTE: Stagehand client will default to openai if these are not specified",
        "comment_created_at": "2024-12-17T08:31:23+00:00",
        "comment_author": "kamath",
        "comment_body": "```suggestion\r\nNOTE: Stagehand client will default to OpenAI if these are not specified\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1639162008",
    "pr_number": 48,
    "pr_file": "README.md",
    "created_at": "2024-06-14T02:58:43+00:00",
    "commented_code": "# Stagehand\n \n-Stagehand is a web automation SDK that leverages LLMs, [Playwright](https://playwright.dev/), and browser techniques to achieve a low friction, cost effective, and resilient way to automate the browser. Currently, stagehand supports Node.js and Node like runtimes.\n+Stagehand is an AI Web Browser SDK enabling you to interact with any web page using high-level instructions.\n+\n+![](./images/wordle.png)\n+\n+_Stagehand combines DOM preprocessing with chunking, Playwright, and LLMs to complete a Wordle. Learn more in the \"How it works\" section._\n \n ## Getting started\n \n-In order to run stagehand you'll need to create a tarball via the build step. This will be provided by the Browserbase team, or can be generated following the steps below.\n+### 0. Prerequisites\n \n-here's an example using npm to install a local tarball:\n+Stagehand is currently compatible with Node.js, Bun, and Deno.\n \n-```bash\n-npm install {PATH_TO_PACKAGE}/{stagehand}-{VERSION}.tgz\n-```\n+Stagehand requires OpenAI as a model.\n \n-next, you'll need a `.env` file with the following providers\n+Ensure that an OpenAI API Key is accessible in your local environment. For example, with a `.env` file as follows:\n \n ```\n OPENAI_API_KEY=\"\"\n-BROWSERBASE_API_KEY=\"\"\n ```\n \n-install dependencies, and you're ready to go! Here's a full example of initializing and running an automation.\n+<Note>\n+\n+> [!NOTE]\n+> Get your OpenAI API Key from the [OpenAI Platform](https://platform.openai.com/api-keys).\n+\n+<br />\n+\n+### 1. Install the dependencies\n+\n+Get started by installing the `@browserbasehq/stagehand` package:\n+\n+```bash\n+npm install @browserbasehq/stagehand\n+```\n+\n+<br />\n+\n+### 2. Configure a Browser\n+\n+Stagehand can be used with a local or remote Browser.\n+\n+**Use a local browser (_recommended for development_)**\n+\n+To use a local Browser, install Playwright on your local machine:\n+\n+```bash\n+pnpm exec playwright install\n+```\n+\n+and configure `Stagehand()` as follows:\n+\n+```typescript\n+const stagehand = new Stagehand({\n+  env: \"LOCAL\",\n+});\n+```\n \n > [!NOTE]\n > You may need to follow additional Playwright instructions to install chromium if you have not done so previously.\n \n+<br />\n+\n+**Use a remote browser (_recommended for deployment_)**\n+\n+To use a remote Browser, create an account on Browserbase to get an API Key and update your `.env` file as follows:\n+\n+```\n+BROWSERBASE_API_KEY=\"\"\n+```\n+\n+Then, configure a `Stagehand()` instance as follows:\n+\n+```typescript\n+const stagehand = new Stagehand({\n+  env: \"BROWSERBASE\",\n+});\n+```\n+\n+<br />\n+\n+### 3. Run your first Stagehand script\n+\n+You are now all set!\n+Start your first Stagehand script with the example featured below, attempting to solve the wordle of the day.\n+\n+## Example\n+\n+The code below uses Stagehand to complete the wordle of the day.\n+\n+_You can run this example by forking and configuring the repository, and running `pnpm example`._\n+\n ```typescript\n import { Stagehand } from \"../lib\";\n+import { z } from \"zod\";\n+\n+// 1. we init a Stagehand instance with a local Browser\n+const stagehand = new Stagehand({ env: \"LOCAL\" });\n+\n+// 2. link the Browser instance with Stagehand\n+await stagehand.init();\n+\n+// Access the current Playwright Page object with `stagehand.page`\n+//\n+// 3. we navigate to the Wordle game web page\n+await stagehand.page.goto(\"https://www.nytimes.com/games/wordle/index.html\");\n+\n+// The `observe()` method is supercharged `Page.locator()`, attempting\n+//  to locate an element using your instructions\n+//\n+// 4. Let's check if we can play\n+const playButton = await stagehand.observe(\"Find the play button\");\n \n-async function example() {\n-  const stagehand = new Stagehand({\n-    env: \"LOCAL\",\n-    verbose: true,\n-    debugDom: true,\n+if (!playButton) {\n+  console.log(\"Seems like you already played wordle today!\");",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1639162008",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 48,
        "pr_file": "README.md",
        "discussion_id": "1639162008",
        "commented_code": "@@ -1,73 +1,199 @@\n # Stagehand\n \n-Stagehand is a web automation SDK that leverages LLMs, [Playwright](https://playwright.dev/), and browser techniques to achieve a low friction, cost effective, and resilient way to automate the browser. Currently, stagehand supports Node.js and Node like runtimes.\n+Stagehand is an AI Web Browser SDK enabling you to interact with any web page using high-level instructions.\n+\n+![](./images/wordle.png)\n+\n+_Stagehand combines DOM preprocessing with chunking, Playwright, and LLMs to complete a Wordle. Learn more in the \"How it works\" section._\n \n ## Getting started\n \n-In order to run stagehand you'll need to create a tarball via the build step. This will be provided by the Browserbase team, or can be generated following the steps below.\n+### 0. Prerequisites\n \n-here's an example using npm to install a local tarball:\n+Stagehand is currently compatible with Node.js, Bun, and Deno.\n \n-```bash\n-npm install {PATH_TO_PACKAGE}/{stagehand}-{VERSION}.tgz\n-```\n+Stagehand requires OpenAI as a model.\n \n-next, you'll need a `.env` file with the following providers\n+Ensure that an OpenAI API Key is accessible in your local environment. For example, with a `.env` file as follows:\n \n ```\n OPENAI_API_KEY=\"\"\n-BROWSERBASE_API_KEY=\"\"\n ```\n \n-install dependencies, and you're ready to go! Here's a full example of initializing and running an automation.\n+<Note>\n+\n+> [!NOTE]\n+> Get your OpenAI API Key from the [OpenAI Platform](https://platform.openai.com/api-keys).\n+\n+<br />\n+\n+### 1. Install the dependencies\n+\n+Get started by installing the `@browserbasehq/stagehand` package:\n+\n+```bash\n+npm install @browserbasehq/stagehand\n+```\n+\n+<br />\n+\n+### 2. Configure a Browser\n+\n+Stagehand can be used with a local or remote Browser.\n+\n+**Use a local browser (_recommended for development_)**\n+\n+To use a local Browser, install Playwright on your local machine:\n+\n+```bash\n+pnpm exec playwright install\n+```\n+\n+and configure `Stagehand()` as follows:\n+\n+```typescript\n+const stagehand = new Stagehand({\n+  env: \"LOCAL\",\n+});\n+```\n \n > [!NOTE]\n > You may need to follow additional Playwright instructions to install chromium if you have not done so previously.\n \n+<br />\n+\n+**Use a remote browser (_recommended for deployment_)**\n+\n+To use a remote Browser, create an account on Browserbase to get an API Key and update your `.env` file as follows:\n+\n+```\n+BROWSERBASE_API_KEY=\"\"\n+```\n+\n+Then, configure a `Stagehand()` instance as follows:\n+\n+```typescript\n+const stagehand = new Stagehand({\n+  env: \"BROWSERBASE\",\n+});\n+```\n+\n+<br />\n+\n+### 3. Run your first Stagehand script\n+\n+You are now all set!\n+Start your first Stagehand script with the example featured below, attempting to solve the wordle of the day.\n+\n+## Example\n+\n+The code below uses Stagehand to complete the wordle of the day.\n+\n+_You can run this example by forking and configuring the repository, and running `pnpm example`._\n+\n ```typescript\n import { Stagehand } from \"../lib\";\n+import { z } from \"zod\";\n+\n+// 1. we init a Stagehand instance with a local Browser\n+const stagehand = new Stagehand({ env: \"LOCAL\" });\n+\n+// 2. link the Browser instance with Stagehand\n+await stagehand.init();\n+\n+// Access the current Playwright Page object with `stagehand.page`\n+//\n+// 3. we navigate to the Wordle game web page\n+await stagehand.page.goto(\"https://www.nytimes.com/games/wordle/index.html\");\n+\n+// The `observe()` method is supercharged `Page.locator()`, attempting\n+//  to locate an element using your instructions\n+//\n+// 4. Let's check if we can play\n+const playButton = await stagehand.observe(\"Find the play button\");\n \n-async function example() {\n-  const stagehand = new Stagehand({\n-    env: \"LOCAL\",\n-    verbose: true,\n-    debugDom: true,\n+if (!playButton) {\n+  console.log(\"Seems like you already played wordle today!\");",
        "comment_created_at": "2024-06-14T02:58:43+00:00",
        "comment_author": "jeremypress",
        "comment_body": "did this happen when you ran twice? A new browser always had no cookies and so you can play repeatedly ",
        "pr_file_module": null
      }
    ]
  }
]