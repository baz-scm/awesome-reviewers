[
  {
    "discussion_id": "1970213371",
    "pr_number": 508,
    "pr_file": "lib/index.ts",
    "created_at": "2025-02-25T17:12:39+00:00",
    "commented_code": "private localBrowserLaunchOptions?: LocalBrowserLaunchOptions;\n   public readonly selfHeal: boolean;\n \n+  public getLLMClient(): LLMClient {\n+    return this.llmClient;\n+  }\n+\n+  public getSystemPrompt(): string | undefined {\n+    return this.userProvidedInstructions;\n+  }\n+\n+  public getAPIClient(): StagehandAPI | undefined {\n+    return this.apiClient;\n+  }\n+\n+  public getWaitForCaptchaSolves(): boolean {\n+    return this.waitForCaptchaSolves;\n+  }\n+\n+  public setActivePage(page: StagehandPage): void {\n+    this.stagehandPage = page;\n+  }",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1970213371",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 508,
        "pr_file": "lib/index.ts",
        "discussion_id": "1970213371",
        "commented_code": "@@ -377,6 +377,35 @@ export class Stagehand {\n   private localBrowserLaunchOptions?: LocalBrowserLaunchOptions;\n   public readonly selfHeal: boolean;\n \n+  public getLLMClient(): LLMClient {\n+    return this.llmClient;\n+  }\n+\n+  public getSystemPrompt(): string | undefined {\n+    return this.userProvidedInstructions;\n+  }\n+\n+  public getAPIClient(): StagehandAPI | undefined {\n+    return this.apiClient;\n+  }\n+\n+  public getWaitForCaptchaSolves(): boolean {\n+    return this.waitForCaptchaSolves;\n+  }\n+\n+  public setActivePage(page: StagehandPage): void {\n+    this.stagehandPage = page;\n+  }",
        "comment_created_at": "2025-02-25T17:12:39+00:00",
        "comment_author": "kamath",
        "comment_body": "what if we make the input parameter an index? i.e. specify the page in `context.pages()` -- helps prevent edge cases",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1868531985",
    "pr_number": 269,
    "pr_file": "lib/index.ts",
    "created_at": "2024-12-04T00:24:27+00:00",
    "commented_code": "// Overload the page.goto method\n     const originalGoto = this.page.goto.bind(this.page);\n-    this.page.goto = async (url: string, options?: any) => {\n+    this.page.goto = async (url: string, options) => {",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1868531985",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 269,
        "pr_file": "lib/index.ts",
        "discussion_id": "1868531985",
        "commented_code": "@@ -391,7 +393,7 @@ export class Stagehand {\n \n     // Overload the page.goto method\n     const originalGoto = this.page.goto.bind(this.page);\n-    this.page.goto = async (url: string, options?: any) => {\n+    this.page.goto = async (url: string, options) => {",
        "comment_created_at": "2024-12-04T00:24:27+00:00",
        "comment_author": "kamath",
        "comment_body": "why not add `options?: GotoOptions` as below?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1854636307",
    "pr_number": 202,
    "pr_file": "lib/llm/LLMProvider.ts",
    "created_at": "2024-11-22T20:44:10+00:00",
    "commented_code": "}\n   }\n }\n+\n+export const resolveLLMClient = (",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1854636307",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 202,
        "pr_file": "lib/llm/LLMProvider.ts",
        "discussion_id": "1854636307",
        "commented_code": "@@ -77,3 +77,20 @@ export class LLMProvider {\n     }\n   }\n }\n+\n+export const resolveLLMClient = (",
        "comment_created_at": "2024-11-22T20:44:10+00:00",
        "comment_author": "kamath",
        "comment_body": "This doesn't need to take in `llmClient`. Also, instead of ordered params, it would be better to have an object passed in with a function signature like `({ llmProvider, modelName, requestId }: { llmClient?: llmClient, modelName?: AvailableModel, requestId?: string })`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1835995952",
    "pr_number": 171,
    "pr_file": "evals/index.eval.ts",
    "created_at": "2024-11-11T05:57:39+00:00",
    "commented_code": "await stagehand.page.goto(`https://chefstoys.com/`, { timeout: 60000 });\n \n     await stagehand.act({\n-      action: \"search for peelers\",\n+      action: \"search\",",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1835995952",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 171,
        "pr_file": "evals/index.eval.ts",
        "discussion_id": "1835995952",
        "commented_code": "@@ -269,7 +269,10 @@ const peeler_complex = async () => {\n     await stagehand.page.goto(`https://chefstoys.com/`, { timeout: 60000 });\n \n     await stagehand.act({\n-      action: \"search for peelers\",\n+      action: \"search\",",
        "comment_created_at": "2024-11-11T05:57:39+00:00",
        "comment_author": "pkiv",
        "comment_body": "I really think that this needs to have an API like `await stagehand.act({action: \"search for %search_query%\", variables: {search_query: \"peeler\"});`",
        "pr_file_module": null
      },
      {
        "comment_id": "1836021445",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 171,
        "pr_file": "evals/index.eval.ts",
        "discussion_id": "1835995952",
        "commented_code": "@@ -269,7 +269,10 @@ const peeler_complex = async () => {\n     await stagehand.page.goto(`https://chefstoys.com/`, { timeout: 60000 });\n \n     await stagehand.act({\n-      action: \"search for peelers\",\n+      action: \"search\",",
        "comment_created_at": "2024-11-11T06:32:27+00:00",
        "comment_author": "pkiv",
        "comment_body": "Will be addressed in a future PR",
        "pr_file_module": null
      }
    ]
  }
]