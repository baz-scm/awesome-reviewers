[
  {
    "discussion_id": "2029657881",
    "pr_number": 637,
    "pr_file": "types/stagehandErrors.ts",
    "created_at": "2025-04-05T02:22:09+00:00",
    "commented_code": "}\n \n export class StagehandDefaultError extends StagehandError {\n-  constructor() {\n-    super(\n-      `\nHey! We're sorry you ran into an error. \nIf you need help, please open a Github issue or reach out to us on Slack: https://stagehand.dev/slack\n`,\n-    );\n+  constructor(error?: unknown) {\n+    if (error instanceof Error || error instanceof StagehandError) {\n+      super(\n+        `\nHey! We're sorry you ran into an error. \nIf you need help, please open a Github issue or reach out to us on Slack: https://stagehand.dev/slack\n\nFull error:\n${error.message}`,",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "2029657881",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 637,
        "pr_file": "types/stagehandErrors.ts",
        "discussion_id": "2029657881",
        "commented_code": "@@ -6,10 +6,12 @@ export class StagehandError extends Error {\n }\n \n export class StagehandDefaultError extends StagehandError {\n-  constructor() {\n-    super(\n-      `\\nHey! We're sorry you ran into an error. \\nIf you need help, please open a Github issue or reach out to us on Slack: https://stagehand.dev/slack\\n`,\n-    );\n+  constructor(error?: unknown) {\n+    if (error instanceof Error || error instanceof StagehandError) {\n+      super(\n+        `\\nHey! We're sorry you ran into an error. \\nIf you need help, please open a Github issue or reach out to us on Slack: https://stagehand.dev/slack\\n\\nFull error:\\n${error.message}`,",
        "comment_created_at": "2025-04-05T02:22:09+00:00",
        "comment_author": "kamath",
        "comment_body": "helps us see the stacktrace when `StagehandDefaultError` is thrown",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1903193943",
    "pr_number": 374,
    "pr_file": "lib/StagehandPage.ts",
    "created_at": "2025-01-05T04:24:24+00:00",
    "commented_code": ") {\n     this.intPage = Object.assign(page, {\n       act: () => {\n-        throw new Error(\"act() is not implemented on the base page object\");\n+        throw new Error(\n+          \"act() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1903193943",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 374,
        "pr_file": "lib/StagehandPage.ts",
        "discussion_id": "1903193943",
        "commented_code": "@@ -34,13 +34,24 @@ export class StagehandPage {\n   ) {\n     this.intPage = Object.assign(page, {\n       act: () => {\n-        throw new Error(\"act() is not implemented on the base page object\");\n+        throw new Error(\n+          \"act() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",",
        "comment_created_at": "2025-01-05T04:24:24+00:00",
        "comment_author": "kamath",
        "comment_body": "```suggestion\r\n          \"You seem to be calling `act` on a page in an uninitialized `Stagehand` object. Ensure you are running `await stagehand.init()` on the Stagehand object before referencing the `page` object.\",\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1903193965",
    "pr_number": 374,
    "pr_file": "lib/StagehandPage.ts",
    "created_at": "2025-01-05T04:24:37+00:00",
    "commented_code": ") {\n     this.intPage = Object.assign(page, {\n       act: () => {\n-        throw new Error(\"act() is not implemented on the base page object\");\n+        throw new Error(\n+          \"act() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       extract: () => {\n-        throw new Error(\"extract() is not implemented on the base page object\");\n+        throw new Error(\n+          \"extract() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1903193965",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 374,
        "pr_file": "lib/StagehandPage.ts",
        "discussion_id": "1903193965",
        "commented_code": "@@ -34,13 +34,24 @@ export class StagehandPage {\n   ) {\n     this.intPage = Object.assign(page, {\n       act: () => {\n-        throw new Error(\"act() is not implemented on the base page object\");\n+        throw new Error(\n+          \"act() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       extract: () => {\n-        throw new Error(\"extract() is not implemented on the base page object\");\n+        throw new Error(\n+          \"extract() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",",
        "comment_created_at": "2025-01-05T04:24:37+00:00",
        "comment_author": "kamath",
        "comment_body": "```suggestion\r\n          \"You seem to be calling `extract` on a page in an uninitialized `Stagehand` object. Ensure you are running `await stagehand.init()` on the Stagehand object before referencing the `page` object.\",\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1903194003",
    "pr_number": 374,
    "pr_file": "lib/StagehandPage.ts",
    "created_at": "2025-01-05T04:24:48+00:00",
    "commented_code": ") {\n     this.intPage = Object.assign(page, {\n       act: () => {\n-        throw new Error(\"act() is not implemented on the base page object\");\n+        throw new Error(\n+          \"act() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       extract: () => {\n-        throw new Error(\"extract() is not implemented on the base page object\");\n+        throw new Error(\n+          \"extract() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       observe: () => {\n-        throw new Error(\"observe() is not implemented on the base page object\");\n+        throw new Error(\n+          \"observe() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1903194003",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 374,
        "pr_file": "lib/StagehandPage.ts",
        "discussion_id": "1903194003",
        "commented_code": "@@ -34,13 +34,24 @@ export class StagehandPage {\n   ) {\n     this.intPage = Object.assign(page, {\n       act: () => {\n-        throw new Error(\"act() is not implemented on the base page object\");\n+        throw new Error(\n+          \"act() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       extract: () => {\n-        throw new Error(\"extract() is not implemented on the base page object\");\n+        throw new Error(\n+          \"extract() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       observe: () => {\n-        throw new Error(\"observe() is not implemented on the base page object\");\n+        throw new Error(\n+          \"observe() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",",
        "comment_created_at": "2025-01-05T04:24:48+00:00",
        "comment_author": "kamath",
        "comment_body": "```suggestion\r\n          \"You seem to be calling `observe` on a page in an uninitialized `Stagehand` object. Ensure you are running `await stagehand.init()` on the Stagehand object before referencing the `page` object.\",\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1903194104",
    "pr_number": 374,
    "pr_file": "lib/StagehandPage.ts",
    "created_at": "2025-01-05T04:25:34+00:00",
    "commented_code": ") {\n     this.intPage = Object.assign(page, {\n       act: () => {\n-        throw new Error(\"act() is not implemented on the base page object\");\n+        throw new Error(\n+          \"act() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       extract: () => {\n-        throw new Error(\"extract() is not implemented on the base page object\");\n+        throw new Error(\n+          \"extract() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       observe: () => {\n-        throw new Error(\"observe() is not implemented on the base page object\");\n+        throw new Error(\n+          \"observe() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n+      },\n+      on: () => {\n+        throw new Error(\n+          \"on() is not implemented on the base page object. Stagehand overrides Playwright's on() method to update it's behavior, so ensure you call init() on the Stagehand object before you call on() on the page object.\",",
    "repo_full_name": "browserbase/stagehand",
    "discussion_comments": [
      {
        "comment_id": "1903194104",
        "repo_full_name": "browserbase/stagehand",
        "pr_number": 374,
        "pr_file": "lib/StagehandPage.ts",
        "discussion_id": "1903194104",
        "commented_code": "@@ -34,13 +34,24 @@ export class StagehandPage {\n   ) {\n     this.intPage = Object.assign(page, {\n       act: () => {\n-        throw new Error(\"act() is not implemented on the base page object\");\n+        throw new Error(\n+          \"act() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       extract: () => {\n-        throw new Error(\"extract() is not implemented on the base page object\");\n+        throw new Error(\n+          \"extract() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n       },\n       observe: () => {\n-        throw new Error(\"observe() is not implemented on the base page object\");\n+        throw new Error(\n+          \"observe() is not implemented on the base page object. Ensure you are calling init() on the Stagehand object before calling methods on the page object.\",\n+        );\n+      },\n+      on: () => {\n+        throw new Error(\n+          \"on() is not implemented on the base page object. Stagehand overrides Playwright's on() method to update it's behavior, so ensure you call init() on the Stagehand object before you call on() on the page object.\",",
        "comment_created_at": "2025-01-05T04:25:34+00:00",
        "comment_author": "kamath",
        "comment_body": "```suggestion\r\n          \"You seem to be referencing a page in an uninitialized `Stagehand` object. Ensure you are running `await stagehand.init()` on the Stagehand object before referencing the `page` object.\",\r\n```\r\n\r\ndon't wanna highlight the stagehand overrides too much to confuse the end user. let's say something simpler",
        "pr_file_module": null
      }
    ]
  }
]