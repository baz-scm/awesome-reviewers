[
  {
    "discussion_id": "2214078825",
    "pr_number": 37265,
    "pr_file": "apps/studio/data/logs/unified-log-inspection-query.ts",
    "created_at": "2025-07-17T19:03:30+00:00",
    "commented_code": "({ signal }) => getUnifiedLogInspection({ projectRef, logId, type, search }, signal),\n     {\n       enabled: enabled && typeof projectRef !== 'undefined',\n+      refetchOnWindowFocus: false,",
    "repo_full_name": "supabase/supabase",
    "discussion_comments": [
      {
        "comment_id": "2214078825",
        "repo_full_name": "supabase/supabase",
        "pr_number": 37265,
        "pr_file": "apps/studio/data/logs/unified-log-inspection-query.ts",
        "discussion_id": "2214078825",
        "commented_code": "@@ -182,6 +182,7 @@ export const useUnifiedLogInspectionQuery = <TData = UnifiedLogInspectionData>(\n     ({ signal }) => getUnifiedLogInspection({ projectRef, logId, type, search }, signal),\n     {\n       enabled: enabled && typeof projectRef !== 'undefined',\n+      refetchOnWindowFocus: false,",
        "comment_created_at": "2025-07-17T19:03:30+00:00",
        "comment_author": "joshenlim",
        "comment_body": "reckon we can just use `UNIFIED_LOGS_QUERY_OPTIONS` here which does all this\r\n<img width=\"369\" height=\"172\" alt=\"image\" src=\"https://github.com/user-attachments/assets/77ee2dcf-b496-4313-8821-8538d7d5bfd7\" />\r\n\r\nwe use it in the facet-count-query and the infinite-query too\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2214080227",
        "repo_full_name": "supabase/supabase",
        "pr_number": 37265,
        "pr_file": "apps/studio/data/logs/unified-log-inspection-query.ts",
        "discussion_id": "2214078825",
        "commented_code": "@@ -182,6 +182,7 @@ export const useUnifiedLogInspectionQuery = <TData = UnifiedLogInspectionData>(\n     ({ signal }) => getUnifiedLogInspection({ projectRef, logId, type, search }, signal),\n     {\n       enabled: enabled && typeof projectRef !== 'undefined',\n+      refetchOnWindowFocus: false,",
        "comment_created_at": "2025-07-17T19:04:13+00:00",
        "comment_author": "MildTomato",
        "comment_body": "nice",
        "pr_file_module": null
      },
      {
        "comment_id": "2214082590",
        "repo_full_name": "supabase/supabase",
        "pr_number": 37265,
        "pr_file": "apps/studio/data/logs/unified-log-inspection-query.ts",
        "discussion_id": "2214078825",
        "commented_code": "@@ -182,6 +182,7 @@ export const useUnifiedLogInspectionQuery = <TData = UnifiedLogInspectionData>(\n     ({ signal }) => getUnifiedLogInspection({ projectRef, logId, type, search }, signal),\n     {\n       enabled: enabled && typeof projectRef !== 'undefined',\n+      refetchOnWindowFocus: false,",
        "comment_created_at": "2025-07-17T19:05:30+00:00",
        "comment_author": "MildTomato",
        "comment_body": "updating ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2179312432",
    "pr_number": 36824,
    "pr_file": "apps/studio/lib/constants/infrastructure.ts",
    "created_at": "2025-07-02T07:19:00+00:00",
    "commented_code": "ENTERPRISE: 'tier_enterprise',\n }\n \n-export const DEFAULT_PROVIDER: CloudProvider = 'AWS'\n+export const DEFAULT_PROVIDER: CloudProvider =\n+  process.env.NEXT_PUBLIC_ENVIRONMENT !== 'prod' ? 'AWS_K8S' : 'AWS'",
    "repo_full_name": "supabase/supabase",
    "discussion_comments": [
      {
        "comment_id": "2179312432",
        "repo_full_name": "supabase/supabase",
        "pr_number": 36824,
        "pr_file": "apps/studio/lib/constants/infrastructure.ts",
        "discussion_id": "2179312432",
        "commented_code": "@@ -25,7 +25,8 @@ export const PRICING_TIER_PRODUCT_IDS = {\n   ENTERPRISE: 'tier_enterprise',\n }\n \n-export const DEFAULT_PROVIDER: CloudProvider = 'AWS'\n+export const DEFAULT_PROVIDER: CloudProvider =\n+  process.env.NEXT_PUBLIC_ENVIRONMENT !== 'prod' ? 'AWS_K8S' : 'AWS'",
        "comment_created_at": "2025-07-02T07:19:00+00:00",
        "comment_author": "dragarcia",
        "comment_body": "```suggestion\r\nexport const DEFAULT_PROVIDER: CloudProvider =\r\n  process.env.NEXT_PUBLIC_ENVIRONMENT &&\r\n  ['staging', 'preview'].includes(process.env.NEXT_PUBLIC_ENVIRONMENT)\r\n    ? 'AWS_K8S'\r\n    : 'AWS'\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2086858505",
    "pr_number": 35529,
    "pr_file": "apps/docs/instrumentation-client.ts",
    "created_at": "2025-05-13T13:39:30+00:00",
    "commented_code": "+// This file configures the initialization of Sentry on the client.\n+// The added config here will be used whenever a users loads a page in their browser.\n+// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n+\n+import * as Sentry from '@sentry/nextjs'\n+import { IS_DEV } from './lib/constants'\n+\n+Sentry.init({\n+  dsn: 'https://3c27c63b42048231340b7d640767ad02@o398706.ingest.us.sentry.io/4508132895096832',",
    "repo_full_name": "supabase/supabase",
    "discussion_comments": [
      {
        "comment_id": "2086858505",
        "repo_full_name": "supabase/supabase",
        "pr_number": 35529,
        "pr_file": "apps/docs/instrumentation-client.ts",
        "discussion_id": "2086858505",
        "commented_code": "@@ -0,0 +1,24 @@\n+// This file configures the initialization of Sentry on the client.\n+// The added config here will be used whenever a users loads a page in their browser.\n+// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n+\n+import * as Sentry from '@sentry/nextjs'\n+import { IS_DEV } from './lib/constants'\n+\n+Sentry.init({\n+  dsn: 'https://3c27c63b42048231340b7d640767ad02@o398706.ingest.us.sentry.io/4508132895096832',",
        "comment_created_at": "2025-05-13T13:39:30+00:00",
        "comment_author": "avallete",
        "comment_body": "**nitpick**\r\n\r\nMight wanna turn this into a named constant and import it everywhere, or use env variable like seems to be used for: https://github.com/supabase/supabase/blob/master/apps/studio/sentry.server.config.ts#L8",
        "pr_file_module": null
      }
    ]
  }
]