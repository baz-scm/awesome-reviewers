[
  {
    "discussion_id": "2102046073",
    "pr_number": 35809,
    "pr_file": "apps/studio/components/ui/ProjectSettings/DisplayApiSettings.tsx",
    "created_at": "2025-05-22T09:10:06+00:00",
    "commented_code": "// api keys should not be empty. However it can be populated with a delay on project creation\n   const isApiKeysEmpty = apiKeys.length === 0\n \n+  const { isLoading: isLoadingLastUsed, logData: lastUsedLogData } = useLogsQuery(projectRef, {\n+    iso_timestamp_start: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n+    iso_timestamp_end: new Date().toISOString(),\n+    sql: \"SELECT unix_millis(max(timestamp)) as timestamp, payload.role, payload.signature_prefix FROM edge_logs cross join unnest(metadata) as m cross join unnest(m.request) as request cross join unnest(request.sb) as sb cross join unnest(sb.jwt) as jwt cross join unnest(jwt.apikey) as apikey cross join unnest(apikey.payload) as payload WHERE apikey.invalid is null and payload.issuer = 'supabase' and payload.algorithm = 'HS256' and payload.role in ('anon', 'service_role') GROUP BY payload.role, payload.signature_prefix\",",
    "repo_full_name": "supabase/supabase",
    "discussion_comments": [
      {
        "comment_id": "2102046073",
        "repo_full_name": "supabase/supabase",
        "pr_number": 35809,
        "pr_file": "apps/studio/components/ui/ProjectSettings/DisplayApiSettings.tsx",
        "discussion_id": "2102046073",
        "commented_code": "@@ -42,6 +44,34 @@ const DisplayApiSettings = ({\n   // api keys should not be empty. However it can be populated with a delay on project creation\n   const isApiKeysEmpty = apiKeys.length === 0\n \n+  const { isLoading: isLoadingLastUsed, logData: lastUsedLogData } = useLogsQuery(projectRef, {\n+    iso_timestamp_start: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n+    iso_timestamp_end: new Date().toISOString(),\n+    sql: \"SELECT unix_millis(max(timestamp)) as timestamp, payload.role, payload.signature_prefix FROM edge_logs cross join unnest(metadata) as m cross join unnest(m.request) as request cross join unnest(request.sb) as sb cross join unnest(sb.jwt) as jwt cross join unnest(jwt.apikey) as apikey cross join unnest(apikey.payload) as payload WHERE apikey.invalid is null and payload.issuer = 'supabase' and payload.algorithm = 'HS256' and payload.role in ('anon', 'service_role') GROUP BY payload.role, payload.signature_prefix\",",
        "comment_created_at": "2025-05-22T09:10:06+00:00",
        "comment_author": "jordienr",
        "comment_body": "as Ziinc mentioned:\r\n> add a comment to the query like -- last-used-api-keys or something similar",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2088374430",
    "pr_number": 35607,
    "pr_file": "apps/studio/components/interfaces/Database/Backups/RestoreToNewProject/AdditionalMonthlySpend.tsx",
    "created_at": "2025-05-14T08:28:50+00:00",
    "commented_code": "return (\n     <div className=\"text-sm text-foreground-lighter border-t p-5\">\n       <p>\n-        The new project will have the same compute size and disk size as this project. You will be\n-        able to update the compute size and disk size after the new project is created in{' '}\n+        The new project will start with the same compute size as your current project, but the disk\n+        size will be slightly larger (1.25×) to ensure the restore completes successfully. You will\n+        be able to update the compute size and disk size after the new project is created in{' '}",
    "repo_full_name": "supabase/supabase",
    "discussion_comments": [
      {
        "comment_id": "2088374430",
        "repo_full_name": "supabase/supabase",
        "pr_number": 35607,
        "pr_file": "apps/studio/components/interfaces/Database/Backups/RestoreToNewProject/AdditionalMonthlySpend.tsx",
        "discussion_id": "2088374430",
        "commented_code": "@@ -8,8 +8,9 @@ export const AdditionalMonthlySpend = ({\n   return (\n     <div className=\"text-sm text-foreground-lighter border-t p-5\">\n       <p>\n-        The new project will have the same compute size and disk size as this project. You will be\n-        able to update the compute size and disk size after the new project is created in{' '}\n+        The new project will start with the same compute size as your current project, but the disk\n+        size will be slightly larger (1.25×) to ensure the restore completes successfully. You will\n+        be able to update the compute size and disk size after the new project is created in{' '}",
        "comment_created_at": "2025-05-14T08:28:50+00:00",
        "comment_author": "jose-ledesma",
        "comment_body": "The disk size can only be expanded, not shrunk. I think this sentence may lead to confusion",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2081494933",
    "pr_number": 35580,
    "pr_file": "apps/studio/components/interfaces/Home/AdvisorWidget.tsx",
    "created_at": "2025-05-09T11:40:05+00:00",
    "commented_code": "+import { Activity, ExternalLink, Shield } from 'lucide-react'\n+import Link from 'next/link'\n+import { useMemo, useState } from 'react'\n+\n+import { useParams } from 'common'\n+import { LINTER_LEVELS } from 'components/interfaces/Linter/Linter.constants'\n+import { EntityTypeIcon, lintInfoMap } from 'components/interfaces/Linter/Linter.utils'\n+import { useQueryPerformanceQuery } from 'components/interfaces/Reports/Reports.queries'\n+import { ButtonTooltip } from 'components/ui/ButtonTooltip'\n+import { Lint, useProjectLintsQuery } from 'data/lint/lint-query'\n+import { useAiAssistantStateSnapshot } from 'state/ai-assistant-state'\n+import {\n+  AiIconAnimation,\n+  Button,\n+  Card,\n+  CardContent,\n+  CardHeader,\n+  CardTitle,\n+  Table,\n+  TableBody,\n+  TableCell,\n+  TableHead,\n+  TableHeader,\n+  TableRow,\n+  Tabs_Shadcn_ as Tabs,\n+  TabsContent_Shadcn_ as TabsContent,\n+  TabsList_Shadcn_ as TabsList,\n+  TabsTrigger_Shadcn_ as TabsTrigger,\n+} from 'ui'\n+import ShimmeringLoader from 'ui-patterns/ShimmeringLoader'\n+\n+interface SlowQuery {\n+  rolname: string\n+  avg_time: number\n+  calls: number\n+  query: string\n+}\n+\n+export const AdvisorWidget = () => {\n+  const { ref: projectRef } = useParams()\n+  const [selectedTab, setSelectedTab] = useState<'security' | 'performance'>('security')\n+  const { data: lints, isLoading: isLoadingLints } = useProjectLintsQuery({ projectRef })\n+  const { data: slowestQueriesData, isLoading: isLoadingSlowestQueries } = useQueryPerformanceQuery(\n+    {\n+      preset: 'slowestExecutionTime',\n+    }\n+  )\n+  const snap = useAiAssistantStateSnapshot()\n+\n+  const securityLints = useMemo(\n+    () => (lints ?? []).filter((lint: Lint) => lint.categories.includes('SECURITY')),\n+    [lints]\n+  )\n+  const performanceLints = useMemo(\n+    () => (lints ?? []).filter((lint: Lint) => lint.categories.includes('PERFORMANCE')),\n+    [lints]\n+  )\n+\n+  const securityErrorCount = securityLints.filter(\n+    (lint: Lint) => lint.level === LINTER_LEVELS.ERROR\n+  ).length\n+  const securityWarningCount = securityLints.filter(\n+    (lint: Lint) => lint.level === LINTER_LEVELS.WARN\n+  ).length\n+  const performanceErrorCount = performanceLints.filter(\n+    (lint: Lint) => lint.level === LINTER_LEVELS.ERROR\n+  ).length\n+  const performanceWarningCount = performanceLints.filter(\n+    (lint: Lint) => lint.level === LINTER_LEVELS.WARN\n+  ).length\n+\n+  const top5SlowestQueries = useMemo(\n+    () => ((slowestQueriesData ?? []) as SlowQuery[]).slice(0, 5),\n+    [slowestQueriesData]\n+  )\n+\n+  const totalIssues =\n+    securityErrorCount + securityWarningCount + performanceErrorCount + performanceWarningCount\n+  const hasErrors = securityErrorCount > 0 || performanceErrorCount > 0\n+  const hasWarnings = securityWarningCount > 0 || performanceWarningCount > 0\n+\n+  let titleContent: React.ReactNode\n+\n+  if (totalIssues === 0) {\n+    titleContent = <h2 className=\"text-xl\">No issues available</h2>\n+  } else {\n+    const issuesText = totalIssues === 1 ? 'issue' : 'issues'\n+    const numberDisplay = totalIssues.toString()\n+\n+    let attentionClassName = ''\n+    if (hasErrors) {\n+      attentionClassName = 'text-destructive'\n+    } else if (hasWarnings) {\n+      attentionClassName = 'text-warning'\n+    }\n+\n+    titleContent = (\n+      <h2 className=\"text-xl\">\n+        {numberDisplay} {issuesText} need\n+        {totalIssues === 1 ? 's' : ''} <span className={attentionClassName}>attention</span>\n+      </h2>\n+    )\n+  }\n+\n+  const renderLintTabContent = (\n+    title: string,\n+    lints: Lint[],\n+    errorCount: number,\n+    warningCount: number,\n+    isLoading: boolean\n+  ) => {\n+    const topIssues = lints\n+      .filter((lint) => lint.level === LINTER_LEVELS.ERROR || lint.level === LINTER_LEVELS.WARN)\n+      .sort((a, b) => (a.level === LINTER_LEVELS.ERROR ? -1 : 1))\n+      .slice(0, 5)\n+\n+    return (\n+      <div className=\"h-full\">\n+        {isLoading && (\n+          <div className=\"flex flex-col p-4 gap-2\">\n+            <ShimmeringLoader />\n+            <ShimmeringLoader className=\"w-3/4\" />\n+            <ShimmeringLoader className=\"w-1/2\" />\n+          </div>\n+        )}\n+        {!isLoading && (errorCount > 0 || warningCount > 0) && (\n+          <ul>\n+            {topIssues.map((lint) => (\n+              <li\n+                key={lint.cache_key}\n+                className=\"text-sm px-4 py-3 w-full border-b my-0 last:border-b-0 group\"\n+              >\n+                <div className=\"flex items-center justify-between w-full\">\n+                  <Link\n+                    href={`/project/${projectRef}/advisors/${title.toLowerCase()}?id=${lint.cache_key}`}\n+                    className=\"flex items-center gap-2 text-foreground-light hover:text-foreground transition truncate flex-1 min-w-0\"\n+                  >\n+                    <EntityTypeIcon type={lint.metadata?.type} />\n+                    <div className=\"flex-1 truncate min-w-0\">\n+                      {lint.detail ? lint.detail : lint.title}\n+                    </div>\n+                  </Link>\n+                  <Button",
    "repo_full_name": "supabase/supabase",
    "discussion_comments": [
      {
        "comment_id": "2081494933",
        "repo_full_name": "supabase/supabase",
        "pr_number": 35580,
        "pr_file": "apps/studio/components/interfaces/Home/AdvisorWidget.tsx",
        "discussion_id": "2081494933",
        "commented_code": "@@ -0,0 +1,328 @@\n+import { Activity, ExternalLink, Shield } from 'lucide-react'\n+import Link from 'next/link'\n+import { useMemo, useState } from 'react'\n+\n+import { useParams } from 'common'\n+import { LINTER_LEVELS } from 'components/interfaces/Linter/Linter.constants'\n+import { EntityTypeIcon, lintInfoMap } from 'components/interfaces/Linter/Linter.utils'\n+import { useQueryPerformanceQuery } from 'components/interfaces/Reports/Reports.queries'\n+import { ButtonTooltip } from 'components/ui/ButtonTooltip'\n+import { Lint, useProjectLintsQuery } from 'data/lint/lint-query'\n+import { useAiAssistantStateSnapshot } from 'state/ai-assistant-state'\n+import {\n+  AiIconAnimation,\n+  Button,\n+  Card,\n+  CardContent,\n+  CardHeader,\n+  CardTitle,\n+  Table,\n+  TableBody,\n+  TableCell,\n+  TableHead,\n+  TableHeader,\n+  TableRow,\n+  Tabs_Shadcn_ as Tabs,\n+  TabsContent_Shadcn_ as TabsContent,\n+  TabsList_Shadcn_ as TabsList,\n+  TabsTrigger_Shadcn_ as TabsTrigger,\n+} from 'ui'\n+import ShimmeringLoader from 'ui-patterns/ShimmeringLoader'\n+\n+interface SlowQuery {\n+  rolname: string\n+  avg_time: number\n+  calls: number\n+  query: string\n+}\n+\n+export const AdvisorWidget = () => {\n+  const { ref: projectRef } = useParams()\n+  const [selectedTab, setSelectedTab] = useState<'security' | 'performance'>('security')\n+  const { data: lints, isLoading: isLoadingLints } = useProjectLintsQuery({ projectRef })\n+  const { data: slowestQueriesData, isLoading: isLoadingSlowestQueries } = useQueryPerformanceQuery(\n+    {\n+      preset: 'slowestExecutionTime',\n+    }\n+  )\n+  const snap = useAiAssistantStateSnapshot()\n+\n+  const securityLints = useMemo(\n+    () => (lints ?? []).filter((lint: Lint) => lint.categories.includes('SECURITY')),\n+    [lints]\n+  )\n+  const performanceLints = useMemo(\n+    () => (lints ?? []).filter((lint: Lint) => lint.categories.includes('PERFORMANCE')),\n+    [lints]\n+  )\n+\n+  const securityErrorCount = securityLints.filter(\n+    (lint: Lint) => lint.level === LINTER_LEVELS.ERROR\n+  ).length\n+  const securityWarningCount = securityLints.filter(\n+    (lint: Lint) => lint.level === LINTER_LEVELS.WARN\n+  ).length\n+  const performanceErrorCount = performanceLints.filter(\n+    (lint: Lint) => lint.level === LINTER_LEVELS.ERROR\n+  ).length\n+  const performanceWarningCount = performanceLints.filter(\n+    (lint: Lint) => lint.level === LINTER_LEVELS.WARN\n+  ).length\n+\n+  const top5SlowestQueries = useMemo(\n+    () => ((slowestQueriesData ?? []) as SlowQuery[]).slice(0, 5),\n+    [slowestQueriesData]\n+  )\n+\n+  const totalIssues =\n+    securityErrorCount + securityWarningCount + performanceErrorCount + performanceWarningCount\n+  const hasErrors = securityErrorCount > 0 || performanceErrorCount > 0\n+  const hasWarnings = securityWarningCount > 0 || performanceWarningCount > 0\n+\n+  let titleContent: React.ReactNode\n+\n+  if (totalIssues === 0) {\n+    titleContent = <h2 className=\"text-xl\">No issues available</h2>\n+  } else {\n+    const issuesText = totalIssues === 1 ? 'issue' : 'issues'\n+    const numberDisplay = totalIssues.toString()\n+\n+    let attentionClassName = ''\n+    if (hasErrors) {\n+      attentionClassName = 'text-destructive'\n+    } else if (hasWarnings) {\n+      attentionClassName = 'text-warning'\n+    }\n+\n+    titleContent = (\n+      <h2 className=\"text-xl\">\n+        {numberDisplay} {issuesText} need\n+        {totalIssues === 1 ? 's' : ''} <span className={attentionClassName}>attention</span>\n+      </h2>\n+    )\n+  }\n+\n+  const renderLintTabContent = (\n+    title: string,\n+    lints: Lint[],\n+    errorCount: number,\n+    warningCount: number,\n+    isLoading: boolean\n+  ) => {\n+    const topIssues = lints\n+      .filter((lint) => lint.level === LINTER_LEVELS.ERROR || lint.level === LINTER_LEVELS.WARN)\n+      .sort((a, b) => (a.level === LINTER_LEVELS.ERROR ? -1 : 1))\n+      .slice(0, 5)\n+\n+    return (\n+      <div className=\"h-full\">\n+        {isLoading && (\n+          <div className=\"flex flex-col p-4 gap-2\">\n+            <ShimmeringLoader />\n+            <ShimmeringLoader className=\"w-3/4\" />\n+            <ShimmeringLoader className=\"w-1/2\" />\n+          </div>\n+        )}\n+        {!isLoading && (errorCount > 0 || warningCount > 0) && (\n+          <ul>\n+            {topIssues.map((lint) => (\n+              <li\n+                key={lint.cache_key}\n+                className=\"text-sm px-4 py-3 w-full border-b my-0 last:border-b-0 group\"\n+              >\n+                <div className=\"flex items-center justify-between w-full\">\n+                  <Link\n+                    href={`/project/${projectRef}/advisors/${title.toLowerCase()}?id=${lint.cache_key}`}\n+                    className=\"flex items-center gap-2 text-foreground-light hover:text-foreground transition truncate flex-1 min-w-0\"\n+                  >\n+                    <EntityTypeIcon type={lint.metadata?.type} />\n+                    <div className=\"flex-1 truncate min-w-0\">\n+                      {lint.detail ? lint.detail : lint.title}\n+                    </div>\n+                  </Link>\n+                  <Button",
        "comment_created_at": "2025-05-09T11:40:05+00:00",
        "comment_author": "joshenlim",
        "comment_body": "might be helpful to add a tooltip on what this button does , e.g \"Ask the Assistant about this issue\"",
        "pr_file_module": null
      }
    ]
  }
]