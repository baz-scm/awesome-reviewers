[
  {
    "discussion_id": "2210771013",
    "pr_number": 37210,
    "pr_file": "apps/studio/data/custom-domains/check-cname-mutation.ts",
    "created_at": "2025-07-16T15:27:23+00:00",
    "commented_code": "// [Joshen] Should tally with https://github.com/supabase/cli/blob/63790a1bd43bee06f82c4f510e709925526a4daa/internal/utils/api.go#L98\n export async function checkCNAMERecord({ domain }: CheckCNAMERecordVariables) {\n-  const res = await fetchHandler(`https://one.one.one.one/dns-query?name=${domain}&type=CNAME`, {\n-    method: 'GET',\n-    headers: { accept: 'application/dns-json' },\n-  })\n-  const verification = (await res.json()) as CheckCNAMERecordResponse\n+  try {\n+    const headers = await constructHeaders({ 'Content-Type': 'application/json' })\n+    const res: CheckCNAMERecordResponse = await fetchHandler(`${BASE_PATH}/api/check-cname`, {\n+      headers,\n+      method: 'POST',",
    "repo_full_name": "supabase/supabase",
    "discussion_comments": [
      {
        "comment_id": "2210771013",
        "repo_full_name": "supabase/supabase",
        "pr_number": 37210,
        "pr_file": "apps/studio/data/custom-domains/check-cname-mutation.ts",
        "discussion_id": "2210771013",
        "commented_code": "@@ -22,19 +23,24 @@ export type CheckCNAMERecordResponse = {\n \n // [Joshen] Should tally with https://github.com/supabase/cli/blob/63790a1bd43bee06f82c4f510e709925526a4daa/internal/utils/api.go#L98\n export async function checkCNAMERecord({ domain }: CheckCNAMERecordVariables) {\n-  const res = await fetchHandler(`https://one.one.one.one/dns-query?name=${domain}&type=CNAME`, {\n-    method: 'GET',\n-    headers: { accept: 'application/dns-json' },\n-  })\n-  const verification = (await res.json()) as CheckCNAMERecordResponse\n+  try {\n+    const headers = await constructHeaders({ 'Content-Type': 'application/json' })\n+    const res: CheckCNAMERecordResponse = await fetchHandler(`${BASE_PATH}/api/check-cname`, {\n+      headers,\n+      method: 'POST',",
        "comment_created_at": "2025-07-16T15:27:23+00:00",
        "comment_author": "kangmingtay",
        "comment_body": "nit: since the underlying endpoint is just a `GET` request, maybe it's worth making this a `GET` and sending the domain as a query param?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2196816309",
    "pr_number": 36762,
    "pr_file": "apps/studio/pages/api/platform/projects/[ref]/analytics/endpoints/[name].ts",
    "created_at": "2025-07-10T07:13:56+00:00",
    "commented_code": "}\n \n     default:\n-      res.setHeader('Allow', ['GET'])\n+      res.setHeader('Allow', ['GET', 'POST'])\n       res.status(405).json({ data: null, error: { message: `Method ${method} Not Allowed` } })\n   }\n }\n \n const proxyRequest = async (req: NextApiRequest) => {\n   const { name, ...toForward } = req.query\n-  const payload = { ...toForward, project_tier: 'ENTERPRISE' }\n-  const search = '?' + new URLSearchParams(payload as any).toString()\n+  const project_tier = 'ENTERPRISE'\n+\n+  if (req.method === 'GET') {\n+    const payload = { ...toForward, project_tier }\n+    return retrieveAnalyticsData(name as string, payload)\n+  } else if (req.method === 'POST') {\n+    const payload = { ...req.body, project_tier }\n+    return retrieveAnalyticsData(name as string, payload)\n+  }\n+}",
    "repo_full_name": "supabase/supabase",
    "discussion_comments": [
      {
        "comment_id": "2196816309",
        "repo_full_name": "supabase/supabase",
        "pr_number": 36762,
        "pr_file": "apps/studio/pages/api/platform/projects/[ref]/analytics/endpoints/[name].ts",
        "discussion_id": "2196816309",
        "commented_code": "@@ -23,15 +24,26 @@ async function handler(req: NextApiRequest, res: NextApiResponse) {\n       }\n \n     default:\n-      res.setHeader('Allow', ['GET'])\n+      res.setHeader('Allow', ['GET', 'POST'])\n       res.status(405).json({ data: null, error: { message: `Method ${method} Not Allowed` } })\n   }\n }\n \n const proxyRequest = async (req: NextApiRequest) => {\n   const { name, ...toForward } = req.query\n-  const payload = { ...toForward, project_tier: 'ENTERPRISE' }\n-  const search = '?' + new URLSearchParams(payload as any).toString()\n+  const project_tier = 'ENTERPRISE'\n+\n+  if (req.method === 'GET') {\n+    const payload = { ...toForward, project_tier }\n+    return retrieveAnalyticsData(name as string, payload)\n+  } else if (req.method === 'POST') {\n+    const payload = { ...req.body, project_tier }\n+    return retrieveAnalyticsData(name as string, payload)\n+  }\n+}",
        "comment_created_at": "2025-07-10T07:13:56+00:00",
        "comment_author": "MildTomato",
        "comment_body": "huh",
        "pr_file_module": null
      },
      {
        "comment_id": "2197065573",
        "repo_full_name": "supabase/supabase",
        "pr_number": 36762,
        "pr_file": "apps/studio/pages/api/platform/projects/[ref]/analytics/endpoints/[name].ts",
        "discussion_id": "2196816309",
        "commented_code": "@@ -23,15 +24,26 @@ async function handler(req: NextApiRequest, res: NextApiResponse) {\n       }\n \n     default:\n-      res.setHeader('Allow', ['GET'])\n+      res.setHeader('Allow', ['GET', 'POST'])\n       res.status(405).json({ data: null, error: { message: `Method ${method} Not Allowed` } })\n   }\n }\n \n const proxyRequest = async (req: NextApiRequest) => {\n   const { name, ...toForward } = req.query\n-  const payload = { ...toForward, project_tier: 'ENTERPRISE' }\n-  const search = '?' + new URLSearchParams(payload as any).toString()\n+  const project_tier = 'ENTERPRISE'\n+\n+  if (req.method === 'GET') {\n+    const payload = { ...toForward, project_tier }\n+    return retrieveAnalyticsData(name as string, payload)\n+  } else if (req.method === 'POST') {\n+    const payload = { ...req.body, project_tier }\n+    return retrieveAnalyticsData(name as string, payload)\n+  }\n+}",
        "comment_created_at": "2025-07-10T09:04:43+00:00",
        "comment_author": "joshenlim",
        "comment_body": "This is similar to how we did the logs.all endpoint in the API where we supported both GET and POST endpoints - in which we're just parsing the variables into a payload to retrieve the data from analytics",
        "pr_file_module": null
      }
    ]
  }
]