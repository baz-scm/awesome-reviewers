[
  {
    "discussion_id": "2164978837",
    "pr_number": 16232,
    "pr_file": "packages/svelte/src/compiler/phases/2-analyze/index.js",
    "created_at": "2025-06-24T21:49:33+00:00",
    "commented_code": "template,\n \t\telements: [],\n \t\trunes,\n+\t\t// if we are not in runes mode but we have no reserved references ($$props, $$restProps)\n+\t\t// and no `export let` we might be in a wannabe runes component that is using runes in an external\n+\t\t// module...we need to fallback to the runic behavior\n+\t\tmaybe_runes:",
    "repo_full_name": "sveltejs/svelte",
    "discussion_comments": [
      {
        "comment_id": "2164978837",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 16232,
        "pr_file": "packages/svelte/src/compiler/phases/2-analyze/index.js",
        "discussion_id": "2164978837",
        "commented_code": "@@ -431,6 +431,26 @@ export function analyze_component(root, source, options) {\n \t\ttemplate,\n \t\telements: [],\n \t\trunes,\n+\t\t// if we are not in runes mode but we have no reserved references ($$props, $$restProps)\n+\t\t// and no `export let` we might be in a wannabe runes component that is using runes in an external\n+\t\t// module...we need to fallback to the runic behavior\n+\t\tmaybe_runes:",
        "comment_created_at": "2025-06-24T21:49:33+00:00",
        "comment_author": "dummdidumm",
        "comment_body": "you should also check for `$:` statements",
        "pr_file_module": null
      },
      {
        "comment_id": "2164986167",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 16232,
        "pr_file": "packages/svelte/src/compiler/phases/2-analyze/index.js",
        "discussion_id": "2164978837",
        "commented_code": "@@ -431,6 +431,26 @@ export function analyze_component(root, source, options) {\n \t\ttemplate,\n \t\telements: [],\n \t\trunes,\n+\t\t// if we are not in runes mode but we have no reserved references ($$props, $$restProps)\n+\t\t// and no `export let` we might be in a wannabe runes component that is using runes in an external\n+\t\t// module...we need to fallback to the runic behavior\n+\t\tmaybe_runes:",
        "comment_created_at": "2025-06-24T21:53:56+00:00",
        "comment_author": "paoloricciuti",
        "comment_body": "Uh right...I assumed it was explicit but it's just JavaScript...let me add it",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2164981766",
    "pr_number": 16232,
    "pr_file": "packages/svelte/src/compiler/phases/3-transform/client/visitors/shared/utils.js",
    "created_at": "2025-06-24T21:51:12+00:00",
    "commented_code": "export function build_expression(context, expression, metadata, state = context.state) {\n \tconst value = /** @type {Expression} */ (context.visit(expression, state));\n \n-\tif (context.state.analysis.runes) {\n+\tif (context.state.analysis.runes || context.state.analysis.maybe_runes) {",
    "repo_full_name": "sveltejs/svelte",
    "discussion_comments": [
      {
        "comment_id": "2164981766",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 16232,
        "pr_file": "packages/svelte/src/compiler/phases/3-transform/client/visitors/shared/utils.js",
        "discussion_id": "2164981766",
        "commented_code": "@@ -370,7 +370,7 @@ export function validate_mutation(node, context, expression) {\n export function build_expression(context, expression, metadata, state = context.state) {\n \tconst value = /** @type {Expression} */ (context.visit(expression, state));\n \n-\tif (context.state.analysis.runes) {\n+\tif (context.state.analysis.runes || context.state.analysis.maybe_runes) {",
        "comment_created_at": "2025-06-24T21:51:12+00:00",
        "comment_author": "dummdidumm",
        "comment_body": "```suggestion\r\n\t// Components not explicitly in legacy mode might be expected to be in runes mode (especially since we didn't\r\n\t// adjust this behavior until recently, which broke people's existing components), so we also bail in this case.\r\n\t// Kind of an in-between-mode.\r\n\tif (context.state.analysis.runes || context.state.analysis.maybe_runes) {\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1817266968",
    "pr_number": 13929,
    "pr_file": "packages/svelte/src/compiler/migrate/index.js",
    "created_at": "2024-10-25T19:52:37+00:00",
    "commented_code": "derived_components: new Map(),\n \t\t\tderived_labeled_statements: new Set(),\n \t\t\thas_svelte_self: false,\n-\t\t\tuses_ts: !!parsed.instance?.attributes.some(\n-\t\t\t\t(attr) => attr.name === 'lang' && /** @type {any} */ (attr).value[0].data === 'ts'\n-\t\t\t)\n+\t\t\tuses_ts:\n+\t\t\t\t// Some people could use jsdoc but have a tsconfig.json, so double-check file for jsdoc indicators\n+\t\t\t\t(use_ts && !source.includes('@type {')) ||",
    "repo_full_name": "sveltejs/svelte",
    "discussion_comments": [
      {
        "comment_id": "1817266968",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 13929,
        "pr_file": "packages/svelte/src/compiler/migrate/index.js",
        "discussion_id": "1817266968",
        "commented_code": "@@ -115,9 +115,12 @@ export function migrate(source, { filename } = {}) {\n \t\t\tderived_components: new Map(),\n \t\t\tderived_labeled_statements: new Set(),\n \t\t\thas_svelte_self: false,\n-\t\t\tuses_ts: !!parsed.instance?.attributes.some(\n-\t\t\t\t(attr) => attr.name === 'lang' && /** @type {any} */ (attr).value[0].data === 'ts'\n-\t\t\t)\n+\t\t\tuses_ts:\n+\t\t\t\t// Some people could use jsdoc but have a tsconfig.json, so double-check file for jsdoc indicators\n+\t\t\t\t(use_ts && !source.includes('@type {')) ||",
        "comment_created_at": "2024-10-25T19:52:37+00:00",
        "comment_author": "trueadm",
        "comment_body": "I think this needs to be more thorough using a regex. It won't pass if you had:\r\n\r\n```js\r\n/**\r\n * @template T\r\n * @param {T} thing\r\n * @returns {T}\r\n */\r\n ```\r\n \r\n For example",
        "pr_file_module": null
      },
      {
        "comment_id": "1817343445",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 13929,
        "pr_file": "packages/svelte/src/compiler/migrate/index.js",
        "discussion_id": "1817266968",
        "commented_code": "@@ -115,9 +115,12 @@ export function migrate(source, { filename } = {}) {\n \t\t\tderived_components: new Map(),\n \t\t\tderived_labeled_statements: new Set(),\n \t\t\thas_svelte_self: false,\n-\t\t\tuses_ts: !!parsed.instance?.attributes.some(\n-\t\t\t\t(attr) => attr.name === 'lang' && /** @type {any} */ (attr).value[0].data === 'ts'\n-\t\t\t)\n+\t\t\tuses_ts:\n+\t\t\t\t// Some people could use jsdoc but have a tsconfig.json, so double-check file for jsdoc indicators\n+\t\t\t\t(use_ts && !source.includes('@type {')) ||",
        "comment_created_at": "2024-10-25T20:55:59+00:00",
        "comment_author": "dummdidumm",
        "comment_body": "The problem with these is that I have seen these appear above typescript functions in the wild. `@type` on the other hand is a pretty strong indicator ",
        "pr_file_module": null
      },
      {
        "comment_id": "1817367076",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 13929,
        "pr_file": "packages/svelte/src/compiler/migrate/index.js",
        "discussion_id": "1817266968",
        "commented_code": "@@ -115,9 +115,12 @@ export function migrate(source, { filename } = {}) {\n \t\t\tderived_components: new Map(),\n \t\t\tderived_labeled_statements: new Set(),\n \t\t\thas_svelte_self: false,\n-\t\t\tuses_ts: !!parsed.instance?.attributes.some(\n-\t\t\t\t(attr) => attr.name === 'lang' && /** @type {any} */ (attr).value[0].data === 'ts'\n-\t\t\t)\n+\t\t\tuses_ts:\n+\t\t\t\t// Some people could use jsdoc but have a tsconfig.json, so double-check file for jsdoc indicators\n+\t\t\t\t(use_ts && !source.includes('@type {')) ||",
        "comment_created_at": "2024-10-25T21:04:25+00:00",
        "comment_author": "trueadm",
        "comment_body": "Makes sense. However, if someone specifies `use_ts` to be `true` or `false`, shouldn't that precedence over a check?",
        "pr_file_module": null
      },
      {
        "comment_id": "1817706663",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 13929,
        "pr_file": "packages/svelte/src/compiler/migrate/index.js",
        "discussion_id": "1817266968",
        "commented_code": "@@ -115,9 +115,12 @@ export function migrate(source, { filename } = {}) {\n \t\t\tderived_components: new Map(),\n \t\t\tderived_labeled_statements: new Set(),\n \t\t\thas_svelte_self: false,\n-\t\t\tuses_ts: !!parsed.instance?.attributes.some(\n-\t\t\t\t(attr) => attr.name === 'lang' && /** @type {any} */ (attr).value[0].data === 'ts'\n-\t\t\t)\n+\t\t\tuses_ts:\n+\t\t\t\t// Some people could use jsdoc but have a tsconfig.json, so double-check file for jsdoc indicators\n+\t\t\t\t(use_ts && !source.includes('@type {')) ||",
        "comment_created_at": "2024-10-26T07:24:43+00:00",
        "comment_author": "paoloricciuti",
        "comment_body": "If they use JSDoc wouldn't they omit the lang=\"TS\"?",
        "pr_file_module": null
      },
      {
        "comment_id": "1818742417",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 13929,
        "pr_file": "packages/svelte/src/compiler/migrate/index.js",
        "discussion_id": "1817266968",
        "commented_code": "@@ -115,9 +115,12 @@ export function migrate(source, { filename } = {}) {\n \t\t\tderived_components: new Map(),\n \t\t\tderived_labeled_statements: new Set(),\n \t\t\thas_svelte_self: false,\n-\t\t\tuses_ts: !!parsed.instance?.attributes.some(\n-\t\t\t\t(attr) => attr.name === 'lang' && /** @type {any} */ (attr).value[0].data === 'ts'\n-\t\t\t)\n+\t\t\tuses_ts:\n+\t\t\t\t// Some people could use jsdoc but have a tsconfig.json, so double-check file for jsdoc indicators\n+\t\t\t\t(use_ts && !source.includes('@type {')) ||",
        "comment_created_at": "2024-10-28T09:54:55+00:00",
        "comment_author": "dummdidumm",
        "comment_body": "> If they use JSDoc wouldn't they omit the lang=\"TS\"?\r\n\r\nYes, which is why there's the outer `||` in which case we see \"this is definitely TS because the lang tag is set\". This is only about the ambiguity of people using JSDoc but having a `tsconfig.json`\r\n\r\n> Makes sense. However, if someone specifies use_ts to be true or false, shouldn't that precedence over a check?\r\n\r\nIt will be set to `true` or `false` by `svelte-migrate` in https://github.com/sveltejs/kit/pull/12881 based on the presence (or absence) of tsconfig.json, which as pointed out above does not necessarily mean you're using TS, so the check is still needed",
        "pr_file_module": null
      }
    ]
  }
]