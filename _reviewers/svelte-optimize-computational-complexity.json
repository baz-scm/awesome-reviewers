[
  {
    "discussion_id": "796700105",
    "pr_number": 7207,
    "pr_file": "src/runtime/animate/index.ts",
    "created_at": "2022-02-01T15:16:21+00:00",
    "commented_code": "const transform = style.transform === 'none' ? '' : style.transform;\n \n \tconst [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n-\tconst dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n-\tconst dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n+\tconst scale = {\n+\t\tx: to.width / node.clientWidth,\n+\t\ty: to.height / node.clientHeight\n+\t};\n+\tconst dx = ((from.left / scale.x) + (from.width / scale.x) * ox / (to.width / scale.x)) - ((to.left / scale.x) + ox);\n+\tconst dy = ((from.top / scale.y) + (from.height / scale.y) * oy / (to.height / scale.y)) - ((to.top / scale.y) + oy);",
    "repo_full_name": "sveltejs/svelte",
    "discussion_comments": [
      {
        "comment_id": "796700105",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 7207,
        "pr_file": "src/runtime/animate/index.ts",
        "discussion_id": "796700105",
        "commented_code": "@@ -21,8 +21,12 @@ export function flip(node: Element, { from, to }: { from: DOMRect; to: DOMRect }\n \tconst transform = style.transform === 'none' ? '' : style.transform;\n \n \tconst [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n-\tconst dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n-\tconst dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n+\tconst scale = {\n+\t\tx: to.width / node.clientWidth,\n+\t\ty: to.height / node.clientHeight\n+\t};\n+\tconst dx = ((from.left / scale.x) + (from.width / scale.x) * ox / (to.width / scale.x)) - ((to.left / scale.x) + ox);\n+\tconst dy = ((from.top / scale.y) + (from.height / scale.y) * oy / (to.height / scale.y)) - ((to.top / scale.y) + oy);",
        "comment_created_at": "2022-02-01T15:16:21+00:00",
        "comment_author": "Conduitry",
        "comment_body": "```suggestion\r\n\tconst dx = ((from.left - to.left) * node.clientWidth + from.width * ox) / to.width - ox;\r\n\tconst dy = ((from.top - to.top) * node.clientHeight + from.height * oy) / to.height - oy;\r\n```\r\n\r\nHow about something like this? Should be equivalent, and less than half as many multiplications/divisions.",
        "pr_file_module": null
      },
      {
        "comment_id": "799149683",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 7207,
        "pr_file": "src/runtime/animate/index.ts",
        "discussion_id": "796700105",
        "commented_code": "@@ -21,8 +21,12 @@ export function flip(node: Element, { from, to }: { from: DOMRect; to: DOMRect }\n \tconst transform = style.transform === 'none' ? '' : style.transform;\n \n \tconst [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n-\tconst dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n-\tconst dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n+\tconst scale = {\n+\t\tx: to.width / node.clientWidth,\n+\t\ty: to.height / node.clientHeight\n+\t};\n+\tconst dx = ((from.left / scale.x) + (from.width / scale.x) * ox / (to.width / scale.x)) - ((to.left / scale.x) + ox);\n+\tconst dy = ((from.top / scale.y) + (from.height / scale.y) * oy / (to.height / scale.y)) - ((to.top / scale.y) + oy);",
        "comment_created_at": "2022-02-04T04:14:29+00:00",
        "comment_author": "simeydotme",
        "comment_body": "oh, nice @Conduitry !\r\nI've added your revision to the REPL for test; https://svelte.dev/repl/ab91bfc09cf845d5aceaf42b092a7e3d?version=3.46.3 ... looks good.\r\n\r\n\u2753 Should I click \"commit suggestion\" ?\r\n\r\n---\r\n\r\nOne gripe I have (which is just personal) is that these calcs feel really obtuse as a reader without context. That goes for the original code and fixes, too. Some of it is soft of self-documenting (`from.left`, `to.width`, etc) but the `node.clientWidth` and `ox` parts do not feel clear on their purpose, or value. Which is partly why I began by using a `scale` object to sort-of explain the purpose of that calc _(as it's really -- and evidently due to being missed by Rich -- not obvious that this is important)_.\r\n\r\nAny thoughts on the above paragraph?",
        "pr_file_module": null
      },
      {
        "comment_id": "799151015",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 7207,
        "pr_file": "src/runtime/animate/index.ts",
        "discussion_id": "796700105",
        "commented_code": "@@ -21,8 +21,12 @@ export function flip(node: Element, { from, to }: { from: DOMRect; to: DOMRect }\n \tconst transform = style.transform === 'none' ? '' : style.transform;\n \n \tconst [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n-\tconst dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n-\tconst dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n+\tconst scale = {\n+\t\tx: to.width / node.clientWidth,\n+\t\ty: to.height / node.clientHeight\n+\t};\n+\tconst dx = ((from.left / scale.x) + (from.width / scale.x) * ox / (to.width / scale.x)) - ((to.left / scale.x) + ox);\n+\tconst dy = ((from.top / scale.y) + (from.height / scale.y) * oy / (to.height / scale.y)) - ((to.top / scale.y) + oy);",
        "comment_created_at": "2022-02-04T04:19:57+00:00",
        "comment_author": "simeydotme",
        "comment_body": "although I just remembered ... this is runtime code, not compiled, so efficiency is paramount, never mind :P ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "497624349",
    "pr_number": 4296,
    "pr_file": "src/runtime/slot/index.ts",
    "created_at": "2020-09-30T15:59:05+00:00",
    "commented_code": "+import { noop, insert, detach } from 'svelte/internal';\n+\n+function create_root_slot_fn(elements) {\n+\treturn function create_root_slot() {\n+\t\treturn {\n+\t\t\tc: noop,\n+\n+\t\t\tm: function mount(target, anchor) {\n+\t\t\t\telements.forEach(element => {\n+\t\t\t\t\tinsert(target, element, anchor);\n+\t\t\t\t});\n+\t\t\t},\n+\n+\t\t\td: function destroy(detaching) {\n+\t\t\t\tif (detaching) {\n+\t\t\t\t\telements.forEach(element => detach(element));\n+\t\t\t\t}\n+\t\t\t},\n+\n+\t\t\tl: noop,\n+\t\t};\n+\t};\n+}\n+\n+export function createSlot(slots) {\n+\tconst root_slots = {};\n+\tfor (const slot_name in slots) {\n+\t\tlet elements = slots[slot_name];\n+\t\tif (!Array.isArray(elements)) {\n+\t\t\telements = [elements];\n+\t\t}\n+\t\troot_slots[slot_name] = [create_root_slot_fn(elements)];\n+\t}\n+\treturn root_slots;\n+}",
    "repo_full_name": "sveltejs/svelte",
    "discussion_comments": [
      {
        "comment_id": "497624349",
        "repo_full_name": "sveltejs/svelte",
        "pr_number": 4296,
        "pr_file": "src/runtime/slot/index.ts",
        "discussion_id": "497624349",
        "commented_code": "@@ -0,0 +1,35 @@\n+import { noop, insert, detach } from 'svelte/internal';\n+\n+function create_root_slot_fn(elements) {\n+\treturn function create_root_slot() {\n+\t\treturn {\n+\t\t\tc: noop,\n+\n+\t\t\tm: function mount(target, anchor) {\n+\t\t\t\telements.forEach(element => {\n+\t\t\t\t\tinsert(target, element, anchor);\n+\t\t\t\t});\n+\t\t\t},\n+\n+\t\t\td: function destroy(detaching) {\n+\t\t\t\tif (detaching) {\n+\t\t\t\t\telements.forEach(element => detach(element));\n+\t\t\t\t}\n+\t\t\t},\n+\n+\t\t\tl: noop,\n+\t\t};\n+\t};\n+}\n+\n+export function createSlot(slots) {\n+\tconst root_slots = {};\n+\tfor (const slot_name in slots) {\n+\t\tlet elements = slots[slot_name];\n+\t\tif (!Array.isArray(elements)) {\n+\t\t\telements = [elements];\n+\t\t}\n+\t\troot_slots[slot_name] = [create_root_slot_fn(elements)];\n+\t}\n+\treturn root_slots;\n+}",
        "comment_created_at": "2020-09-30T15:59:05+00:00",
        "comment_author": "lukeed",
        "comment_body": "```suggestion\r\nexport function createSlot(input) {\r\n\tvar key, tmp, slots={};\r\n\tfor (key in input) {\r\n\t\ttmp = input[key];\r\n\t\tslots[key] = [create_root_slot_fn(Array.isArray(tmp) ? tmp : [tmp])];\r\n\t}\r\n\treturn slots;\r\n}\r\n```",
        "pr_file_module": null
      }
    ]
  }
]