[
  {
    "discussion_id": "1572202381",
    "pr_number": 247,
    "pr_file": "sweagent/agent/models.py",
    "created_at": "2024-04-19T11:02:46+00:00",
    "commented_code": "Reference: https://docs.anthropic.com/claude/reference/complete_post\n         \"\"\"\n         # Preserve behavior for older models\n-        if self.api_model in [\"claude-instant\", \"claude-2\"]:\n+        if self.api_model in [\"claude-instant\", \"claude-2\", \"claude-2.1\"]:",
    "repo_full_name": "SWE-agent/SWE-agent",
    "discussion_comments": [
      {
        "comment_id": "1572202381",
        "repo_full_name": "SWE-agent/SWE-agent",
        "pr_number": 247,
        "pr_file": "sweagent/agent/models.py",
        "discussion_id": "1572202381",
        "commented_code": "@@ -326,7 +327,7 @@ def history_to_messages(\n         Reference: https://docs.anthropic.com/claude/reference/complete_post\n         \"\"\"\n         # Preserve behavior for older models\n-        if self.api_model in [\"claude-instant\", \"claude-2\"]:\n+        if self.api_model in [\"claude-instant\", \"claude-2\", \"claude-2.1\"]:",
        "comment_created_at": "2024-04-19T11:02:46+00:00",
        "comment_author": "mikanfactory",
        "comment_body": "This may be Bug. If not specified here, it will call the API of the Claude3 family.",
        "pr_file_module": null
      },
      {
        "comment_id": "1572476122",
        "repo_full_name": "SWE-agent/SWE-agent",
        "pr_number": 247,
        "pr_file": "sweagent/agent/models.py",
        "discussion_id": "1572202381",
        "commented_code": "@@ -326,7 +327,7 @@ def history_to_messages(\n         Reference: https://docs.anthropic.com/claude/reference/complete_post\n         \"\"\"\n         # Preserve behavior for older models\n-        if self.api_model in [\"claude-instant\", \"claude-2\"]:\n+        if self.api_model in [\"claude-instant\", \"claude-2\", \"claude-2.1\"]:",
        "comment_created_at": "2024-04-19T14:37:14+00:00",
        "comment_author": "klieret",
        "comment_body": "Agreed! Let me push a fix to main already, just so this doesn't cause any issue! Thank you!",
        "pr_file_module": null
      },
      {
        "comment_id": "1572667625",
        "repo_full_name": "SWE-agent/SWE-agent",
        "pr_number": 247,
        "pr_file": "sweagent/agent/models.py",
        "discussion_id": "1572202381",
        "commented_code": "@@ -326,7 +327,7 @@ def history_to_messages(\n         Reference: https://docs.anthropic.com/claude/reference/complete_post\n         \"\"\"\n         # Preserve behavior for older models\n-        if self.api_model in [\"claude-instant\", \"claude-2\"]:\n+        if self.api_model in [\"claude-instant\", \"claude-2\", \"claude-2.1\"]:",
        "comment_created_at": "2024-04-19T17:00:27+00:00",
        "comment_author": "klieret",
        "comment_body": "Oh, let me actually push a fix to this right now then!",
        "pr_file_module": null
      },
      {
        "comment_id": "1573105874",
        "repo_full_name": "SWE-agent/SWE-agent",
        "pr_number": 247,
        "pr_file": "sweagent/agent/models.py",
        "discussion_id": "1572202381",
        "commented_code": "@@ -326,7 +327,7 @@ def history_to_messages(\n         Reference: https://docs.anthropic.com/claude/reference/complete_post\n         \"\"\"\n         # Preserve behavior for older models\n-        if self.api_model in [\"claude-instant\", \"claude-2\"]:\n+        if self.api_model in [\"claude-instant\", \"claude-2\", \"claude-2.1\"]:",
        "comment_created_at": "2024-04-20T02:06:39+00:00",
        "comment_author": "mikanfactory",
        "comment_body": "Thank you for fixing it right away!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1572219478",
    "pr_number": 247,
    "pr_file": "tests/test_models.py",
    "created_at": "2024-04-19T11:19:10+00:00",
    "commented_code": "]\n \n \n-def test_openai_model(openai_mock_client):\n-    for model_name in list(OpenAIModel.MODELS) + list(OpenAIModel.SHORTCUTS):\n-        TEST_MODEL_ARGUMENTS = ModelArguments(model_name)\n-        with patch(\"sweagent.agent.models.config.Config\"), patch(\"sweagent.agent.models.OpenAI\"):\n-                model = OpenAIModel(TEST_MODEL_ARGUMENTS, [])\n-        model.client = openai_mock_client\n+@pytest.fixture\n+def mock_openai_response():\n+    choice = Mock(message=Mock(content=\"test\"))\n+    usage = Mock(prompt_tokens=10, completion_tokens=10)\n+    return Mock(choices=[choice], usage=usage)\n+\n+\n+@pytest.fixture\n+def mock_anthropic2_response():\n+    return Mock(\n+        id=\"test\",\n+        completion=\"Hello. I'm fine.\",\n+        model=\"claude-haiku\",\n+        stop_reason=None,\n+        type=\"completion\",\n+        usage=Mock(input_tokens=10, output_tokens=10)\n+    )\n+\n+\n+@pytest.fixture\n+def mock_anthropic3_response():\n+    return Mock(\n+        id=\"test\",\n+        content=[Mock(type=\"text\", text=\"Hello, I'm fine\")],\n+        model=\"claude-haiku\",\n+        role=\"assistant\",\n+        stop_reason=None,\n+        stop_sequence=None,\n+        type=\"message\",\n+        usage=Mock(input_tokens=10, output_tokens=10)\n+    )\n+\n+\n+@pytest.fixture\n+def mock_ollama_response():\n+    return {\n+        \"prompt_eval_count\": 10,\n+        \"eval_count\": 10,\n+        \"message\": {\n+            \"content\": \"Hello. I'm fine.\"\n+        }\n+    }\n+\n+\n+def split_claude_model_by_version():",
    "repo_full_name": "SWE-agent/SWE-agent",
    "discussion_comments": [
      {
        "comment_id": "1572219478",
        "repo_full_name": "SWE-agent/SWE-agent",
        "pr_number": 247,
        "pr_file": "tests/test_models.py",
        "discussion_id": "1572219478",
        "commented_code": "@@ -25,10 +10,116 @@ def openai_mock_client():\n ]\n \n \n-def test_openai_model(openai_mock_client):\n-    for model_name in list(OpenAIModel.MODELS) + list(OpenAIModel.SHORTCUTS):\n-        TEST_MODEL_ARGUMENTS = ModelArguments(model_name)\n-        with patch(\"sweagent.agent.models.config.Config\"), patch(\"sweagent.agent.models.OpenAI\"):\n-                model = OpenAIModel(TEST_MODEL_ARGUMENTS, [])\n-        model.client = openai_mock_client\n+@pytest.fixture\n+def mock_openai_response():\n+    choice = Mock(message=Mock(content=\"test\"))\n+    usage = Mock(prompt_tokens=10, completion_tokens=10)\n+    return Mock(choices=[choice], usage=usage)\n+\n+\n+@pytest.fixture\n+def mock_anthropic2_response():\n+    return Mock(\n+        id=\"test\",\n+        completion=\"Hello. I'm fine.\",\n+        model=\"claude-haiku\",\n+        stop_reason=None,\n+        type=\"completion\",\n+        usage=Mock(input_tokens=10, output_tokens=10)\n+    )\n+\n+\n+@pytest.fixture\n+def mock_anthropic3_response():\n+    return Mock(\n+        id=\"test\",\n+        content=[Mock(type=\"text\", text=\"Hello, I'm fine\")],\n+        model=\"claude-haiku\",\n+        role=\"assistant\",\n+        stop_reason=None,\n+        stop_sequence=None,\n+        type=\"message\",\n+        usage=Mock(input_tokens=10, output_tokens=10)\n+    )\n+\n+\n+@pytest.fixture\n+def mock_ollama_response():\n+    return {\n+        \"prompt_eval_count\": 10,\n+        \"eval_count\": 10,\n+        \"message\": {\n+            \"content\": \"Hello. I'm fine.\"\n+        }\n+    }\n+\n+\n+def split_claude_model_by_version():",
        "comment_created_at": "2024-04-19T11:19:10+00:00",
        "comment_author": "mikanfactory",
        "comment_body": "For Claude-2, we were sending requests with `completions.create()`, while for Claude-3, we were sending requests with `messages.create()`, so we needed to separate the test cases and divide the models.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1553821238",
    "pr_number": 16,
    "pr_file": "sweagent/agent/models.py",
    "created_at": "2024-04-05T15:02:48+00:00",
    "commented_code": "# Set OpenAI key\n         cfg = config.Config(os.path.join(os.getcwd(), \"keys.cfg\"))\n-        self.client = OpenAI(api_key=cfg[\"OPENAI_API_KEY\"])\n+        if self.args.model_name.startswith(\"azure\"):\n+             self.api_model=cfg[\"AZURE_OPENAI_DEPLOYMENT\"]\n+             self.client = AzureOpenAI(api_key=cfg[\"AZURE_OPENAI_API_KEY\"], azure_endpoint=cfg[\"AZURE_OPENAI_ENDPOINT\"], api_version=\"2024-02-01\")",
    "repo_full_name": "SWE-agent/SWE-agent",
    "discussion_comments": [
      {
        "comment_id": "1553821238",
        "repo_full_name": "SWE-agent/SWE-agent",
        "pr_number": 16,
        "pr_file": "sweagent/agent/models.py",
        "discussion_id": "1553821238",
        "commented_code": "@@ -220,7 +223,11 @@ def __init__(self, args: ModelArguments, commands: list[Command]):\n \n         # Set OpenAI key\n         cfg = config.Config(os.path.join(os.getcwd(), \"keys.cfg\"))\n-        self.client = OpenAI(api_key=cfg[\"OPENAI_API_KEY\"])\n+        if self.args.model_name.startswith(\"azure\"):\n+             self.api_model=cfg[\"AZURE_OPENAI_DEPLOYMENT\"]\n+             self.client = AzureOpenAI(api_key=cfg[\"AZURE_OPENAI_API_KEY\"], azure_endpoint=cfg[\"AZURE_OPENAI_ENDPOINT\"], api_version=\"2024-02-01\")",
        "comment_created_at": "2024-04-05T15:02:48+00:00",
        "comment_author": "mspronesti",
        "comment_body": "How about parametrizing the `api_version` too? It changes rather frequently :)\r\n```suggestion\r\n             self.api_model = cfg[\"AZURE_OPENAI_DEPLOYMENT\"]\r\n             api_version = cfg.get(\"OPENAI_API_VERSION\", \"2024-02-01\")\r\n             self.client = AzureOpenAI(api_key=cfg[\"AZURE_OPENAI_API_KEY\"], azure_endpoint=cfg[\"AZURE_OPENAI_ENDPOINT\"], api_version=api_version)\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1553830745",
        "repo_full_name": "SWE-agent/SWE-agent",
        "pr_number": 16,
        "pr_file": "sweagent/agent/models.py",
        "discussion_id": "1553821238",
        "commented_code": "@@ -220,7 +223,11 @@ def __init__(self, args: ModelArguments, commands: list[Command]):\n \n         # Set OpenAI key\n         cfg = config.Config(os.path.join(os.getcwd(), \"keys.cfg\"))\n-        self.client = OpenAI(api_key=cfg[\"OPENAI_API_KEY\"])\n+        if self.args.model_name.startswith(\"azure\"):\n+             self.api_model=cfg[\"AZURE_OPENAI_DEPLOYMENT\"]\n+             self.client = AzureOpenAI(api_key=cfg[\"AZURE_OPENAI_API_KEY\"], azure_endpoint=cfg[\"AZURE_OPENAI_ENDPOINT\"], api_version=\"2024-02-01\")",
        "comment_created_at": "2024-04-05T15:09:08+00:00",
        "comment_author": "klieret",
        "comment_body": "we could make it a `.get(\"...\", default value)` to get the best of both worlds",
        "pr_file_module": null
      },
      {
        "comment_id": "1553838838",
        "repo_full_name": "SWE-agent/SWE-agent",
        "pr_number": 16,
        "pr_file": "sweagent/agent/models.py",
        "discussion_id": "1553821238",
        "commented_code": "@@ -220,7 +223,11 @@ def __init__(self, args: ModelArguments, commands: list[Command]):\n \n         # Set OpenAI key\n         cfg = config.Config(os.path.join(os.getcwd(), \"keys.cfg\"))\n-        self.client = OpenAI(api_key=cfg[\"OPENAI_API_KEY\"])\n+        if self.args.model_name.startswith(\"azure\"):\n+             self.api_model=cfg[\"AZURE_OPENAI_DEPLOYMENT\"]\n+             self.client = AzureOpenAI(api_key=cfg[\"AZURE_OPENAI_API_KEY\"], azure_endpoint=cfg[\"AZURE_OPENAI_ENDPOINT\"], api_version=\"2024-02-01\")",
        "comment_created_at": "2024-04-05T15:12:46+00:00",
        "comment_author": "mspronesti",
        "comment_body": "Suggestion updated :)",
        "pr_file_module": null
      },
      {
        "comment_id": "1553925348",
        "repo_full_name": "SWE-agent/SWE-agent",
        "pr_number": 16,
        "pr_file": "sweagent/agent/models.py",
        "discussion_id": "1553821238",
        "commented_code": "@@ -220,7 +223,11 @@ def __init__(self, args: ModelArguments, commands: list[Command]):\n \n         # Set OpenAI key\n         cfg = config.Config(os.path.join(os.getcwd(), \"keys.cfg\"))\n-        self.client = OpenAI(api_key=cfg[\"OPENAI_API_KEY\"])\n+        if self.args.model_name.startswith(\"azure\"):\n+             self.api_model=cfg[\"AZURE_OPENAI_DEPLOYMENT\"]\n+             self.client = AzureOpenAI(api_key=cfg[\"AZURE_OPENAI_API_KEY\"], azure_endpoint=cfg[\"AZURE_OPENAI_ENDPOINT\"], api_version=\"2024-02-01\")",
        "comment_created_at": "2024-04-05T15:53:56+00:00",
        "comment_author": "klieret",
        "comment_body": "Thanks! Could you check that this works? (I don't have azure credits atm)",
        "pr_file_module": null
      }
    ]
  }
]