[
  {
    "discussion_id": "334161338",
    "pr_number": 300,
    "pr_file": "Sources/SIL/SIBParser.swift",
    "created_at": "2019-10-11T20:25:20+00:00",
    "commented_code": "import Foundation\n\nlet SIB_MAGIC: [UInt8] = [0xE2, 0x9C, 0xA8, 0x0E]\n\nenum SIBFileError: Error {\n  case cannotOpenFile\n  case incorrectMagic\n}\n\nenum SIBError: Error {\n  case parseError(_ reason: String)\n  case unsupported(_ what: String)\n}\n\nfunc loadSIBBitcode(fromPath path: String) throws -> BitcodeBlock {\n  guard let handle = FileHandle(forReadingAtPath: path) else {\n    throw SIBFileError.cannotOpenFile\n  }\n\n  var stream = Bitstream(handle.readDataToEndOfFile())\n  if (try stream.next(bytes: 4) != SIB_MAGIC) {\n    throw SIBFileError.incorrectMagic\n  }\n\n  let parser = BitcodeParser(stream)\n  return try parser.parse()\n}\n\nfileprivate func expectOne<T>(called name: String, among candidates: [T]) throws -> T {",
    "repo_full_name": "tensorflow/swift",
    "discussion_comments": [
      {
        "comment_id": "334161338",
        "repo_full_name": "tensorflow/swift",
        "pr_number": 300,
        "pr_file": "Sources/SIL/SIBParser.swift",
        "discussion_id": "334161338",
        "commented_code": "@@ -0,0 +1,399 @@\n+import Foundation\n+\n+let SIB_MAGIC: [UInt8] = [0xE2, 0x9C, 0xA8, 0x0E]\n+\n+enum SIBFileError: Error {\n+  case cannotOpenFile\n+  case incorrectMagic\n+}\n+\n+enum SIBError: Error {\n+  case parseError(_ reason: String)\n+  case unsupported(_ what: String)\n+}\n+\n+func loadSIBBitcode(fromPath path: String) throws -> BitcodeBlock {\n+  guard let handle = FileHandle(forReadingAtPath: path) else {\n+    throw SIBFileError.cannotOpenFile\n+  }\n+\n+  var stream = Bitstream(handle.readDataToEndOfFile())\n+  if (try stream.next(bytes: 4) != SIB_MAGIC) {\n+    throw SIBFileError.incorrectMagic\n+  }\n+\n+  let parser = BitcodeParser(stream)\n+  return try parser.parse()\n+}\n+\n+fileprivate func expectOne<T>(called name: String, among candidates: [T]) throws -> T {",
        "comment_created_at": "2019-10-11T20:25:20+00:00",
        "comment_author": "rxwei",
        "comment_body": "```suggestion\r\nfileprivate func expectOne<T>(named name: String, among candidates: [T]) throws -> T {\r\n```\r\nIt's usually \"named:\" rather than \"called:\", e.g. [`Image.init(named:)`](https://developer.apple.com/documentation/uikit/uiimage/1624146-init) :)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "318283977",
    "pr_number": 254,
    "pr_file": "Sources/SIL/SILAnalysis.swift",
    "created_at": "2019-08-27T20:33:44+00:00",
    "commented_code": "public func registersRead(by instr: Instruction) -> [String]? {",
    "repo_full_name": "tensorflow/swift",
    "discussion_comments": [
      {
        "comment_id": "318283977",
        "repo_full_name": "tensorflow/swift",
        "pr_number": 254,
        "pr_file": "Sources/SIL/SILAnalysis.swift",
        "discussion_id": "318283977",
        "commented_code": "@@ -0,0 +1,50 @@\n+public func registersRead(by instr: Instruction) -> [String]? {",
        "comment_created_at": "2019-08-27T20:33:44+00:00",
        "comment_author": "rxwei",
        "comment_body": "1. SIL doesn't use the term \"register\". Since this is returning operand names, why not call it \"operand names\"?\r\n2. Why a top-level function instead of a method? A method would be more idiomatic.\r\n\r\n```suggestion\r\nextension Instruction {\r\n    var operandNames: [String]? {\r\n```\r\n\r\nAlso, `inst` is the used most in the Swift compiler code base instead of `instr`. It'd be good to make it consistent.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "316342515",
    "pr_number": 241,
    "pr_file": "Sources/SIL/SIL.swift",
    "created_at": "2019-08-21T18:39:57+00:00",
    "commented_code": "}\n\n// Reverse-engineered from -emit-sil\npublic indirect enum Type {\npublic indirect enum Type: Equatable {\n    case addressType(_ type: Type)",
    "repo_full_name": "tensorflow/swift",
    "discussion_comments": [
      {
        "comment_id": "316342515",
        "repo_full_name": "tensorflow/swift",
        "pr_number": 241,
        "pr_file": "Sources/SIL/SIL.swift",
        "discussion_id": "316342515",
        "commented_code": "@@ -355,7 +368,7 @@ public enum TupleElements {\n }\n \n // Reverse-engineered from -emit-sil\n-public indirect enum Type {\n+public indirect enum Type: Equatable {\n     case addressType(_ type: Type)",
        "comment_created_at": "2019-08-21T18:39:57+00:00",
        "comment_author": "rxwei",
        "comment_body": "* Enum case names don't need to repeat the enum type information. I'd suggest dropping the \"Type\" suffixes.\r\n* No need for argument names.\r\n\r\n`address(Type)`",
        "pr_file_module": null
      }
    ]
  }
]