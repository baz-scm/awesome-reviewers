[
  {
    "discussion_id": "2300840426",
    "pr_number": 58323,
    "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
    "created_at": "2025-08-26T12:29:48+00:00",
    "commented_code": "// next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.\n+  string search = 3;\n+  // sort_by specifies the sort order for the results.\n+  types.SortBy sort_by = 4;",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2300840426",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2300840426",
        "commented_code": "@@ -125,6 +125,10 @@ message ListAccessListsRequest {\n \n   // next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.\n+  string search = 3;\n+  // sort_by specifies the sort order for the results.\n+  types.SortBy sort_by = 4;",
        "comment_created_at": "2025-08-26T12:29:48+00:00",
        "comment_author": "okraport",
        "comment_body": "1. I think we should encapsulate the filter as a proto message. \r\n\r\nThere is prior art to this design pattern: https://github.com/gravitational/teleport/blob/4b5bf5a5efcf460d789c62331b7b9d9ffa66de90/api/proto/teleport/legacy/client/proto/authservice.proto#L2692-L2711\r\n\r\nThis will make it easier to expand if needed in the future without breaking all the signatures. In addition we can write generic helpers that can either take a generic filter or a lambda to use with `stream.FilterMap` to simplify the backend. \r\n\r\n\r\n2. ~RFD153 does not explicitly state this, but I would like to propose that perhaps it would make sense to keep List* RPCs as unfiltered, paginated getters and introduce Search* as their filtered counterpart. It should be trivial to reuse most of the code on both client and backend side with our generic helpers and apply a filter on the search code path.~\r\n\r\n@rosstimothy I'd like to hear your opinion on this, if we need to solidify the naming convention and the guidance for filter message types I am happy to put up an RFD and update the linter. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2301267449",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2300840426",
        "commented_code": "@@ -125,6 +125,10 @@ message ListAccessListsRequest {\n \n   // next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.\n+  string search = 3;\n+  // sort_by specifies the sort order for the results.\n+  types.SortBy sort_by = 4;",
        "comment_created_at": "2025-08-26T14:53:11+00:00",
        "comment_author": "okraport",
        "comment_body": "Updated to strike the comment on naming, we have lot of legacy List* calls that already support filters, adding a new RPC here seems like it would only increase the dev overhead without a clear plan on what to do with legacy List calls. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2301355932",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2300840426",
        "commented_code": "@@ -125,6 +125,10 @@ message ListAccessListsRequest {\n \n   // next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.\n+  string search = 3;\n+  // sort_by specifies the sort order for the results.\n+  types.SortBy sort_by = 4;",
        "comment_created_at": "2025-08-26T15:22:13+00:00",
        "comment_author": "avatus",
        "comment_body": "apparently, if i made a new RPC (`ListAccessListsWithFilter`), it requires a new message, `ListAccessListsWithFilterRequest`, or so says `make grpc`. are we cool with this? im guessing so, since we set up the linter to do it. the old `ListAccessLists` message will remain unchanged, and ill just port _everything_ in this PR over to `ListAccessListsWithFilter` message with the included filter.",
        "pr_file_module": null
      },
      {
        "comment_id": "2316479519",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2300840426",
        "commented_code": "@@ -125,6 +125,10 @@ message ListAccessListsRequest {\n \n   // next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.\n+  string search = 3;\n+  // sort_by specifies the sort order for the results.\n+  types.SortBy sort_by = 4;",
        "comment_created_at": "2025-09-02T15:41:56+00:00",
        "comment_author": "okraport",
        "comment_body": "The new proto looks good, going to resolve. Thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2300886074",
    "pr_number": 58323,
    "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
    "created_at": "2025-08-26T12:47:58+00:00",
    "commented_code": "// next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2300886074",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2300886074",
        "commented_code": "@@ -125,6 +125,10 @@ message ListAccessListsRequest {\n \n   // next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.",
        "comment_created_at": "2025-08-26T12:47:58+00:00",
        "comment_author": "rosstimothy",
        "comment_body": "Are we going to run into any issues by extending the current ListAccessList RPC with these new fields? What happens if a newer Teleport instance populates these fields and the request is received by an older Auth server that doesn't know about them? \r\n\r\nFrom a correctness standpoint, the scenario above would still deliver pages of access lists, though anything expecting sorting of filtering, like the UI, would result in a weird UX.",
        "pr_file_module": null
      },
      {
        "comment_id": "2301283233",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2300886074",
        "commented_code": "@@ -125,6 +125,10 @@ message ListAccessListsRequest {\n \n   // next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.",
        "comment_created_at": "2025-08-26T14:58:18+00:00",
        "comment_author": "avatus",
        "comment_body": "yeah, we would run into the weird UX you speak of. i can make a new ListAccessListWithFilter rpc",
        "pr_file_module": null
      },
      {
        "comment_id": "2301311602",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2300886074",
        "commented_code": "@@ -125,6 +125,10 @@ message ListAccessListsRequest {\n \n   // next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.",
        "comment_created_at": "2025-08-26T15:08:04+00:00",
        "comment_author": "rosstimothy",
        "comment_body": "Assuming there is a new RPC, would the UI be smart enough to do the right thing and fall back to existing behavior? Would the existing behavior be potentially worse than the weird UX or sorting not being honored?",
        "pr_file_module": null
      },
      {
        "comment_id": "2303097315",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2300886074",
        "commented_code": "@@ -125,6 +125,10 @@ message ListAccessListsRequest {\n \n   // next_token is the page token.\n   string next_token = 2;\n+  // search is a search term to filter access lists by name.",
        "comment_created_at": "2025-08-27T07:19:57+00:00",
        "comment_author": "avatus",
        "comment_body": "In the web UI, we can just fallback if we receive a 404 or not implemented, and then filter the entire list by the values we just sent in the API request. On small clusters this will virtually mean no difference to the user, but on large clusters they will have the wait time (but then the data will be presented correctly at least). It will be fine  ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2304623453",
    "pr_number": 58323,
    "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
    "created_at": "2025-08-27T16:39:31+00:00",
    "commented_code": "rpc GetAccessLists(GetAccessListsRequest) returns (GetAccessListsResponse);\n   // ListAccessLists returns a paginated list of all access lists.\n   rpc ListAccessLists(ListAccessListsRequest) returns (ListAccessListsResponse);\n+  // ListAccessListsWithFilter returns a paginated, filtered, and sorted list of all access lists.\n+  rpc ListAccessListsWithFilter(ListAccessListsWithFilterRequest) returns (ListAccessListsWithFilterResponse);",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2304623453",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2304623453",
        "commented_code": "@@ -29,6 +29,8 @@ service AccessListService {\n   rpc GetAccessLists(GetAccessListsRequest) returns (GetAccessListsResponse);\n   // ListAccessLists returns a paginated list of all access lists.\n   rpc ListAccessLists(ListAccessListsRequest) returns (ListAccessListsResponse);\n+  // ListAccessListsWithFilter returns a paginated, filtered, and sorted list of all access lists.\n+  rpc ListAccessListsWithFilter(ListAccessListsWithFilterRequest) returns (ListAccessListsWithFilterResponse);",
        "comment_created_at": "2025-08-27T16:39:31+00:00",
        "comment_author": "rosstimothy",
        "comment_body": "Can we name this ListAccessListsV2 and deprecate ListAccessLists?\r\n```suggestion\r\n  // ListAccessListsV2 returns a paginated, filtered, and sorted list of all access lists.\r\n  rpc ListAccessListsV2(ListAccessListsV2Request) returns (ListAccessListsV2Response);\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2311934695",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58323,
        "pr_file": "api/proto/teleport/accesslist/v1/accesslist_service.proto",
        "discussion_id": "2304623453",
        "commented_code": "@@ -29,6 +29,8 @@ service AccessListService {\n   rpc GetAccessLists(GetAccessListsRequest) returns (GetAccessListsResponse);\n   // ListAccessLists returns a paginated list of all access lists.\n   rpc ListAccessLists(ListAccessListsRequest) returns (ListAccessListsResponse);\n+  // ListAccessListsWithFilter returns a paginated, filtered, and sorted list of all access lists.\n+  rpc ListAccessListsWithFilter(ListAccessListsWithFilterRequest) returns (ListAccessListsWithFilterResponse);",
        "comment_created_at": "2025-08-30T13:06:20+00:00",
        "comment_author": "avatus",
        "comment_body": "I should probably change the filter name to just AccessListFilter as well ",
        "pr_file_module": null
      }
    ]
  }
]