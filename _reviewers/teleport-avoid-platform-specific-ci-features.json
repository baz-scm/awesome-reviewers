[
  {
    "discussion_id": "2056583847",
    "pr_number": 54228,
    "pr_file": ".github/workflows/smoke-test-package.yaml",
    "created_at": "2025-04-23T17:39:34+00:00",
    "commented_code": "+name: Smoke test package rpm/deb\n+run-name: Smoke test package rpm/deb\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      release-version:\n+        description: |\n+          Override the build version from what is in the Makefile.\n+          Use this override to specify a tag for build debugging purposes.\n+        type: string\n+\n+  # TODO(vapopov): delete before merge.\n+  push:\n+    branches:\n+      - vapopov/smoke-test-package\n+\n+  merge_group:\n+    paths:\n+      - 'lib/autoupdate/**.go'\n+      - 'tool/teleport-update/**.go'\n+      - 'go.mod'\n+      - 'go.sum'\n+      - 'build.assets/Makefile'\n+      - 'build.assets/Dockerfile*'\n+      - 'Makefile'\n+\n+jobs:\n+\n+  build:\n+    runs-on: ubuntu-latest\n+    outputs:\n+      version: ${{ steps.set-version.outputs.version }}\n+    env:\n+      # GOMODCACHE and GOCACHE can be removed when we commit to the self-hosted\n+      # ARC runners, as these runners set up these vars for us. We still need\n+      # these though for the GitHub runners (ubuntu).\n+      GOMODCACHE: /tmp/gomodcache\n+      GOCACHE: /tmp/gocache\n+\n+    steps:\n+      - name: Set up Docker Buildx\n+        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0\n+        with:\n+          driver: docker\n+\n+      - name: Checkout Teleport\n+        uses: actions/checkout@v4\n+\n+#      # Log into Docker Hub to increase rate limits\n+#      - name: Login to Docker Hub\n+#        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0\n+#        with:\n+#          username: ${{ secrets.DOCKERHUB_USERNAME }}\n+#          password: ${{ secrets.DOCKERHUB_TOKEN }}\n+#\n+#      # Log into ECR to raise rate limits, needed for the public.ecr.aws/gravitational/fpm\n+#      # image used for building .deb and .rpm files.\n+#      - name: Log into ECR\n+#        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1\n+#        with:\n+#          registry-type: public\n+#        env:\n+#          # GetAuthorizationToken command is only supported in us-east-1.\n+#          AWS_REGION: us-east-1\n+\n+      # The step can be removed when we commit to the self-hosted ARC runners,\n+      # as it runs with a consistent UID/GID and creates the directories with\n+      # the correct ownership. We still need this for the GitHub runners though.\n+      - name: Create cache directories with correct owner/group\n+        run: |\n+          sudo mkdir -p \"$GOCACHE\" \"$GOMODCACHE\"\n+          sudo chown -Rf \"$(id -u):$(id -g)\" \"$GOCACHE\" \"$GOMODCACHE\"\n+\n+      - name: Setup Go\n+        uses: actions/setup-go@v5\n+        with:\n+          cache: false\n+          go-version-file: 'go.mod'\n+\n+      - name: Set Version\n+        id: set-version\n+        env:\n+          RELEASE_VERSION: ${{ inputs.release-version }}\n+        run: |\n+          VERSION=$(grep -oP '^VERSION=\\K.*' Makefile)\n+          echo \"VERSION=${RELEASE_VERSION:-$VERSION}\" >> \"$GITHUB_ENV\"\n+          echo \"version=${RELEASE_VERSION:-$VERSION}\" >> \"$GITHUB_OUTPUT\"\n+\n+      - name: Build Release\n+        env:\n+          RELEASE_TARGET: release\n+          RELEASE_DIR: ${{ github.workspace }}/build/artifacts\n+        run: |\n+          mkdir -p \"$RELEASE_DIR\"\n+          make -C build.assets \"$RELEASE_TARGET\" VERSION=\"$VERSION\"\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v4\n+        with:\n+          name: build-artifacts\n+          path: |\n+            ${{ github.workspace }}/build/artifacts\n+\n+      - name: Upload test-assets\n+        uses: actions/upload-artifact@v4\n+        with:\n+          name: test-assets\n+          path: |\n+            assets/package-test/*",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2056583847",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 54228,
        "pr_file": ".github/workflows/smoke-test-package.yaml",
        "discussion_id": "2056583847",
        "commented_code": "@@ -0,0 +1,236 @@\n+name: Smoke test package rpm/deb\n+run-name: Smoke test package rpm/deb\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      release-version:\n+        description: |\n+          Override the build version from what is in the Makefile.\n+          Use this override to specify a tag for build debugging purposes.\n+        type: string\n+\n+  # TODO(vapopov): delete before merge.\n+  push:\n+    branches:\n+      - vapopov/smoke-test-package\n+\n+  merge_group:\n+    paths:\n+      - 'lib/autoupdate/**.go'\n+      - 'tool/teleport-update/**.go'\n+      - 'go.mod'\n+      - 'go.sum'\n+      - 'build.assets/Makefile'\n+      - 'build.assets/Dockerfile*'\n+      - 'Makefile'\n+\n+jobs:\n+\n+  build:\n+    runs-on: ubuntu-latest\n+    outputs:\n+      version: ${{ steps.set-version.outputs.version }}\n+    env:\n+      # GOMODCACHE and GOCACHE can be removed when we commit to the self-hosted\n+      # ARC runners, as these runners set up these vars for us. We still need\n+      # these though for the GitHub runners (ubuntu).\n+      GOMODCACHE: /tmp/gomodcache\n+      GOCACHE: /tmp/gocache\n+\n+    steps:\n+      - name: Set up Docker Buildx\n+        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0\n+        with:\n+          driver: docker\n+\n+      - name: Checkout Teleport\n+        uses: actions/checkout@v4\n+\n+#      # Log into Docker Hub to increase rate limits\n+#      - name: Login to Docker Hub\n+#        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0\n+#        with:\n+#          username: ${{ secrets.DOCKERHUB_USERNAME }}\n+#          password: ${{ secrets.DOCKERHUB_TOKEN }}\n+#\n+#      # Log into ECR to raise rate limits, needed for the public.ecr.aws/gravitational/fpm\n+#      # image used for building .deb and .rpm files.\n+#      - name: Log into ECR\n+#        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1\n+#        with:\n+#          registry-type: public\n+#        env:\n+#          # GetAuthorizationToken command is only supported in us-east-1.\n+#          AWS_REGION: us-east-1\n+\n+      # The step can be removed when we commit to the self-hosted ARC runners,\n+      # as it runs with a consistent UID/GID and creates the directories with\n+      # the correct ownership. We still need this for the GitHub runners though.\n+      - name: Create cache directories with correct owner/group\n+        run: |\n+          sudo mkdir -p \"$GOCACHE\" \"$GOMODCACHE\"\n+          sudo chown -Rf \"$(id -u):$(id -g)\" \"$GOCACHE\" \"$GOMODCACHE\"\n+\n+      - name: Setup Go\n+        uses: actions/setup-go@v5\n+        with:\n+          cache: false\n+          go-version-file: 'go.mod'\n+\n+      - name: Set Version\n+        id: set-version\n+        env:\n+          RELEASE_VERSION: ${{ inputs.release-version }}\n+        run: |\n+          VERSION=$(grep -oP '^VERSION=\\K.*' Makefile)\n+          echo \"VERSION=${RELEASE_VERSION:-$VERSION}\" >> \"$GITHUB_ENV\"\n+          echo \"version=${RELEASE_VERSION:-$VERSION}\" >> \"$GITHUB_OUTPUT\"\n+\n+      - name: Build Release\n+        env:\n+          RELEASE_TARGET: release\n+          RELEASE_DIR: ${{ github.workspace }}/build/artifacts\n+        run: |\n+          mkdir -p \"$RELEASE_DIR\"\n+          make -C build.assets \"$RELEASE_TARGET\" VERSION=\"$VERSION\"\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v4\n+        with:\n+          name: build-artifacts\n+          path: |\n+            ${{ github.workspace }}/build/artifacts\n+\n+      - name: Upload test-assets\n+        uses: actions/upload-artifact@v4\n+        with:\n+          name: test-assets\n+          path: |\n+            assets/package-test/*",
        "comment_created_at": "2025-04-23T17:39:34+00:00",
        "comment_author": "fheinecke",
        "comment_body": "This + all other GH Artifacts steps need to be replaced with uploads/downloads to S3. New workflows should not be integrating with GH-specific features like this",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2098942509",
    "pr_number": 54228,
    "pr_file": ".github/workflows/smoke-test-package.yaml",
    "created_at": "2025-05-20T21:59:56+00:00",
    "commented_code": "+name: Smoke test package rpm/deb\n+run-name: Smoke test package rpm/deb\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      release-version:\n+        description: |\n+          Override the build version from what is in the Makefile.\n+          Use this override to specify a tag for build debugging purposes.\n+        type: string\n+\n+  pull_request:\n+  merge_group:\n+\n+jobs:\n+  changes:\n+    name: Check for relevant changes\n+    runs-on: ubuntu-latest\n+    permissions:\n+      pull-requests: read\n+    outputs:\n+      changed: ${{ steps.changes.outputs.changed }}\n+    steps:\n+      - name: Checkout\n+        if: ${{ github.event_name == 'merge_group' }}\n+        uses: actions/checkout@v4\n+      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2\n+        id: changes\n+        with:\n+          base: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}\n+          ref: ${{ github.event.pull_request.head.ref || github.event.merge_group.head_ref }}\n+          filters: |\n+            changed:\n+              - '.github/workflows/smoke-test-package.yaml'\n+              - 'lib/autoupdate/**.go'\n+              - 'tool/teleport-update/**.go'\n+              - 'go.mod'\n+              - 'go.sum'\n+              - 'build.assets/Makefile'\n+              - 'build.assets/Dockerfile*'\n+              - 'Makefile'\n+\n+  build:\n+    runs-on: ubuntu-latest\n+    needs: changes\n+    if: ${{ !startsWith(github.head_ref, 'dependabot/') && needs.changes.outputs.changed == 'true' }}\n+    outputs:\n+      version: ${{ steps.set-version.outputs.version }}\n+    env:\n+      # GOMODCACHE and GOCACHE can be removed when we commit to the self-hosted\n+      # ARC runners, as these runners set up these vars for us. We still need\n+      # these though for the GitHub runners (ubuntu).\n+      GOMODCACHE: /tmp/gomodcache\n+      GOCACHE: /tmp/gocache\n+\n+    steps:\n+      - name: Set up Docker Buildx\n+        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0\n+        with:\n+          driver: docker\n+\n+      - name: Checkout Teleport\n+        uses: actions/checkout@v4\n+\n+      # The step can be removed when we commit to the self-hosted ARC runners,\n+      # as it runs with a consistent UID/GID and creates the directories with\n+      # the correct ownership. We still need this for the GitHub runners though.\n+      - name: Create cache directories with correct owner/group\n+        run: |\n+          sudo mkdir -p \"$GOCACHE\" \"$GOMODCACHE\"\n+          sudo chown -Rf \"$(id -u):$(id -g)\" \"$GOCACHE\" \"$GOMODCACHE\"\n+\n+      - name: Setup Go\n+        uses: actions/setup-go@v5\n+        with:\n+          cache: false\n+          go-version-file: 'go.mod'\n+\n+      - name: Set Version\n+        id: set-version\n+        env:\n+          RELEASE_VERSION: ${{ inputs.release-version }}\n+        run: |\n+          VERSION=$(grep -oP '^VERSION=\\K.*' Makefile)\n+          echo \"VERSION=${RELEASE_VERSION:-$VERSION}\" >> \"$GITHUB_ENV\"\n+          echo \"version=${RELEASE_VERSION:-$VERSION}\" >> \"$GITHUB_OUTPUT\"\n+\n+      - name: Build Release\n+        env:\n+          RELEASE_TARGET: release\n+          RELEASE_DIR: ${{ github.workspace }}/build/artifacts\n+        run: |\n+          mkdir -p \"$RELEASE_DIR\"\n+          make -C build.assets \"$RELEASE_TARGET\" VERSION=\"$VERSION\"\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v4\n+        with:\n+          name: build-artifacts\n+          retention-days: 1\n+          path: |\n+            ${{ github.workspace }}/build/artifacts\n+\n+      - name: Upload test-assets\n+        uses: actions/upload-artifact@v4\n+        with:\n+          name: test-assets\n+          retention-days: 1\n+          path: |\n+            assets/package-test/*\n+\n+  build-packages:",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2098942509",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 54228,
        "pr_file": ".github/workflows/smoke-test-package.yaml",
        "discussion_id": "2098942509",
        "commented_code": "@@ -0,0 +1,238 @@\n+name: Smoke test package rpm/deb\n+run-name: Smoke test package rpm/deb\n+\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      release-version:\n+        description: |\n+          Override the build version from what is in the Makefile.\n+          Use this override to specify a tag for build debugging purposes.\n+        type: string\n+\n+  pull_request:\n+  merge_group:\n+\n+jobs:\n+  changes:\n+    name: Check for relevant changes\n+    runs-on: ubuntu-latest\n+    permissions:\n+      pull-requests: read\n+    outputs:\n+      changed: ${{ steps.changes.outputs.changed }}\n+    steps:\n+      - name: Checkout\n+        if: ${{ github.event_name == 'merge_group' }}\n+        uses: actions/checkout@v4\n+      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2\n+        id: changes\n+        with:\n+          base: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}\n+          ref: ${{ github.event.pull_request.head.ref || github.event.merge_group.head_ref }}\n+          filters: |\n+            changed:\n+              - '.github/workflows/smoke-test-package.yaml'\n+              - 'lib/autoupdate/**.go'\n+              - 'tool/teleport-update/**.go'\n+              - 'go.mod'\n+              - 'go.sum'\n+              - 'build.assets/Makefile'\n+              - 'build.assets/Dockerfile*'\n+              - 'Makefile'\n+\n+  build:\n+    runs-on: ubuntu-latest\n+    needs: changes\n+    if: ${{ !startsWith(github.head_ref, 'dependabot/') && needs.changes.outputs.changed == 'true' }}\n+    outputs:\n+      version: ${{ steps.set-version.outputs.version }}\n+    env:\n+      # GOMODCACHE and GOCACHE can be removed when we commit to the self-hosted\n+      # ARC runners, as these runners set up these vars for us. We still need\n+      # these though for the GitHub runners (ubuntu).\n+      GOMODCACHE: /tmp/gomodcache\n+      GOCACHE: /tmp/gocache\n+\n+    steps:\n+      - name: Set up Docker Buildx\n+        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0\n+        with:\n+          driver: docker\n+\n+      - name: Checkout Teleport\n+        uses: actions/checkout@v4\n+\n+      # The step can be removed when we commit to the self-hosted ARC runners,\n+      # as it runs with a consistent UID/GID and creates the directories with\n+      # the correct ownership. We still need this for the GitHub runners though.\n+      - name: Create cache directories with correct owner/group\n+        run: |\n+          sudo mkdir -p \"$GOCACHE\" \"$GOMODCACHE\"\n+          sudo chown -Rf \"$(id -u):$(id -g)\" \"$GOCACHE\" \"$GOMODCACHE\"\n+\n+      - name: Setup Go\n+        uses: actions/setup-go@v5\n+        with:\n+          cache: false\n+          go-version-file: 'go.mod'\n+\n+      - name: Set Version\n+        id: set-version\n+        env:\n+          RELEASE_VERSION: ${{ inputs.release-version }}\n+        run: |\n+          VERSION=$(grep -oP '^VERSION=\\K.*' Makefile)\n+          echo \"VERSION=${RELEASE_VERSION:-$VERSION}\" >> \"$GITHUB_ENV\"\n+          echo \"version=${RELEASE_VERSION:-$VERSION}\" >> \"$GITHUB_OUTPUT\"\n+\n+      - name: Build Release\n+        env:\n+          RELEASE_TARGET: release\n+          RELEASE_DIR: ${{ github.workspace }}/build/artifacts\n+        run: |\n+          mkdir -p \"$RELEASE_DIR\"\n+          make -C build.assets \"$RELEASE_TARGET\" VERSION=\"$VERSION\"\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v4\n+        with:\n+          name: build-artifacts\n+          retention-days: 1\n+          path: |\n+            ${{ github.workspace }}/build/artifacts\n+\n+      - name: Upload test-assets\n+        uses: actions/upload-artifact@v4\n+        with:\n+          name: test-assets\n+          retention-days: 1\n+          path: |\n+            assets/package-test/*\n+\n+  build-packages:",
        "comment_created_at": "2025-05-20T21:59:56+00:00",
        "comment_author": "camscale",
        "comment_body": "I think this job can be merged with the last one. The steps are just sequential WRT the build steps. That would remove the need for uploading those artifacts.",
        "pr_file_module": null
      }
    ]
  }
]