[
  {
    "discussion_id": "2231337366",
    "pr_number": 57153,
    "pr_file": "web/packages/design/src/Checkbox/Checkbox.tsx",
    "created_at": "2025-07-25T14:56:55+00:00",
    "commented_code": "because we want to be able to use this component both with and\n             without surrounding labels. Instead, we use absolute positioning and\n             an actually rendered input with a custom appearance. */}\n-          <CheckboxInternal ref={ref} cbSize={size} {...inputProps} />\n+          {inputProps.readOnly ? (\n+            <ReadOnlyCheckboxInternal\n+              ref={ref}\n+              cbSize={size}\n+              {...inputProps}\n+              disabled\n+            />\n+          ) : (",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2231337366",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 57153,
        "pr_file": "web/packages/design/src/Checkbox/Checkbox.tsx",
        "discussion_id": "2231337366",
        "commented_code": "@@ -62,7 +62,16 @@ export const CheckboxInput = forwardRef<HTMLInputElement, CheckboxInputProps>(\n             because we want to be able to use this component both with and\n             without surrounding labels. Instead, we use absolute positioning and\n             an actually rendered input with a custom appearance. */}\n-          <CheckboxInternal ref={ref} cbSize={size} {...inputProps} />\n+          {inputProps.readOnly ? (\n+            <ReadOnlyCheckboxInternal\n+              ref={ref}\n+              cbSize={size}\n+              {...inputProps}\n+              disabled\n+            />\n+          ) : (",
        "comment_created_at": "2025-07-25T14:56:55+00:00",
        "comment_author": "ravicious",
        "comment_body": "This results in both `readOnly` and `disabled` being passed to `CheckboxInternal` as both props are present in `inputProps`.",
        "pr_file_module": null
      },
      {
        "comment_id": "2252392822",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 57153,
        "pr_file": "web/packages/design/src/Checkbox/Checkbox.tsx",
        "discussion_id": "2231337366",
        "commented_code": "@@ -62,7 +62,16 @@ export const CheckboxInput = forwardRef<HTMLInputElement, CheckboxInputProps>(\n             because we want to be able to use this component both with and\n             without surrounding labels. Instead, we use absolute positioning and\n             an actually rendered input with a custom appearance. */}\n-          <CheckboxInternal ref={ref} cbSize={size} {...inputProps} />\n+          {inputProps.readOnly ? (\n+            <ReadOnlyCheckboxInternal\n+              ref={ref}\n+              cbSize={size}\n+              {...inputProps}\n+              disabled\n+            />\n+          ) : (",
        "comment_created_at": "2025-08-04T19:24:25+00:00",
        "comment_author": "kimlisa",
        "comment_body": "hrm if i understood you correctly, that should be okay since i override the `disabled` on line 70?\r\n\r\nor are you saying that `disabled` and `readOnly` should not be both \"enable able\"",
        "pr_file_module": null
      },
      {
        "comment_id": "2263415100",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 57153,
        "pr_file": "web/packages/design/src/Checkbox/Checkbox.tsx",
        "discussion_id": "2231337366",
        "commented_code": "@@ -62,7 +62,16 @@ export const CheckboxInput = forwardRef<HTMLInputElement, CheckboxInputProps>(\n             because we want to be able to use this component both with and\n             without surrounding labels. Instead, we use absolute positioning and\n             an actually rendered input with a custom appearance. */}\n-          <CheckboxInternal ref={ref} cbSize={size} {...inputProps} />\n+          {inputProps.readOnly ? (\n+            <ReadOnlyCheckboxInternal\n+              ref={ref}\n+              cbSize={size}\n+              {...inputProps}\n+              disabled\n+            />\n+          ) : (",
        "comment_created_at": "2025-08-08T16:12:52+00:00",
        "comment_author": "ravicious",
        "comment_body": "I mean that `readOnly` and `disabled` are two separate states that a form control can be in. Being `readOnly` should not force the form control to also be `disabled`.",
        "pr_file_module": null
      },
      {
        "comment_id": "2319869405",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 57153,
        "pr_file": "web/packages/design/src/Checkbox/Checkbox.tsx",
        "discussion_id": "2231337366",
        "commented_code": "@@ -62,7 +62,16 @@ export const CheckboxInput = forwardRef<HTMLInputElement, CheckboxInputProps>(\n             because we want to be able to use this component both with and\n             without surrounding labels. Instead, we use absolute positioning and\n             an actually rendered input with a custom appearance. */}\n-          <CheckboxInternal ref={ref} cbSize={size} {...inputProps} />\n+          {inputProps.readOnly ? (\n+            <ReadOnlyCheckboxInternal\n+              ref={ref}\n+              cbSize={size}\n+              {...inputProps}\n+              disabled\n+            />\n+          ) : (",
        "comment_created_at": "2025-09-03T18:40:52+00:00",
        "comment_author": "kimlisa",
        "comment_body": "i'm sorry for getting back to you like 5 years later (i got side tracked) \ud83d\ude13.\r\n\r\ncheckbox and radio is a little weird, we [want these to be disabled](https://gravitational.slack.com/archives/C07KG2RFA/p1756250775148989?thread_ts=1756156943.634129&cid=C07KG2RFA), so disabled state is correct. i changed the logic a bit to this instead `disabled={inputProps.disabled || inputProps.readOnly}`\r\n\r\nwith that said, i realized checkboxes and radio doesn't have a [readonly state](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Attributes/readonly#overview), but it's still passed in as props, i didn't think this was too big of a deal so I left it as is.",
        "pr_file_module": null
      },
      {
        "comment_id": "2322591739",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 57153,
        "pr_file": "web/packages/design/src/Checkbox/Checkbox.tsx",
        "discussion_id": "2231337366",
        "commented_code": "@@ -62,7 +62,16 @@ export const CheckboxInput = forwardRef<HTMLInputElement, CheckboxInputProps>(\n             because we want to be able to use this component both with and\n             without surrounding labels. Instead, we use absolute positioning and\n             an actually rendered input with a custom appearance. */}\n-          <CheckboxInternal ref={ref} cbSize={size} {...inputProps} />\n+          {inputProps.readOnly ? (\n+            <ReadOnlyCheckboxInternal\n+              ref={ref}\n+              cbSize={size}\n+              {...inputProps}\n+              disabled\n+            />\n+          ) : (",
        "comment_created_at": "2025-09-04T15:39:09+00:00",
        "comment_author": "ravicious",
        "comment_body": "Oh TIL about readonly not being available on checkboxes and radios, that's a good find. If you have time down the road, I think it'd be worthwhile to get rid of `readOnly` from elements that do not support it and leave a comment in the `disabled` prop that those elements don't support `readOnly`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2231361594",
    "pr_number": 57153,
    "pr_file": "web/packages/design/src/RadioButton/RadioButton.tsx",
    "created_at": "2025-07-25T15:05:01+00:00",
    "commented_code": "trick, because we want to be able to use this component both with\n             and without surrounding labels. Instead, we use absolute positioning\n             and an actually rendered input with a custom appearance. */}\n-          <RadioButtonInternal ref={ref} rbSize={size} {...inputProps} />\n+          {props.readonly ? (",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2231361594",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 57153,
        "pr_file": "web/packages/design/src/RadioButton/RadioButton.tsx",
        "discussion_id": "2231361594",
        "commented_code": "@@ -62,7 +62,16 @@ export const RadioButton = forwardRef<HTMLInputElement, RadioButtonProps>(\n             trick, because we want to be able to use this component both with\n             and without surrounding labels. Instead, we use absolute positioning\n             and an actually rendered input with a custom appearance. */}\n-          <RadioButtonInternal ref={ref} rbSize={size} {...inputProps} />\n+          {props.readonly ? (",
        "comment_created_at": "2025-07-25T15:05:01+00:00",
        "comment_author": "ravicious",
        "comment_body": "`readonly` is an invalid prop name for `<input>` in React, it should be `readOnly`. The current code results in no `readOnly` being passed to the actual `<input>`. But even after adjusting this, this component will have the same problems as `Checkbox`.",
        "pr_file_module": null
      },
      {
        "comment_id": "2252446277",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 57153,
        "pr_file": "web/packages/design/src/RadioButton/RadioButton.tsx",
        "discussion_id": "2231361594",
        "commented_code": "@@ -62,7 +62,16 @@ export const RadioButton = forwardRef<HTMLInputElement, RadioButtonProps>(\n             trick, because we want to be able to use this component both with\n             and without surrounding labels. Instead, we use absolute positioning\n             and an actually rendered input with a custom appearance. */}\n-          <RadioButtonInternal ref={ref} rbSize={size} {...inputProps} />\n+          {props.readonly ? (",
        "comment_created_at": "2025-08-04T19:55:00+00:00",
        "comment_author": "kimlisa",
        "comment_body": "i renamed it to `readOnly` but waiting for clarification on [this](https://github.com/gravitational/teleport/pull/57153#discussion_r2231337366) (seems related)",
        "pr_file_module": null
      }
    ]
  }
]