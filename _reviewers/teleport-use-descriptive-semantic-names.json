[
  {
    "discussion_id": "2318545757",
    "pr_number": 58586,
    "pr_file": "web/packages/design/src/theme/themes/darkTheme.ts",
    "created_at": "2025-09-03T10:32:41+00:00",
    "commented_code": "sessionRecording: {\n     resource: '#66C5FF',\n     user: '#C5B6FF',\n+    player: {\n+      background: 'black',\n+      progressBar: {\n+        background: 'rgba(255, 255, 255, 0.2)',\n+        seeking: 'rgba(255, 255, 255, 0.17)',",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2318545757",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58586,
        "pr_file": "web/packages/design/src/theme/themes/darkTheme.ts",
        "discussion_id": "2318545757",
        "commented_code": "@@ -502,6 +502,14 @@ const colors: ThemeColors = {\n   sessionRecording: {\n     resource: '#66C5FF',\n     user: '#C5B6FF',\n+    player: {\n+      background: 'black',\n+      progressBar: {\n+        background: 'rgba(255, 255, 255, 0.2)',\n+        seeking: 'rgba(255, 255, 255, 0.17)',",
        "comment_created_at": "2025-09-03T10:32:41+00:00",
        "comment_author": "bl-nero",
        "comment_body": "These are quite close to `interactive.tonal.neutral` palette; if it doesn't ruin the UI appearance, consider replacing references to `background` and `seeking` with these.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2316345466",
    "pr_number": 58585,
    "pr_file": "web/packages/teleport/src/SessionRecordings/view/player/tty/TtyPlayer.ts",
    "created_at": "2025-09-02T14:53:41+00:00",
    "commented_code": "+/**\n+ * Teleport\n+ * Copyright (C) 2025 Gravitational, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+import { getPlatform } from '@floating-ui/react/utils';\n+import { CanvasAddon } from '@xterm/addon-canvas';\n+import { ImageAddon } from '@xterm/addon-image';\n+import { WebLinksAddon } from '@xterm/addon-web-links';\n+import { WebglAddon } from '@xterm/addon-webgl';\n+import { ITerminalAddon, Terminal } from '@xterm/xterm';\n+\n+import { Platform } from 'design/platform';\n+import { ThemeColors } from 'design/theme';\n+import { getMonoFont } from 'design/theme/fonts';\n+\n+import { Player } from '../Player';\n+import { AspectFitAddon } from './AspectFitRatio';\n+import { EventType, type TtyEvent } from './types';\n+\n+/**\n+ * TtyPlayer is a player that connects a stream of TtyEvents to an xterm.js terminal.\n+ *\n+ * It handles rendering the terminal, applying events, and managing terminal addons.\n+ *\n+ * It supports resizing, clearing the terminal, and focusing the terminal on play/seek.\n+ * It also handles terminal themes and font settings.\n+ */\n+export class TtyPlayer extends Player<TtyEvent> {\n+  private addons: ITerminalAddon[] = [];\n+  private aspectFitAddon = new AspectFitAddon();\n+  private terminal: Terminal | null = null;\n+  private playing = false;\n+\n+  constructor(\n+    private theme: ThemeColors['terminal'],\n+    private cols: number,\n+    private rows: number\n+  ) {\n+    super();\n+  }\n+\n+  override init(element: HTMLElement) {\n+    this.terminal = new Terminal({\n+      fontSize: getPlatform() === Platform.macOS ? 12 : 14,\n+      fontFamily: getMonoFont(),\n+      cols: this.cols,\n+      rows: this.rows,\n+      theme: this.theme,\n+    });\n+\n+    const linksAddon = new WebLinksAddon();\n+    const imageAddon = new ImageAddon();\n+\n+    this.addons.push(this.aspectFitAddon, linksAddon, imageAddon);\n+\n+    this.aspectFitAddon.activate(this.terminal);\n+\n+    for (const addon of this.addons) {\n+      this.terminal.loadAddon(addon);\n+    }\n+\n+    const createCanvasAddon = () => {\n+      const canvasAddon = new CanvasAddon();\n+\n+      this.addons.push(canvasAddon);\n+\n+      this.terminal.loadAddon(canvasAddon);\n+    };\n+\n+    try {\n+      const webglAddon = new WebglAddon();\n+\n+      webglAddon.onContextLoss(() => {\n+        createCanvasAddon();\n+      });\n+\n+      this.terminal.loadAddon(webglAddon);\n+\n+      this.addons.push(webglAddon);\n+    } catch {\n+      createCanvasAddon();\n+    }\n+\n+    this.terminal.open(element);\n+\n+    this.aspectFitAddon.fitWithAspectRatio(this.cols, this.rows);\n+  }\n+\n+  override apply(event: TtyEvent) {",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2316345466",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58585,
        "pr_file": "web/packages/teleport/src/SessionRecordings/view/player/tty/TtyPlayer.ts",
        "discussion_id": "2316345466",
        "commented_code": "@@ -0,0 +1,202 @@\n+/**\n+ * Teleport\n+ * Copyright (C) 2025 Gravitational, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+import { getPlatform } from '@floating-ui/react/utils';\n+import { CanvasAddon } from '@xterm/addon-canvas';\n+import { ImageAddon } from '@xterm/addon-image';\n+import { WebLinksAddon } from '@xterm/addon-web-links';\n+import { WebglAddon } from '@xterm/addon-webgl';\n+import { ITerminalAddon, Terminal } from '@xterm/xterm';\n+\n+import { Platform } from 'design/platform';\n+import { ThemeColors } from 'design/theme';\n+import { getMonoFont } from 'design/theme/fonts';\n+\n+import { Player } from '../Player';\n+import { AspectFitAddon } from './AspectFitRatio';\n+import { EventType, type TtyEvent } from './types';\n+\n+/**\n+ * TtyPlayer is a player that connects a stream of TtyEvents to an xterm.js terminal.\n+ *\n+ * It handles rendering the terminal, applying events, and managing terminal addons.\n+ *\n+ * It supports resizing, clearing the terminal, and focusing the terminal on play/seek.\n+ * It also handles terminal themes and font settings.\n+ */\n+export class TtyPlayer extends Player<TtyEvent> {\n+  private addons: ITerminalAddon[] = [];\n+  private aspectFitAddon = new AspectFitAddon();\n+  private terminal: Terminal | null = null;\n+  private playing = false;\n+\n+  constructor(\n+    private theme: ThemeColors['terminal'],\n+    private cols: number,\n+    private rows: number\n+  ) {\n+    super();\n+  }\n+\n+  override init(element: HTMLElement) {\n+    this.terminal = new Terminal({\n+      fontSize: getPlatform() === Platform.macOS ? 12 : 14,\n+      fontFamily: getMonoFont(),\n+      cols: this.cols,\n+      rows: this.rows,\n+      theme: this.theme,\n+    });\n+\n+    const linksAddon = new WebLinksAddon();\n+    const imageAddon = new ImageAddon();\n+\n+    this.addons.push(this.aspectFitAddon, linksAddon, imageAddon);\n+\n+    this.aspectFitAddon.activate(this.terminal);\n+\n+    for (const addon of this.addons) {\n+      this.terminal.loadAddon(addon);\n+    }\n+\n+    const createCanvasAddon = () => {\n+      const canvasAddon = new CanvasAddon();\n+\n+      this.addons.push(canvasAddon);\n+\n+      this.terminal.loadAddon(canvasAddon);\n+    };\n+\n+    try {\n+      const webglAddon = new WebglAddon();\n+\n+      webglAddon.onContextLoss(() => {\n+        createCanvasAddon();\n+      });\n+\n+      this.terminal.loadAddon(webglAddon);\n+\n+      this.addons.push(webglAddon);\n+    } catch {\n+      createCanvasAddon();\n+    }\n+\n+    this.terminal.open(element);\n+\n+    this.aspectFitAddon.fitWithAspectRatio(this.cols, this.rows);\n+  }\n+\n+  override apply(event: TtyEvent) {",
        "comment_created_at": "2025-09-02T14:53:41+00:00",
        "comment_author": "gzdunek",
        "comment_body": "`apply` and `handle` method names feel too generic, what's their purpose? I'd try to find more meaningful names or at least add some JSDoc.",
        "pr_file_module": null
      },
      {
        "comment_id": "2318683867",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58585,
        "pr_file": "web/packages/teleport/src/SessionRecordings/view/player/tty/TtyPlayer.ts",
        "discussion_id": "2316345466",
        "commented_code": "@@ -0,0 +1,202 @@\n+/**\n+ * Teleport\n+ * Copyright (C) 2025 Gravitational, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+import { getPlatform } from '@floating-ui/react/utils';\n+import { CanvasAddon } from '@xterm/addon-canvas';\n+import { ImageAddon } from '@xterm/addon-image';\n+import { WebLinksAddon } from '@xterm/addon-web-links';\n+import { WebglAddon } from '@xterm/addon-webgl';\n+import { ITerminalAddon, Terminal } from '@xterm/xterm';\n+\n+import { Platform } from 'design/platform';\n+import { ThemeColors } from 'design/theme';\n+import { getMonoFont } from 'design/theme/fonts';\n+\n+import { Player } from '../Player';\n+import { AspectFitAddon } from './AspectFitRatio';\n+import { EventType, type TtyEvent } from './types';\n+\n+/**\n+ * TtyPlayer is a player that connects a stream of TtyEvents to an xterm.js terminal.\n+ *\n+ * It handles rendering the terminal, applying events, and managing terminal addons.\n+ *\n+ * It supports resizing, clearing the terminal, and focusing the terminal on play/seek.\n+ * It also handles terminal themes and font settings.\n+ */\n+export class TtyPlayer extends Player<TtyEvent> {\n+  private addons: ITerminalAddon[] = [];\n+  private aspectFitAddon = new AspectFitAddon();\n+  private terminal: Terminal | null = null;\n+  private playing = false;\n+\n+  constructor(\n+    private theme: ThemeColors['terminal'],\n+    private cols: number,\n+    private rows: number\n+  ) {\n+    super();\n+  }\n+\n+  override init(element: HTMLElement) {\n+    this.terminal = new Terminal({\n+      fontSize: getPlatform() === Platform.macOS ? 12 : 14,\n+      fontFamily: getMonoFont(),\n+      cols: this.cols,\n+      rows: this.rows,\n+      theme: this.theme,\n+    });\n+\n+    const linksAddon = new WebLinksAddon();\n+    const imageAddon = new ImageAddon();\n+\n+    this.addons.push(this.aspectFitAddon, linksAddon, imageAddon);\n+\n+    this.aspectFitAddon.activate(this.terminal);\n+\n+    for (const addon of this.addons) {\n+      this.terminal.loadAddon(addon);\n+    }\n+\n+    const createCanvasAddon = () => {\n+      const canvasAddon = new CanvasAddon();\n+\n+      this.addons.push(canvasAddon);\n+\n+      this.terminal.loadAddon(canvasAddon);\n+    };\n+\n+    try {\n+      const webglAddon = new WebglAddon();\n+\n+      webglAddon.onContextLoss(() => {\n+        createCanvasAddon();\n+      });\n+\n+      this.terminal.loadAddon(webglAddon);\n+\n+      this.addons.push(webglAddon);\n+    } catch {\n+      createCanvasAddon();\n+    }\n+\n+    this.terminal.open(element);\n+\n+    this.aspectFitAddon.fitWithAspectRatio(this.cols, this.rows);\n+  }\n+\n+  override apply(event: TtyEvent) {",
        "comment_created_at": "2025-09-03T11:34:16+00:00",
        "comment_author": "bl-nero",
        "comment_body": "I'm also a bit confused about these ones, especially that they both are handling different set of events.",
        "pr_file_module": null
      },
      {
        "comment_id": "2321525323",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58585,
        "pr_file": "web/packages/teleport/src/SessionRecordings/view/player/tty/TtyPlayer.ts",
        "discussion_id": "2316345466",
        "commented_code": "@@ -0,0 +1,202 @@\n+/**\n+ * Teleport\n+ * Copyright (C) 2025 Gravitational, Inc.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+import { getPlatform } from '@floating-ui/react/utils';\n+import { CanvasAddon } from '@xterm/addon-canvas';\n+import { ImageAddon } from '@xterm/addon-image';\n+import { WebLinksAddon } from '@xterm/addon-web-links';\n+import { WebglAddon } from '@xterm/addon-webgl';\n+import { ITerminalAddon, Terminal } from '@xterm/xterm';\n+\n+import { Platform } from 'design/platform';\n+import { ThemeColors } from 'design/theme';\n+import { getMonoFont } from 'design/theme/fonts';\n+\n+import { Player } from '../Player';\n+import { AspectFitAddon } from './AspectFitRatio';\n+import { EventType, type TtyEvent } from './types';\n+\n+/**\n+ * TtyPlayer is a player that connects a stream of TtyEvents to an xterm.js terminal.\n+ *\n+ * It handles rendering the terminal, applying events, and managing terminal addons.\n+ *\n+ * It supports resizing, clearing the terminal, and focusing the terminal on play/seek.\n+ * It also handles terminal themes and font settings.\n+ */\n+export class TtyPlayer extends Player<TtyEvent> {\n+  private addons: ITerminalAddon[] = [];\n+  private aspectFitAddon = new AspectFitAddon();\n+  private terminal: Terminal | null = null;\n+  private playing = false;\n+\n+  constructor(\n+    private theme: ThemeColors['terminal'],\n+    private cols: number,\n+    private rows: number\n+  ) {\n+    super();\n+  }\n+\n+  override init(element: HTMLElement) {\n+    this.terminal = new Terminal({\n+      fontSize: getPlatform() === Platform.macOS ? 12 : 14,\n+      fontFamily: getMonoFont(),\n+      cols: this.cols,\n+      rows: this.rows,\n+      theme: this.theme,\n+    });\n+\n+    const linksAddon = new WebLinksAddon();\n+    const imageAddon = new ImageAddon();\n+\n+    this.addons.push(this.aspectFitAddon, linksAddon, imageAddon);\n+\n+    this.aspectFitAddon.activate(this.terminal);\n+\n+    for (const addon of this.addons) {\n+      this.terminal.loadAddon(addon);\n+    }\n+\n+    const createCanvasAddon = () => {\n+      const canvasAddon = new CanvasAddon();\n+\n+      this.addons.push(canvasAddon);\n+\n+      this.terminal.loadAddon(canvasAddon);\n+    };\n+\n+    try {\n+      const webglAddon = new WebglAddon();\n+\n+      webglAddon.onContextLoss(() => {\n+        createCanvasAddon();\n+      });\n+\n+      this.terminal.loadAddon(webglAddon);\n+\n+      this.addons.push(webglAddon);\n+    } catch {\n+      createCanvasAddon();\n+    }\n+\n+    this.terminal.open(element);\n+\n+    this.aspectFitAddon.fitWithAspectRatio(this.cols, this.rows);\n+  }\n+\n+  override apply(event: TtyEvent) {",
        "comment_created_at": "2025-09-04T10:11:05+00:00",
        "comment_author": "ryanclark",
        "comment_body": "I've moved this to the target PR as I needed it for the types - https://github.com/gravitational/teleport/pull/58584\r\n\r\nI added JSDoc there, and made the methods more descriptive",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2319973545",
    "pr_number": 58626,
    "pr_file": "web/packages/teleport/src/services/userPreferences/discoverPreference.ts",
    "created_at": "2025-09-03T19:27:18+00:00",
    "commented_code": "// Applications:\n   ApplicationWebHttpProxy = 'application-web-http-proxy',\n   ApplicationAwsCliConsole = 'application-aws-cli-console',\n+  ApplicationAwsRolesAnywhere = 'application-aws-iam-roles-anywhere',",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2319973545",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58626,
        "pr_file": "web/packages/teleport/src/services/userPreferences/discoverPreference.ts",
        "discussion_id": "2319973545",
        "commented_code": "@@ -39,6 +39,7 @@ export enum DiscoverGuideId {\n   // Applications:\n   ApplicationWebHttpProxy = 'application-web-http-proxy',\n   ApplicationAwsCliConsole = 'application-aws-cli-console',\n+  ApplicationAwsRolesAnywhere = 'application-aws-iam-roles-anywhere',",
        "comment_created_at": "2025-09-03T19:27:18+00:00",
        "comment_author": "kimlisa",
        "comment_body": "since they are both referring to cli console, can you put a comment above like\r\n\r\n```ts\r\nApplicationAwsCliConsole = 'application-aws-cli-console', // AWS OIDC IdP\r\n```",
        "pr_file_module": null
      }
    ]
  }
]