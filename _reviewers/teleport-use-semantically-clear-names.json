[
  {
    "discussion_id": "2319508691",
    "pr_number": 58520,
    "pr_file": "api/proto/teleport/join/v1/joinservice.proto",
    "created_at": "2025-09-03T16:31:38+00:00",
    "commented_code": "+// Copyright 2025 Gravitational, Inc.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+syntax = \"proto3\";\n+\n+package teleport.join.v1;\n+\n+import \"google/protobuf/timestamp.proto\";\n+\n+option go_package = \"github.com/gravitational/teleport/api/gen/proto/go/teleport/join/v1;joinv1\";\n+\n+// ClientInit is the first message sent from the client during the join process, it\n+// holds parameters common to all join methods.\n+message ClientInit {\n+  // ProxySuppliedParameters holds parameters set by the Proxy when nodes join\n+  // via the proxy address. They must only be trusted if the incoming join\n+  // request is authenticated as the Proxy.\n+  message ProxySuppliedParameters {\n+    // RemoteAddr is the remote address of the host requesting a host certificate.\n+    // It replaces 0.0.0.0 in the list of additional principals.\n+    string remote_addr = 1;\n+    // ClientVersion is the Teleport version of the client attempting to join.\n+    string client_version = 2;\n+  }\n+  // JoinMethod is the name of the join method that the client is configured to use.\n+  // This parameter is optional, the client can leave it empty to allow the\n+  // server to determine the join method based on the provision token named by\n+  // TokenName, it will be sent to the client in the ServerInit message.\n+  optional string join_method = 1;\n+  // TokenName is the name of the join token.\n+  // This is a secret if using the token join method, otherwise it is a\n+  // non-secret name of a provision token resource.\n+  string token_name = 2;\n+  // NodeName is the user-friendly node name.\n+  string node_name = 3;",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2319508691",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58520,
        "pr_file": "api/proto/teleport/join/v1/joinservice.proto",
        "discussion_id": "2319508691",
        "commented_code": "@@ -0,0 +1,158 @@\n+// Copyright 2025 Gravitational, Inc.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+syntax = \"proto3\";\n+\n+package teleport.join.v1;\n+\n+import \"google/protobuf/timestamp.proto\";\n+\n+option go_package = \"github.com/gravitational/teleport/api/gen/proto/go/teleport/join/v1;joinv1\";\n+\n+// ClientInit is the first message sent from the client during the join process, it\n+// holds parameters common to all join methods.\n+message ClientInit {\n+  // ProxySuppliedParameters holds parameters set by the Proxy when nodes join\n+  // via the proxy address. They must only be trusted if the incoming join\n+  // request is authenticated as the Proxy.\n+  message ProxySuppliedParameters {\n+    // RemoteAddr is the remote address of the host requesting a host certificate.\n+    // It replaces 0.0.0.0 in the list of additional principals.\n+    string remote_addr = 1;\n+    // ClientVersion is the Teleport version of the client attempting to join.\n+    string client_version = 2;\n+  }\n+  // JoinMethod is the name of the join method that the client is configured to use.\n+  // This parameter is optional, the client can leave it empty to allow the\n+  // server to determine the join method based on the provision token named by\n+  // TokenName, it will be sent to the client in the ServerInit message.\n+  optional string join_method = 1;\n+  // TokenName is the name of the join token.\n+  // This is a secret if using the token join method, otherwise it is a\n+  // non-secret name of a provision token resource.\n+  string token_name = 2;\n+  // NodeName is the user-friendly node name.\n+  string node_name = 3;",
        "comment_created_at": "2025-09-03T16:31:38+00:00",
        "comment_author": "rosstimothy",
        "comment_body": "What do you think about taking the opportunity to use a different name here? Node has traditionally been used to mean ssh_service, but joining is not limited to ssh_service. What do you think about something like the following?\n\n```suggestion\n  // FriendlyName is the user-friendly name of the Teleport resource attempting to join.\n  string friendly_name = 3;\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2319834348",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58520,
        "pr_file": "api/proto/teleport/join/v1/joinservice.proto",
        "discussion_id": "2319508691",
        "commented_code": "@@ -0,0 +1,158 @@\n+// Copyright 2025 Gravitational, Inc.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+syntax = \"proto3\";\n+\n+package teleport.join.v1;\n+\n+import \"google/protobuf/timestamp.proto\";\n+\n+option go_package = \"github.com/gravitational/teleport/api/gen/proto/go/teleport/join/v1;joinv1\";\n+\n+// ClientInit is the first message sent from the client during the join process, it\n+// holds parameters common to all join methods.\n+message ClientInit {\n+  // ProxySuppliedParameters holds parameters set by the Proxy when nodes join\n+  // via the proxy address. They must only be trusted if the incoming join\n+  // request is authenticated as the Proxy.\n+  message ProxySuppliedParameters {\n+    // RemoteAddr is the remote address of the host requesting a host certificate.\n+    // It replaces 0.0.0.0 in the list of additional principals.\n+    string remote_addr = 1;\n+    // ClientVersion is the Teleport version of the client attempting to join.\n+    string client_version = 2;\n+  }\n+  // JoinMethod is the name of the join method that the client is configured to use.\n+  // This parameter is optional, the client can leave it empty to allow the\n+  // server to determine the join method based on the provision token named by\n+  // TokenName, it will be sent to the client in the ServerInit message.\n+  optional string join_method = 1;\n+  // TokenName is the name of the join token.\n+  // This is a secret if using the token join method, otherwise it is a\n+  // non-secret name of a provision token resource.\n+  string token_name = 2;\n+  // NodeName is the user-friendly node name.\n+  string node_name = 3;",
        "comment_created_at": "2025-09-03T18:23:03+00:00",
        "comment_author": "nklaassen",
        "comment_body": "While I'm certainly open to changing it, this does come from `teleport.nodename` in teleport.yaml, and defaults to the hostname. It ends up being a principal in the issued cert so it's a bit more than a \"friendly\" name. Wdyt about calling it HostName?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2319512014",
    "pr_number": 58520,
    "pr_file": "api/proto/teleport/join/v1/joinservice.proto",
    "created_at": "2025-09-03T16:33:13+00:00",
    "commented_code": "+// Copyright 2025 Gravitational, Inc.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+syntax = \"proto3\";\n+\n+package teleport.join.v1;\n+\n+import \"google/protobuf/timestamp.proto\";\n+\n+option go_package = \"github.com/gravitational/teleport/api/gen/proto/go/teleport/join/v1;joinv1\";\n+\n+// ClientInit is the first message sent from the client during the join process, it\n+// holds parameters common to all join methods.\n+message ClientInit {\n+  // ProxySuppliedParameters holds parameters set by the Proxy when nodes join\n+  // via the proxy address. They must only be trusted if the incoming join\n+  // request is authenticated as the Proxy.\n+  message ProxySuppliedParameters {\n+    // RemoteAddr is the remote address of the host requesting a host certificate.\n+    // It replaces 0.0.0.0 in the list of additional principals.\n+    string remote_addr = 1;\n+    // ClientVersion is the Teleport version of the client attempting to join.\n+    string client_version = 2;\n+  }\n+  // JoinMethod is the name of the join method that the client is configured to use.\n+  // This parameter is optional, the client can leave it empty to allow the\n+  // server to determine the join method based on the provision token named by\n+  // TokenName, it will be sent to the client in the ServerInit message.\n+  optional string join_method = 1;\n+  // TokenName is the name of the join token.\n+  // This is a secret if using the token join method, otherwise it is a\n+  // non-secret name of a provision token resource.\n+  string token_name = 2;\n+  // NodeName is the user-friendly node name.\n+  string node_name = 3;\n+  // Role is the system role requested, e.g. Proxy, Node, Instance.\n+  string role = 4;",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2319512014",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58520,
        "pr_file": "api/proto/teleport/join/v1/joinservice.proto",
        "discussion_id": "2319512014",
        "commented_code": "@@ -0,0 +1,158 @@\n+// Copyright 2025 Gravitational, Inc.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+syntax = \"proto3\";\n+\n+package teleport.join.v1;\n+\n+import \"google/protobuf/timestamp.proto\";\n+\n+option go_package = \"github.com/gravitational/teleport/api/gen/proto/go/teleport/join/v1;joinv1\";\n+\n+// ClientInit is the first message sent from the client during the join process, it\n+// holds parameters common to all join methods.\n+message ClientInit {\n+  // ProxySuppliedParameters holds parameters set by the Proxy when nodes join\n+  // via the proxy address. They must only be trusted if the incoming join\n+  // request is authenticated as the Proxy.\n+  message ProxySuppliedParameters {\n+    // RemoteAddr is the remote address of the host requesting a host certificate.\n+    // It replaces 0.0.0.0 in the list of additional principals.\n+    string remote_addr = 1;\n+    // ClientVersion is the Teleport version of the client attempting to join.\n+    string client_version = 2;\n+  }\n+  // JoinMethod is the name of the join method that the client is configured to use.\n+  // This parameter is optional, the client can leave it empty to allow the\n+  // server to determine the join method based on the provision token named by\n+  // TokenName, it will be sent to the client in the ServerInit message.\n+  optional string join_method = 1;\n+  // TokenName is the name of the join token.\n+  // This is a secret if using the token join method, otherwise it is a\n+  // non-secret name of a provision token resource.\n+  string token_name = 2;\n+  // NodeName is the user-friendly node name.\n+  string node_name = 3;\n+  // Role is the system role requested, e.g. Proxy, Node, Instance.\n+  string role = 4;",
        "comment_created_at": "2025-09-03T16:33:13+00:00",
        "comment_author": "rosstimothy",
        "comment_body": "Should we take the opportunity to rename this to `system_role` to reduce any ambiguity?",
        "pr_file_module": null
      },
      {
        "comment_id": "2320371356",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58520,
        "pr_file": "api/proto/teleport/join/v1/joinservice.proto",
        "discussion_id": "2319512014",
        "commented_code": "@@ -0,0 +1,158 @@\n+// Copyright 2025 Gravitational, Inc.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+syntax = \"proto3\";\n+\n+package teleport.join.v1;\n+\n+import \"google/protobuf/timestamp.proto\";\n+\n+option go_package = \"github.com/gravitational/teleport/api/gen/proto/go/teleport/join/v1;joinv1\";\n+\n+// ClientInit is the first message sent from the client during the join process, it\n+// holds parameters common to all join methods.\n+message ClientInit {\n+  // ProxySuppliedParameters holds parameters set by the Proxy when nodes join\n+  // via the proxy address. They must only be trusted if the incoming join\n+  // request is authenticated as the Proxy.\n+  message ProxySuppliedParameters {\n+    // RemoteAddr is the remote address of the host requesting a host certificate.\n+    // It replaces 0.0.0.0 in the list of additional principals.\n+    string remote_addr = 1;\n+    // ClientVersion is the Teleport version of the client attempting to join.\n+    string client_version = 2;\n+  }\n+  // JoinMethod is the name of the join method that the client is configured to use.\n+  // This parameter is optional, the client can leave it empty to allow the\n+  // server to determine the join method based on the provision token named by\n+  // TokenName, it will be sent to the client in the ServerInit message.\n+  optional string join_method = 1;\n+  // TokenName is the name of the join token.\n+  // This is a secret if using the token join method, otherwise it is a\n+  // non-secret name of a provision token resource.\n+  string token_name = 2;\n+  // NodeName is the user-friendly node name.\n+  string node_name = 3;\n+  // Role is the system role requested, e.g. Proxy, Node, Instance.\n+  string role = 4;",
        "comment_created_at": "2025-09-03T22:31:55+00:00",
        "comment_author": "nklaassen",
        "comment_body": "renamed to system_role in the latest",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2300455745",
    "pr_number": 58333,
    "pr_file": "docs/pages/machine-workload-identity/mwi-use-cases/workload-mwi.mdx",
    "created_at": "2025-08-26T09:50:55+00:00",
    "commented_code": "+---\n+title: App to App mTLS with Machine & Workload Identity",
    "repo_full_name": "gravitational/teleport",
    "discussion_comments": [
      {
        "comment_id": "2300455745",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58333,
        "pr_file": "docs/pages/machine-workload-identity/mwi-use-cases/workload-mwi.mdx",
        "discussion_id": "2300455745",
        "commented_code": "@@ -0,0 +1,22 @@\n+---\n+title: App to App mTLS with Machine & Workload Identity",
        "comment_created_at": "2025-08-26T09:50:55+00:00",
        "comment_author": "strideynet",
        "comment_body": "I think that \"App to App\" would be better replaced with \"Service to Service\" as this seems to be the more common terminology/will probably align more with what people search.",
        "pr_file_module": null
      },
      {
        "comment_id": "2302005631",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58333,
        "pr_file": "docs/pages/machine-workload-identity/mwi-use-cases/workload-mwi.mdx",
        "discussion_id": "2300455745",
        "commented_code": "@@ -0,0 +1,22 @@\n+---\n+title: App to App mTLS with Machine & Workload Identity",
        "comment_created_at": "2025-08-26T19:57:25+00:00",
        "comment_author": "thedevelopnik",
        "comment_body": "Works for me.",
        "pr_file_module": null
      },
      {
        "comment_id": "2302044398",
        "repo_full_name": "gravitational/teleport",
        "pr_number": 58333,
        "pr_file": "docs/pages/machine-workload-identity/mwi-use-cases/workload-mwi.mdx",
        "discussion_id": "2300455745",
        "commented_code": "@@ -0,0 +1,22 @@\n+---\n+title: App to App mTLS with Machine & Workload Identity",
        "comment_created_at": "2025-08-26T20:15:58+00:00",
        "comment_author": "mmcallister",
        "comment_body": "Sounds good!",
        "pr_file_module": null
      }
    ]
  }
]