[
  {
    "discussion_id": "2043351372",
    "pr_number": 7606,
    "pr_file": "proto/internal/temporal/server/api/persistence/v1/chasm.proto",
    "created_at": "2025-04-15T02:05:01+00:00",
    "commented_code": "temporal.api.common.v1.DataBlob data = 4;\n         // Versioned transition of the Entity when the task was created.\n         VersionedTransition versioned_transition = 5;\n+        // The xth task generated in this versioned transition.\n+        // Together with the versioned transition, this is a unique identifier for\n+        // this task.\n+        int64 versioned_transition_offset = 6;\n+        // If a physical task is created for this task in this cluster.\n+        // NOTE: this is a cluster-specific field and can not be replicated.\n+        // Changes to this field also doesn't require an increase in versioned transition. \n+        int32 physical_task_status = 7;",
    "repo_full_name": "temporalio/temporal",
    "discussion_comments": [
      {
        "comment_id": "2043351372",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7606,
        "pr_file": "proto/internal/temporal/server/api/persistence/v1/chasm.proto",
        "discussion_id": "2043351372",
        "commented_code": "@@ -61,11 +61,24 @@ message ChasmComponentAttributes {\n         temporal.api.common.v1.DataBlob data = 4;\n         // Versioned transition of the Entity when the task was created.\n         VersionedTransition versioned_transition = 5;\n+        // The xth task generated in this versioned transition.\n+        // Together with the versioned transition, this is a unique identifier for\n+        // this task.\n+        int64 versioned_transition_offset = 6;\n+        // If a physical task is created for this task in this cluster.\n+        // NOTE: this is a cluster-specific field and can not be replicated.\n+        // Changes to this field also doesn't require an increase in versioned transition. \n+        int32 physical_task_status = 7;",
        "comment_created_at": "2025-04-15T02:05:01+00:00",
        "comment_author": "yycptt",
        "comment_body": "ok I still think this is the easier and more intuitive approach.\r\n\r\nThe alternative I was exploring was: store a list of timestamps in mutable state (so tree level, and, similar to physical_task_status, a cluster specific field) for which physical pure tasks have been created. New physical pure tasks can generated if the scheduled timestamp is smaller than all timestamps tracked in the list. When processing a physical pure tasks, remove all timestamps less than now from the list. \r\nNeither fields added in the PR will be needed in this approach. Also no task status carryover logic upon replication.\r\n\r\nThe main complexity with that approach however is that we need to update this timestamp list whenever a node/task is removed. Also since we don't really know the timestamp corresponds to which node/task, we have to check the entire tree before removing a timestamp (or maintain an in memory ref count for all timestamps). \r\nIf we don't update the list when node/tasks is removed, later at task processing time, we'll have to do an additional write operation to update the list and generate new physical pure tasks even if no chasm component task actually get processed.\r\n\r\nSo I feel maintaining this list is more complex than doing the carryover logic. The `versioned_transition_offset` can be used for purposes other than carrying over task status. For example, the physical side effect task can now store the offset and point a particular component task instead of duplicating task data again in history queues.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2043370722",
    "pr_number": 7606,
    "pr_file": "proto/internal/temporal/server/api/persistence/v1/chasm.proto",
    "created_at": "2025-04-15T02:25:50+00:00",
    "commented_code": "// reference was created. Can be used to invalidate this reference.\n     VersionedTransition component_last_update_versioned_transition = 2;\n \n-    // Full path to the component.\n-    repeated string path = 3;\n+    // Encoded full path to the component.\n+    string path = 3;",
    "repo_full_name": "temporalio/temporal",
    "discussion_comments": [
      {
        "comment_id": "2043370722",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7606,
        "pr_file": "proto/internal/temporal/server/api/persistence/v1/chasm.proto",
        "discussion_id": "2043370722",
        "commented_code": "@@ -86,8 +99,8 @@ message ChasmComponentRef {\n     // reference was created. Can be used to invalidate this reference.\n     VersionedTransition component_last_update_versioned_transition = 2;\n \n-    // Full path to the component.\n-    repeated string path = 3;\n+    // Encoded full path to the component.\n+    string path = 3;",
        "comment_created_at": "2025-04-15T02:25:50+00:00",
        "comment_author": "yycptt",
        "comment_body": "Makes the generate task logic a bit easier since we already have the encoded path for all updated nodes and thus avoiding creating the string slices for node names.\r\n\r\nWhen processing the task, we need to do an additional decoding step. However, as the TODO commented added in the PathEncoder interface says, we can do that without any additional allocation by having the Decode method return an iterator.\r\n",
        "pr_file_module": null
      }
    ]
  }
]