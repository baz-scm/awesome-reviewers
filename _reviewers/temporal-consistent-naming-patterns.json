[
  {
    "discussion_id": "2183576317",
    "pr_number": 8004,
    "pr_file": "proto/internal/temporal/server/api/matchingservice/v1/request_response.proto",
    "created_at": "2025-07-03T19:03:23+00:00",
    "commented_code": "message ListWorkersResponse {\n     repeated temporal.api.worker.v1.WorkerInfo workers_info = 1;\n     bytes next_page_token = 2;\n-}\n\\ No newline at end of file\n+}\n+\n+message ConfigureTaskQueueRequest {",
    "repo_full_name": "temporalio/temporal",
    "discussion_comments": [
      {
        "comment_id": "2183576317",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 8004,
        "pr_file": "proto/internal/temporal/server/api/matchingservice/v1/request_response.proto",
        "discussion_id": "2183576317",
        "commented_code": "@@ -590,4 +590,14 @@ message ListWorkersRequest {\n message ListWorkersResponse {\n     repeated temporal.api.worker.v1.WorkerInfo workers_info = 1;\n     bytes next_page_token = 2;\n-}\n\\ No newline at end of file\n+}\n+\n+message ConfigureTaskQueueRequest {",
        "comment_created_at": "2025-07-03T19:03:23+00:00",
        "comment_author": "dnr",
        "comment_body": "oh, I meant that rename comment as a joke, I don't think we should rename it, it's better (more readable, less confusing) to be consistent with the name in workflowservice.",
        "pr_file_module": null
      },
      {
        "comment_id": "2183616668",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 8004,
        "pr_file": "proto/internal/temporal/server/api/matchingservice/v1/request_response.proto",
        "discussion_id": "2183576317",
        "commented_code": "@@ -590,4 +590,14 @@ message ListWorkersRequest {\n message ListWorkersResponse {\n     repeated temporal.api.worker.v1.WorkerInfo workers_info = 1;\n     bytes next_page_token = 2;\n-}\n\\ No newline at end of file\n+}\n+\n+message ConfigureTaskQueueRequest {",
        "comment_created_at": "2025-07-03T19:29:18+00:00",
        "comment_author": "sivagirish81",
        "comment_body": "Yeah. I really like that we have the linter enforced and it did make sense to rename it. Considering it adheres to the linter rules and as far as the matching service is concerned it is still relatable. I don't mind sticking to this but yeah the UpdateTaskQueueConfigRequest does match exactly with the request in the workflowservice and that's the convention we follow right to keep it identical to whatever is being sent from the workflowservice.",
        "pr_file_module": null
      },
      {
        "comment_id": "2183901343",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 8004,
        "pr_file": "proto/internal/temporal/server/api/matchingservice/v1/request_response.proto",
        "discussion_id": "2183576317",
        "commented_code": "@@ -590,4 +590,14 @@ message ListWorkersRequest {\n message ListWorkersResponse {\n     repeated temporal.api.worker.v1.WorkerInfo workers_info = 1;\n     bytes next_page_token = 2;\n-}\n\\ No newline at end of file\n+}\n+\n+message ConfigureTaskQueueRequest {",
        "comment_created_at": "2025-07-03T23:03:05+00:00",
        "comment_author": "sivagirish81",
        "comment_body": "Reverted it to UpdateTaskQueueConfig.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2162822981",
    "pr_number": 7950,
    "pr_file": "proto/internal/temporal/server/api/persistence/v1/tasks.proto",
    "created_at": "2025-06-24T02:05:58+00:00",
    "commented_code": "// task column\n message AllocatedTaskInfo {\n     TaskInfo data = 1;\n+    int64 pass_number = 3;",
    "repo_full_name": "temporalio/temporal",
    "discussion_comments": [
      {
        "comment_id": "2162822981",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7950,
        "pr_file": "proto/internal/temporal/server/api/persistence/v1/tasks.proto",
        "discussion_id": "2162822981",
        "commented_code": "@@ -14,6 +14,7 @@ import \"temporal/server/api/taskqueue/v1/message.proto\";\n // task column\n message AllocatedTaskInfo {\n     TaskInfo data = 1;\n+    int64 pass_number = 3;",
        "comment_created_at": "2025-06-24T02:05:58+00:00",
        "comment_author": "ychebotarev",
        "comment_body": "one overall comment, and reason I want to keep it open.\r\nDid you consider combining \"pass\" and \"id\" into the same structure? (level?)\r\nThere is many places where you have this:\r\n```\r\nsomethingPass\r\nsomethingId\r\n```\r\n\r\nKeeping them separately makes it harder to read, easier to make a mistake, etc.\r\nI understand it will not be possible everywhere (in proto to be specific, though I'm not sure - this is not external?)",
        "pr_file_module": null
      },
      {
        "comment_id": "2162843940",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7950,
        "pr_file": "proto/internal/temporal/server/api/persistence/v1/tasks.proto",
        "discussion_id": "2162822981",
        "commented_code": "@@ -14,6 +14,7 @@ import \"temporal/server/api/taskqueue/v1/message.proto\";\n // task column\n message AllocatedTaskInfo {\n     TaskInfo data = 1;\n+    int64 pass_number = 3;",
        "comment_created_at": "2025-06-24T02:32:53+00:00",
        "comment_author": "dnr",
        "comment_body": "Yeah.. I did it this way since several of the \"id\" fields are already there and I wanted to reuse them instead of having a duplicate id field. I think with a few wrapper functions we can minimize the risk of mistakes. Also it's more efficient to inline it instead of another message with just two fields.\r\n\r\nI'm like 80% sure I want to do it this way. Maybe let's reconsider after the whole first batch of PRs?",
        "pr_file_module": null
      },
      {
        "comment_id": "2164480970",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7950,
        "pr_file": "proto/internal/temporal/server/api/persistence/v1/tasks.proto",
        "discussion_id": "2162822981",
        "commented_code": "@@ -14,6 +14,7 @@ import \"temporal/server/api/taskqueue/v1/message.proto\";\n // task column\n message AllocatedTaskInfo {\n     TaskInfo data = 1;\n+    int64 pass_number = 3;",
        "comment_created_at": "2025-06-24T16:48:24+00:00",
        "comment_author": "ychebotarev",
        "comment_body": "I understand the concern with proto, especially if it is already stored somewhere and we need to care about backward compatibility. For those cases we can leave it as is. (or we may still add Level, dupblicate it, and eventually deprecate old field. But I agree this can be done later).\r\n\r\nBut with the new code, with proto messages that are not stored and we control(like InternalTaskQueueStatus and SubqueueInfo?) - it will benefit future us if its done now. I understand it is annoying to do, but If we delay it will be even worth :)\r\n\r\nsometimes it looks inconsistent. Like:\r\n```\r\n int64 ack_level_pass = 4;\r\n int64 ack_level = 2;\r\n```\r\nshould it be `ack_level_id`? With common structure it will be\r\n`Level ack_level = 2;` - clean, readable\r\n\r\nAlso in this specific structure - `pass_number` +'task_id' - should it be 'task_pass'? (so together they are \"task level\"). It is not clear that they are paired. With level it will be:\r\n`Level task_level = 2;` or just 'Level level = 2'\r\n\r\nBasically - this will be a great favour for future us, especially less experienced, if we do the right thing now.\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2164710902",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7950,
        "pr_file": "proto/internal/temporal/server/api/persistence/v1/tasks.proto",
        "discussion_id": "2162822981",
        "commented_code": "@@ -14,6 +14,7 @@ import \"temporal/server/api/taskqueue/v1/message.proto\";\n // task column\n message AllocatedTaskInfo {\n     TaskInfo data = 1;\n+    int64 pass_number = 3;",
        "comment_created_at": "2025-06-24T19:06:58+00:00",
        "comment_author": "dnr",
        "comment_body": "I didn't want to rename the existing fields because of compatibility, but actually that only matters for proto-json which we're not using internally, so I'll rename them.",
        "pr_file_module": null
      },
      {
        "comment_id": "2164739535",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7950,
        "pr_file": "proto/internal/temporal/server/api/persistence/v1/tasks.proto",
        "discussion_id": "2162822981",
        "commented_code": "@@ -14,6 +14,7 @@ import \"temporal/server/api/taskqueue/v1/message.proto\";\n // task column\n message AllocatedTaskInfo {\n     TaskInfo data = 1;\n+    int64 pass_number = 3;",
        "comment_created_at": "2025-06-24T19:25:20+00:00",
        "comment_author": "dnr",
        "comment_body": "On the idea of a submessage: messages with the new fields will be persisted in a different table, so it's not about compatibility per se. Though I would like to be able to use the same messages for both tables.\r\n\r\nFor AllocatedTaskInfo: we have a lot of those in memory and in db so I want to pay attention to efficiency there. I think it makes sense to just inline the two fields.\r\n\r\nFor SubqueueInfo: this is persisted, but not that many of them, so we could use a new field.\r\n\r\nFor InternalTaskQueueStatus: yes, could use a new field.\r\n\r\nI really hate having to do an extra allocation and chase another pointer just for these values. If we were using gogo it could be non-nullable and embedded, or we could just write custom getters and setters to avoid misuse :(\r\n\r\nLet me try it and see how it looks.",
        "pr_file_module": null
      },
      {
        "comment_id": "2164856904",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7950,
        "pr_file": "proto/internal/temporal/server/api/persistence/v1/tasks.proto",
        "discussion_id": "2162822981",
        "commented_code": "@@ -14,6 +14,7 @@ import \"temporal/server/api/taskqueue/v1/message.proto\";\n // task column\n message AllocatedTaskInfo {\n     TaskInfo data = 1;\n+    int64 pass_number = 3;",
        "comment_created_at": "2025-06-24T20:36:32+00:00",
        "comment_author": "dnr",
        "comment_body": "I tried it. Mostly it's about the same readability since we still need wrappers to convert to/from structs. Some parts are slightly clearer. Overall I'd say slight improvement for readability. Adapting the existing code took `6 files changed, 74 insertions(+), 73 deletions(-)`  But it reduces the diff from main slightly.\r\n\r\nOverall I'm unhappy about the tradeoff but I'll go with it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2136876342",
    "pr_number": 7880,
    "pr_file": "proto/internal/temporal/server/api/matchingservice/v1/request_response.proto",
    "created_at": "2025-06-10T04:16:34+00:00",
    "commented_code": "int64 table_version = 2;\n     repeated temporal.server.api.persistence.v1.NexusEndpointEntry entries = 3;\n }\n+\n+message RecordWorkerHeartbeatRequest {\n+    string namespace_id = 1;\n+    temporal.api.workflowservice.v1.RecordWorkerHeartbeatRequest api_request = 3;",
    "repo_full_name": "temporalio/temporal",
    "discussion_comments": [
      {
        "comment_id": "2136876342",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7880,
        "pr_file": "proto/internal/temporal/server/api/matchingservice/v1/request_response.proto",
        "discussion_id": "2136876342",
        "commented_code": "@@ -541,3 +542,24 @@ message ListNexusEndpointsResponse {\n     int64 table_version = 2;\n     repeated temporal.server.api.persistence.v1.NexusEndpointEntry entries = 3;\n }\n+\n+message RecordWorkerHeartbeatRequest {\n+    string namespace_id = 1;\n+    temporal.api.workflowservice.v1.RecordWorkerHeartbeatRequest api_request = 3;",
        "comment_created_at": "2025-06-10T04:16:34+00:00",
        "comment_author": "dnr",
        "comment_body": "```suggestion\r\n    temporal.api.workflowservice.v1.RecordWorkerHeartbeatRequest api_request = 2;\r\n```\r\n?\r\ndoesn't matter, just wondering",
        "pr_file_module": null
      },
      {
        "comment_id": "2136877453",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7880,
        "pr_file": "proto/internal/temporal/server/api/matchingservice/v1/request_response.proto",
        "discussion_id": "2136876342",
        "commented_code": "@@ -541,3 +542,24 @@ message ListNexusEndpointsResponse {\n     int64 table_version = 2;\n     repeated temporal.server.api.persistence.v1.NexusEndpointEntry entries = 3;\n }\n+\n+message RecordWorkerHeartbeatRequest {\n+    string namespace_id = 1;\n+    temporal.api.workflowservice.v1.RecordWorkerHeartbeatRequest api_request = 3;",
        "comment_created_at": "2025-06-10T04:17:58+00:00",
        "comment_author": "dnr",
        "comment_body": "also usually it's just called `request`",
        "pr_file_module": null
      },
      {
        "comment_id": "2138436602",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7880,
        "pr_file": "proto/internal/temporal/server/api/matchingservice/v1/request_response.proto",
        "discussion_id": "2136876342",
        "commented_code": "@@ -541,3 +542,24 @@ message ListNexusEndpointsResponse {\n     int64 table_version = 2;\n     repeated temporal.server.api.persistence.v1.NexusEndpointEntry entries = 3;\n }\n+\n+message RecordWorkerHeartbeatRequest {\n+    string namespace_id = 1;\n+    temporal.api.workflowservice.v1.RecordWorkerHeartbeatRequest api_request = 3;",
        "comment_created_at": "2025-06-10T17:29:00+00:00",
        "comment_author": "ychebotarev",
        "comment_body": "the input parameter will be caller request, and I don't like \"request.request\". If you look at other request wrappers we are calling them \"query_request\", \"completed_request\".\r\nI will rename to \"heartbeart_request\"",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2070477829",
    "pr_number": 7692,
    "pr_file": "proto/internal/temporal/server/api/historyservice/v1/request_response.proto",
    "created_at": "2025-05-01T16:25:41+00:00",
    "commented_code": "string namespace_id = 1;\n     temporal.api.common.v1.WorkflowExecution execution = 2;\n+    string target_cluster_id = 3;",
    "repo_full_name": "temporalio/temporal",
    "discussion_comments": [
      {
        "comment_id": "2070477829",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7692,
        "pr_file": "proto/internal/temporal/server/api/historyservice/v1/request_response.proto",
        "discussion_id": "2070477829",
        "commented_code": "@@ -886,6 +886,7 @@ message GenerateLastHistoryReplicationTasksRequest {\n \n     string namespace_id = 1;\n     temporal.api.common.v1.WorkflowExecution execution = 2;\n+    string target_cluster_id = 3;",
        "comment_created_at": "2025-05-01T16:25:41+00:00",
        "comment_author": "yux0",
        "comment_body": "Could we have a list of target clusters?",
        "pr_file_module": null
      },
      {
        "comment_id": "2070480006",
        "repo_full_name": "temporalio/temporal",
        "pr_number": 7692,
        "pr_file": "proto/internal/temporal/server/api/historyservice/v1/request_response.proto",
        "discussion_id": "2070477829",
        "commented_code": "@@ -886,6 +886,7 @@ message GenerateLastHistoryReplicationTasksRequest {\n \n     string namespace_id = 1;\n     temporal.api.common.v1.WorkflowExecution execution = 2;\n+    string target_cluster_id = 3;",
        "comment_created_at": "2025-05-01T16:27:32+00:00",
        "comment_author": "yux0",
        "comment_body": "the cluster id means the initial failover version. either use it with the IFV or rename to cluster name",
        "pr_file_module": null
      }
    ]
  }
]