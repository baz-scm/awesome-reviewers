[
  {
    "discussion_id": "1197059905",
    "pr_number": 60536,
    "pr_file": "tensorflow/tools/tf_windows_build_dockerfiles/Dockerfile_py3.11",
    "created_at": "2023-05-17T21:14:35+00:00",
    "commented_code": "+# This Dockerfile creates an image that:\n+# - Has the correct MTU setting for networking from inside the container to work.\n+# - Has Visual Studio 2019 Build Tools installed.\n+# - Has MSVC 14.29 and clang 14.0 installed\n+# - Has msys2 + git, curl, zip, unzip installed.\n+# - Has Python 3.11 installed.\n+# - Has Bazelisk v1.16.0 installed.\n+FROM mcr.microsoft.com/windows/servercore:ltsc2019\n+SHELL [\"powershell.exe\", \"-ExecutionPolicy\", \"Bypass\", \"-Command\", \"$ErrorActionPreference='Stop'; $ProgressPreference='SilentlyContinue'; $VerbosePreference = 'Continue';\"]\n+RUN netsh interface ipv4 set subinterface \\\"vEthernet (Ethernet)\\\" mtu=1460 store=persistent\n+\n+RUN md C:\\TMP\n+RUN (New-Object Net.WebClient).DownloadFile('https://aka.ms/vs/16/release/vs_community.exe', 'C:\\tmp\\vs_community.exe');\n+# Install Visual Studio 2019 Build Tools.\n+SHELL [\"cmd\", \"/S\", \"/C\"]\n+RUN C:\\tmp\\vs_community.exe \\\n+        --quiet --wait --norestart --nocache \\\n+        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 \\\n+        --add Microsoft.VisualStudio.Workload.NativeDesktop \\\n+        --add Microsoft.VisualStudio.Component.VC.14.29.x86.x64 \\\n+        --add Microsoft.VisualStudio.Component.Windows10SDK.20348 \\\n+ || IF \"%ERRORLEVEL%\"==\"3010\" EXIT 0\n+SHELL [\"powershell.exe\", \"-ExecutionPolicy\", \"Bypass\", \"-Command\", \"$ErrorActionPreference='Stop'; $ProgressPreference='SilentlyContinue'; $VerbosePreference = 'Continue';\"]\n+# Install 7-Zip and add it to the path.\n+RUN (New-Object Net.WebClient).DownloadFile('https://www.7-zip.org/a/7z2201-x64.msi', '7z.msi'); \\\n+    Start-Process msiexec.exe -ArgumentList \\\"/i 7z.msi /qn /norestart /log C:\\\\tmp\\\\7z_install_log.txt\\\" -wait; \\\n+    Remove-Item .\\7z.msi;\n+# Install msys2, and add some extra tools.\n+RUN (New-Object Net.WebClient).DownloadFile( \\\n+         'https://repo.msys2.org/distrib/x86_64/msys2-base-x86_64-20220603.tar.xz', \\\n+         'msys2.tar.xz'); \\\n+    Start-Process -FilePath \\\"C:\\Program Files\\7-Zip\\7z.exe\\\" -ArgumentList 'x msys2.tar.xz -oC:\\tmp\\msys2.tar' -Wait; \\\n+    Start-Process -FilePath \\\"C:\\Program Files\\7-Zip\\7z.exe\\\" -ArgumentList 'x C:\\tmp\\msys2.tar -oC:\\tools' -Wait; \\\n+    $env:PATH = [Environment]::GetEnvironmentVariable('PATH', 'Machine') + ';C:\\tools\\msys64;C:\\tools\\msys64\\usr\\bin\\'; \\\n+    [Environment]::SetEnvironmentVariable('PATH', $env:PATH, 'Machine');\n+# Install clang.\n+RUN (New-Object Net.WebClient).DownloadFile( \\\n+         'https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.0/LLVM-14.0.0-win64.exe', \\\n+         'LLVM.exe'); \\\n+    Start-Process -FilePath \\\"C:\\Program Files\\7-Zip\\7z.exe\\\" -ArgumentList 'x LLVM.exe -oC:\\tools\\llvm' -Wait; \\\n+    $env:PATH = [Environment]::GetEnvironmentVariable('PATH', 'Machine') + ';C:\\tools\\llvm\\bin'; \\\n+    [Environment]::SetEnvironmentVariable('PATH', $env:PATH, 'Machine');\n+# Disable signature checking on pacman because we cannot initialize the keyring",
    "repo_full_name": "tensorflow/tensorflow",
    "discussion_comments": [
      {
        "comment_id": "1197059905",
        "repo_full_name": "tensorflow/tensorflow",
        "pr_number": 60536,
        "pr_file": "tensorflow/tools/tf_windows_build_dockerfiles/Dockerfile_py3.11",
        "discussion_id": "1197059905",
        "commented_code": "@@ -0,0 +1,113 @@\n+# This Dockerfile creates an image that:\n+# - Has the correct MTU setting for networking from inside the container to work.\n+# - Has Visual Studio 2019 Build Tools installed.\n+# - Has MSVC 14.29 and clang 14.0 installed\n+# - Has msys2 + git, curl, zip, unzip installed.\n+# - Has Python 3.11 installed.\n+# - Has Bazelisk v1.16.0 installed.\n+FROM mcr.microsoft.com/windows/servercore:ltsc2019\n+SHELL [\"powershell.exe\", \"-ExecutionPolicy\", \"Bypass\", \"-Command\", \"$ErrorActionPreference='Stop'; $ProgressPreference='SilentlyContinue'; $VerbosePreference = 'Continue';\"]\n+RUN netsh interface ipv4 set subinterface \\\"vEthernet (Ethernet)\\\" mtu=1460 store=persistent\n+\n+RUN md C:\\TMP\n+RUN (New-Object Net.WebClient).DownloadFile('https://aka.ms/vs/16/release/vs_community.exe', 'C:\\tmp\\vs_community.exe');\n+# Install Visual Studio 2019 Build Tools.\n+SHELL [\"cmd\", \"/S\", \"/C\"]\n+RUN C:\\tmp\\vs_community.exe \\\n+        --quiet --wait --norestart --nocache \\\n+        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 \\\n+        --add Microsoft.VisualStudio.Workload.NativeDesktop \\\n+        --add Microsoft.VisualStudio.Component.VC.14.29.x86.x64 \\\n+        --add Microsoft.VisualStudio.Component.Windows10SDK.20348 \\\n+ || IF \"%ERRORLEVEL%\"==\"3010\" EXIT 0\n+SHELL [\"powershell.exe\", \"-ExecutionPolicy\", \"Bypass\", \"-Command\", \"$ErrorActionPreference='Stop'; $ProgressPreference='SilentlyContinue'; $VerbosePreference = 'Continue';\"]\n+# Install 7-Zip and add it to the path.\n+RUN (New-Object Net.WebClient).DownloadFile('https://www.7-zip.org/a/7z2201-x64.msi', '7z.msi'); \\\n+    Start-Process msiexec.exe -ArgumentList \\\"/i 7z.msi /qn /norestart /log C:\\\\tmp\\\\7z_install_log.txt\\\" -wait; \\\n+    Remove-Item .\\7z.msi;\n+# Install msys2, and add some extra tools.\n+RUN (New-Object Net.WebClient).DownloadFile( \\\n+         'https://repo.msys2.org/distrib/x86_64/msys2-base-x86_64-20220603.tar.xz', \\\n+         'msys2.tar.xz'); \\\n+    Start-Process -FilePath \\\"C:\\Program Files\\7-Zip\\7z.exe\\\" -ArgumentList 'x msys2.tar.xz -oC:\\tmp\\msys2.tar' -Wait; \\\n+    Start-Process -FilePath \\\"C:\\Program Files\\7-Zip\\7z.exe\\\" -ArgumentList 'x C:\\tmp\\msys2.tar -oC:\\tools' -Wait; \\\n+    $env:PATH = [Environment]::GetEnvironmentVariable('PATH', 'Machine') + ';C:\\tools\\msys64;C:\\tools\\msys64\\usr\\bin\\'; \\\n+    [Environment]::SetEnvironmentVariable('PATH', $env:PATH, 'Machine');\n+# Install clang.\n+RUN (New-Object Net.WebClient).DownloadFile( \\\n+         'https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.0/LLVM-14.0.0-win64.exe', \\\n+         'LLVM.exe'); \\\n+    Start-Process -FilePath \\\"C:\\Program Files\\7-Zip\\7z.exe\\\" -ArgumentList 'x LLVM.exe -oC:\\tools\\llvm' -Wait; \\\n+    $env:PATH = [Environment]::GetEnvironmentVariable('PATH', 'Machine') + ';C:\\tools\\llvm\\bin'; \\\n+    [Environment]::SetEnvironmentVariable('PATH', $env:PATH, 'Machine');\n+# Disable signature checking on pacman because we cannot initialize the keyring",
        "comment_created_at": "2023-05-17T21:14:35+00:00",
        "comment_author": "mihaimaruseac",
        "comment_body": "Reminder to not disable signature checking on pacman",
        "pr_file_module": null
      },
      {
        "comment_id": "1211995346",
        "repo_full_name": "tensorflow/tensorflow",
        "pr_number": 60536,
        "pr_file": "tensorflow/tools/tf_windows_build_dockerfiles/Dockerfile_py3.11",
        "discussion_id": "1197059905",
        "commented_code": "@@ -0,0 +1,113 @@\n+# This Dockerfile creates an image that:\n+# - Has the correct MTU setting for networking from inside the container to work.\n+# - Has Visual Studio 2019 Build Tools installed.\n+# - Has MSVC 14.29 and clang 14.0 installed\n+# - Has msys2 + git, curl, zip, unzip installed.\n+# - Has Python 3.11 installed.\n+# - Has Bazelisk v1.16.0 installed.\n+FROM mcr.microsoft.com/windows/servercore:ltsc2019\n+SHELL [\"powershell.exe\", \"-ExecutionPolicy\", \"Bypass\", \"-Command\", \"$ErrorActionPreference='Stop'; $ProgressPreference='SilentlyContinue'; $VerbosePreference = 'Continue';\"]\n+RUN netsh interface ipv4 set subinterface \\\"vEthernet (Ethernet)\\\" mtu=1460 store=persistent\n+\n+RUN md C:\\TMP\n+RUN (New-Object Net.WebClient).DownloadFile('https://aka.ms/vs/16/release/vs_community.exe', 'C:\\tmp\\vs_community.exe');\n+# Install Visual Studio 2019 Build Tools.\n+SHELL [\"cmd\", \"/S\", \"/C\"]\n+RUN C:\\tmp\\vs_community.exe \\\n+        --quiet --wait --norestart --nocache \\\n+        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 \\\n+        --add Microsoft.VisualStudio.Workload.NativeDesktop \\\n+        --add Microsoft.VisualStudio.Component.VC.14.29.x86.x64 \\\n+        --add Microsoft.VisualStudio.Component.Windows10SDK.20348 \\\n+ || IF \"%ERRORLEVEL%\"==\"3010\" EXIT 0\n+SHELL [\"powershell.exe\", \"-ExecutionPolicy\", \"Bypass\", \"-Command\", \"$ErrorActionPreference='Stop'; $ProgressPreference='SilentlyContinue'; $VerbosePreference = 'Continue';\"]\n+# Install 7-Zip and add it to the path.\n+RUN (New-Object Net.WebClient).DownloadFile('https://www.7-zip.org/a/7z2201-x64.msi', '7z.msi'); \\\n+    Start-Process msiexec.exe -ArgumentList \\\"/i 7z.msi /qn /norestart /log C:\\\\tmp\\\\7z_install_log.txt\\\" -wait; \\\n+    Remove-Item .\\7z.msi;\n+# Install msys2, and add some extra tools.\n+RUN (New-Object Net.WebClient).DownloadFile( \\\n+         'https://repo.msys2.org/distrib/x86_64/msys2-base-x86_64-20220603.tar.xz', \\\n+         'msys2.tar.xz'); \\\n+    Start-Process -FilePath \\\"C:\\Program Files\\7-Zip\\7z.exe\\\" -ArgumentList 'x msys2.tar.xz -oC:\\tmp\\msys2.tar' -Wait; \\\n+    Start-Process -FilePath \\\"C:\\Program Files\\7-Zip\\7z.exe\\\" -ArgumentList 'x C:\\tmp\\msys2.tar -oC:\\tools' -Wait; \\\n+    $env:PATH = [Environment]::GetEnvironmentVariable('PATH', 'Machine') + ';C:\\tools\\msys64;C:\\tools\\msys64\\usr\\bin\\'; \\\n+    [Environment]::SetEnvironmentVariable('PATH', $env:PATH, 'Machine');\n+# Install clang.\n+RUN (New-Object Net.WebClient).DownloadFile( \\\n+         'https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.0/LLVM-14.0.0-win64.exe', \\\n+         'LLVM.exe'); \\\n+    Start-Process -FilePath \\\"C:\\Program Files\\7-Zip\\7z.exe\\\" -ArgumentList 'x LLVM.exe -oC:\\tools\\llvm' -Wait; \\\n+    $env:PATH = [Environment]::GetEnvironmentVariable('PATH', 'Machine') + ';C:\\tools\\llvm\\bin'; \\\n+    [Environment]::SetEnvironmentVariable('PATH', $env:PATH, 'Machine');\n+# Disable signature checking on pacman because we cannot initialize the keyring",
        "comment_created_at": "2023-05-31T16:30:04+00:00",
        "comment_author": "Bobarshad",
        "comment_body": "Enabling signature checking on pacman is done.",
        "pr_file_module": null
      }
    ]
  }
]