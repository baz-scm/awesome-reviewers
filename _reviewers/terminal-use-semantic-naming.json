[
  {
    "discussion_id": "2091938087",
    "pr_number": 18915,
    "pr_file": "src/cascadia/TerminalSettingsModel/ActionArgsMagic.h",
    "created_at": "2025-05-15T20:48:36+00:00",
    "commented_code": "// expanded. Pretty critical for tracking down extraneous commas, etc.\r\n \r\n // Property definitions, and JSON keys\r\n-#define DECLARE_ARGS(type, name, jsonKey, required, ...)    \\\r\n-    static constexpr std::string_view name##Key{ jsonKey }; \\\r\n+#define DECLARE_ARGS(type, name, jsonKey, required, tag, ...) \\\r\n+    static constexpr std::string_view name##Key{ jsonKey };   \\\r\n     ACTION_ARG(type, name, ##__VA_ARGS__);\r\n \r\n // Parameters to the non-default ctor\r\n-#define CTOR_PARAMS(type, name, jsonKey, required, ...) \\\r\n+#define CTOR_PARAMS(type, name, jsonKey, required, tag, ...) \\\r\n     const type &name##Param,\r\n \r\n // initializers in the ctor\r\n-#define CTOR_INIT(type, name, jsonKey, required, ...) \\\r\n+#define CTOR_INIT(type, name, jsonKey, required, tag, ...) \\\r\n     _##name{ name##Param },\r\n \r\n+// append this argument's description to the internal vector\r\n+#define APPEND_ARG_DESCRIPTION(type, name, jsonKey, required, tag, ...) \\\r\n+    _argDescriptions.push_back({ L## #name, L## #type, std::wstring_view(L## #required) != L\"false\", tag });",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2091938087",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18915,
        "pr_file": "src/cascadia/TerminalSettingsModel/ActionArgsMagic.h",
        "discussion_id": "2091938087",
        "commented_code": "@@ -54,50 +54,81 @@ struct InitListPlaceholder\n // expanded. Pretty critical for tracking down extraneous commas, etc.\r\n \r\n // Property definitions, and JSON keys\r\n-#define DECLARE_ARGS(type, name, jsonKey, required, ...)    \\\r\n-    static constexpr std::string_view name##Key{ jsonKey }; \\\r\n+#define DECLARE_ARGS(type, name, jsonKey, required, tag, ...) \\\r\n+    static constexpr std::string_view name##Key{ jsonKey };   \\\r\n     ACTION_ARG(type, name, ##__VA_ARGS__);\r\n \r\n // Parameters to the non-default ctor\r\n-#define CTOR_PARAMS(type, name, jsonKey, required, ...) \\\r\n+#define CTOR_PARAMS(type, name, jsonKey, required, tag, ...) \\\r\n     const type &name##Param,\r\n \r\n // initializers in the ctor\r\n-#define CTOR_INIT(type, name, jsonKey, required, ...) \\\r\n+#define CTOR_INIT(type, name, jsonKey, required, tag, ...) \\\r\n     _##name{ name##Param },\r\n \r\n+// append this argument's description to the internal vector\r\n+#define APPEND_ARG_DESCRIPTION(type, name, jsonKey, required, tag, ...) \\\r\n+    _argDescriptions.push_back({ L## #name, L## #type, std::wstring_view(L## #required) != L\"false\", tag });\r",
        "comment_created_at": "2025-05-15T20:48:36+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "```cpp\r\nstd::wstring_view(L## #required) != L\"false\"\r\n```\r\nwait... why are we converting/comparing `required` as a string? It looks like it's already a bool in the other macros. Can't we just pass the bool directly?",
        "pr_file_module": null
      },
      {
        "comment_id": "2093589067",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18915,
        "pr_file": "src/cascadia/TerminalSettingsModel/ActionArgsMagic.h",
        "discussion_id": "2091938087",
        "commented_code": "@@ -54,50 +54,81 @@ struct InitListPlaceholder\n // expanded. Pretty critical for tracking down extraneous commas, etc.\r\n \r\n // Property definitions, and JSON keys\r\n-#define DECLARE_ARGS(type, name, jsonKey, required, ...)    \\\r\n-    static constexpr std::string_view name##Key{ jsonKey }; \\\r\n+#define DECLARE_ARGS(type, name, jsonKey, required, tag, ...) \\\r\n+    static constexpr std::string_view name##Key{ jsonKey };   \\\r\n     ACTION_ARG(type, name, ##__VA_ARGS__);\r\n \r\n // Parameters to the non-default ctor\r\n-#define CTOR_PARAMS(type, name, jsonKey, required, ...) \\\r\n+#define CTOR_PARAMS(type, name, jsonKey, required, tag, ...) \\\r\n     const type &name##Param,\r\n \r\n // initializers in the ctor\r\n-#define CTOR_INIT(type, name, jsonKey, required, ...) \\\r\n+#define CTOR_INIT(type, name, jsonKey, required, tag, ...) \\\r\n     _##name{ name##Param },\r\n \r\n+// append this argument's description to the internal vector\r\n+#define APPEND_ARG_DESCRIPTION(type, name, jsonKey, required, tag, ...) \\\r\n+    _argDescriptions.push_back({ L## #name, L## #type, std::wstring_view(L## #required) != L\"false\", tag });\r",
        "comment_created_at": "2025-05-16T19:41:10+00:00",
        "comment_author": "PankajBhojwani",
        "comment_body": "Ah, that's because the term `required` in these macros is a little misleading - it's not an actual bool, it's a validation check. For example, the `ResizeDirection` arg has the `required` parameter as `args->ResizeDirection() == ResizeDirection::None`, which checks _the current actual value of the arg_, it's not a general \"this arg is required\" bool.\r\n\r\nTbh we should probably find a way at some point to transfer over the actual validation check in the `ArgDescription` so the Settings Editor can use it and display correct error messaging, but for now I think it makes sense to just go with this",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2099060987",
    "pr_number": 18915,
    "pr_file": "src/cascadia/TerminalSettingsModel/Resources/en-US/Resources.resw",
    "created_at": "2025-05-21T00:04:57+00:00",
    "commented_code": "<data name=\"OpenCWDCommandKey\" xml:space=\"preserve\">\r\n     <value>Open current working directory</value>\r\n   </data>\r\n+  <data name=\"CopyText\" xml:space=\"preserve\">",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2099060987",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18915,
        "pr_file": "src/cascadia/TerminalSettingsModel/Resources/en-US/Resources.resw",
        "discussion_id": "2099060987",
        "commented_code": "@@ -740,4 +740,274 @@\n   <data name=\"OpenCWDCommandKey\" xml:space=\"preserve\">\r\n     <value>Open current working directory</value>\r\n   </data>\r\n+  <data name=\"CopyText\" xml:space=\"preserve\">\r",
        "comment_created_at": "2025-05-21T00:04:57+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "Lightly pushing back on the capitalization of these. We should probably capitalize the first letter of the first word and that's it.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2098956701",
    "pr_number": 18917,
    "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
    "created_at": "2025-05-20T22:14:44+00:00",
    "commented_code": "+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2098956701",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18917,
        "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
        "discussion_id": "2098956701",
        "commented_code": "@@ -0,0 +1,703 @@\n+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"\r",
        "comment_created_at": "2025-05-20T22:14:44+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "Screen reader reads this as just \"button\" (aka needs an AP.name)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2098956781",
    "pr_number": 18917,
    "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
    "created_at": "2025-05-20T22:14:50+00:00",
    "commented_code": "+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"\r\n+                                    Grid.Column=\"1\"\r\n+                                    Click=\"{x:Bind CancelChanges}\"\r\n+                                    Style=\"{StaticResource EditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE711;\" />\r\n+                            </Button>\r\n+\r\n+                            <!--  Accept changes  -->\r\n+                            <Button x:Uid=\"Actions_AcceptButton\"",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2098956781",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18917,
        "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
        "discussion_id": "2098956781",
        "commented_code": "@@ -0,0 +1,703 @@\n+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"\r\n+                                    Grid.Column=\"1\"\r\n+                                    Click=\"{x:Bind CancelChanges}\"\r\n+                                    Style=\"{StaticResource EditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE711;\" />\r\n+                            </Button>\r\n+\r\n+                            <!--  Accept changes  -->\r\n+                            <Button x:Uid=\"Actions_AcceptButton\"\r",
        "comment_created_at": "2025-05-20T22:14:50+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "Screen reader reads this as just \"button\" (aka needs an AP.name)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2098956926",
    "pr_number": 18917,
    "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
    "created_at": "2025-05-20T22:14:59+00:00",
    "commented_code": "+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"\r\n+                                    Grid.Column=\"1\"\r\n+                                    Click=\"{x:Bind CancelChanges}\"\r\n+                                    Style=\"{StaticResource EditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE711;\" />\r\n+                            </Button>\r\n+\r\n+                            <!--  Accept changes  -->\r\n+                            <Button x:Uid=\"Actions_AcceptButton\"\r\n+                                    Grid.Column=\"2\"\r\n+                                    Click=\"{x:Bind AttemptAcceptChanges}\"\r\n+                                    Flyout=\"{x:Bind AcceptChangesFlyout, Mode=OneWay}\"\r\n+                                    Style=\"{StaticResource AccentEditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE8FB;\" />\r\n+                            </Button>\r\n+                        </Grid>\r\n+                        <Button Grid.Column=\"1\"",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2098956926",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18917,
        "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
        "discussion_id": "2098956926",
        "commented_code": "@@ -0,0 +1,703 @@\n+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"\r\n+                                    Grid.Column=\"1\"\r\n+                                    Click=\"{x:Bind CancelChanges}\"\r\n+                                    Style=\"{StaticResource EditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE711;\" />\r\n+                            </Button>\r\n+\r\n+                            <!--  Accept changes  -->\r\n+                            <Button x:Uid=\"Actions_AcceptButton\"\r\n+                                    Grid.Column=\"2\"\r\n+                                    Click=\"{x:Bind AttemptAcceptChanges}\"\r\n+                                    Flyout=\"{x:Bind AcceptChangesFlyout, Mode=OneWay}\"\r\n+                                    Style=\"{StaticResource AccentEditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE8FB;\" />\r\n+                            </Button>\r\n+                        </Grid>\r\n+                        <Button Grid.Column=\"1\"\r",
        "comment_created_at": "2025-05-20T22:14:59+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "Screen reader reads this as just \"button\" (aka needs an AP.name)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2099078162",
    "pr_number": 18917,
    "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
    "created_at": "2025-05-21T00:29:58+00:00",
    "commented_code": "+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"\r\n+                                    Grid.Column=\"1\"\r\n+                                    Click=\"{x:Bind CancelChanges}\"\r\n+                                    Style=\"{StaticResource EditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE711;\" />\r\n+                            </Button>\r\n+\r\n+                            <!--  Accept changes  -->\r\n+                            <Button x:Uid=\"Actions_AcceptButton\"\r\n+                                    Grid.Column=\"2\"\r\n+                                    Click=\"{x:Bind AttemptAcceptChanges}\"\r\n+                                    Flyout=\"{x:Bind AcceptChangesFlyout, Mode=OneWay}\"\r\n+                                    Style=\"{StaticResource AccentEditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE8FB;\" />\r\n+                            </Button>\r\n+                        </Grid>\r\n+                        <Button Grid.Column=\"1\"\r\n+                                Margin=\"8,0,0,0\"\r\n+                                Style=\"{StaticResource DeleteSmallButtonStyle}\">\r\n+                            <Button.Content>\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE74D;\" />\r\n+                            </Button.Content>\r\n+                            <Button.Flyout>\r\n+                                <Flyout>\r\n+                                    <StackPanel>\r\n+                                        <TextBlock x:Uid=\"Actions_DeleteConfirmationMessage\"\r\n+                                                   Style=\"{StaticResource CustomFlyoutTextStyle}\" />\r\n+                                        <Button x:Uid=\"Actions_DeleteConfirmationButton\"\r\n+                                                Click=\"{x:Bind DeleteKeyChord}\" />\r\n+                                    </StackPanel>\r\n+                                </Flyout>\r\n+                            </Button.Flyout>\r\n+                        </Button>\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"ListItemTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem HorizontalContentAlignment=\"Stretch\" />\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"NoArgTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem />\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"Int32Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxInt32(Value), Mode=TwoWay, BindBack=Int32BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt32Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt32(Value), Mode=TwoWay, BindBack=UInt32BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt32OptionalTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt32Optional(Value), Mode=TwoWay, BindBack=UInt32OptionalBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt64Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt64(Value), Mode=TwoWay, BindBack=UInt64BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"Int32OptionalTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxInt32Optional(Value), Mode=TwoWay, BindBack=Int32OptionalBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"FloatTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxFloat(Value), Mode=TwoWay, BindBack=FloatBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"StringTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <TextBox Grid.Column=\"1\"\r\n+                                 Text=\"{x:Bind UnboxString(Value), Mode=TwoWay, BindBack=StringBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"ColorSchemeTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <ComboBox Grid.Column=\"1\"",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2099078162",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18917,
        "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
        "discussion_id": "2099078162",
        "commented_code": "@@ -0,0 +1,703 @@\n+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"\r\n+                                    Grid.Column=\"1\"\r\n+                                    Click=\"{x:Bind CancelChanges}\"\r\n+                                    Style=\"{StaticResource EditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE711;\" />\r\n+                            </Button>\r\n+\r\n+                            <!--  Accept changes  -->\r\n+                            <Button x:Uid=\"Actions_AcceptButton\"\r\n+                                    Grid.Column=\"2\"\r\n+                                    Click=\"{x:Bind AttemptAcceptChanges}\"\r\n+                                    Flyout=\"{x:Bind AcceptChangesFlyout, Mode=OneWay}\"\r\n+                                    Style=\"{StaticResource AccentEditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE8FB;\" />\r\n+                            </Button>\r\n+                        </Grid>\r\n+                        <Button Grid.Column=\"1\"\r\n+                                Margin=\"8,0,0,0\"\r\n+                                Style=\"{StaticResource DeleteSmallButtonStyle}\">\r\n+                            <Button.Content>\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE74D;\" />\r\n+                            </Button.Content>\r\n+                            <Button.Flyout>\r\n+                                <Flyout>\r\n+                                    <StackPanel>\r\n+                                        <TextBlock x:Uid=\"Actions_DeleteConfirmationMessage\"\r\n+                                                   Style=\"{StaticResource CustomFlyoutTextStyle}\" />\r\n+                                        <Button x:Uid=\"Actions_DeleteConfirmationButton\"\r\n+                                                Click=\"{x:Bind DeleteKeyChord}\" />\r\n+                                    </StackPanel>\r\n+                                </Flyout>\r\n+                            </Button.Flyout>\r\n+                        </Button>\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"ListItemTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem HorizontalContentAlignment=\"Stretch\" />\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"NoArgTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem />\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"Int32Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxInt32(Value), Mode=TwoWay, BindBack=Int32BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt32Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt32(Value), Mode=TwoWay, BindBack=UInt32BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt32OptionalTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt32Optional(Value), Mode=TwoWay, BindBack=UInt32OptionalBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt64Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt64(Value), Mode=TwoWay, BindBack=UInt64BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"Int32OptionalTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxInt32Optional(Value), Mode=TwoWay, BindBack=Int32OptionalBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"FloatTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxFloat(Value), Mode=TwoWay, BindBack=FloatBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"StringTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <TextBox Grid.Column=\"1\"\r\n+                                 Text=\"{x:Bind UnboxString(Value), Mode=TwoWay, BindBack=StringBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"ColorSchemeTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <ComboBox Grid.Column=\"1\"\r",
        "comment_created_at": "2025-05-21T00:29:58+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "The option \"Null (use global setting)\" should be reworked a bit. At a minimum, we should just rename it to \"Use global setting\". Ideally, we'd deduce what value that means so we could show something like \"Campbell (default)\". If that second one's too much work, sounds like a solid follow-up.",
        "pr_file_module": null
      },
      {
        "comment_id": "2099078577",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18917,
        "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
        "discussion_id": "2099078162",
        "commented_code": "@@ -0,0 +1,703 @@\n+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"\r\n+                                    Grid.Column=\"1\"\r\n+                                    Click=\"{x:Bind CancelChanges}\"\r\n+                                    Style=\"{StaticResource EditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE711;\" />\r\n+                            </Button>\r\n+\r\n+                            <!--  Accept changes  -->\r\n+                            <Button x:Uid=\"Actions_AcceptButton\"\r\n+                                    Grid.Column=\"2\"\r\n+                                    Click=\"{x:Bind AttemptAcceptChanges}\"\r\n+                                    Flyout=\"{x:Bind AcceptChangesFlyout, Mode=OneWay}\"\r\n+                                    Style=\"{StaticResource AccentEditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE8FB;\" />\r\n+                            </Button>\r\n+                        </Grid>\r\n+                        <Button Grid.Column=\"1\"\r\n+                                Margin=\"8,0,0,0\"\r\n+                                Style=\"{StaticResource DeleteSmallButtonStyle}\">\r\n+                            <Button.Content>\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE74D;\" />\r\n+                            </Button.Content>\r\n+                            <Button.Flyout>\r\n+                                <Flyout>\r\n+                                    <StackPanel>\r\n+                                        <TextBlock x:Uid=\"Actions_DeleteConfirmationMessage\"\r\n+                                                   Style=\"{StaticResource CustomFlyoutTextStyle}\" />\r\n+                                        <Button x:Uid=\"Actions_DeleteConfirmationButton\"\r\n+                                                Click=\"{x:Bind DeleteKeyChord}\" />\r\n+                                    </StackPanel>\r\n+                                </Flyout>\r\n+                            </Button.Flyout>\r\n+                        </Button>\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"ListItemTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem HorizontalContentAlignment=\"Stretch\" />\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"NoArgTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem />\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"Int32Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxInt32(Value), Mode=TwoWay, BindBack=Int32BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt32Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt32(Value), Mode=TwoWay, BindBack=UInt32BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt32OptionalTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt32Optional(Value), Mode=TwoWay, BindBack=UInt32OptionalBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt64Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt64(Value), Mode=TwoWay, BindBack=UInt64BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"Int32OptionalTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxInt32Optional(Value), Mode=TwoWay, BindBack=Int32OptionalBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"FloatTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxFloat(Value), Mode=TwoWay, BindBack=FloatBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"StringTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <TextBox Grid.Column=\"1\"\r\n+                                 Text=\"{x:Bind UnboxString(Value), Mode=TwoWay, BindBack=StringBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"ColorSchemeTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <ComboBox Grid.Column=\"1\"\r",
        "comment_created_at": "2025-05-21T00:30:43+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "Another follow-up... \ud83c\udf08color chips\ud83c\udf08. It'd look so cool.",
        "pr_file_module": null
      },
      {
        "comment_id": "2140783967",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18917,
        "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
        "discussion_id": "2099078162",
        "commented_code": "@@ -0,0 +1,703 @@\n+<!--\r\n+    Copyright (c) Microsoft Corporation. All rights reserved. Licensed under\r\n+    the MIT License. See LICENSE in the project root for license information.\r\n+-->\r\n+<Page x:Class=\"Microsoft.Terminal.Settings.Editor.EditAction\"\r\n+      xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n+      xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n+      xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n+      xmlns:local=\"using:Microsoft.Terminal.Settings.Editor\"\r\n+      xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n+      xmlns:mtu=\"using:Microsoft.Terminal.UI\"\r\n+      xmlns:muxc=\"using:Microsoft.UI.Xaml.Controls\"\r\n+      mc:Ignorable=\"d\">\r\n+\r\n+    <Page.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <ResourceDictionary Source=\"CommonResources.xaml\" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+            <!--  Theme Dictionary  -->\r\n+            <ResourceDictionary.ThemeDictionaries>\r\n+                <ResourceDictionary x:Key=\"Dark\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"Light\">\r\n+                    <!--  KeyChordText styles  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\">\r\n+                        <Setter Property=\"BorderThickness\" Value=\"1\" />\r\n+                        <Setter Property=\"CornerRadius\" Value=\"1\" />\r\n+                        <Setter Property=\"Background\" Value=\"{ThemeResource SystemAltMediumLowColor}\" />\r\n+                        <Setter Property=\"BorderBrush\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                        <!--  Override visual states  -->\r\n+                        <Setter Property=\"Template\">\r\n+                            <Setter.Value>\r\n+                                <ControlTemplate TargetType=\"Button\">\r\n+                                    <Grid>\r\n+                                        <!--  Define the appearance of the button  -->\r\n+                                        <Border x:Name=\"border\"\r\n+                                                Background=\"{TemplateBinding Background}\"\r\n+                                                BorderBrush=\"{TemplateBinding BorderBrush}\"\r\n+                                                BorderThickness=\"{TemplateBinding BorderThickness}\"\r\n+                                                CornerRadius=\"{TemplateBinding CornerRadius}\">\r\n+                                            <ContentPresenter HorizontalAlignment=\"Center\"\r\n+                                                              VerticalAlignment=\"Center\" />\r\n+                                        </Border>\r\n+                                        <VisualStateManager.VisualStateGroups>\r\n+                                            <VisualStateGroup x:Name=\"CommonStates\">\r\n+                                                <VisualState x:Name=\"Normal\" />\r\n+                                                <VisualState x:Name=\"PointerOver\">\r\n+                                                    <Storyboard>\r\n+                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName=\"border\"\r\n+                                                                                       Storyboard.TargetProperty=\"Background\">\r\n+                                                            <DiscreteObjectKeyFrame KeyTime=\"0\"\r\n+                                                                                    Value=\"{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}\" />\r\n+                                                        </ObjectAnimationUsingKeyFrames>\r\n+                                                    </Storyboard>\r\n+                                                </VisualState>\r\n+                                                <VisualState x:Name=\"Pressed\" />\r\n+                                                <VisualState x:Name=\"Disabled\" />\r\n+                                            </VisualStateGroup>\r\n+                                        </VisualStateManager.VisualStateGroups>\r\n+                                    </Grid>\r\n+                                </ControlTemplate>\r\n+                            </Setter.Value>\r\n+                        </Setter>\r\n+                    </Style>\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\">\r\n+                        <Setter Property=\"Foreground\" Value=\"{ThemeResource SystemControlForegroundBaseMediumBrush}\" />\r\n+                    </Style>\r\n+                </ResourceDictionary>\r\n+                <ResourceDictionary x:Key=\"HighContrast\">\r\n+                    <!--  KeyChordText styles (use XAML defaults for High Contrast theme)  -->\r\n+                    <Style x:Key=\"KeyChordBorderStyle\"\r\n+                           TargetType=\"Button\" />\r\n+                    <Style x:Key=\"KeyChordTextBlockStyle\"\r\n+                           TargetType=\"TextBlock\" />\r\n+                </ResourceDictionary>\r\n+            </ResourceDictionary.ThemeDictionaries>\r\n+\r\n+            <GridLength x:Key=\"ArgumentNameWidth\">148</GridLength>\r\n+\r\n+            <!--  Styles  -->\r\n+            <Style x:Key=\"KeyBindingContainerStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultListViewItemStyle}\"\r\n+                   TargetType=\"ListViewItem\">\r\n+                <Setter Property=\"Padding\" Value=\"4\" />\r\n+                <Setter Property=\"HorizontalContentAlignment\" Value=\"Stretch\" />\r\n+                <Setter Property=\"XYFocusKeyboardNavigation\" Value=\"Enabled\" />\r\n+            </Style>\r\n+            <Style x:Key=\"KeyChordEditorStyle\"\r\n+                   TargetType=\"local:KeyChordListener\">\r\n+                <Setter Property=\"HorizontalAlignment\" Value=\"Left\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+            </Style>\r\n+            <x:Int32 x:Key=\"EditButtonSize\">32</x:Int32>\r\n+            <x:Double x:Key=\"EditButtonIconSize\">15</x:Double>\r\n+            <Style x:Key=\"EditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource DefaultButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"0\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+            <Style x:Key=\"AccentEditButtonStyle\"\r\n+                   BasedOn=\"{StaticResource AccentButtonStyle}\"\r\n+                   TargetType=\"Button\">\r\n+                <Setter Property=\"Padding\" Value=\"3\" />\r\n+                <Setter Property=\"VerticalAlignment\" Value=\"Center\" />\r\n+                <Setter Property=\"Height\" Value=\"{StaticResource EditButtonSize}\" />\r\n+                <Setter Property=\"Width\" Value=\"{StaticResource EditButtonSize}\" />\r\n+            </Style>\r\n+\r\n+            <!--  Templates  -->\r\n+            <DataTemplate x:Key=\"KeyChordTemplate\"\r\n+                          x:DataType=\"local:KeyChordViewModel\">\r\n+                <ListViewItem Style=\"{StaticResource KeyBindingContainerStyle}\">\r\n+                    <Grid Padding=\"2,0,2,0\"\r\n+                          VerticalAlignment=\"Center\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <Button Grid.Column=\"0\"\r\n+                                Click=\"{x:Bind ToggleEditMode}\"\r\n+                                Style=\"{ThemeResource KeyChordBorderStyle}\"\r\n+                                Visibility=\"{x:Bind mtu:Converters.InvertedBooleanToVisibility(IsInEditMode), Mode=OneWay}\">\r\n+                            <TextBlock FontSize=\"14\"\r\n+                                       Style=\"{ThemeResource KeyChordTextBlockStyle}\"\r\n+                                       Text=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n+                                       TextWrapping=\"WrapWholeWords\" />\r\n+                        </Button>\r\n+                        <Grid Grid.Column=\"0\"\r\n+                              ColumnSpacing=\"8\"\r\n+                              Visibility=\"{x:Bind IsInEditMode, Mode=OneWay}\">\r\n+                            <Grid.ColumnDefinitions>\r\n+                                <ColumnDefinition Width=\"*\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                                <ColumnDefinition Width=\"Auto\" />\r\n+                            </Grid.ColumnDefinitions>\r\n+                            <!--  Edit Mode: Key Chord Listener  -->\r\n+                            <local:KeyChordListener Grid.Column=\"0\"\r\n+                                                    Keys=\"{x:Bind ProposedKeys, Mode=TwoWay}\"\r\n+                                                    Style=\"{StaticResource KeyChordEditorStyle}\" />\r\n+\r\n+                            <!--  Cancel editing the action  -->\r\n+                            <Button x:Uid=\"Actions_CancelButton\"\r\n+                                    Grid.Column=\"1\"\r\n+                                    Click=\"{x:Bind CancelChanges}\"\r\n+                                    Style=\"{StaticResource EditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE711;\" />\r\n+                            </Button>\r\n+\r\n+                            <!--  Accept changes  -->\r\n+                            <Button x:Uid=\"Actions_AcceptButton\"\r\n+                                    Grid.Column=\"2\"\r\n+                                    Click=\"{x:Bind AttemptAcceptChanges}\"\r\n+                                    Flyout=\"{x:Bind AcceptChangesFlyout, Mode=OneWay}\"\r\n+                                    Style=\"{StaticResource AccentEditButtonStyle}\">\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE8FB;\" />\r\n+                            </Button>\r\n+                        </Grid>\r\n+                        <Button Grid.Column=\"1\"\r\n+                                Margin=\"8,0,0,0\"\r\n+                                Style=\"{StaticResource DeleteSmallButtonStyle}\">\r\n+                            <Button.Content>\r\n+                                <FontIcon FontSize=\"{StaticResource EditButtonIconSize}\"\r\n+                                          Glyph=\"&#xE74D;\" />\r\n+                            </Button.Content>\r\n+                            <Button.Flyout>\r\n+                                <Flyout>\r\n+                                    <StackPanel>\r\n+                                        <TextBlock x:Uid=\"Actions_DeleteConfirmationMessage\"\r\n+                                                   Style=\"{StaticResource CustomFlyoutTextStyle}\" />\r\n+                                        <Button x:Uid=\"Actions_DeleteConfirmationButton\"\r\n+                                                Click=\"{x:Bind DeleteKeyChord}\" />\r\n+                                    </StackPanel>\r\n+                                </Flyout>\r\n+                            </Button.Flyout>\r\n+                        </Button>\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"ListItemTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem HorizontalContentAlignment=\"Stretch\" />\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"NoArgTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem />\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"Int32Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxInt32(Value), Mode=TwoWay, BindBack=Int32BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt32Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt32(Value), Mode=TwoWay, BindBack=UInt32BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt32OptionalTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt32Optional(Value), Mode=TwoWay, BindBack=UInt32OptionalBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"UInt64Template\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxUInt64(Value), Mode=TwoWay, BindBack=UInt64BindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"Int32OptionalTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxInt32Optional(Value), Mode=TwoWay, BindBack=Int32OptionalBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"FloatTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <muxc:NumberBox Grid.Column=\"1\"\r\n+                                        LargeChange=\"1\"\r\n+                                        Maximum=\"999\"\r\n+                                        Minimum=\"0\"\r\n+                                        SmallChange=\"1\"\r\n+                                        Style=\"{StaticResource NumberBoxSettingStyle}\"\r\n+                                        Value=\"{x:Bind UnboxFloat(Value), Mode=TwoWay, BindBack=FloatBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"StringTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <TextBox Grid.Column=\"1\"\r\n+                                 Text=\"{x:Bind UnboxString(Value), Mode=TwoWay, BindBack=StringBindBack}\" />\r\n+                    </Grid>\r\n+                </ListViewItem>\r\n+            </DataTemplate>\r\n+\r\n+            <DataTemplate x:Key=\"ColorSchemeTemplate\"\r\n+                          x:DataType=\"local:ArgWrapper\">\r\n+                <ListViewItem>\r\n+                    <Grid ColumnSpacing=\"8\">\r\n+                        <Grid.ColumnDefinitions>\r\n+                            <ColumnDefinition Width=\"{StaticResource ArgumentNameWidth}\" />\r\n+                            <ColumnDefinition Width=\"Auto\" />\r\n+                        </Grid.ColumnDefinitions>\r\n+                        <TextBlock Grid.Column=\"0\"\r\n+                                   VerticalAlignment=\"Center\"\r\n+                                   Text=\"{x:Bind Name}\" />\r\n+                        <ComboBox Grid.Column=\"1\"\r",
        "comment_created_at": "2025-06-11T18:05:35+00:00",
        "comment_author": "PankajBhojwani",
        "comment_body": "Renamed the null setting and noted the remaining as a follow up!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2100990137",
    "pr_number": 18917,
    "pr_file": "src/cascadia/TerminalSettingsEditor/ActionsViewModel.h",
    "created_at": "2025-05-21T19:12:51+00:00",
    "commented_code": "#pragma once\r\n \r\n #include \"ActionsViewModel.g.h\"\r\n-#include \"KeyBindingViewModel.g.h\"\r\n-#include \"ModifyKeyBindingEventArgs.g.h\"\r\n+#include \"NavigateToCommandArgs.g.h\"\r\n+#include \"CommandViewModel.g.h\"\r\n+#include \"ArgWrapper.g.h\"\r\n+#include \"ActionArgsViewModel.g.h\"\r\n+#include \"KeyChordViewModel.g.h\"\r\n+#include \"ModifyKeyChordEventArgs.g.h\"\r\n #include \"Utils.h\"\r\n #include \"ViewModelHelpers.h\"\r\n \r\n namespace winrt::Microsoft::Terminal::Settings::Editor::implementation\r\n {\r\n-    struct KeyBindingViewModelComparator\r\n+    struct CommandViewModelComparator\r\n     {\r\n-        bool operator()(const Editor::KeyBindingViewModel& lhs, const Editor::KeyBindingViewModel& rhs) const\r\n+        bool operator()(const Editor::CommandViewModel& lhs, const Editor::CommandViewModel& rhs) const\r\n         {\r\n-            return lhs.Name() < rhs.Name();\r\n+            return lhs.DisplayName() < rhs.DisplayName();\r\n         }\r\n     };\r\n \r\n-    struct ModifyKeyBindingEventArgs : ModifyKeyBindingEventArgsT<ModifyKeyBindingEventArgs>\r\n+    struct NavigateToCommandArgs : NavigateToCommandArgsT<NavigateToCommandArgs>\r\n     {\r\n     public:\r\n-        ModifyKeyBindingEventArgs(const Control::KeyChord& oldKeys, const Control::KeyChord& newKeys, const hstring oldActionName, const hstring newActionName) :\r\n+        NavigateToCommandArgs(CommandViewModel command, Editor::IHostedInWindow windowRoot) :\r\n+            _Command(command),\r\n+            _WindowRoot(windowRoot) {}\r\n+\r\n+        Editor::IHostedInWindow WindowRoot() const noexcept { return _WindowRoot; }\r\n+        Editor::CommandViewModel Command() const noexcept { return _Command; }\r\n+\r\n+    private:\r\n+        Editor::IHostedInWindow _WindowRoot;\r\n+        Editor::CommandViewModel _Command{ nullptr };\r\n+    };\r\n+\r\n+    struct ModifyKeyChordEventArgs : ModifyKeyChordEventArgsT<ModifyKeyChordEventArgs>\r\n+    {\r\n+    public:\r\n+        ModifyKeyChordEventArgs(const Control::KeyChord& oldKeys, const Control::KeyChord& newKeys) :\r\n             _OldKeys{ oldKeys },\r\n-            _NewKeys{ newKeys },\r\n-            _OldActionName{ std::move(oldActionName) },\r\n-            _NewActionName{ std::move(newActionName) } {}\r\n+            _NewKeys{ newKeys } {}\r\n \r\n         WINRT_PROPERTY(Control::KeyChord, OldKeys, nullptr);\r\n         WINRT_PROPERTY(Control::KeyChord, NewKeys, nullptr);\r\n-        WINRT_PROPERTY(hstring, OldActionName);\r\n-        WINRT_PROPERTY(hstring, NewActionName);\r\n     };\r\n \r\n-    struct KeyBindingViewModel : KeyBindingViewModelT<KeyBindingViewModel>, ViewModelHelper<KeyBindingViewModel>\r\n+    struct CommandViewModel : CommandViewModelT<CommandViewModel>, ViewModelHelper<CommandViewModel>\r\n+    {\r\n+    public:\r\n+        CommandViewModel(winrt::Microsoft::Terminal::Settings::Model::Command cmd,\r\n+                         std::vector<Control::KeyChord> keyChordList,\r\n+                         const Editor::ActionsViewModel actionsPageVM,\r\n+                         const Windows::Foundation::Collections::IMap<Model::ShortcutAction, winrt::hstring>& availableShortcutActionsAndNames);\r\n+        void Initialize();\r\n+\r\n+        winrt::hstring DisplayName();\r\n+        winrt::hstring Name();\r\n+        void Name(const winrt::hstring& newName);\r\n+\r\n+        winrt::hstring ID();\r\n+        void ID(const winrt::hstring& newID);\r\n+\r\n+        bool IsUserAction();\r\n+\r\n+        void Edit_Click();\r\n+        til::typed_event<Editor::CommandViewModel, IInspectable> EditRequested;\r\n+\r\n+        void Delete_Click();\r\n+        til::typed_event<Editor::CommandViewModel, IInspectable> DeleteRequested;\r\n+\r\n+        void AddKeybinding_Click();\r\n+\r\n+        til::typed_event<IInspectable, Editor::ArgWrapper> PropagateColorSchemeRequested;\r\n+        til::typed_event<IInspectable, Editor::ArgWrapper> PropagateColorSchemeNamesRequested;\r\n+        til::typed_event<IInspectable, Editor::ArgWrapper> PropagateWindowRootRequested;\r\n+\r\n+        VIEW_MODEL_OBSERVABLE_PROPERTY(IInspectable, ProposedShortcutAction);",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2100990137",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18917,
        "pr_file": "src/cascadia/TerminalSettingsEditor/ActionsViewModel.h",
        "discussion_id": "2100990137",
        "commented_code": "@@ -4,127 +4,248 @@\n #pragma once\r\n \r\n #include \"ActionsViewModel.g.h\"\r\n-#include \"KeyBindingViewModel.g.h\"\r\n-#include \"ModifyKeyBindingEventArgs.g.h\"\r\n+#include \"NavigateToCommandArgs.g.h\"\r\n+#include \"CommandViewModel.g.h\"\r\n+#include \"ArgWrapper.g.h\"\r\n+#include \"ActionArgsViewModel.g.h\"\r\n+#include \"KeyChordViewModel.g.h\"\r\n+#include \"ModifyKeyChordEventArgs.g.h\"\r\n #include \"Utils.h\"\r\n #include \"ViewModelHelpers.h\"\r\n \r\n namespace winrt::Microsoft::Terminal::Settings::Editor::implementation\r\n {\r\n-    struct KeyBindingViewModelComparator\r\n+    struct CommandViewModelComparator\r\n     {\r\n-        bool operator()(const Editor::KeyBindingViewModel& lhs, const Editor::KeyBindingViewModel& rhs) const\r\n+        bool operator()(const Editor::CommandViewModel& lhs, const Editor::CommandViewModel& rhs) const\r\n         {\r\n-            return lhs.Name() < rhs.Name();\r\n+            return lhs.DisplayName() < rhs.DisplayName();\r\n         }\r\n     };\r\n \r\n-    struct ModifyKeyBindingEventArgs : ModifyKeyBindingEventArgsT<ModifyKeyBindingEventArgs>\r\n+    struct NavigateToCommandArgs : NavigateToCommandArgsT<NavigateToCommandArgs>\r\n     {\r\n     public:\r\n-        ModifyKeyBindingEventArgs(const Control::KeyChord& oldKeys, const Control::KeyChord& newKeys, const hstring oldActionName, const hstring newActionName) :\r\n+        NavigateToCommandArgs(CommandViewModel command, Editor::IHostedInWindow windowRoot) :\r\n+            _Command(command),\r\n+            _WindowRoot(windowRoot) {}\r\n+\r\n+        Editor::IHostedInWindow WindowRoot() const noexcept { return _WindowRoot; }\r\n+        Editor::CommandViewModel Command() const noexcept { return _Command; }\r\n+\r\n+    private:\r\n+        Editor::IHostedInWindow _WindowRoot;\r\n+        Editor::CommandViewModel _Command{ nullptr };\r\n+    };\r\n+\r\n+    struct ModifyKeyChordEventArgs : ModifyKeyChordEventArgsT<ModifyKeyChordEventArgs>\r\n+    {\r\n+    public:\r\n+        ModifyKeyChordEventArgs(const Control::KeyChord& oldKeys, const Control::KeyChord& newKeys) :\r\n             _OldKeys{ oldKeys },\r\n-            _NewKeys{ newKeys },\r\n-            _OldActionName{ std::move(oldActionName) },\r\n-            _NewActionName{ std::move(newActionName) } {}\r\n+            _NewKeys{ newKeys } {}\r\n \r\n         WINRT_PROPERTY(Control::KeyChord, OldKeys, nullptr);\r\n         WINRT_PROPERTY(Control::KeyChord, NewKeys, nullptr);\r\n-        WINRT_PROPERTY(hstring, OldActionName);\r\n-        WINRT_PROPERTY(hstring, NewActionName);\r\n     };\r\n \r\n-    struct KeyBindingViewModel : KeyBindingViewModelT<KeyBindingViewModel>, ViewModelHelper<KeyBindingViewModel>\r\n+    struct CommandViewModel : CommandViewModelT<CommandViewModel>, ViewModelHelper<CommandViewModel>\r\n+    {\r\n+    public:\r\n+        CommandViewModel(winrt::Microsoft::Terminal::Settings::Model::Command cmd,\r\n+                         std::vector<Control::KeyChord> keyChordList,\r\n+                         const Editor::ActionsViewModel actionsPageVM,\r\n+                         const Windows::Foundation::Collections::IMap<Model::ShortcutAction, winrt::hstring>& availableShortcutActionsAndNames);\r\n+        void Initialize();\r\n+\r\n+        winrt::hstring DisplayName();\r\n+        winrt::hstring Name();\r\n+        void Name(const winrt::hstring& newName);\r\n+\r\n+        winrt::hstring ID();\r\n+        void ID(const winrt::hstring& newID);\r\n+\r\n+        bool IsUserAction();\r\n+\r\n+        void Edit_Click();\r\n+        til::typed_event<Editor::CommandViewModel, IInspectable> EditRequested;\r\n+\r\n+        void Delete_Click();\r\n+        til::typed_event<Editor::CommandViewModel, IInspectable> DeleteRequested;\r\n+\r\n+        void AddKeybinding_Click();\r\n+\r\n+        til::typed_event<IInspectable, Editor::ArgWrapper> PropagateColorSchemeRequested;\r\n+        til::typed_event<IInspectable, Editor::ArgWrapper> PropagateColorSchemeNamesRequested;\r\n+        til::typed_event<IInspectable, Editor::ArgWrapper> PropagateWindowRootRequested;\r\n+\r\n+        VIEW_MODEL_OBSERVABLE_PROPERTY(IInspectable, ProposedShortcutAction);\r",
        "comment_created_at": "2025-05-21T19:12:51+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "```suggestion\r\n        VIEW_MODEL_OBSERVABLE_PROPERTY(IInspectable, ProposedShortcutActionName);\r\n```\r\nnit: since this is a boxed hstring, I suggest slightly modifying the name to make it clear that it's a string",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2258444962",
    "pr_number": 18917,
    "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
    "created_at": "2025-08-06T22:28:15+00:00",
    "commented_code": "<ComboBox Grid.Row=\"1\"\r\n                       Grid.Column=\"1\"\r\n                       VerticalAlignment=\"Center\"\r\n+                      AutomationProperties.Name=\"{x:Bind ViewModel.ShortcutActionComboBoxAutomationPropName}\"\r\n                       ItemsSource=\"{x:Bind ViewModel.AvailableShortcutActions, Mode=OneWay}\"\r\n-                      SelectedItem=\"{x:Bind ViewModel.ProposedShortcutAction, Mode=TwoWay}\" />\r\n+                      SelectedItem=\"{x:Bind ViewModel.ProposedShortcutActionName, Mode=TwoWay}\" />\r\n             <TextBlock x:Uid=\"Actions_Arguments\"\r\n                        Grid.Row=\"2\"\r\n                        Grid.Column=\"0\"\r\n                        VerticalAlignment=\"Center\"\r\n                        Visibility=\"{x:Bind ViewModel.ActionArgsVM.HasArgs, Mode=OneWay}\" />\r\n-            <ListView Grid.Row=\"2\"\r\n-                      Grid.Column=\"1\"\r\n-                      Margin=\"-28,0,0,0\"\r\n-                      AllowDrop=\"False\"\r\n-                      CanDragItems=\"False\"\r\n-                      CanReorderItems=\"False\"\r\n-                      ChoosingItemContainer=\"_choosingItemContainer\"\r\n-                      ItemsSource=\"{x:Bind ViewModel.ActionArgsVM.ArgValues, Mode=OneWay}\"\r\n-                      SelectionMode=\"None\" />\r\n+            <ItemsControl Grid.Row=\"2\"",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2258444962",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18917,
        "pr_file": "src/cascadia/TerminalSettingsEditor/EditAction.xaml",
        "discussion_id": "2258444962",
        "commented_code": "@@ -644,27 +656,26 @@\n             <ComboBox Grid.Row=\"1\"\r\n                       Grid.Column=\"1\"\r\n                       VerticalAlignment=\"Center\"\r\n+                      AutomationProperties.Name=\"{x:Bind ViewModel.ShortcutActionComboBoxAutomationPropName}\"\r\n                       ItemsSource=\"{x:Bind ViewModel.AvailableShortcutActions, Mode=OneWay}\"\r\n-                      SelectedItem=\"{x:Bind ViewModel.ProposedShortcutAction, Mode=TwoWay}\" />\r\n+                      SelectedItem=\"{x:Bind ViewModel.ProposedShortcutActionName, Mode=TwoWay}\" />\r\n             <TextBlock x:Uid=\"Actions_Arguments\"\r\n                        Grid.Row=\"2\"\r\n                        Grid.Column=\"0\"\r\n                        VerticalAlignment=\"Center\"\r\n                        Visibility=\"{x:Bind ViewModel.ActionArgsVM.HasArgs, Mode=OneWay}\" />\r\n-            <ListView Grid.Row=\"2\"\r\n-                      Grid.Column=\"1\"\r\n-                      Margin=\"-28,0,0,0\"\r\n-                      AllowDrop=\"False\"\r\n-                      CanDragItems=\"False\"\r\n-                      CanReorderItems=\"False\"\r\n-                      ChoosingItemContainer=\"_choosingItemContainer\"\r\n-                      ItemsSource=\"{x:Bind ViewModel.ActionArgsVM.ArgValues, Mode=OneWay}\"\r\n-                      SelectionMode=\"None\" />\r\n+            <ItemsControl Grid.Row=\"2\"\r",
        "comment_created_at": "2025-08-06T22:28:15+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "This ItemsControl needs an AutomationProperty.Name set to the contents of `Actions_Arguments`\n\nRight now, \"Additional arguments\" isn't being read out. Since this is a group of those arguments, adding the AP.Name here should make it so that when you tab into one of the args, Narrator should read something like \"additional arguments group, <reads the actual argument and value>\".\n\nVerified that this already works correctly for action name, type, and keybindings.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2258450779",
    "pr_number": 18917,
    "pr_file": "src/cascadia/TerminalSettingsEditor/Actions.xaml",
    "created_at": "2025-08-06T22:33:06+00:00",
    "commented_code": "Color=\"Transparent\" />\r\n \r\n             <!--  Templates  -->\r\n-            <DataTemplate x:Key=\"KeyBindingTemplate\"\r\n-                          x:DataType=\"local:KeyBindingViewModel\">\r\n-                <ListViewItem AutomationProperties.AcceleratorKey=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n-                              AutomationProperties.Name=\"{x:Bind Name, Mode=OneWay}\"\r\n-                              Background=\"{x:Bind ContainerBackground, Mode=OneWay}\"\r\n-                              GotFocus=\"{x:Bind ActionGotFocus}\"\r\n-                              LostFocus=\"{x:Bind ActionLostFocus}\"\r\n-                              PointerEntered=\"{x:Bind EnterHoverMode}\"\r\n-                              PointerExited=\"{x:Bind ExitHoverMode}\"\r\n+            <DataTemplate x:Key=\"CommandTemplate\"\r\n+                          x:DataType=\"local:CommandViewModel\">\r\n+                <ListViewItem AutomationProperties.Name=\"{x:Bind DisplayName, Mode=OneWay}\"",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2258450779",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18917,
        "pr_file": "src/cascadia/TerminalSettingsEditor/Actions.xaml",
        "discussion_id": "2258450779",
        "commented_code": "@@ -163,162 +145,34 @@\n                              Color=\"Transparent\" />\r\n \r\n             <!--  Templates  -->\r\n-            <DataTemplate x:Key=\"KeyBindingTemplate\"\r\n-                          x:DataType=\"local:KeyBindingViewModel\">\r\n-                <ListViewItem AutomationProperties.AcceleratorKey=\"{x:Bind KeyChordText, Mode=OneWay}\"\r\n-                              AutomationProperties.Name=\"{x:Bind Name, Mode=OneWay}\"\r\n-                              Background=\"{x:Bind ContainerBackground, Mode=OneWay}\"\r\n-                              GotFocus=\"{x:Bind ActionGotFocus}\"\r\n-                              LostFocus=\"{x:Bind ActionLostFocus}\"\r\n-                              PointerEntered=\"{x:Bind EnterHoverMode}\"\r\n-                              PointerExited=\"{x:Bind ExitHoverMode}\"\r\n+            <DataTemplate x:Key=\"CommandTemplate\"\r\n+                          x:DataType=\"local:CommandViewModel\">\r\n+                <ListViewItem AutomationProperties.Name=\"{x:Bind DisplayName, Mode=OneWay}\"\r",
        "comment_created_at": "2025-08-06T22:33:06+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "Narrator's only reading out the name. It should read out the associated key chord too. Looks like you'll need to bind this to something separate that just adds the display name and key chord together.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2205966147",
    "pr_number": 19127,
    "pr_file": "src/cascadia/TerminalSettingsModel/MTSMSettings.h",
    "created_at": "2025-07-14T23:07:24+00:00",
    "commented_code": "X(hstring, WordDelimiters, \"wordDelimiters\", DEFAULT_WORD_DELIMITERS)                                                                                                                             \\\r\n     X(bool, CopyOnSelect, \"copyOnSelect\", false)                                                                                                                                                      \\\r\n     X(bool, FocusFollowMouse, \"focusFollowMouse\", false)                                                                                                                                              \\\r\n+    X(bool, DisableMouseZoom, \"disableMouseZoom\", false)                                                                                                                                              \\",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2205966147",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 19127,
        "pr_file": "src/cascadia/TerminalSettingsModel/MTSMSettings.h",
        "discussion_id": "2205966147",
        "commented_code": "@@ -24,6 +24,7 @@ Author(s):\n     X(hstring, WordDelimiters, \"wordDelimiters\", DEFAULT_WORD_DELIMITERS)                                                                                                                             \\\r\n     X(bool, CopyOnSelect, \"copyOnSelect\", false)                                                                                                                                                      \\\r\n     X(bool, FocusFollowMouse, \"focusFollowMouse\", false)                                                                                                                                              \\\r\n+    X(bool, DisableMouseZoom, \"disableMouseZoom\", false)                                                                                                                                              \\\r",
        "comment_created_at": "2025-07-14T23:07:24+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "```suggestion\r\n    X(bool, ScrollToZoom, \"experimental.scrollToZoom\", true)                                                                                                                                              \\\r\n```\r\nHow about this name? That way we avoid the double negative. I think the `experimental` prefix is important since this setting may eventually be deprecated in favor of #1553.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2205981804",
    "pr_number": 19127,
    "pr_file": "src/cascadia/TerminalSettingsEditor/Resources/en-US/Resources.resw",
    "created_at": "2025-07-14T23:23:56+00:00",
    "commented_code": "<value>Automatically focus pane on mouse hover</value>\r\n     <comment>Header for a control to toggle the \"focus follow mouse\" setting. When enabled, hovering over a pane puts it in focus.</comment>\r\n   </data>\r\n+  <data name=\"Globals_DisableMouseZoom.Header\" xml:space=\"preserve\">\r\n+    <value>Disable zooming with Ctrl+mouse wheel</value>",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2205981804",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 19127,
        "pr_file": "src/cascadia/TerminalSettingsEditor/Resources/en-US/Resources.resw",
        "discussion_id": "2205981804",
        "commented_code": "@@ -1736,6 +1736,10 @@\n     <value>Automatically focus pane on mouse hover</value>\r\n     <comment>Header for a control to toggle the \"focus follow mouse\" setting. When enabled, hovering over a pane puts it in focus.</comment>\r\n   </data>\r\n+  <data name=\"Globals_DisableMouseZoom.Header\" xml:space=\"preserve\">\r\n+    <value>Disable zooming with Ctrl+mouse wheel</value>\r",
        "comment_created_at": "2025-07-14T23:23:56+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "```suggestion\r\n    <value>Change font size with ctrl + mouse wheel</value>\r\n```\r\nThe new text avoids the double negative. Personally, I'd prefer to more explicitly mention \"font size\" than \"zoom\" because I don't necessarily trust that \"zoom\" translates well (though I'm not sure how well founded that concern may be). Similarly, I uncapitalized and added spacing around \"ctrl + mouse wheel\".",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2051075396",
    "pr_number": 18559,
    "pr_file": "src/cascadia/TerminalSettingsModel/CascadiaSettings.idl",
    "created_at": "2025-04-18T20:16:33+00:00",
    "commented_code": "void ExpandCommands();\r\n     }\r\n+\r\n+    [default_interface] runtimeclass FragmentProfileEntry\r\n+    {\r\n+        Guid ProfileGuid { get; };\r\n+        String Json { get; };\r\n+    }\r\n+\r\n+    [default_interface] runtimeclass FragmentColorSchemeEntry\r\n+    {\r\n+        String ColorSchemeName { get; };\r\n+        String Json { get; };\r\n+        Boolean Conflict { get; };\r\n+    }\r\n+\r\n+    [default_interface] runtimeclass FragmentSettings\r\n+    {\r\n+        String Source { get; };\r\n+        FragmentScope Scope { get; };\r\n+        String Json { get; };\r\n+        String JsonSource { get; };",
    "repo_full_name": "microsoft/terminal",
    "discussion_comments": [
      {
        "comment_id": "2051075396",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18559,
        "pr_file": "src/cascadia/TerminalSettingsModel/CascadiaSettings.idl",
        "discussion_id": "2051075396",
        "commented_code": "@@ -56,4 +64,28 @@ namespace Microsoft.Terminal.Settings.Model\n \r\n         void ExpandCommands();\r\n     }\r\n+\r\n+    [default_interface] runtimeclass FragmentProfileEntry\r\n+    {\r\n+        Guid ProfileGuid { get; };\r\n+        String Json { get; };\r\n+    }\r\n+\r\n+    [default_interface] runtimeclass FragmentColorSchemeEntry\r\n+    {\r\n+        String ColorSchemeName { get; };\r\n+        String Json { get; };\r\n+        Boolean Conflict { get; };\r\n+    }\r\n+\r\n+    [default_interface] runtimeclass FragmentSettings\r\n+    {\r\n+        String Source { get; };\r\n+        FragmentScope Scope { get; };\r\n+        String Json { get; };\r\n+        String JsonSource { get; };\r",
        "comment_created_at": "2025-04-18T20:16:33+00:00",
        "comment_author": "DHowett",
        "comment_body": "\ud83d\udcad what's a JsonSource vs a Source and a Json?",
        "pr_file_module": null
      },
      {
        "comment_id": "2052908855",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18559,
        "pr_file": "src/cascadia/TerminalSettingsModel/CascadiaSettings.idl",
        "discussion_id": "2051075396",
        "commented_code": "@@ -56,4 +64,28 @@ namespace Microsoft.Terminal.Settings.Model\n \r\n         void ExpandCommands();\r\n     }\r\n+\r\n+    [default_interface] runtimeclass FragmentProfileEntry\r\n+    {\r\n+        Guid ProfileGuid { get; };\r\n+        String Json { get; };\r\n+    }\r\n+\r\n+    [default_interface] runtimeclass FragmentColorSchemeEntry\r\n+    {\r\n+        String ColorSchemeName { get; };\r\n+        String Json { get; };\r\n+        Boolean Conflict { get; };\r\n+    }\r\n+\r\n+    [default_interface] runtimeclass FragmentSettings\r\n+    {\r\n+        String Source { get; };\r\n+        FragmentScope Scope { get; };\r\n+        String Json { get; };\r\n+        String JsonSource { get; };\r",
        "comment_created_at": "2025-04-21T19:40:26+00:00",
        "comment_author": "carlos-zamora",
        "comment_body": "- `Source`: The source name of the package or app name that introduced the fragment extension\r\n- `JsonSource`: the name of the file that the JSON is stored in. This is particularly useful when a fragment extension holds multiple JSON files. The `JsonSource` is displayed in the Settings UI.\r\n- `Json`: The JSON code extracted from the `JsonSource`. Displayed in the Settings UI.",
        "pr_file_module": null
      },
      {
        "comment_id": "2053019264",
        "repo_full_name": "microsoft/terminal",
        "pr_number": 18559,
        "pr_file": "src/cascadia/TerminalSettingsModel/CascadiaSettings.idl",
        "discussion_id": "2051075396",
        "commented_code": "@@ -56,4 +64,28 @@ namespace Microsoft.Terminal.Settings.Model\n \r\n         void ExpandCommands();\r\n     }\r\n+\r\n+    [default_interface] runtimeclass FragmentProfileEntry\r\n+    {\r\n+        Guid ProfileGuid { get; };\r\n+        String Json { get; };\r\n+    }\r\n+\r\n+    [default_interface] runtimeclass FragmentColorSchemeEntry\r\n+    {\r\n+        String ColorSchemeName { get; };\r\n+        String Json { get; };\r\n+        Boolean Conflict { get; };\r\n+    }\r\n+\r\n+    [default_interface] runtimeclass FragmentSettings\r\n+    {\r\n+        String Source { get; };\r\n+        FragmentScope Scope { get; };\r\n+        String Json { get; };\r\n+        String JsonSource { get; };\r",
        "comment_created_at": "2025-04-21T21:29:19+00:00",
        "comment_author": "DHowett",
        "comment_body": "That sounds like a `Filename` \ud83d\ude01 ",
        "pr_file_module": null
      }
    ]
  }
]