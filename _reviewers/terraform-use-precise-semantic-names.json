[
  {
    "discussion_id": "2090772042",
    "pr_number": 37007,
    "pr_file": "docs/plugin-protocol/tfplugin5.proto",
    "created_at": "2025-05-15T09:50:42+00:00",
    "commented_code": "FunctionError error = 2;\n     }\n }\n+\n+message ListResource {\n+    message Request {\n+        // type_name is the managed resource type name.",
    "repo_full_name": "hashicorp/terraform",
    "discussion_comments": [
      {
        "comment_id": "2090772042",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 37007,
        "pr_file": "docs/plugin-protocol/tfplugin5.proto",
        "discussion_id": "2090772042",
        "commented_code": "@@ -811,3 +819,45 @@ message CallFunction {\n         FunctionError error = 2;\n     }\n }\n+\n+message ListResource {\n+    message Request {\n+        // type_name is the managed resource type name.",
        "comment_created_at": "2025-05-15T09:50:42+00:00",
        "comment_author": "dsa0x",
        "comment_body": "```suggestion\r\n        // type_name is the list resource type name.\r\n```\r\n\r\nWhile this coincides with the managed resource type, the type name here really is the list resource type name. There could be a meta-list block which never returns resource objects, and is only expected to support list composition. In such instance, there may not be a corresponding managed resource.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2090782822",
    "pr_number": 37007,
    "pr_file": "docs/plugin-protocol/tfplugin5.proto",
    "created_at": "2025-05-15T09:52:58+00:00",
    "commented_code": "FunctionError error = 2;\n     }\n }\n+\n+message ListResource {\n+    message Request {\n+        // type_name is the managed resource type name.\n+        string type_name = 1;\n+\n+        // configuration is the list ConfigSchema-based configuration data.\n+        DynamicValue config = 2;\n+    }\n+\n+    message Event {\n+        // Resource contains all data associated with each resource instance.\n+        message Resource {",
    "repo_full_name": "hashicorp/terraform",
    "discussion_comments": [
      {
        "comment_id": "2090782822",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 37007,
        "pr_file": "docs/plugin-protocol/tfplugin5.proto",
        "discussion_id": "2090782822",
        "commented_code": "@@ -811,3 +819,45 @@ message CallFunction {\n         FunctionError error = 2;\n     }\n }\n+\n+message ListResource {\n+    message Request {\n+        // type_name is the managed resource type name.\n+        string type_name = 1;\n+\n+        // configuration is the list ConfigSchema-based configuration data.\n+        DynamicValue config = 2;\n+    }\n+\n+    message Event {\n+        // Resource contains all data associated with each resource instance.\n+        message Resource {",
        "comment_created_at": "2025-05-15T09:52:58+00:00",
        "comment_author": "dsa0x",
        "comment_body": "Should we rename this to `Result` or `ManagedResource` ? \r\n`Resource` is such an overloaded name, and I think it may be confusing.",
        "pr_file_module": null
      },
      {
        "comment_id": "2090880598",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 37007,
        "pr_file": "docs/plugin-protocol/tfplugin5.proto",
        "discussion_id": "2090782822",
        "commented_code": "@@ -811,3 +819,45 @@ message CallFunction {\n         FunctionError error = 2;\n     }\n }\n+\n+message ListResource {\n+    message Request {\n+        // type_name is the managed resource type name.\n+        string type_name = 1;\n+\n+        // configuration is the list ConfigSchema-based configuration data.\n+        DynamicValue config = 2;\n+    }\n+\n+    message Event {\n+        // Resource contains all data associated with each resource instance.\n+        message Resource {",
        "comment_created_at": "2025-05-15T10:44:51+00:00",
        "comment_author": "dbanck",
        "comment_body": "I'm in favor of `Result` then, because `ManagedResource` implies to me that it is a resource managed by Terraform, which isn't the case here.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1632138600",
    "pr_number": 35183,
    "pr_file": "website/docs/cli/code/index.mdx",
    "created_at": "2024-06-09T00:35:33+00:00",
    "commented_code": "---\n page_title: Writing and Modifying Code - Terraform CLI\n description: >-\n-  Learn commands that help validate, format, and upgrade code written in the\n-  Terraform Configuration Language.\n+  Learn commands that help validate, format, and upgrade code written in \n+  Terraform's configuration language.",
    "repo_full_name": "hashicorp/terraform",
    "discussion_comments": [
      {
        "comment_id": "1632138600",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 35183,
        "pr_file": "website/docs/cli/code/index.mdx",
        "discussion_id": "1632138600",
        "commented_code": "@@ -1,8 +1,8 @@\n ---\n page_title: Writing and Modifying Code - Terraform CLI\n description: >-\n-  Learn commands that help validate, format, and upgrade code written in the\n-  Terraform Configuration Language.\n+  Learn commands that help validate, format, and upgrade code written in \n+  Terraform's configuration language.",
        "comment_created_at": "2024-06-09T00:35:33+00:00",
        "comment_author": "cadamini",
        "comment_body": "Used in different places like this, e.g.  \r\n\r\n- https://developer.hashicorp.com/terraform/language/style\r\n- https://developer.hashicorp.com/terraform/language/syntax/configuration\r\n\r\nOther places use \"the Terraform language\".",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2011013382",
    "pr_number": 36743,
    "pr_file": "website/docs/language/block/check.mdx",
    "created_at": "2025-03-24T22:32:37+00:00",
    "commented_code": "+---\n+page_title: Check block reference\n+description: How to use the `check` block to validate infrastructure outside of the usual resource lifecycle.\n+---\n+\n+# `check` block\n+\n+Use the `check` block to validate your infrastructure outside of the typical resource lifecycle.\n+\n+The `check` block executes as the last step of plan or apply operation, after Terraform has planned or provisioned your infrastructure. When a `check` block's assertion fails, Terraform reports a warning and continues executing the current operation.\n+\n+## Background\n+\n+Terraform evaluates `check` blocks locally whenever you plan or apply your configuration. In HCP Terraform, you can enable health checks on a workspace to automatically and continuously execute checks defined in that workspace's configuration. Refer to [Continuous validation](/terraform/cloud-docs/workspaces/health#continuous-validation) for details.\n+\n+The `check` block is one of Terraform's validation rules for verifying your configuration. Other validation rules run during other stages of a Terraform operation, and can block operations if they fail. The `check` block is the only validation rule that does not block operations if it fails, instead Terraform reports a warning and continues executing the current operation. For information on other validation rules, refer to [Validate your configuration](/terraform/language/expressions/custom-conditions).\n+\n+<!-- TODO: Fix link once have Validate your configuration page -->\n+\n+## Configuration model\n+\n+The `check` block supports the following arguments:\n+\n+- [`check \"<LABEL>\"`](#check) &nbsp; block\n+ - [`assert`](#assert) &nbsp; block (required)\n+   - [`condition`](#assert) &nbsp; expression\n+   - [`error_message`](#assert) &nbsp; string\n+ - [`data \"<TYPE>\" \"<LABEL>\"`](#data) &nbsp; block\n+   - [`PROVIDER_ARGUMENTS`](#provider_arguments) &nbsp; block | refer to your provider documentation\n+   - [`depends_on`](#depends_on) &nbsp; list of references\n+   - [`provider`](#provider) &nbsp; reference\n+\n+## Complete configuration\n+\n+All available arguments are defined in the following `check` block. There are no mutually exclusive arguments for a `check` block.\n+\n+```hcl\n+check \"<LABEL>\" {\n+ data \"<TYPE>\" \"<LABEL>\" {\n+   <DATA_CONFIGURATION>\n+ }\n+\n+ assert {\n+   condition     = <EXPRESSION>\n+   error_message = \"<error message string>\"\n+ }\n+}\n+```\n+\n+A `check` block can contain [multiple assertions](#multiple-assertions).\n+\n+## Specification\n+\n+A `check` block supports the following configuration.\n+\n+### `check \"<LABEL>\"`\n+\n+While declaring a `check` block, you must add a unique label that starts with a letter or underscore and contains only letters, digits, underscores, and dashes.",
    "repo_full_name": "hashicorp/terraform",
    "discussion_comments": [
      {
        "comment_id": "2011013382",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 36743,
        "pr_file": "website/docs/language/block/check.mdx",
        "discussion_id": "2011013382",
        "commented_code": "@@ -0,0 +1,241 @@\n+---\n+page_title: Check block reference\n+description: How to use the `check` block to validate infrastructure outside of the usual resource lifecycle.\n+---\n+\n+# `check` block\n+\n+Use the `check` block to validate your infrastructure outside of the typical resource lifecycle.\n+\n+The `check` block executes as the last step of plan or apply operation, after Terraform has planned or provisioned your infrastructure. When a `check` block's assertion fails, Terraform reports a warning and continues executing the current operation.\n+\n+## Background\n+\n+Terraform evaluates `check` blocks locally whenever you plan or apply your configuration. In HCP Terraform, you can enable health checks on a workspace to automatically and continuously execute checks defined in that workspace's configuration. Refer to [Continuous validation](/terraform/cloud-docs/workspaces/health#continuous-validation) for details.\n+\n+The `check` block is one of Terraform's validation rules for verifying your configuration. Other validation rules run during other stages of a Terraform operation, and can block operations if they fail. The `check` block is the only validation rule that does not block operations if it fails, instead Terraform reports a warning and continues executing the current operation. For information on other validation rules, refer to [Validate your configuration](/terraform/language/expressions/custom-conditions).\n+\n+<!-- TODO: Fix link once have Validate your configuration page -->\n+\n+## Configuration model\n+\n+The `check` block supports the following arguments:\n+\n+- [`check \"<LABEL>\"`](#check) &nbsp; block\n+ - [`assert`](#assert) &nbsp; block (required)\n+   - [`condition`](#assert) &nbsp; expression\n+   - [`error_message`](#assert) &nbsp; string\n+ - [`data \"<TYPE>\" \"<LABEL>\"`](#data) &nbsp; block\n+   - [`PROVIDER_ARGUMENTS`](#provider_arguments) &nbsp; block | refer to your provider documentation\n+   - [`depends_on`](#depends_on) &nbsp; list of references\n+   - [`provider`](#provider) &nbsp; reference\n+\n+## Complete configuration\n+\n+All available arguments are defined in the following `check` block. There are no mutually exclusive arguments for a `check` block.\n+\n+```hcl\n+check \"<LABEL>\" {\n+ data \"<TYPE>\" \"<LABEL>\" {\n+   <DATA_CONFIGURATION>\n+ }\n+\n+ assert {\n+   condition     = <EXPRESSION>\n+   error_message = \"<error message string>\"\n+ }\n+}\n+```\n+\n+A `check` block can contain [multiple assertions](#multiple-assertions).\n+\n+## Specification\n+\n+A `check` block supports the following configuration.\n+\n+### `check \"<LABEL>\"`\n+\n+While declaring a `check` block, you must add a unique label that starts with a letter or underscore and contains only letters, digits, underscores, and dashes.",
        "comment_created_at": "2025-03-24T22:32:37+00:00",
        "comment_author": "trujillo-adam",
        "comment_body": "```suggestion\r\nWhile declaring a `check` block, you must add a unique label that starts with a letter or underscore and contains only letters, digits, underscores, and dashes.\r\n```\r\nCan we say something like \"Following the guidance for naming resources when specifying the `check` block label\" and just link to this section? https://terraform-ltppn0zt4-hashicorp.vercel.app/terraform/language/style#resource-naming\r\n\r\nDoes every object defined in the configuration follow the same naming rules? Can we update that section to cover labels for all objects? ",
        "pr_file_module": null
      },
      {
        "comment_id": "2017686711",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 36743,
        "pr_file": "website/docs/language/block/check.mdx",
        "discussion_id": "2011013382",
        "commented_code": "@@ -0,0 +1,241 @@\n+---\n+page_title: Check block reference\n+description: How to use the `check` block to validate infrastructure outside of the usual resource lifecycle.\n+---\n+\n+# `check` block\n+\n+Use the `check` block to validate your infrastructure outside of the typical resource lifecycle.\n+\n+The `check` block executes as the last step of plan or apply operation, after Terraform has planned or provisioned your infrastructure. When a `check` block's assertion fails, Terraform reports a warning and continues executing the current operation.\n+\n+## Background\n+\n+Terraform evaluates `check` blocks locally whenever you plan or apply your configuration. In HCP Terraform, you can enable health checks on a workspace to automatically and continuously execute checks defined in that workspace's configuration. Refer to [Continuous validation](/terraform/cloud-docs/workspaces/health#continuous-validation) for details.\n+\n+The `check` block is one of Terraform's validation rules for verifying your configuration. Other validation rules run during other stages of a Terraform operation, and can block operations if they fail. The `check` block is the only validation rule that does not block operations if it fails, instead Terraform reports a warning and continues executing the current operation. For information on other validation rules, refer to [Validate your configuration](/terraform/language/expressions/custom-conditions).\n+\n+<!-- TODO: Fix link once have Validate your configuration page -->\n+\n+## Configuration model\n+\n+The `check` block supports the following arguments:\n+\n+- [`check \"<LABEL>\"`](#check) &nbsp; block\n+ - [`assert`](#assert) &nbsp; block (required)\n+   - [`condition`](#assert) &nbsp; expression\n+   - [`error_message`](#assert) &nbsp; string\n+ - [`data \"<TYPE>\" \"<LABEL>\"`](#data) &nbsp; block\n+   - [`PROVIDER_ARGUMENTS`](#provider_arguments) &nbsp; block | refer to your provider documentation\n+   - [`depends_on`](#depends_on) &nbsp; list of references\n+   - [`provider`](#provider) &nbsp; reference\n+\n+## Complete configuration\n+\n+All available arguments are defined in the following `check` block. There are no mutually exclusive arguments for a `check` block.\n+\n+```hcl\n+check \"<LABEL>\" {\n+ data \"<TYPE>\" \"<LABEL>\" {\n+   <DATA_CONFIGURATION>\n+ }\n+\n+ assert {\n+   condition     = <EXPRESSION>\n+   error_message = \"<error message string>\"\n+ }\n+}\n+```\n+\n+A `check` block can contain [multiple assertions](#multiple-assertions).\n+\n+## Specification\n+\n+A `check` block supports the following configuration.\n+\n+### `check \"<LABEL>\"`\n+\n+While declaring a `check` block, you must add a unique label that starts with a letter or underscore and contains only letters, digits, underscores, and dashes.",
        "comment_created_at": "2025-03-27T22:44:02+00:00",
        "comment_author": "rkoron007",
        "comment_body": "Good point! I'll link out to the style guide instead! I'm not sure if they do, I'll add links elsewhere where it's appropriate! \r\n```suggestion\r\n[Follow Terraform's resource naming rules](/terraform/language/style#resource-naming) when you declare a `check` block.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1918958110",
    "pr_number": 36339,
    "pr_file": "website/docs/language/stacks/reference/tfstack.mdx",
    "created_at": "2025-01-16T17:44:24+00:00",
    "commented_code": "| Field | Description | Type | Required |\n | :---- | :---- | :---- | :---- |\n | `description` | A human-friendly description for the output. | string | Optional |\n+| `type` | The type of the output. | type constraint | Required |",
    "repo_full_name": "hashicorp/terraform",
    "discussion_comments": [
      {
        "comment_id": "1918958110",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 36339,
        "pr_file": "website/docs/language/stacks/reference/tfstack.mdx",
        "discussion_id": "1918958110",
        "commented_code": "@@ -119,7 +122,10 @@ This section provides details about the fields you can configure in the `output`\n | Field | Description | Type | Required |\n | :---- | :---- | :---- | :---- |\n | `description` | A human-friendly description for the output. | string | Optional |\n+| `type` | The type of the output. | type constraint | Required |",
        "comment_created_at": "2025-01-16T17:44:24+00:00",
        "comment_author": "rkoron007",
        "comment_body": "I'm assuming the types are the same as for input variables? Also, for input variables I used \"string\" as the type, but I'm not in love with it. How do you feel?\r\n```suggestion\r\n| `type` | A type constraint for the output's value. Can be string, number, bool, list, map, set, tuple, or object. | string | Required |\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1919029736",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 36339,
        "pr_file": "website/docs/language/stacks/reference/tfstack.mdx",
        "discussion_id": "1918958110",
        "commented_code": "@@ -119,7 +122,10 @@ This section provides details about the fields you can configure in the `output`\n | Field | Description | Type | Required |\n | :---- | :---- | :---- | :---- |\n | `description` | A human-friendly description for the output. | string | Optional |\n+| `type` | The type of the output. | type constraint | Required |",
        "comment_created_at": "2025-01-16T18:44:18+00:00",
        "comment_author": "nfagerlund",
        "comment_body": "\ud83e\udd14 I think \"string\" isn't right, because... Well, lemme run a check real fast. \r\n\r\nYeah, sure enough: \r\n\r\n![Untitled](https://github.com/user-attachments/assets/74ea1c5b-2f47-4cd6-9289-381aa97d7e11)\r\n\r\nUsing a string will in fact explode. \r\n\r\n_Types_ are a dedicated syntax \u2014\u00a0we settled on [\"type constraints\"](https://developer.hashicorp.com/terraform/language/expressions/type-constraints) as the name of them in the language (as a compromise of some kind; I can't remember the full details) back in 2019 or so. And that type field needs to use that syntax, not a string. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1919161445",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 36339,
        "pr_file": "website/docs/language/stacks/reference/tfstack.mdx",
        "discussion_id": "1918958110",
        "commented_code": "@@ -119,7 +122,10 @@ This section provides details about the fields you can configure in the `output`\n | Field | Description | Type | Required |\n | :---- | :---- | :---- | :---- |\n | `description` | A human-friendly description for the output. | string | Optional |\n+| `type` | The type of the output. | type constraint | Required |",
        "comment_created_at": "2025-01-16T20:31:18+00:00",
        "comment_author": "rkoron007",
        "comment_body": "Oh _dang_ I appreciate you doing a demo! Type constraints makes sense to me - after you merge this in,  I'll make a separate PR to align on using the same language elsewhere in this file and any others it pops up in. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1919309338",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 36339,
        "pr_file": "website/docs/language/stacks/reference/tfstack.mdx",
        "discussion_id": "1918958110",
        "commented_code": "@@ -119,7 +122,10 @@ This section provides details about the fields you can configure in the `output`\n | Field | Description | Type | Required |\n | :---- | :---- | :---- | :---- |\n | `description` | A human-friendly description for the output. | string | Optional |\n+| `type` | The type of the output. | type constraint | Required |",
        "comment_created_at": "2025-01-16T22:15:14+00:00",
        "comment_author": "nfagerlund",
        "comment_body": "awesome, thank u!",
        "pr_file_module": null
      },
      {
        "comment_id": "1919309868",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 36339,
        "pr_file": "website/docs/language/stacks/reference/tfstack.mdx",
        "discussion_id": "1918958110",
        "commented_code": "@@ -119,7 +122,10 @@ This section provides details about the fields you can configure in the `output`\n | Field | Description | Type | Required |\n | :---- | :---- | :---- | :---- |\n | `description` | A human-friendly description for the output. | string | Optional |\n+| `type` | The type of the output. | type constraint | Required |",
        "comment_created_at": "2025-01-16T22:15:51+00:00",
        "comment_author": "nfagerlund",
        "comment_body": "Oh, but could I get a re-checkmark tho? \ud83d\ude05 I invalidated the approval by merging your other suggestion",
        "pr_file_module": null
      },
      {
        "comment_id": "1919319208",
        "repo_full_name": "hashicorp/terraform",
        "pr_number": 36339,
        "pr_file": "website/docs/language/stacks/reference/tfstack.mdx",
        "discussion_id": "1918958110",
        "commented_code": "@@ -119,7 +122,10 @@ This section provides details about the fields you can configure in the `output`\n | Field | Description | Type | Required |\n | :---- | :---- | :---- | :---- |\n | `description` | A human-friendly description for the output. | string | Optional |\n+| `type` | The type of the output. | type constraint | Required |",
        "comment_created_at": "2025-01-16T22:26:42+00:00",
        "comment_author": "rkoron007",
        "comment_body": "That new rule is so silly - done!",
        "pr_file_module": null
      }
    ]
  }
]