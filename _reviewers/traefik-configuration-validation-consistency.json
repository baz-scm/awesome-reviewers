[
  {
    "discussion_id": "1873578339",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/ingressroute.go",
    "created_at": "2024-12-06T16:02:53+00:00",
    "commented_code": "Kind string `json:\"kind,omitempty\"`\n \t// Priority defines the router's priority.\n \t// More info: https://doc.traefik.io/traefik/v3.2/routing/routers/#priority\n+\t// +kubebuilder:validation:Minimum=0",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873578339",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/ingressroute.go",
        "discussion_id": "1873578339",
        "commented_code": "@@ -33,6 +33,7 @@ type Route struct {\n \tKind string `json:\"kind,omitempty\"`\n \t// Priority defines the router's priority.\n \t// More info: https://doc.traefik.io/traefik/v3.2/routing/routers/#priority\n+\t// +kubebuilder:validation:Minimum=0",
        "comment_created_at": "2024-12-06T16:02:53+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Maximum=9223372036854774807\r\n```\r\n\r\nThere is no enforcement on the minimum value and negative value are allowed, but the max is `const maxUserPriority = math.MaxInt - 1000`.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1873650061",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/middleware.go",
    "created_at": "2024-12-06T16:19:31+00:00",
    "commented_code": "// Expression is the condition that triggers the tripped state.\n \tExpression string `json:\"expression,omitempty\" toml:\"expression,omitempty\" yaml:\"expression,omitempty\" export:\"true\"`\n \t// CheckPeriod is the interval between successive checks of the circuit breaker condition (when in standby state).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tCheckPeriod *intstr.IntOrString `json:\"checkPeriod,omitempty\" toml:\"checkPeriod,omitempty\" yaml:\"checkPeriod,omitempty\" export:\"true\"`\n \t// FallbackDuration is the duration for which the circuit breaker will wait before trying to recover (from a tripped state).\n \tFallbackDuration *intstr.IntOrString `json:\"fallbackDuration,omitempty\" toml:\"fallbackDuration,omitempty\" yaml:\"fallbackDuration,omitempty\" export:\"true\"`\n \t// RecoveryDuration is the duration for which the circuit breaker will try to recover (as soon as it is in recovering state).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873650061",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/middleware.go",
        "discussion_id": "1873650061",
        "commented_code": "@@ -83,12 +84,18 @@ type CircuitBreaker struct {\n \t// Expression is the condition that triggers the tripped state.\n \tExpression string `json:\"expression,omitempty\" toml:\"expression,omitempty\" yaml:\"expression,omitempty\" export:\"true\"`\n \t// CheckPeriod is the interval between successive checks of the circuit breaker condition (when in standby state).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tCheckPeriod *intstr.IntOrString `json:\"checkPeriod,omitempty\" toml:\"checkPeriod,omitempty\" yaml:\"checkPeriod,omitempty\" export:\"true\"`\n \t// FallbackDuration is the duration for which the circuit breaker will wait before trying to recover (from a tripped state).\n \tFallbackDuration *intstr.IntOrString `json:\"fallbackDuration,omitempty\" toml:\"fallbackDuration,omitempty\" yaml:\"fallbackDuration,omitempty\" export:\"true\"`\n \t// RecoveryDuration is the duration for which the circuit breaker will try to recover (as soon as it is in recovering state).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
        "comment_created_at": "2024-12-06T16:19:31+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Pattern=\"^[0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h)?$\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1873654271",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/middleware.go",
    "created_at": "2024-12-06T16:22:14+00:00",
    "commented_code": "// More info: https://doc.traefik.io/traefik/v3.2/middlewares/http/retry/\n type Retry struct {\n \t// Attempts defines how many times the request should be retried.\n+\t// +kubebuilder:validation:Minimum=0\n \tAttempts int `json:\"attempts,omitempty\"`\n \t// InitialInterval defines the first wait time in the exponential backoff series.\n \t// The maximum interval is calculated as twice the initialInterval.\n \t// If unspecified, requests will be retried immediately.\n \t// The value of initialInterval should be provided in seconds or as a valid duration format,\n \t// see https://pkg.go.dev/time#ParseDuration.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873654271",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/middleware.go",
        "discussion_id": "1873654271",
        "commented_code": "@@ -229,12 +240,15 @@ type Compress struct {\n // More info: https://doc.traefik.io/traefik/v3.2/middlewares/http/retry/\n type Retry struct {\n \t// Attempts defines how many times the request should be retried.\n+\t// +kubebuilder:validation:Minimum=0\n \tAttempts int `json:\"attempts,omitempty\"`\n \t// InitialInterval defines the first wait time in the exponential backoff series.\n \t// The maximum interval is calculated as twice the initialInterval.\n \t// If unspecified, requests will be retried immediately.\n \t// The value of initialInterval should be provided in seconds or as a valid duration format,\n \t// see https://pkg.go.dev/time#ParseDuration.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
        "comment_created_at": "2024-12-06T16:22:14+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Pattern=\"^[0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h)?$\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1873656024",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransport.go",
    "created_at": "2024-12-06T16:23:39+00:00",
    "commented_code": "// ForwardingTimeouts holds the timeout configurations for forwarding requests to the backend servers.\n type ForwardingTimeouts struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873656024",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransport.go",
        "discussion_id": "1873656024",
        "commented_code": "@@ -52,14 +53,24 @@ type ServersTransportSpec struct {\n // ForwardingTimeouts holds the timeout configurations for forwarding requests to the backend servers.\n type ForwardingTimeouts struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
        "comment_created_at": "2024-12-06T16:23:39+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Pattern=\"^[0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h)?$\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1873656142",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransport.go",
    "created_at": "2024-12-06T16:23:44+00:00",
    "commented_code": "// ForwardingTimeouts holds the timeout configurations for forwarding requests to the backend servers.\n type ForwardingTimeouts struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// ResponseHeaderTimeout is the amount of time to wait for a server's response headers after fully writing the request (including its body, if any).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873656142",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransport.go",
        "discussion_id": "1873656142",
        "commented_code": "@@ -52,14 +53,24 @@ type ServersTransportSpec struct {\n // ForwardingTimeouts holds the timeout configurations for forwarding requests to the backend servers.\n type ForwardingTimeouts struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// ResponseHeaderTimeout is the amount of time to wait for a server's response headers after fully writing the request (including its body, if any).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
        "comment_created_at": "2024-12-06T16:23:44+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Pattern=\"^[0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h)?$\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1873656247",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransport.go",
    "created_at": "2024-12-06T16:23:49+00:00",
    "commented_code": "// ForwardingTimeouts holds the timeout configurations for forwarding requests to the backend servers.\n type ForwardingTimeouts struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// ResponseHeaderTimeout is the amount of time to wait for a server's response headers after fully writing the request (including its body, if any).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tResponseHeaderTimeout *intstr.IntOrString `json:\"responseHeaderTimeout,omitempty\"`\n \t// IdleConnTimeout is the maximum period for which an idle HTTP keep-alive connection will remain open before closing itself.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873656247",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransport.go",
        "discussion_id": "1873656247",
        "commented_code": "@@ -52,14 +53,24 @@ type ServersTransportSpec struct {\n // ForwardingTimeouts holds the timeout configurations for forwarding requests to the backend servers.\n type ForwardingTimeouts struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// ResponseHeaderTimeout is the amount of time to wait for a server's response headers after fully writing the request (including its body, if any).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tResponseHeaderTimeout *intstr.IntOrString `json:\"responseHeaderTimeout,omitempty\"`\n \t// IdleConnTimeout is the maximum period for which an idle HTTP keep-alive connection will remain open before closing itself.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
        "comment_created_at": "2024-12-06T16:23:49+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Pattern=\"^[0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h)?$\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1873656364",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransport.go",
    "created_at": "2024-12-06T16:23:54+00:00",
    "commented_code": "// ForwardingTimeouts holds the timeout configurations for forwarding requests to the backend servers.\n type ForwardingTimeouts struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// ResponseHeaderTimeout is the amount of time to wait for a server's response headers after fully writing the request (including its body, if any).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tResponseHeaderTimeout *intstr.IntOrString `json:\"responseHeaderTimeout,omitempty\"`\n \t// IdleConnTimeout is the maximum period for which an idle HTTP keep-alive connection will remain open before closing itself.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tIdleConnTimeout *intstr.IntOrString `json:\"idleConnTimeout,omitempty\"`\n \t// ReadIdleTimeout is the timeout after which a health check using ping frame will be carried out if no frame is received on the HTTP/2 connection.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873656364",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransport.go",
        "discussion_id": "1873656364",
        "commented_code": "@@ -52,14 +53,24 @@ type ServersTransportSpec struct {\n // ForwardingTimeouts holds the timeout configurations for forwarding requests to the backend servers.\n type ForwardingTimeouts struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// ResponseHeaderTimeout is the amount of time to wait for a server's response headers after fully writing the request (including its body, if any).\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tResponseHeaderTimeout *intstr.IntOrString `json:\"responseHeaderTimeout,omitempty\"`\n \t// IdleConnTimeout is the maximum period for which an idle HTTP keep-alive connection will remain open before closing itself.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tIdleConnTimeout *intstr.IntOrString `json:\"idleConnTimeout,omitempty\"`\n \t// ReadIdleTimeout is the timeout after which a health check using ping frame will be carried out if no frame is received on the HTTP/2 connection.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
        "comment_created_at": "2024-12-06T16:23:54+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Pattern=\"^[0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h)?$\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1873656543",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransporttcp.go",
    "created_at": "2024-12-06T16:24:05+00:00",
    "commented_code": "// ServersTransportTCPSpec defines the desired state of a ServersTransportTCP.\n type ServersTransportTCPSpec struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873656543",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransporttcp.go",
        "discussion_id": "1873656543",
        "commented_code": "@@ -28,10 +28,16 @@ type ServersTransportTCP struct {\n // ServersTransportTCPSpec defines the desired state of a ServersTransportTCP.\n type ServersTransportTCPSpec struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
        "comment_created_at": "2024-12-06T16:24:05+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Pattern=\"^[0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h)?$\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1873661496",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransporttcp.go",
    "created_at": "2024-12-06T16:28:10+00:00",
    "commented_code": "// ServersTransportTCPSpec defines the desired state of a ServersTransportTCP.\n type ServersTransportTCPSpec struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// DialKeepAlive is the interval between keep-alive probes for an active network connection. If zero, keep-alive probes are sent with a default value (currently 15 seconds), if supported by the protocol and operating system. Network protocols or operating systems that do not support keep-alives ignore this field. If negative, keep-alive probes are disabled.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873661496",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransporttcp.go",
        "discussion_id": "1873661496",
        "commented_code": "@@ -28,10 +28,16 @@ type ServersTransportTCP struct {\n // ServersTransportTCPSpec defines the desired state of a ServersTransportTCP.\n type ServersTransportTCPSpec struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// DialKeepAlive is the interval between keep-alive probes for an active network connection. If zero, keep-alive probes are sent with a default value (currently 15 seconds), if supported by the protocol and operating system. Network protocols or operating systems that do not support keep-alives ignore this field. If negative, keep-alive probes are disabled.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
        "comment_created_at": "2024-12-06T16:28:10+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Pattern=\"^[0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h)?$\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1873661716",
    "pr_number": 11311,
    "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransporttcp.go",
    "created_at": "2024-12-06T16:28:22+00:00",
    "commented_code": "// ServersTransportTCPSpec defines the desired state of a ServersTransportTCP.\n type ServersTransportTCPSpec struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// DialKeepAlive is the interval between keep-alive probes for an active network connection. If zero, keep-alive probes are sent with a default value (currently 15 seconds), if supported by the protocol and operating system. Network protocols or operating systems that do not support keep-alives ignore this field. If negative, keep-alive probes are disabled.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialKeepAlive *intstr.IntOrString `json:\"dialKeepAlive,omitempty\"`\n \t// TerminationDelay defines the delay to wait before fully terminating the connection, after one connected peer has closed its writing capability.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1873661716",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11311,
        "pr_file": "pkg/provider/kubernetes/crd/traefikio/v1alpha1/serverstransporttcp.go",
        "discussion_id": "1873661716",
        "commented_code": "@@ -28,10 +28,16 @@ type ServersTransportTCP struct {\n // ServersTransportTCPSpec defines the desired state of a ServersTransportTCP.\n type ServersTransportTCPSpec struct {\n \t// DialTimeout is the amount of time to wait until a connection to a backend server can be established.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialTimeout *intstr.IntOrString `json:\"dialTimeout,omitempty\"`\n \t// DialKeepAlive is the interval between keep-alive probes for an active network connection. If zero, keep-alive probes are sent with a default value (currently 15 seconds), if supported by the protocol and operating system. Network protocols or operating systems that do not support keep-alives ignore this field. If negative, keep-alive probes are disabled.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"\n+\t// +kubebuilder:validation:XIntOrString\n \tDialKeepAlive *intstr.IntOrString `json:\"dialKeepAlive,omitempty\"`\n \t// TerminationDelay defines the delay to wait before fully terminating the connection, after one connected peer has closed its writing capability.\n+\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$\"",
        "comment_created_at": "2024-12-06T16:28:22+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\t// +kubebuilder:validation:Pattern=\"^[0-9]+(\\\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h)?$\"\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2022880589",
    "pr_number": 11637,
    "pr_file": "pkg/provider/acme/provider.go",
    "created_at": "2025-04-01T13:39:20+00:00",
    "commented_code": "return p.client, nil\n }\n \n+// Maximum allowed value for Configuration.ClientTimeout.\n+// We multiply the timeout by 4, so pick `\"time\".maxDuration / 4`.\n+const maxClientTimeout = time.Duration((1<<63 - 1) / 4)\n+\n func (p *Provider) createHTTPClient() (*http.Client, error) {\n \ttlsConfig, err := p.createClientTLSConfig()\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"creating client TLS config: %w\", err)\n \t}\n \n+\tclientTimeout := 30 * time.Second\n+\tif p.Configuration != nil && p.Configuration.ClientTimeout != nil {\n+\t\ttimeout := time.Duration(*p.Configuration.ClientTimeout)\n+\t\t// clamp value to avoid overflows\n+\t\tclientTimeout = max(min(timeout, maxClientTimeout), 0)\n+\t}\n+\n \treturn &http.Client{\n-\t\tTimeout: 2 * time.Minute,\n+\t\tTimeout: 4 * clientTimeout,\n \t\tTransport: &http.Transport{\n \t\t\tProxy: http.ProxyFromEnvironment,\n \t\t\tDialContext: (&net.Dialer{\n-\t\t\t\tTimeout:   30 * time.Second,\n-\t\t\t\tKeepAlive: 30 * time.Second,\n+\t\t\t\tTimeout:   clientTimeout,\n+\t\t\t\tKeepAlive: clientTimeout,\n \t\t\t}).DialContext,\n-\t\t\tTLSHandshakeTimeout:   30 * time.Second,\n-\t\t\tResponseHeaderTimeout: 30 * time.Second,\n+\t\t\tTLSHandshakeTimeout:   clientTimeout,\n+\t\t\tResponseHeaderTimeout: clientTimeout,",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "2022880589",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11637,
        "pr_file": "pkg/provider/acme/provider.go",
        "discussion_id": "2022880589",
        "commented_code": "@@ -370,22 +371,33 @@ func (p *Provider) getClient() (*lego.Client, error) {\n \treturn p.client, nil\n }\n \n+// Maximum allowed value for Configuration.ClientTimeout.\n+// We multiply the timeout by 4, so pick `\"time\".maxDuration / 4`.\n+const maxClientTimeout = time.Duration((1<<63 - 1) / 4)\n+\n func (p *Provider) createHTTPClient() (*http.Client, error) {\n \ttlsConfig, err := p.createClientTLSConfig()\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"creating client TLS config: %w\", err)\n \t}\n \n+\tclientTimeout := 30 * time.Second\n+\tif p.Configuration != nil && p.Configuration.ClientTimeout != nil {\n+\t\ttimeout := time.Duration(*p.Configuration.ClientTimeout)\n+\t\t// clamp value to avoid overflows\n+\t\tclientTimeout = max(min(timeout, maxClientTimeout), 0)\n+\t}\n+\n \treturn &http.Client{\n-\t\tTimeout: 2 * time.Minute,\n+\t\tTimeout: 4 * clientTimeout,\n \t\tTransport: &http.Transport{\n \t\t\tProxy: http.ProxyFromEnvironment,\n \t\t\tDialContext: (&net.Dialer{\n-\t\t\t\tTimeout:   30 * time.Second,\n-\t\t\t\tKeepAlive: 30 * time.Second,\n+\t\t\t\tTimeout:   clientTimeout,\n+\t\t\t\tKeepAlive: clientTimeout,\n \t\t\t}).DialContext,\n-\t\t\tTLSHandshakeTimeout:   30 * time.Second,\n-\t\t\tResponseHeaderTimeout: 30 * time.Second,\n+\t\t\tTLSHandshakeTimeout:   clientTimeout,\n+\t\t\tResponseHeaderTimeout: clientTimeout,",
        "comment_created_at": "2025-04-01T13:39:20+00:00",
        "comment_author": "rtribotte",
        "comment_body": "Hi @tkw1536,\r\n\r\nThanks this contribution!\r\n\r\nAt a glance, having an option defining all timeouts at once is not something we would do.\r\nIt seems that only the `ResponseHeaderTimeout` timeout could be expose to solve the described use case.\r\nWDYT of iterating in that way?\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2023271097",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11637,
        "pr_file": "pkg/provider/acme/provider.go",
        "discussion_id": "2022880589",
        "commented_code": "@@ -370,22 +371,33 @@ func (p *Provider) getClient() (*lego.Client, error) {\n \treturn p.client, nil\n }\n \n+// Maximum allowed value for Configuration.ClientTimeout.\n+// We multiply the timeout by 4, so pick `\"time\".maxDuration / 4`.\n+const maxClientTimeout = time.Duration((1<<63 - 1) / 4)\n+\n func (p *Provider) createHTTPClient() (*http.Client, error) {\n \ttlsConfig, err := p.createClientTLSConfig()\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"creating client TLS config: %w\", err)\n \t}\n \n+\tclientTimeout := 30 * time.Second\n+\tif p.Configuration != nil && p.Configuration.ClientTimeout != nil {\n+\t\ttimeout := time.Duration(*p.Configuration.ClientTimeout)\n+\t\t// clamp value to avoid overflows\n+\t\tclientTimeout = max(min(timeout, maxClientTimeout), 0)\n+\t}\n+\n \treturn &http.Client{\n-\t\tTimeout: 2 * time.Minute,\n+\t\tTimeout: 4 * clientTimeout,\n \t\tTransport: &http.Transport{\n \t\t\tProxy: http.ProxyFromEnvironment,\n \t\t\tDialContext: (&net.Dialer{\n-\t\t\t\tTimeout:   30 * time.Second,\n-\t\t\t\tKeepAlive: 30 * time.Second,\n+\t\t\t\tTimeout:   clientTimeout,\n+\t\t\t\tKeepAlive: clientTimeout,\n \t\t\t}).DialContext,\n-\t\t\tTLSHandshakeTimeout:   30 * time.Second,\n-\t\t\tResponseHeaderTimeout: 30 * time.Second,\n+\t\t\tTLSHandshakeTimeout:   clientTimeout,\n+\t\t\tResponseHeaderTimeout: clientTimeout,",
        "comment_created_at": "2025-04-01T17:05:47+00:00",
        "comment_author": "tkw1536",
        "comment_body": "Only setting `client.Transport.ResponseHeaderTimeout` should address the issue. \r\nHowever it does not make sense to have `client.Timeout < client.Transport.ResponseHeaderTimeout`, so we would at least have to set that field also. \r\n\r\nI've updated the PR (and rebased onto master). \r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2023286742",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11637,
        "pr_file": "pkg/provider/acme/provider.go",
        "discussion_id": "2022880589",
        "commented_code": "@@ -370,22 +371,33 @@ func (p *Provider) getClient() (*lego.Client, error) {\n \treturn p.client, nil\n }\n \n+// Maximum allowed value for Configuration.ClientTimeout.\n+// We multiply the timeout by 4, so pick `\"time\".maxDuration / 4`.\n+const maxClientTimeout = time.Duration((1<<63 - 1) / 4)\n+\n func (p *Provider) createHTTPClient() (*http.Client, error) {\n \ttlsConfig, err := p.createClientTLSConfig()\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"creating client TLS config: %w\", err)\n \t}\n \n+\tclientTimeout := 30 * time.Second\n+\tif p.Configuration != nil && p.Configuration.ClientTimeout != nil {\n+\t\ttimeout := time.Duration(*p.Configuration.ClientTimeout)\n+\t\t// clamp value to avoid overflows\n+\t\tclientTimeout = max(min(timeout, maxClientTimeout), 0)\n+\t}\n+\n \treturn &http.Client{\n-\t\tTimeout: 2 * time.Minute,\n+\t\tTimeout: 4 * clientTimeout,\n \t\tTransport: &http.Transport{\n \t\t\tProxy: http.ProxyFromEnvironment,\n \t\t\tDialContext: (&net.Dialer{\n-\t\t\t\tTimeout:   30 * time.Second,\n-\t\t\t\tKeepAlive: 30 * time.Second,\n+\t\t\t\tTimeout:   clientTimeout,\n+\t\t\t\tKeepAlive: clientTimeout,\n \t\t\t}).DialContext,\n-\t\t\tTLSHandshakeTimeout:   30 * time.Second,\n-\t\t\tResponseHeaderTimeout: 30 * time.Second,\n+\t\t\tTLSHandshakeTimeout:   clientTimeout,\n+\t\t\tResponseHeaderTimeout: clientTimeout,",
        "comment_created_at": "2025-04-01T17:10:16+00:00",
        "comment_author": "tkw1536",
        "comment_body": "I have two more questions:\r\n\r\n- Any opinions on the name of the configuration option? It is currently `clientTimeout` (client as in ACME client). \r\n- I'm currently using a `*ptypes.Duration`. The \"default\" of 30s is applied only in `createHTTPClient` (when it is nil). Does it make sense to use a non-pointer `ptypes.Duration` with a default in `SetDefaults` instead?\r\nI would imagine that would need quite a few changes in tests all over the place (wherever a config is loaded and SetDefaults is called). \r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2024395715",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11637,
        "pr_file": "pkg/provider/acme/provider.go",
        "discussion_id": "2022880589",
        "commented_code": "@@ -370,22 +371,33 @@ func (p *Provider) getClient() (*lego.Client, error) {\n \treturn p.client, nil\n }\n \n+// Maximum allowed value for Configuration.ClientTimeout.\n+// We multiply the timeout by 4, so pick `\"time\".maxDuration / 4`.\n+const maxClientTimeout = time.Duration((1<<63 - 1) / 4)\n+\n func (p *Provider) createHTTPClient() (*http.Client, error) {\n \ttlsConfig, err := p.createClientTLSConfig()\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"creating client TLS config: %w\", err)\n \t}\n \n+\tclientTimeout := 30 * time.Second\n+\tif p.Configuration != nil && p.Configuration.ClientTimeout != nil {\n+\t\ttimeout := time.Duration(*p.Configuration.ClientTimeout)\n+\t\t// clamp value to avoid overflows\n+\t\tclientTimeout = max(min(timeout, maxClientTimeout), 0)\n+\t}\n+\n \treturn &http.Client{\n-\t\tTimeout: 2 * time.Minute,\n+\t\tTimeout: 4 * clientTimeout,\n \t\tTransport: &http.Transport{\n \t\t\tProxy: http.ProxyFromEnvironment,\n \t\t\tDialContext: (&net.Dialer{\n-\t\t\t\tTimeout:   30 * time.Second,\n-\t\t\t\tKeepAlive: 30 * time.Second,\n+\t\t\t\tTimeout:   clientTimeout,\n+\t\t\t\tKeepAlive: clientTimeout,\n \t\t\t}).DialContext,\n-\t\t\tTLSHandshakeTimeout:   30 * time.Second,\n-\t\t\tResponseHeaderTimeout: 30 * time.Second,\n+\t\t\tTLSHandshakeTimeout:   clientTimeout,\n+\t\t\tResponseHeaderTimeout: clientTimeout,",
        "comment_created_at": "2025-04-02T08:58:01+00:00",
        "comment_author": "rtribotte",
        "comment_body": "@tkw1536 I agree, I think I overlooked the problematic here.\r\n\r\nI think we should expose both Timeout and ResponseHeaderTimeout.\r\nA check should ensure that ResponseHeaderTimeout is not greater than Timeout, and this should be a requirement for Traefik to startup.\r\n\r\n> I'm currently using a *ptypes.Duration. The \"default\" of 30s is applied only in createHTTPClient (when it is nil). Does it make sense to use a non-pointer ptypes.Duration with a default in SetDefaults instead?\r\nI would imagine that would need quite a few changes in tests all over the place (wherever a config is loaded and SetDefaults is called).\r\n\r\nYes, there is no need for a pointer, as the `SetDefaults` would always replace the nil value.",
        "pr_file_module": null
      },
      {
        "comment_id": "2024808850",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11637,
        "pr_file": "pkg/provider/acme/provider.go",
        "discussion_id": "2022880589",
        "commented_code": "@@ -370,22 +371,33 @@ func (p *Provider) getClient() (*lego.Client, error) {\n \treturn p.client, nil\n }\n \n+// Maximum allowed value for Configuration.ClientTimeout.\n+// We multiply the timeout by 4, so pick `\"time\".maxDuration / 4`.\n+const maxClientTimeout = time.Duration((1<<63 - 1) / 4)\n+\n func (p *Provider) createHTTPClient() (*http.Client, error) {\n \ttlsConfig, err := p.createClientTLSConfig()\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"creating client TLS config: %w\", err)\n \t}\n \n+\tclientTimeout := 30 * time.Second\n+\tif p.Configuration != nil && p.Configuration.ClientTimeout != nil {\n+\t\ttimeout := time.Duration(*p.Configuration.ClientTimeout)\n+\t\t// clamp value to avoid overflows\n+\t\tclientTimeout = max(min(timeout, maxClientTimeout), 0)\n+\t}\n+\n \treturn &http.Client{\n-\t\tTimeout: 2 * time.Minute,\n+\t\tTimeout: 4 * clientTimeout,\n \t\tTransport: &http.Transport{\n \t\t\tProxy: http.ProxyFromEnvironment,\n \t\t\tDialContext: (&net.Dialer{\n-\t\t\t\tTimeout:   30 * time.Second,\n-\t\t\t\tKeepAlive: 30 * time.Second,\n+\t\t\t\tTimeout:   clientTimeout,\n+\t\t\t\tKeepAlive: clientTimeout,\n \t\t\t}).DialContext,\n-\t\t\tTLSHandshakeTimeout:   30 * time.Second,\n-\t\t\tResponseHeaderTimeout: 30 * time.Second,\n+\t\t\tTLSHandshakeTimeout:   clientTimeout,\n+\t\t\tResponseHeaderTimeout: clientTimeout,",
        "comment_created_at": "2025-04-02T13:15:33+00:00",
        "comment_author": "tkw1536",
        "comment_body": "I've updated to use non-pointers and introduced a second ResponseHeaderTimeout timeout. \r\n\r\n> A check should ensure that ResponseHeaderTimeout is not greater than Timeout, and this should be a requirement for Traefik to startup.\r\n\r\nI've introduced a check inside of the `Init` method. \r\nWhen setting values incorrectly the provider fails to start:\r\n\r\n```\r\nERR The ACME resolve is skipped from the resolvers list error=\"clientTimeout must be at least clientResponseHeaderTimeout\" resolver=institution\r\nERR error=\"HTTP challenge is not enabled\" entryPointName=web routerName=acme-http@internal\r\n```\r\nThe rest operates normally, only the provider will not start. \r\nIs there a different place you were thinking of putting the check to preventing traefik startup completely?\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "2050679603",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11637,
        "pr_file": "pkg/provider/acme/provider.go",
        "discussion_id": "2022880589",
        "commented_code": "@@ -370,22 +371,33 @@ func (p *Provider) getClient() (*lego.Client, error) {\n \treturn p.client, nil\n }\n \n+// Maximum allowed value for Configuration.ClientTimeout.\n+// We multiply the timeout by 4, so pick `\"time\".maxDuration / 4`.\n+const maxClientTimeout = time.Duration((1<<63 - 1) / 4)\n+\n func (p *Provider) createHTTPClient() (*http.Client, error) {\n \ttlsConfig, err := p.createClientTLSConfig()\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"creating client TLS config: %w\", err)\n \t}\n \n+\tclientTimeout := 30 * time.Second\n+\tif p.Configuration != nil && p.Configuration.ClientTimeout != nil {\n+\t\ttimeout := time.Duration(*p.Configuration.ClientTimeout)\n+\t\t// clamp value to avoid overflows\n+\t\tclientTimeout = max(min(timeout, maxClientTimeout), 0)\n+\t}\n+\n \treturn &http.Client{\n-\t\tTimeout: 2 * time.Minute,\n+\t\tTimeout: 4 * clientTimeout,\n \t\tTransport: &http.Transport{\n \t\t\tProxy: http.ProxyFromEnvironment,\n \t\t\tDialContext: (&net.Dialer{\n-\t\t\t\tTimeout:   30 * time.Second,\n-\t\t\t\tKeepAlive: 30 * time.Second,\n+\t\t\t\tTimeout:   clientTimeout,\n+\t\t\t\tKeepAlive: clientTimeout,\n \t\t\t}).DialContext,\n-\t\t\tTLSHandshakeTimeout:   30 * time.Second,\n-\t\t\tResponseHeaderTimeout: 30 * time.Second,\n+\t\t\tTLSHandshakeTimeout:   clientTimeout,\n+\t\t\tResponseHeaderTimeout: clientTimeout,",
        "comment_created_at": "2025-04-18T14:04:16+00:00",
        "comment_author": "tkw1536",
        "comment_body": "Marking as resolved, as this was done in https://github.com/traefik/traefik/pull/11637/commits/47f2a3d534717e0100852ede02d654663195e278. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1969852905",
    "pr_number": 10211,
    "pr_file": "pkg/config/dynamic/middlewares.go",
    "created_at": "2025-02-25T14:06:56+00:00",
    "commented_code": "// If several strategies are defined at the same time, an error will be raised.\n \t// If none are set, the default is to use the request's remote address field (as an ipStrategy).\n \tSourceCriterion *SourceCriterion `json:\"sourceCriterion,omitempty\" toml:\"sourceCriterion,omitempty\" yaml:\"sourceCriterion,omitempty\" export:\"true\"`\n+\n+\tRedis *Redis `json:\"redis,omitempty\" toml:\"redis,omitempty\" yaml:\"redis,omitempty\" export:\"true\"`\n+}\n+\n+// +k8s:deepcopy-gen=true\n+\n+// Redis is the Redis configuration.\n+type Redis struct {\n+\tEndpoints      []string         `json:\"endpoints,omitempty\" toml:\"endpoints,omitempty\" yaml:\"endpoints,omitempty\"`\n+\tTLS            *types.ClientTLS `json:\"tls,omitempty\" toml:\"tls,omitempty\" yaml:\"tls,omitempty\" export:\"true\"`\n+\tUsername       string           `json:\"username,omitempty\" toml:\"username,omitempty\" yaml:\"username,omitempty\" loggable:\"false\"`\n+\tPassword       string           `json:\"password,omitempty\" toml:\"password,omitempty\" yaml:\"password,omitempty\" loggable:\"false\"`\n+\tDB             int              `json:\"db,omitempty\" toml:\"db,omitempty\" yaml:\"db,omitempty\"`\n+\tPoolSize       int              `json:\"poolSize,omitempty\" toml:\"poolSize,omitempty\" yaml:\"poolSize,omitempty\" export:\"true\"`\n+\tMinIdleConns   int              `json:\"minIdleConns,omitempty\" toml:\"minIdleConns,omitempty\" yaml:\"minIdleConns,omitempty\" export:\"true\"`\n+\tMaxActiveConns int              `json:\"maxActiveConns,omitempty\" toml:\"maxActiveConns,omitempty\" yaml:\"maxActiveConns,omitempty\" export:\"true\"`\n+\tReadTimeout    time.Duration    `json:\"readTimeout,omitempty\" toml:\"omitempty,omitempty\" yaml:\"readTimeout,omitempty\" export:\"true\"`\n+\tWriteTimeout   time.Duration    `json:\"writeTimeout,omitempty\" toml:\"writeTimeout,omitempty\" yaml:\"writeTimeout,omitempty\" export:\"true\"`\n+\tDialTimeout    time.Duration    `json:\"dialTimeout,omitempty\" toml:\"dialTimeout,omitempty\" yaml:\"dialTimeout,omitempty\" export:\"true\"`",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "1969852905",
        "repo_full_name": "traefik/traefik",
        "pr_number": 10211,
        "pr_file": "pkg/config/dynamic/middlewares.go",
        "discussion_id": "1969852905",
        "commented_code": "@@ -556,6 +557,25 @@ type RateLimit struct {\n \t// If several strategies are defined at the same time, an error will be raised.\n \t// If none are set, the default is to use the request's remote address field (as an ipStrategy).\n \tSourceCriterion *SourceCriterion `json:\"sourceCriterion,omitempty\" toml:\"sourceCriterion,omitempty\" yaml:\"sourceCriterion,omitempty\" export:\"true\"`\n+\n+\tRedis *Redis `json:\"redis,omitempty\" toml:\"redis,omitempty\" yaml:\"redis,omitempty\" export:\"true\"`\n+}\n+\n+// +k8s:deepcopy-gen=true\n+\n+// Redis is the Redis configuration.\n+type Redis struct {\n+\tEndpoints      []string         `json:\"endpoints,omitempty\" toml:\"endpoints,omitempty\" yaml:\"endpoints,omitempty\"`\n+\tTLS            *types.ClientTLS `json:\"tls,omitempty\" toml:\"tls,omitempty\" yaml:\"tls,omitempty\" export:\"true\"`\n+\tUsername       string           `json:\"username,omitempty\" toml:\"username,omitempty\" yaml:\"username,omitempty\" loggable:\"false\"`\n+\tPassword       string           `json:\"password,omitempty\" toml:\"password,omitempty\" yaml:\"password,omitempty\" loggable:\"false\"`\n+\tDB             int              `json:\"db,omitempty\" toml:\"db,omitempty\" yaml:\"db,omitempty\"`\n+\tPoolSize       int              `json:\"poolSize,omitempty\" toml:\"poolSize,omitempty\" yaml:\"poolSize,omitempty\" export:\"true\"`\n+\tMinIdleConns   int              `json:\"minIdleConns,omitempty\" toml:\"minIdleConns,omitempty\" yaml:\"minIdleConns,omitempty\" export:\"true\"`\n+\tMaxActiveConns int              `json:\"maxActiveConns,omitempty\" toml:\"maxActiveConns,omitempty\" yaml:\"maxActiveConns,omitempty\" export:\"true\"`\n+\tReadTimeout    time.Duration    `json:\"readTimeout,omitempty\" toml:\"omitempty,omitempty\" yaml:\"readTimeout,omitempty\" export:\"true\"`\n+\tWriteTimeout   time.Duration    `json:\"writeTimeout,omitempty\" toml:\"writeTimeout,omitempty\" yaml:\"writeTimeout,omitempty\" export:\"true\"`\n+\tDialTimeout    time.Duration    `json:\"dialTimeout,omitempty\" toml:\"dialTimeout,omitempty\" yaml:\"dialTimeout,omitempty\" export:\"true\"`",
        "comment_created_at": "2025-02-25T14:06:56+00:00",
        "comment_author": "kevinpollet",
        "comment_body": "To be consistent with other config options, here you should use the `ptypes.Duration` type.\r\n\r\nReading the documentation timeout values are the following:\r\n- `0` - default timeout.\r\n- `-1` - no timeout (block indefinitely).\r\n- `-2` - disables SetWriteDeadline calls completely. \r\n\r\nUsually, in Traefik, we explicitly set the default value in a `SetDefaults` method (e.g., https://github.com/traefik/traefik/pull/10211/files#diff-118608c7ea1be45bbabab21b8e5d4c9d26e3c3aaee1a9af2429491a906726dfeR582). This avoids potential breaking changes when updating, and the 0 value means no timeout. Could you adapt the code to reflect this? \r\n\r\nIf I am not mistaken, you will have to use the `*ptypes.Duration` type to be able to differentiate the case when the user set explicitly 0, if not the SetDefaults will be called when the value is 0.\r\n\r\nBy the way for the beginning, I would probably not document and/or expose the -2 option value, wdyt?\r\n\r\n\r\n",
        "pr_file_module": null
      },
      {
        "comment_id": "1979783985",
        "repo_full_name": "traefik/traefik",
        "pr_number": 10211,
        "pr_file": "pkg/config/dynamic/middlewares.go",
        "discussion_id": "1969852905",
        "commented_code": "@@ -556,6 +557,25 @@ type RateLimit struct {\n \t// If several strategies are defined at the same time, an error will be raised.\n \t// If none are set, the default is to use the request's remote address field (as an ipStrategy).\n \tSourceCriterion *SourceCriterion `json:\"sourceCriterion,omitempty\" toml:\"sourceCriterion,omitempty\" yaml:\"sourceCriterion,omitempty\" export:\"true\"`\n+\n+\tRedis *Redis `json:\"redis,omitempty\" toml:\"redis,omitempty\" yaml:\"redis,omitempty\" export:\"true\"`\n+}\n+\n+// +k8s:deepcopy-gen=true\n+\n+// Redis is the Redis configuration.\n+type Redis struct {\n+\tEndpoints      []string         `json:\"endpoints,omitempty\" toml:\"endpoints,omitempty\" yaml:\"endpoints,omitempty\"`\n+\tTLS            *types.ClientTLS `json:\"tls,omitempty\" toml:\"tls,omitempty\" yaml:\"tls,omitempty\" export:\"true\"`\n+\tUsername       string           `json:\"username,omitempty\" toml:\"username,omitempty\" yaml:\"username,omitempty\" loggable:\"false\"`\n+\tPassword       string           `json:\"password,omitempty\" toml:\"password,omitempty\" yaml:\"password,omitempty\" loggable:\"false\"`\n+\tDB             int              `json:\"db,omitempty\" toml:\"db,omitempty\" yaml:\"db,omitempty\"`\n+\tPoolSize       int              `json:\"poolSize,omitempty\" toml:\"poolSize,omitempty\" yaml:\"poolSize,omitempty\" export:\"true\"`\n+\tMinIdleConns   int              `json:\"minIdleConns,omitempty\" toml:\"minIdleConns,omitempty\" yaml:\"minIdleConns,omitempty\" export:\"true\"`\n+\tMaxActiveConns int              `json:\"maxActiveConns,omitempty\" toml:\"maxActiveConns,omitempty\" yaml:\"maxActiveConns,omitempty\" export:\"true\"`\n+\tReadTimeout    time.Duration    `json:\"readTimeout,omitempty\" toml:\"omitempty,omitempty\" yaml:\"readTimeout,omitempty\" export:\"true\"`\n+\tWriteTimeout   time.Duration    `json:\"writeTimeout,omitempty\" toml:\"writeTimeout,omitempty\" yaml:\"writeTimeout,omitempty\" export:\"true\"`\n+\tDialTimeout    time.Duration    `json:\"dialTimeout,omitempty\" toml:\"dialTimeout,omitempty\" yaml:\"dialTimeout,omitempty\" export:\"true\"`",
        "comment_created_at": "2025-03-04T16:17:39+00:00",
        "comment_author": "longquan0104",
        "comment_body": "Thanks. That makes sense so I will do it \ud83d\ude38 ",
        "pr_file_module": null
      }
    ]
  }
]