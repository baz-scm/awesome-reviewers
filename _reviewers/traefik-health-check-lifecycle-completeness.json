[
  {
    "discussion_id": "2200836691",
    "pr_number": 11238,
    "pr_file": "pkg/server/service/tcp/service.go",
    "created_at": "2025-07-11T14:06:27+00:00",
    "commented_code": "continue\n \t\t\t}\n \n+\t\t\ttcpAddr, err := net.ResolveTCPAddr(\"tcp\", server.Address)\n+\t\t\tif err != nil {\n+\t\t\t\tsrvLogger.Error().Err(err).Msg(\"Failed to resolve TCP address\")\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\thealthCheckTargets[server.Address] = tcpAddr\n+\n \t\t\tloadBalancer.AddServer(handler)\n \t\t\tlogger.Debug().Msg(\"Creating TCP server\")\n \t\t}\n \n+\t\tif conf.LoadBalancer.HealthCheck != nil {\n+\t\t\tm.healthCheckers[serviceName] = healthcheck.NewServiceTCPHealthChecker(",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "2200836691",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11238,
        "pr_file": "pkg/server/service/tcp/service.go",
        "discussion_id": "2200836691",
        "commented_code": "@@ -91,14 +96,33 @@ func (m *Manager) BuildTCP(rootCtx context.Context, serviceName string) (tcp.Han\n \t\t\t\tcontinue\n \t\t\t}\n \n+\t\t\ttcpAddr, err := net.ResolveTCPAddr(\"tcp\", server.Address)\n+\t\t\tif err != nil {\n+\t\t\t\tsrvLogger.Error().Err(err).Msg(\"Failed to resolve TCP address\")\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\thealthCheckTargets[server.Address] = tcpAddr\n+\n \t\t\tloadBalancer.AddServer(handler)\n \t\t\tlogger.Debug().Msg(\"Creating TCP server\")\n \t\t}\n \n+\t\tif conf.LoadBalancer.HealthCheck != nil {\n+\t\t\tm.healthCheckers[serviceName] = healthcheck.NewServiceTCPHealthChecker(",
        "comment_created_at": "2025-07-11T14:06:27+00:00",
        "comment_author": "sdelicata",
        "comment_body": "Unless I'm wrong, the TCP health checkers are created but never launched. While HTTP health checkers are started via `serviceManager.LaunchHealthCheck(ctx)` in `pkg/server/routerfactory.go`, there's no equivalent call for TCP services.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2200872722",
    "pr_number": 11238,
    "pr_file": "pkg/server/service/tcp/service.go",
    "created_at": "2025-07-11T14:24:35+00:00",
    "commented_code": "continue\n \t\t\t}\n \n+\t\t\ttcpAddr, err := net.ResolveTCPAddr(\"tcp\", server.Address)\n+\t\t\tif err != nil {\n+\t\t\t\tsrvLogger.Error().Err(err).Msg(\"Failed to resolve TCP address\")\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\thealthCheckTargets[server.Address] = tcpAddr\n+\n \t\t\tloadBalancer.AddServer(handler)\n \t\t\tlogger.Debug().Msg(\"Creating TCP server\")\n \t\t}\n \n+\t\tif conf.LoadBalancer.HealthCheck != nil {\n+\t\t\tm.healthCheckers[serviceName] = healthcheck.NewServiceTCPHealthChecker(\n+\t\t\t\tctx,\n+\t\t\t\tm.dialerManager,\n+\t\t\t\tnil,",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "2200872722",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11238,
        "pr_file": "pkg/server/service/tcp/service.go",
        "discussion_id": "2200872722",
        "commented_code": "@@ -91,14 +96,33 @@ func (m *Manager) BuildTCP(rootCtx context.Context, serviceName string) (tcp.Han\n \t\t\t\tcontinue\n \t\t\t}\n \n+\t\t\ttcpAddr, err := net.ResolveTCPAddr(\"tcp\", server.Address)\n+\t\t\tif err != nil {\n+\t\t\t\tsrvLogger.Error().Err(err).Msg(\"Failed to resolve TCP address\")\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\thealthCheckTargets[server.Address] = tcpAddr\n+\n \t\t\tloadBalancer.AddServer(handler)\n \t\t\tlogger.Debug().Msg(\"Creating TCP server\")\n \t\t}\n \n+\t\tif conf.LoadBalancer.HealthCheck != nil {\n+\t\t\tm.healthCheckers[serviceName] = healthcheck.NewServiceTCPHealthChecker(\n+\t\t\t\tctx,\n+\t\t\t\tm.dialerManager,\n+\t\t\t\tnil,",
        "comment_created_at": "2025-07-11T14:24:35+00:00",
        "comment_author": "sdelicata",
        "comment_body": "`metrics` parameter is passed as `nil` but should be properly integrated like HTTP health checks.",
        "pr_file_module": null
      }
    ]
  }
]