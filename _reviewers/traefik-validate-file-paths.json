[
  {
    "discussion_id": "2222321620",
    "pr_number": 11911,
    "pr_file": "pkg/plugins/client.go",
    "created_at": "2025-07-22T12:11:05+00:00",
    "commented_code": "defer func() { _ = rc.Close() }()\n \n+\t// Split to discard the first part of the path, which is [organization]-[project]-[release commit sha1] when the archive is a Yaegi go plugin with vendoring.\n \tpathParts := strings.SplitN(f.Name, \"/\", 2)\n-\tp := filepath.Join(dest, pathParts[1])\n+\tif len(pathParts) < 2 {\n+\t\treturn fmt.Errorf(\"no root directory: %s\", f.Name)\n+\t}\n+\n+\t// Validate and sanitize the file path",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "2222321620",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11911,
        "pr_file": "pkg/plugins/client.go",
        "discussion_id": "2222321620",
        "commented_code": "@@ -280,24 +282,48 @@ func unzipFile(f *zipa.File, dest string) error {\n \n \tdefer func() { _ = rc.Close() }()\n \n+\t// Split to discard the first part of the path, which is [organization]-[project]-[release commit sha1] when the archive is a Yaegi go plugin with vendoring.\n \tpathParts := strings.SplitN(f.Name, \"/\", 2)\n-\tp := filepath.Join(dest, pathParts[1])\n+\tif len(pathParts) < 2 {\n+\t\treturn fmt.Errorf(\"no root directory: %s\", f.Name)\n+\t}\n+\n+\t// Validate and sanitize the file path",
        "comment_created_at": "2025-07-22T12:11:05+00:00",
        "comment_author": "kevinpollet",
        "comment_body": "```suggestion\n\t// Validate and sanitize the file path.\n```",
        "pr_file_module": null
      }
    ]
  }
]