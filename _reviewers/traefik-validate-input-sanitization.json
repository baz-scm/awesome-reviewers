[
  {
    "discussion_id": "2047216768",
    "pr_number": 11684,
    "pr_file": "docs/content/migration/v2.md",
    "created_at": "2025-04-16T15:41:20+00:00",
    "commented_code": "In `v2.11.14`, the `X-Forwarded-Prefix` header is now handled like the other `X-Forwarded-*` headers: Traefik removes it when it's sent from an untrusted source.\n Please refer to the Forwarded headers [documentation](../routing/entrypoints.md#forwarded-headers) for more details.\n+\n+## v2.11.23\n+\n+### Request Path Sanitization\n+\n+In `v2.11.23`, the incoming request path is now cleaned before being used to match the router rules and sent to the backends.\n+Any `/../`, `/./` or duplicate slash segments in the request path is interpreted and/or collapsed.\n+\n+If you want to disable this behavior, you can set the [`sanitizePath` option](../routing/entrypoints.md#sanitizepath) to `false` in the entryPoint HTTP configuration.\n+This can be useful when dealing with legacy clients that are not url encoding data in the request path.",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "2047216768",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11684,
        "pr_file": "docs/content/migration/v2.md",
        "discussion_id": "2047216768",
        "commented_code": "@@ -656,3 +656,13 @@ Please check out the [entrypoint forwarded headers connection option configurati\n \n In `v2.11.14`, the `X-Forwarded-Prefix` header is now handled like the other `X-Forwarded-*` headers: Traefik removes it when it's sent from an untrusted source.\n Please refer to the Forwarded headers [documentation](../routing/entrypoints.md#forwarded-headers) for more details.\n+\n+## v2.11.23\n+\n+### Request Path Sanitization\n+\n+In `v2.11.23`, the incoming request path is now cleaned before being used to match the router rules and sent to the backends.\n+Any `/../`, `/./` or duplicate slash segments in the request path is interpreted and/or collapsed.\n+\n+If you want to disable this behavior, you can set the [`sanitizePath` option](../routing/entrypoints.md#sanitizepath) to `false` in the entryPoint HTTP configuration.\n+This can be useful when dealing with legacy clients that are not url encoding data in the request path.",
        "comment_created_at": "2025-04-16T15:41:20+00:00",
        "comment_author": "emilevauge",
        "comment_body": "```suggestion\r\nThis can be useful when dealing with legacy clients that are not url-encoding data in the request path. For example, as base64 uses the \u201c/\u201d character internally, if it's not url encoded, it can lead to unsafe routing when the `sanitizePath` option is set to `false`.\r\n\r\n!!! warning \"Security\"\r\nSetting the `sanitizePath` option to `false` is not safe. Ensure every request is properly url encoded instead.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2047229491",
    "pr_number": 11684,
    "pr_file": "docs/content/routing/entrypoints.md",
    "created_at": "2025-04-16T15:48:47+00:00",
    "commented_code": "| false                 | foo=bar&baz=bar;foo | foo=bar&baz=bar&foo     |\n | true                  | foo=bar&baz=bar;foo | foo=bar&baz=bar%3Bfoo   |\n \n+### SanitizePath\n+\n+_Optional, Default=true_\n+\n+The `sanitizePath` option defines whether to enable the request path sanitization.\n+When disabled, the incoming request path is passed to the backend as is.\n+This can be useful when dealing with legacy clients that are not url-encoding data in the request path.\n+\n+!!! warning \"Security\"\n+\n+    When disabling path sanitization, it is then possible that the path interpretation, \n+    notably within the match evaluation of the router rules,\n+    differs from the backend server evaluation.\n+    However, this option is safe to use if no path matchers are involved in the router rules.",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "2047229491",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11684,
        "pr_file": "docs/content/routing/entrypoints.md",
        "discussion_id": "2047229491",
        "commented_code": "@@ -994,6 +994,55 @@ entryPoints:\n | false                 | foo=bar&baz=bar;foo | foo=bar&baz=bar&foo     |\n | true                  | foo=bar&baz=bar;foo | foo=bar&baz=bar%3Bfoo   |\n \n+### SanitizePath\n+\n+_Optional, Default=true_\n+\n+The `sanitizePath` option defines whether to enable the request path sanitization.\n+When disabled, the incoming request path is passed to the backend as is.\n+This can be useful when dealing with legacy clients that are not url-encoding data in the request path.\n+\n+!!! warning \"Security\"\n+\n+    When disabling path sanitization, it is then possible that the path interpretation, \n+    notably within the match evaluation of the router rules,\n+    differs from the backend server evaluation.\n+    However, this option is safe to use if no path matchers are involved in the router rules.",
        "comment_created_at": "2025-04-16T15:48:47+00:00",
        "comment_author": "emilevauge",
        "comment_body": "I'm not sure it's safe to say that. I would instead encourage users to url encode incoming requests.\r\nI would simply state:\r\n\r\n> Setting the `sanitizePath` option to `false` is no safe. Ensure every request is properly url encoded instead.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2048377968",
    "pr_number": 11684,
    "pr_file": "docs/content/routing/entrypoints.md",
    "created_at": "2025-04-17T07:13:30+00:00",
    "commented_code": "| false                 | foo=bar&baz=bar;foo | foo=bar&baz=bar&foo     |\n | true                  | foo=bar&baz=bar;foo | foo=bar&baz=bar%3Bfoo   |\n \n+### SanitizePath\n+\n+_Optional, Default=true_\n+\n+The `sanitizePath` option defines whether to enable the request path sanitization.\n+When disabled, the incoming request path is passed to the backend as is.\n+This can be useful when dealing with legacy clients that are not url-encoding data in the request path.\n+\n+!!! warning \"Security\"\n+\n+    When disabling path sanitization, it is then possible that the path interpretation, \n+    notably within the match evaluation of the router rules,\n+    differs from the backend server evaluation.\n+    However, this option is safe to use if no path matchers are involved in the router rules.",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "2048377968",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11684,
        "pr_file": "docs/content/routing/entrypoints.md",
        "discussion_id": "2048377968",
        "commented_code": "@@ -994,6 +994,55 @@ entryPoints:\n | false                 | foo=bar&baz=bar;foo | foo=bar&baz=bar&foo     |\n | true                  | foo=bar&baz=bar;foo | foo=bar&baz=bar%3Bfoo   |\n \n+### SanitizePath\n+\n+_Optional, Default=true_\n+\n+The `sanitizePath` option defines whether to enable the request path sanitization.\n+When disabled, the incoming request path is passed to the backend as is.\n+This can be useful when dealing with legacy clients that are not url-encoding data in the request path.\n+\n+!!! warning \"Security\"\n+\n+    When disabling path sanitization, it is then possible that the path interpretation, \n+    notably within the match evaluation of the router rules,\n+    differs from the backend server evaluation.\n+    However, this option is safe to use if no path matchers are involved in the router rules.",
        "comment_created_at": "2025-04-17T07:13:30+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n    Setting the sanitizePath option to false is not safe. Ensure every request is properly url encoded instead.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2048379872",
    "pr_number": 11684,
    "pr_file": "docs/content/migration/v2.md",
    "created_at": "2025-04-17T07:14:54+00:00",
    "commented_code": "In `v2.11.14`, the `X-Forwarded-Prefix` header is now handled like the other `X-Forwarded-*` headers: Traefik removes it when it's sent from an untrusted source.\n Please refer to the Forwarded headers [documentation](../routing/entrypoints.md#forwarded-headers) for more details.\n+\n+## v2.11.23\n+\n+### Request Path Sanitization\n+\n+Since `v2.11.23`, the incoming request path is now cleaned before being used to match the router rules and sent to the backends.\n+Any `/../`, `/./` or duplicate slash segments in the request path is interpreted and/or collapsed.\n+\n+If you want to disable this behavior, you can set the [`sanitizePath` option](../routing/entrypoints.md#sanitizepath) to `false` in the entryPoint HTTP configuration.\n+This can be useful when dealing with legacy clients that are not url-encoding data in the request path. For example, as base64 uses the \u201c/\u201d character internally, if it's not url encoded, it can lead to unsafe routing when the `sanitizePath` option is set to `false`.\n+\n+!!! warning \"Security\"\n+Setting the `sanitizePath` option to `false` is not safe. Ensure every request is properly url encoded instead.",
    "repo_full_name": "traefik/traefik",
    "discussion_comments": [
      {
        "comment_id": "2048379872",
        "repo_full_name": "traefik/traefik",
        "pr_number": 11684,
        "pr_file": "docs/content/migration/v2.md",
        "discussion_id": "2048379872",
        "commented_code": "@@ -656,3 +656,16 @@ Please check out the [entrypoint forwarded headers connection option configurati\n \n In `v2.11.14`, the `X-Forwarded-Prefix` header is now handled like the other `X-Forwarded-*` headers: Traefik removes it when it's sent from an untrusted source.\n Please refer to the Forwarded headers [documentation](../routing/entrypoints.md#forwarded-headers) for more details.\n+\n+## v2.11.23\n+\n+### Request Path Sanitization\n+\n+Since `v2.11.23`, the incoming request path is now cleaned before being used to match the router rules and sent to the backends.\n+Any `/../`, `/./` or duplicate slash segments in the request path is interpreted and/or collapsed.\n+\n+If you want to disable this behavior, you can set the [`sanitizePath` option](../routing/entrypoints.md#sanitizepath) to `false` in the entryPoint HTTP configuration.\n+This can be useful when dealing with legacy clients that are not url-encoding data in the request path. For example, as base64 uses the \u201c/\u201d character internally, if it's not url encoded, it can lead to unsafe routing when the `sanitizePath` option is set to `false`.\n+\n+!!! warning \"Security\"\n+Setting the `sanitizePath` option to `false` is not safe. Ensure every request is properly url encoded instead.",
        "comment_created_at": "2025-04-17T07:14:54+00:00",
        "comment_author": "rtribotte",
        "comment_body": "```suggestion\r\n\r\n    Setting the `sanitizePath` option to `false` is not safe. Ensure every request is properly url encoded instead.\r\n```",
        "pr_file_module": null
      }
    ]
  }
]