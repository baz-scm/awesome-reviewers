[
  {
    "discussion_id": "1957413857",
    "pr_number": 4207,
    "pr_file": "lib/binding_web/lib/web-tree-sitter.d.ts",
    "created_at": "2025-02-16T21:02:20+00:00",
    "commented_code": "function setValue(ptr: number, value: number, type?: string): void;\n     let currentParseCallback: ((index: number, position: {row: number, column: number}) => string | undefined) | null;\n     let currentLogCallback: ((message: string, isLex: boolean) => void) | null;\n-    let currentProgressCallback: ((state: {currentOffset: number}) => void) | null;\n+    let currentProgressCallback: ((state: {currentOffset: number, hasError: boolean}) => void) | null;",
    "repo_full_name": "tree-sitter/tree-sitter",
    "discussion_comments": [
      {
        "comment_id": "1957413857",
        "repo_full_name": "tree-sitter/tree-sitter",
        "pr_number": 4207,
        "pr_file": "lib/binding_web/lib/web-tree-sitter.d.ts",
        "discussion_id": "1957413857",
        "commented_code": "@@ -50,7 +50,7 @@ declare namespace RuntimeExports {\n     function setValue(ptr: number, value: number, type?: string): void;\n     let currentParseCallback: ((index: number, position: {row: number, column: number}) => string | undefined) | null;\n     let currentLogCallback: ((message: string, isLex: boolean) => void) | null;\n-    let currentProgressCallback: ((state: {currentOffset: number}) => void) | null;\n+    let currentProgressCallback: ((state: {currentOffset: number, hasError: boolean}) => void) | null;",
        "comment_created_at": "2025-02-16T21:02:20+00:00",
        "comment_author": "vemoo",
        "comment_body": "I just noticed that this file has a comment saying that it's automatically generated.\r\nThis change was needed to avoid an error here: https://github.com/tree-sitter/tree-sitter/blob/f0571b1e33cec3d5c1ec972a7a2001f5495089ab/lib/binding_web/src/parser.ts#L202\r\n\r\nNo sure which the proper place to fix this is.",
        "pr_file_module": null
      },
      {
        "comment_id": "1957419320",
        "repo_full_name": "tree-sitter/tree-sitter",
        "pr_number": 4207,
        "pr_file": "lib/binding_web/lib/web-tree-sitter.d.ts",
        "discussion_id": "1957413857",
        "commented_code": "@@ -50,7 +50,7 @@ declare namespace RuntimeExports {\n     function setValue(ptr: number, value: number, type?: string): void;\n     let currentParseCallback: ((index: number, position: {row: number, column: number}) => string | undefined) | null;\n     let currentLogCallback: ((message: string, isLex: boolean) => void) | null;\n-    let currentProgressCallback: ((state: {currentOffset: number}) => void) | null;\n+    let currentProgressCallback: ((state: {currentOffset: number, hasError: boolean}) => void) | null;",
        "comment_created_at": "2025-02-16T21:32:48+00:00",
        "comment_author": "vemoo",
        "comment_body": "I have found that I can run `cargo xtask build-wasm --emit-tsd` to generate that file, but it doesn't quite match, which leads me to believe that despite the comment at the beginning, this file has been edited by hand.\r\n\r\nAnother think I noticed is that this line \r\nhttps://github.com/tree-sitter/tree-sitter/blob/8b864877dd1acbd2d238d97a28f4e06e1d72610e/lib/binding_web/lib/web-tree-sitter.d.ts#L220\r\n\r\nin the code that gets generated for me appears as:\r\n```typescript\r\nexport default function MainModuleFactory (options?: unknown): Promise<MainModule>;\r\n```\r\n\r\nI don't think that using `EmscriptenModule` is correct because that means that when calling `MainModuleFactory` with `options` all properties and methods of `EmscriptenModule` should be provided. I think that it should be `Partial<EmscriptenModule>`. This seems to match that:\r\nhttps://github.com/amaanq/DefinitelyTyped/blob/b46ebd365a2091aa3f077e409bc9ff622a64f602/types/emscripten/index.d.ts#L99-L101\r\n\r\nAnother issue is that because `EmscriptenModule` comes from `@types/emscripten` and appears in the published types of `web-tree-sitter`, that package should be in `dependencies` or `peerDependencies` not in `devDependencies`.",
        "pr_file_module": null
      },
      {
        "comment_id": "2051362786",
        "repo_full_name": "tree-sitter/tree-sitter",
        "pr_number": 4207,
        "pr_file": "lib/binding_web/lib/web-tree-sitter.d.ts",
        "discussion_id": "1957413857",
        "commented_code": "@@ -50,7 +50,7 @@ declare namespace RuntimeExports {\n     function setValue(ptr: number, value: number, type?: string): void;\n     let currentParseCallback: ((index: number, position: {row: number, column: number}) => string | undefined) | null;\n     let currentLogCallback: ((message: string, isLex: boolean) => void) | null;\n-    let currentProgressCallback: ((state: {currentOffset: number}) => void) | null;\n+    let currentProgressCallback: ((state: {currentOffset: number, hasError: boolean}) => void) | null;",
        "comment_created_at": "2025-04-19T03:20:01+00:00",
        "comment_author": "amaanq",
        "comment_body": "Yes, it's auto-generated but I've tweaked it iirc because some definitions loosely used `any`, or were wrong. We also add some methods at runtime, in [imports.js](https://github.com/tree-sitter/tree-sitter/blob/853ca46899e41ce23ab8297bbebd26851482258a/lib/binding_web/lib/imports.js), which is why I manually added those methods here. I'd rather it not be touched, unless necessary, though your proposed changed would be good to add. I would be okay moving `@types/emscripten` to `peerDependencies`, and I agree with the change to make `options` `Partial<EmscriptenModule>`. I appreciate the investigation here :slightly_smiling_face:",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2242726267",
    "pr_number": 4650,
    "pr_file": "crates/cli/npm/dsl.d.ts",
    "created_at": "2025-07-30T13:38:53+00:00",
    "commented_code": "type PrecRule = { type: 'PREC'; content: Rule; value: number };\n type Repeat1Rule = { type: 'REPEAT1'; content: Rule };\n type RepeatRule = { type: 'REPEAT'; content: Rule };\n+type ReservedRule = { type: 'RESERVED'; content: Rule; context_name: string };",
    "repo_full_name": "tree-sitter/tree-sitter",
    "discussion_comments": [
      {
        "comment_id": "2242726267",
        "repo_full_name": "tree-sitter/tree-sitter",
        "pr_number": 4650,
        "pr_file": "crates/cli/npm/dsl.d.ts",
        "discussion_id": "2242726267",
        "commented_code": "@@ -10,6 +10,7 @@ type PrecRightRule = { type: 'PREC_RIGHT'; content: Rule; value: number };\n type PrecRule = { type: 'PREC'; content: Rule; value: number };\n type Repeat1Rule = { type: 'REPEAT1'; content: Rule };\n type RepeatRule = { type: 'REPEAT'; content: Rule };\n+type ReservedRule = { type: 'RESERVED'; content: Rule; context_name: string };",
        "comment_created_at": "2025-07-30T13:38:53+00:00",
        "comment_author": "ObserverOfTime",
        "comment_body": "Should also be added to `grammar.schema.json`.",
        "pr_file_module": null
      }
    ]
  }
]