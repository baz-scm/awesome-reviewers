[
  {
    "discussion_id": "1826511428",
    "pr_number": 3865,
    "pr_file": "lib/include/tree_sitter/api.h",
    "created_at": "2024-11-02T06:37:14+00:00",
    "commented_code": "/**\n  * Set the range of bytes or (row, column) positions in which the query\n  * will be executed.\n+ *\n+ * If the provided range was set, return `true`. Otherwise, return `false`.",
    "repo_full_name": "tree-sitter/tree-sitter",
    "discussion_comments": [
      {
        "comment_id": "1826511428",
        "repo_full_name": "tree-sitter/tree-sitter",
        "pr_number": 3865,
        "pr_file": "lib/include/tree_sitter/api.h",
        "discussion_id": "1826511428",
        "commented_code": "@@ -1091,9 +1091,11 @@ uint64_t ts_query_cursor_timeout_micros(const TSQueryCursor *self);\n /**\n  * Set the range of bytes or (row, column) positions in which the query\n  * will be executed.\n+ *\n+ * If the provided range was set, return `true`. Otherwise, return `false`.",
        "comment_created_at": "2024-11-02T06:37:14+00:00",
        "comment_author": "amaanq",
        "comment_body": "Clearer explanation\r\n\r\n\"This will return false if the start byte/point is greater than the end byte/point, otherwise it will return true.`\r\n\r\nAlso, do a favor and have the doc comments be associated to each function individually, (adjust byte/point semantics as needed). This will help w/ the rust doc comments in `bindings.rs`",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1536920928",
    "pr_number": 3214,
    "pr_file": "lib/include/tree_sitter/api.h",
    "created_at": "2024-03-24T22:03:41+00:00",
    "commented_code": "*/\n TSNode ts_node_parent(TSNode self);\n \n+/**\n+ * Get a child of 'from_parent' which is a parent to the given node.\n+ * The parent may be indirect.\n+ */\n+TSNode ts_node_closer_parent(TSNode self, TSNode from_parent);",
    "repo_full_name": "tree-sitter/tree-sitter",
    "discussion_comments": [
      {
        "comment_id": "1536920928",
        "repo_full_name": "tree-sitter/tree-sitter",
        "pr_number": 3214,
        "pr_file": "lib/include/tree_sitter/api.h",
        "discussion_id": "1536920928",
        "commented_code": "@@ -551,6 +551,12 @@ TSStateId ts_node_next_parse_state(TSNode self);\n  */\n TSNode ts_node_parent(TSNode self);\n \n+/**\n+ * Get a child of 'from_parent' which is a parent to the given node.\n+ * The parent may be indirect.\n+ */\n+TSNode ts_node_closer_parent(TSNode self, TSNode from_parent);",
        "comment_created_at": "2024-03-24T22:03:41+00:00",
        "comment_author": "lewis6991",
        "comment_body": "This is fairly obscure, or at least the wording could be improved.",
        "pr_file_module": null
      },
      {
        "comment_id": "1536926371",
        "repo_full_name": "tree-sitter/tree-sitter",
        "pr_number": 3214,
        "pr_file": "lib/include/tree_sitter/api.h",
        "discussion_id": "1536920928",
        "commented_code": "@@ -551,6 +551,12 @@ TSStateId ts_node_next_parse_state(TSNode self);\n  */\n TSNode ts_node_parent(TSNode self);\n \n+/**\n+ * Get a child of 'from_parent' which is a parent to the given node.\n+ * The parent may be indirect.\n+ */\n+TSNode ts_node_closer_parent(TSNode self, TSNode from_parent);",
        "comment_created_at": "2024-03-24T22:34:18+00:00",
        "comment_author": "vanaigr",
        "comment_body": "Yes, but I couldn't think of anything simpler.",
        "pr_file_module": null
      },
      {
        "comment_id": "1536928106",
        "repo_full_name": "tree-sitter/tree-sitter",
        "pr_number": 3214,
        "pr_file": "lib/include/tree_sitter/api.h",
        "discussion_id": "1536920928",
        "commented_code": "@@ -551,6 +551,12 @@ TSStateId ts_node_next_parse_state(TSNode self);\n  */\n TSNode ts_node_parent(TSNode self);\n \n+/**\n+ * Get a child of 'from_parent' which is a parent to the given node.\n+ * The parent may be indirect.\n+ */\n+TSNode ts_node_closer_parent(TSNode self, TSNode from_parent);",
        "comment_created_at": "2024-03-24T22:43:33+00:00",
        "comment_author": "lewis6991",
        "comment_body": "At least add an example or something. The fact this can be used to efficiently find a path from a root node is useful in itself.",
        "pr_file_module": null
      }
    ]
  }
]