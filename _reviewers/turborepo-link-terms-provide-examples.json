[
  {
    "discussion_id": "1719258061",
    "pr_number": 9018,
    "pr_file": "docs/repo-docs/reference/configuration.mdx",
    "created_at": "2024-08-16T03:46:24+00:00",
    "commented_code": "environment variable.\n </Callout>\n \n+### `cacheDir`\n+\n+Default: `\".turbo/cache\"`\n+\n+Specify the filesystem cache directory.\n+\n+```jsonc title=\"./turbo.json\"\n+{\n+  \"cacheDir\": \".turbo/cache\"\n+}\n+```\n+\n+### `daemon`\n+\n+Default: `false`\n+\n+Turbo can run a background process to pre-calculate values used for determining work that needs to be done. This standalone process (daemon) is an optimization, and not required for proper functioning of turbo.\n+\n+```jsonc title=\"./turbo.json\"\n+{\n+  \"daemon\": true\n+}\n+```\n+\n+### `envMode`\n+\n+Default: `\"strict\"`\n+\n+Turborepo's Environment Modes allow you to control which environment variables are available to a task at runtime:",
    "repo_full_name": "vercel/turborepo",
    "discussion_comments": [
      {
        "comment_id": "1719258061",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 9018,
        "pr_file": "docs/repo-docs/reference/configuration.mdx",
        "discussion_id": "1719258061",
        "commented_code": "@@ -117,6 +117,47 @@ To help with incremental migration or in situations where you can't use the `pac\n   environment variable.\n </Callout>\n \n+### `cacheDir`\n+\n+Default: `\".turbo/cache\"`\n+\n+Specify the filesystem cache directory.\n+\n+```jsonc title=\"./turbo.json\"\n+{\n+  \"cacheDir\": \".turbo/cache\"\n+}\n+```\n+\n+### `daemon`\n+\n+Default: `false`\n+\n+Turbo can run a background process to pre-calculate values used for determining work that needs to be done. This standalone process (daemon) is an optimization, and not required for proper functioning of turbo.\n+\n+```jsonc title=\"./turbo.json\"\n+{\n+  \"daemon\": true\n+}\n+```\n+\n+### `envMode`\n+\n+Default: `\"strict\"`\n+\n+Turborepo's Environment Modes allow you to control which environment variables are available to a task at runtime:",
        "comment_created_at": "2024-08-16T03:46:24+00:00",
        "comment_author": "anthonyshew",
        "comment_body": "In general, we like to provide the link the first time we mention a term. The game I like to play is: Imagine your coworker just linked you this page and you're only glancingly aware that Turborepo is in your company's codebase. You're not terribly familiar with Turborepo but you're here to learn more about it.\r\n\r\nPutting yourself in those shoes, you're likely to read this \"Environment Modes\" term and think \"Uh, what's that?\", and want to be linked to more information in that moment. You could, of course, keep reading and make it to the end of this section, but you'd probably appreciated the link sooner.\r\n\r\nSo, that said, I'd be lifting the link that's a few lines below to here, and removing the sentence on 153. Both a context and conciseness win!",
        "pr_file_module": null
      },
      {
        "comment_id": "1720820784",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 9018,
        "pr_file": "docs/repo-docs/reference/configuration.mdx",
        "discussion_id": "1719258061",
        "commented_code": "@@ -117,6 +117,47 @@ To help with incremental migration or in situations where you can't use the `pac\n   environment variable.\n </Callout>\n \n+### `cacheDir`\n+\n+Default: `\".turbo/cache\"`\n+\n+Specify the filesystem cache directory.\n+\n+```jsonc title=\"./turbo.json\"\n+{\n+  \"cacheDir\": \".turbo/cache\"\n+}\n+```\n+\n+### `daemon`\n+\n+Default: `false`\n+\n+Turbo can run a background process to pre-calculate values used for determining work that needs to be done. This standalone process (daemon) is an optimization, and not required for proper functioning of turbo.\n+\n+```jsonc title=\"./turbo.json\"\n+{\n+  \"daemon\": true\n+}\n+```\n+\n+### `envMode`\n+\n+Default: `\"strict\"`\n+\n+Turborepo's Environment Modes allow you to control which environment variables are available to a task at runtime:",
        "comment_created_at": "2024-08-17T19:14:57+00:00",
        "comment_author": "dimitropoulos",
        "comment_body": "this was lifted verbatim from the [existing docs](https://github.com/vercel/turborepo/blob/219c1140d781a7bd5657e7d718e5e96247c8b00c/docs/repo-docs/crafting-your-repository/using-environment-variables.mdx?plain=1#L84-L87) - it seems strange, in this case, to link to other docs when the place the link goes says exactly the same thing that's here.  would you like to just link it anyway?",
        "pr_file_module": null
      },
      {
        "comment_id": "1720890266",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 9018,
        "pr_file": "docs/repo-docs/reference/configuration.mdx",
        "discussion_id": "1719258061",
        "commented_code": "@@ -117,6 +117,47 @@ To help with incremental migration or in situations where you can't use the `pac\n   environment variable.\n </Callout>\n \n+### `cacheDir`\n+\n+Default: `\".turbo/cache\"`\n+\n+Specify the filesystem cache directory.\n+\n+```jsonc title=\"./turbo.json\"\n+{\n+  \"cacheDir\": \".turbo/cache\"\n+}\n+```\n+\n+### `daemon`\n+\n+Default: `false`\n+\n+Turbo can run a background process to pre-calculate values used for determining work that needs to be done. This standalone process (daemon) is an optimization, and not required for proper functioning of turbo.\n+\n+```jsonc title=\"./turbo.json\"\n+{\n+  \"daemon\": true\n+}\n+```\n+\n+### `envMode`\n+\n+Default: `\"strict\"`\n+\n+Turborepo's Environment Modes allow you to control which environment variables are available to a task at runtime:",
        "comment_created_at": "2024-08-18T04:22:20+00:00",
        "comment_author": "anthonyshew",
        "comment_body": "Ah, heard! Ignore then. \ud83d\ude04 ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1706993538",
    "pr_number": 8957,
    "pr_file": "docs/repo-docs/reference/watch.mdx",
    "created_at": "2024-08-07T13:23:01+00:00",
    "commented_code": "## Using `turbo watch` with persistent tasks\n \n-When your script has a built-in watcher, you likely don't need to use `turbo watch`. Instead, use your script's built-in watcher and mark the task as long-running using [`\"persistent\": true`](/repo/docs/reference/configuration#persistent).\n+Persistent tasks are marked with [`\"persistent\": true`](/repo/docs/reference/configuration#persistent), meaning they won't exit. Because of this, they cannot be depended on in your task graph.\n \n-Persistent tasks will continue to run as usual with `turbo watch`, allowing persistent and non-persistent tasks to be run at the same time.\n+This means that persistent tasks will be ignored when using `turbo watch`, working the same way they do with [`turbo run`](/repo/docs/reference/run), allowing persistent and non-persistent tasks to be run at the same time.\n+\n+### Dependency-aware persistent tasks\n+\n+When your script has a built-in watcher capable of detecting changes in dependencies, you don't need to use `turbo watch`. Instead, use your script's built-in watcher and mark the task as long-running using [`\"persistent\": true`](/repo/docs/reference/configuration#persistent).",
    "repo_full_name": "vercel/turborepo",
    "discussion_comments": [
      {
        "comment_id": "1706993538",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 8957,
        "pr_file": "docs/repo-docs/reference/watch.mdx",
        "discussion_id": "1706993538",
        "commented_code": "@@ -13,9 +13,19 @@ turbo watch [tasks]\n \n ## Using `turbo watch` with persistent tasks\n \n-When your script has a built-in watcher, you likely don't need to use `turbo watch`. Instead, use your script's built-in watcher and mark the task as long-running using [`\"persistent\": true`](/repo/docs/reference/configuration#persistent).\n+Persistent tasks are marked with [`\"persistent\": true`](/repo/docs/reference/configuration#persistent), meaning they won't exit. Because of this, they cannot be depended on in your task graph.\n \n-Persistent tasks will continue to run as usual with `turbo watch`, allowing persistent and non-persistent tasks to be run at the same time.\n+This means that persistent tasks will be ignored when using `turbo watch`, working the same way they do with [`turbo run`](/repo/docs/reference/run), allowing persistent and non-persistent tasks to be run at the same time.\n+\n+### Dependency-aware persistent tasks\n+\n+When your script has a built-in watcher capable of detecting changes in dependencies, you don't need to use `turbo watch`. Instead, use your script's built-in watcher and mark the task as long-running using [`\"persistent\": true`](/repo/docs/reference/configuration#persistent).",
        "comment_created_at": "2024-08-07T13:23:01+00:00",
        "comment_author": "tknickman",
        "comment_body": "I would add an example of what a built-in watcher is here. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1707025161",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 8957,
        "pr_file": "docs/repo-docs/reference/watch.mdx",
        "discussion_id": "1706993538",
        "commented_code": "@@ -13,9 +13,19 @@ turbo watch [tasks]\n \n ## Using `turbo watch` with persistent tasks\n \n-When your script has a built-in watcher, you likely don't need to use `turbo watch`. Instead, use your script's built-in watcher and mark the task as long-running using [`\"persistent\": true`](/repo/docs/reference/configuration#persistent).\n+Persistent tasks are marked with [`\"persistent\": true`](/repo/docs/reference/configuration#persistent), meaning they won't exit. Because of this, they cannot be depended on in your task graph.\n \n-Persistent tasks will continue to run as usual with `turbo watch`, allowing persistent and non-persistent tasks to be run at the same time.\n+This means that persistent tasks will be ignored when using `turbo watch`, working the same way they do with [`turbo run`](/repo/docs/reference/run), allowing persistent and non-persistent tasks to be run at the same time.\n+\n+### Dependency-aware persistent tasks\n+\n+When your script has a built-in watcher capable of detecting changes in dependencies, you don't need to use `turbo watch`. Instead, use your script's built-in watcher and mark the task as long-running using [`\"persistent\": true`](/repo/docs/reference/configuration#persistent).",
        "comment_created_at": "2024-08-07T13:42:40+00:00",
        "comment_author": "anthonyshew",
        "comment_body": "Nice, good call.",
        "pr_file_module": null
      }
    ]
  }
]