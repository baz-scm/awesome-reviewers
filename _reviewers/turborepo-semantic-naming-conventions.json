[
  {
    "discussion_id": "1475121093",
    "pr_number": 6747,
    "pr_file": "packages/create-turbo/src/transforms/update-commands-in-readme.ts",
    "created_at": "2024-02-01T20:38:33+00:00",
    "commented_code": "+import path from \"node:path\";\n+import fs from \"node:fs/promises\";\n+import { TransformError } from \"./errors\";\n+import type { TransformInput, TransformResult} from \"./types\";\n+\n+const meta = {\n+  name: \"update-commands-in-readme\",\n+};\n+\n+export async function transform(args: TransformInput): TransformResult {\n+  const { prompts, example } = args;\n+\n+  const selectedPackageManager = prompts.packageManager;\n+  const readmeFilePath = path.join(prompts.root, \"README.md\");\n+  try {\n+    // Read the content of the file\n+    let data = await fs.readFile(readmeFilePath, \"utf8\");\n+\n+    // replace package manager\n+    const updatedReadmeData = replacePackageManager(selectedPackageManager, data);    \n+\n+    // Write the updated content back to the file\n+    await fs.writeFile(readmeFilePath, updatedReadmeData, \"utf8\");\n+\n+  } catch (err) {\n+    throw new TransformError(\"Unable to update README.md\", {\n+      transform: meta.name,\n+      fatal: false,\n+    });\n+  }\n+  return { result: \"success\", ...meta };\n+}\n+\n+function replacePackageManager(packageManager, text) {\n+  // an array of all the possible replacement strings.\n+  const replacements = ['pnpm run', 'npm run', 'yarn run', 'bun run', 'pnpm', 'npm', 'yarn', 'bun'];\n+  \n+  // regex to search for a pattern enclosed in single backticks (` `), double backticks (`` ``) or\n+  // triple backticks (``` ```) considering there might be newlines in between backticks and commands.\n+  const searchRegex = new RegExp(`\\`\\`\\`[\\\\s\\\\S]*?\\\\b(?:${replacements.join('|')})\\\\b[\\\\s\\\\S]*?\\`\\`\\`|\\`\\`[\\\\s\\\\S]*?\\\\b(?:${replacements.join('|')})\\\\b[\\\\s\\\\S]*?\\`\\`|\\`[\\\\s\\\\S]*?\\\\b(?:${replacements.join('|')})\\\\b[\\\\s\\\\S]*?\\``, 'g');\n+\n+  // Replace all occurrences of regex with selectedPackageManager\n+  text = text.replace(searchRegex, (match) => {\n+      // replacement regex => the regex required to replace the package manager.\n+      const replacementRegex = new RegExp(`\\\\b(?:${replacements.join('|')})\\\\b`, 'g');\n+      const updatedText = match.replace(replacementRegex, `${packageManager} run`);",
    "repo_full_name": "vercel/turborepo",
    "discussion_comments": [
      {
        "comment_id": "1475121093",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 6747,
        "pr_file": "packages/create-turbo/src/transforms/update-commands-in-readme.ts",
        "discussion_id": "1475121093",
        "commented_code": "@@ -0,0 +1,50 @@\n+import path from \"node:path\";\n+import fs from \"node:fs/promises\";\n+import { TransformError } from \"./errors\";\n+import type { TransformInput, TransformResult} from \"./types\";\n+\n+const meta = {\n+  name: \"update-commands-in-readme\",\n+};\n+\n+export async function transform(args: TransformInput): TransformResult {\n+  const { prompts, example } = args;\n+\n+  const selectedPackageManager = prompts.packageManager;\n+  const readmeFilePath = path.join(prompts.root, \"README.md\");\n+  try {\n+    // Read the content of the file\n+    let data = await fs.readFile(readmeFilePath, \"utf8\");\n+\n+    // replace package manager\n+    const updatedReadmeData = replacePackageManager(selectedPackageManager, data);    \n+\n+    // Write the updated content back to the file\n+    await fs.writeFile(readmeFilePath, updatedReadmeData, \"utf8\");\n+\n+  } catch (err) {\n+    throw new TransformError(\"Unable to update README.md\", {\n+      transform: meta.name,\n+      fatal: false,\n+    });\n+  }\n+  return { result: \"success\", ...meta };\n+}\n+\n+function replacePackageManager(packageManager, text) {\n+  // an array of all the possible replacement strings.\n+  const replacements = ['pnpm run', 'npm run', 'yarn run', 'bun run', 'pnpm', 'npm', 'yarn', 'bun'];\n+  \n+  // regex to search for a pattern enclosed in single backticks (` `), double backticks (`` ``) or\n+  // triple backticks (``` ```) considering there might be newlines in between backticks and commands.\n+  const searchRegex = new RegExp(`\\`\\`\\`[\\\\s\\\\S]*?\\\\b(?:${replacements.join('|')})\\\\b[\\\\s\\\\S]*?\\`\\`\\`|\\`\\`[\\\\s\\\\S]*?\\\\b(?:${replacements.join('|')})\\\\b[\\\\s\\\\S]*?\\`\\`|\\`[\\\\s\\\\S]*?\\\\b(?:${replacements.join('|')})\\\\b[\\\\s\\\\S]*?\\``, 'g');\n+\n+  // Replace all occurrences of regex with selectedPackageManager\n+  text = text.replace(searchRegex, (match) => {\n+      // replacement regex => the regex required to replace the package manager.\n+      const replacementRegex = new RegExp(`\\\\b(?:${replacements.join('|')})\\\\b`, 'g');\n+      const updatedText = match.replace(replacementRegex, `${packageManager} run`);",
        "comment_created_at": "2024-02-01T20:38:33+00:00",
        "comment_author": "tknickman",
        "comment_body": "This should use the name field here, it's causing replacements like:\r\n\r\n```\r\n- [object Object] run build - Build all packages and the docs site\r\n```\r\n\r\n```suggestion\r\n      const updatedText = match.replace(replacementRegex, `${packageManager.name} run`);\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1475124823",
    "pr_number": 6747,
    "pr_file": "packages/create-turbo/src/transforms/update-commands-in-readme.ts",
    "created_at": "2024-02-01T20:42:37+00:00",
    "commented_code": "+import path from \"node:path\";\n+import fs from \"node:fs/promises\";\n+import { TransformError } from \"./errors\";\n+import type { TransformInput, TransformResult} from \"./types\";\n+\n+const meta = {\n+  name: \"update-commands-in-readme\",\n+};\n+\n+export async function transform(args: TransformInput): TransformResult {\n+  const { prompts, example } = args;\n+\n+  const selectedPackageManager = prompts.packageManager;\n+  const readmeFilePath = path.join(prompts.root, \"README.md\");\n+  try {\n+    // Read the content of the file\n+    let data = await fs.readFile(readmeFilePath, \"utf8\");\n+\n+    // replace package manager\n+    const updatedReadmeData = replacePackageManager(selectedPackageManager, data);    \n+\n+    // Write the updated content back to the file\n+    await fs.writeFile(readmeFilePath, updatedReadmeData, \"utf8\");\n+\n+  } catch (err) {\n+    throw new TransformError(\"Unable to update README.md\", {\n+      transform: meta.name,\n+      fatal: false,\n+    });\n+  }\n+  return { result: \"success\", ...meta };\n+}\n+\n+function replacePackageManager(packageManager, text) {",
    "repo_full_name": "vercel/turborepo",
    "discussion_comments": [
      {
        "comment_id": "1475124823",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 6747,
        "pr_file": "packages/create-turbo/src/transforms/update-commands-in-readme.ts",
        "discussion_id": "1475124823",
        "commented_code": "@@ -0,0 +1,50 @@\n+import path from \"node:path\";\n+import fs from \"node:fs/promises\";\n+import { TransformError } from \"./errors\";\n+import type { TransformInput, TransformResult} from \"./types\";\n+\n+const meta = {\n+  name: \"update-commands-in-readme\",\n+};\n+\n+export async function transform(args: TransformInput): TransformResult {\n+  const { prompts, example } = args;\n+\n+  const selectedPackageManager = prompts.packageManager;\n+  const readmeFilePath = path.join(prompts.root, \"README.md\");\n+  try {\n+    // Read the content of the file\n+    let data = await fs.readFile(readmeFilePath, \"utf8\");\n+\n+    // replace package manager\n+    const updatedReadmeData = replacePackageManager(selectedPackageManager, data);    \n+\n+    // Write the updated content back to the file\n+    await fs.writeFile(readmeFilePath, updatedReadmeData, \"utf8\");\n+\n+  } catch (err) {\n+    throw new TransformError(\"Unable to update README.md\", {\n+      transform: meta.name,\n+      fatal: false,\n+    });\n+  }\n+  return { result: \"success\", ...meta };\n+}\n+\n+function replacePackageManager(packageManager, text) {",
        "comment_created_at": "2024-02-01T20:42:37+00:00",
        "comment_author": "tknickman",
        "comment_body": "This function needs types for the parameters and the return!",
        "pr_file_module": null
      },
      {
        "comment_id": "1486542398",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 6747,
        "pr_file": "packages/create-turbo/src/transforms/update-commands-in-readme.ts",
        "discussion_id": "1475124823",
        "commented_code": "@@ -0,0 +1,50 @@\n+import path from \"node:path\";\n+import fs from \"node:fs/promises\";\n+import { TransformError } from \"./errors\";\n+import type { TransformInput, TransformResult} from \"./types\";\n+\n+const meta = {\n+  name: \"update-commands-in-readme\",\n+};\n+\n+export async function transform(args: TransformInput): TransformResult {\n+  const { prompts, example } = args;\n+\n+  const selectedPackageManager = prompts.packageManager;\n+  const readmeFilePath = path.join(prompts.root, \"README.md\");\n+  try {\n+    // Read the content of the file\n+    let data = await fs.readFile(readmeFilePath, \"utf8\");\n+\n+    // replace package manager\n+    const updatedReadmeData = replacePackageManager(selectedPackageManager, data);    \n+\n+    // Write the updated content back to the file\n+    await fs.writeFile(readmeFilePath, updatedReadmeData, \"utf8\");\n+\n+  } catch (err) {\n+    throw new TransformError(\"Unable to update README.md\", {\n+      transform: meta.name,\n+      fatal: false,\n+    });\n+  }\n+  return { result: \"success\", ...meta };\n+}\n+\n+function replacePackageManager(packageManager, text) {",
        "comment_created_at": "2024-02-12T17:38:21+00:00",
        "comment_author": "DependerKumarSoni",
        "comment_body": "What should be the type of packageManager?\r\nshould I go with `function replacePackageManager(packageManager: { name: string }, text: string): string {` ?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1954544471",
    "pr_number": 9950,
    "pr_file": "packages/turbo-repository/js/index.d.ts",
    "created_at": "2025-02-13T13:54:58+00:00",
    "commented_code": "*/\n   affectedPackages(\n     files: Array<string>,\n-    changedLockfile?: string | undefined | null\n+    comparison?: string | undefined | null,",
    "repo_full_name": "vercel/turborepo",
    "discussion_comments": [
      {
        "comment_id": "1954544471",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 9950,
        "pr_file": "packages/turbo-repository/js/index.d.ts",
        "discussion_id": "1954544471",
        "commented_code": "@@ -57,6 +57,7 @@ export class Workspace {\n    */\n   affectedPackages(\n     files: Array<string>,\n-    changedLockfile?: string | undefined | null\n+    comparison?: string | undefined | null,",
        "comment_created_at": "2025-02-13T13:54:58+00:00",
        "comment_author": "chris-olszewski",
        "comment_body": "Not blocking, but I feel like `from` or `base` is less confusing name.\r\nDefer to Git wizard @NicholasLYang, if you're finding affected packages between `HEAD` and another commit, is there a standard name for what to call that other commit?",
        "pr_file_module": null
      },
      {
        "comment_id": "1954630221",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 9950,
        "pr_file": "packages/turbo-repository/js/index.d.ts",
        "discussion_id": "1954544471",
        "commented_code": "@@ -57,6 +57,7 @@ export class Workspace {\n    */\n   affectedPackages(\n     files: Array<string>,\n-    changedLockfile?: string | undefined | null\n+    comparison?: string | undefined | null,",
        "comment_created_at": "2025-02-13T14:42:10+00:00",
        "comment_author": "dimitropoulos",
        "comment_body": "@NicholasLYang I agree with @chris-olszewski - happy to refer to you on this and in my next PR on the `api` side, I'll be sure to rename it there too, to match.",
        "pr_file_module": null
      },
      {
        "comment_id": "1955158605",
        "repo_full_name": "vercel/turborepo",
        "pr_number": 9950,
        "pr_file": "packages/turbo-repository/js/index.d.ts",
        "discussion_id": "1954544471",
        "commented_code": "@@ -57,6 +57,7 @@ export class Workspace {\n    */\n   affectedPackages(\n     files: Array<string>,\n-    changedLockfile?: string | undefined | null\n+    comparison?: string | undefined | null,",
        "comment_created_at": "2025-02-13T20:16:58+00:00",
        "comment_author": "NicholasLYang",
        "comment_body": "Probably base is best",
        "pr_file_module": null
      }
    ]
  }
]