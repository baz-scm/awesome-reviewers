[
  {
    "discussion_id": "2351425749",
    "pr_number": 14460,
    "pr_file": "packages/twenty-front/src/modules/ui/field/input/components/MultiSelectInput.tsx",
    "created_at": "2025-09-16T08:25:33+00:00",
    "commented_code": "onCancel,\n   onOptionSelected,\n   dropdownWidth,\n+  fieldName = '',",
    "repo_full_name": "twentyhq/twenty",
    "discussion_comments": [
      {
        "comment_id": "2351425749",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14460,
        "pr_file": "packages/twenty-front/src/modules/ui/field/input/components/MultiSelectInput.tsx",
        "discussion_id": "2351425749",
        "commented_code": "@@ -38,9 +41,8 @@ export const MultiSelectInput = ({\n   onCancel,\n   onOptionSelected,\n   dropdownWidth,\n+  fieldName = '',",
        "comment_created_at": "2025-09-16T08:25:33+00:00",
        "comment_author": "ehconitin",
        "comment_body": "I see this in multiple places in this PR, lets keep it undefined or fieldName? why have them empty string as default?\r\ncould cause runtime errors",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2354536237",
    "pr_number": 14414,
    "pr_file": "packages/twenty-front/src/modules/ai/components/AIChatAssistantMessageRenderer.tsx",
    "created_at": "2025-09-17T07:10:22+00:00",
    "commented_code": "+import { ErrorStepRenderer } from '@/ai/components/ErrorStepRenderer';\n+import { ReasoningSummaryDisplay } from '@/ai/components/ReasoningSummaryDisplay';\n+import { ToolStepRenderer } from '@/ai/components/ToolStepRenderer';\n+import type { ParsedStep } from '@/ai/types/streamTypes';\n+import { parseStream } from '@/ai/utils/parseStream';\n+import { IconDotsVertical } from 'twenty-ui/display';\n+\n+import { LazyMarkdownRenderer } from '@/ai/components/LazyMarkdownRenderer';\n+import { agentStreamingMessageState } from '@/ai/states/agentStreamingMessageState';\n+import { keyframes, useTheme } from '@emotion/react';\n+import styled from '@emotion/styled';\n+import { useRecoilValue } from 'recoil';\n+\n+const StyledStepsContainer = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIconContainer = styled.div`\n+  align-items: center;\n+  border: ${({ theme }) => `1px solid ${theme.border.color.light}`};\n+  border-radius: ${({ theme }) => theme.border.radius.md};\n+  display: flex;\n+  justify-content: center;\n+  padding-inline: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIcon = styled(IconDotsVertical)`\n+  color: ${({ theme }) => theme.font.color.light};\n+  transform: rotate(90deg);\n+`;\n+\n+const dots = keyframes`\n+  0% { content: ''; }\n+  33% { content: '.'; }\n+  66% { content: '..'; }\n+  100% { content: '...'; }\n+`;\n+\n+const StyledToolCallContainer = styled.div`\n+  &::after {\n+    display: inline-block;\n+    content: '';\n+    animation: ${dots} 750ms steps(3, end) infinite;\n+    width: 2ch;\n+    text-align: left;\n+  }\n+`;\n+\n+const LoadingDotsIcon = () => {\n+  const theme = useTheme();\n+\n+  return (\n+    <StyledDotsIconContainer>\n+      <StyledDotsIcon size={theme.icon.size.xl} />\n+    </StyledDotsIconContainer>\n+  );\n+};\n+\n+export const AIChatAssistantMessageRenderer = ({\n+  streamData,\n+}: {\n+  streamData: string;\n+}) => {\n+  const agentStreamingMessage = useRecoilValue(agentStreamingMessageState);\n+  const isStreaming =\n+    Boolean(agentStreamingMessage) && streamData === agentStreamingMessage;",
    "repo_full_name": "twentyhq/twenty",
    "discussion_comments": [
      {
        "comment_id": "2354536237",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14414,
        "pr_file": "packages/twenty-front/src/modules/ai/components/AIChatAssistantMessageRenderer.tsx",
        "discussion_id": "2354536237",
        "commented_code": "@@ -0,0 +1,128 @@\n+import { ErrorStepRenderer } from '@/ai/components/ErrorStepRenderer';\n+import { ReasoningSummaryDisplay } from '@/ai/components/ReasoningSummaryDisplay';\n+import { ToolStepRenderer } from '@/ai/components/ToolStepRenderer';\n+import type { ParsedStep } from '@/ai/types/streamTypes';\n+import { parseStream } from '@/ai/utils/parseStream';\n+import { IconDotsVertical } from 'twenty-ui/display';\n+\n+import { LazyMarkdownRenderer } from '@/ai/components/LazyMarkdownRenderer';\n+import { agentStreamingMessageState } from '@/ai/states/agentStreamingMessageState';\n+import { keyframes, useTheme } from '@emotion/react';\n+import styled from '@emotion/styled';\n+import { useRecoilValue } from 'recoil';\n+\n+const StyledStepsContainer = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIconContainer = styled.div`\n+  align-items: center;\n+  border: ${({ theme }) => `1px solid ${theme.border.color.light}`};\n+  border-radius: ${({ theme }) => theme.border.radius.md};\n+  display: flex;\n+  justify-content: center;\n+  padding-inline: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIcon = styled(IconDotsVertical)`\n+  color: ${({ theme }) => theme.font.color.light};\n+  transform: rotate(90deg);\n+`;\n+\n+const dots = keyframes`\n+  0% { content: ''; }\n+  33% { content: '.'; }\n+  66% { content: '..'; }\n+  100% { content: '...'; }\n+`;\n+\n+const StyledToolCallContainer = styled.div`\n+  &::after {\n+    display: inline-block;\n+    content: '';\n+    animation: ${dots} 750ms steps(3, end) infinite;\n+    width: 2ch;\n+    text-align: left;\n+  }\n+`;\n+\n+const LoadingDotsIcon = () => {\n+  const theme = useTheme();\n+\n+  return (\n+    <StyledDotsIconContainer>\n+      <StyledDotsIcon size={theme.icon.size.xl} />\n+    </StyledDotsIconContainer>\n+  );\n+};\n+\n+export const AIChatAssistantMessageRenderer = ({\n+  streamData,\n+}: {\n+  streamData: string;\n+}) => {\n+  const agentStreamingMessage = useRecoilValue(agentStreamingMessageState);\n+  const isStreaming =\n+    Boolean(agentStreamingMessage) && streamData === agentStreamingMessage;",
        "comment_created_at": "2025-09-17T07:10:22+00:00",
        "comment_author": "FelixMalfait",
        "comment_body": "Do we need this `Boolean()`? That seems odd and sign of an underlying issue",
        "pr_file_module": null
      },
      {
        "comment_id": "2354879137",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14414,
        "pr_file": "packages/twenty-front/src/modules/ai/components/AIChatAssistantMessageRenderer.tsx",
        "discussion_id": "2354536237",
        "commented_code": "@@ -0,0 +1,128 @@\n+import { ErrorStepRenderer } from '@/ai/components/ErrorStepRenderer';\n+import { ReasoningSummaryDisplay } from '@/ai/components/ReasoningSummaryDisplay';\n+import { ToolStepRenderer } from '@/ai/components/ToolStepRenderer';\n+import type { ParsedStep } from '@/ai/types/streamTypes';\n+import { parseStream } from '@/ai/utils/parseStream';\n+import { IconDotsVertical } from 'twenty-ui/display';\n+\n+import { LazyMarkdownRenderer } from '@/ai/components/LazyMarkdownRenderer';\n+import { agentStreamingMessageState } from '@/ai/states/agentStreamingMessageState';\n+import { keyframes, useTheme } from '@emotion/react';\n+import styled from '@emotion/styled';\n+import { useRecoilValue } from 'recoil';\n+\n+const StyledStepsContainer = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIconContainer = styled.div`\n+  align-items: center;\n+  border: ${({ theme }) => `1px solid ${theme.border.color.light}`};\n+  border-radius: ${({ theme }) => theme.border.radius.md};\n+  display: flex;\n+  justify-content: center;\n+  padding-inline: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIcon = styled(IconDotsVertical)`\n+  color: ${({ theme }) => theme.font.color.light};\n+  transform: rotate(90deg);\n+`;\n+\n+const dots = keyframes`\n+  0% { content: ''; }\n+  33% { content: '.'; }\n+  66% { content: '..'; }\n+  100% { content: '...'; }\n+`;\n+\n+const StyledToolCallContainer = styled.div`\n+  &::after {\n+    display: inline-block;\n+    content: '';\n+    animation: ${dots} 750ms steps(3, end) infinite;\n+    width: 2ch;\n+    text-align: left;\n+  }\n+`;\n+\n+const LoadingDotsIcon = () => {\n+  const theme = useTheme();\n+\n+  return (\n+    <StyledDotsIconContainer>\n+      <StyledDotsIcon size={theme.icon.size.xl} />\n+    </StyledDotsIconContainer>\n+  );\n+};\n+\n+export const AIChatAssistantMessageRenderer = ({\n+  streamData,\n+}: {\n+  streamData: string;\n+}) => {\n+  const agentStreamingMessage = useRecoilValue(agentStreamingMessageState);\n+  const isStreaming =\n+    Boolean(agentStreamingMessage) && streamData === agentStreamingMessage;",
        "comment_created_at": "2025-09-17T09:23:13+00:00",
        "comment_author": "FelixMalfait",
        "comment_body": "I think every time you used Boolean what you wanted instead was to use isDefined or isUndefinedOrNull for example",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2341146093",
    "pr_number": 14416,
    "pr_file": "packages/twenty-front/src/modules/workflow/workflow-diagram/workflow-nodes/components/WorkflowDiagramIteratorEmptyActionEditable.tsx",
    "created_at": "2025-09-11T14:25:58+00:00",
    "commented_code": "position={Position.Bottom}\n         disableHoverEffect\n         selected={\n-          isSourceSelected(id) ||\n+          isSourceSelected({\n+            nodeId: id,\n+            sourceHandle: null,",
    "repo_full_name": "twentyhq/twenty",
    "discussion_comments": [
      {
        "comment_id": "2341146093",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14416,
        "pr_file": "packages/twenty-front/src/modules/workflow/workflow-diagram/workflow-nodes/components/WorkflowDiagramIteratorEmptyActionEditable.tsx",
        "discussion_id": "2341146093",
        "commented_code": "@@ -70,12 +70,20 @@ export const WorkflowDiagramIteratorEmptyActionEditable = ({\n         position={Position.Bottom}\n         disableHoverEffect\n         selected={\n-          isSourceSelected(id) ||\n+          isSourceSelected({\n+            nodeId: id,\n+            sourceHandle: null,",
        "comment_created_at": "2025-09-11T14:25:58+00:00",
        "comment_author": "martmull",
        "comment_body": "we should define a 'default' sourceHandleId instead of `null`, it will be clearer",
        "pr_file_module": null
      }
    ]
  }
]