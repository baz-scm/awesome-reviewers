[
  {
    "discussion_id": "2351375883",
    "pr_number": 14460,
    "pr_file": "packages/twenty-front/src/modules/object-record/object-options-dropdown/components/ObjectOptionsDropdownCreateNewOption.tsx",
    "created_at": "2025-09-16T08:12:38+00:00",
    "commented_code": "+import { DropdownMenuSeparator } from '@/ui/layout/dropdown/components/DropdownMenuSeparator';\n+import { t } from '@lingui/core/macro';\n+import { useParams } from 'react-router-dom';\n+import { SettingsPath } from 'twenty-shared/types';\n+import { IconPlus } from 'twenty-ui/display';\n+import { MenuItem } from 'twenty-ui/navigation';\n+import { useNavigateSettings } from '~/hooks/useNavigateSettings';\n+\n+const AddStyleContainer = {\n+  display: 'flex',\n+  alignItems: 'center',\n+  gap: '8px',\n+};\n+\n+export const ObjectOptionsDropdownCreateNewOption = ({",
    "repo_full_name": "twentyhq/twenty",
    "discussion_comments": [
      {
        "comment_id": "2351375883",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14460,
        "pr_file": "packages/twenty-front/src/modules/object-record/object-options-dropdown/components/ObjectOptionsDropdownCreateNewOption.tsx",
        "discussion_id": "2351375883",
        "commented_code": "@@ -0,0 +1,61 @@\n+import { DropdownMenuSeparator } from '@/ui/layout/dropdown/components/DropdownMenuSeparator';\n+import { t } from '@lingui/core/macro';\n+import { useParams } from 'react-router-dom';\n+import { SettingsPath } from 'twenty-shared/types';\n+import { IconPlus } from 'twenty-ui/display';\n+import { MenuItem } from 'twenty-ui/navigation';\n+import { useNavigateSettings } from '~/hooks/useNavigateSettings';\n+\n+const AddStyleContainer = {\n+  display: 'flex',\n+  alignItems: 'center',\n+  gap: '8px',\n+};\n+\n+export const ObjectOptionsDropdownCreateNewOption = ({",
        "comment_created_at": "2025-09-16T08:12:38+00:00",
        "comment_author": "ehconitin",
        "comment_body": "This component name is misleading. It's not for \"object options\" but for \"select field options\". Should be renamed to something like AddSelectOptionMenuItem or SelectFieldAddOptionItem to better reflect its purpose.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2351405466",
    "pr_number": 14460,
    "pr_file": "packages/twenty-front/src/modules/object-record/object-options-dropdown/components/ObjectOptionsDropdownCreateNewOption.tsx",
    "created_at": "2025-09-16T08:21:14+00:00",
    "commented_code": "+import { DropdownMenuSeparator } from '@/ui/layout/dropdown/components/DropdownMenuSeparator';\n+import { t } from '@lingui/core/macro';\n+import { useParams } from 'react-router-dom';\n+import { SettingsPath } from 'twenty-shared/types';\n+import { IconPlus } from 'twenty-ui/display';\n+import { MenuItem } from 'twenty-ui/navigation';\n+import { useNavigateSettings } from '~/hooks/useNavigateSettings';\n+\n+const AddStyleContainer = {",
    "repo_full_name": "twentyhq/twenty",
    "discussion_comments": [
      {
        "comment_id": "2351405466",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14460,
        "pr_file": "packages/twenty-front/src/modules/object-record/object-options-dropdown/components/ObjectOptionsDropdownCreateNewOption.tsx",
        "discussion_id": "2351405466",
        "commented_code": "@@ -0,0 +1,61 @@\n+import { DropdownMenuSeparator } from '@/ui/layout/dropdown/components/DropdownMenuSeparator';\n+import { t } from '@lingui/core/macro';\n+import { useParams } from 'react-router-dom';\n+import { SettingsPath } from 'twenty-shared/types';\n+import { IconPlus } from 'twenty-ui/display';\n+import { MenuItem } from 'twenty-ui/navigation';\n+import { useNavigateSettings } from '~/hooks/useNavigateSettings';\n+\n+const AddStyleContainer = {",
        "comment_created_at": "2025-09-16T08:21:14+00:00",
        "comment_author": "ehconitin",
        "comment_body": "Styled component should have Styled as prefix!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2354532492",
    "pr_number": 14414,
    "pr_file": "packages/twenty-front/src/modules/ai/components/AIChatAssistantMessageRenderer.tsx",
    "created_at": "2025-09-17T07:08:47+00:00",
    "commented_code": "+import { ErrorStepRenderer } from '@/ai/components/ErrorStepRenderer';\n+import { ReasoningSummaryDisplay } from '@/ai/components/ReasoningSummaryDisplay';\n+import { ToolStepRenderer } from '@/ai/components/ToolStepRenderer';\n+import type { ParsedStep } from '@/ai/types/streamTypes';\n+import { parseStream } from '@/ai/utils/parseStream';\n+import { IconDotsVertical } from 'twenty-ui/display';\n+\n+import { LazyMarkdownRenderer } from '@/ai/components/LazyMarkdownRenderer';\n+import { agentStreamingMessageState } from '@/ai/states/agentStreamingMessageState';\n+import { keyframes, useTheme } from '@emotion/react';\n+import styled from '@emotion/styled';\n+import { useRecoilValue } from 'recoil';\n+\n+const StyledStepsContainer = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIconContainer = styled.div`\n+  align-items: center;\n+  border: ${({ theme }) => `1px solid ${theme.border.color.light}`};\n+  border-radius: ${({ theme }) => theme.border.radius.md};\n+  display: flex;\n+  justify-content: center;\n+  padding-inline: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIcon = styled(IconDotsVertical)`\n+  color: ${({ theme }) => theme.font.color.light};\n+  transform: rotate(90deg);\n+`;\n+\n+const dots = keyframes`\n+  0% { content: ''; }\n+  33% { content: '.'; }\n+  66% { content: '..'; }\n+  100% { content: '...'; }\n+`;\n+\n+const StyledToolCallContainer = styled.div`\n+  &::after {\n+    display: inline-block;\n+    content: '';\n+    animation: ${dots} 750ms steps(3, end) infinite;\n+    width: 2ch;\n+    text-align: left;\n+  }\n+`;\n+\n+const LoadingDotsIcon = () => {\n+  const theme = useTheme();\n+\n+  return (\n+    <StyledDotsIconContainer>\n+      <StyledDotsIcon size={theme.icon.size.xl} />\n+    </StyledDotsIconContainer>\n+  );\n+};\n+\n+export const AIChatAssistantMessageRenderer = ({\n+  streamData,\n+}: {\n+  streamData: string;\n+}) => {\n+  const agentStreamingMessage = useRecoilValue(agentStreamingMessageState);\n+  const isStreaming =\n+    Boolean(agentStreamingMessage) && streamData === agentStreamingMessage;\n+\n+  if (!streamData) {\n+    return <LoadingDotsIcon />;\n+  }\n+\n+  const isPlainString =\n+    !streamData.includes('\n') ||\n+    !streamData.split('\n').some((line) => {\n+      try {\n+        JSON.parse(line);\n+        return true;\n+      } catch {\n+        return false;\n+      }\n+    });\n+\n+  if (isPlainString) {",
    "repo_full_name": "twentyhq/twenty",
    "discussion_comments": [
      {
        "comment_id": "2354532492",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14414,
        "pr_file": "packages/twenty-front/src/modules/ai/components/AIChatAssistantMessageRenderer.tsx",
        "discussion_id": "2354532492",
        "commented_code": "@@ -0,0 +1,128 @@\n+import { ErrorStepRenderer } from '@/ai/components/ErrorStepRenderer';\n+import { ReasoningSummaryDisplay } from '@/ai/components/ReasoningSummaryDisplay';\n+import { ToolStepRenderer } from '@/ai/components/ToolStepRenderer';\n+import type { ParsedStep } from '@/ai/types/streamTypes';\n+import { parseStream } from '@/ai/utils/parseStream';\n+import { IconDotsVertical } from 'twenty-ui/display';\n+\n+import { LazyMarkdownRenderer } from '@/ai/components/LazyMarkdownRenderer';\n+import { agentStreamingMessageState } from '@/ai/states/agentStreamingMessageState';\n+import { keyframes, useTheme } from '@emotion/react';\n+import styled from '@emotion/styled';\n+import { useRecoilValue } from 'recoil';\n+\n+const StyledStepsContainer = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  gap: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIconContainer = styled.div`\n+  align-items: center;\n+  border: ${({ theme }) => `1px solid ${theme.border.color.light}`};\n+  border-radius: ${({ theme }) => theme.border.radius.md};\n+  display: flex;\n+  justify-content: center;\n+  padding-inline: ${({ theme }) => theme.spacing(1)};\n+`;\n+\n+const StyledDotsIcon = styled(IconDotsVertical)`\n+  color: ${({ theme }) => theme.font.color.light};\n+  transform: rotate(90deg);\n+`;\n+\n+const dots = keyframes`\n+  0% { content: ''; }\n+  33% { content: '.'; }\n+  66% { content: '..'; }\n+  100% { content: '...'; }\n+`;\n+\n+const StyledToolCallContainer = styled.div`\n+  &::after {\n+    display: inline-block;\n+    content: '';\n+    animation: ${dots} 750ms steps(3, end) infinite;\n+    width: 2ch;\n+    text-align: left;\n+  }\n+`;\n+\n+const LoadingDotsIcon = () => {\n+  const theme = useTheme();\n+\n+  return (\n+    <StyledDotsIconContainer>\n+      <StyledDotsIcon size={theme.icon.size.xl} />\n+    </StyledDotsIconContainer>\n+  );\n+};\n+\n+export const AIChatAssistantMessageRenderer = ({\n+  streamData,\n+}: {\n+  streamData: string;\n+}) => {\n+  const agentStreamingMessage = useRecoilValue(agentStreamingMessageState);\n+  const isStreaming =\n+    Boolean(agentStreamingMessage) && streamData === agentStreamingMessage;\n+\n+  if (!streamData) {\n+    return <LoadingDotsIcon />;\n+  }\n+\n+  const isPlainString =\n+    !streamData.includes('\\n') ||\n+    !streamData.split('\\n').some((line) => {\n+      try {\n+        JSON.parse(line);\n+        return true;\n+      } catch {\n+        return false;\n+      }\n+    });\n+\n+  if (isPlainString) {",
        "comment_created_at": "2025-09-17T07:08:47+00:00",
        "comment_author": "FelixMalfait",
        "comment_body": "Rename to `hasStructuredStreamData` or something more precise. Put in a dedicated file in utils folder in /ai. Simplify double negative condition.\n\nE.G.\n```\n  const hasStructuredStreamData = (data: string): boolean => {\n    if (!data.includes('\\n')) {\n      return false;\n    }\n    \n    return data.split('\\n').some((line) => {\n      try {\n        JSON.parse(line);\n        return true;\n      } catch {\n        return false;\n      }\n    });\n  };\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2319100715",
    "pr_number": 14055,
    "pr_file": "packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/http-request-action/components/WorkflowEditActionHttpRequest.tsx",
    "created_at": "2025-09-03T14:06:10+00:00",
    "commented_code": "readonly={actionOptions.readonly}\n               keyPlaceholder=\"Header name\"\n               valuePlaceholder=\"Header value\"\n+              uniqueNotEditableKey=\"content-type\"",
    "repo_full_name": "twentyhq/twenty",
    "discussion_comments": [
      {
        "comment_id": "2319100715",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14055,
        "pr_file": "packages/twenty-front/src/modules/workflow/workflow-steps/workflow-actions/http-request-action/components/WorkflowEditActionHttpRequest.tsx",
        "discussion_id": "2319100715",
        "commented_code": "@@ -183,13 +193,22 @@ export const WorkflowEditActionHttpRequest = ({\n               readonly={actionOptions.readonly}\n               keyPlaceholder=\"Header name\"\n               valuePlaceholder=\"Header value\"\n+              uniqueNotEditableKey=\"content-type\"",
        "comment_created_at": "2025-09-03T14:06:10+00:00",
        "comment_author": "thomtrp",
        "comment_body": "use an array `readonlyKeys` so it can be extended easily",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2326767394",
    "pr_number": 14307,
    "pr_file": "packages/twenty-front/src/modules/settings/domains/components/SettingsCustomDomainRecords.tsx",
    "created_at": "2025-09-06T10:02:24+00:00",
    "commented_code": "export const SettingsCustomDomainRecords = ({\n   records,\n }: {\n-  records: CustomDomainValidRecords['records'];\n+  records: HostnameValidRecords['records'];",
    "repo_full_name": "twentyhq/twenty",
    "discussion_comments": [
      {
        "comment_id": "2326767394",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14307,
        "pr_file": "packages/twenty-front/src/modules/settings/domains/components/SettingsCustomDomainRecords.tsx",
        "discussion_id": "2326767394",
        "commented_code": "@@ -49,7 +49,7 @@ const StyledButton = styled(Button)`\n export const SettingsCustomDomainRecords = ({\n   records,\n }: {\n-  records: CustomDomainValidRecords['records'];\n+  records: HostnameValidRecords['records'];",
        "comment_created_at": "2025-09-06T10:02:24+00:00",
        "comment_author": "charlesBochet",
        "comment_body": "*question:* why are we renaming CustomDomain to Hostname? I feel customDomain was clearer",
        "pr_file_module": null
      },
      {
        "comment_id": "2326787651",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14307,
        "pr_file": "packages/twenty-front/src/modules/settings/domains/components/SettingsCustomDomainRecords.tsx",
        "discussion_id": "2326767394",
        "commented_code": "@@ -49,7 +49,7 @@ const StyledButton = styled(Button)`\n export const SettingsCustomDomainRecords = ({\n   records,\n }: {\n-  records: CustomDomainValidRecords['records'];\n+  records: HostnameValidRecords['records'];",
        "comment_created_at": "2025-09-06T10:09:57+00:00",
        "comment_author": "charlesBochet",
        "comment_body": "Reading the code, it should be PublicDomain?",
        "pr_file_module": null
      },
      {
        "comment_id": "2329414328",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14307,
        "pr_file": "packages/twenty-front/src/modules/settings/domains/components/SettingsCustomDomainRecords.tsx",
        "discussion_id": "2326767394",
        "commented_code": "@@ -49,7 +49,7 @@ const StyledButton = styled(Button)`\n export const SettingsCustomDomainRecords = ({\n   records,\n }: {\n-  records: CustomDomainValidRecords['records'];\n+  records: HostnameValidRecords['records'];",
        "comment_created_at": "2025-09-08T07:44:14+00:00",
        "comment_author": "FelixMalfait",
        "comment_body": "IMO:\n- Custom Domain = customize your workspace's domain\n- Public Domain = expose your apps on a new public domain\n- HostName = refers to cloudflare's custom hostname feature which requires vetting to proxy traffic on a new domain and generate an SSL certificate, this custom hostname feature is leveraged by both public domain and custom domain",
        "pr_file_module": null
      },
      {
        "comment_id": "2329425265",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14307,
        "pr_file": "packages/twenty-front/src/modules/settings/domains/components/SettingsCustomDomainRecords.tsx",
        "discussion_id": "2326767394",
        "commented_code": "@@ -49,7 +49,7 @@ const StyledButton = styled(Button)`\n export const SettingsCustomDomainRecords = ({\n   records,\n }: {\n-  records: CustomDomainValidRecords['records'];\n+  records: HostnameValidRecords['records'];",
        "comment_created_at": "2025-09-08T07:49:00+00:00",
        "comment_author": "martmull",
        "comment_body": "@FelixMalfait exactly",
        "pr_file_module": null
      },
      {
        "comment_id": "2330453471",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14307,
        "pr_file": "packages/twenty-front/src/modules/settings/domains/components/SettingsCustomDomainRecords.tsx",
        "discussion_id": "2326767394",
        "commented_code": "@@ -49,7 +49,7 @@ const StyledButton = styled(Button)`\n export const SettingsCustomDomainRecords = ({\n   records,\n }: {\n-  records: CustomDomainValidRecords['records'];\n+  records: HostnameValidRecords['records'];",
        "comment_created_at": "2025-09-08T14:35:22+00:00",
        "comment_author": "martmull",
        "comment_body": "DomainValidRecord",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2301174944",
    "pr_number": 14070,
    "pr_file": "packages/twenty-front/src/modules/workflow/workflow-diagram/workflow-edges/components/WorkflowDiagramConnection.tsx",
    "created_at": "2025-08-26T14:23:58+00:00",
    "commented_code": "+import {\n+  type ConnectionLineComponentProps,\n+  getBezierPath,\n+} from '@xyflow/react';\n+import { useTheme } from '@emotion/react';\n+import { EDGE_BRANCH_ARROW_MARKER } from '@/workflow/workflow-diagram/workflow-edges/constants/EdgeBranchArrowMarker';\n+\n+type WorkflowDiagramConnectionProps = ConnectionLineComponentProps;\n+\n+export const WorkflowDiagramConnection = ({\n+  fromX,\n+  fromY,\n+  toX,\n+  toY,\n+}: WorkflowDiagramConnectionProps) => {\n+  const theme = useTheme();\n+\n+  const [path] = getBezierPath({\n+    sourceX: fromX,\n+    sourceY: fromY + 4,",
    "repo_full_name": "twentyhq/twenty",
    "discussion_comments": [
      {
        "comment_id": "2301174944",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14070,
        "pr_file": "packages/twenty-front/src/modules/workflow/workflow-diagram/workflow-edges/components/WorkflowDiagramConnection.tsx",
        "discussion_id": "2301174944",
        "commented_code": "@@ -0,0 +1,33 @@\n+import {\n+  type ConnectionLineComponentProps,\n+  getBezierPath,\n+} from '@xyflow/react';\n+import { useTheme } from '@emotion/react';\n+import { EDGE_BRANCH_ARROW_MARKER } from '@/workflow/workflow-diagram/workflow-edges/constants/EdgeBranchArrowMarker';\n+\n+type WorkflowDiagramConnectionProps = ConnectionLineComponentProps;\n+\n+export const WorkflowDiagramConnection = ({\n+  fromX,\n+  fromY,\n+  toX,\n+  toY,\n+}: WorkflowDiagramConnectionProps) => {\n+  const theme = useTheme();\n+\n+  const [path] = getBezierPath({\n+    sourceX: fromX,\n+    sourceY: fromY + 4,",
        "comment_created_at": "2025-08-26T14:23:58+00:00",
        "comment_author": "thomtrp",
        "comment_body": "I guess the `+4` means the node size is 8? It should probably come from a a constant NODE_SIZE/2",
        "pr_file_module": null
      },
      {
        "comment_id": "2301205078",
        "repo_full_name": "twentyhq/twenty",
        "pr_number": 14070,
        "pr_file": "packages/twenty-front/src/modules/workflow/workflow-diagram/workflow-edges/components/WorkflowDiagramConnection.tsx",
        "discussion_id": "2301174944",
        "commented_code": "@@ -0,0 +1,33 @@\n+import {\n+  type ConnectionLineComponentProps,\n+  getBezierPath,\n+} from '@xyflow/react';\n+import { useTheme } from '@emotion/react';\n+import { EDGE_BRANCH_ARROW_MARKER } from '@/workflow/workflow-diagram/workflow-edges/constants/EdgeBranchArrowMarker';\n+\n+type WorkflowDiagramConnectionProps = ConnectionLineComponentProps;\n+\n+export const WorkflowDiagramConnection = ({\n+  fromX,\n+  fromY,\n+  toX,\n+  toY,\n+}: WorkflowDiagramConnectionProps) => {\n+  const theme = useTheme();\n+\n+  const [path] = getBezierPath({\n+    sourceX: fromX,\n+    sourceY: fromY + 4,",
        "comment_created_at": "2025-08-26T14:33:23+00:00",
        "comment_author": "martmull",
        "comment_body": "This is NODE_HANDLE_WIDTH_PX/2 + border size (1px) \ud83d\ude05 I think we can just leave it like this tbh",
        "pr_file_module": null
      }
    ]
  }
]