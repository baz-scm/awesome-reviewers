[
  {
    "discussion_id": "310361133",
    "pr_number": 32695,
    "pr_file": "src/compiler/factory.ts",
    "created_at": "2019-08-03T19:37:03+00:00",
    "commented_code": "return <KeywordTypeNode>createSynthesizedNode(kind);\r\n     }\r\n \r\n-    export function createTypePredicateNode(parameterName: Identifier | ThisTypeNode | string, type: TypeNode) {\r\n+    export function createTypePredicateNode(assertsModifier: AssertsToken | undefined, parameterName: Identifier | ThisTypeNode | string, type: TypeNode | undefined) {",
    "repo_full_name": "microsoft/TypeScript",
    "discussion_comments": [
      {
        "comment_id": "310361133",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 32695,
        "pr_file": "src/compiler/factory.ts",
        "discussion_id": "310361133",
        "commented_code": "@@ -667,17 +667,18 @@ namespace ts {\n         return <KeywordTypeNode>createSynthesizedNode(kind);\r\n     }\r\n \r\n-    export function createTypePredicateNode(parameterName: Identifier | ThisTypeNode | string, type: TypeNode) {\r\n+    export function createTypePredicateNode(assertsModifier: AssertsToken | undefined, parameterName: Identifier | ThisTypeNode | string, type: TypeNode | undefined) {\r",
        "comment_created_at": "2019-08-03T19:37:03+00:00",
        "comment_author": "ajafff",
        "comment_body": "this is a breaking API change.\r\ntypically there is a new overload added to maintain backwards compatibility. the old signature can be marked as deprecated right away and could be removed later.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1165726930",
    "pr_number": 53596,
    "pr_file": "src/services/types.ts",
    "created_at": "2023-04-13T15:47:05+00:00",
    "commented_code": "/** @deprecated Use the signature with `UserPreferences` instead. */\r\n     getRenameInfo(fileName: string, position: number, options?: RenameInfoOptions): RenameInfo;\r\n \r\n-    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): readonly RenameLocation[] | undefined;\r\n+    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, preferences: UserPreferences): readonly RenameLocation[] | undefined;",
    "repo_full_name": "microsoft/TypeScript",
    "discussion_comments": [
      {
        "comment_id": "1165726930",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 53596,
        "pr_file": "src/services/types.ts",
        "discussion_id": "1165726930",
        "commented_code": "@@ -562,7 +562,7 @@ export interface LanguageService {\n     /** @deprecated Use the signature with `UserPreferences` instead. */\r\n     getRenameInfo(fileName: string, position: number, options?: RenameInfoOptions): RenameInfo;\r\n \r\n-    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): readonly RenameLocation[] | undefined;\r\n+    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, preferences: UserPreferences): readonly RenameLocation[] | undefined;\r",
        "comment_created_at": "2023-04-13T15:47:05+00:00",
        "comment_author": "andrewbranch",
        "comment_body": "I didn‚Äôt realize that `providePrefixAndSuffixTextForRename` was part of `UserPreferences`, so it‚Äôs pretty unappealing to have parameters for them both, but this change needs to be backward compatible. Let‚Äôs make a deprecated overload instead:\r\n\r\n```suggestion\r\n    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, preferences: UserPreferences): readonly RenameLocation[] | undefined;\r\n    /** @deprecated Pass `providePrefixAndSuffixTextForRename` as part of a `UserPreferences` object. */\r\n    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): readonly RenameLocation[] | undefined;\r\n```\r\n\r\nThen in the implementation you‚Äôll have a `boolean | UserPreferences` signature that you can discriminate between with `typeof preferences === \"boolean\"`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1165974642",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 53596,
        "pr_file": "src/services/types.ts",
        "discussion_id": "1165726930",
        "commented_code": "@@ -562,7 +562,7 @@ export interface LanguageService {\n     /** @deprecated Use the signature with `UserPreferences` instead. */\r\n     getRenameInfo(fileName: string, position: number, options?: RenameInfoOptions): RenameInfo;\r\n \r\n-    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): readonly RenameLocation[] | undefined;\r\n+    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, preferences: UserPreferences): readonly RenameLocation[] | undefined;\r",
        "comment_created_at": "2023-04-13T20:03:04+00:00",
        "comment_author": "andrewbranch",
        "comment_body": "@DanielRosenwasser are you ok with this? Input on the deprecation text?",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1165974204",
    "pr_number": 53596,
    "pr_file": "src/harness/client.ts",
    "created_at": "2023-04-13T20:02:29+00:00",
    "commented_code": "return notImplemented();\r\n     }\r\n \r\n-    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): RenameLocation[] {\r\n+    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, preferences: UserPreferences | boolean | undefined): RenameLocation[] {",
    "repo_full_name": "microsoft/TypeScript",
    "discussion_comments": [
      {
        "comment_id": "1165974204",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 53596,
        "pr_file": "src/harness/client.ts",
        "discussion_id": "1165974204",
        "commented_code": "@@ -568,15 +568,17 @@ export class SessionClient implements LanguageService {\n         return notImplemented();\r\n     }\r\n \r\n-    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): RenameLocation[] {\r\n+    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, preferences: UserPreferences | boolean | undefined): RenameLocation[] {\r",
        "comment_created_at": "2023-04-13T20:02:29+00:00",
        "comment_author": "andrewbranch",
        "comment_body": "Not a big deal, but you might not have to handle `boolean` in these internal test-only implementations. I could be wrong though; maybe there‚Äôs a reason we need it?",
        "pr_file_module": null
      },
      {
        "comment_id": "1166021257",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 53596,
        "pr_file": "src/harness/client.ts",
        "discussion_id": "1165974204",
        "commented_code": "@@ -568,15 +568,17 @@ export class SessionClient implements LanguageService {\n         return notImplemented();\r\n     }\r\n \r\n-    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): RenameLocation[] {\r\n+    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, preferences: UserPreferences | boolean | undefined): RenameLocation[] {\r",
        "comment_created_at": "2023-04-13T21:00:48+00:00",
        "comment_author": "MariaSolOs",
        "comment_body": "Because this client implements `LanguageService`, and so this method needs to be able to accommodate both overloads. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1166022130",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 53596,
        "pr_file": "src/harness/client.ts",
        "discussion_id": "1165974204",
        "commented_code": "@@ -568,15 +568,17 @@ export class SessionClient implements LanguageService {\n         return notImplemented();\r\n     }\r\n \r\n-    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): RenameLocation[] {\r\n+    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, preferences: UserPreferences | boolean | undefined): RenameLocation[] {\r",
        "comment_created_at": "2023-04-13T21:01:57+00:00",
        "comment_author": "andrewbranch",
        "comment_body": "üëç I couldn‚Äôt remember if that was a rule for implementing interfaces. Makes sense.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1083150185",
    "pr_number": 52346,
    "pr_file": "src/server/protocol.ts",
    "created_at": "2023-01-21T00:11:42+00:00",
    "commented_code": "GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",",
    "repo_full_name": "microsoft/TypeScript",
    "discussion_comments": [
      {
        "comment_id": "1083150185",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:11:42+00:00",
        "comment_author": "jakebailey",
        "comment_body": "This scared me but, [doesn't seem like anyone's actually using it](https://sourcegraph.com/search?q=context:global+Command%28%3F:Names%7CTypes%29%5C.Completions+-repo:.*/Microsoft+-repo:.*/reflec-ts+-repo:.*/tstolua+-repo:.*/typescript-plus+-repo:ts-plus/.*+-file:%5C.d%5C.ts%24+lang:typescript+-repo:.*/UsefulResourceRepo+-repo:.*/CTS+-repo:.*/EmojiScript&patternType=regexp&sm=1&groupBy=repo).",
        "pr_file_module": null
      },
      {
        "comment_id": "1083150990",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:12:58+00:00",
        "comment_author": "DanielRosenwasser",
        "comment_body": "I wonder if there are any clients sending the string `\"completions\"` to TSServer.",
        "pr_file_module": null
      },
      {
        "comment_id": "1083153306",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:16:26+00:00",
        "comment_author": "jakebailey",
        "comment_body": "I thought of that immediately after closing the tab, I have no idea how to check for that one...\r\n\r\nSearching for `executeCommand(\"completions\"`, [it seems not](https://sourcegraph.com/search?q=context:global+executeCommand%5C%28%22completions%22+-repo:.*/Microsoft+-repo:.*/reflec-ts+-repo:.*/tstolua+-repo:.*/typescript-plus+-repo:ts-plus/.*+-file:%5C.d%5C.ts%24+lang:javascript+-repo:.*/UsefulResourceRepo+-repo:.*/CTS+-repo:.*/EmojiScript&patternType=regexp&sm=1&groupBy=repo).",
        "pr_file_module": null
      },
      {
        "comment_id": "1083159605",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:25:03+00:00",
        "comment_author": "sheetalkamat",
        "comment_body": "This has been deprecated since https://github.com/microsoft/TypeScript/pull/25080",
        "pr_file_module": null
      },
      {
        "comment_id": "1083160460",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:26:19+00:00",
        "comment_author": "DanielRosenwasser",
        "comment_body": "I think this change is going to break too many editors.\r\n\r\nhttps://github.com/search?q=tsserver+command+%5C%22completions%5C%22+OR+%5C%27completions%5C%27+NOT+language%3AMarkdown+NOT+CommandTypes&type=code&p=1\r\n\r\nhttps://github.com/MarcWeber/editor-cells/blob/3cb70ffd5e09681b9159bc7527110281ff8660e4/py3/site-packages/cells/asyncio/tsserver.py#L168\r\n\r\nhttps://github.com/angelozerr/typescript.java/blob/8a6759ca825c2b0ae14cb8e09e5ba1778aae24d3/core/ts.core/src/ts/client/CommandNames.java#L25\r\n\r\nhttps://github.com/Hless/atom-typescript/blob/8f67a7770c030b315893fa206bbe8d8d99483a74/lib/client/client.ts#L16\r\n\r\nhttps://github.com/kiyanwang/nvim-typescript/blob/f33d0bc77e475d28bab51c24c7c75142bc3d3013/rplugin/python3/nvim-typescript/client.py#L341\r\n\r\nhttps://github.com/asankah/oni/blob/f139caba34f0c6ef0f85e1305eaf79636ac2a0d1/vim/core/oni-plugin-typescript/src/TypeScriptServerHost.ts#L133-L140\r\n\r\nhttps://github.com/Wilfred/.emacs.d/blob/b0f88ccbd8f41e642b5fad72acf09beb75365d69/elpa/tide-20210930.356/tide.el#L1693-L1695",
        "pr_file_module": null
      },
      {
        "comment_id": "1083160594",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:26:29+00:00",
        "comment_author": "jakebailey",
        "comment_body": "That's definitely a while ago üòÖ ",
        "pr_file_module": null
      },
      {
        "comment_id": "1083161744",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:27:55+00:00",
        "comment_author": "jakebailey",
        "comment_body": "Wow :(",
        "pr_file_module": null
      },
      {
        "comment_id": "1083171408",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:37:07+00:00",
        "comment_author": "DanielRosenwasser",
        "comment_body": "Actually, looking again:\r\n\r\n* Atom-TypeScript seems updatedish: https://github.com/TypeStrong/atom-typescript/blob/master/lib/client/commandArgsResponseMap.d.ts#L8-L9\r\n* nvim-typescript is deprecated entirely, but latest version is fixed: https://github.com/mhartington/nvim-typescript/blob/44f3db3331632003ed95d963b0753ef94abc8b90/rplugin/node/nvim_typescript/src/client.ts#L20\r\n* oni is deprecated entirely, and oni2 seems to just reuse some VS Code integration? https://github.com/onivim/oni2\r\n\r\nBut\r\n\r\n* tide actually does need to be updated: https://github.com/ananthakumaran/tide/blob/4cf6a0d89da7f946565a425a632ee2410a40c7da/tide.el#L1702-L1717\r\n* typescript.java actually does need to be updated https://github.com/angelozerr/typescript.java/blob/8a6759ca825c2b0ae14cb8e09e5ba1778aae24d3/core/ts.core/src/ts/client/CommandNames.java#L25\r\n* editor-cells actually does need to be updated: https://github.com/MarcWeber/editor-cells/blob/3cb70ffd5e09681b9159bc7527110281ff8660e4/py3/site-packages/cells/asyncio/tsserver.py#L168\r\n* The Sublime Plugin needs to be updated: https://github.com/microsoft/TypeScript-Sublime-Plugin/blob/fb61dcd11cd3f1807a4bc454148cb59b199e8f3b/typescript/libs/service_proxy.py#L73-L80",
        "pr_file_module": null
      },
      {
        "comment_id": "1083172464",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:38:02+00:00",
        "comment_author": "sheetalkamat",
        "comment_body": "But does this mean we will never remove the long deprecated server/services API/commands ?",
        "pr_file_module": null
      },
      {
        "comment_id": "1083173987",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T00:39:25+00:00",
        "comment_author": "sheetalkamat",
        "comment_body": "Eg Occurrences is another such command",
        "pr_file_module": null
      },
      {
        "comment_id": "1083220829",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T01:36:07+00:00",
        "comment_author": "DanielRosenwasser",
        "comment_body": "I just think that if we want to remove these, we should be willing to send PRs to fix these plugins up.",
        "pr_file_module": null
      },
      {
        "comment_id": "1083221053",
        "repo_full_name": "microsoft/TypeScript",
        "pr_number": 52346,
        "pr_file": "src/server/protocol.ts",
        "discussion_id": "1083150185",
        "commented_code": "@@ -30,8 +30,6 @@ export const enum CommandTypes {\n     GetSpanOfEnclosingComment = \"getSpanOfEnclosingComment\",\r\n     Change = \"change\",\r\n     Close = \"close\",\r\n-    /** @deprecated Prefer CompletionInfo -- see comment on CompletionsResponse */\r\n-    Completions = \"completions\",\r",
        "comment_created_at": "2023-01-21T01:37:33+00:00",
        "comment_author": "DanielRosenwasser",
        "comment_body": "I'd say we can merge this if we send PRs by Monday to the above packages.",
        "pr_file_module": null
      }
    ]
  }
]