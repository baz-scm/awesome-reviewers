[
  {
    "discussion_id": "1978268800",
    "pr_number": 3910,
    "pr_file": "cosmwasm/ibc-union/core/light-client-interface/src/lib.rs",
    "created_at": "2025-03-03T21:31:44+00:00",
    "commented_code": "Ok(addr)\n }\n \n+pub struct StateUpdate<T: IbcClient> {\n+    pub height: u64,\n+    pub client_state: Option<T::ClientState>,\n+    pub consensus_state: T::ConsensusState,\n+    pub storage_writes: StorageWrites,\n+}\n+\n+/// Client creation output type\n+pub struct ClientCreation<T: IbcClient> {\n+    /// The client state that is going to be stored by IBC. If set to `None`, IBC will store the\n+    /// client state given by the creator as is\n+    pub client_state: Option<T::ClientState>,",
    "repo_full_name": "unionlabs/union",
    "discussion_comments": [
      {
        "comment_id": "1978268800",
        "repo_full_name": "unionlabs/union",
        "pr_number": 3910,
        "pr_file": "cosmwasm/ibc-union/core/light-client-interface/src/lib.rs",
        "discussion_id": "1978268800",
        "commented_code": "@@ -170,6 +184,50 @@ fn client_impl<T: IbcClient>(\n     Ok(addr)\n }\n \n+pub struct StateUpdate<T: IbcClient> {\n+    pub height: u64,\n+    pub client_state: Option<T::ClientState>,\n+    pub consensus_state: T::ConsensusState,\n+    pub storage_writes: StorageWrites,\n+}\n+\n+/// Client creation output type\n+pub struct ClientCreation<T: IbcClient> {\n+    /// The client state that is going to be stored by IBC. If set to `None`, IBC will store the\n+    /// client state given by the creator as is\n+    pub client_state: Option<T::ClientState>,",
        "comment_created_at": "2025-03-03T21:31:44+00:00",
        "comment_author": "benluelo",
        "comment_body": "what is this used for?",
        "pr_file_module": null
      },
      {
        "comment_id": "1978284341",
        "repo_full_name": "unionlabs/union",
        "pr_number": 3910,
        "pr_file": "cosmwasm/ibc-union/core/light-client-interface/src/lib.rs",
        "discussion_id": "1978268800",
        "commented_code": "@@ -170,6 +184,50 @@ fn client_impl<T: IbcClient>(\n     Ok(addr)\n }\n \n+pub struct StateUpdate<T: IbcClient> {\n+    pub height: u64,\n+    pub client_state: Option<T::ClientState>,\n+    pub consensus_state: T::ConsensusState,\n+    pub storage_writes: StorageWrites,\n+}\n+\n+/// Client creation output type\n+pub struct ClientCreation<T: IbcClient> {\n+    /// The client state that is going to be stored by IBC. If set to `None`, IBC will store the\n+    /// client state given by the creator as is\n+    pub client_state: Option<T::ClientState>,",
        "comment_created_at": "2025-03-03T21:44:38+00:00",
        "comment_author": "aeryz",
        "comment_body": "For example in the case of Ethereum light client, `initial_sync_committee` exists under `ClientState`. But this is only to provide the sync committee at the initial state. Ethereum light client then sets this to `None` and returns the modified version of the client state so that IBC can commit that instead of committed the one that it gets from the relayer.",
        "pr_file_module": null
      },
      {
        "comment_id": "1978301307",
        "repo_full_name": "unionlabs/union",
        "pr_number": 3910,
        "pr_file": "cosmwasm/ibc-union/core/light-client-interface/src/lib.rs",
        "discussion_id": "1978268800",
        "commented_code": "@@ -170,6 +184,50 @@ fn client_impl<T: IbcClient>(\n     Ok(addr)\n }\n \n+pub struct StateUpdate<T: IbcClient> {\n+    pub height: u64,\n+    pub client_state: Option<T::ClientState>,\n+    pub consensus_state: T::ConsensusState,\n+    pub storage_writes: StorageWrites,\n+}\n+\n+/// Client creation output type\n+pub struct ClientCreation<T: IbcClient> {\n+    /// The client state that is going to be stored by IBC. If set to `None`, IBC will store the\n+    /// client state given by the creator as is\n+    pub client_state: Option<T::ClientState>,",
        "comment_created_at": "2025-03-03T21:56:41+00:00",
        "comment_author": "benluelo",
        "comment_body": "why not just store the original state? is the `initial_sync_committee` large?",
        "pr_file_module": null
      },
      {
        "comment_id": "1978335187",
        "repo_full_name": "unionlabs/union",
        "pr_number": 3910,
        "pr_file": "cosmwasm/ibc-union/core/light-client-interface/src/lib.rs",
        "discussion_id": "1978268800",
        "commented_code": "@@ -170,6 +184,50 @@ fn client_impl<T: IbcClient>(\n     Ok(addr)\n }\n \n+pub struct StateUpdate<T: IbcClient> {\n+    pub height: u64,\n+    pub client_state: Option<T::ClientState>,\n+    pub consensus_state: T::ConsensusState,\n+    pub storage_writes: StorageWrites,\n+}\n+\n+/// Client creation output type\n+pub struct ClientCreation<T: IbcClient> {\n+    /// The client state that is going to be stored by IBC. If set to `None`, IBC will store the\n+    /// client state given by the creator as is\n+    pub client_state: Option<T::ClientState>,",
        "comment_created_at": "2025-03-03T22:31:55+00:00",
        "comment_author": "aeryz",
        "comment_body": "It's total of 1024 bls pubkeys so 1024 * 384 bytes",
        "pr_file_module": null
      },
      {
        "comment_id": "1978340120",
        "repo_full_name": "unionlabs/union",
        "pr_number": 3910,
        "pr_file": "cosmwasm/ibc-union/core/light-client-interface/src/lib.rs",
        "discussion_id": "1978268800",
        "commented_code": "@@ -170,6 +184,50 @@ fn client_impl<T: IbcClient>(\n     Ok(addr)\n }\n \n+pub struct StateUpdate<T: IbcClient> {\n+    pub height: u64,\n+    pub client_state: Option<T::ClientState>,\n+    pub consensus_state: T::ConsensusState,\n+    pub storage_writes: StorageWrites,\n+}\n+\n+/// Client creation output type\n+pub struct ClientCreation<T: IbcClient> {\n+    /// The client state that is going to be stored by IBC. If set to `None`, IBC will store the\n+    /// client state given by the creator as is\n+    pub client_state: Option<T::ClientState>,",
        "comment_created_at": "2025-03-03T22:37:39+00:00",
        "comment_author": "benluelo",
        "comment_body": "oof yeah lets zero that out indeed lol",
        "pr_file_module": null
      },
      {
        "comment_id": "1978340300",
        "repo_full_name": "unionlabs/union",
        "pr_number": 3910,
        "pr_file": "cosmwasm/ibc-union/core/light-client-interface/src/lib.rs",
        "discussion_id": "1978268800",
        "commented_code": "@@ -170,6 +184,50 @@ fn client_impl<T: IbcClient>(\n     Ok(addr)\n }\n \n+pub struct StateUpdate<T: IbcClient> {\n+    pub height: u64,\n+    pub client_state: Option<T::ClientState>,\n+    pub consensus_state: T::ConsensusState,\n+    pub storage_writes: StorageWrites,\n+}\n+\n+/// Client creation output type\n+pub struct ClientCreation<T: IbcClient> {\n+    /// The client state that is going to be stored by IBC. If set to `None`, IBC will store the\n+    /// client state given by the creator as is\n+    pub client_state: Option<T::ClientState>,",
        "comment_created_at": "2025-03-03T22:37:54+00:00",
        "comment_author": "benluelo",
        "comment_body": "maybe leave a comment as to why we remove it",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1706960245",
    "pr_number": 2688,
    "pr_file": "hubble/src/tm/indexer.rs",
    "created_at": "2024-08-07T13:00:45+00:00",
    "commented_code": "let transactions = block_results\n         .into_iter()\n         .flat_map(|(id, header, block, txs)| {\n+            let txs_event_count: usize = txs.iter().map(|tx| tx.tx_result.events.len()).sum();\n+            let block_tx_event_count = block\n+                .txs_results\n+                .clone()",
    "repo_full_name": "unionlabs/union",
    "discussion_comments": [
      {
        "comment_id": "1706960245",
        "repo_full_name": "unionlabs/union",
        "pr_number": 2688,
        "pr_file": "hubble/src/tm/indexer.rs",
        "discussion_id": "1706960245",
        "commented_code": "@@ -347,6 +347,21 @@ async fn fetch_and_insert_blocks(\n     let transactions = block_results\n         .into_iter()\n         .flat_map(|(id, header, block, txs)| {\n+            let txs_event_count: usize = txs.iter().map(|tx| tx.tx_result.events.len()).sum();\n+            let block_tx_event_count = block\n+                .txs_results\n+                .clone()",
        "comment_created_at": "2024-08-07T13:00:45+00:00",
        "comment_author": "KaiserKarel",
        "comment_body": "if we can avoid the clone here, that's good because txs_results is quite big.",
        "pr_file_module": null
      },
      {
        "comment_id": "1707005295",
        "repo_full_name": "unionlabs/union",
        "pr_number": 2688,
        "pr_file": "hubble/src/tm/indexer.rs",
        "discussion_id": "1706960245",
        "commented_code": "@@ -347,6 +347,21 @@ async fn fetch_and_insert_blocks(\n     let transactions = block_results\n         .into_iter()\n         .flat_map(|(id, header, block, txs)| {\n+            let txs_event_count: usize = txs.iter().map(|tx| tx.tx_result.events.len()).sum();\n+            let block_tx_event_count = block\n+                .txs_results\n+                .clone()",
        "comment_created_at": "2024-08-07T13:30:42+00:00",
        "comment_author": "qlp",
        "comment_body": "fixed",
        "pr_file_module": null
      }
    ]
  }
]