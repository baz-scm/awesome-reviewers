[
  {
    "discussion_id": "2123882574",
    "pr_number": 4629,
    "pr_file": "ts-sdk/src/sui/client.ts",
    "created_at": "2025-06-03T13:47:35+00:00",
    "commented_code": "+import { SuiClient, SuiClientOptions } from \"@mysten/sui/client\"\n+import { Ed25519Keypair } from \"@mysten/sui/keypairs/ed25519\"\n+import { Context, Data, Effect } from \"effect\"\n+import {\n+  type CreatePublicClientErrorType,\n+  type CreateWalletClientErrorType,\n+  type ReadContractErrorType,\n+  type WriteContractErrorType,\n+} from \"viem\"\n+import { extractErrorDetails } from \"../utils/extract-error-details.js\"\n+\n+export class SuiPublicClientSource extends Context.Tag(\"SuiPublicClientSource\")<\n+  SuiPublicClientSource,\n+  { readonly client: SuiClient }\n+>() {}\n+\n+export class SuiPublicClientDestination extends Context.Tag(\"SuiPublicClientDestination\")<\n+  SuiPublicClientDestination,\n+  { readonly client: SuiClient }\n+>() {}\n+\n+/**\n+ * A neutral public client that can be used for general-purpose operations\n+ * that don't specifically target source or destination chains\n+ */\n+export class SuiPublicClient extends Context.Tag(\"SuiPublicClient\")<\n+  SuiPublicClient,\n+  { readonly client: SuiClient }\n+>() {}\n+\n+/**\n+ * A wallet client that can be used for signing transactions\n+ */\n+export class SuiWalletClient extends Context.Tag(\"SuiWalletClient\")<\n+  SuiWalletClient,\n+  {\n+    readonly client: SuiClient\n+    readonly signer: Ed25519Keypair\n+  }\n+>() {}\n+\n+export class ReadContractError extends Data.TaggedError(\"ReadContractError\")<{\n+  cause: ReadContractErrorType\n+}> {}\n+\n+export class WriteContractError extends Data.TaggedError(\"WriteContractError\")<{\n+  cause: WriteContractErrorType\n+}> {}",
    "repo_full_name": "unionlabs/union",
    "discussion_comments": [
      {
        "comment_id": "2123882574",
        "repo_full_name": "unionlabs/union",
        "pr_number": 4629,
        "pr_file": "ts-sdk/src/sui/client.ts",
        "discussion_id": "2123882574",
        "commented_code": "@@ -0,0 +1,82 @@\n+import { SuiClient, SuiClientOptions } from \"@mysten/sui/client\"\n+import { Ed25519Keypair } from \"@mysten/sui/keypairs/ed25519\"\n+import { Context, Data, Effect } from \"effect\"\n+import {\n+  type CreatePublicClientErrorType,\n+  type CreateWalletClientErrorType,\n+  type ReadContractErrorType,\n+  type WriteContractErrorType,\n+} from \"viem\"\n+import { extractErrorDetails } from \"../utils/extract-error-details.js\"\n+\n+export class SuiPublicClientSource extends Context.Tag(\"SuiPublicClientSource\")<\n+  SuiPublicClientSource,\n+  { readonly client: SuiClient }\n+>() {}\n+\n+export class SuiPublicClientDestination extends Context.Tag(\"SuiPublicClientDestination\")<\n+  SuiPublicClientDestination,\n+  { readonly client: SuiClient }\n+>() {}\n+\n+/**\n+ * A neutral public client that can be used for general-purpose operations\n+ * that don't specifically target source or destination chains\n+ */\n+export class SuiPublicClient extends Context.Tag(\"SuiPublicClient\")<\n+  SuiPublicClient,\n+  { readonly client: SuiClient }\n+>() {}\n+\n+/**\n+ * A wallet client that can be used for signing transactions\n+ */\n+export class SuiWalletClient extends Context.Tag(\"SuiWalletClient\")<\n+  SuiWalletClient,\n+  {\n+    readonly client: SuiClient\n+    readonly signer: Ed25519Keypair\n+  }\n+>() {}\n+\n+export class ReadContractError extends Data.TaggedError(\"ReadContractError\")<{\n+  cause: ReadContractErrorType\n+}> {}\n+\n+export class WriteContractError extends Data.TaggedError(\"WriteContractError\")<{\n+  cause: WriteContractErrorType\n+}> {}",
        "comment_created_at": "2025-06-03T13:47:35+00:00",
        "comment_author": "ehegnes",
        "comment_body": "These tags already exist in `ts-sdk/src/evm/client.ts` and should be unique across the application. Suggest prefixing with `\"Sui\"` until we can consolidate errors.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1983082177",
    "pr_number": 3954,
    "pr_file": "app2/src/lib/services/transfer/state.ts",
    "created_at": "2025-03-06T10:16:44+00:00",
    "commented_code": "type EffectToExit<T> = T extends Effect.Effect<infer A, infer E, any> ? Exit.Exit<A, E> : never\n \n export type SwitchChainState = Data.TaggedEnum<{\n-  InProgress: {}\n+  InProgress: object",
    "repo_full_name": "unionlabs/union",
    "discussion_comments": [
      {
        "comment_id": "1983082177",
        "repo_full_name": "unionlabs/union",
        "pr_number": 3954,
        "pr_file": "app2/src/lib/services/transfer/state.ts",
        "discussion_id": "1983082177",
        "commented_code": "@@ -6,13 +6,13 @@ import type { switchChain } from \"./chain.ts\"\n type EffectToExit<T> = T extends Effect.Effect<infer A, infer E, any> ? Exit.Exit<A, E> : never\n \n export type SwitchChainState = Data.TaggedEnum<{\n-  InProgress: {}\n+  InProgress: object",
        "comment_created_at": "2025-03-06T10:16:44+00:00",
        "comment_author": "cor",
        "comment_body": "this needs to be reverted; `{}` is explicitly empty, whereas object is not",
        "pr_file_module": null
      }
    ]
  }
]