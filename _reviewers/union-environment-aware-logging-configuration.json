[
  {
    "discussion_id": "2094379464",
    "pr_number": 4538,
    "pr_file": "app2/src/lib/layers/live.ts",
    "created_at": "2025-05-18T05:45:49+00:00",
    "commented_code": "+import { ENV } from \"$lib/constants\"\n+import * as Datadog from \"$lib/logging/datadog\"\n+import { Context, Layer, Logger, LogLevel, Match } from \"effect\"\n+\n+const minimumLogLevel = Logger.minimumLogLevel(\n+  Match.value(ENV()).pipe(\n+    Match.when(\"DEVELOPMENT\", () => LogLevel.Trace),\n+    Match.when(\"STAGING\", () => LogLevel.Debug),\n+    Match.when(\"PRODUCTION\", () => LogLevel.Warning),\n+    Match.exhaustive,\n+  ),\n+)\n+\n+export default Layer.mergeAll(\n+  Logger.replace(\n+    Logger.defaultLogger,\n+    Logger.zip(\n+      Logger.prettyLogger({\n+        colors: true,\n+        mode: \"browser\",\n+        stderr: true,\n+      }),\n+      Datadog.Logger,\n+    ),\n+  ),\n+  minimumLogLevel,\n+)",
    "repo_full_name": "unionlabs/union",
    "discussion_comments": [
      {
        "comment_id": "2094379464",
        "repo_full_name": "unionlabs/union",
        "pr_number": 4538,
        "pr_file": "app2/src/lib/layers/live.ts",
        "discussion_id": "2094379464",
        "commented_code": "@@ -0,0 +1,27 @@\n+import { ENV } from \"$lib/constants\"\n+import * as Datadog from \"$lib/logging/datadog\"\n+import { Context, Layer, Logger, LogLevel, Match } from \"effect\"\n+\n+const minimumLogLevel = Logger.minimumLogLevel(\n+  Match.value(ENV()).pipe(\n+    Match.when(\"DEVELOPMENT\", () => LogLevel.Trace),\n+    Match.when(\"STAGING\", () => LogLevel.Debug),\n+    Match.when(\"PRODUCTION\", () => LogLevel.Warning),\n+    Match.exhaustive,\n+  ),\n+)\n+\n+export default Layer.mergeAll(\n+  Logger.replace(\n+    Logger.defaultLogger,\n+    Logger.zip(\n+      Logger.prettyLogger({\n+        colors: true,\n+        mode: \"browser\",\n+        stderr: true,\n+      }),\n+      Datadog.Logger,\n+    ),\n+  ),\n+  minimumLogLevel,\n+)",
        "comment_created_at": "2025-05-18T05:45:49+00:00",
        "comment_author": "ehegnes",
        "comment_body": "A `Layer` which introduces shared requirements for _all_ Effect executions.\r\n\r\nPresently this replaces the default logger with a pretty logger and _adds_ the Datadog logger.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2094381472",
    "pr_number": 4538,
    "pr_file": "app2/src/lib/logging/datadog.ts",
    "created_at": "2025-05-18T05:49:18+00:00",
    "commented_code": "+import { PUBLIC_DATADOG_CLIENT_TOKEN, PUBLIC_GIT_REV } from \"$env/static/public\"\n+import { ENV, SERVICE_NAME } from \"$lib/constants\"\n+import { flattenObject } from \"$lib/utils/flattenObject\"\n+import { datadogLogs, StatusType } from \"@datadog/browser-logs\"\n+import { Array as A, Cause, HashMap, Logger, LogLevel, Match, pipe, Record as R } from \"effect\"\n+\n+const statusType: (u: LogLevel.LogLevel) => StatusType = pipe(\n+  Match.type<LogLevel.LogLevel>(),\n+  Match.tagsExhaustive({\n+    All: () => \"ok\" as const,\n+    Debug: () => \"debug\" as const,\n+    Error: () => \"error\" as const,\n+    Fatal: () => \"critical\" as const,\n+    Info: () => \"info\" as const,\n+    None: () => \"ok\" as const,\n+    Trace: () => \"debug\" as const,\n+    Warning: () => \"warn\" as const,\n+  }),\n+)\n+\n+const init = () => {\n+  if (ENV() === \"DEVELOPMENT\") {\n+    return\n+  }\n+\n+  const config: Parameters<typeof datadogLogs.init>[0] = {\n+    clientToken: PUBLIC_DATADOG_CLIENT_TOKEN,\n+    site: \"datadoghq.eu\",\n+    forwardErrorsToLogs: false,\n+    service: SERVICE_NAME,\n+    env: ENV().toLowerCase(),\n+    sessionSampleRate: 100,\n+    version: PUBLIC_GIT_REV,\n+    telemetrySampleRate: 0,\n+  }\n+\n+  if (!PUBLIC_DATADOG_CLIENT_TOKEN) {\n+    console.warn(\"[DD] Not configured.\")\n+    return\n+  } else {\n+    console.info(\"[DD] Initializing...\", config)\n+  }\n+\n+  datadogLogs.init(config)\n+}\n+\n+const DatadogLogger = pipe(",
    "repo_full_name": "unionlabs/union",
    "discussion_comments": [
      {
        "comment_id": "2094381472",
        "repo_full_name": "unionlabs/union",
        "pr_number": 4538,
        "pr_file": "app2/src/lib/logging/datadog.ts",
        "discussion_id": "2094381472",
        "commented_code": "@@ -0,0 +1,80 @@\n+import { PUBLIC_DATADOG_CLIENT_TOKEN, PUBLIC_GIT_REV } from \"$env/static/public\"\n+import { ENV, SERVICE_NAME } from \"$lib/constants\"\n+import { flattenObject } from \"$lib/utils/flattenObject\"\n+import { datadogLogs, StatusType } from \"@datadog/browser-logs\"\n+import { Array as A, Cause, HashMap, Logger, LogLevel, Match, pipe, Record as R } from \"effect\"\n+\n+const statusType: (u: LogLevel.LogLevel) => StatusType = pipe(\n+  Match.type<LogLevel.LogLevel>(),\n+  Match.tagsExhaustive({\n+    All: () => \"ok\" as const,\n+    Debug: () => \"debug\" as const,\n+    Error: () => \"error\" as const,\n+    Fatal: () => \"critical\" as const,\n+    Info: () => \"info\" as const,\n+    None: () => \"ok\" as const,\n+    Trace: () => \"debug\" as const,\n+    Warning: () => \"warn\" as const,\n+  }),\n+)\n+\n+const init = () => {\n+  if (ENV() === \"DEVELOPMENT\") {\n+    return\n+  }\n+\n+  const config: Parameters<typeof datadogLogs.init>[0] = {\n+    clientToken: PUBLIC_DATADOG_CLIENT_TOKEN,\n+    site: \"datadoghq.eu\",\n+    forwardErrorsToLogs: false,\n+    service: SERVICE_NAME,\n+    env: ENV().toLowerCase(),\n+    sessionSampleRate: 100,\n+    version: PUBLIC_GIT_REV,\n+    telemetrySampleRate: 0,\n+  }\n+\n+  if (!PUBLIC_DATADOG_CLIENT_TOKEN) {\n+    console.warn(\"[DD] Not configured.\")\n+    return\n+  } else {\n+    console.info(\"[DD] Initializing...\", config)\n+  }\n+\n+  datadogLogs.init(config)\n+}\n+\n+const DatadogLogger = pipe(",
        "comment_created_at": "2025-05-18T05:49:18+00:00",
        "comment_author": "ehegnes",
        "comment_body": "The `Logger` layer for Datadog. Notably this:\r\n- determines appropriate log level,\r\n- passes through any [annotations](https://effect.website/docs/observability/logging/#custom-annotations), and\r\n- extracts a singular `Error` instance upon which Datadog can perform analysis.",
        "pr_file_module": null
      }
    ]
  }
]