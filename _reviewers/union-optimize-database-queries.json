[
  {
    "discussion_id": "1672609089",
    "pr_number": 2428,
    "pr_file": "app/src/lib/graphql/documents/transfers.ts",
    "created_at": "2024-07-10T16:17:47+00:00",
    "commented_code": "-import { graphql } from \"gql.tada\"\n+import { graphql } from \"../index.ts\"\n+\n+export const transfersTimestampFilterQueryDocument = graphql(/* GraphQL */ `\n+  query TransfersQueryTimestampFilter(\n+    $limit: Int!,\n+    $timestamp: timestamptz!\n+  ) {\n+    newer: v0_transfers(\n+      limit: $limit,\n+      order_by: { source_timestamp: asc },\n+      where: { source_timestamp: { _gt: $timestamp } },\n+    ) {\n+      sender\n+      source_timestamp\n+      source_transaction_hash\n+      source_chain { chain_id display_name }\n+      receiver\n+      destination_timestamp\n+      destination_transaction_hash\n+      destination_chain { chain_id display_name }\n+      assets\n+    }\n+    older: v0_transfers(\n+      limit: $limit,\n+      order_by: { source_timestamp: desc },\n+      where: { source_timestamp: { _lt: $timestamp } },",
    "repo_full_name": "unionlabs/union",
    "discussion_comments": [
      {
        "comment_id": "1672609089",
        "repo_full_name": "unionlabs/union",
        "pr_number": 2428,
        "pr_file": "app/src/lib/graphql/documents/transfers.ts",
        "discussion_id": "1672609089",
        "commented_code": "@@ -1,4 +1,63 @@\n-import { graphql } from \"gql.tada\"\n+import { graphql } from \"../index.ts\"\n+\n+export const transfersTimestampFilterQueryDocument = graphql(/* GraphQL */ `\n+  query TransfersQueryTimestampFilter(\n+    $limit: Int!,\n+    $timestamp: timestamptz!\n+  ) {\n+    newer: v0_transfers(\n+      limit: $limit,\n+      order_by: { source_timestamp: asc },\n+      where: { source_timestamp: { _gt: $timestamp } },\n+    ) {\n+      sender\n+      source_timestamp\n+      source_transaction_hash\n+      source_chain { chain_id display_name }\n+      receiver\n+      destination_timestamp\n+      destination_transaction_hash\n+      destination_chain { chain_id display_name }\n+      assets\n+    }\n+    older: v0_transfers(\n+      limit: $limit,\n+      order_by: { source_timestamp: desc },\n+      where: { source_timestamp: { _lt: $timestamp } },",
        "comment_created_at": "2024-07-10T16:17:47+00:00",
        "comment_author": "cor",
        "comment_body": "we one of these two should be _lte or _gte, because otherwise we miss the transfers for which the timestamps match",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1672618669",
    "pr_number": 2428,
    "pr_file": "app/src/lib/graphql/documents/transfers.ts",
    "created_at": "2024-07-10T16:24:49+00:00",
    "commented_code": "-import { graphql } from \"gql.tada\"\n+import { graphql } from \"../index.ts\"\n+\n+export const transfersTimestampFilterQueryDocument = graphql(/* GraphQL */ `\n+  query TransfersQueryTimestampFilter(\n+    $limit: Int!,\n+    $timestamp: timestamptz!\n+  ) {\n+    newer: v0_transfers(\n+      limit: $limit,\n+      order_by: { source_timestamp: asc },\n+      where: { source_timestamp: { _gt: $timestamp } },\n+    ) {\n+      sender\n+      source_timestamp\n+      source_transaction_hash\n+      source_chain { chain_id display_name }\n+      receiver\n+      destination_timestamp\n+      destination_transaction_hash\n+      destination_chain { chain_id display_name }",
    "repo_full_name": "unionlabs/union",
    "discussion_comments": [
      {
        "comment_id": "1672618669",
        "repo_full_name": "unionlabs/union",
        "pr_number": 2428,
        "pr_file": "app/src/lib/graphql/documents/transfers.ts",
        "discussion_id": "1672618669",
        "commented_code": "@@ -1,4 +1,63 @@\n-import { graphql } from \"gql.tada\"\n+import { graphql } from \"../index.ts\"\n+\n+export const transfersTimestampFilterQueryDocument = graphql(/* GraphQL */ `\n+  query TransfersQueryTimestampFilter(\n+    $limit: Int!,\n+    $timestamp: timestamptz!\n+  ) {\n+    newer: v0_transfers(\n+      limit: $limit,\n+      order_by: { source_timestamp: asc },\n+      where: { source_timestamp: { _gt: $timestamp } },\n+    ) {\n+      sender\n+      source_timestamp\n+      source_transaction_hash\n+      source_chain { chain_id display_name }\n+      receiver\n+      destination_timestamp\n+      destination_transaction_hash\n+      destination_chain { chain_id display_name }",
        "comment_created_at": "2024-07-10T16:24:49+00:00",
        "comment_author": "cor",
        "comment_body": "Unfortunately we need to undo this change and only fetch the ids and use `chainsgate` to get the actual name, as this adds 2 extra joins for each transfer to the SQL query which is a much thougher load. Do it like we add in alltransfersquery and use the chainsgate to improve m=performance",
        "pr_file_module": null
      }
    ]
  }
]