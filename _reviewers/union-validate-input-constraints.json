[
  {
    "discussion_id": "2112549634",
    "pr_number": 4630,
    "pr_file": "ts-sdk/src/schema/bech32.ts",
    "created_at": "2025-05-28T18:52:59+00:00",
    "commented_code": "catch: cause => new Bech32DecodeError({ message: (cause as Error).message }),\n       }).pipe(\n         // TODO: convert to try; pull out fn\n-        Effect.map(decoded => {\n+        Effect.flatMap(decoded => {\n+          if (decoded.prefix !== prefix) {\n+            return Effect.fail(\n+              new Bech32DecodeError({\n+                message: `Given prefix \"${decoded.prefix}\" does not match requirement \"${prefix}\"`,\n+              }),\n+            )\n+          }",
    "repo_full_name": "unionlabs/union",
    "discussion_comments": [
      {
        "comment_id": "2112549634",
        "repo_full_name": "unionlabs/union",
        "pr_number": 4630,
        "pr_file": "ts-sdk/src/schema/bech32.ts",
        "discussion_id": "2112549634",
        "commented_code": "@@ -50,7 +49,14 @@ export const Bech32FromAddressCanonicalBytesWithPrefix = (\n         catch: cause => new Bech32DecodeError({ message: (cause as Error).message }),\n       }).pipe(\n         // TODO: convert to try; pull out fn\n-        Effect.map(decoded => {\n+        Effect.flatMap(decoded => {\n+          if (decoded.prefix !== prefix) {\n+            return Effect.fail(\n+              new Bech32DecodeError({\n+                message: `Given prefix \"${decoded.prefix}\" does not match requirement \"${prefix}\"`,\n+              }),\n+            )\n+          }",
        "comment_created_at": "2025-05-28T18:52:59+00:00",
        "comment_author": "ehegnes",
        "comment_body": "Check given HRP prefix matches during schema _encode_ of `Bech32FromAddressCanonicalBytesWithPrefix`, which we now use to validate manually input receiver in normal and multisig flows.",
        "pr_file_module": null
      }
    ]
  }
]