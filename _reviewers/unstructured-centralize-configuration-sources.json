[
  {
    "discussion_id": "1603558508",
    "pr_number": 3029,
    "pr_file": "pyproject.toml",
    "created_at": "2024-05-16T15:07:30+00:00",
    "commented_code": "\"UP018\",    # -- Unnecessary {literal_type} call like `str(\"abc\")`. (rewrite as a literal) --\n     \"UP032\",    # -- Use f-string instead of `.format()` call --\n     \"UP034\",    # -- Avoid extraneous parentheses --\n+    \"W\",        # -- Warnings, including invalid escape-sequence --",
    "repo_full_name": "Unstructured-IO/unstructured",
    "discussion_comments": [
      {
        "comment_id": "1603558508",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3029,
        "pr_file": "pyproject.toml",
        "discussion_id": "1603558508",
        "commented_code": "@@ -27,6 +27,7 @@ lint.select = [\n     \"UP018\",    # -- Unnecessary {literal_type} call like `str(\"abc\")`. (rewrite as a literal) --\n     \"UP032\",    # -- Use f-string instead of `.format()` call --\n     \"UP034\",    # -- Avoid extraneous parentheses --\n+    \"W\",        # -- Warnings, including invalid escape-sequence --",
        "comment_created_at": "2024-05-16T15:07:30+00:00",
        "comment_author": "Coniferish",
        "comment_body": "Can you also make this change in `.pre-commit-config.yaml` and the `Makefile`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1603698553",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3029,
        "pr_file": "pyproject.toml",
        "discussion_id": "1603558508",
        "commented_code": "@@ -27,6 +27,7 @@ lint.select = [\n     \"UP018\",    # -- Unnecessary {literal_type} call like `str(\"abc\")`. (rewrite as a literal) --\n     \"UP032\",    # -- Use f-string instead of `.format()` call --\n     \"UP034\",    # -- Avoid extraneous parentheses --\n+    \"W\",        # -- Warnings, including invalid escape-sequence --",
        "comment_created_at": "2024-05-16T16:32:16+00:00",
        "comment_author": "scanny",
        "comment_body": "We moved the redundant specification of `ruff` configuration out of those two a while back. So this `pyproject.toml` is the authoritative source of `ruff` config now, a dividend of DRY :)\r\nhttps://github.com/Unstructured-IO/unstructured/commit/94535e353ca6e65fde4306ae5cc778924c475589",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1525040263",
    "pr_number": 2647,
    "pr_file": "pyproject.toml",
    "created_at": "2024-03-14T15:03:26+00:00",
    "commented_code": "]\n ignore = [\n     \"COM812\",   # -- over aggressively insists on trailing commas where not desireable --\n+    \"PT005\",    # -- flags mock fixtures with names intentionally matching private method name --\n     \"PT011\",    # -- pytest.raises({exc}) too broad, use match param or more specific exception --",
    "repo_full_name": "Unstructured-IO/unstructured",
    "discussion_comments": [
      {
        "comment_id": "1525040263",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2647,
        "pr_file": "pyproject.toml",
        "discussion_id": "1525040263",
        "commented_code": "@@ -31,6 +31,7 @@ select = [\n ]\n ignore = [\n     \"COM812\",   # -- over aggressively insists on trailing commas where not desireable --\n+    \"PT005\",    # -- flags mock fixtures with names intentionally matching private method name --\n     \"PT011\",    # -- pytest.raises({exc}) too broad, use match param or more specific exception --",
        "comment_created_at": "2024-03-14T15:03:26+00:00",
        "comment_author": "Coniferish",
        "comment_body": "Does this change need to be replicated in in `.pre-commit-config.yaml` and `Makefile`? (note at the top)",
        "pr_file_module": null
      },
      {
        "comment_id": "1525307909",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2647,
        "pr_file": "pyproject.toml",
        "discussion_id": "1525040263",
        "commented_code": "@@ -31,6 +31,7 @@ select = [\n ]\n ignore = [\n     \"COM812\",   # -- over aggressively insists on trailing commas where not desireable --\n+    \"PT005\",    # -- flags mock fixtures with names intentionally matching private method name --\n     \"PT011\",    # -- pytest.raises({exc}) too broad, use match param or more specific exception --",
        "comment_created_at": "2024-03-14T18:07:29+00:00",
        "comment_author": "scanny",
        "comment_body": "Hmm, yeah, good call. I've removed those redundant explicit options definitions. Now they should be picked up from the `pyproject.toml` so it's the single source of truth on options.",
        "pr_file_module": null
      }
    ]
  }
]