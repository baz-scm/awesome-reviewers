[
  {
    "discussion_id": "1707252500",
    "pr_number": 3491,
    "pr_file": "requirements/ingest/chroma.in",
    "created_at": "2024-08-07T15:22:21+00:00",
    "commented_code": "-c ../deps/constraints.txt\n -c ../base.txt\n chromadb\n-importlib-metadata>=7.1.0\n+importlib-metadata>=8.2.0",
    "repo_full_name": "Unstructured-IO/unstructured",
    "discussion_comments": [
      {
        "comment_id": "1707252500",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3491,
        "pr_file": "requirements/ingest/chroma.in",
        "discussion_id": "1707252500",
        "commented_code": "@@ -1,6 +1,10 @@\n -c ../deps/constraints.txt\n -c ../base.txt\n chromadb\n-importlib-metadata>=7.1.0\n+importlib-metadata>=8.2.0",
        "comment_created_at": "2024-08-07T15:22:21+00:00",
        "comment_author": "Coniferish",
        "comment_body": "Added this pin.\r\n`opentelemetry-api` has `importlib-metadata` pinned [here](https://github.com/open-telemetry/opentelemetry-python/blob/main/opentelemetry-api/pyproject.toml) to `\"importlib-metadata >= 6.0, <= 8.2.0\",`",
        "pr_file_module": null
      },
      {
        "comment_id": "1707259334",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3491,
        "pr_file": "requirements/ingest/chroma.in",
        "discussion_id": "1707252500",
        "commented_code": "@@ -1,6 +1,10 @@\n -c ../deps/constraints.txt\n -c ../base.txt\n chromadb\n-importlib-metadata>=7.1.0\n+importlib-metadata>=8.2.0",
        "comment_created_at": "2024-08-07T15:25:13+00:00",
        "comment_author": "Coniferish",
        "comment_body": "Other extras were resolving to 8.2.0, but chroma was resolving to 8.0.0 for some reason. Pinned 8.2.0 as a minimum version to force the chroma dependency to match the others.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1706093951",
    "pr_number": 3482,
    "pr_file": "requirements/ingest/chroma.in",
    "created_at": "2024-08-06T20:46:42+00:00",
    "commented_code": "importlib-metadata>=7.1.0\n # Future releases adds in typer-cli which breaks the resolution of typer as a library\n typer<=0.9.0\n+# tenacity 9.0.0 is being installed via chroma, but other dependencies (langchain) restrict tenacity\n+# to <=9.0.0 in other depenceny extras and resolve to 8.5.0.\n+# The original langchain pin: https://github.com/langchain-ai/langchain/pull/849/\n+tenacity==8.5.0",
    "repo_full_name": "Unstructured-IO/unstructured",
    "discussion_comments": [
      {
        "comment_id": "1706093951",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3482,
        "pr_file": "requirements/ingest/chroma.in",
        "discussion_id": "1706093951",
        "commented_code": "@@ -4,3 +4,7 @@ chromadb\n importlib-metadata>=7.1.0\n # Future releases adds in typer-cli which breaks the resolution of typer as a library\n typer<=0.9.0\n+# tenacity 9.0.0 is being installed via chroma, but other dependencies (langchain) restrict tenacity\n+# to <=9.0.0 in other depenceny extras and resolve to 8.5.0.\n+# The original langchain pin: https://github.com/langchain-ai/langchain/pull/849/\n+tenacity==8.5.0",
        "comment_created_at": "2024-08-06T20:46:42+00:00",
        "comment_author": "Coniferish",
        "comment_body": "explanation for pin in case Langchain updates their pin and we can remove this",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1531133074",
    "pr_number": 2633,
    "pr_file": "requirements/ingest/clarifai.in",
    "created_at": "2024-03-19T21:22:03+00:00",
    "commented_code": "+-c ../constraints.in\n+-c ../base.txt\n+clarifai==10.0.1",
    "repo_full_name": "Unstructured-IO/unstructured",
    "discussion_comments": [
      {
        "comment_id": "1531133074",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2633,
        "pr_file": "requirements/ingest/clarifai.in",
        "discussion_id": "1531133074",
        "commented_code": "@@ -0,0 +1,3 @@\n+-c ../constraints.in\n+-c ../base.txt\n+clarifai==10.0.1",
        "comment_created_at": "2024-03-19T21:22:03+00:00",
        "comment_author": "ahmetmeleq",
        "comment_body": "I assume the pin is to avert similar potential hardships we've encountered with other providers on version changes before. I'd still like to advocate for not putting pins if there's no particular reason for that specific connector. \r\n\r\nIn my defense I've checked all of our ingest requirements and only found [pinecone](https://github.com/Unstructured-IO/unstructured/blob/main/requirements/ingest/pinecone.in) and [partly github](https://github.com/Unstructured-IO/unstructured/blob/main/requirements/ingest/github.in) to be version restrictred. None of the other providers seem to be creating problems with version changes for now; and we still enjoy the updates / dependency resolution flexibility that comes with their versions being unrestricted",
        "pr_file_module": null
      },
      {
        "comment_id": "1532182922",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2633,
        "pr_file": "requirements/ingest/clarifai.in",
        "discussion_id": "1531133074",
        "commented_code": "@@ -0,0 +1,3 @@\n+-c ../constraints.in\n+-c ../base.txt\n+clarifai==10.0.1",
        "comment_created_at": "2024-03-20T14:29:33+00:00",
        "comment_author": "potter-potter",
        "comment_body": "Agree as well. I'll unpin and regenerate the requirements.txt",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1453531409",
    "pr_number": 2386,
    "pr_file": "docs/source/best_practices/table_extraction_pdf.rst",
    "created_at": "2024-01-16T14:44:59+00:00",
    "commented_code": "+Table Extraction from PDF\n+=========================\n+\n+This section describes two methods for extracting tables from PDF files.\n+\n+.. note::\n+\n+    To extract tables from any documents, set the ``strategy`` parameter to ``hi_res`` in both methods.\n+\n+Method 1: Using `partition_pdf`\n+-------------------------------\n+\n+To extract the tables from PDF files using the `partition_pdf <https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf>`__, set the ``infer_table_structure`` parameter to ``True`` and ``strategy`` parameter to ``hi_res``.\n+\n+**Usage**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.pdf import partition_pdf\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition_pdf(filename=filename\n+                             infer_table_structure=True,\n+                             strategy='hi_res',\n+                            )\n+\n+    tables = [el for el in elements if el.category == \"Table\"]\n+\n+    print(tables[0].text)\n+    print(tables[0].metadata.text_as_html)\n+\n+Method 2: Using Auto Partition or Unstructured API\n+--------------------------------------------------\n+\n+For extracting tables from PDFs using `auto partition <https://unstructured-io.github.io/unstructured/core/partition.html#partition>`__ or `Unstructured API parameters <https://unstructured-io.github.io/unstructured/apis/api_parameters.html>`__ , three parameters are relevant: ``strategy``, ``skip_infer_table_types``, and ``pdf_infer_table_structure``.\n+\n+.. warning::\n+    **Avoiding Conflicts**: A conflict arises if ``pdf`` is included in the list of ``skip_infer_table_types`` while ``pdf_infer_table_structure`` is set to ``True``. You will get a warning when these two parameters are in conflict.\n+\n+**Usage: Auto Partition**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.auto import partition\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition(filename=filename,\n+                         skip_infer_table_types=[],\n+                         pdf_infer_table_structure=True,",
    "repo_full_name": "Unstructured-IO/unstructured",
    "discussion_comments": [
      {
        "comment_id": "1453531409",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2386,
        "pr_file": "docs/source/best_practices/table_extraction_pdf.rst",
        "discussion_id": "1453531409",
        "commented_code": "@@ -0,0 +1,72 @@\n+Table Extraction from PDF\n+=========================\n+\n+This section describes two methods for extracting tables from PDF files.\n+\n+.. note::\n+\n+    To extract tables from any documents, set the ``strategy`` parameter to ``hi_res`` in both methods.\n+\n+Method 1: Using `partition_pdf`\n+-------------------------------\n+\n+To extract the tables from PDF files using the `partition_pdf <https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf>`__, set the ``infer_table_structure`` parameter to ``True`` and ``strategy`` parameter to ``hi_res``.\n+\n+**Usage**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.pdf import partition_pdf\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition_pdf(filename=filename\n+                             infer_table_structure=True,\n+                             strategy='hi_res',\n+                            )\n+\n+    tables = [el for el in elements if el.category == \"Table\"]\n+\n+    print(tables[0].text)\n+    print(tables[0].metadata.text_as_html)\n+\n+Method 2: Using Auto Partition or Unstructured API\n+--------------------------------------------------\n+\n+For extracting tables from PDFs using `auto partition <https://unstructured-io.github.io/unstructured/core/partition.html#partition>`__ or `Unstructured API parameters <https://unstructured-io.github.io/unstructured/apis/api_parameters.html>`__ , three parameters are relevant: ``strategy``, ``skip_infer_table_types``, and ``pdf_infer_table_structure``.\n+\n+.. warning::\n+    **Avoiding Conflicts**: A conflict arises if ``pdf`` is included in the list of ``skip_infer_table_types`` while ``pdf_infer_table_structure`` is set to ``True``. You will get a warning when these two parameters are in conflict.\n+\n+**Usage: Auto Partition**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.auto import partition\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition(filename=filename,\n+                         skip_infer_table_types=[],\n+                         pdf_infer_table_structure=True,",
        "comment_created_at": "2024-01-16T14:44:59+00:00",
        "comment_author": "MthwRobinson",
        "comment_body": "Do you need `skip_infer_table_types` and `pdf_infer_table_structured`? I thought `skip_infer_table_types` superseded `pdf_infer_table_types`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1456064725",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2386,
        "pr_file": "docs/source/best_practices/table_extraction_pdf.rst",
        "discussion_id": "1453531409",
        "commented_code": "@@ -0,0 +1,72 @@\n+Table Extraction from PDF\n+=========================\n+\n+This section describes two methods for extracting tables from PDF files.\n+\n+.. note::\n+\n+    To extract tables from any documents, set the ``strategy`` parameter to ``hi_res`` in both methods.\n+\n+Method 1: Using `partition_pdf`\n+-------------------------------\n+\n+To extract the tables from PDF files using the `partition_pdf <https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf>`__, set the ``infer_table_structure`` parameter to ``True`` and ``strategy`` parameter to ``hi_res``.\n+\n+**Usage**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.pdf import partition_pdf\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition_pdf(filename=filename\n+                             infer_table_structure=True,\n+                             strategy='hi_res',\n+                            )\n+\n+    tables = [el for el in elements if el.category == \"Table\"]\n+\n+    print(tables[0].text)\n+    print(tables[0].metadata.text_as_html)\n+\n+Method 2: Using Auto Partition or Unstructured API\n+--------------------------------------------------\n+\n+For extracting tables from PDFs using `auto partition <https://unstructured-io.github.io/unstructured/core/partition.html#partition>`__ or `Unstructured API parameters <https://unstructured-io.github.io/unstructured/apis/api_parameters.html>`__ , three parameters are relevant: ``strategy``, ``skip_infer_table_types``, and ``pdf_infer_table_structure``.\n+\n+.. warning::\n+    **Avoiding Conflicts**: A conflict arises if ``pdf`` is included in the list of ``skip_infer_table_types`` while ``pdf_infer_table_structure`` is set to ``True``. You will get a warning when these two parameters are in conflict.\n+\n+**Usage: Auto Partition**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.auto import partition\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition(filename=filename,\n+                         skip_infer_table_types=[],\n+                         pdf_infer_table_structure=True,",
        "comment_created_at": "2024-01-17T16:51:38+00:00",
        "comment_author": "ron-unstructured",
        "comment_body": "Clarification from @yuming-long \r\n- `skip_infer_table_types` won't supersede `pdf_infer_table_structure` (otherwise it is a bug)\r\n- user should set `skip_infer_table_types` to a list without \"pdf\" for example [\"jpg\"] or []\r\n- if the \"pdf\" in `skip_infer_table_types` is removed, and the user doesn't want to do table extraction for pdf, then do not set `pdf_infer_table_structure` to \"True\"; Otherwise, we will do table extraction since we still use both parameters to decide table extraction, so: (i)if the \"pdf\" in `skip_infer_table_types` is removed, `pdf_infer_table_structure` to \"True\". do table extraction, give a warning. (ii) if the \"pdf\" in `skip_infer_table_types` is removed, `pdf_infer_table_structure` to \"False\", no table extraction (and of no warning)\r\n- There is no need to define both, but just if there is a conflict between the two, give a warning.",
        "pr_file_module": null
      },
      {
        "comment_id": "1456148387",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2386,
        "pr_file": "docs/source/best_practices/table_extraction_pdf.rst",
        "discussion_id": "1453531409",
        "commented_code": "@@ -0,0 +1,72 @@\n+Table Extraction from PDF\n+=========================\n+\n+This section describes two methods for extracting tables from PDF files.\n+\n+.. note::\n+\n+    To extract tables from any documents, set the ``strategy`` parameter to ``hi_res`` in both methods.\n+\n+Method 1: Using `partition_pdf`\n+-------------------------------\n+\n+To extract the tables from PDF files using the `partition_pdf <https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf>`__, set the ``infer_table_structure`` parameter to ``True`` and ``strategy`` parameter to ``hi_res``.\n+\n+**Usage**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.pdf import partition_pdf\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition_pdf(filename=filename\n+                             infer_table_structure=True,\n+                             strategy='hi_res',\n+                            )\n+\n+    tables = [el for el in elements if el.category == \"Table\"]\n+\n+    print(tables[0].text)\n+    print(tables[0].metadata.text_as_html)\n+\n+Method 2: Using Auto Partition or Unstructured API\n+--------------------------------------------------\n+\n+For extracting tables from PDFs using `auto partition <https://unstructured-io.github.io/unstructured/core/partition.html#partition>`__ or `Unstructured API parameters <https://unstructured-io.github.io/unstructured/apis/api_parameters.html>`__ , three parameters are relevant: ``strategy``, ``skip_infer_table_types``, and ``pdf_infer_table_structure``.\n+\n+.. warning::\n+    **Avoiding Conflicts**: A conflict arises if ``pdf`` is included in the list of ``skip_infer_table_types`` while ``pdf_infer_table_structure`` is set to ``True``. You will get a warning when these two parameters are in conflict.\n+\n+**Usage: Auto Partition**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.auto import partition\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition(filename=filename,\n+                         skip_infer_table_types=[],\n+                         pdf_infer_table_structure=True,",
        "comment_created_at": "2024-01-17T17:29:56+00:00",
        "comment_author": "MthwRobinson",
        "comment_body": "We should have both of those parameters in the docs, that'll get confusing. Keep `skip_infer_table_types` and drop references to `pdf_infer_table_types`.",
        "pr_file_module": null
      },
      {
        "comment_id": "1456399131",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2386,
        "pr_file": "docs/source/best_practices/table_extraction_pdf.rst",
        "discussion_id": "1453531409",
        "commented_code": "@@ -0,0 +1,72 @@\n+Table Extraction from PDF\n+=========================\n+\n+This section describes two methods for extracting tables from PDF files.\n+\n+.. note::\n+\n+    To extract tables from any documents, set the ``strategy`` parameter to ``hi_res`` in both methods.\n+\n+Method 1: Using `partition_pdf`\n+-------------------------------\n+\n+To extract the tables from PDF files using the `partition_pdf <https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf>`__, set the ``infer_table_structure`` parameter to ``True`` and ``strategy`` parameter to ``hi_res``.\n+\n+**Usage**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.pdf import partition_pdf\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition_pdf(filename=filename\n+                             infer_table_structure=True,\n+                             strategy='hi_res',\n+                            )\n+\n+    tables = [el for el in elements if el.category == \"Table\"]\n+\n+    print(tables[0].text)\n+    print(tables[0].metadata.text_as_html)\n+\n+Method 2: Using Auto Partition or Unstructured API\n+--------------------------------------------------\n+\n+For extracting tables from PDFs using `auto partition <https://unstructured-io.github.io/unstructured/core/partition.html#partition>`__ or `Unstructured API parameters <https://unstructured-io.github.io/unstructured/apis/api_parameters.html>`__ , three parameters are relevant: ``strategy``, ``skip_infer_table_types``, and ``pdf_infer_table_structure``.\n+\n+.. warning::\n+    **Avoiding Conflicts**: A conflict arises if ``pdf`` is included in the list of ``skip_infer_table_types`` while ``pdf_infer_table_structure`` is set to ``True``. You will get a warning when these two parameters are in conflict.\n+\n+**Usage: Auto Partition**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.auto import partition\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition(filename=filename,\n+                         skip_infer_table_types=[],\n+                         pdf_infer_table_structure=True,",
        "comment_created_at": "2024-01-17T19:52:03+00:00",
        "comment_author": "MthwRobinson",
        "comment_body": "@ron-unstructured - I'll create a follow on issue to deprecate one of those parameters. As far as this docs PR goes, we're good to go here.",
        "pr_file_module": null
      },
      {
        "comment_id": "1456411643",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2386,
        "pr_file": "docs/source/best_practices/table_extraction_pdf.rst",
        "discussion_id": "1453531409",
        "commented_code": "@@ -0,0 +1,72 @@\n+Table Extraction from PDF\n+=========================\n+\n+This section describes two methods for extracting tables from PDF files.\n+\n+.. note::\n+\n+    To extract tables from any documents, set the ``strategy`` parameter to ``hi_res`` in both methods.\n+\n+Method 1: Using `partition_pdf`\n+-------------------------------\n+\n+To extract the tables from PDF files using the `partition_pdf <https://unstructured-io.github.io/unstructured/core/partition.html#partition-pdf>`__, set the ``infer_table_structure`` parameter to ``True`` and ``strategy`` parameter to ``hi_res``.\n+\n+**Usage**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.pdf import partition_pdf\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition_pdf(filename=filename\n+                             infer_table_structure=True,\n+                             strategy='hi_res',\n+                            )\n+\n+    tables = [el for el in elements if el.category == \"Table\"]\n+\n+    print(tables[0].text)\n+    print(tables[0].metadata.text_as_html)\n+\n+Method 2: Using Auto Partition or Unstructured API\n+--------------------------------------------------\n+\n+For extracting tables from PDFs using `auto partition <https://unstructured-io.github.io/unstructured/core/partition.html#partition>`__ or `Unstructured API parameters <https://unstructured-io.github.io/unstructured/apis/api_parameters.html>`__ , three parameters are relevant: ``strategy``, ``skip_infer_table_types``, and ``pdf_infer_table_structure``.\n+\n+.. warning::\n+    **Avoiding Conflicts**: A conflict arises if ``pdf`` is included in the list of ``skip_infer_table_types`` while ``pdf_infer_table_structure`` is set to ``True``. You will get a warning when these two parameters are in conflict.\n+\n+**Usage: Auto Partition**\n+\n+.. code-block:: python\n+\n+    from unstructured.partition.auto import partition\n+\n+    filename = \"example-docs/layout-parser-paper.pdf\"\n+\n+    elements = partition(filename=filename,\n+                         skip_infer_table_types=[],\n+                         pdf_infer_table_structure=True,",
        "comment_created_at": "2024-01-17T20:02:22+00:00",
        "comment_author": "yuming-long",
        "comment_body": "i tested this and got table output\r\n```\r\nfrom unstructured.partition.auto import partition\r\n\r\nelements = partition(\"layout-parser-paper.pdf\", strategy='hi_res',\r\n    skip_infer_table_types=[],\r\n)\r\n\r\nprint([el.metadata.text_as_html for el in elements if el.metadata.text_as_html])\r\n```\r\ni think only set `skip_infer_table_types` should do the trick for pdf",
        "pr_file_module": null
      }
    ]
  }
]