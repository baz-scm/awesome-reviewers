[
  {
    "discussion_id": "1599327960",
    "pr_number": 3003,
    "pr_file": "test_unstructured_ingest/dest/astra.sh",
    "created_at": "2024-05-14T03:29:43+00:00",
    "commented_code": "--token \"$ASTRA_DB_TOKEN\" \\\n   --api-endpoint \"$ASTRA_DB_ENDPOINT\" \\\n   --collection-name \"$COLLECTION_NAME\" \\\n-  --embedding-dimension \"$EMBEDDING_DIMENSION\"\n+  --embedding-dimension \"$EMBEDDING_DIMENSION\" \\\n+  --requested-indexing-policy '{\"deny\": \"metadata\"}'",
    "repo_full_name": "Unstructured-IO/unstructured",
    "discussion_comments": [
      {
        "comment_id": "1599327960",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3003,
        "pr_file": "test_unstructured_ingest/dest/astra.sh",
        "discussion_id": "1599327960",
        "commented_code": "@@ -55,7 +55,8 @@ PYTHONPATH=. ./unstructured/ingest/main.py \\\n   --token \"$ASTRA_DB_TOKEN\" \\\n   --api-endpoint \"$ASTRA_DB_ENDPOINT\" \\\n   --collection-name \"$COLLECTION_NAME\" \\\n-  --embedding-dimension \"$EMBEDDING_DIMENSION\"\n+  --embedding-dimension \"$EMBEDDING_DIMENSION\" \\\n+  --requested-indexing-policy '{\"deny\": \"metadata\"}'",
        "comment_created_at": "2024-05-14T03:29:43+00:00",
        "comment_author": "potter-potter",
        "comment_body": "@erichare Can you shed some light on why this `--requested-indexing-policy` results in an error. Maybe there is better json to test this attribute.",
        "pr_file_module": null
      },
      {
        "comment_id": "1601671802",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3003,
        "pr_file": "test_unstructured_ingest/dest/astra.sh",
        "discussion_id": "1599327960",
        "commented_code": "@@ -55,7 +55,8 @@ PYTHONPATH=. ./unstructured/ingest/main.py \\\n   --token \"$ASTRA_DB_TOKEN\" \\\n   --api-endpoint \"$ASTRA_DB_ENDPOINT\" \\\n   --collection-name \"$COLLECTION_NAME\" \\\n-  --embedding-dimension \"$EMBEDDING_DIMENSION\"\n+  --embedding-dimension \"$EMBEDDING_DIMENSION\" \\\n+  --requested-indexing-policy '{\"deny\": \"metadata\"}'",
        "comment_created_at": "2024-05-15T13:40:12+00:00",
        "comment_author": "potter-potter",
        "comment_body": "@erichare Switched this pr from draft to normal. Just in case you couldn't access the draft.",
        "pr_file_module": null
      },
      {
        "comment_id": "1601762018",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3003,
        "pr_file": "test_unstructured_ingest/dest/astra.sh",
        "discussion_id": "1599327960",
        "commented_code": "@@ -55,7 +55,8 @@ PYTHONPATH=. ./unstructured/ingest/main.py \\\n   --token \"$ASTRA_DB_TOKEN\" \\\n   --api-endpoint \"$ASTRA_DB_ENDPOINT\" \\\n   --collection-name \"$COLLECTION_NAME\" \\\n-  --embedding-dimension \"$EMBEDDING_DIMENSION\"\n+  --embedding-dimension \"$EMBEDDING_DIMENSION\" \\\n+  --requested-indexing-policy '{\"deny\": \"metadata\"}'",
        "comment_created_at": "2024-05-15T14:31:58+00:00",
        "comment_author": "erichare",
        "comment_body": "@potter-potter apologies about the delay - i was out most of yesterday. Let me test that shortly - offhand that looks right, assuming that it gets converted into a dictionary correctly, but its kind of a deeply nested object on the Astra Data API side and so i may have missed a top level attribute. Checking it out shortly...",
        "pr_file_module": null
      },
      {
        "comment_id": "1601833045",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3003,
        "pr_file": "test_unstructured_ingest/dest/astra.sh",
        "discussion_id": "1599327960",
        "commented_code": "@@ -55,7 +55,8 @@ PYTHONPATH=. ./unstructured/ingest/main.py \\\n   --token \"$ASTRA_DB_TOKEN\" \\\n   --api-endpoint \"$ASTRA_DB_ENDPOINT\" \\\n   --collection-name \"$COLLECTION_NAME\" \\\n-  --embedding-dimension \"$EMBEDDING_DIMENSION\"\n+  --embedding-dimension \"$EMBEDDING_DIMENSION\" \\\n+  --requested-indexing-policy '{\"deny\": \"metadata\"}'",
        "comment_created_at": "2024-05-15T15:15:23+00:00",
        "comment_author": "erichare",
        "comment_body": "@potter-potter i opened a small bugfix pr to merge into this branch (didn't have write access to this). It was my mistake - i was passing a single field, but the API expects a list of fields even if it's just a single one.",
        "pr_file_module": null
      },
      {
        "comment_id": "1601946053",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 3003,
        "pr_file": "test_unstructured_ingest/dest/astra.sh",
        "discussion_id": "1599327960",
        "commented_code": "@@ -55,7 +55,8 @@ PYTHONPATH=. ./unstructured/ingest/main.py \\\n   --token \"$ASTRA_DB_TOKEN\" \\\n   --api-endpoint \"$ASTRA_DB_ENDPOINT\" \\\n   --collection-name \"$COLLECTION_NAME\" \\\n-  --embedding-dimension \"$EMBEDDING_DIMENSION\"\n+  --embedding-dimension \"$EMBEDDING_DIMENSION\" \\\n+  --requested-indexing-policy '{\"deny\": \"metadata\"}'",
        "comment_created_at": "2024-05-15T16:33:46+00:00",
        "comment_author": "potter-potter",
        "comment_body": "@erichare your fix looks good.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1540184261",
    "pr_number": 2693,
    "pr_file": "test_unstructured_ingest/src/local-embed-vertexai.sh",
    "created_at": "2024-03-26T22:24:15+00:00",
    "commented_code": "+#!/usr/bin/env bash\n+\n+set -e\n+\n+SRC_PATH=$(dirname \"$(realpath \"$0\")\")\n+SCRIPT_DIR=$(dirname \"$SRC_PATH\")\n+cd \"$SCRIPT_DIR\"/.. || exit 1\n+OUTPUT_FOLDER_NAME=embed-vertexai\n+OUTPUT_ROOT=${OUTPUT_ROOT:-$SCRIPT_DIR}\n+OUTPUT_DIR=$OUTPUT_ROOT/structured-output/$OUTPUT_FOLDER_NAME\n+WORK_DIR=$OUTPUT_ROOT/workdir/$OUTPUT_FOLDER_NAME\n+max_processes=${MAX_PROCESSES:=$(python3 -c \"import os; print(os.cpu_count())\")}\n+\n+# shellcheck disable=SC1091\n+source \"$SCRIPT_DIR\"/cleanup.sh\n+function cleanup() {\n+  cleanup_dir \"$OUTPUT_DIR\"\n+  cleanup_dir \"$WORK_DIR\"\n+}\n+trap cleanup EXIT\n+\n+RUN_SCRIPT=${RUN_SCRIPT:-./unstructured/ingest/main.py}\n+PYTHONPATH=${PYTHONPATH:-.} \"$RUN_SCRIPT\" \\\n+  local \\\n+  --num-processes \"$max_processes\" \\\n+  --metadata-exclude coordinates,filename,file_directory,metadata.data_source.date_created,metadata.data_source.date_modified,metadata.data_source.date_processed,metadata.last_modified,metadata.detection_class_prob,metadata.parent_id,metadata.category_depth \\\n+  --output-dir \"$OUTPUT_DIR\" \\\n+  --verbose \\\n+  --reprocess \\\n+  --input-path example-docs/book-war-and-peace-1p.txt \\\n+  --work-dir \"$WORK_DIR\" \\\n+  --embedding-provider \"langchain-vertexai\"",
    "repo_full_name": "Unstructured-IO/unstructured",
    "discussion_comments": [
      {
        "comment_id": "1540184261",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2693,
        "pr_file": "test_unstructured_ingest/src/local-embed-vertexai.sh",
        "discussion_id": "1540184261",
        "commented_code": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+\n+SRC_PATH=$(dirname \"$(realpath \"$0\")\")\n+SCRIPT_DIR=$(dirname \"$SRC_PATH\")\n+cd \"$SCRIPT_DIR\"/.. || exit 1\n+OUTPUT_FOLDER_NAME=embed-vertexai\n+OUTPUT_ROOT=${OUTPUT_ROOT:-$SCRIPT_DIR}\n+OUTPUT_DIR=$OUTPUT_ROOT/structured-output/$OUTPUT_FOLDER_NAME\n+WORK_DIR=$OUTPUT_ROOT/workdir/$OUTPUT_FOLDER_NAME\n+max_processes=${MAX_PROCESSES:=$(python3 -c \"import os; print(os.cpu_count())\")}\n+\n+# shellcheck disable=SC1091\n+source \"$SCRIPT_DIR\"/cleanup.sh\n+function cleanup() {\n+  cleanup_dir \"$OUTPUT_DIR\"\n+  cleanup_dir \"$WORK_DIR\"\n+}\n+trap cleanup EXIT\n+\n+RUN_SCRIPT=${RUN_SCRIPT:-./unstructured/ingest/main.py}\n+PYTHONPATH=${PYTHONPATH:-.} \"$RUN_SCRIPT\" \\\n+  local \\\n+  --num-processes \"$max_processes\" \\\n+  --metadata-exclude coordinates,filename,file_directory,metadata.data_source.date_created,metadata.data_source.date_modified,metadata.data_source.date_processed,metadata.last_modified,metadata.detection_class_prob,metadata.parent_id,metadata.category_depth \\\n+  --output-dir \"$OUTPUT_DIR\" \\\n+  --verbose \\\n+  --reprocess \\\n+  --input-path example-docs/book-war-and-peace-1p.txt \\\n+  --work-dir \"$WORK_DIR\" \\\n+  --embedding-provider \"langchain-vertexai\"",
        "comment_created_at": "2024-03-26T22:24:15+00:00",
        "comment_author": "potter-potter",
        "comment_body": "From the docs above there is no api key or anything. I guess there should be an environment variable. `GOOGLE_APPLICATION_CREDENTIALS`\r\nIs there a way to make this more user friendly or obvious. Like we do with other embedders. \r\n--embedding-api-key \"$OCTOAI_API_KEY\"\r\njust a thought. \r\n\r\nthe google-drive src integration test might be the most similar.",
        "pr_file_module": null
      },
      {
        "comment_id": "1540193428",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2693,
        "pr_file": "test_unstructured_ingest/src/local-embed-vertexai.sh",
        "discussion_id": "1540184261",
        "commented_code": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+\n+SRC_PATH=$(dirname \"$(realpath \"$0\")\")\n+SCRIPT_DIR=$(dirname \"$SRC_PATH\")\n+cd \"$SCRIPT_DIR\"/.. || exit 1\n+OUTPUT_FOLDER_NAME=embed-vertexai\n+OUTPUT_ROOT=${OUTPUT_ROOT:-$SCRIPT_DIR}\n+OUTPUT_DIR=$OUTPUT_ROOT/structured-output/$OUTPUT_FOLDER_NAME\n+WORK_DIR=$OUTPUT_ROOT/workdir/$OUTPUT_FOLDER_NAME\n+max_processes=${MAX_PROCESSES:=$(python3 -c \"import os; print(os.cpu_count())\")}\n+\n+# shellcheck disable=SC1091\n+source \"$SCRIPT_DIR\"/cleanup.sh\n+function cleanup() {\n+  cleanup_dir \"$OUTPUT_DIR\"\n+  cleanup_dir \"$WORK_DIR\"\n+}\n+trap cleanup EXIT\n+\n+RUN_SCRIPT=${RUN_SCRIPT:-./unstructured/ingest/main.py}\n+PYTHONPATH=${PYTHONPATH:-.} \"$RUN_SCRIPT\" \\\n+  local \\\n+  --num-processes \"$max_processes\" \\\n+  --metadata-exclude coordinates,filename,file_directory,metadata.data_source.date_created,metadata.data_source.date_modified,metadata.data_source.date_processed,metadata.last_modified,metadata.detection_class_prob,metadata.parent_id,metadata.category_depth \\\n+  --output-dir \"$OUTPUT_DIR\" \\\n+  --verbose \\\n+  --reprocess \\\n+  --input-path example-docs/book-war-and-peace-1p.txt \\\n+  --work-dir \"$WORK_DIR\" \\\n+  --embedding-provider \"langchain-vertexai\"",
        "comment_created_at": "2024-03-26T22:34:12+00:00",
        "comment_author": "potter-potter",
        "comment_body": "I guess I'm wondering long term how they will get credentials into the environment of Platform to run Vertex as an embedder.",
        "pr_file_module": null
      },
      {
        "comment_id": "1541391047",
        "repo_full_name": "Unstructured-IO/unstructured",
        "pr_number": 2693,
        "pr_file": "test_unstructured_ingest/src/local-embed-vertexai.sh",
        "discussion_id": "1540184261",
        "commented_code": "@@ -0,0 +1,38 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+\n+SRC_PATH=$(dirname \"$(realpath \"$0\")\")\n+SCRIPT_DIR=$(dirname \"$SRC_PATH\")\n+cd \"$SCRIPT_DIR\"/.. || exit 1\n+OUTPUT_FOLDER_NAME=embed-vertexai\n+OUTPUT_ROOT=${OUTPUT_ROOT:-$SCRIPT_DIR}\n+OUTPUT_DIR=$OUTPUT_ROOT/structured-output/$OUTPUT_FOLDER_NAME\n+WORK_DIR=$OUTPUT_ROOT/workdir/$OUTPUT_FOLDER_NAME\n+max_processes=${MAX_PROCESSES:=$(python3 -c \"import os; print(os.cpu_count())\")}\n+\n+# shellcheck disable=SC1091\n+source \"$SCRIPT_DIR\"/cleanup.sh\n+function cleanup() {\n+  cleanup_dir \"$OUTPUT_DIR\"\n+  cleanup_dir \"$WORK_DIR\"\n+}\n+trap cleanup EXIT\n+\n+RUN_SCRIPT=${RUN_SCRIPT:-./unstructured/ingest/main.py}\n+PYTHONPATH=${PYTHONPATH:-.} \"$RUN_SCRIPT\" \\\n+  local \\\n+  --num-processes \"$max_processes\" \\\n+  --metadata-exclude coordinates,filename,file_directory,metadata.data_source.date_created,metadata.data_source.date_modified,metadata.data_source.date_processed,metadata.last_modified,metadata.detection_class_prob,metadata.parent_id,metadata.category_depth \\\n+  --output-dir \"$OUTPUT_DIR\" \\\n+  --verbose \\\n+  --reprocess \\\n+  --input-path example-docs/book-war-and-peace-1p.txt \\\n+  --work-dir \"$WORK_DIR\" \\\n+  --embedding-provider \"langchain-vertexai\"",
        "comment_created_at": "2024-03-27T15:57:11+00:00",
        "comment_author": "ahmetmeleq",
        "comment_body": "Agreed, addressed with [parametrized api-key](https://github.com/Unstructured-IO/unstructured/pull/2693/commits/95a619ef3915f223225cecd073147c798ef7ae8c)",
        "pr_file_module": null
      }
    ]
  }
]