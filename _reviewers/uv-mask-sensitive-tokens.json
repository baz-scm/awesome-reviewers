[
  {
    "discussion_id": "2145333324",
    "pr_number": 13615,
    "pr_file": ".github/workflows/ci.yml",
    "created_at": "2025-06-13T15:24:19+00:00",
    "commented_code": "done <<< \"${CHANGED_FILES}\"\n           echo \"code_any_changed=${CODE_CHANGED}\" >> \"${GITHUB_OUTPUT}\"\n \n+  integration-test-registries:\n+    timeout-minutes: 10\n+    needs: build-binary-linux-libc\n+    name: \"integration test | registries\"\n+    runs-on: ubuntu-latest\n+    if: ${{ !contains(github.event.pull_request.labels.*.name, 'no-test') && github.event.pull_request.head.repo.fork != true }}\n+    environment: uv-test-registries\n+    env:\n+      PYTHON_VERSION: 3.12\n+    steps:\n+      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n+        with:\n+          fetch-depth: 0\n+\n+      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0\n+        with:\n+          python-version: \"${{ env.PYTHON_VERSION }}\"\n+\n+      - name: \"Download binary\"\n+        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0\n+        with:\n+          name: uv-linux-libc-${{ github.sha }}\n+\n+      - name: \"Prepare binary\"\n+        run: chmod +x ./uv\n+\n+      - name: \"Configure AWS credentials\"\n+        uses: aws-actions/configure-aws-credentials@v2\n+        with:\n+          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+          aws-region: us-east-1\n+\n+      - name: \"Get AWS CodeArtifact token\"\n+        run: |\n+          UV_TEST_AWS_TOKEN=$(aws codeartifact get-authorization-token \\\n+            --domain tests \\\n+            --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} \\\n+            --region us-east-1 \\\n+            --query authorizationToken \\\n+            --output text)\n+          echo \"UV_TEST_AWS_TOKEN=$UV_TEST_AWS_TOKEN\" >> $GITHUB_ENV",
    "repo_full_name": "astral-sh/uv",
    "discussion_comments": [
      {
        "comment_id": "2145333324",
        "repo_full_name": "astral-sh/uv",
        "pr_number": 13615,
        "pr_file": ".github/workflows/ci.yml",
        "discussion_id": "2145333324",
        "commented_code": "@@ -1467,6 +1467,88 @@ jobs:\n           done <<< \"${CHANGED_FILES}\"\n           echo \"code_any_changed=${CODE_CHANGED}\" >> \"${GITHUB_OUTPUT}\"\n \n+  integration-test-registries:\n+    timeout-minutes: 10\n+    needs: build-binary-linux-libc\n+    name: \"integration test | registries\"\n+    runs-on: ubuntu-latest\n+    if: ${{ !contains(github.event.pull_request.labels.*.name, 'no-test') && github.event.pull_request.head.repo.fork != true }}\n+    environment: uv-test-registries\n+    env:\n+      PYTHON_VERSION: 3.12\n+    steps:\n+      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2\n+        with:\n+          fetch-depth: 0\n+\n+      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0\n+        with:\n+          python-version: \"${{ env.PYTHON_VERSION }}\"\n+\n+      - name: \"Download binary\"\n+        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0\n+        with:\n+          name: uv-linux-libc-${{ github.sha }}\n+\n+      - name: \"Prepare binary\"\n+        run: chmod +x ./uv\n+\n+      - name: \"Configure AWS credentials\"\n+        uses: aws-actions/configure-aws-credentials@v2\n+        with:\n+          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n+          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n+          aws-region: us-east-1\n+\n+      - name: \"Get AWS CodeArtifact token\"\n+        run: |\n+          UV_TEST_AWS_TOKEN=$(aws codeartifact get-authorization-token \\\n+            --domain tests \\\n+            --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} \\\n+            --region us-east-1 \\\n+            --query authorizationToken \\\n+            --output text)\n+          echo \"UV_TEST_AWS_TOKEN=$UV_TEST_AWS_TOKEN\" >> $GITHUB_ENV",
        "comment_created_at": "2025-06-13T15:24:19+00:00",
        "comment_author": "konstin",
        "comment_body": "Can you mask the token with `::add-mask::`, and also the GCP token?",
        "pr_file_module": null
      }
    ]
  }
]