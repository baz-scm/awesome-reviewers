[
  {
    "discussion_id": "2142790585",
    "pr_number": 13542,
    "pr_file": "docs/guides/projects.md",
    "created_at": "2025-06-12T13:44:53+00:00",
    "commented_code": "Hello from hello-world!\n ```\n \n+## Working on an existing project\n+\n+If you start working on a project that is already managed by uv, simply run `uv sync`. A virtual",
    "repo_full_name": "astral-sh/uv",
    "discussion_comments": [
      {
        "comment_id": "2142790585",
        "repo_full_name": "astral-sh/uv",
        "pr_number": 13542,
        "pr_file": "docs/guides/projects.md",
        "discussion_id": "2142790585",
        "commented_code": "@@ -43,6 +43,15 @@ $ uv run main.py\n Hello from hello-world!\n ```\n \n+## Working on an existing project\n+\n+If you start working on a project that is already managed by uv, simply run `uv sync`. A virtual",
        "comment_created_at": "2025-06-12T13:44:53+00:00",
        "comment_author": "zanieb",
        "comment_body": "We don't say \"simply\": https://github.com/astral-sh/uv/blob/main/STYLE.md#documentation",
        "pr_file_module": null
      },
      {
        "comment_id": "2142795407",
        "repo_full_name": "astral-sh/uv",
        "pr_number": 13542,
        "pr_file": "docs/guides/projects.md",
        "discussion_id": "2142790585",
        "commented_code": "@@ -43,6 +43,15 @@ $ uv run main.py\n Hello from hello-world!\n ```\n \n+## Working on an existing project\n+\n+If you start working on a project that is already managed by uv, simply run `uv sync`. A virtual",
        "comment_created_at": "2025-06-12T13:46:18+00:00",
        "comment_author": "zanieb",
        "comment_body": "Separately, do we want to recommend `uv sync`? The idea is you can just `uv run pytest` and start working. Maybe we want to recommend `uv sync` as a way to get things ready for an IDE?",
        "pr_file_module": null
      },
      {
        "comment_id": "2150696688",
        "repo_full_name": "astral-sh/uv",
        "pr_number": 13542,
        "pr_file": "docs/guides/projects.md",
        "discussion_id": "2142790585",
        "commented_code": "@@ -43,6 +43,15 @@ $ uv run main.py\n Hello from hello-world!\n ```\n \n+## Working on an existing project\n+\n+If you start working on a project that is already managed by uv, simply run `uv sync`. A virtual",
        "comment_created_at": "2025-06-16T19:20:32+00:00",
        "comment_author": "turbotimon",
        "comment_body": "Yes, that was my idea to set up the venv for the IDE. A hint about automatic locking&syncing is just below.",
        "pr_file_module": null
      },
      {
        "comment_id": "2150714203",
        "repo_full_name": "astral-sh/uv",
        "pr_number": 13542,
        "pr_file": "docs/guides/projects.md",
        "discussion_id": "2142790585",
        "commented_code": "@@ -43,6 +43,15 @@ $ uv run main.py\n Hello from hello-world!\n ```\n \n+## Working on an existing project\n+\n+If you start working on a project that is already managed by uv, simply run `uv sync`. A virtual",
        "comment_created_at": "2025-06-16T19:31:16+00:00",
        "comment_author": "turbotimon",
        "comment_body": "\"We don't say simply\": Thanks! I completly missed the STYLE.md (a link in the CONTRIBUTING.md would have helped in my case)",
        "pr_file_module": null
      },
      {
        "comment_id": "2151151290",
        "repo_full_name": "astral-sh/uv",
        "pr_number": 13542,
        "pr_file": "docs/guides/projects.md",
        "discussion_id": "2142790585",
        "commented_code": "@@ -43,6 +43,15 @@ $ uv run main.py\n Hello from hello-world!\n ```\n \n+## Working on an existing project\n+\n+If you start working on a project that is already managed by uv, simply run `uv sync`. A virtual",
        "comment_created_at": "2025-06-17T01:33:51+00:00",
        "comment_author": "zanieb",
        "comment_body": "That makes sense. I think we might just want to reframe it a bit, I'll take a swing at the phrasing.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2051139922",
    "pr_number": 12805,
    "pr_file": "docs/configuration/indexes.md",
    "created_at": "2025-04-18T21:23:27+00:00",
    "commented_code": "HTTP 401 or 403), then uv will treat packages as unavailable and query the next configured index as\n described in the [index strategy](#searching-across-multiple-indexes) section.\n \n+### Ignoring error codes when searching across indexes\n+\n+When using the `first-index` strategy, uv will stop searching if it encounters a `401 Unauthorized`\n+or `403 Forbidden` response status code. The one exception is that uv will ignore 403s when",
    "repo_full_name": "astral-sh/uv",
    "discussion_comments": [
      {
        "comment_id": "2051139922",
        "repo_full_name": "astral-sh/uv",
        "pr_number": 12805,
        "pr_file": "docs/configuration/indexes.md",
        "discussion_id": "2051139922",
        "commented_code": "@@ -211,6 +211,25 @@ credentials cannot be found. If the discovered credentials are not valid (i.e.,\n HTTP 401 or 403), then uv will treat packages as unavailable and query the next configured index as\n described in the [index strategy](#searching-across-multiple-indexes) section.\n \n+### Ignoring error codes when searching across indexes\n+\n+When using the `first-index` strategy, uv will stop searching if it encounters a `401 Unauthorized`\n+or `403 Forbidden` response status code. The one exception is that uv will ignore 403s when",
        "comment_created_at": "2025-04-18T21:23:27+00:00",
        "comment_author": "zanieb",
        "comment_body": "Elsewhere, we stylize error codes as \"HTTP XXX\" instead of \"`XXX NAME`\". I do think the name is nice, I might do \"HTTP 403 Forbidden\" though? I'd probably omit the backticks, since you refer to the error codes in the subsequent text without them.\r\n\r\nYou can probably just say \"status code\" instead of \"response status code\".\r\n\r\nGenerally, I'd avoid using \"it\" to refer to uv if it's easy. So... \"uv will stop searching if a ... is encountered\" rather than \"uv will stop searching if it encounters ...\".\r\n\r\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2051140707",
    "pr_number": 12805,
    "pr_file": "docs/configuration/indexes.md",
    "created_at": "2025-04-18T21:24:35+00:00",
    "commented_code": "HTTP 401 or 403), then uv will treat packages as unavailable and query the next configured index as\n described in the [index strategy](#searching-across-multiple-indexes) section.\n \n+### Ignoring error codes when searching across indexes\n+\n+When using the `first-index` strategy, uv will stop searching if it encounters a `401 Unauthorized`\n+or `403 Forbidden` response status code. The one exception is that uv will ignore 403s when\n+searching the `pytorch` index (since this index returns a 403 when a package is not present).\n+\n+Users can configure which error codes are ignored for an index, using the `ignored-error-codes`",
    "repo_full_name": "astral-sh/uv",
    "discussion_comments": [
      {
        "comment_id": "2051140707",
        "repo_full_name": "astral-sh/uv",
        "pr_number": 12805,
        "pr_file": "docs/configuration/indexes.md",
        "discussion_id": "2051140707",
        "commented_code": "@@ -211,6 +211,25 @@ credentials cannot be found. If the discovered credentials are not valid (i.e.,\n HTTP 401 or 403), then uv will treat packages as unavailable and query the next configured index as\n described in the [index strategy](#searching-across-multiple-indexes) section.\n \n+### Ignoring error codes when searching across indexes\n+\n+When using the `first-index` strategy, uv will stop searching if it encounters a `401 Unauthorized`\n+or `403 Forbidden` response status code. The one exception is that uv will ignore 403s when\n+searching the `pytorch` index (since this index returns a 403 when a package is not present).\n+\n+Users can configure which error codes are ignored for an index, using the `ignored-error-codes`",
        "comment_created_at": "2025-04-18T21:24:35+00:00",
        "comment_author": "zanieb",
        "comment_body": "We avoid referring to \"Users\" like this in the documentation. Instead, I'd say \"You can configure which error codes...\" or, more typically, \"To ignore additional error codes for an index, use the `...` setting.\"",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2111780187",
    "pr_number": 13578,
    "pr_file": "docs/guides/package.md",
    "created_at": "2025-05-28T12:52:27+00:00",
    "commented_code": "running `uv build --no-sources` to ensure that the package builds correctly when `tool.uv.sources`\n     is disabled, as is the case when using other build tools, like [`pypa/build`](https://github.com/pypa/build).\n \n+## Updating your version\n+\n+The `uv version` command provides conveniences for updating the version of your package before you\n+publish it.\n+[See the project docs for reading your package's version](./projects.md#managing-version).\n+\n+To set the the exact version of your package, just pass that version:\n+\n+```console\n+$ uv version 1.0.0\n+hello-world 0.7.0 => 1.0.0\n+```\n+\n+If you want to preview the change without actually applying it, use the `--dry-run` flag:\n+\n+```console\n+$ uv version 2.0.0 --dry-run\n+hello-world 1.0.0 => 2.0.0\n+$ uv version\n+hello-world 1.0.0\n+```\n+\n+If you want to change the version of a particular package, use the `--package` flag:\n+\n+```console\n+$ uv version --package hello-world 1.2.3\n+hello-world 1.0.0 => 1.2.3\n+```\n+\n+To increase the version of your package, use the `--bump` flag:\n+\n+```console\n+$ uv version --bump minor\n+hello-world 1.2.3 => 1.3.0\n+```\n+\n+The `--bump` flag can be passed multiple times, and uv will run them in the following order that\n+prevents bumps from clobbering eachother:\n+\n+```text\n+    major > minor > patch > stable > alpha > beta > rc > post > dev",
    "repo_full_name": "astral-sh/uv",
    "discussion_comments": [
      {
        "comment_id": "2111780187",
        "repo_full_name": "astral-sh/uv",
        "pr_number": 13578,
        "pr_file": "docs/guides/package.md",
        "discussion_id": "2111780187",
        "commented_code": "@@ -55,6 +55,83 @@ Alternatively, `uv build <SRC>` will build the package in the specified director\n     running `uv build --no-sources` to ensure that the package builds correctly when `tool.uv.sources`\n     is disabled, as is the case when using other build tools, like [`pypa/build`](https://github.com/pypa/build).\n \n+## Updating your version\n+\n+The `uv version` command provides conveniences for updating the version of your package before you\n+publish it.\n+[See the project docs for reading your package's version](./projects.md#managing-version).\n+\n+To set the the exact version of your package, just pass that version:\n+\n+```console\n+$ uv version 1.0.0\n+hello-world 0.7.0 => 1.0.0\n+```\n+\n+If you want to preview the change without actually applying it, use the `--dry-run` flag:\n+\n+```console\n+$ uv version 2.0.0 --dry-run\n+hello-world 1.0.0 => 2.0.0\n+$ uv version\n+hello-world 1.0.0\n+```\n+\n+If you want to change the version of a particular package, use the `--package` flag:\n+\n+```console\n+$ uv version --package hello-world 1.2.3\n+hello-world 1.0.0 => 1.2.3\n+```\n+\n+To increase the version of your package, use the `--bump` flag:\n+\n+```console\n+$ uv version --bump minor\n+hello-world 1.2.3 => 1.3.0\n+```\n+\n+The `--bump` flag can be passed multiple times, and uv will run them in the following order that\n+prevents bumps from clobbering eachother:\n+\n+```text\n+    major > minor > patch > stable > alpha > beta > rc > post > dev",
        "comment_created_at": "2025-05-28T12:52:27+00:00",
        "comment_author": "konstin",
        "comment_body": "This sounds too complex for the guide documentation, I'd guide users towards using either a single `--bump` or a stable and an unstable bump and leave the rest to the concept/reference documentation.",
        "pr_file_module": null
      }
    ]
  }
]