[
  {
    "discussion_id": "1915521921",
    "pr_number": 23458,
    "pr_file": "examples/1brc/README.md",
    "created_at": "2025-01-14T19:55:57+00:00",
    "commented_code": "+# 1 Billion Row Challenge (1BRC)\n+\n+A solution to the [1 Billion Row Challenge](https://www.morling.dev/blog/one-billion-row-challenge/), \n+written in [the V programming language](https://vlang.io/).\n+\n+Read more about the challenge here: https://www.morling.dev/blog/one-billion-row-challenge/\n+\n+\n+## Running instructions\n+\n+Suggested compiler options for performance: \n+`v -cc gcc -cflags \"-std=c17 -O2 -m64 -march=native -mtune=native -flto\"`",
    "repo_full_name": "vlang/v",
    "discussion_comments": [
      {
        "comment_id": "1915521921",
        "repo_full_name": "vlang/v",
        "pr_number": 23458,
        "pr_file": "examples/1brc/README.md",
        "discussion_id": "1915521921",
        "commented_code": "@@ -0,0 +1,52 @@\n+# 1 Billion Row Challenge (1BRC)\n+\n+A solution to the [1 Billion Row Challenge](https://www.morling.dev/blog/one-billion-row-challenge/), \n+written in [the V programming language](https://vlang.io/).\n+\n+Read more about the challenge here: https://www.morling.dev/blog/one-billion-row-challenge/\n+\n+\n+## Running instructions\n+\n+Suggested compiler options for performance: \n+`v -cc gcc -cflags \"-std=c17 -O2 -m64 -march=native -mtune=native -flto\"`",
        "comment_created_at": "2025-01-14T19:55:57+00:00",
        "comment_author": "spytheman",
        "comment_body": "`-prod` should turn on `-O3 -flto`, so perhaps just this:\r\n```suggestion\r\n`v -cc gcc -prod -cflags \"-std=c17 -march=native -mtune=native\" .`\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1915523271",
        "repo_full_name": "vlang/v",
        "pr_number": 23458,
        "pr_file": "examples/1brc/README.md",
        "discussion_id": "1915521921",
        "commented_code": "@@ -0,0 +1,52 @@\n+# 1 Billion Row Challenge (1BRC)\n+\n+A solution to the [1 Billion Row Challenge](https://www.morling.dev/blog/one-billion-row-challenge/), \n+written in [the V programming language](https://vlang.io/).\n+\n+Read more about the challenge here: https://www.morling.dev/blog/one-billion-row-challenge/\n+\n+\n+## Running instructions\n+\n+Suggested compiler options for performance: \n+`v -cc gcc -cflags \"-std=c17 -O2 -m64 -march=native -mtune=native -flto\"`",
        "comment_created_at": "2025-01-14T19:57:10+00:00",
        "comment_author": "spytheman",
        "comment_body": "was there a problem without `-fno-inline-small-functions`?",
        "pr_file_module": null
      },
      {
        "comment_id": "1915534989",
        "repo_full_name": "vlang/v",
        "pr_number": 23458,
        "pr_file": "examples/1brc/README.md",
        "discussion_id": "1915521921",
        "commented_code": "@@ -0,0 +1,52 @@\n+# 1 Billion Row Challenge (1BRC)\n+\n+A solution to the [1 Billion Row Challenge](https://www.morling.dev/blog/one-billion-row-challenge/), \n+written in [the V programming language](https://vlang.io/).\n+\n+Read more about the challenge here: https://www.morling.dev/blog/one-billion-row-challenge/\n+\n+\n+## Running instructions\n+\n+Suggested compiler options for performance: \n+`v -cc gcc -cflags \"-std=c17 -O2 -m64 -march=native -mtune=native -flto\"`",
        "comment_created_at": "2025-01-14T20:08:28+00:00",
        "comment_author": "syrmel",
        "comment_body": "I have not encountered it since using mmap instead of the buffered reader.",
        "pr_file_module": null
      },
      {
        "comment_id": "1915561342",
        "repo_full_name": "vlang/v",
        "pr_number": 23458,
        "pr_file": "examples/1brc/README.md",
        "discussion_id": "1915521921",
        "commented_code": "@@ -0,0 +1,52 @@\n+# 1 Billion Row Challenge (1BRC)\n+\n+A solution to the [1 Billion Row Challenge](https://www.morling.dev/blog/one-billion-row-challenge/), \n+written in [the V programming language](https://vlang.io/).\n+\n+Read more about the challenge here: https://www.morling.dev/blog/one-billion-row-challenge/\n+\n+\n+## Running instructions\n+\n+Suggested compiler options for performance: \n+`v -cc gcc -cflags \"-std=c17 -O2 -m64 -march=native -mtune=native -flto\"`",
        "comment_created_at": "2025-01-14T20:30:45+00:00",
        "comment_author": "spytheman",
        "comment_body": "hm, that is good to know ... so the problem is triggered by something in it + gcc's -O3 \ud83e\udd14 ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1835554657",
    "pr_number": 22783,
    "pr_file": "vlib/x/encoding/asn1/bench/README.md",
    "created_at": "2024-11-10T00:47:06+00:00",
    "commented_code": "+Benchmark of `asn1` module\n+--------------------------\n+\n+This is benchmark of `asn1` module compared with go version (on free gitpod workspace)\n+\n+Regular benchmark produces this result:\n+```bash\n+(dev) $ v run bench/bench.v\n+Benchmarking ASN.1 encode...\n+Average example encode time: 13 \u00b5s\n+Benchmarking ASN.1 decode (with asn.decode)...\n+Average (asn1.decode) decode time: 3 \u00b5s\n+Benchmarking ASN.1 decode with Example.decode)...\n+Average (Example.decode) decode time: 2 \u00b5s\n+```\n+\n+Built with `-prod` flag and rerun the bench",
    "repo_full_name": "vlang/v",
    "discussion_comments": [
      {
        "comment_id": "1835554657",
        "repo_full_name": "vlang/v",
        "pr_number": 22783,
        "pr_file": "vlib/x/encoding/asn1/bench/README.md",
        "discussion_id": "1835554657",
        "commented_code": "@@ -0,0 +1,36 @@\n+Benchmark of `asn1` module\n+--------------------------\n+\n+This is benchmark of `asn1` module compared with go version (on free gitpod workspace)\n+\n+Regular benchmark produces this result:\n+```bash\n+(dev) $ v run bench/bench.v\n+Benchmarking ASN.1 encode...\n+Average example encode time: 13 \u00b5s\n+Benchmarking ASN.1 decode (with asn.decode)...\n+Average (asn1.decode) decode time: 3 \u00b5s\n+Benchmarking ASN.1 decode with Example.decode)...\n+Average (Example.decode) decode time: 2 \u00b5s\n+```\n+\n+Built with `-prod` flag and rerun the bench",
        "comment_created_at": "2024-11-10T00:47:06+00:00",
        "comment_author": "JalonSolov",
        "comment_body": "```suggestion\r\nBuild with `-prod` flag and rerun the bench\r\n```",
        "pr_file_module": null
      }
    ]
  }
]