[
  {
    "discussion_id": "2071375135",
    "pr_number": 19981,
    "pr_file": "packages/vite/src/node/server/index.ts",
    "created_at": "2025-05-02T09:48:54+00:00",
    "commented_code": "> {\n   fs: Required<FileSystemServeOptions>\n   middlewareMode: NonNullable<ServerOptions['middlewareMode']>\n+  hostname: Hostname",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "2071375135",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19981,
        "pr_file": "packages/vite/src/node/server/index.ts",
        "discussion_id": "2071375135",
        "commented_code": "@@ -204,6 +205,7 @@ export interface ResolvedServerOptions\n   > {\n   fs: Required<FileSystemServeOptions>\n   middlewareMode: NonNullable<ServerOptions['middlewareMode']>\n+  hostname: Hostname",
        "comment_created_at": "2025-05-02T09:48:54+00:00",
        "comment_author": "sapphi-red",
        "comment_body": "```suggestion\r\n  /** @internal */\r\n  hostname: Hostname\r\n```\r\nI'd like to mark this as a internal type.",
        "pr_file_module": null
      },
      {
        "comment_id": "2071645156",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19981,
        "pr_file": "packages/vite/src/node/server/index.ts",
        "discussion_id": "2071375135",
        "commented_code": "@@ -204,6 +205,7 @@ export interface ResolvedServerOptions\n   > {\n   fs: Required<FileSystemServeOptions>\n   middlewareMode: NonNullable<ServerOptions['middlewareMode']>\n+  hostname: Hostname",
        "comment_created_at": "2025-05-02T13:51:34+00:00",
        "comment_author": "sirdiego",
        "comment_body": "Makes sense, thanks for the feedback.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2086466506",
    "pr_number": 20031,
    "pr_file": "packages/vite/src/node/config.ts",
    "created_at": "2025-05-13T10:19:01+00:00",
    "commented_code": "ssr: ResolvedSSROptions\n       assetsInclude: (file: string) => boolean\n       logger: Logger\n+      /**\n+       * createResolver is deprecated. It only works for the client and ssr\n+       * environments. The `aliasOnly` option is also not being used any more\n+       * Plugins should move to createIdResolver(environment.config) instead.\n+       * create an internal resolver to be used in special scenarios, e.g.\n+       * optimizer & handling css @imports\n+       *\n+       * @deprecated Use `createIdResolver` instead.\n+       */",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "2086466506",
        "repo_full_name": "vitejs/vite",
        "pr_number": 20031,
        "pr_file": "packages/vite/src/node/config.ts",
        "discussion_id": "2086466506",
        "commented_code": "@@ -606,6 +606,15 @@ export interface ResolvedConfig\n       ssr: ResolvedSSROptions\n       assetsInclude: (file: string) => boolean\n       logger: Logger\n+      /**\n+       * createResolver is deprecated. It only works for the client and ssr\n+       * environments. The `aliasOnly` option is also not being used any more\n+       * Plugins should move to createIdResolver(environment.config) instead.\n+       * create an internal resolver to be used in special scenarios, e.g.\n+       * optimizer & handling css @imports\n+       *\n+       * @deprecated Use `createIdResolver` instead.\n+       */",
        "comment_created_at": "2025-05-13T10:19:01+00:00",
        "comment_author": "bluwy",
        "comment_body": "```suggestion\r\n      /**\r\n       * Create an internal resolver to be used in special scenarios, e.g.\r\n       * optimizer & handling css `@imports`.\r\n       *\r\n       * This API is deprecated. It only works for the client and ssr\r\n       * environments. The `aliasOnly` option is also not being used anymore.\r\n       * Plugins should move to `createIdResolver(environment.config)` instead.\r\n       *\r\n       * @deprecated Use `createIdResolver` from `vite` instead.\r\n       */\r\n```\r\n\r\nUpdated the docs a bit so it describes what the function does first, and added some missing grammar. Though the main change is updating the `@deprecated` comment to mention importing from `vite` so it's not mistaken to be at `resolvedConfig.createIdResolver` or something.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1886916183",
    "pr_number": 18970,
    "pr_file": "packages/vite/src/node/plugins/css.ts",
    "created_at": "2024-12-16T14:29:37+00:00",
    "commented_code": "? fileURLToPath(context.containingUrl)\n               : options.filename\n             const resolved = await internalCanonicalize(url, importer)\n-            return resolved ? pathToFileURL(resolved) : null\n+            if (\n+              resolved &&\n+              (resolved.endsWith('.css') ||\n+                resolved.endsWith('.scss') ||\n+                resolved.endsWith('.sass'))",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "1886916183",
        "repo_full_name": "vitejs/vite",
        "pr_number": 18970,
        "pr_file": "packages/vite/src/node/plugins/css.ts",
        "discussion_id": "1886916183",
        "commented_code": "@@ -2374,7 +2374,15 @@ const makeModernScssWorker = (\n               ? fileURLToPath(context.containingUrl)\n               : options.filename\n             const resolved = await internalCanonicalize(url, importer)\n-            return resolved ? pathToFileURL(resolved) : null\n+            if (\n+              resolved &&\n+              (resolved.endsWith('.css') ||\n+                resolved.endsWith('.scss') ||\n+                resolved.endsWith('.sass'))",
        "comment_created_at": "2024-12-16T14:29:37+00:00",
        "comment_author": "sapphi-red",
        "comment_body": "```suggestion\r\n              // only limit to these extensions because:\r\n              // - for the `@import`/`@use`s written in file loaded by `load` function,\r\n              //   the `canonicalize` function of that `importer` is called first\r\n              // - the `load` function of an importer is only called for the importer\r\n              //   that returned a non-null result from its `canonicalize` function\r\n              (resolved.endsWith('.css') ||\r\n                resolved.endsWith('.scss') ||\r\n                resolved.endsWith('.sass'))\r\n```\r\nLet's add a comment that explains why we need to limit the extension here.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "821090087",
    "pr_number": 7215,
    "pr_file": "packages/vite/src/node/importGlob.ts",
    "created_at": "2022-03-07T20:48:19+00:00",
    "commented_code": "isAbsolute: boolean\n }\n \n-export interface AssertOptions {\n+interface GlobOptions {\n+  as?: string\n   assert?: {\n     type: string",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "821090087",
        "repo_full_name": "vitejs/vite",
        "pr_number": 7215,
        "pr_file": "packages/vite/src/node/importGlob.ts",
        "discussion_id": "821090087",
        "commented_code": "@@ -24,7 +26,8 @@ interface GlobParams {\n   isAbsolute: boolean\n }\n \n-export interface AssertOptions {\n+interface GlobOptions {\n+  as?: string\n   assert?: {\n     type: string",
        "comment_created_at": "2022-03-07T20:48:19+00:00",
        "comment_author": "Shinigami92",
        "comment_body": "I think we should add a JSDoc comment with `@deprecated`",
        "pr_file_module": null
      },
      {
        "comment_id": "821095234",
        "repo_full_name": "vitejs/vite",
        "pr_number": 7215,
        "pr_file": "packages/vite/src/node/importGlob.ts",
        "discussion_id": "821090087",
        "commented_code": "@@ -24,7 +26,8 @@ interface GlobParams {\n   isAbsolute: boolean\n }\n \n-export interface AssertOptions {\n+interface GlobOptions {\n+  as?: string\n   assert?: {\n     type: string",
        "comment_created_at": "2022-03-07T20:55:38+00:00",
        "comment_author": "brillout",
        "comment_body": "Good catch. Done.",
        "pr_file_module": null
      }
    ]
  }
]