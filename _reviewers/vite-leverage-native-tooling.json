[
  {
    "discussion_id": "2050096043",
    "pr_number": 19890,
    "pr_file": "docs/guide/rolldown.md",
    "created_at": "2025-04-18T05:59:28+00:00",
    "commented_code": "If you don't pass the option in yourself, this must be fixed by the utilized framework. You can suppress this error in the meantime by setting the `ROLLDOWN_OPTIONS_VALIDATION=loose` environment variable.\n \n-## Enabling Native Plugins\n+## Tweaking Performance\n+\n+Even though `rolldown-vite` is focused on ensuring compatibility with the existing ecosystem, you will net performance gains by switching over already through faster transforms due to the Rust-based implementation. Beyond that, you can also tweak the performance of `rolldown-vite` further through different options or customizations.\n+\n+### Enabling Native Plugins",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "2050096043",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19890,
        "pr_file": "docs/guide/rolldown.md",
        "discussion_id": "2050096043",
        "commented_code": "@@ -86,12 +86,39 @@ Rolldown throws an error when unknown or invalid options are passed. Because som\n \n If you don't pass the option in yourself, this must be fixed by the utilized framework. You can suppress this error in the meantime by setting the `ROLLDOWN_OPTIONS_VALIDATION=loose` environment variable.\n \n-## Enabling Native Plugins\n+## Tweaking Performance\n+\n+Even though `rolldown-vite` is focused on ensuring compatibility with the existing ecosystem, you will net performance gains by switching over already through faster transforms due to the Rust-based implementation. Beyond that, you can also tweak the performance of `rolldown-vite` further through different options or customizations.\n+\n+### Enabling Native Plugins",
        "comment_created_at": "2025-04-18T05:59:28+00:00",
        "comment_author": "patak-dev",
        "comment_body": "I think this paragraph can be simplified. Something like this would be easier for me to read:\r\n\r\n```suggestion\r\n## Performance\r\n\r\n`rolldown-vite` is focused on ensuring compatibility with the existing ecosystem, so defaults are geared towards a smooth transition. You can get further performance gains by switching over to faster Rust-based transforms and other customizations.\r\n\r\n### Enabling Native Plugins\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2050299268",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19890,
        "pr_file": "docs/guide/rolldown.md",
        "discussion_id": "2050096043",
        "commented_code": "@@ -86,12 +86,39 @@ Rolldown throws an error when unknown or invalid options are passed. Because som\n \n If you don't pass the option in yourself, this must be fixed by the utilized framework. You can suppress this error in the meantime by setting the `ROLLDOWN_OPTIONS_VALIDATION=loose` environment variable.\n \n-## Enabling Native Plugins\n+## Tweaking Performance\n+\n+Even though `rolldown-vite` is focused on ensuring compatibility with the existing ecosystem, you will net performance gains by switching over already through faster transforms due to the Rust-based implementation. Beyond that, you can also tweak the performance of `rolldown-vite` further through different options or customizations.\n+\n+### Enabling Native Plugins",
        "comment_created_at": "2025-04-18T07:55:40+00:00",
        "comment_author": "TheAlexLichter",
        "comment_body": "Thanks!",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2050300229",
    "pr_number": 19890,
    "pr_file": "docs/guide/rolldown.md",
    "created_at": "2025-04-18T07:56:40+00:00",
    "commented_code": "If you don't pass the option in yourself, this must be fixed by the utilized framework. You can suppress this error in the meantime by setting the `ROLLDOWN_OPTIONS_VALIDATION=loose` environment variable.\n \n-## Enabling Native Plugins\n+## Performance\n+\n+`rolldown-vite` is focused on ensuring compatibility with the existing ecosystem, so defaults are geared towards a smooth transition. You can get further performance gains by switching over to faster Rust-based transforms and other customizations.",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "2050300229",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19890,
        "pr_file": "docs/guide/rolldown.md",
        "discussion_id": "2050300229",
        "commented_code": "@@ -86,12 +86,39 @@ Rolldown throws an error when unknown or invalid options are passed. Because som\n \n If you don't pass the option in yourself, this must be fixed by the utilized framework. You can suppress this error in the meantime by setting the `ROLLDOWN_OPTIONS_VALIDATION=loose` environment variable.\n \n-## Enabling Native Plugins\n+## Performance\n+\n+`rolldown-vite` is focused on ensuring compatibility with the existing ecosystem, so defaults are geared towards a smooth transition. You can get further performance gains by switching over to faster Rust-based transforms and other customizations.",
        "comment_created_at": "2025-04-18T07:56:40+00:00",
        "comment_author": "TheAlexLichter",
        "comment_body": "```suggestion\r\n`rolldown-vite` is focused on ensuring compatibility with the existing ecosystem, so defaults are geared towards a smooth transition. You can get further performance gains by switching over to faster Rust-based internal plugins and other customizations.\r\n```\r\n\r\nMaking sure this is not only about transforms but all kind of plugins (aliasing, resolving etc.)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2020988668",
    "pr_number": 19759,
    "pr_file": "docs/guide/rolldown.md",
    "created_at": "2025-03-31T12:52:10+00:00",
    "commented_code": "The `rolldown-vite` package is a temporary solution to gather feedback and stabilize the Rolldown integration. In the future, this functionality will be merged back into the main Vite repository.\n \n We encourage you to try out `rolldown-vite` and contribute to its development through feedback and issue reports.\n+\n+## Plugin / Framework authors guide\n+\n+### The list of big changes\n+\n+- Rolldown is used for build (Rollup was used before)\n+- Rolldown is used for the optimizer (esbuild was used before)\n+- CommonJS support is handled by Rolldown (@rollup/plugin-commonjs was used before)\n+- Oxc is used for syntax lowering (esbuild was used before)\n+- lightningcss is used for CSS minification by default (esbuild was used before)\n+- Oxc minifier is used for JS minification by default (esbuild was used before)\n+- Rolldown is used for bundling the config (esbuild was used before)\n+\n+### Detecting rolldown-vite\n+\n+You can detect by either\n+\n+- checking the `this.meta.rolldownVersion` existence\n+\n+```js\n+const plugin = {\n+  resolveId() {\n+    if (this.meta.rolldownVersion) {\n+      // logic for rolldown-vite\n+    } else {\n+      // logic for rollup-vite\n+    }\n+  },\n+}\n+```\n+\n+- checking the `rolldownVersion` export existence\n+\n+```js\n+import * as vite from 'vite'\n+\n+if (vite.rolldownVersion) {\n+  // logic for rolldown-vite\n+} else {\n+  // logic for rollup-vite\n+}\n+```\n+\n+### Ignoring option validation in Rolldown\n+\n+Rolldown throws an error when unknown options or invalid options are passed. Because some options in Rollup are not supported by Rolldown, you may encounter errors.\n+\n+> Error: Failed validate input options.\n+>\n+> - For the \"preserveEntrySignatures\". Invalid key: Expected never but received \"preserveEntrySignatures\".\n+\n+To fix this error, you can either\n+\n+- conditionally pass the option by checking whether it's running with rolldown-vite\n+- set `ROLLDOWN_OPTIONS_VALIDATION=loose` to suppress the error\n+\n+### `transformWithEsbuild` requires `esbuild` to be installed separately\n+\n+A similar function `transformWithOxc`, which uses Oxc instead of esbuild, is exported from rolldown-vite.\n+\n+### Compat layer for esbuild options\n+\n+Rolldown-Vite has some compat layer to convert options for esbuild to Oxc / rolldown. As tested in the ecosystem-ci, this works in many cases, including simple esbuild plugins.\n+That said, we'll be removing the esbuild options support in the future and encourage you to try the corresponding Oxc / rolldown options.\n+You can get the options set by the compat layer from the `configResolved` hook.\n+\n+### Hook filter feature\n+\n+Rolldown has [hook filter feature](https://rolldown.rs/guide/plugin-development#plugin-hook-filters). You can use this feature to make your plugin more performant.",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "2020988668",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19759,
        "pr_file": "docs/guide/rolldown.md",
        "discussion_id": "2020988668",
        "commented_code": "@@ -91,3 +91,92 @@ For real-time discussions and troubleshooting, make sure to join the [Rolldown D\n The `rolldown-vite` package is a temporary solution to gather feedback and stabilize the Rolldown integration. In the future, this functionality will be merged back into the main Vite repository.\n \n We encourage you to try out `rolldown-vite` and contribute to its development through feedback and issue reports.\n+\n+## Plugin / Framework authors guide\n+\n+### The list of big changes\n+\n+- Rolldown is used for build (Rollup was used before)\n+- Rolldown is used for the optimizer (esbuild was used before)\n+- CommonJS support is handled by Rolldown (@rollup/plugin-commonjs was used before)\n+- Oxc is used for syntax lowering (esbuild was used before)\n+- lightningcss is used for CSS minification by default (esbuild was used before)\n+- Oxc minifier is used for JS minification by default (esbuild was used before)\n+- Rolldown is used for bundling the config (esbuild was used before)\n+\n+### Detecting rolldown-vite\n+\n+You can detect by either\n+\n+- checking the `this.meta.rolldownVersion` existence\n+\n+```js\n+const plugin = {\n+  resolveId() {\n+    if (this.meta.rolldownVersion) {\n+      // logic for rolldown-vite\n+    } else {\n+      // logic for rollup-vite\n+    }\n+  },\n+}\n+```\n+\n+- checking the `rolldownVersion` export existence\n+\n+```js\n+import * as vite from 'vite'\n+\n+if (vite.rolldownVersion) {\n+  // logic for rolldown-vite\n+} else {\n+  // logic for rollup-vite\n+}\n+```\n+\n+### Ignoring option validation in Rolldown\n+\n+Rolldown throws an error when unknown options or invalid options are passed. Because some options in Rollup are not supported by Rolldown, you may encounter errors.\n+\n+> Error: Failed validate input options.\n+>\n+> - For the \"preserveEntrySignatures\". Invalid key: Expected never but received \"preserveEntrySignatures\".\n+\n+To fix this error, you can either\n+\n+- conditionally pass the option by checking whether it's running with rolldown-vite\n+- set `ROLLDOWN_OPTIONS_VALIDATION=loose` to suppress the error\n+\n+### `transformWithEsbuild` requires `esbuild` to be installed separately\n+\n+A similar function `transformWithOxc`, which uses Oxc instead of esbuild, is exported from rolldown-vite.\n+\n+### Compat layer for esbuild options\n+\n+Rolldown-Vite has some compat layer to convert options for esbuild to Oxc / rolldown. As tested in the ecosystem-ci, this works in many cases, including simple esbuild plugins.\n+That said, we'll be removing the esbuild options support in the future and encourage you to try the corresponding Oxc / rolldown options.\n+You can get the options set by the compat layer from the `configResolved` hook.\n+\n+### Hook filter feature\n+\n+Rolldown has [hook filter feature](https://rolldown.rs/guide/plugin-development#plugin-hook-filters). You can use this feature to make your plugin more performant.",
        "comment_created_at": "2025-03-31T12:52:10+00:00",
        "comment_author": "TheAlexLichter",
        "comment_body": "```suggestion\r\nRolldown introduced a [hook filter feature](https://rolldown.rs/guide/plugin-development#plugin-hook-filters) to reduce the communication overhead the between Rust and JavaScript runtimes. By using this feature you can make your plugin more performant.\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2005893462",
    "pr_number": 19680,
    "pr_file": "docs/guide/performance.md",
    "created_at": "2025-03-20T15:23:52+00:00",
    "commented_code": "Using native tooling often brings larger installation size and as so is not the default when starting a new Vite project. But it may be worth the cost for larger applications.\n \n+- Use [Rolldown as the bundler](./rolldown) for faster builds.",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "2005893462",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19680,
        "pr_file": "docs/guide/performance.md",
        "discussion_id": "2005893462",
        "commented_code": "@@ -122,5 +122,6 @@ Examples of using native tooling:\n \n Using native tooling often brings larger installation size and as so is not the default when starting a new Vite project. But it may be worth the cost for larger applications.\n \n+- Use [Rolldown as the bundler](./rolldown) for faster builds.",
        "comment_created_at": "2025-03-20T15:23:52+00:00",
        "comment_author": "patak-dev",
        "comment_body": "should dev also be mentioned here to avoid users assuming it is build only?\r\nmaybe:\r\n\r\n```suggestion\r\n- Use [Rolldown instead of Rollup and esbuild](./rolldown) to speed up Vite and opt into a more aligned dev and build story.\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2005924762",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19680,
        "pr_file": "docs/guide/performance.md",
        "discussion_id": "2005893462",
        "commented_code": "@@ -122,5 +122,6 @@ Examples of using native tooling:\n \n Using native tooling often brings larger installation size and as so is not the default when starting a new Vite project. But it may be worth the cost for larger applications.\n \n+- Use [Rolldown as the bundler](./rolldown) for faster builds.",
        "comment_created_at": "2025-03-20T15:37:36+00:00",
        "comment_author": "TheAlexLichter",
        "comment_body": "Good point!\r\n\r\nI'd slightly reword it but either is fine I'd say. Your call \ud83d\ude0b\r\n\r\n```suggestion\r\n- Use [Rolldown instead of Rollup and esbuild](./rolldown) for faster builds and a more aligned experience between dev and build.\r\n```",
        "pr_file_module": null
      }
    ]
  }
]