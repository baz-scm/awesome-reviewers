[
  {
    "discussion_id": "2006568215",
    "pr_number": 19564,
    "pr_file": "packages/create-vite/template-ember-ts/babel.config.cjs",
    "created_at": "2025-03-20T22:47:42+00:00",
    "commented_code": "+const { buildMacros } = require('@embroider/macros/babel')\n+\n+const macros = buildMacros()\n+\n+module.exports = {",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "2006568215",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19564,
        "pr_file": "packages/create-vite/template-ember-ts/babel.config.cjs",
        "discussion_id": "2006568215",
        "commented_code": "@@ -0,0 +1,45 @@\n+const { buildMacros } = require('@embroider/macros/babel')\n+\n+const macros = buildMacros()\n+\n+module.exports = {",
        "comment_created_at": "2025-03-20T22:47:42+00:00",
        "comment_author": "ArnaudBarre",
        "comment_body": "For me the goal of framework plugin is to configure the compilation step for template files. That's quite a lot of configuration passed down to the user",
        "pr_file_module": null
      },
      {
        "comment_id": "2006796241",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19564,
        "pr_file": "packages/create-vite/template-ember-ts/babel.config.cjs",
        "discussion_id": "2006568215",
        "commented_code": "@@ -0,0 +1,45 @@\n+const { buildMacros } = require('@embroider/macros/babel')\n+\n+const macros = buildMacros()\n+\n+module.exports = {",
        "comment_created_at": "2025-03-21T03:44:30+00:00",
        "comment_author": "NullVoxPopuli",
        "comment_body": "I have an idea for how to implement this.\r\nInitially, we didn't bother, because every production app has _something_ custom in their babel config (historically).\r\n\r\nEven when everything _is_ shipped, we still use build macros from one of our babel plugins, because there is no standard way of expression the macros we need. (we want app-controlled code to decide certain code paths based on environment, present dependencies, user-provided config (for deprecation progress, and other things))\r\n\r\n_but for toy apps_, potentially _absolute minimal_ things, I think I can make the argument to build in the babel plugin (and this config) if no babel config file is present.\r\n\r\nI will look in to this, thank you!\r\n(hopefully I have an answer about this one way or another by next week)",
        "pr_file_module": null
      },
      {
        "comment_id": "2007288669",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19564,
        "pr_file": "packages/create-vite/template-ember-ts/babel.config.cjs",
        "discussion_id": "2006568215",
        "commented_code": "@@ -0,0 +1,45 @@\n+const { buildMacros } = require('@embroider/macros/babel')\n+\n+const macros = buildMacros()\n+\n+module.exports = {",
        "comment_created_at": "2025-03-21T10:26:55+00:00",
        "comment_author": "ArnaudBarre",
        "comment_body": "The plugin can still offer to add extra babel plugins like for the React one: https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md#babel",
        "pr_file_module": null
      },
      {
        "comment_id": "2007871316",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19564,
        "pr_file": "packages/create-vite/template-ember-ts/babel.config.cjs",
        "discussion_id": "2006568215",
        "commented_code": "@@ -0,0 +1,45 @@\n+const { buildMacros } = require('@embroider/macros/babel')\n+\n+const macros = buildMacros()\n+\n+module.exports = {",
        "comment_created_at": "2025-03-21T15:54:52+00:00",
        "comment_author": "NullVoxPopuli",
        "comment_body": "After some more thinking, (and in agreement with the team's previous decision), we're going to keep babel separated out right now.\r\n\r\nCompilation is ultimately not something that we want to abstract, as there are a lot of subtle behaviors (config resolving), and type providing behaviors (such as what react is doing -- that's a maintenance burden we don't want right now).\r\n\r\nAdditionally, by building in babel to our plugin, we force all consumers, forever, to install babel dependencies, and we want users to have the freedom to swap out their transpiler at some point.\r\n\r\nIt's a good separation of responsibilities, and even though this is a _minimal_ template, folks should probably know how to work with babel for now. \r\n\r\nI look forward to the day we can swap to SWC \ud83c\udf89 \r\n(and not force a breaking release in our users)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1948776278",
    "pr_number": 19394,
    "pr_file": ".github/renovate.json5",
    "created_at": "2025-02-10T10:14:31+00:00",
    "commented_code": "// breaking changes\n     \"kill-port\", // `kill-port:^2.0.0 has perf issues (#8392)\n   ],\n+  \"customManagers\": [\n+    {\n+      \"customType\": \"regex\",\n+      \"fileMatch\": [\"\\\\.[mc]?[tj]sx?$\"],",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "1948776278",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19394,
        "pr_file": ".github/renovate.json5",
        "discussion_id": "1948776278",
        "commented_code": "@@ -28,4 +28,13 @@\n     // breaking changes\n     \"kill-port\", // `kill-port:^2.0.0 has perf issues (#8392)\n   ],\n+  \"customManagers\": [\n+    {\n+      \"customType\": \"regex\",\n+      \"fileMatch\": [\"\\\\.[mc]?[tj]sx?$\"],",
        "comment_created_at": "2025-02-10T10:14:31+00:00",
        "comment_author": "btea",
        "comment_body": "There is only one special case at the moment, can we match the specified file directly?",
        "pr_file_module": null
      },
      {
        "comment_id": "1951951685",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19394,
        "pr_file": ".github/renovate.json5",
        "discussion_id": "1948776278",
        "commented_code": "@@ -28,4 +28,13 @@\n     // breaking changes\n     \"kill-port\", // `kill-port:^2.0.0 has perf issues (#8392)\n   ],\n+  \"customManagers\": [\n+    {\n+      \"customType\": \"regex\",\n+      \"fileMatch\": [\"\\\\.[mc]?[tj]sx?$\"],",
        "comment_created_at": "2025-02-12T04:15:38+00:00",
        "comment_author": "sapphi-red",
        "comment_body": "```suggestion\r\n      \"fileMatch\": [\"packages\\/create-vite\\/src\\/index\\\\.ts$\"],\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1951951904",
        "repo_full_name": "vitejs/vite",
        "pr_number": 19394,
        "pr_file": ".github/renovate.json5",
        "discussion_id": "1948776278",
        "commented_code": "@@ -28,4 +28,13 @@\n     // breaking changes\n     \"kill-port\", // `kill-port:^2.0.0 has perf issues (#8392)\n   ],\n+  \"customManagers\": [\n+    {\n+      \"customType\": \"regex\",\n+      \"fileMatch\": [\"\\\\.[mc]?[tj]sx?$\"],",
        "comment_created_at": "2025-02-12T04:16:00+00:00",
        "comment_author": "sapphi-red",
        "comment_body": "Updated \ud83d\udc4d ",
        "pr_file_module": null
      }
    ]
  }
]