[
  {
    "discussion_id": "645355495",
    "pr_number": 3671,
    "pr_file": "packages/vite/src/node/preview.ts",
    "created_at": "2021-06-04T07:33:52+00:00",
    "commented_code": "const protocol = options.https ? 'https' : 'http'\n   const logger = config.logger\n   const base = config.base\n+  const socket = options.socket\n \n-  httpServer.listen(port, hostname.host, () => {\n+  const listenOption = socket ? socket : { port, host: hostname }",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "645355495",
        "repo_full_name": "vitejs/vite",
        "pr_number": 3671,
        "pr_file": "packages/vite/src/node/preview.ts",
        "discussion_id": "645355495",
        "commented_code": "@@ -52,8 +52,11 @@ export async function preview(\n   const protocol = options.https ? 'https' : 'http'\n   const logger = config.logger\n   const base = config.base\n+  const socket = options.socket\n \n-  httpServer.listen(port, hostname.host, () => {\n+  const listenOption = socket ? socket : { port, host: hostname }",
        "comment_created_at": "2021-06-04T07:33:52+00:00",
        "comment_author": "Shinigami92",
        "comment_body": "This can be shortcutted to:\r\n\r\n```suggestion\r\n  const listenOption = socket ?? { port, host: hostname }\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "840738833",
    "pr_number": 7561,
    "pr_file": "packages/vite/src/node/server/moduleGraph.ts",
    "created_at": "2022-04-01T16:18:38+00:00",
    "commented_code": "importers = new Set<ModuleNode>()\n   importedModules = new Set<ModuleNode>()\n   acceptedHmrDeps = new Set<ModuleNode>()\n-  isSelfAccepting = false\n+  isSelfAccepting: boolean | null = null",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "840738833",
        "repo_full_name": "vitejs/vite",
        "pr_number": 7561,
        "pr_file": "packages/vite/src/node/server/moduleGraph.ts",
        "discussion_id": "840738833",
        "commented_code": "@@ -27,7 +27,7 @@ export class ModuleNode {\n   importers = new Set<ModuleNode>()\n   importedModules = new Set<ModuleNode>()\n   acceptedHmrDeps = new Set<ModuleNode>()\n-  isSelfAccepting = false\n+  isSelfAccepting: boolean | null = null",
        "comment_created_at": "2022-04-01T16:18:38+00:00",
        "comment_author": "patak-dev",
        "comment_body": "Conceptually, I would prefer this one to be:\r\n```suggestion\r\n  isSelfAccepting?: boolean\r\n```\r\nAs the value is undefined until we compute it. In the case of `transformResult`, I think is different because the value is reset to null.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "840738834",
    "pr_number": 7561,
    "pr_file": "packages/vite/src/node/server/moduleGraph.ts",
    "created_at": "2022-04-01T16:18:38+00:00",
    "commented_code": "importers = new Set<ModuleNode>()\n   importedModules = new Set<ModuleNode>()\n   acceptedHmrDeps = new Set<ModuleNode>()\n-  isSelfAccepting = false\n+  isSelfAccepting: boolean | null = null",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "840738834",
        "repo_full_name": "vitejs/vite",
        "pr_number": 7561,
        "pr_file": "packages/vite/src/node/server/moduleGraph.ts",
        "discussion_id": "840738834",
        "commented_code": "@@ -27,7 +27,7 @@ export class ModuleNode {\n   importers = new Set<ModuleNode>()\n   importedModules = new Set<ModuleNode>()\n   acceptedHmrDeps = new Set<ModuleNode>()\n-  isSelfAccepting = false\n+  isSelfAccepting: boolean | null = null",
        "comment_created_at": "2022-04-01T16:18:38+00:00",
        "comment_author": "patak-dev",
        "comment_body": "Conceptually, I would prefer this one to be:\r\n```suggestion\r\n  isSelfAccepting?: boolean\r\n```\r\nAs the value is undefined until we compute it. In the case of `transformResult`, I think is different because the value is reset to null.",
        "pr_file_module": null
      },
      {
        "comment_id": "840860086",
        "repo_full_name": "vitejs/vite",
        "pr_number": 7561,
        "pr_file": "packages/vite/src/node/server/moduleGraph.ts",
        "discussion_id": "840738834",
        "commented_code": "@@ -27,7 +27,7 @@ export class ModuleNode {\n   importers = new Set<ModuleNode>()\n   importedModules = new Set<ModuleNode>()\n   acceptedHmrDeps = new Set<ModuleNode>()\n-  isSelfAccepting = false\n+  isSelfAccepting: boolean | null = null",
        "comment_created_at": "2022-04-01T19:20:25+00:00",
        "comment_author": "brillout",
        "comment_body": "Makes sense. Done.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "834346469",
    "pr_number": 7436,
    "pr_file": "packages/vite/src/node/importGlob.ts",
    "created_at": "2022-03-24T14:06:19+00:00",
    "commented_code": "err.pos = pos\n   throw err\n }\n+\n+// Thin wrapper around `fast-glob` to make the option `ignore: ['**/node_modules/**']`\n+// work with patterns that include `node_modules/`. So that Vite can support patterns\n+// like `import.meta.glob('node_modules/some-framework/**/*.page.js')`.\n+function glob(pattern: string, base: string): string[] {\n+  const rebase = pattern.match(/.*\\/?node_modules\\//)?.[0] ?? ''\n+  if (rebase !== '') {",
    "repo_full_name": "vitejs/vite",
    "discussion_comments": [
      {
        "comment_id": "834346469",
        "repo_full_name": "vitejs/vite",
        "pr_number": 7436,
        "pr_file": "packages/vite/src/node/importGlob.ts",
        "discussion_id": "834346469",
        "commented_code": "@@ -261,3 +257,25 @@ function error(pos: number) {\n   err.pos = pos\n   throw err\n }\n+\n+// Thin wrapper around `fast-glob` to make the option `ignore: ['**/node_modules/**']`\n+// work with patterns that include `node_modules/`. So that Vite can support patterns\n+// like `import.meta.glob('node_modules/some-framework/**/*.page.js')`.\n+function glob(pattern: string, base: string): string[] {\n+  const rebase = pattern.match(/.*\\/?node_modules\\//)?.[0] ?? ''\n+  if (rebase !== '') {",
        "comment_created_at": "2022-03-24T14:06:19+00:00",
        "comment_author": "patak-dev",
        "comment_body": "Nice, better to avoid the function. We could let it be undefined, no?\r\n```suggestion\r\n  const rebase = pattern.match(/.*\\/?node_modules\\//)?.[0]\r\n  if (rebase) {\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "834353496",
        "repo_full_name": "vitejs/vite",
        "pr_number": 7436,
        "pr_file": "packages/vite/src/node/importGlob.ts",
        "discussion_id": "834346469",
        "commented_code": "@@ -261,3 +257,25 @@ function error(pos: number) {\n   err.pos = pos\n   throw err\n }\n+\n+// Thin wrapper around `fast-glob` to make the option `ignore: ['**/node_modules/**']`\n+// work with patterns that include `node_modules/`. So that Vite can support patterns\n+// like `import.meta.glob('node_modules/some-framework/**/*.page.js')`.\n+function glob(pattern: string, base: string): string[] {\n+  const rebase = pattern.match(/.*\\/?node_modules\\//)?.[0] ?? ''\n+  if (rebase !== '') {",
        "comment_created_at": "2022-03-24T14:12:52+00:00",
        "comment_author": "brillout",
        "comment_body": "Ah, true, good point. Done.",
        "pr_file_module": null
      }
    ]
  }
]