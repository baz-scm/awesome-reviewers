[
  {
    "discussion_id": "1899621611",
    "pr_number": 17442,
    "pr_file": "proto/vtctldata.proto",
    "created_at": "2024-12-30T15:28:25+00:00",
    "commented_code": "map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
    "repo_full_name": "vitessio/vitess",
    "discussion_comments": [
      {
        "comment_id": "1899621611",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2024-12-30T15:28:25+00:00",
        "comment_author": "dbussink",
        "comment_body": "Does this not contain any results? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1899649882",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2024-12-30T16:13:43+00:00",
        "comment_author": "mattlord",
        "comment_body": "Yeah, it returns an error if there's a validation failure: https://github.com/vitessio/vitess/blob/76abae45fe6c8881c5ec308d05d1b648d058fa79/go/vt/vtctl/vtctl.go#L3259-L3269\r\n\r\nWe could change that, of course, but here I'm primarily just porting these missing commands over.",
        "pr_file_module": null
      },
      {
        "comment_id": "1899953669",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2024-12-31T07:12:08+00:00",
        "comment_author": "shlomi-noach",
        "comment_body": "We have this as common practice to sometimes have empty responses, where it's \"error or nothing\" and with the potential of adding proto fields in the future without breaking gRPC signature.",
        "pr_file_module": null
      },
      {
        "comment_id": "1899966795",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2024-12-31T07:48:49+00:00",
        "comment_author": "dbussink",
        "comment_body": "Guess this is more a question for a separate change perhaps. But given we have various inputs with different shards, wouldn't we want to reflect that in the output similar to the next command listed here? ",
        "pr_file_module": null
      },
      {
        "comment_id": "1899969931",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2024-12-31T07:56:48+00:00",
        "comment_author": "shlomi-noach",
        "comment_body": "Valid point, worth extended discussion.",
        "pr_file_module": null
      },
      {
        "comment_id": "1900180497",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2024-12-31T16:09:17+00:00",
        "comment_author": "mattlord",
        "comment_body": "\"We\" here would be whomever uses and consumes this command (certainly not me to date). This PR is about migrating the missing but still used/needed commands from the old client to the new, where maintaining \"drop in compatibility\" is the only concern. Why are we discussing this here? Is there some feature gap or request? If so, we should open a feature request that lays it out and someone can pick that up at a later date.\r\n\r\nI'm actually leaning towards removing [the endtoend test code for it](https://github.com/vitessio/vitess/blob/a57ae939ec5dbddc02e9eac31e1519113e904eeb/go/test/endtoend/sharded/sharded_keyspace_test.go#L169-L172) (`ValidatePermissions*`, as I did with `CopySchemaShard`) since I cannot find anything that actually uses it today (in vitess, vitess-operator, etc):\r\n```\r\ngo/test/endtoend/sharded/sharded_keyspace_test.go:      err = clusterInstance.VtctlclientProcess.ExecuteCommand(\"ValidatePermissionsShard\", fmt.Sprintf(\"%s/%s\", keyspaceName, shard1.Name))\r\ngo/test/endtoend/sharded/sharded_keyspace_test.go:      err = clusterInstance.VtctlclientProcess.ExecuteCommand(\"ValidatePermissionsKeyspace\", keyspaceName)\r\ngo/vt/vtctl/vtctl.go:                           name:   \"ValidatePermissionsShard\",\r\ngo/vt/vtctl/vtctl.go:                           method: commandValidatePermissionsShard,\r\ngo/vt/vtctl/vtctl.go:                           name:   \"ValidatePermissionsKeyspace\",\r\ngo/vt/vtctl/vtctl.go:                           method: commandValidatePermissionsKeyspace,\r\ngo/vt/vtctl/vtctl.go:func commandValidatePermissionsShard(ctx context.Context, wr *wrangler.Wrangler, subFlags *pflag.FlagSet, args []string) error {\r\ngo/vt/vtctl/vtctl.go:           return fmt.Errorf(\"the <keyspace/shard> argument is required for the ValidatePermissionsShard command\")\r\ngo/vt/vtctl/vtctl.go:   return wr.ValidatePermissionsShard(ctx, keyspace, shard)\r\ngo/vt/vtctl/vtctl.go:func commandValidatePermissionsKeyspace(ctx context.Context, wr *wrangler.Wrangler, subFlags *pflag.FlagSet, args []string) error {\r\ngo/vt/vtctl/vtctl.go:           return fmt.Errorf(\"the <keyspace name> argument is required for the ValidatePermissionsKeyspace command\")\r\ngo/vt/vtctl/vtctl.go:   return wr.ValidatePermissionsKeyspace(ctx, keyspace)\r\ngo/vt/vtctld/vtctld.go: actionRepo.RegisterKeyspaceAction(\"ValidatePermissionsKeyspace\",\r\ngo/vt/vtctld/vtctld.go:                 return \"\", wr.ValidatePermissionsKeyspace(ctx, keyspace)\r\ngo/vt/vtctld/vtctld.go: actionRepo.RegisterShardAction(\"ValidatePermissionsShard\",\r\ngo/vt/vtctld/vtctld.go:                 return \"\", wr.ValidatePermissionsShard(ctx, keyspace, shard)\r\ngo/vt/wrangler/permissions.go:// ValidatePermissionsShard validates all the permissions are the same\r\ngo/vt/wrangler/permissions.go:func (wr *Wrangler) ValidatePermissionsShard(ctx context.Context, keyspace, shard string) error {\r\ngo/vt/wrangler/permissions.go:// ValidatePermissionsKeyspace validates all the permissions are the same\r\ngo/vt/wrangler/permissions.go:func (wr *Wrangler) ValidatePermissionsKeyspace(ctx context.Context, keyspace string) error {\r\ngo/vt/wrangler/permissions.go:          return wr.ValidatePermissionsShard(ctx, keyspace, shards[0])\r\ngo/vt/wrangler/testlib/permissions_test.go:     // run ValidatePermissionsKeyspace, this should work\r\ngo/vt/wrangler/testlib/permissions_test.go:     if err := vp.Run([]string{\"ValidatePermissionsKeyspace\", primary.Tablet.Keyspace}); err != nil {\r\ngo/vt/wrangler/testlib/permissions_test.go:             t.Fatalf(\"ValidatePermissionsKeyspace failed: %v\", err)\r\ngo/vt/wrangler/testlib/permissions_test.go:     // run ValidatePermissionsKeyspace again, this should now fail\r\ngo/vt/wrangler/testlib/permissions_test.go:     if err := vp.Run([]string{\"ValidatePermissionsKeyspace\", primary.Tablet.Keyspace}); err == nil || !strings.Contains(err.Error(), \"has an extra user\") {\r\ngo/vt/wrangler/testlib/permissions_test.go:             t.Fatalf(\"ValidatePermissionsKeyspace has unexpected err: %v\", err)\r\n```\r\n\r\nSo rather than spending time discussing how we could improve it... I think we should kill it off during the client transition as it no longer seems to serve a valid/used purpose as a client command. Unless you for some reason feel this is needed (and should be improved at a later time)?",
        "pr_file_module": null
      },
      {
        "comment_id": "1900190228",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2024-12-31T16:35:57+00:00",
        "comment_author": "mattlord",
        "comment_body": "To provide some context, the `GetPermissions` client command simply returns the contents of the `mysql.user` and `mysql.db` tables as a JSON doc ([tmc](https://github.com/vitessio/vitess/blob/a57ae939ec5dbddc02e9eac31e1519113e904eeb/go/vt/vttablet/tabletmanager/rpc_actions.go#L64-L67) -> [mysqlctl](https://github.com/vitessio/vitess/blob/a57ae939ec5dbddc02e9eac31e1519113e904eeb/go/vt/mysqlctl/permissions.go#L26-L52)):\r\n```\r\n❯ vtctldclient GetPermissions zone1-100\r\n{\r\n  \"user_permissions\": [\r\n    {\r\n      \"host\": \"%\",\r\n      \"user\": \"vt_repl\",\r\n      \"password_checksum\": \"0\",\r\n      \"privileges\": {\r\n        \"Alter_priv\": \"N\",\r\n        \"Alter_routine_priv\": \"N\",\r\n        \"Create_priv\": \"N\",\r\n        \"Create_role_priv\": \"N\",\r\n        \"Create_routine_priv\": \"N\",\r\n        \"Create_tablespace_priv\": \"N\",\r\n        \"Create_tmp_table_priv\": \"N\",\r\n        \"Create_user_priv\": \"N\",\r\n        \"Create_view_priv\": \"N\",\r\n        \"Delete_priv\": \"N\",\r\n        \"Drop_priv\": \"N\",\r\n        \"Drop_role_priv\": \"N\",\r\n        \"Event_priv\": \"N\",\r\n        \"Execute_priv\": \"N\",\r\n        \"File_priv\": \"N\",\r\n        \"Grant_priv\": \"N\",\r\n        \"Index_priv\": \"N\",\r\n        \"Insert_priv\": \"N\",\r\n        \"Lock_tables_priv\": \"N\",\r\n        \"Password_require_current\": \"\",\r\n        \"Password_reuse_history\": \"\",\r\n        \"Password_reuse_time\": \"\",\r\n        \"Process_priv\": \"N\",\r\n        \"References_priv\": \"N\",\r\n        \"Reload_priv\": \"N\",\r\n        \"Repl_client_priv\": \"N\",\r\n        \"Repl_slave_priv\": \"Y\",\r\n        \"Select_priv\": \"N\",\r\n        \"Show_db_priv\": \"N\",\r\n        \"Show_view_priv\": \"N\",\r\n        \"Shutdown_priv\": \"N\",\r\n        \"Super_priv\": \"N\",\r\n        \"Trigger_priv\": \"N\",\r\n        \"Update_priv\": \"N\",\r\n        \"User_attributes\": \"\",\r\n        \"account_locked\": \"N\",\r\n        \"authentication_string\": \"\",\r\n        \"max_connections\": \"0\",\r\n        \"max_questions\": \"0\",\r\n        \"max_updates\": \"0\",\r\n        \"max_user_connections\": \"0\",\r\n        \"password_expired\": \"N\",\r\n        \"password_lifetime\": \"\",\r\n        \"plugin\": \"mysql_native_password\",\r\n        \"ssl_cipher\": \"\",\r\n        \"ssl_type\": \"\",\r\n        \"x509_issuer\": \"\",\r\n        \"x509_subject\": \"\"\r\n      }\r\n    },\r\n...\r\n```\r\n\r\nThe `ValidatePermissions*` commands then tells you if the output differs within a shard or a keyspace. I don't disagree that telling you what nodes differ and how would be useful (not in this PR, but later enhancements)... IF this is actually still useful in the broader sense today. I haven't yet seen anything to indicate that it's still used or still useful. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1900221002",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2024-12-31T18:11:11+00:00",
        "comment_author": "mattlord",
        "comment_body": "In looking for uses of the ValidatePermissons commands (I found none) I did find uses of CopySchemaShard. So I think I will have to port that over.",
        "pr_file_module": null
      },
      {
        "comment_id": "1900255785",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2024-12-31T20:16:31+00:00",
        "comment_author": "mattlord",
        "comment_body": "One last note... FWIW the functions used for the `ValidatePermissions*` commands do include the details in the error message: https://github.com/vitessio/vitess/blob/a57ae939ec5dbddc02e9eac31e1519113e904eeb/go/vt/mysqlctl/tmutils/permissions.go#L164\r\n\r\nSo I'm going to put this comment thread to bed for now.  🙂 ",
        "pr_file_module": null
      },
      {
        "comment_id": "1900447097",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2025-01-01T19:01:42+00:00",
        "comment_author": "mattlord",
        "comment_body": "I'm going to mark this as resolved for now. But I'm going to add example outputs between the clients for each command added here. For example:\r\n```\r\n❯ vtctlclient ValidatePermissionsKeyspace commerce\r\nW0101 13:58:38.218227   32307 log.go:39] Failed to read in config : Config File \"vtconfig\" Not Found in \"[/Users/matt/git/vitess]\". This is optional, and can be ignored if you are not using config files. For a detailed explanation, see https://github.com/vitessio/vitess/blob/main/doc/viper/viper.md#config-files.\r\nValidatePermissionsKeyspace Error: rpc error: code = Unknown desc = permissions diffs: zone1-0000000100 has an extra user localhost:mlord;zone1-0000000100 has an extra user localhost:mlord\r\nE0101 13:58:38.237814   32307 main.go:105] remote error: rpc error: code = Unknown desc = permissions diffs: zone1-0000000100 has an extra user localhost:mlord;zone1-0000000100 has an extra user localhost:mlord\r\n\r\n❯ vtctldclient ValidatePermissionsKeyspace commerce\r\nE0101 13:58:55.687067   32429 main.go:56] rpc error: code = Unknown desc = permissions diffs: zone1-0000000100 has an extra user localhost:mlord\r\n\r\n❯ vtctlclient ValidatePermissionsShard commerce/0\r\nW0101 13:59:55.640410   32898 log.go:39] Failed to read in config : Config File \"vtconfig\" Not Found in \"[/Users/matt/git/vitess]\". This is optional, and can be ignored if you are not using config files. For a detailed explanation, see https://github.com/vitessio/vitess/blob/main/doc/viper/viper.md#config-files.\r\nValidatePermissionsShard Error: rpc error: code = Unknown desc = permissions diffs: zone1-0000000100 has an extra user localhost:mlord;zone1-0000000100 has an extra user localhost:mlord\r\nE0101 13:59:55.655940   32898 main.go:105] remote error: rpc error: code = Unknown desc = permissions diffs: zone1-0000000100 has an extra user localhost:mlord;zone1-0000000100 has an extra user localhost:mlord\r\n\r\n❯ vtctldclient ValidatePermissionsShard commerce/0\r\nE0101 13:59:59.051856   33004 main.go:56] rpc error: code = Unknown desc = permissions diffs: zone1-0000000100 has an extra user localhost:mlord\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1900601889",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2025-01-02T07:30:36+00:00",
        "comment_author": "shlomi-noach",
        "comment_body": "FWIW I meant worth a discussion as a followup to this PR, not as part of this PR.",
        "pr_file_module": null
      },
      {
        "comment_id": "1903160827",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2025-01-04T22:20:42+00:00",
        "comment_author": "dbussink",
        "comment_body": "I would be for removing it fwiw if it's not used at all. ",
        "pr_file_module": null
      },
      {
        "comment_id": "1903168911",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17442,
        "pr_file": "proto/vtctldata.proto",
        "discussion_id": "1899621611",
        "commented_code": "@@ -1860,12 +1860,25 @@ message ValidateKeyspaceResponse {\n   map<string, ValidateShardResponse> results_by_shard = 2;\n }\n \n+message ValidatePermissionsKeyspaceRequest {\n+  string keyspace = 1;\n+  // If you only want to validate a subset of the shards in the\n+  // keyspace, then specify a list of shard names.\n+  repeated string shards = 2;\n+}\n+\n+message ValidatePermissionsKeyspaceResponse {\n+}",
        "comment_created_at": "2025-01-04T23:40:14+00:00",
        "comment_author": "mattlord",
        "comment_body": "That’s my preference (OK with either way) as well, but here I’m following the well established design choice to always return a response object in vtctldserver RPCs, even when it has no fields. Better to have a unified and predictable behavior IMO. ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1863717861",
    "pr_number": 17300,
    "pr_file": "proto/tabletmanagerdata.proto",
    "created_at": "2024-11-29T15:55:55+00:00",
    "commented_code": "// Status represents the replication status call right before, and right after telling the replica to stop.\n   replicationdata.StopReplicationStatus status = 2;\n-  bool backup_running = 3;",
    "repo_full_name": "vitessio/vitess",
    "discussion_comments": [
      {
        "comment_id": "1863717861",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17300,
        "pr_file": "proto/tabletmanagerdata.proto",
        "discussion_id": "1863717861",
        "commented_code": "@@ -549,7 +548,6 @@ message StopReplicationAndGetStatusResponse {\n \n   // Status represents the replication status call right before, and right after telling the replica to stop.\n   replicationdata.StopReplicationStatus status = 2;\n-  bool backup_running = 3;",
        "comment_created_at": "2024-11-29T15:55:55+00:00",
        "comment_author": "ejortegau",
        "comment_body": "A field for this is already present in replicationdata.Status, no need to add another one here which just led to confusion in the previous PR. ",
        "pr_file_module": null
      }
    ]
  }
]