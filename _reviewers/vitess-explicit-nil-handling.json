[
  {
    "discussion_id": "2056111875",
    "pr_number": 18196,
    "pr_file": "go/mysql/replication/replication_position.go",
    "created_at": "2025-04-23T13:52:09+00:00",
    "commented_code": "return Position{GTIDSet: rp.GTIDSet.AddGTID(gtid)}\n }\n \n+// AppendGTID returns a new Position that represents the position\n+// after the given GTID is replicated.\n+func AppendGTIDInPlace(rp Position, gtid GTID) Position {\n+\tswitch {\n+\tcase gtid == nil:\n+\tcase rp.GTIDSet == nil:\n+\t\trp.GTIDSet = gtid.GTIDSet()\n+\tdefault:",
    "repo_full_name": "vitessio/vitess",
    "discussion_comments": [
      {
        "comment_id": "2059219899",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 18196,
        "pr_file": "go/mysql/replication/replication_position.go",
        "discussion_id": "2056111875",
        "commented_code": "@@ -109,6 +109,42 @@ func AppendGTID(rp Position, gtid GTID) Position {\n \treturn Position{GTIDSet: rp.GTIDSet.AddGTID(gtid)}\n }\n \n+// AppendGTID returns a new Position that represents the position\n+// after the given GTID is replicated.\n+func AppendGTIDInPlace(rp Position, gtid GTID) Position {\n+\tswitch {\n+\tcase gtid == nil:\n+\tcase rp.GTIDSet == nil:\n+\t\trp.GTIDSet = gtid.GTIDSet()\n+\tdefault:",
        "comment_created_at": "2025-04-24T20:56:21+00:00",
        "comment_author": "arthurschreiber",
        "comment_body": "I feel like the suggestion by copilot here is easier to read than the `switch` statement.",
        "pr_file_module": null
      },
      {
        "comment_id": "2062245104",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 18196,
        "pr_file": "go/mysql/replication/replication_position.go",
        "discussion_id": "2056111875",
        "commented_code": "@@ -109,6 +109,42 @@ func AppendGTID(rp Position, gtid GTID) Position {\n \treturn Position{GTIDSet: rp.GTIDSet.AddGTID(gtid)}\n }\n \n+// AppendGTID returns a new Position that represents the position\n+// after the given GTID is replicated.\n+func AppendGTIDInPlace(rp Position, gtid GTID) Position {\n+\tswitch {\n+\tcase gtid == nil:\n+\tcase rp.GTIDSet == nil:\n+\t\trp.GTIDSet = gtid.GTIDSet()\n+\tdefault:",
        "comment_created_at": "2025-04-27T05:06:21+00:00",
        "comment_author": "shlomi-noach",
        "comment_body": "Agreed ;)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2016112167",
    "pr_number": 17804,
    "pr_file": "go/vt/vttablet/tabletmanager/rpc_vreplication.go",
    "created_at": "2025-03-27T09:55:46+00:00",
    "commented_code": "if req.OnDdl != nil && *req.OnDdl != binlogdatapb.OnDDLAction(textutil.SimulatedNullInt) {\n \t\t\tbls.OnDdl = *req.OnDdl\n \t\t}\n+\t\tif req.FilterRules != nil {\n+\t\t\tbls.Filter.Rules = append(bls.Filter.Rules, req.FilterRules...)\n+\t\t}",
    "repo_full_name": "vitessio/vitess",
    "discussion_comments": [
      {
        "comment_id": "2016112167",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17804,
        "pr_file": "go/vt/vttablet/tabletmanager/rpc_vreplication.go",
        "discussion_id": "2016112167",
        "commented_code": "@@ -585,6 +585,9 @@ func (tm *TabletManager) UpdateVReplicationWorkflow(ctx context.Context, req *ta\n \t\tif req.OnDdl != nil && *req.OnDdl != binlogdatapb.OnDDLAction(textutil.SimulatedNullInt) {\n \t\t\tbls.OnDdl = *req.OnDdl\n \t\t}\n+\t\tif req.FilterRules != nil {\n+\t\t\tbls.Filter.Rules = append(bls.Filter.Rules, req.FilterRules...)\n+\t\t}",
        "comment_created_at": "2025-03-27T09:55:46+00:00",
        "comment_author": "shlomi-noach",
        "comment_body": "golang allows `s...` even if `s` is `nil`. No need for this check.\r\n```suggestion\r\n\t\tbls.Filter.Rules = append(bls.Filter.Rules, req.FilterRules...)\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "2018056554",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17804,
        "pr_file": "go/vt/vttablet/tabletmanager/rpc_vreplication.go",
        "discussion_id": "2016112167",
        "commented_code": "@@ -585,6 +585,9 @@ func (tm *TabletManager) UpdateVReplicationWorkflow(ctx context.Context, req *ta\n \t\tif req.OnDdl != nil && *req.OnDdl != binlogdatapb.OnDDLAction(textutil.SimulatedNullInt) {\n \t\t\tbls.OnDdl = *req.OnDdl\n \t\t}\n+\t\tif req.FilterRules != nil {\n+\t\t\tbls.Filter.Rules = append(bls.Filter.Rules, req.FilterRules...)\n+\t\t}",
        "comment_created_at": "2025-03-28T07:27:06+00:00",
        "comment_author": "beingnoble03",
        "comment_body": "done",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1912275987",
    "pr_number": 17429,
    "pr_file": "go/vt/vttablet/tabletmanager/rpc_vreplication.go",
    "created_at": "2025-01-11T22:45:39+00:00",
    "commented_code": "if !textutil.ValueIsSimulatedNull(req.TabletTypes) {\n \t\t\ttabletTypes = req.TabletTypes\n \t\t}\n+\t\tif req.Message != nil && *req.Message != sqltypes.Null.String() {",
    "repo_full_name": "vitessio/vitess",
    "discussion_comments": [
      {
        "comment_id": "1912275987",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17429,
        "pr_file": "go/vt/vttablet/tabletmanager/rpc_vreplication.go",
        "discussion_id": "1912275987",
        "commented_code": "@@ -568,6 +568,9 @@ func (tm *TabletManager) UpdateVReplicationWorkflow(ctx context.Context, req *ta\n \t\tif !textutil.ValueIsSimulatedNull(req.TabletTypes) {\n \t\t\ttabletTypes = req.TabletTypes\n \t\t}\n+\t\tif req.Message != nil && *req.Message != sqltypes.Null.String() {",
        "comment_created_at": "2025-01-11T22:45:39+00:00",
        "comment_author": "mattlord",
        "comment_body": "IMO, this should only be:\r\n```\r\nif req.Message != nil {\r\n```\r\n\r\nIf someone explicitly specifies the string literal `NULL` then we should store that since we're updating the stored value if any new value was explicitly provided.",
        "pr_file_module": null
      },
      {
        "comment_id": "1914592850",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17429,
        "pr_file": "go/vt/vttablet/tabletmanager/rpc_vreplication.go",
        "discussion_id": "1912275987",
        "commented_code": "@@ -568,6 +568,9 @@ func (tm *TabletManager) UpdateVReplicationWorkflow(ctx context.Context, req *ta\n \t\tif !textutil.ValueIsSimulatedNull(req.TabletTypes) {\n \t\t\ttabletTypes = req.TabletTypes\n \t\t}\n+\t\tif req.Message != nil && *req.Message != sqltypes.Null.String() {",
        "comment_created_at": "2025-01-14T10:31:24+00:00",
        "comment_author": "beingnoble03",
        "comment_body": "Got it! Done 👍 ",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1897701311",
    "pr_number": 17409,
    "pr_file": "go/vt/vtgate/evalengine/fn_misc.go",
    "created_at": "2024-12-26T07:15:58+00:00",
    "commented_code": "return ctype{Type: sqltypes.VarBinary, Flag: flagNullable, Col: collationBinary}, nil\n }\n \n+func (call *builtinLastInsertID) eval(env *ExpressionEnv) (eval, error) {\n+\targ, err := call.arg1(env)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tif arg == nil {\n+\t\tenv.VCursor().SetLastInsertID(0)\n+\t\treturn nil, err\n+\t}",
    "repo_full_name": "vitessio/vitess",
    "discussion_comments": [
      {
        "comment_id": "1897701311",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17409,
        "pr_file": "go/vt/vtgate/evalengine/fn_misc.go",
        "discussion_id": "1897701311",
        "commented_code": "@@ -194,6 +200,33 @@ func (call *builtinInet6Aton) compile(c *compiler) (ctype, error) {\n \treturn ctype{Type: sqltypes.VarBinary, Flag: flagNullable, Col: collationBinary}, nil\n }\n \n+func (call *builtinLastInsertID) eval(env *ExpressionEnv) (eval, error) {\n+\targ, err := call.arg1(env)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tif arg == nil {\n+\t\tenv.VCursor().SetLastInsertID(0)\n+\t\treturn nil, err\n+\t}",
        "comment_created_at": "2024-12-26T07:15:58+00:00",
        "comment_author": "harshit-gangal",
        "comment_body": "do we expect this to happen?\r\nI believe we are already checking that argument cannot be nil.",
        "pr_file_module": null
      },
      {
        "comment_id": "1899093650",
        "repo_full_name": "vitessio/vitess",
        "pr_number": 17409,
        "pr_file": "go/vt/vtgate/evalengine/fn_misc.go",
        "discussion_id": "1897701311",
        "commented_code": "@@ -194,6 +200,33 @@ func (call *builtinInet6Aton) compile(c *compiler) (ctype, error) {\n \treturn ctype{Type: sqltypes.VarBinary, Flag: flagNullable, Col: collationBinary}, nil\n }\n \n+func (call *builtinLastInsertID) eval(env *ExpressionEnv) (eval, error) {\n+\targ, err := call.arg1(env)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tif arg == nil {\n+\t\tenv.VCursor().SetLastInsertID(0)\n+\t\treturn nil, err\n+\t}",
        "comment_created_at": "2024-12-29T09:20:12+00:00",
        "comment_author": "systay",
        "comment_body": "no, this is needed. The function accepts and passes through `NULL` values, but changes the session state to 0\r\n\r\n```sql\r\nmysql> select last_insert_id(12);\r\n+--------------------+\r\n| last_insert_id(12) |\r\n+--------------------+\r\n|                 12 |\r\n+--------------------+\r\n1 row in set (0.01 sec)\r\n\r\nmysql> select last_insert_id(null);\r\n+----------------------+\r\n| last_insert_id(null) |\r\n+----------------------+\r\n|                 NULL |\r\n+----------------------+\r\n1 row in set (0.00 sec)\r\n\r\nmysql> select last_insert_id();\r\n+------------------+\r\n| last_insert_id() |\r\n+------------------+\r\n|                0 |\r\n+------------------+\r\n1 row in set (0.00 sec)\r\n```",
        "pr_file_module": null
      }
    ]
  }
]