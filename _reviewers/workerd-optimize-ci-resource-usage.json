[
  {
    "discussion_id": "2164975855",
    "pr_number": 4394,
    "pr_file": ".github/workflows/codspeed.yml",
    "created_at": "2025-06-24T21:46:56+00:00",
    "commented_code": "+name: CodSpeed\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+      - 'docs/**'\n+      - 'justfile'\n+      - '.devcontainer'\n+      - '**/*.md'\n+      - '.gitignore'\n+  merge_group:\n+  push:\n+    branches:\n+      - main\n+\n+concurrency:\n+  group: codspeed.yml-${{ github.event.pull_request.number || github.run_id }}\n+  cancel-in-progress: true\n+\n+permissions:\n+  # Write cache\n+  contents: write\n+\n+jobs:\n+  benchmarks:\n+    name: Run benchmarks\n+    runs-on: ubuntu-22.04\n+    env:\n+      BAZEL_ARGS: --config=benchmark --@codspeed//core:codspeed_mode=instrumentation --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.devprod.cloudflare.dev\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          show-progress: false\n+\n+      - name: Cache\n+        id: cache\n+        uses: actions/cache@v4\n+        with:\n+          path: ~/bazel-disk-cache\n+          key: bazel-disk-cache-benchmarks-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}\n+\n+      - name: Setup Linux\n+        run: |\n+          export DEBIAN_FRONTEND=noninteractive\n+          wget https://apt.llvm.org/llvm.sh\n+          sed -i '/apt-get install/d' llvm.sh\n+          chmod +x llvm.sh\n+          sudo ./llvm.sh 19\n+          # keep in sync with build/ci.bazelrc\n+          sudo apt-get install -y -qq --no-install-recommends clang-19 lld-19 libunwind-19 libc++abi1-19 libc++1-19 libc++-19-dev libclang-rt-19-dev llvm-19\n+          sudo ln -s /usr/bin/llvm-symbolizer-19 /usr/bin/llvm-symbolizer\n+          echo \"build:linux --action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+          echo \"build:linux --host_action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+\n+      - name: Build benchmarks\n+        run: |\n+          bazel build ${{ env.BAZEL_ARGS }} //src/workerd/tests:all_benchmarks",
    "repo_full_name": "cloudflare/workerd",
    "discussion_comments": [
      {
        "comment_id": "2164975855",
        "repo_full_name": "cloudflare/workerd",
        "pr_number": 4394,
        "pr_file": ".github/workflows/codspeed.yml",
        "discussion_id": "2164975855",
        "commented_code": "@@ -0,0 +1,78 @@\n+name: CodSpeed\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+      - 'docs/**'\n+      - 'justfile'\n+      - '.devcontainer'\n+      - '**/*.md'\n+      - '.gitignore'\n+  merge_group:\n+  push:\n+    branches:\n+      - main\n+\n+concurrency:\n+  group: codspeed.yml-${{ github.event.pull_request.number || github.run_id }}\n+  cancel-in-progress: true\n+\n+permissions:\n+  # Write cache\n+  contents: write\n+\n+jobs:\n+  benchmarks:\n+    name: Run benchmarks\n+    runs-on: ubuntu-22.04\n+    env:\n+      BAZEL_ARGS: --config=benchmark --@codspeed//core:codspeed_mode=instrumentation --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.devprod.cloudflare.dev\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          show-progress: false\n+\n+      - name: Cache\n+        id: cache\n+        uses: actions/cache@v4\n+        with:\n+          path: ~/bazel-disk-cache\n+          key: bazel-disk-cache-benchmarks-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}\n+\n+      - name: Setup Linux\n+        run: |\n+          export DEBIAN_FRONTEND=noninteractive\n+          wget https://apt.llvm.org/llvm.sh\n+          sed -i '/apt-get install/d' llvm.sh\n+          chmod +x llvm.sh\n+          sudo ./llvm.sh 19\n+          # keep in sync with build/ci.bazelrc\n+          sudo apt-get install -y -qq --no-install-recommends clang-19 lld-19 libunwind-19 libc++abi1-19 libc++1-19 libc++-19-dev libclang-rt-19-dev llvm-19\n+          sudo ln -s /usr/bin/llvm-symbolizer-19 /usr/bin/llvm-symbolizer\n+          echo \"build:linux --action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+          echo \"build:linux --host_action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+\n+      - name: Build benchmarks\n+        run: |\n+          bazel build ${{ env.BAZEL_ARGS }} //src/workerd/tests:all_benchmarks",
        "comment_created_at": "2025-06-24T21:46:56+00:00",
        "comment_author": "danlapid",
        "comment_body": "This means we need to build another workerd binary for benchmarks, we should add the benchmarks as an extra step on top of one of our already running jobs using its artifacts rather than another full build.\r\nThere's existing examples in test.yml for generated types and wpt reports etc.",
        "pr_file_module": null
      },
      {
        "comment_id": "2167385765",
        "repo_full_name": "cloudflare/workerd",
        "pr_number": 4394,
        "pr_file": ".github/workflows/codspeed.yml",
        "discussion_id": "2164975855",
        "commented_code": "@@ -0,0 +1,78 @@\n+name: CodSpeed\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+      - 'docs/**'\n+      - 'justfile'\n+      - '.devcontainer'\n+      - '**/*.md'\n+      - '.gitignore'\n+  merge_group:\n+  push:\n+    branches:\n+      - main\n+\n+concurrency:\n+  group: codspeed.yml-${{ github.event.pull_request.number || github.run_id }}\n+  cancel-in-progress: true\n+\n+permissions:\n+  # Write cache\n+  contents: write\n+\n+jobs:\n+  benchmarks:\n+    name: Run benchmarks\n+    runs-on: ubuntu-22.04\n+    env:\n+      BAZEL_ARGS: --config=benchmark --@codspeed//core:codspeed_mode=instrumentation --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.devprod.cloudflare.dev\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          show-progress: false\n+\n+      - name: Cache\n+        id: cache\n+        uses: actions/cache@v4\n+        with:\n+          path: ~/bazel-disk-cache\n+          key: bazel-disk-cache-benchmarks-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}\n+\n+      - name: Setup Linux\n+        run: |\n+          export DEBIAN_FRONTEND=noninteractive\n+          wget https://apt.llvm.org/llvm.sh\n+          sed -i '/apt-get install/d' llvm.sh\n+          chmod +x llvm.sh\n+          sudo ./llvm.sh 19\n+          # keep in sync with build/ci.bazelrc\n+          sudo apt-get install -y -qq --no-install-recommends clang-19 lld-19 libunwind-19 libc++abi1-19 libc++1-19 libc++-19-dev libclang-rt-19-dev llvm-19\n+          sudo ln -s /usr/bin/llvm-symbolizer-19 /usr/bin/llvm-symbolizer\n+          echo \"build:linux --action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+          echo \"build:linux --host_action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+\n+      - name: Build benchmarks\n+        run: |\n+          bazel build ${{ env.BAZEL_ARGS }} //src/workerd/tests:all_benchmarks",
        "comment_created_at": "2025-06-25T18:47:07+00:00",
        "comment_author": "anonrig",
        "comment_body": "We're building it with custom flags (such as --config=benchmark), if we don't have a custom artifact, it will increase the duration of the runner. Are we ok with that? ",
        "pr_file_module": null
      },
      {
        "comment_id": "2167387333",
        "repo_full_name": "cloudflare/workerd",
        "pr_number": 4394,
        "pr_file": ".github/workflows/codspeed.yml",
        "discussion_id": "2164975855",
        "commented_code": "@@ -0,0 +1,78 @@\n+name: CodSpeed\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+      - 'docs/**'\n+      - 'justfile'\n+      - '.devcontainer'\n+      - '**/*.md'\n+      - '.gitignore'\n+  merge_group:\n+  push:\n+    branches:\n+      - main\n+\n+concurrency:\n+  group: codspeed.yml-${{ github.event.pull_request.number || github.run_id }}\n+  cancel-in-progress: true\n+\n+permissions:\n+  # Write cache\n+  contents: write\n+\n+jobs:\n+  benchmarks:\n+    name: Run benchmarks\n+    runs-on: ubuntu-22.04\n+    env:\n+      BAZEL_ARGS: --config=benchmark --@codspeed//core:codspeed_mode=instrumentation --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.devprod.cloudflare.dev\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          show-progress: false\n+\n+      - name: Cache\n+        id: cache\n+        uses: actions/cache@v4\n+        with:\n+          path: ~/bazel-disk-cache\n+          key: bazel-disk-cache-benchmarks-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}\n+\n+      - name: Setup Linux\n+        run: |\n+          export DEBIAN_FRONTEND=noninteractive\n+          wget https://apt.llvm.org/llvm.sh\n+          sed -i '/apt-get install/d' llvm.sh\n+          chmod +x llvm.sh\n+          sudo ./llvm.sh 19\n+          # keep in sync with build/ci.bazelrc\n+          sudo apt-get install -y -qq --no-install-recommends clang-19 lld-19 libunwind-19 libc++abi1-19 libc++1-19 libc++-19-dev libclang-rt-19-dev llvm-19\n+          sudo ln -s /usr/bin/llvm-symbolizer-19 /usr/bin/llvm-symbolizer\n+          echo \"build:linux --action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+          echo \"build:linux --host_action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+\n+      - name: Build benchmarks\n+        run: |\n+          bazel build ${{ env.BAZEL_ARGS }} //src/workerd/tests:all_benchmarks",
        "comment_created_at": "2025-06-25T18:48:09+00:00",
        "comment_author": "anonrig",
        "comment_body": "If we want to reduce the duration, we should add a large runner as well: https://docs.github.com/en/actions/using-github-hosted-runners/using-larger-runners/managing-larger-runners#adding-a-larger-runner-to-an-organization\r\n\r\n@danlapid I believe you are the only one who can add this.",
        "pr_file_module": null
      },
      {
        "comment_id": "2167670488",
        "repo_full_name": "cloudflare/workerd",
        "pr_number": 4394,
        "pr_file": ".github/workflows/codspeed.yml",
        "discussion_id": "2164975855",
        "commented_code": "@@ -0,0 +1,78 @@\n+name: CodSpeed\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+      - 'docs/**'\n+      - 'justfile'\n+      - '.devcontainer'\n+      - '**/*.md'\n+      - '.gitignore'\n+  merge_group:\n+  push:\n+    branches:\n+      - main\n+\n+concurrency:\n+  group: codspeed.yml-${{ github.event.pull_request.number || github.run_id }}\n+  cancel-in-progress: true\n+\n+permissions:\n+  # Write cache\n+  contents: write\n+\n+jobs:\n+  benchmarks:\n+    name: Run benchmarks\n+    runs-on: ubuntu-22.04\n+    env:\n+      BAZEL_ARGS: --config=benchmark --@codspeed//core:codspeed_mode=instrumentation --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.devprod.cloudflare.dev\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          show-progress: false\n+\n+      - name: Cache\n+        id: cache\n+        uses: actions/cache@v4\n+        with:\n+          path: ~/bazel-disk-cache\n+          key: bazel-disk-cache-benchmarks-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}\n+\n+      - name: Setup Linux\n+        run: |\n+          export DEBIAN_FRONTEND=noninteractive\n+          wget https://apt.llvm.org/llvm.sh\n+          sed -i '/apt-get install/d' llvm.sh\n+          chmod +x llvm.sh\n+          sudo ./llvm.sh 19\n+          # keep in sync with build/ci.bazelrc\n+          sudo apt-get install -y -qq --no-install-recommends clang-19 lld-19 libunwind-19 libc++abi1-19 libc++1-19 libc++-19-dev libclang-rt-19-dev llvm-19\n+          sudo ln -s /usr/bin/llvm-symbolizer-19 /usr/bin/llvm-symbolizer\n+          echo \"build:linux --action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+          echo \"build:linux --host_action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+\n+      - name: Build benchmarks\n+        run: |\n+          bazel build ${{ env.BAZEL_ARGS }} //src/workerd/tests:all_benchmarks",
        "comment_created_at": "2025-06-25T21:30:40+00:00",
        "comment_author": "danlapid",
        "comment_body": "The benchmark flag is not really changing the compile flags, does it?\nIt just enables compilation of a few extra files?",
        "pr_file_module": null
      },
      {
        "comment_id": "2167672919",
        "repo_full_name": "cloudflare/workerd",
        "pr_number": 4394,
        "pr_file": ".github/workflows/codspeed.yml",
        "discussion_id": "2164975855",
        "commented_code": "@@ -0,0 +1,78 @@\n+name: CodSpeed\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+      - 'docs/**'\n+      - 'justfile'\n+      - '.devcontainer'\n+      - '**/*.md'\n+      - '.gitignore'\n+  merge_group:\n+  push:\n+    branches:\n+      - main\n+\n+concurrency:\n+  group: codspeed.yml-${{ github.event.pull_request.number || github.run_id }}\n+  cancel-in-progress: true\n+\n+permissions:\n+  # Write cache\n+  contents: write\n+\n+jobs:\n+  benchmarks:\n+    name: Run benchmarks\n+    runs-on: ubuntu-22.04\n+    env:\n+      BAZEL_ARGS: --config=benchmark --@codspeed//core:codspeed_mode=instrumentation --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.devprod.cloudflare.dev\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          show-progress: false\n+\n+      - name: Cache\n+        id: cache\n+        uses: actions/cache@v4\n+        with:\n+          path: ~/bazel-disk-cache\n+          key: bazel-disk-cache-benchmarks-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}\n+\n+      - name: Setup Linux\n+        run: |\n+          export DEBIAN_FRONTEND=noninteractive\n+          wget https://apt.llvm.org/llvm.sh\n+          sed -i '/apt-get install/d' llvm.sh\n+          chmod +x llvm.sh\n+          sudo ./llvm.sh 19\n+          # keep in sync with build/ci.bazelrc\n+          sudo apt-get install -y -qq --no-install-recommends clang-19 lld-19 libunwind-19 libc++abi1-19 libc++1-19 libc++-19-dev libclang-rt-19-dev llvm-19\n+          sudo ln -s /usr/bin/llvm-symbolizer-19 /usr/bin/llvm-symbolizer\n+          echo \"build:linux --action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+          echo \"build:linux --host_action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+\n+      - name: Build benchmarks\n+        run: |\n+          bazel build ${{ env.BAZEL_ARGS }} //src/workerd/tests:all_benchmarks",
        "comment_created_at": "2025-06-25T21:32:52+00:00",
        "comment_author": "anonrig",
        "comment_body": "Ideally it changes compile flags. It should run proper optimization flags etc. ",
        "pr_file_module": null
      },
      {
        "comment_id": "2167691252",
        "repo_full_name": "cloudflare/workerd",
        "pr_number": 4394,
        "pr_file": ".github/workflows/codspeed.yml",
        "discussion_id": "2164975855",
        "commented_code": "@@ -0,0 +1,78 @@\n+name: CodSpeed\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+      - 'docs/**'\n+      - 'justfile'\n+      - '.devcontainer'\n+      - '**/*.md'\n+      - '.gitignore'\n+  merge_group:\n+  push:\n+    branches:\n+      - main\n+\n+concurrency:\n+  group: codspeed.yml-${{ github.event.pull_request.number || github.run_id }}\n+  cancel-in-progress: true\n+\n+permissions:\n+  # Write cache\n+  contents: write\n+\n+jobs:\n+  benchmarks:\n+    name: Run benchmarks\n+    runs-on: ubuntu-22.04\n+    env:\n+      BAZEL_ARGS: --config=benchmark --@codspeed//core:codspeed_mode=instrumentation --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.devprod.cloudflare.dev\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          show-progress: false\n+\n+      - name: Cache\n+        id: cache\n+        uses: actions/cache@v4\n+        with:\n+          path: ~/bazel-disk-cache\n+          key: bazel-disk-cache-benchmarks-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}\n+\n+      - name: Setup Linux\n+        run: |\n+          export DEBIAN_FRONTEND=noninteractive\n+          wget https://apt.llvm.org/llvm.sh\n+          sed -i '/apt-get install/d' llvm.sh\n+          chmod +x llvm.sh\n+          sudo ./llvm.sh 19\n+          # keep in sync with build/ci.bazelrc\n+          sudo apt-get install -y -qq --no-install-recommends clang-19 lld-19 libunwind-19 libc++abi1-19 libc++1-19 libc++-19-dev libclang-rt-19-dev llvm-19\n+          sudo ln -s /usr/bin/llvm-symbolizer-19 /usr/bin/llvm-symbolizer\n+          echo \"build:linux --action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+          echo \"build:linux --host_action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+\n+      - name: Build benchmarks\n+        run: |\n+          bazel build ${{ env.BAZEL_ARGS }} //src/workerd/tests:all_benchmarks",
        "comment_created_at": "2025-06-25T21:45:17+00:00",
        "comment_author": "danlapid",
        "comment_body": "So is it the same flags as the release build?",
        "pr_file_module": null
      },
      {
        "comment_id": "2172080494",
        "repo_full_name": "cloudflare/workerd",
        "pr_number": 4394,
        "pr_file": ".github/workflows/codspeed.yml",
        "discussion_id": "2164975855",
        "commented_code": "@@ -0,0 +1,78 @@\n+name: CodSpeed\n+\n+on:\n+  pull_request:\n+    paths-ignore:\n+      - 'docs/**'\n+      - 'justfile'\n+      - '.devcontainer'\n+      - '**/*.md'\n+      - '.gitignore'\n+  merge_group:\n+  push:\n+    branches:\n+      - main\n+\n+concurrency:\n+  group: codspeed.yml-${{ github.event.pull_request.number || github.run_id }}\n+  cancel-in-progress: true\n+\n+permissions:\n+  # Write cache\n+  contents: write\n+\n+jobs:\n+  benchmarks:\n+    name: Run benchmarks\n+    runs-on: ubuntu-22.04\n+    env:\n+      BAZEL_ARGS: --config=benchmark --@codspeed//core:codspeed_mode=instrumentation --remote_cache=https://bazel:${{ secrets.BAZEL_CACHE_KEY }}@bazel-remote-cache.devprod.cloudflare.dev\n+    steps:\n+      - uses: actions/checkout@v4\n+        with:\n+          show-progress: false\n+\n+      - name: Cache\n+        id: cache\n+        uses: actions/cache@v4\n+        with:\n+          path: ~/bazel-disk-cache\n+          key: bazel-disk-cache-benchmarks-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE') }}\n+\n+      - name: Setup Linux\n+        run: |\n+          export DEBIAN_FRONTEND=noninteractive\n+          wget https://apt.llvm.org/llvm.sh\n+          sed -i '/apt-get install/d' llvm.sh\n+          chmod +x llvm.sh\n+          sudo ./llvm.sh 19\n+          # keep in sync with build/ci.bazelrc\n+          sudo apt-get install -y -qq --no-install-recommends clang-19 lld-19 libunwind-19 libc++abi1-19 libc++1-19 libc++-19-dev libclang-rt-19-dev llvm-19\n+          sudo ln -s /usr/bin/llvm-symbolizer-19 /usr/bin/llvm-symbolizer\n+          echo \"build:linux --action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+          echo \"build:linux --host_action_env=CC=/usr/lib/llvm-19/bin/clang\" >> .bazelrc\n+\n+      - name: Build benchmarks\n+        run: |\n+          bazel build ${{ env.BAZEL_ARGS }} //src/workerd/tests:all_benchmarks",
        "comment_created_at": "2025-06-27T13:43:50+00:00",
        "comment_author": "anonrig",
        "comment_body": "Unfortunately not.\r\n\r\n```\r\n# configuration used for performance profiling\r\nbuild:profile --config=thin-lto\r\nbuild:profile --copt=\"-fno-omit-frame-pointer\" --copt=\"-mno-omit-leaf-frame-pointer\"\r\nbuild:profile --config=limited-dbg-info\r\nbuild:profile --strip=never\r\n\r\n# configuration used for performance benchmarking is the same as profiling for consistency\r\nbuild:benchmark --config=profile\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2301704829",
    "pr_number": 4907,
    "pr_file": ".github/workflows/release.yml",
    "created_at": "2025-08-26T17:48:59+00:00",
    "commented_code": "- name: Use Node\n         uses: actions/setup-node@v4\n         with:\n-          node-version: 18\n+          node-version: 20",
    "repo_full_name": "cloudflare/workerd",
    "discussion_comments": [
      {
        "comment_id": "2301704829",
        "repo_full_name": "cloudflare/workerd",
        "pr_number": 4907,
        "pr_file": ".github/workflows/release.yml",
        "discussion_id": "2301704829",
        "commented_code": "@@ -181,7 +181,7 @@ jobs:\n       - name: Use Node\n         uses: actions/setup-node@v4\n         with:\n-          node-version: 18\n+          node-version: 20",
        "comment_created_at": "2025-08-26T17:48:59+00:00",
        "comment_author": "anonrig",
        "comment_body": "Can we use 22 since v22 is LTS now?",
        "pr_file_module": null
      },
      {
        "comment_id": "2304667912",
        "repo_full_name": "cloudflare/workerd",
        "pr_number": 4907,
        "pr_file": ".github/workflows/release.yml",
        "discussion_id": "2301704829",
        "commented_code": "@@ -181,7 +181,7 @@ jobs:\n       - name: Use Node\n         uses: actions/setup-node@v4\n         with:\n-          node-version: 18\n+          node-version: 20",
        "comment_created_at": "2025-08-27T16:52:13+00:00",
        "comment_author": "fhanau",
        "comment_body": "Part of me suspects that 22 will blow up \\*somehow\\* and feels like bumping it two years at a time is enough, but let's find out \ud83d\ude04 ",
        "pr_file_module": null
      }
    ]
  }
]