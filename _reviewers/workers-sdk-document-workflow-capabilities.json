[
  {
    "discussion_id": "2120306913",
    "pr_number": 9104,
    "pr_file": "packages/create-cloudflare/templates/hello-world-workflows/js/src/index.js",
    "created_at": "2025-06-02T07:35:41+00:00",
    "commented_code": "+import { WorkflowEntrypoint } from \"cloudflare:workers\";\n+\n+/**\n+ * @typedef {Object} Env\n+ * // Define your environment variables here\n+ * @property {Worfklow} MY_WORKFLOW\n+ */\n+\n+/**\n+ * @typedef {Object} Params\n+ * @property {string} email\n+ * @property {Record<string, string>} metadata\n+ */\n+\n+export class MyWorkflow extends WorkflowEntrypoint {\n+\t/**\n+\t * @param {Env} env\n+\t */\n+\tconstructor(env) {\n+\t\tthis.env = env;\n+\t}\n+\n+\t/**\n+\t * @param {WorkflowEvent<Params>} event\n+\t * @param {WorkflowStep} step\n+\t */\n+\tasync run(event, step) {",
    "repo_full_name": "cloudflare/workers-sdk",
    "discussion_comments": [
      {
        "comment_id": "2120306913",
        "repo_full_name": "cloudflare/workers-sdk",
        "pr_number": 9104,
        "pr_file": "packages/create-cloudflare/templates/hello-world-workflows/js/src/index.js",
        "discussion_id": "2120306913",
        "commented_code": "@@ -0,0 +1,113 @@\n+import { WorkflowEntrypoint } from \"cloudflare:workers\";\n+\n+/**\n+ * @typedef {Object} Env\n+ * // Define your environment variables here\n+ * @property {Worfklow} MY_WORKFLOW\n+ */\n+\n+/**\n+ * @typedef {Object} Params\n+ * @property {string} email\n+ * @property {Record<string, string>} metadata\n+ */\n+\n+export class MyWorkflow extends WorkflowEntrypoint {\n+\t/**\n+\t * @param {Env} env\n+\t */\n+\tconstructor(env) {\n+\t\tthis.env = env;\n+\t}\n+\n+\t/**\n+\t * @param {WorkflowEvent<Params>} event\n+\t * @param {WorkflowStep} step\n+\t */\n+\tasync run(event, step) {",
        "comment_created_at": "2025-06-02T07:35:41+00:00",
        "comment_author": "jamesopstad",
        "comment_body": "```suggestion\r\n\tasync run(event, step) {\r\n\t\t// Can access bindings on `this.env`\r\n\t\t// Can access params on `event.payload`\r\n\t\t\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2120311378",
    "pr_number": 9104,
    "pr_file": "packages/create-cloudflare/templates/hello-world-workflows/js/src/index.js",
    "created_at": "2025-06-02T07:37:56+00:00",
    "commented_code": "+import { WorkflowEntrypoint } from \"cloudflare:workers\";\n+\n+/**\n+ * @typedef {Object} Env\n+ * // Define your environment variables here\n+ * @property {Worfklow} MY_WORKFLOW\n+ */\n+\n+/**\n+ * @typedef {Object} Params\n+ * @property {string} email\n+ * @property {Record<string, string>} metadata\n+ */\n+\n+export class MyWorkflow extends WorkflowEntrypoint {\n+\t/**\n+\t * @param {Env} env\n+\t */\n+\tconstructor(env) {\n+\t\tthis.env = env;\n+\t}\n+\n+\t/**\n+\t * @param {WorkflowEvent<Params>} event\n+\t * @param {WorkflowStep} step\n+\t */\n+\tasync run(event, step) {\n+\t\tconst files = await step.do(\"my first step\", async () => {\n+\t\t\t// Fetch a list of files from $SOME_SERVICE\n+\t\t\treturn {\n+\t\t\t\tinputParams: event,\n+\t\t\t\tfiles: [\n+\t\t\t\t\t\"doc_7392_rev3.pdf\",\n+\t\t\t\t\t\"report_x29_final.pdf\",\n+\t\t\t\t\t\"memo_2024_05_12.pdf\",\n+\t\t\t\t\t\"file_089_update.pdf\",\n+\t\t\t\t\t\"proj_alpha_v2.pdf\",\n+\t\t\t\t\t\"data_analysis_q2.pdf\",\n+\t\t\t\t\t\"notes_meeting_52.pdf\",\n+\t\t\t\t\t\"summary_fy24_draft.pdf\",\n+\t\t\t\t],\n+\t\t\t};\n+\t\t});\n+",
    "repo_full_name": "cloudflare/workers-sdk",
    "discussion_comments": [
      {
        "comment_id": "2120311378",
        "repo_full_name": "cloudflare/workers-sdk",
        "pr_number": 9104,
        "pr_file": "packages/create-cloudflare/templates/hello-world-workflows/js/src/index.js",
        "discussion_id": "2120311378",
        "commented_code": "@@ -0,0 +1,113 @@\n+import { WorkflowEntrypoint } from \"cloudflare:workers\";\n+\n+/**\n+ * @typedef {Object} Env\n+ * // Define your environment variables here\n+ * @property {Worfklow} MY_WORKFLOW\n+ */\n+\n+/**\n+ * @typedef {Object} Params\n+ * @property {string} email\n+ * @property {Record<string, string>} metadata\n+ */\n+\n+export class MyWorkflow extends WorkflowEntrypoint {\n+\t/**\n+\t * @param {Env} env\n+\t */\n+\tconstructor(env) {\n+\t\tthis.env = env;\n+\t}\n+\n+\t/**\n+\t * @param {WorkflowEvent<Params>} event\n+\t * @param {WorkflowStep} step\n+\t */\n+\tasync run(event, step) {\n+\t\tconst files = await step.do(\"my first step\", async () => {\n+\t\t\t// Fetch a list of files from $SOME_SERVICE\n+\t\t\treturn {\n+\t\t\t\tinputParams: event,\n+\t\t\t\tfiles: [\n+\t\t\t\t\t\"doc_7392_rev3.pdf\",\n+\t\t\t\t\t\"report_x29_final.pdf\",\n+\t\t\t\t\t\"memo_2024_05_12.pdf\",\n+\t\t\t\t\t\"file_089_update.pdf\",\n+\t\t\t\t\t\"proj_alpha_v2.pdf\",\n+\t\t\t\t\t\"data_analysis_q2.pdf\",\n+\t\t\t\t\t\"notes_meeting_52.pdf\",\n+\t\t\t\t\t\"summary_fy24_draft.pdf\",\n+\t\t\t\t],\n+\t\t\t};\n+\t\t});\n+",
        "comment_created_at": "2025-06-02T07:37:56+00:00",
        "comment_author": "jamesopstad",
        "comment_body": "```suggestion\r\n\r\n\t\t// You can optionally have a Workflow wait for additional data,\r\n\t\t// human approval or an external webhook or HTTP request before progressing.\r\n\t\t// You can submit data via HTTP POST to /accounts/{account_id}/workflows/{workflow_name}/instances/{instance_id}/events/{eventName}\r\n```",
        "pr_file_module": null
      }
    ]
  }
]