[
  {
    "discussion_id": "1901291487",
    "pr_number": 7658,
    "pr_file": "packages/create-cloudflare/src/helpers/compatDate.ts",
    "created_at": "2025-01-02T21:52:42+00:00",
    "commented_code": "const match = latestWorkerdVersion.match(/\\d+\\.(\\d{4})(\\d{2})(\\d{2})\\.\\d+/);\n \n \t\tif (match) {\n-\t\t\tconst [, year, month, date] = match ?? [];\n+\t\t\tconst [, year, month, date] = match;",
    "repo_full_name": "cloudflare/workers-sdk",
    "discussion_comments": [
      {
        "comment_id": "1901291487",
        "repo_full_name": "cloudflare/workers-sdk",
        "pr_number": 7658,
        "pr_file": "packages/create-cloudflare/src/helpers/compatDate.ts",
        "discussion_id": "1901291487",
        "commented_code": "@@ -27,7 +27,7 @@ export async function getWorkerdCompatibilityDate() {\n \t\tconst match = latestWorkerdVersion.match(/\\d+\\.(\\d{4})(\\d{2})(\\d{2})\\.\\d+/);\n \n \t\tif (match) {\n-\t\t\tconst [, year, month, date] = match ?? [];\n+\t\t\tconst [, year, month, date] = match;",
        "comment_created_at": "2025-01-02T21:52:42+00:00",
        "comment_author": "dario-piotrowicz",
        "comment_body": "Notice the `if (match)` right above \ud83d\udc46, `match` has to be truthy here",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1758648838",
    "pr_number": 6232,
    "pr_file": "packages/miniflare/src/index.ts",
    "created_at": "2024-09-13T10:52:16+00:00",
    "commented_code": "// Should only define custom service bindings if `service` is a function\n \t\tassert(typeof service === \"function\");\n \t\ttry {\n-\t\t\tconst response = await service(request, this);\n+\t\t\tlet response: UndiciResponse | Response = await service(request, this);\n+\n+\t\t\tif (\n+\t\t\t\tresponse instanceof UndiciResponse &&\n+\t\t\t\t!(response instanceof Response)",
    "repo_full_name": "cloudflare/workers-sdk",
    "discussion_comments": [
      {
        "comment_id": "1758648838",
        "repo_full_name": "cloudflare/workers-sdk",
        "pr_number": 6232,
        "pr_file": "packages/miniflare/src/index.ts",
        "discussion_id": "1758648838",
        "commented_code": "@@ -830,7 +835,15 @@ export class Miniflare {\n \t\t// Should only define custom service bindings if `service` is a function\n \t\tassert(typeof service === \"function\");\n \t\ttry {\n-\t\t\tconst response = await service(request, this);\n+\t\t\tlet response: UndiciResponse | Response = await service(request, this);\n+\n+\t\t\tif (\n+\t\t\t\tresponse instanceof UndiciResponse &&\n+\t\t\t\t!(response instanceof Response)",
        "comment_created_at": "2024-09-13T10:52:16+00:00",
        "comment_author": "petebacondarwin",
        "comment_body": "Is this double check redundant? Could it just be:\r\n\r\n```suggestion\r\n\t\t\t\tresponse instanceof UndiciResponse\r\n```\r\n\r\nor\r\n\r\n```suggestion\r\n\t\t\t\t!(response instanceof Response)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1652257431",
    "pr_number": 6129,
    "pr_file": "packages/vitest-pool-workers/src/worker/lib/mlly.ts",
    "created_at": "2024-06-25T08:33:38+00:00",
    "commented_code": "for (const key in sourceModule) {\n \t\tif (key === \"default\") {\n \t\t\ttry {\n-\t\t\t\tif (!(key in newModule)) {\n+\t\t\t\tif (!(key in (newModule as Record<string, unknown>))) {",
    "repo_full_name": "cloudflare/workers-sdk",
    "discussion_comments": [
      {
        "comment_id": "1652257431",
        "repo_full_name": "cloudflare/workers-sdk",
        "pr_number": 6129,
        "pr_file": "packages/vitest-pool-workers/src/worker/lib/mlly.ts",
        "discussion_id": "1652257431",
        "commented_code": "@@ -16,7 +16,7 @@ export function interopDefault(sourceModule: any): any {\n \tfor (const key in sourceModule) {\n \t\tif (key === \"default\") {\n \t\t\ttry {\n-\t\t\t\tif (!(key in newModule)) {\n+\t\t\t\tif (!(key in (newModule as Record<string, unknown>))) {",
        "comment_created_at": "2024-06-25T08:33:38+00:00",
        "comment_author": "andyjessop",
        "comment_body": "I think you can avoid the type assertions in this file by moving them to the `isObject` function above:\r\n\r\n```\r\nfunction isObject(value: unknown): value is Record<string, unknown> {\r\n\treturn value !== null && typeof value === \"object\";\r\n}\r\n```\r\n\r\nThen add the same check for the `default` object:\r\n\r\n\r\n```\r\nif (\r\n\t\t!isObject(sourceModule) ||\r\n\t\t!(\"default\" in sourceModule) ||\r\n\t\t!isObject(sourceModule.default)\r\n\t) {\r\n\t\treturn sourceModule;\r\n\t}\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "1652937376",
        "repo_full_name": "cloudflare/workers-sdk",
        "pr_number": 6129,
        "pr_file": "packages/vitest-pool-workers/src/worker/lib/mlly.ts",
        "discussion_id": "1652257431",
        "commented_code": "@@ -16,7 +16,7 @@ export function interopDefault(sourceModule: any): any {\n \tfor (const key in sourceModule) {\n \t\tif (key === \"default\") {\n \t\t\ttry {\n-\t\t\t\tif (!(key in newModule)) {\n+\t\t\t\tif (!(key in (newModule as Record<string, unknown>))) {",
        "comment_created_at": "2024-06-25T14:24:19+00:00",
        "comment_author": "threepointone",
        "comment_body": "awesome, thank you!",
        "pr_file_module": null
      }
    ]
  }
]