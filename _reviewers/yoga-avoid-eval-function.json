[
  {
    "discussion_id": "1425425562",
    "pr_number": 1498,
    "pr_file": "gentest/gentest-driver.ts",
    "created_at": "2023-12-13T14:20:50+00:00",
    "commented_code": "+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow strict-local\n+ * @format\n+ */\n+\n+import * as fs from 'node:fs/promises';\n+import {format} from 'node:util';\n+import * as path from 'path';\n+import * as process from 'node:process';\n+import {Builder, logging} from 'selenium-webdriver';\n+import {Options} from 'selenium-webdriver/chrome.js';\n+\n+await (async () => {\n+  const options = new Options();\n+  options.addArguments(\n+    '--force-device-scale-factor=1',\n+    '--window-position=0,0',\n+    '--hide-scrollbars',\n+  );\n+  options.setLoggingPrefs({\n+    browser: 'ALL',\n+    performance: 'ALL',\n+  });\n+  const driver = await new Builder()\n+    .forBrowser('chrome')\n+    .setChromeOptions(options)\n+    .build();\n+\n+  process.chdir(path.dirname(process.argv[1]));\n+\n+  const fixtures = await fs.readdir('./fixtures');\n+  for (const fileName of fixtures) {\n+    const fixture = await fs.readFile('fixtures/' + fileName, 'utf8');\n+    const fileNameNoExtension = path.parse(fileName).name;\n+    console.log('Generate', fileNameNoExtension);\n+\n+    // TODO: replace this with something more robust than just blindly replacing\n+    // start/end in the entire fixture\n+    const ltrFixture = fixture\n+      .replaceAll('start', 'left')\n+      .replaceAll('end', 'right')\n+      .replaceAll('flex-left', 'flex-start')\n+      .replaceAll('flex-right', 'flex-end');\n+\n+    const rtlFixture = fixture\n+      .replaceAll('start', 'right')\n+      .replaceAll('end', 'left')\n+      .replaceAll('flex-right', 'flex-start')\n+      .replaceAll('flex-left', 'flex-end');\n+\n+    const template = await fs.readFile('test-template.html', 'utf8');\n+    const f = await fs.open('test.html', 'w');\n+    await f.write(\n+      format(template, fileNameNoExtension, ltrFixture, rtlFixture, fixture),\n+    );\n+    await f.close();\n+\n+    await driver.get('file://' + process.cwd() + '/test.html');\n+    const logs = await driver.manage().logs().get(logging.Type.BROWSER);\n+\n+    await fs.writeFile(\n+      `../tests/generated/${fileNameNoExtension}.cpp`,\n+      eval(logs[0].message.replace(/^[^\"]*/, '')),",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "1425425562",
        "repo_full_name": "facebook/yoga",
        "pr_number": 1498,
        "pr_file": "gentest/gentest-driver.ts",
        "discussion_id": "1425425562",
        "commented_code": "@@ -0,0 +1,89 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow strict-local\n+ * @format\n+ */\n+\n+import * as fs from 'node:fs/promises';\n+import {format} from 'node:util';\n+import * as path from 'path';\n+import * as process from 'node:process';\n+import {Builder, logging} from 'selenium-webdriver';\n+import {Options} from 'selenium-webdriver/chrome.js';\n+\n+await (async () => {\n+  const options = new Options();\n+  options.addArguments(\n+    '--force-device-scale-factor=1',\n+    '--window-position=0,0',\n+    '--hide-scrollbars',\n+  );\n+  options.setLoggingPrefs({\n+    browser: 'ALL',\n+    performance: 'ALL',\n+  });\n+  const driver = await new Builder()\n+    .forBrowser('chrome')\n+    .setChromeOptions(options)\n+    .build();\n+\n+  process.chdir(path.dirname(process.argv[1]));\n+\n+  const fixtures = await fs.readdir('./fixtures');\n+  for (const fileName of fixtures) {\n+    const fixture = await fs.readFile('fixtures/' + fileName, 'utf8');\n+    const fileNameNoExtension = path.parse(fileName).name;\n+    console.log('Generate', fileNameNoExtension);\n+\n+    // TODO: replace this with something more robust than just blindly replacing\n+    // start/end in the entire fixture\n+    const ltrFixture = fixture\n+      .replaceAll('start', 'left')\n+      .replaceAll('end', 'right')\n+      .replaceAll('flex-left', 'flex-start')\n+      .replaceAll('flex-right', 'flex-end');\n+\n+    const rtlFixture = fixture\n+      .replaceAll('start', 'right')\n+      .replaceAll('end', 'left')\n+      .replaceAll('flex-right', 'flex-start')\n+      .replaceAll('flex-left', 'flex-end');\n+\n+    const template = await fs.readFile('test-template.html', 'utf8');\n+    const f = await fs.open('test.html', 'w');\n+    await f.write(\n+      format(template, fileNameNoExtension, ltrFixture, rtlFixture, fixture),\n+    );\n+    await f.close();\n+\n+    await driver.get('file://' + process.cwd() + '/test.html');\n+    const logs = await driver.manage().logs().get(logging.Type.BROWSER);\n+\n+    await fs.writeFile(\n+      `../tests/generated/${fileNameNoExtension}.cpp`,\n+      eval(logs[0].message.replace(/^[^\"]*/, '')),",
        "comment_created_at": "2023-12-13T14:20:50+00:00",
        "comment_author": "nicoburns",
        "comment_body": "I believe this could use `JSON.parse` instead of `eval` (which would probably be preferable both from a security and code readability perspective?)",
        "pr_file_module": null
      }
    ]
  }
]