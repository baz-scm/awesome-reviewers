[
  {
    "discussion_id": "36955935",
    "pr_number": 109,
    "pr_file": "Gruntfile.js",
    "created_at": "2015-08-13T09:30:57+00:00",
    "commented_code": "'use strict';\n \n module.exports = function(grunt) {\n+  var fs = require('fs');\n+  var path = require('path');\n+  var isWindows = /^win/.test(process.platform);\n \n   require('load-grunt-tasks')(grunt);\n+  grunt.loadNpmTasks('grunt-contrib-concat');\n \n+  // config\n   var config = {\n     libName: 'css-layout',\n     distFolder: 'dist',\n     srcFolder: 'src',\n     testFolder: 'src/__tests__',\n-    cTestFiles: 'src/__tests__/Layout-test.c src/Layout.c src/Layout-test-utils.c',\n-    cTestOutput: 'c_test',\n     javaLibFolder: 'src/java/lib',\n     javaSource: 'src/java/tests/com/facebook/csslayout/*.java',\n     javaTestFiles: 'org.junit.runner.JUnitCore com.facebook.csslayout.LayoutEngineTest com.facebook.csslayout.LayoutCachingTest com.facebook.csslayout.CSSNodeTest'\n   };\n \n+  // Create the dist folder if it doesn't exist. It is deleted by the 'clean' task.\n+  if (!fs.existsSync(config.distFolder)){\n+    fs.mkdirSync(config.distFolder);\n+  }\n+\n+  // C compilation configuration\n+  var cTestClean, cTestCompile, cTestExecute;",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "36955935",
        "repo_full_name": "facebook/yoga",
        "pr_number": 109,
        "pr_file": "Gruntfile.js",
        "discussion_id": "36955935",
        "commented_code": "@@ -1,28 +1,53 @@\n 'use strict';\n \n module.exports = function(grunt) {\n+  var fs = require('fs');\n+  var path = require('path');\n+  var isWindows = /^win/.test(process.platform);\n \n   require('load-grunt-tasks')(grunt);\n+  grunt.loadNpmTasks('grunt-contrib-concat');\n \n+  // config\n   var config = {\n     libName: 'css-layout',\n     distFolder: 'dist',\n     srcFolder: 'src',\n     testFolder: 'src/__tests__',\n-    cTestFiles: 'src/__tests__/Layout-test.c src/Layout.c src/Layout-test-utils.c',\n-    cTestOutput: 'c_test',\n     javaLibFolder: 'src/java/lib',\n     javaSource: 'src/java/tests/com/facebook/csslayout/*.java',\n     javaTestFiles: 'org.junit.runner.JUnitCore com.facebook.csslayout.LayoutEngineTest com.facebook.csslayout.LayoutCachingTest com.facebook.csslayout.CSSNodeTest'\n   };\n \n+  // Create the dist folder if it doesn't exist. It is deleted by the 'clean' task.\n+  if (!fs.existsSync(config.distFolder)){\n+    fs.mkdirSync(config.distFolder);\n+  }\n+\n+  // C compilation configuration\n+  var cTestClean, cTestCompile, cTestExecute;",
        "comment_created_at": "2015-08-13T09:30:57+00:00",
        "comment_author": "ColinEberhardt",
        "comment_body": "rather than defining new variables, can these be added to the 'config' object?\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "36956030",
    "pr_number": 109,
    "pr_file": "Gruntfile.js",
    "created_at": "2015-08-13T09:31:55+00:00",
    "commented_code": "}\n     },\n \n+    concat: {\n+      options: {\n+        separator: '\n',\n+        // Replace all 'use strict' statements in the code with a single one at the top\n+        banner: [\n+          '/*',\n+          ' * #define CSS_LAYOUT_IMPLEMENTATION',\n+          ' * before you include this file in *one* C or C++ file to create the implementation.',\n+          ' */\n'\n+        ].join('\n'),\n+        process: function(src, filepath) {\n+          if (path.extname(filepath) === '.c') {\n+            return [\n+              '#ifdef CSS_LAYOUT_IMPLEMENTATION',\n+              src,\n+              '#endif // CSS_LAYOUT_IMPLEMENTATION'\n+            ].join('\n')\n+          }\n+          else {\n+            return src;\n+          }\n+        },\n+      },\n+      dist: {\n+        src: ['<%= config.srcFolder %>/Layout.h', '<%= config.srcFolder %>/Layout.c'],\n+        dest: '<%= config.distFolder %>/css-layout.h',\n+      },\n+    },\n+\n     shell: {\n       cCompile: {\n-        command: 'gcc -std=c99 -Werror -Wno-padded <%= config.cTestFiles %> -lm -o \"./<%= config.cTestOutput %>\"'\n+        command: cTestCompile\n       },\n       cTestExecute: {\n-        command: './<%= config.cTestOutput %>'\n+        command: cTestExecute\n       },\n       javaCompile: {\n-        command: 'javac -cp <%= config.javaLibFolder %>/junit4.jar:<%= config.javaLibFolder %>/jsr305.jar:<%= config.javaLibFolder %>/infer-annotations-1.4.jar -sourcepath ./src/java/src:./src/java/tests <%= config.javaSource %>'\n+        command: 'javac -cp <%= config.javaLibFolder %>/junit4.jar' +",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "36956030",
        "repo_full_name": "facebook/yoga",
        "pr_number": 109,
        "pr_file": "Gruntfile.js",
        "discussion_id": "36956030",
        "commented_code": "@@ -78,18 +103,56 @@ module.exports = function(grunt) {\n       }\n     },\n \n+    concat: {\n+      options: {\n+        separator: '\\n',\n+        // Replace all 'use strict' statements in the code with a single one at the top\n+        banner: [\n+          '/*',\n+          ' * #define CSS_LAYOUT_IMPLEMENTATION',\n+          ' * before you include this file in *one* C or C++ file to create the implementation.',\n+          ' */\\n'\n+        ].join('\\n'),\n+        process: function(src, filepath) {\n+          if (path.extname(filepath) === '.c') {\n+            return [\n+              '#ifdef CSS_LAYOUT_IMPLEMENTATION',\n+              src,\n+              '#endif // CSS_LAYOUT_IMPLEMENTATION'\n+            ].join('\\n')\n+          }\n+          else {\n+            return src;\n+          }\n+        },\n+      },\n+      dist: {\n+        src: ['<%= config.srcFolder %>/Layout.h', '<%= config.srcFolder %>/Layout.c'],\n+        dest: '<%= config.distFolder %>/css-layout.h',\n+      },\n+    },\n+\n     shell: {\n       cCompile: {\n-        command: 'gcc -std=c99 -Werror -Wno-padded <%= config.cTestFiles %> -lm -o \"./<%= config.cTestOutput %>\"'\n+        command: cTestCompile\n       },\n       cTestExecute: {\n-        command: './<%= config.cTestOutput %>'\n+        command: cTestExecute\n       },\n       javaCompile: {\n-        command: 'javac -cp <%= config.javaLibFolder %>/junit4.jar:<%= config.javaLibFolder %>/jsr305.jar:<%= config.javaLibFolder %>/infer-annotations-1.4.jar -sourcepath ./src/java/src:./src/java/tests <%= config.javaSource %>'\n+        command: 'javac -cp <%= config.javaLibFolder %>/junit4.jar' +",
        "comment_created_at": "2015-08-13T09:31:55+00:00",
        "comment_author": "ColinEberhardt",
        "comment_body": "rather than mixing templates strings and concatenation, can you place `path.delimiter`onto the config object and just use templating?\n",
        "pr_file_module": null
      }
    ]
  }
]