[
  {
    "discussion_id": "162790923",
    "pr_number": 691,
    "pr_file": "YogaKit/Source/YGLayout.m",
    "created_at": "2018-01-20T19:23:24+00:00",
    "commented_code": "topLeft.y + YGNodeLayoutGetHeight(node),\n   };\n \n-  const CGPoint origin = preserveOrigin ? view.frame.origin : CGPointZero;\n-  view.frame = (CGRect) {\n-    .origin = {\n-      .x = YGRoundPixelValue(topLeft.x + origin.x),\n-      .y = YGRoundPixelValue(topLeft.y + origin.y),\n-    },\n+  const CGPoint origin = preserveOrigin ? (CGPoint){\n+    .x = view.center.x - (view.bounds.size.width / 2),\n+    .y = view.center.y - (view.bounds.size.height / 2),\n+  } : CGPointZero;\n+\n+  CGFloat x = topLeft.x + origin.x;\n+  CGFloat y = topLeft.y + origin.y;\n+  CGFloat width = bottomRight.x - topLeft.x;\n+  CGFloat height = bottomRight.y - topLeft.y;\n+\n+  view.center = (CGPoint) {",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "162790923",
        "repo_full_name": "facebook/yoga",
        "pr_number": 691,
        "pr_file": "YogaKit/Source/YGLayout.m",
        "discussion_id": "162790923",
        "commented_code": "@@ -451,15 +451,26 @@ static void YGApplyLayoutToViewHierarchy(UIView *view, BOOL preserveOrigin)\n     topLeft.y + YGNodeLayoutGetHeight(node),\n   };\n \n-  const CGPoint origin = preserveOrigin ? view.frame.origin : CGPointZero;\n-  view.frame = (CGRect) {\n-    .origin = {\n-      .x = YGRoundPixelValue(topLeft.x + origin.x),\n-      .y = YGRoundPixelValue(topLeft.y + origin.y),\n-    },\n+  const CGPoint origin = preserveOrigin ? (CGPoint){\n+    .x = view.center.x - (view.bounds.size.width / 2),\n+    .y = view.center.y - (view.bounds.size.height / 2),\n+  } : CGPointZero;\n+\n+  CGFloat x = topLeft.x + origin.x;\n+  CGFloat y = topLeft.y + origin.y;\n+  CGFloat width = bottomRight.x - topLeft.x;\n+  CGFloat height = bottomRight.y - topLeft.y;\n+\n+  view.center = (CGPoint) {",
        "comment_created_at": "2018-01-20T19:23:24+00:00",
        "comment_author": "lucdion",
        "comment_body": "Hi @lelandrichardson, to handle correctly the view's layer.anchorPoint and to keep the view's bounds.origin, you should update your code to something like that. This thing is little tricky. UIScrollView's bounds.origin is not .zero when a contentOffset is set.\r\n\r\n``` \r\n// NOTE: The center is offset by the layer.anchorPoint, so we have to take it into account.\r\n    view.center = (CGPoint) {\r\n        .x = YGRoundPixelValue(x + (width * view.layer.anchorPoint.x)),\r\n        .y = YGRoundPixelValue(y + (height * view.layer.anchorPoint.y)),\r\n    };\r\n\r\n    // NOTE: We must set only the bounds' size and keep the origin.\r\n    view.bounds = (CGRect) {\r\n        .origin = view.bounds.origin,\r\n        .size = {\r\n            .width = YGRoundPixelValue(width),\r\n            .height = YGRoundPixelValue(height),\r\n        },\r\n    };\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "109019431",
    "pr_number": 390,
    "pr_file": "YogaKit/Source/YGLayout.m",
    "created_at": "2017-03-30T19:46:19+00:00",
    "commented_code": "YGNodeStyleSet##capitalized_name(self.node, lowercased_name); \\\n }\n \n-#define YG_VALUE_PROPERTY(lowercased_name, capitalized_name)    \\\n-- (CGFloat)lowercased_name                                      \\\n-{                                                               \\\n-  YGValue value = YGNodeStyleGet##capitalized_name(self.node);  \\\n-  if (value.unit == YGUnitPoint) {                              \\\n-    return value.value;                                         \\\n-  } else {                                                      \\\n-    return YGUndefined;                                         \\\n-  }                                                             \\\n-}                                                               \\\n-                                                                \\\n-- (void)set##capitalized_name:(CGFloat)lowercased_name          \\\n-{                                                               \\\n-  YGNodeStyleSet##capitalized_name(self.node, lowercased_name); \\\n+#define YG_VALUE_PROPERTY(lowercased_name, capitalized_name)                       \\",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "109019431",
        "repo_full_name": "facebook/yoga",
        "pr_number": 390,
        "pr_file": "YogaKit/Source/YGLayout.m",
        "discussion_id": "109019431",
        "commented_code": "@@ -21,26 +21,30 @@ - (void)set##capitalized_name:(type)lowercased_name             \\\n   YGNodeStyleSet##capitalized_name(self.node, lowercased_name); \\\n }\n \n-#define YG_VALUE_PROPERTY(lowercased_name, capitalized_name)    \\\n-- (CGFloat)lowercased_name                                      \\\n-{                                                               \\\n-  YGValue value = YGNodeStyleGet##capitalized_name(self.node);  \\\n-  if (value.unit == YGUnitPoint) {                              \\\n-    return value.value;                                         \\\n-  } else {                                                      \\\n-    return YGUndefined;                                         \\\n-  }                                                             \\\n-}                                                               \\\n-                                                                \\\n-- (void)set##capitalized_name:(CGFloat)lowercased_name          \\\n-{                                                               \\\n-  YGNodeStyleSet##capitalized_name(self.node, lowercased_name); \\\n+#define YG_VALUE_PROPERTY(lowercased_name, capitalized_name)                       \\",
        "comment_created_at": "2017-03-30T19:46:19+00:00",
        "comment_author": "d16r",
        "comment_body": "Once this lands, I really want to remove these defines. It might be a bit of extra code, but I'd rather try and use function pointers instead of this.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "94950952",
    "pr_number": 322,
    "pr_file": "YogaKit/YGLayout.m",
    "created_at": "2017-01-06T14:17:47+00:00",
    "commented_code": "+/**\n+ * Copyright (c) 2014-present, Facebook, Inc.\n+ * All rights reserved.\n+ *\n+ * This source code is licensed under the BSD-style license found in the\n+ * LICENSE file in the root directory of this source tree. An additional grant\n+ * of patent rights can be found in the PATENTS file in the same directory.\n+ */\n+\n+#import \"YGLayout+Private.h\"\n+#import \"UIView+Yoga.h\"\n+#import <yoga/Yoga.h>\n+\n+#define YG_STYLE_PROPERTY_IMPL(type, lowercased_name, capitalized_name) \\\n+- (type)lowercased_name                                                 \\\n+{                                                                       \\\n+  return YGNodeStyleGet##capitalized_name(self.node);                   \\\n+}                                                                       \\\n+                                                                        \\\n+- (void)set##capitalized_name:(type)lowercased_name                     \\\n+{                                                                       \\\n+  YGNodeStyleSet##capitalized_name(self.node, lowercased_name);         \\\n+}\n+\n+#define YG_STYLE_EDGE_PROPERTY_IMPL(lowercased_name, capitalized_name, property, edge) \\\n+- (CGFloat)lowercased_name {                                                           \\\n+  return YGNodeStyleGet##property(self.node, edge);                                    \\\n+}                                                                                      \\\n+                                                                                       \\\n+- (void)set##capitalized_name:(CGFloat)lowercased_name {                               \\\n+  YGNodeStyleSet##property(self.node, edge, lowercased_name);                          \\\n+}\n+\n+#define YG_STYLE_VALUE_PROPERTY_IMPL(lowercased_name, capitalized_name) \\\n+- (CGFloat)lowercased_name                                              \\\n+{                                                                       \\\n+  YGValue value = YGNodeStyleGet##capitalized_name(self.node);          \\\n+  if (value.unit == YGUnitPixel) {                                      \\\n+    return value.value;                                                 \\\n+  } else {                                                              \\\n+    return YGUndefined;                                                 \\\n+  }                                                                     \\\n+}                                                                       \\\n+                                                                        \\\n+- (void)set##capitalized_name:(CGFloat)lowercased_name                  \\\n+{                                                                       \\\n+  YGNodeStyleSet##capitalized_name(self.node, lowercased_name);         \\\n+}\n+\n+#define YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, edge, edge_suffix) \\\n+- (CGFloat)lowercased_name##edge_suffix                                                        \\\n+{                                                                                              \\\n+  YGValue value = YGNodeStyleGet##capitalized_name(self.node, edge);                           \\\n+  if (value.unit == YGUnitPixel) {                                                             \\\n+    return value.value;                                                                        \\\n+  } else {                                                                                     \\\n+    return YGUndefined;                                                                        \\\n+  }                                                                                            \\\n+}                                                                                              \\\n+                                                                                               \\\n+- (void)set##capitalized_name##edge_suffix:(CGFloat)lowercased_name                            \\\n+{                                                                                              \\\n+  YGNodeStyleSet##capitalized_name(self.node, edge, lowercased_name);                          \\\n+}\n+\n+#define YG_STYLE_ALL_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name)                   \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeLeft, Left)             \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeTop, Top)               \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeRight, Right)           \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeBottom, Bottom)         \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeStart, Start)           \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeEnd, End)               \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeHorizontal, Horizontal) \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeVertical, Vertical)     \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeAll, )\n+\n+@interface YGLayout ()\n+\n+@property (nonatomic, weak, readonly) UIView *view;\n+@property (nonatomic, assign, readonly) YGNodeRef node;\n+\n+@end\n+\n+@implementation YGLayout\n+\n+@synthesize isEnabled=_isEnabled;\n+@synthesize isIncludedInLayout=_isIncludedInLayout;\n+\n++ (void)initialize\n+{\n+  YGSetExperimentalFeatureEnabled(YGExperimentalFeatureWebFlexBasis, true);\n+}\n+\n+- (instancetype)initWithView:(UIView*)view\n+{\n+  if ([super init]) {",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "94950952",
        "repo_full_name": "facebook/yoga",
        "pr_number": 322,
        "pr_file": "YogaKit/YGLayout.m",
        "discussion_id": "94950952",
        "commented_code": "@@ -0,0 +1,380 @@\n+/**\n+ * Copyright (c) 2014-present, Facebook, Inc.\n+ * All rights reserved.\n+ *\n+ * This source code is licensed under the BSD-style license found in the\n+ * LICENSE file in the root directory of this source tree. An additional grant\n+ * of patent rights can be found in the PATENTS file in the same directory.\n+ */\n+\n+#import \"YGLayout+Private.h\"\n+#import \"UIView+Yoga.h\"\n+#import <yoga/Yoga.h>\n+\n+#define YG_STYLE_PROPERTY_IMPL(type, lowercased_name, capitalized_name) \\\n+- (type)lowercased_name                                                 \\\n+{                                                                       \\\n+  return YGNodeStyleGet##capitalized_name(self.node);                   \\\n+}                                                                       \\\n+                                                                        \\\n+- (void)set##capitalized_name:(type)lowercased_name                     \\\n+{                                                                       \\\n+  YGNodeStyleSet##capitalized_name(self.node, lowercased_name);         \\\n+}\n+\n+#define YG_STYLE_EDGE_PROPERTY_IMPL(lowercased_name, capitalized_name, property, edge) \\\n+- (CGFloat)lowercased_name {                                                           \\\n+  return YGNodeStyleGet##property(self.node, edge);                                    \\\n+}                                                                                      \\\n+                                                                                       \\\n+- (void)set##capitalized_name:(CGFloat)lowercased_name {                               \\\n+  YGNodeStyleSet##property(self.node, edge, lowercased_name);                          \\\n+}\n+\n+#define YG_STYLE_VALUE_PROPERTY_IMPL(lowercased_name, capitalized_name) \\\n+- (CGFloat)lowercased_name                                              \\\n+{                                                                       \\\n+  YGValue value = YGNodeStyleGet##capitalized_name(self.node);          \\\n+  if (value.unit == YGUnitPixel) {                                      \\\n+    return value.value;                                                 \\\n+  } else {                                                              \\\n+    return YGUndefined;                                                 \\\n+  }                                                                     \\\n+}                                                                       \\\n+                                                                        \\\n+- (void)set##capitalized_name:(CGFloat)lowercased_name                  \\\n+{                                                                       \\\n+  YGNodeStyleSet##capitalized_name(self.node, lowercased_name);         \\\n+}\n+\n+#define YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, edge, edge_suffix) \\\n+- (CGFloat)lowercased_name##edge_suffix                                                        \\\n+{                                                                                              \\\n+  YGValue value = YGNodeStyleGet##capitalized_name(self.node, edge);                           \\\n+  if (value.unit == YGUnitPixel) {                                                             \\\n+    return value.value;                                                                        \\\n+  } else {                                                                                     \\\n+    return YGUndefined;                                                                        \\\n+  }                                                                                            \\\n+}                                                                                              \\\n+                                                                                               \\\n+- (void)set##capitalized_name##edge_suffix:(CGFloat)lowercased_name                            \\\n+{                                                                                              \\\n+  YGNodeStyleSet##capitalized_name(self.node, edge, lowercased_name);                          \\\n+}\n+\n+#define YG_STYLE_ALL_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name)                   \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeLeft, Left)             \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeTop, Top)               \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeRight, Right)           \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeBottom, Bottom)         \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeStart, Start)           \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeEnd, End)               \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeHorizontal, Horizontal) \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeVertical, Vertical)     \\\n+YG_STYLE_EDGE_PROPERTY_UNIT_IMPL(lowercased_name, capitalized_name, YGEdgeAll, )\n+\n+@interface YGLayout ()\n+\n+@property (nonatomic, weak, readonly) UIView *view;\n+@property (nonatomic, assign, readonly) YGNodeRef node;\n+\n+@end\n+\n+@implementation YGLayout\n+\n+@synthesize isEnabled=_isEnabled;\n+@synthesize isIncludedInLayout=_isIncludedInLayout;\n+\n++ (void)initialize\n+{\n+  YGSetExperimentalFeatureEnabled(YGExperimentalFeatureWebFlexBasis, true);\n+}\n+\n+- (instancetype)initWithView:(UIView*)view\n+{\n+  if ([super init]) {",
        "comment_created_at": "2017-01-06T14:17:47+00:00",
        "comment_author": "d16r",
        "comment_body": "Nit, we should be assigning this to `self`, i.e.\r\n\r\n`self = [super init]`\r\n\r\nI know this isn't *technically* required, but I think it's good to keep the standard. More about that here: https://www.cocoawithlove.com/2009/04/what-does-it-mean-when-you-assign-super.html",
        "pr_file_module": null
      }
    ]
  }
]