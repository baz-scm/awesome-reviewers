[
  {
    "discussion_id": "245450888",
    "pr_number": 791,
    "pr_file": "yoga/YGNode.h",
    "created_at": "2019-01-04T23:44:21+00:00",
    "commented_code": "bool isNodeFlexible();\n   bool didUseLegacyFlag();\n   bool isLayoutTreeEqualToNode(const YGNode& node) const;\n+\n+private:\n+  YGNodeRef pRoot = nullptr;\n+\n+public:\n+  uint32_t  gCurrentGenerationCount = 0;",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "245450888",
        "repo_full_name": "facebook/yoga",
        "pr_number": 791,
        "pr_file": "yoga/YGNode.h",
        "discussion_id": "245450888",
        "commented_code": "@@ -270,4 +270,13 @@ struct YGNode {\n   bool isNodeFlexible();\n   bool didUseLegacyFlag();\n   bool isLayoutTreeEqualToNode(const YGNode& node) const;\n+\n+private:\n+  YGNodeRef pRoot = nullptr;\n+\n+public:\n+  uint32_t  gCurrentGenerationCount = 0;",
        "comment_created_at": "2019-01-04T23:44:21+00:00",
        "comment_author": "jpap",
        "comment_body": "We can probably reduce the storage here to just 16-bits (`uint16_t`), saving 2 bytes overhead per node here, and in `YGLayout` (saving another 4 bytes).  Do we really need to track more than 65,535 generations?\r\n\r\nSince this is now a member, we probably shouldn't use the \"g\" (global) prefix.  It might also be a good idea to make it private, with inlined access via:\r\n* void incrementGeneration() { this.generation++ }\r\n* bool isEqualToGeneration(uint16_t g) { return g == this.generation }",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "102561719",
    "pr_number": 432,
    "pr_file": "yoga/Yoga.h",
    "created_at": "2017-02-22T20:15:24+00:00",
    "commented_code": "WIN_EXPORT void YGSetLogger(YGLogger logger);\n WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n \n-WIN_EXPORT void YGSetExperimentalFeatureEnabled(YGExperimentalFeature feature, bool enabled);\n-WIN_EXPORT bool YGIsExperimentalFeatureEnabled(YGExperimentalFeature feature);\n+// YGConfig\n+WIN_EXPORT YGConfigRef YGConfigNew(void);\n+WIN_EXPORT void YGConfigFree(const YGConfigRef config);\n+\n+WIN_EXPORT void YGSetExperimentalFeatureEnabled(YGConfigRef config,",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "102561719",
        "repo_full_name": "facebook/yoga",
        "pr_number": 432,
        "pr_file": "yoga/Yoga.h",
        "discussion_id": "102561719",
        "commented_code": "@@ -219,8 +226,15 @@ YG_NODE_LAYOUT_EDGE_PROPERTY(float, Padding);\n WIN_EXPORT void YGSetLogger(YGLogger logger);\n WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n \n-WIN_EXPORT void YGSetExperimentalFeatureEnabled(YGExperimentalFeature feature, bool enabled);\n-WIN_EXPORT bool YGIsExperimentalFeatureEnabled(YGExperimentalFeature feature);\n+// YGConfig\n+WIN_EXPORT YGConfigRef YGConfigNew(void);\n+WIN_EXPORT void YGConfigFree(const YGConfigRef config);\n+\n+WIN_EXPORT void YGSetExperimentalFeatureEnabled(YGConfigRef config,",
        "comment_created_at": "2017-02-22T20:15:24+00:00",
        "comment_author": "emilsjolander",
        "comment_body": "const for params please",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "102663886",
    "pr_number": 432,
    "pr_file": "yoga/Yoga.h",
    "created_at": "2017-02-23T08:48:55+00:00",
    "commented_code": "WIN_EXPORT void YGSetLogger(YGLogger logger);\n WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n \n-WIN_EXPORT void YGSetExperimentalFeatureEnabled(YGExperimentalFeature feature, bool enabled);\n-WIN_EXPORT bool YGIsExperimentalFeatureEnabled(YGExperimentalFeature feature);\n+// YGConfig\n+WIN_EXPORT YGConfigRef YGConfigNew(void);\n+WIN_EXPORT void YGConfigFree(const YGConfigRef config);\n+\n+WIN_EXPORT void YGSetExperimentalFeatureEnabled(const YGConfigRef config,\n+                                                YGExperimentalFeature feature,",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "102663886",
        "repo_full_name": "facebook/yoga",
        "pr_number": 432,
        "pr_file": "yoga/Yoga.h",
        "discussion_id": "102663886",
        "commented_code": "@@ -219,8 +226,15 @@ YG_NODE_LAYOUT_EDGE_PROPERTY(float, Padding);\n WIN_EXPORT void YGSetLogger(YGLogger logger);\n WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n \n-WIN_EXPORT void YGSetExperimentalFeatureEnabled(YGExperimentalFeature feature, bool enabled);\n-WIN_EXPORT bool YGIsExperimentalFeatureEnabled(YGExperimentalFeature feature);\n+// YGConfig\n+WIN_EXPORT YGConfigRef YGConfigNew(void);\n+WIN_EXPORT void YGConfigFree(const YGConfigRef config);\n+\n+WIN_EXPORT void YGSetExperimentalFeatureEnabled(const YGConfigRef config,\n+                                                YGExperimentalFeature feature,",
        "comment_created_at": "2017-02-23T08:48:55+00:00",
        "comment_author": "emilsjolander",
        "comment_body": "feature and enabled const please :)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "93280281",
    "pr_number": 289,
    "pr_file": "YogaKit/YKLayout.h",
    "created_at": "2016-12-20T17:02:54+00:00",
    "commented_code": "+/**\n+ * Copyright (c) 2014-present, Facebook, Inc.\n+ * All rights reserved.\n+ *\n+ * This source code is licensed under the BSD-style license found in the\n+ * LICENSE file in the root directory of this source tree. An additional grant\n+ * of patent rights can be found in the PATENTS file in the same directory.\n+ */\n+\n+#import \"YKEnums.h\"\n+\n+@interface YKLayout : NSObject\n+\n+/**\n+ The property that decides if we should include this view when calculating layout. Defaults to YES.\n+ */\n+@property (nonatomic, setter=setIncluded:) BOOL isIncluded;\n+\n+/**\n+ The property that decides during layout/sizing whether or not yk_* properties should be applied. Defaults to NO.\n+ */\n+@property (nonatomic, setter=setEnabled:) BOOL isEnabled;\n+\n+@property (nonatomic) YKDirection direction;\n+@property (nonatomic) YKFlexDirection flexDirection;\n+@property (nonatomic) YKJustify justifyContent;\n+@property (nonatomic) YKAlign alignContent;\n+@property (nonatomic) YKAlign alignItems;\n+@property (nonatomic) YKAlign alignSelf;\n+@property (nonatomic) YKPositionType positionType;\n+@property (nonatomic) YKWrap flexWrap;\n+\n+@property (nonatomic) CGFloat flexGrow;\n+@property (nonatomic) CGFloat flexShrink;\n+@property (nonatomic) CGFloat flexBasis;\n+\n+@property (nonatomic) CGFloat positionLeft;\n+@property (nonatomic) CGFloat positionTop;\n+@property (nonatomic) CGFloat positionRight;\n+@property (nonatomic) CGFloat positionBottom;\n+@property (nonatomic) CGFloat positionStart;\n+@property (nonatomic) CGFloat positionEnd;\n+@property (nonatomic) CGFloat positionHorizontal;\n+@property (nonatomic) CGFloat positionVertical;\n+@property (nonatomic) CGFloat positionAll;\n+\n+@property (nonatomic) CGFloat marginLeft;\n+@property (nonatomic) CGFloat marginTop;\n+@property (nonatomic) CGFloat marginRight;\n+@property (nonatomic) CGFloat marginBottom;\n+@property (nonatomic) CGFloat marginStart;\n+@property (nonatomic) CGFloat marginEnd;\n+@property (nonatomic) CGFloat marginHorizontal;\n+@property (nonatomic) CGFloat marginVertical;\n+@property (nonatomic) CGFloat marginAll;\n+\n+@property (nonatomic) CGFloat paddingLeft;\n+@property (nonatomic) CGFloat paddingTop;\n+@property (nonatomic) CGFloat paddingRight;\n+@property (nonatomic) CGFloat paddingBottom;\n+@property (nonatomic) CGFloat paddingStart;",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "93280281",
        "repo_full_name": "facebook/yoga",
        "pr_number": 289,
        "pr_file": "YogaKit/YKLayout.h",
        "discussion_id": "93280281",
        "commented_code": "@@ -0,0 +1,97 @@\n+/**\n+ * Copyright (c) 2014-present, Facebook, Inc.\n+ * All rights reserved.\n+ *\n+ * This source code is licensed under the BSD-style license found in the\n+ * LICENSE file in the root directory of this source tree. An additional grant\n+ * of patent rights can be found in the PATENTS file in the same directory.\n+ */\n+\n+#import \"YKEnums.h\"\n+\n+@interface YKLayout : NSObject\n+\n+/**\n+ The property that decides if we should include this view when calculating layout. Defaults to YES.\n+ */\n+@property (nonatomic, setter=setIncluded:) BOOL isIncluded;\n+\n+/**\n+ The property that decides during layout/sizing whether or not yk_* properties should be applied. Defaults to NO.\n+ */\n+@property (nonatomic, setter=setEnabled:) BOOL isEnabled;\n+\n+@property (nonatomic) YKDirection direction;\n+@property (nonatomic) YKFlexDirection flexDirection;\n+@property (nonatomic) YKJustify justifyContent;\n+@property (nonatomic) YKAlign alignContent;\n+@property (nonatomic) YKAlign alignItems;\n+@property (nonatomic) YKAlign alignSelf;\n+@property (nonatomic) YKPositionType positionType;\n+@property (nonatomic) YKWrap flexWrap;\n+\n+@property (nonatomic) CGFloat flexGrow;\n+@property (nonatomic) CGFloat flexShrink;\n+@property (nonatomic) CGFloat flexBasis;\n+\n+@property (nonatomic) CGFloat positionLeft;\n+@property (nonatomic) CGFloat positionTop;\n+@property (nonatomic) CGFloat positionRight;\n+@property (nonatomic) CGFloat positionBottom;\n+@property (nonatomic) CGFloat positionStart;\n+@property (nonatomic) CGFloat positionEnd;\n+@property (nonatomic) CGFloat positionHorizontal;\n+@property (nonatomic) CGFloat positionVertical;\n+@property (nonatomic) CGFloat positionAll;\n+\n+@property (nonatomic) CGFloat marginLeft;\n+@property (nonatomic) CGFloat marginTop;\n+@property (nonatomic) CGFloat marginRight;\n+@property (nonatomic) CGFloat marginBottom;\n+@property (nonatomic) CGFloat marginStart;\n+@property (nonatomic) CGFloat marginEnd;\n+@property (nonatomic) CGFloat marginHorizontal;\n+@property (nonatomic) CGFloat marginVertical;\n+@property (nonatomic) CGFloat marginAll;\n+\n+@property (nonatomic) CGFloat paddingLeft;\n+@property (nonatomic) CGFloat paddingTop;\n+@property (nonatomic) CGFloat paddingRight;\n+@property (nonatomic) CGFloat paddingBottom;\n+@property (nonatomic) CGFloat paddingStart;",
        "comment_created_at": "2016-12-20T17:02:54+00:00",
        "comment_author": "d16r",
        "comment_body": "nit across the board, can we explicity add all the properties? i.e.\r\n\r\n```\r\n@property (nonatomic, readwrite, assign) ...\r\n```",
        "pr_file_module": null
      },
      {
        "comment_id": "93324245",
        "repo_full_name": "facebook/yoga",
        "pr_number": 289,
        "pr_file": "YogaKit/YKLayout.h",
        "discussion_id": "93280281",
        "commented_code": "@@ -0,0 +1,97 @@\n+/**\n+ * Copyright (c) 2014-present, Facebook, Inc.\n+ * All rights reserved.\n+ *\n+ * This source code is licensed under the BSD-style license found in the\n+ * LICENSE file in the root directory of this source tree. An additional grant\n+ * of patent rights can be found in the PATENTS file in the same directory.\n+ */\n+\n+#import \"YKEnums.h\"\n+\n+@interface YKLayout : NSObject\n+\n+/**\n+ The property that decides if we should include this view when calculating layout. Defaults to YES.\n+ */\n+@property (nonatomic, setter=setIncluded:) BOOL isIncluded;\n+\n+/**\n+ The property that decides during layout/sizing whether or not yk_* properties should be applied. Defaults to NO.\n+ */\n+@property (nonatomic, setter=setEnabled:) BOOL isEnabled;\n+\n+@property (nonatomic) YKDirection direction;\n+@property (nonatomic) YKFlexDirection flexDirection;\n+@property (nonatomic) YKJustify justifyContent;\n+@property (nonatomic) YKAlign alignContent;\n+@property (nonatomic) YKAlign alignItems;\n+@property (nonatomic) YKAlign alignSelf;\n+@property (nonatomic) YKPositionType positionType;\n+@property (nonatomic) YKWrap flexWrap;\n+\n+@property (nonatomic) CGFloat flexGrow;\n+@property (nonatomic) CGFloat flexShrink;\n+@property (nonatomic) CGFloat flexBasis;\n+\n+@property (nonatomic) CGFloat positionLeft;\n+@property (nonatomic) CGFloat positionTop;\n+@property (nonatomic) CGFloat positionRight;\n+@property (nonatomic) CGFloat positionBottom;\n+@property (nonatomic) CGFloat positionStart;\n+@property (nonatomic) CGFloat positionEnd;\n+@property (nonatomic) CGFloat positionHorizontal;\n+@property (nonatomic) CGFloat positionVertical;\n+@property (nonatomic) CGFloat positionAll;\n+\n+@property (nonatomic) CGFloat marginLeft;\n+@property (nonatomic) CGFloat marginTop;\n+@property (nonatomic) CGFloat marginRight;\n+@property (nonatomic) CGFloat marginBottom;\n+@property (nonatomic) CGFloat marginStart;\n+@property (nonatomic) CGFloat marginEnd;\n+@property (nonatomic) CGFloat marginHorizontal;\n+@property (nonatomic) CGFloat marginVertical;\n+@property (nonatomic) CGFloat marginAll;\n+\n+@property (nonatomic) CGFloat paddingLeft;\n+@property (nonatomic) CGFloat paddingTop;\n+@property (nonatomic) CGFloat paddingRight;\n+@property (nonatomic) CGFloat paddingBottom;\n+@property (nonatomic) CGFloat paddingStart;",
        "comment_created_at": "2016-12-20T21:00:55+00:00",
        "comment_author": "hartbit",
        "comment_body": "Sure!",
        "pr_file_module": null
      }
    ]
  }
]