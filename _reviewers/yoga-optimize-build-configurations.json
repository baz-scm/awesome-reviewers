[
  {
    "discussion_id": "1982231182",
    "pr_number": 1793,
    "pr_file": "javascript/CMakeLists.txt",
    "created_at": "2025-03-05T21:45:01+00:00",
    "commented_code": "\"SHELL:-s EXPORT_ES6=1\"\n     \"SHELL:-s WASM=1\"\n     \"SHELL:-s TEXTDECODER=0\"\n-    # SINGLE_FILE=1 combined with ENVIRONMENT='web' creates code that works on\n-    # both bundlders and Node.\n-    \"SHELL:-s SINGLE_FILE=1\"\n     \"SHELL:-s ENVIRONMENT='web'\")\n \n-link_libraries(embind)\n+add_executable(yoga-wasm-separate-esm $<TARGET_OBJECTS:yogaObjLib>)\n \n-add_library(yogaObjLib OBJECT ${SOURCES})\n-\n-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/binaries)\n+add_link_options(\n+    ${COMPILE_OPTIONS}\n+    \"SHELL:--closure 1\"\n+    \"SHELL:--memory-init-file 0\"\n+    \"SHELL:--no-entry\"\n+    \"SHELL:-s ALLOW_MEMORY_GROWTH=1\"\n+    \"SHELL:-s ASSERTIONS=0\"\n+    \"SHELL:-s DYNAMIC_EXECUTION=0\"",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "1982231182",
        "repo_full_name": "facebook/yoga",
        "pr_number": 1793,
        "pr_file": "javascript/CMakeLists.txt",
        "discussion_id": "1982231182",
        "commented_code": "@@ -45,15 +51,27 @@ add_link_options(\n     \"SHELL:-s EXPORT_ES6=1\"\n     \"SHELL:-s WASM=1\"\n     \"SHELL:-s TEXTDECODER=0\"\n-    # SINGLE_FILE=1 combined with ENVIRONMENT='web' creates code that works on\n-    # both bundlders and Node.\n-    \"SHELL:-s SINGLE_FILE=1\"\n     \"SHELL:-s ENVIRONMENT='web'\")\n \n-link_libraries(embind)\n+add_executable(yoga-wasm-separate-esm $<TARGET_OBJECTS:yogaObjLib>)\n \n-add_library(yogaObjLib OBJECT ${SOURCES})\n-\n-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/binaries)\n+add_link_options(\n+    ${COMPILE_OPTIONS}\n+    \"SHELL:--closure 1\"\n+    \"SHELL:--memory-init-file 0\"\n+    \"SHELL:--no-entry\"\n+    \"SHELL:-s ALLOW_MEMORY_GROWTH=1\"\n+    \"SHELL:-s ASSERTIONS=0\"\n+    \"SHELL:-s DYNAMIC_EXECUTION=0\"",
        "comment_created_at": "2025-03-05T21:45:01+00:00",
        "comment_author": "NickGerleman",
        "comment_body": "From what I learned in the other threads, `DYNAMIC_EXECUTION=0` might be making the bindings quite a bit slower, if we still end up using it anyways.\r\n\r\nMight be worth removing this argument from the base64 variant, or seeing what happens if we add `EMBIND_AOT` to both (might require bumping emsdk here https://github.com/facebook/yoga/blob/1b7d2c8d48e83fb136eccc5215faeb8d54da9c3e/javascript/just.config.cjs#L140)",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1063950499",
    "pr_number": 1207,
    "pr_file": "csharp/Yoga/CMakeLists.txt",
    "created_at": "2023-01-07T04:20:17+00:00",
    "commented_code": "+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+cmake_minimum_required(VERSION 3.4.1)\n+\n+project(yoga)\n+\n+set(CMAKE_VERBOSE_MAKEFILE on)\n+\n+# configure import libs\n+add_compile_definitions($<$<CONFIG:Debug>:DEBUG>)\n+if (MSVC)\n+    add_compile_definitions(_WINDLL)\n+endif()\n+\n+set(yogacore_DIR ${CMAKE_SOURCE_DIR}/../.. yogacore)\n+set(build_DIR ${CMAKE_SOURCE_DIR}/build)\n+\n+file(MAKE_DIRECTORY ${build_DIR})\n+\n+add_subdirectory(${yogacore_DIR})\n+\n+if (MSVC)\n+    add_compile_options(\n+        # Don't omit frame pointers (e.g. for crash dumps)\n+        /Oy-\n+        # \"Standard C++ exception handling\" (C++ stack unwinding including extern c)\n+        /EHsc\n+        # Enable warnings and warnings as errors\n+        /W3\n+        /WX\n+        # Disable RTTI\n+        $<$<COMPILE_LANGUAGE:CXX>:/GR->\n+        # Use /O2 (Maximize Speed)\n+        $<$<CONFIG:RELEASE>:/O2>)\n+else()\n+    add_compile_options(\n+        -fno-omit-frame-pointer\n+        -fexceptions\n+        -fvisibility=hidden\n+        -ffunction-sections\n+        -fdata-sections\n+        -Wall\n+        -std=c++11)\n+endif()\n+\n+set(SOURCES YGInterop.cpp)\n+\n+if (MSVC)\n+    list(APPEND SOURCES Yoga.rc)\n+endif()\n+\n+file(GLOB yogajni_version_script\n+        yogajni.version)\n+\n+add_library(yoga SHARED ${SOURCES})\n+\n+target_include_directories(yoga PRIVATE\n+    ${yogacore_DIR})\n+\n+target_link_libraries(yoga yogacore)\n+\n+if (NOT MSVC)\n+    target_link_libraries(yoga -Wl,--gc-sections)",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "1063950499",
        "repo_full_name": "facebook/yoga",
        "pr_number": 1207,
        "pr_file": "csharp/Yoga/CMakeLists.txt",
        "discussion_id": "1063950499",
        "commented_code": "@@ -0,0 +1,69 @@\n+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+cmake_minimum_required(VERSION 3.4.1)\n+\n+project(yoga)\n+\n+set(CMAKE_VERBOSE_MAKEFILE on)\n+\n+# configure import libs\n+add_compile_definitions($<$<CONFIG:Debug>:DEBUG>)\n+if (MSVC)\n+    add_compile_definitions(_WINDLL)\n+endif()\n+\n+set(yogacore_DIR ${CMAKE_SOURCE_DIR}/../.. yogacore)\n+set(build_DIR ${CMAKE_SOURCE_DIR}/build)\n+\n+file(MAKE_DIRECTORY ${build_DIR})\n+\n+add_subdirectory(${yogacore_DIR})\n+\n+if (MSVC)\n+    add_compile_options(\n+        # Don't omit frame pointers (e.g. for crash dumps)\n+        /Oy-\n+        # \"Standard C++ exception handling\" (C++ stack unwinding including extern c)\n+        /EHsc\n+        # Enable warnings and warnings as errors\n+        /W3\n+        /WX\n+        # Disable RTTI\n+        $<$<COMPILE_LANGUAGE:CXX>:/GR->\n+        # Use /O2 (Maximize Speed)\n+        $<$<CONFIG:RELEASE>:/O2>)\n+else()\n+    add_compile_options(\n+        -fno-omit-frame-pointer\n+        -fexceptions\n+        -fvisibility=hidden\n+        -ffunction-sections\n+        -fdata-sections\n+        -Wall\n+        -std=c++11)\n+endif()\n+\n+set(SOURCES YGInterop.cpp)\n+\n+if (MSVC)\n+    list(APPEND SOURCES Yoga.rc)\n+endif()\n+\n+file(GLOB yogajni_version_script\n+        yogajni.version)\n+\n+add_library(yoga SHARED ${SOURCES})\n+\n+target_include_directories(yoga PRIVATE\n+    ${yogacore_DIR})\n+\n+target_link_libraries(yoga yogacore)\n+\n+if (NOT MSVC)\n+    target_link_libraries(yoga -Wl,--gc-sections)",
        "comment_created_at": "2023-01-07T04:20:17+00:00",
        "comment_author": "NickGerleman",
        "comment_body": "AppleClang uses `--dead_strip` instead of `--gc-sections`. So I think this will cause the iOS build to fail.\r\n\r\n```suggestion\r\n    target_link_options(yoga PRIVATE\r\n    # Discard unused sections\r\n    $<$<CONFIG:RELEASE>:$<$<CXX_COMPILER_ID:Clang,GNU>:-Wl,--gc-sections>>\r\n    $<$<CONFIG:RELEASE>:$<$<CXX_COMPILER_ID:AppleClang>:-Wl,-dead_strip>>)\r\n```",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1063958237",
    "pr_number": 1207,
    "pr_file": "csharp/Yoga/CMakeLists.txt",
    "created_at": "2023-01-07T05:52:01+00:00",
    "commented_code": "+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+cmake_minimum_required(VERSION 3.14)\n+\n+project(yoga)\n+\n+set(CMAKE_VERBOSE_MAKEFILE on)\n+",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "1063958237",
        "repo_full_name": "facebook/yoga",
        "pr_number": 1207,
        "pr_file": "csharp/Yoga/CMakeLists.txt",
        "discussion_id": "1063958237",
        "commented_code": "@@ -0,0 +1,70 @@\n+# Copyright (c) Meta Platforms, Inc. and affiliates.\n+#\n+# This source code is licensed under the MIT license found in the\n+# LICENSE file in the root directory of this source tree.\n+\n+cmake_minimum_required(VERSION 3.14)\n+\n+project(yoga)\n+\n+set(CMAKE_VERBOSE_MAKEFILE on)\n+",
        "comment_created_at": "2023-01-07T05:52:01+00:00",
        "comment_author": "NickGerleman",
        "comment_body": "```suggestion\r\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\r\n\r\n```",
        "pr_file_module": null
      }
    ]
  }
]