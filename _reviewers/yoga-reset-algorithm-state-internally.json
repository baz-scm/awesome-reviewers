[
  {
    "discussion_id": "41103798",
    "pr_number": 138,
    "pr_file": "src/Layout.js",
    "created_at": "2015-10-04T23:00:31+00:00",
    "commented_code": "child.nextAbsoluteChild = null;\n     }\n   }\n+  \n+  function layoutNode(node, parentMaxWidth, parentDirection) {\n+    node.shouldUpdate = true;\n+    \n+    var direction = node.style.direction || CSS_DIRECTION_LTR;\n+    var skipLayout = \n+      !node.isDirty &&\n+      node.lastLayout &&\n+      node.lastLayout.requestedHeight === node.layout.height &&\n+      node.lastLayout.requestedWidth === node.layout.width &&\n+      node.lastLayout.parentMaxWidth === parentMaxWidth &&\n+      node.lastLayout.direction === direction;\n+      \n+    if (skipLayout) {\n+      node.layout.width = node.lastLayout.width;\n+      node.layout.height = node.lastLayout.height;\n+      node.layout.top = node.lastLayout.top;\n+      node.layout.left = node.lastLayout.left;\n+    } else {\n+      if (!node.lastLayout) {\n+        node.lastLayout = {};\n+      }\n+      \n+      node.lastLayout.requestedWidth = node.layout.width;\n+      node.lastLayout.requestedHeight = node.layout.height;\n+      node.lastLayout.parentMaxWidth = parentMaxWidth;\n+      node.lastLayout.direction = direction;\n+      \n+      // Reset child layouts",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "41103798",
        "repo_full_name": "facebook/yoga",
        "pr_number": 138,
        "pr_file": "src/Layout.js",
        "discussion_id": "41103798",
        "commented_code": "@@ -1122,8 +1122,53 @@ var computeLayout = (function() {\n       child.nextAbsoluteChild = null;\n     }\n   }\n+  \n+  function layoutNode(node, parentMaxWidth, parentDirection) {\n+    node.shouldUpdate = true;\n+    \n+    var direction = node.style.direction || CSS_DIRECTION_LTR;\n+    var skipLayout = \n+      !node.isDirty &&\n+      node.lastLayout &&\n+      node.lastLayout.requestedHeight === node.layout.height &&\n+      node.lastLayout.requestedWidth === node.layout.width &&\n+      node.lastLayout.parentMaxWidth === parentMaxWidth &&\n+      node.lastLayout.direction === direction;\n+      \n+    if (skipLayout) {\n+      node.layout.width = node.lastLayout.width;\n+      node.layout.height = node.lastLayout.height;\n+      node.layout.top = node.lastLayout.top;\n+      node.layout.left = node.lastLayout.left;\n+    } else {\n+      if (!node.lastLayout) {\n+        node.lastLayout = {};\n+      }\n+      \n+      node.lastLayout.requestedWidth = node.layout.width;\n+      node.lastLayout.requestedHeight = node.layout.height;\n+      node.lastLayout.parentMaxWidth = parentMaxWidth;\n+      node.lastLayout.direction = direction;\n+      \n+      // Reset child layouts",
        "comment_created_at": "2015-10-04T23:00:31+00:00",
        "comment_author": "devongovett",
        "comment_body": "Isn't it expected that all children of a node not have layout properties defined prior to processing that node? `layoutNodeImpl` seems to assume so. Without resetting, some [isUndefined checks](https://github.com/devongovett/css-layout/blob/js-caching/src/Layout.js#L718) might fail where they shouldn't, and the position of a node [is added](https://github.com/devongovett/css-layout/blob/js-caching/src/Layout.js#L457-L464) to it's position from the previous layout pass. I think all children have to be reset. The C version just does this after a layout pass instead of before the next one.\n",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "41103893",
    "pr_number": 138,
    "pr_file": "src/Layout.js",
    "created_at": "2015-10-04T23:07:34+00:00",
    "commented_code": "child.nextAbsoluteChild = null;\n     }\n   }\n+  \n+  function layoutNode(node, parentMaxWidth, parentDirection) {\n+    node.shouldUpdate = true;\n+    \n+    var direction = node.style.direction || CSS_DIRECTION_LTR;\n+    var skipLayout = \n+      !node.isDirty &&\n+      node.lastLayout &&\n+      node.lastLayout.requestedHeight === node.layout.height &&\n+      node.lastLayout.requestedWidth === node.layout.width &&\n+      node.lastLayout.parentMaxWidth === parentMaxWidth &&\n+      node.lastLayout.direction === direction;\n+      \n+    if (skipLayout) {\n+      node.layout.width = node.lastLayout.width;\n+      node.layout.height = node.lastLayout.height;\n+      node.layout.top = node.lastLayout.top;\n+      node.layout.left = node.lastLayout.left;\n+    } else {\n+      if (!node.lastLayout) {\n+        node.lastLayout = {};\n+      }\n+      \n+      node.lastLayout.requestedWidth = node.layout.width;\n+      node.lastLayout.requestedHeight = node.layout.height;\n+      node.lastLayout.parentMaxWidth = parentMaxWidth;\n+      node.lastLayout.direction = direction;\n+      \n+      // Reset child layouts",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "41103893",
        "repo_full_name": "facebook/yoga",
        "pr_number": 138,
        "pr_file": "src/Layout.js",
        "discussion_id": "41103893",
        "commented_code": "@@ -1122,8 +1122,53 @@ var computeLayout = (function() {\n       child.nextAbsoluteChild = null;\n     }\n   }\n+  \n+  function layoutNode(node, parentMaxWidth, parentDirection) {\n+    node.shouldUpdate = true;\n+    \n+    var direction = node.style.direction || CSS_DIRECTION_LTR;\n+    var skipLayout = \n+      !node.isDirty &&\n+      node.lastLayout &&\n+      node.lastLayout.requestedHeight === node.layout.height &&\n+      node.lastLayout.requestedWidth === node.layout.width &&\n+      node.lastLayout.parentMaxWidth === parentMaxWidth &&\n+      node.lastLayout.direction === direction;\n+      \n+    if (skipLayout) {\n+      node.layout.width = node.lastLayout.width;\n+      node.layout.height = node.lastLayout.height;\n+      node.layout.top = node.lastLayout.top;\n+      node.layout.left = node.lastLayout.left;\n+    } else {\n+      if (!node.lastLayout) {\n+        node.lastLayout = {};\n+      }\n+      \n+      node.lastLayout.requestedWidth = node.layout.width;\n+      node.lastLayout.requestedHeight = node.layout.height;\n+      node.lastLayout.parentMaxWidth = parentMaxWidth;\n+      node.lastLayout.direction = direction;\n+      \n+      // Reset child layouts",
        "comment_created_at": "2015-10-04T23:07:34+00:00",
        "comment_author": "vjeux",
        "comment_body": "You are right, it doesn't matter much indeed if we do it before the beginning or after the end. It's probably better to do it inside of the layout algorithm this way the callsite doesn't have to care and possibly introduce bugs.\n",
        "pr_file_module": null
      }
    ]
  }
]