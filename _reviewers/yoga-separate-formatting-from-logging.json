[
  {
    "discussion_id": "105879393",
    "pr_number": 479,
    "pr_file": "yoga/YGEnumsPrint.h",
    "created_at": "2017-03-14T11:09:04+00:00",
    "commented_code": "+/**\n+ * Copyright (c) 2014-present, Facebook, Inc.\n+ * All rights reserved.\n+ *\n+ * This source code is licensed under the BSD-style license found in the\n+ * LICENSE file in the root directory of this source tree. An additional grant\n+ * of patent rights can be found in the PATENTS file in the same directory.\n+ */\n+\n+#pragma once\n+\n+#include \"YGMacros.h\"\n+#include \"Yoga.h\"\n+\n+YG_EXTERN_C_BEGIN\n+\n+void YGLogAlign(YGLogLevel logLevel, const char * param, YGAlign value){\n+  char * text = \"undefined\";\n+  switch(value){\n+    case YGAlignAuto:\n+      text = \"auto\";\n+      break;\n+    case YGAlignFlexStart:\n+      text = \"flex-start\";\n+      break;\n+    case YGAlignCenter:\n+      text = \"center\";\n+      break;\n+    case YGAlignFlexEnd:\n+      text = \"flex-end\";\n+      break;\n+    case YGAlignStretch:\n+      text = \"stretch\";\n+      break;\n+    case YGAlignBaseline:\n+      text = \"baseline\";\n+      break;\n+    case YGAlignSpaceBetween:\n+      text = \"space-between\";\n+      break;\n+    case YGAlignSpaceAround:\n+      text = \"space-around\";\n+      break;\n+  }\n+  if(param == NULL) {\n+    YGLog(logLevel, text);",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "105879393",
        "repo_full_name": "facebook/yoga",
        "pr_number": 479,
        "pr_file": "yoga/YGEnumsPrint.h",
        "discussion_id": "105879393",
        "commented_code": "@@ -0,0 +1,359 @@\n+/**\n+ * Copyright (c) 2014-present, Facebook, Inc.\n+ * All rights reserved.\n+ *\n+ * This source code is licensed under the BSD-style license found in the\n+ * LICENSE file in the root directory of this source tree. An additional grant\n+ * of patent rights can be found in the PATENTS file in the same directory.\n+ */\n+\n+#pragma once\n+\n+#include \"YGMacros.h\"\n+#include \"Yoga.h\"\n+\n+YG_EXTERN_C_BEGIN\n+\n+void YGLogAlign(YGLogLevel logLevel, const char * param, YGAlign value){\n+  char * text = \"undefined\";\n+  switch(value){\n+    case YGAlignAuto:\n+      text = \"auto\";\n+      break;\n+    case YGAlignFlexStart:\n+      text = \"flex-start\";\n+      break;\n+    case YGAlignCenter:\n+      text = \"center\";\n+      break;\n+    case YGAlignFlexEnd:\n+      text = \"flex-end\";\n+      break;\n+    case YGAlignStretch:\n+      text = \"stretch\";\n+      break;\n+    case YGAlignBaseline:\n+      text = \"baseline\";\n+      break;\n+    case YGAlignSpaceBetween:\n+      text = \"space-between\";\n+      break;\n+    case YGAlignSpaceAround:\n+      text = \"space-around\";\n+      break;\n+  }\n+  if(param == NULL) {\n+    YGLog(logLevel, text);",
        "comment_created_at": "2017-03-14T11:09:04+00:00",
        "comment_author": "emilsjolander",
        "comment_body": "I would rather the functions in this file not return log but instead return a statically allocated string which is logged by the caller.",
        "pr_file_module": null
      },
      {
        "comment_id": "105884848",
        "repo_full_name": "facebook/yoga",
        "pr_number": 479,
        "pr_file": "yoga/YGEnumsPrint.h",
        "discussion_id": "105879393",
        "commented_code": "@@ -0,0 +1,359 @@\n+/**\n+ * Copyright (c) 2014-present, Facebook, Inc.\n+ * All rights reserved.\n+ *\n+ * This source code is licensed under the BSD-style license found in the\n+ * LICENSE file in the root directory of this source tree. An additional grant\n+ * of patent rights can be found in the PATENTS file in the same directory.\n+ */\n+\n+#pragma once\n+\n+#include \"YGMacros.h\"\n+#include \"Yoga.h\"\n+\n+YG_EXTERN_C_BEGIN\n+\n+void YGLogAlign(YGLogLevel logLevel, const char * param, YGAlign value){\n+  char * text = \"undefined\";\n+  switch(value){\n+    case YGAlignAuto:\n+      text = \"auto\";\n+      break;\n+    case YGAlignFlexStart:\n+      text = \"flex-start\";\n+      break;\n+    case YGAlignCenter:\n+      text = \"center\";\n+      break;\n+    case YGAlignFlexEnd:\n+      text = \"flex-end\";\n+      break;\n+    case YGAlignStretch:\n+      text = \"stretch\";\n+      break;\n+    case YGAlignBaseline:\n+      text = \"baseline\";\n+      break;\n+    case YGAlignSpaceBetween:\n+      text = \"space-between\";\n+      break;\n+    case YGAlignSpaceAround:\n+      text = \"space-around\";\n+      break;\n+  }\n+  if(param == NULL) {\n+    YGLog(logLevel, text);",
        "comment_created_at": "2017-03-14T11:40:58+00:00",
        "comment_author": "woehrl01",
        "comment_body": "I also thought of this, but this makes the callside a bit more boilerplate, not sure if we want this.",
        "pr_file_module": null
      },
      {
        "comment_id": "105891043",
        "repo_full_name": "facebook/yoga",
        "pr_number": 479,
        "pr_file": "yoga/YGEnumsPrint.h",
        "discussion_id": "105879393",
        "commented_code": "@@ -0,0 +1,359 @@\n+/**\n+ * Copyright (c) 2014-present, Facebook, Inc.\n+ * All rights reserved.\n+ *\n+ * This source code is licensed under the BSD-style license found in the\n+ * LICENSE file in the root directory of this source tree. An additional grant\n+ * of patent rights can be found in the PATENTS file in the same directory.\n+ */\n+\n+#pragma once\n+\n+#include \"YGMacros.h\"\n+#include \"Yoga.h\"\n+\n+YG_EXTERN_C_BEGIN\n+\n+void YGLogAlign(YGLogLevel logLevel, const char * param, YGAlign value){\n+  char * text = \"undefined\";\n+  switch(value){\n+    case YGAlignAuto:\n+      text = \"auto\";\n+      break;\n+    case YGAlignFlexStart:\n+      text = \"flex-start\";\n+      break;\n+    case YGAlignCenter:\n+      text = \"center\";\n+      break;\n+    case YGAlignFlexEnd:\n+      text = \"flex-end\";\n+      break;\n+    case YGAlignStretch:\n+      text = \"stretch\";\n+      break;\n+    case YGAlignBaseline:\n+      text = \"baseline\";\n+      break;\n+    case YGAlignSpaceBetween:\n+      text = \"space-between\";\n+      break;\n+    case YGAlignSpaceAround:\n+      text = \"space-around\";\n+      break;\n+  }\n+  if(param == NULL) {\n+    YGLog(logLevel, text);",
        "comment_created_at": "2017-03-14T12:17:05+00:00",
        "comment_author": "emilsjolander",
        "comment_body": "Could you give it a try? I think it might be worth it. You can always abstract if if(param == null) part into another function.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "113567663",
    "pr_number": 531,
    "pr_file": "yoga/Yoga.h",
    "created_at": "2017-04-26T21:30:18+00:00",
    "commented_code": "YG_NODE_LAYOUT_EDGE_PROPERTY(float, Padding);\n \n WIN_EXPORT void YGSetLogger(YGLogger logger);\n-WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLog(const YGNodeRef node, YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLogWithConfig(const YGConfigRef config, YGLogLevel level, const char *format, ...);",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "113567663",
        "repo_full_name": "facebook/yoga",
        "pr_number": 531,
        "pr_file": "yoga/Yoga.h",
        "discussion_id": "113567663",
        "commented_code": "@@ -219,7 +219,8 @@ YG_NODE_LAYOUT_EDGE_PROPERTY(float, Border);\n YG_NODE_LAYOUT_EDGE_PROPERTY(float, Padding);\n \n WIN_EXPORT void YGSetLogger(YGLogger logger);\n-WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLog(const YGNodeRef node, YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLogWithConfig(const YGConfigRef config, YGLogLevel level, const char *format, ...);",
        "comment_created_at": "2017-04-26T21:30:18+00:00",
        "comment_author": "emilsjolander",
        "comment_body": "let's skip this until we feel the need for it. jsut use YGLog and pass a NULL node. Thoughts?",
        "pr_file_module": null
      },
      {
        "comment_id": "113568732",
        "repo_full_name": "facebook/yoga",
        "pr_number": 531,
        "pr_file": "yoga/Yoga.h",
        "discussion_id": "113567663",
        "commented_code": "@@ -219,7 +219,8 @@ YG_NODE_LAYOUT_EDGE_PROPERTY(float, Border);\n YG_NODE_LAYOUT_EDGE_PROPERTY(float, Padding);\n \n WIN_EXPORT void YGSetLogger(YGLogger logger);\n-WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLog(const YGNodeRef node, YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLogWithConfig(const YGConfigRef config, YGLogLevel level, const char *format, ...);",
        "comment_created_at": "2017-04-26T21:35:08+00:00",
        "comment_author": "woehrl01",
        "comment_body": "`YGLogWithConfig` is required for the places were we don't have a node, just a config, e.g. `YGNodeNewWithConfig` and `YGConfigSetPointScaleFactor`",
        "pr_file_module": null
      },
      {
        "comment_id": "113569496",
        "repo_full_name": "facebook/yoga",
        "pr_number": 531,
        "pr_file": "yoga/Yoga.h",
        "discussion_id": "113567663",
        "commented_code": "@@ -219,7 +219,8 @@ YG_NODE_LAYOUT_EDGE_PROPERTY(float, Border);\n YG_NODE_LAYOUT_EDGE_PROPERTY(float, Padding);\n \n WIN_EXPORT void YGSetLogger(YGLogger logger);\n-WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLog(const YGNodeRef node, YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLogWithConfig(const YGConfigRef config, YGLogLevel level, const char *format, ...);",
        "comment_created_at": "2017-04-26T21:38:55+00:00",
        "comment_author": "emilsjolander",
        "comment_body": "Yeah what I mean is that let's just pass NULL as the node in those places. Passing the config isn't super useful as configs are usually statically allocated and don't have info in them like a node does.",
        "pr_file_module": null
      },
      {
        "comment_id": "113569694",
        "repo_full_name": "facebook/yoga",
        "pr_number": 531,
        "pr_file": "yoga/Yoga.h",
        "discussion_id": "113567663",
        "commented_code": "@@ -219,7 +219,8 @@ YG_NODE_LAYOUT_EDGE_PROPERTY(float, Border);\n YG_NODE_LAYOUT_EDGE_PROPERTY(float, Padding);\n \n WIN_EXPORT void YGSetLogger(YGLogger logger);\n-WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLog(const YGNodeRef node, YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLogWithConfig(const YGConfigRef config, YGLogLevel level, const char *format, ...);",
        "comment_created_at": "2017-04-26T21:40:08+00:00",
        "comment_author": "woehrl01",
        "comment_body": "But we could at least declare this only inside `Yoga.c` ? ",
        "pr_file_module": null
      },
      {
        "comment_id": "113570192",
        "repo_full_name": "facebook/yoga",
        "pr_number": 531,
        "pr_file": "yoga/Yoga.h",
        "discussion_id": "113567663",
        "commented_code": "@@ -219,7 +219,8 @@ YG_NODE_LAYOUT_EDGE_PROPERTY(float, Border);\n YG_NODE_LAYOUT_EDGE_PROPERTY(float, Padding);\n \n WIN_EXPORT void YGSetLogger(YGLogger logger);\n-WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLog(const YGNodeRef node, YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLogWithConfig(const YGConfigRef config, YGLogLevel level, const char *format, ...);",
        "comment_created_at": "2017-04-26T21:42:53+00:00",
        "comment_author": "woehrl01",
        "comment_body": "Oh, we actually pass `NULL`, `YGConfigRef` is only used to call the correct logger \ud83d\udc4d ",
        "pr_file_module": null
      },
      {
        "comment_id": "113570205",
        "repo_full_name": "facebook/yoga",
        "pr_number": 531,
        "pr_file": "yoga/Yoga.h",
        "discussion_id": "113567663",
        "commented_code": "@@ -219,7 +219,8 @@ YG_NODE_LAYOUT_EDGE_PROPERTY(float, Border);\n YG_NODE_LAYOUT_EDGE_PROPERTY(float, Padding);\n \n WIN_EXPORT void YGSetLogger(YGLogger logger);\n-WIN_EXPORT void YGLog(YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLog(const YGNodeRef node, YGLogLevel level, const char *message, ...);\n+WIN_EXPORT void YGLogWithConfig(const YGConfigRef config, YGLogLevel level, const char *format, ...);",
        "comment_created_at": "2017-04-26T21:42:57+00:00",
        "comment_author": "emilsjolander",
        "comment_body": "Actually no let's keep it. I was confusing it with the actual logger function. don't mind me :p You are right \ud83d\udc4d ",
        "pr_file_module": null
      }
    ]
  }
]