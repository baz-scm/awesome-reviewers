[
  {
    "discussion_id": "1425448949",
    "pr_number": 1498,
    "pr_file": "gentest/gentest-driver.ts",
    "created_at": "2023-12-13T14:37:09+00:00",
    "commented_code": "+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow strict-local\n+ * @format\n+ */\n+\n+import * as fs from 'node:fs/promises';\n+import {format} from 'node:util';\n+import * as path from 'path';\n+import * as process from 'node:process';\n+import {Builder, logging} from 'selenium-webdriver';\n+import {Options} from 'selenium-webdriver/chrome.js';\n+\n+await (async () => {\n+  const options = new Options();\n+  options.addArguments(\n+    '--force-device-scale-factor=1',\n+    '--window-position=0,0',\n+    '--hide-scrollbars',\n+  );\n+  options.setLoggingPrefs({\n+    browser: 'ALL',\n+    performance: 'ALL',\n+  });\n+  const driver = await new Builder()\n+    .forBrowser('chrome')\n+    .setChromeOptions(options)\n+    .build();\n+\n+  process.chdir(path.dirname(process.argv[1]));\n+\n+  const fixtures = await fs.readdir('./fixtures');\n+  for (const fileName of fixtures) {\n+    const fixture = await fs.readFile('fixtures/' + fileName, 'utf8');\n+    const fileNameNoExtension = path.parse(fileName).name;\n+    console.log('Generate', fileNameNoExtension);\n+\n+    // TODO: replace this with something more robust than just blindly replacing\n+    // start/end in the entire fixture",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "1425448949",
        "repo_full_name": "facebook/yoga",
        "pr_number": 1498,
        "pr_file": "gentest/gentest-driver.ts",
        "discussion_id": "1425448949",
        "commented_code": "@@ -0,0 +1,89 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow strict-local\n+ * @format\n+ */\n+\n+import * as fs from 'node:fs/promises';\n+import {format} from 'node:util';\n+import * as path from 'path';\n+import * as process from 'node:process';\n+import {Builder, logging} from 'selenium-webdriver';\n+import {Options} from 'selenium-webdriver/chrome.js';\n+\n+await (async () => {\n+  const options = new Options();\n+  options.addArguments(\n+    '--force-device-scale-factor=1',\n+    '--window-position=0,0',\n+    '--hide-scrollbars',\n+  );\n+  options.setLoggingPrefs({\n+    browser: 'ALL',\n+    performance: 'ALL',\n+  });\n+  const driver = await new Builder()\n+    .forBrowser('chrome')\n+    .setChromeOptions(options)\n+    .build();\n+\n+  process.chdir(path.dirname(process.argv[1]));\n+\n+  const fixtures = await fs.readdir('./fixtures');\n+  for (const fileName of fixtures) {\n+    const fixture = await fs.readFile('fixtures/' + fileName, 'utf8');\n+    const fileNameNoExtension = path.parse(fileName).name;\n+    console.log('Generate', fileNameNoExtension);\n+\n+    // TODO: replace this with something more robust than just blindly replacing\n+    // start/end in the entire fixture",
        "comment_created_at": "2023-12-13T14:37:09+00:00",
        "comment_author": "nicoburns",
        "comment_body": "Probably the fixtures should be changed to use `inset-inline-start` and `inset-inline-end` instead of left/right? I don't think those existed when these tests were created.",
        "pr_file_module": null
      },
      {
        "comment_id": "1425835810",
        "repo_full_name": "facebook/yoga",
        "pr_number": 1498,
        "pr_file": "gentest/gentest-driver.ts",
        "discussion_id": "1425448949",
        "commented_code": "@@ -0,0 +1,89 @@\n+/**\n+ * Copyright (c) Meta Platforms, Inc. and affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @flow strict-local\n+ * @format\n+ */\n+\n+import * as fs from 'node:fs/promises';\n+import {format} from 'node:util';\n+import * as path from 'path';\n+import * as process from 'node:process';\n+import {Builder, logging} from 'selenium-webdriver';\n+import {Options} from 'selenium-webdriver/chrome.js';\n+\n+await (async () => {\n+  const options = new Options();\n+  options.addArguments(\n+    '--force-device-scale-factor=1',\n+    '--window-position=0,0',\n+    '--hide-scrollbars',\n+  );\n+  options.setLoggingPrefs({\n+    browser: 'ALL',\n+    performance: 'ALL',\n+  });\n+  const driver = await new Builder()\n+    .forBrowser('chrome')\n+    .setChromeOptions(options)\n+    .build();\n+\n+  process.chdir(path.dirname(process.argv[1]));\n+\n+  const fixtures = await fs.readdir('./fixtures');\n+  for (const fileName of fixtures) {\n+    const fixture = await fs.readFile('fixtures/' + fileName, 'utf8');\n+    const fileNameNoExtension = path.parse(fileName).name;\n+    console.log('Generate', fileNameNoExtension);\n+\n+    // TODO: replace this with something more robust than just blindly replacing\n+    // start/end in the entire fixture",
        "comment_created_at": "2023-12-13T20:10:42+00:00",
        "comment_author": "joevilches",
        "comment_body": "There are the other things like `margin-start` etc. I think we need a pretty wholistic system to replace things like that",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "1120807560",
    "pr_number": 1233,
    "pr_file": "javascript/src_js/wrapAsm.d.ts",
    "created_at": "2023-02-28T21:35:56+00:00",
    "commented_code": "setHeightPercent(height: number): void,\n   setJustifyContent(justifyContent: Justify): void,\n   setGap(gutter: Gutter, gapLength: number): Value,\n-  setMargin(edge: Edge, margin: number): void,\n+  setMargin(edge: Edge, margin: number | string): void,",
    "repo_full_name": "facebook/yoga",
    "discussion_comments": [
      {
        "comment_id": "1120807560",
        "repo_full_name": "facebook/yoga",
        "pr_number": 1233,
        "pr_file": "javascript/src_js/wrapAsm.d.ts",
        "discussion_id": "1120807560",
        "commented_code": "@@ -135,7 +135,7 @@ export type Node = {\n   setHeightPercent(height: number): void,\n   setJustifyContent(justifyContent: Justify): void,\n   setGap(gutter: Gutter, gapLength: number): Value,\n-  setMargin(edge: Edge, margin: number): void,\n+  setMargin(edge: Edge, margin: number | string): void,",
        "comment_created_at": "2023-02-28T21:35:56+00:00",
        "comment_author": "NickGerleman",
        "comment_body": "This matches the other types here (converted from previous flowtype typings), but we could also replace this + others with a template literal type for better safety (added in TS 4.1, which is the oldest supported by DefinitelyTyped).\r\n\r\n```suggestion\r\n  setMargin(edge: Edge, margin: number | 'auto'  | `${number}%`): void,\r\n```",
        "pr_file_module": null
      }
    ]
  }
]