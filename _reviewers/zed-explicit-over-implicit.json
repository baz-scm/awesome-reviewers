[
  {
    "discussion_id": "2132355156",
    "pr_number": 32239,
    "pr_file": "crates/proto/proto/lsp.proto",
    "created_at": "2025-06-06T14:56:27+00:00",
    "commented_code": "}\n }\n \n+message ShowDocument {\n+    uint64 project_id = 1;\n+    string uri = 2;\n+    bool take_focus = 3;\n+    optional PointUtf16 selection_start = 4;\n+    optional PointUtf16 selection_end = 5;",
    "repo_full_name": "zed-industries/zed",
    "discussion_comments": [
      {
        "comment_id": "2132355156",
        "repo_full_name": "zed-industries/zed",
        "pr_number": 32239,
        "pr_file": "crates/proto/proto/lsp.proto",
        "discussion_id": "2132355156",
        "commented_code": "@@ -543,6 +543,14 @@ message UpdateLanguageServer {\n     }\n }\n \n+message ShowDocument {\n+    uint64 project_id = 1;\n+    string uri = 2;\n+    bool take_focus = 3;\n+    optional PointUtf16 selection_start = 4;\n+    optional PointUtf16 selection_end = 5;",
        "comment_created_at": "2025-06-06T14:56:27+00:00",
        "comment_author": "osiewicz",
        "comment_body": "I feel like `take_focus` and `selection_start`/`selection_end` don't make sense in RPC calls, as they can only be handled (reasonably) by the requesting side.\r\n\r\nWe should prolly return buffer_id from `ShowDocument` RPC call.",
        "pr_file_module": null
      }
    ]
  },
  {
    "discussion_id": "2011222323",
    "pr_number": 27407,
    "pr_file": "crates/extension_api/wit/since_v0.4.0/extension.wit",
    "created_at": "2025-03-25T03:14:43+00:00",
    "commented_code": "/// Returns the workspace configuration options to pass to the language server.\n     export language-server-workspace-configuration: func(language-server-id: string, worktree: borrow<worktree>) -> result<option<string>, string>;\n \n+    /// Returns the workspace configuration options to pass to the other language server.\n+    export additional-language-server-workspace-configuration: func(language-server-id: string, worktree: borrow<worktree>) -> result<option<string>, string>;",
    "repo_full_name": "zed-industries/zed",
    "discussion_comments": [
      {
        "comment_id": "2011222323",
        "repo_full_name": "zed-industries/zed",
        "pr_number": 27407,
        "pr_file": "crates/extension_api/wit/since_v0.4.0/extension.wit",
        "discussion_id": "2011222323",
        "commented_code": "@@ -95,6 +95,9 @@ world extension {\n     /// Returns the workspace configuration options to pass to the language server.\n     export language-server-workspace-configuration: func(language-server-id: string, worktree: borrow<worktree>) -> result<option<string>, string>;\n \n+    /// Returns the workspace configuration options to pass to the other language server.\n+    export additional-language-server-workspace-configuration: func(language-server-id: string, worktree: borrow<worktree>) -> result<option<string>, string>;",
        "comment_created_at": "2025-03-25T03:14:43+00:00",
        "comment_author": "maxdeviant",
        "comment_body": "Isn't it possible for this call to be ambiguous, as the implementer does not know which language server the additional configuration will be applied to?\r\n\r\nIn order for this API to be clear, I think we also need to be passing the language server ID of the _other_ language server that we're providing configuration for.",
        "pr_file_module": null
      },
      {
        "comment_id": "2011518537",
        "repo_full_name": "zed-industries/zed",
        "pr_number": 27407,
        "pr_file": "crates/extension_api/wit/since_v0.4.0/extension.wit",
        "discussion_id": "2011222323",
        "commented_code": "@@ -95,6 +95,9 @@ world extension {\n     /// Returns the workspace configuration options to pass to the language server.\n     export language-server-workspace-configuration: func(language-server-id: string, worktree: borrow<worktree>) -> result<option<string>, string>;\n \n+    /// Returns the workspace configuration options to pass to the other language server.\n+    export additional-language-server-workspace-configuration: func(language-server-id: string, worktree: borrow<worktree>) -> result<option<string>, string>;",
        "comment_created_at": "2025-03-25T08:00:06+00:00",
        "comment_author": "smitbarmase",
        "comment_body": "Sure, right now, the root keys of the JSON act like other language server IDs. But, providing another language server ID as a parameter makes API more clear, and then we can simply use match.",
        "pr_file_module": null
      }
    ]
  }
]